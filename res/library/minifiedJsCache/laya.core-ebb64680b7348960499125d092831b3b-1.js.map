{"version":3,"names":["ClassUtils","static","className","classDef","_classMap","compClass","getClass","console","warn","dummy","Config","isAntialias","useWebGL2","FPS","useRetinalCanvas","animationInterval","webGL2D_MeshAllocMaxMem","defaultFontSize","defaultFont","isAlpha","isDepth","isfailIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","isStencil","preserveDrawingBuffer","printWebglOrder","fontFamilyMap","fixedFrames","destroyResourceImmediatelyDefault","Const","ENUM_TEXTALIGN_DEFAULT","ENUM_TEXTALIGN_CENTER","ENUM_TEXTALIGN_RIGHT","BYTES_PE","BYTES_PIDX","MAX_CLIP_SIZE","NodeFlags","NOT_ACTIVE","ACTIVE_INHIERARCHY","AWAKED","NOT_READY","DISPLAY","HAS_ZORDER","HAS_MOUSE","DISPLAYED_INSTAGE","DRAWCALL_OPTIMIZE","PROCESS_COLLISIONS","PROCESS_TRIGGERS","HAS_SCRIPT","ESCAPE_DRAWING_TO_TEXTURE","DISABLE_INNER_CLIPPING","DISABLE_OUTER_CLIPPING","DISABLE_VISIBILITY","EDITING_NODE","HIDE_BY_EDITOR","LOCK_BY_EDITOR","HideFlags","HideInHierarchy","HideInInspector","DontSave","HideAndDontSave","ILaya","Loader","Context","Browser","Laya","loader","timer","systemTimer","physicsTimer","stage","LayaEnv","version","isPlaying","isPreview","isConch","window","conch","Pool","sign","_poolDic","length","item","POOLSIGN","getPoolBySign","push","instance","constructor","_$gid","recover","cla","_CLSID","cls","getItemByClass","_getClassSign","rst","pool","pop","createFun","caller","call","_gid","_pi","Math","PI","_pi2","Utils","angle","radian","color","isNaN","str","toString","value","indexOf","p1","p2","arr","substring","split","len","i","parseFloat","round","charAt","temp","parseInt","source","array","points","x","y","radix","result","path","lastIndexOf","ext","toLowerCase","j","k","ext2","newExt","excludeDot","Component","this","_hideFlags","_status","_enabled","_singleton","_id","getGID","_initialize","hideFlags","_extra","hasHideFlag","flag","id","enabled","owner","_setActive","activeInHierarchy","awaked","destroyed","_isScript","_resetComp","_enableState","_setOwner","node","_setBit","_onAdded","onAdded","_onAwake","_onEnable","onEnable","_onDisable","onDisable","_onDestroy","_parse","data","interactMap","_parseInteractive","spriteMap","_cloneTo","dest","runInEditor","onAwake","_a","_is3D","_scene","_componentDriver","add","setupScript","_b","remove","offAllCaller","destroy","_destroyComponent","_destroy","second","onDestroy","onReset","recoverByClass","_toDestroys","Matrix","a","b","c","d","tx","ty","nums","_bTransform","_createFun","_checkTransform","identity","setTranslate","translate","scale","rotate","cos","sin","a1","c1","tx1","skew","tanX","tan","tanY","b1","invertTransformPoint","out","d1","n","a2","b2","c2","d2","tx2","ty2","setTo","transformPoint","transformPointN","getScaleX","sqrt","getScaleY","invert","concat","matrix","m1","m2","aa","ab","ac","ad","atx","aty","ba","bb","bc","bd","btx","bty","scaleEx","rotateEx","clone","dec","create","copyTo","EMPTY","TEMP","Point","reset","distance","normalize","copy","point","Rectangle","width","height","right","bottom","copyFrom","contains","intersects","rect","intersection","max","min","union","addPoint","equals","_getBoundPoints","_temB","sp","_temA","pointList","minX","maxX","minY","maxY","tPoint","isEmpty","LayaGL","HDREncodeFormat","TextureFormat","Delegate","_flag","_items","callback","target","args","index","findIndex","once","splice","clear","forEach","clearForTarget","count","invoke","cnt","fixedArgs","Event","touchId","delta","button","touchPos","type","MOUSE_EVENTS","has","currentTarget","stopPropagation","_stopped","touches","_touches","altKey","nativeEvent","ctrlKey","shiftKey","metaKey","key","keyCode","charCode","code","keyLocation","location","stageX","stageY","MOUSE_DOWN","MOUSE_UP","RIGHT_MOUSE_DOWN","RIGHT_MOUSE_UP","CLICK","RIGHT_CLICK","MOUSE_MOVE","MOUSE_OVER","MOUSE_OUT","MOUSE_WHEEL","ROLL_OVER","ROLL_OUT","DOUBLE_CLICK","MOUSE_DRAG","MOUSE_DRAG_END","DRAG_START","DRAG_MOVE","DRAG_END","KEY_DOWN","KEY_PRESS","KEY_UP","CHANGE","CHANGED","WILL_RESIZE","RESIZE","ADDED","REMOVED","UNDISPLAY","ERROR","COMPLETE","LOADED","READY","PROGRESS","INPUT","RENDER","OPEN","MESSAGE","CLOSE","FRAME","ENTER","SELECT","BLUR","FOCUS","VISIBILITY_CHANGE","FOCUS_CHANGE","PLAYED","PAUSED","STOPPED","START","END","LINK","LABEL","FULL_SCREEN_CHANGE","DEVICE_LOST","TRANSFORM_CHANGED","LAYERCHANGE","staticMask","TRIGGER_ENTER","TRIGGER_STAY","TRIGGER_EXIT","COLLISION_ENTER","COLLISION_STAY","COLLISION_EXIT","JOINT_BREAK","Set","eventPool","EventDispatcher","onStartListeningToType","hasListener","listeners","_events","event","ret","Array","isArray","undefined","ev","on","listener","arguments","off","offAll","FilterMode","RenderCapable","_idCounter","_disposingCounter","_clearRetry","Resource","managed","super","_cpuMemory","_gpuMemory","_referenceCount","_destroyed","_idResourcesMap","lock","destroyedImmediately","cpuMemory","gpuMemory","size","cpuSize","gpuSize","loading","frameLoop","_destroyUnusedResources","force","destroyCnt","res","DEBUG","debug","obsolute","_obsolute","referenceCount","_setCPUMemory","offsetValue","_addCPUMemory","_setGPUMemory","_addGPUMemory","_setCreateURL","url","uuid","isCreateFromURL","endsWith","_addReference","_removeReference","_clearReference","_recoverResource","_disposeResource","_activeResource","Object","getPrototypeOf","name","clearRes","BaseTexture","format","_gammaSpace","_width","_height","_format","hdrEncodeFormat","NONE","dimension","_dimension","mipmap","_texture","mipmapCount","anisoLevel","filterMode","wrapModeU","wrapU","wrapModeV","wrapV","wrapModeW","wrapW","compareMode","textureContext","setTextureCompareMode","gammaCorrection","baseMipmapLevel","maxMipmapLevel","gammaSpace","useSRGBLoad","gpuCompressFormat","R8G8B8","R8G8B8A8","R16G16B16","R16G16B16A16","R32G32B32","R32G32B32A32","R5G6B5","Alpha8","DXT1","DXT3","DXT5","ETC1RGB","ETC2RGB","ETC2RGBA","ETC2SRGB_Alpha8","ETC2SRGB","PVRTCRGB_2BPPV","PVRTCRGBA_2BPPV","PVRTCRGB_4BPPV","PVRTCRGBA_4BPPV","ASTC4x4","ASTC4x4SRGB","ASTC6x6","ASTC6x6SRGB","ASTC8x8","ASTC8x8SRGB","ASTC10x10","ASTC10x10SRGB","ASTC12x12","ASTC12x12SRGB","_getFormatByteCount","_getSource","resource","defaultTexture","dispose","Byte","_xd_","_allocated_","_pos_","_length","_u8d_","Uint8Array","_d_","DataView","buffer","byteLength","_resizeBuffer","_sysEndian","ArrayBuffer","setInt16","Int16Array","LITTLE_ENDIAN","BIG_ENDIAN","rstBuffer","slice","endian","floor","newByteView","set","subarray","err","getString","readString","_rUTF","getUint16","getFloat32Array","start","readFloat32Array","end","v","Float32Array","getUint8Array","readUint8Array","getInt16Array","readInt16Array","getFloat32","readFloat32","getFloat64","readFloat64","writeFloat32","_ensureWrite","setFloat32","writeFloat64","setFloat64","getInt32","readInt32","float","getUint32","readUint32","writeInt32","setInt32","writeUint32","setUint32","getInt16","readInt16","us","readUint16","writeUint16","setUint16","writeInt16","getUint8","readUint8","writeUint8","setUint8","_getUInt8","pos","_readUInt8","_getUint16","_readUint16","_getMatrix","_readMatrix","f","String","fromCharCode","u","strs","_code","_offset","_lead","_trail","join","getCustomString","readCustomString","ulen","bytesAvailable","__getBuffer","writeUTFBytes","sz","charCodeAt","writeByte","Number","_p1","_p2","_b1","_b2","_b3","_b4","writeUTFString","tPos","dPos","writeUTFString32","readUTFString","readUTFBytes","readUTFString32","getUTFString","lastBytes","getUTFBytes","setInt8","readByte","getInt8","getByte","lengthToEnsure","writeArrayBuffer","arraybuffer","offset","uint8array","readArrayBuffer","HalfFloatUtils","e","_baseTable","_shiftTable","_mantissaTable","m","_exponentTable","_offsetTable","num","_floatView","_uint32View","float16bits","_buffer","Uint32Array","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","DDPF_LUMINANCE","DDSTextureInfo","isCube","bpp","blockBytes","dataOffset","compressed","sourceData","header","Int32Array","fourCC","isFourCC","isRGB","isLuminance","isCompressed","layaTexFormat","renderEngine","getCapable","COMPRESS_TEXTURE_S3TC","COMPRESS_TEXTURE_S3TC_SRGB","TextureDimension","GL_FORMAT_RGBA","GL_FORMAT_RGB","GL_DATATYPE_UNSIGNED_BYTE","KTXTextureInfo","compress","sRGB","bytesOfKeyValueData","headerOffset","glFormat","glInternalFormat","glType","glTypeSize","FileIdentifier","createKTX1Info","dataSize","BYTES_PER_ELEMENT","headerDataView","littleEndian","pixelWidth","pixelHeight","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","formatInfo","getLayaFormat","layaFormat","sRGBData","layaDemision","Tex2D","CubeArray","Cube","Texture2DArray","IdentifierByteSize","Texture2D","canRead","premultiplyAlpha","_canRead","createTextureInternal","pixels","grayTexture","setPixelsData","whiteTexture","blackTexture","TextureFormat_R16G16B16A16","floatPixle","Uint16Array","normalTexture","errorTexture","propertyParams","constructParams","pixelDataArrays","usePixelData","byte","texture","textureWidth","pixelDataLength","log","TextureFormat_R32G32B32A32","error","convertToNumber","imageSource","canread","srgb","pma","setImageData","setProperties","_nativeObj","_pixels","getImageData","canvas","context","drawImage","ddsInfo","getDDSTextureInfo","setDDSData","ktxInfo","getKTXTextureInfo","setKTXData","complete","load","TEXTURE2D","invertY","setTextureImageData","setTexturePixelsData","setSubPixelsData","xOffset","yOffset","mipmapLevel","generateMipmap","setTextureSubPixelsData","setTextureDDSData","setTextureKTXData","setHDRData","hdrInfo","setTextureHDRData","getPixels","Error","BaseShader","RenderState2D","mat","matArray","m4","EMPTYMAT4_ARRAY","TEMPMAT4_ARRAY","worldScissorTest","worldAlpha","RenderTargetFormat","RenderClearFlag","BlendFactor","_MAXSIZE","worldMatrix4","worldMatrix","matWVP","InvertY","Color","r","g","pow","equal","toFIxed","toLinear","gammaToLinearSpace","toGamma","linearToGammaSpace","cloneTo","destObject","destColor","setValue","fromArray","toArray","RED","GREEN","BLUE","CYAN","YELLOW","MAGENTA","GRAY","WHITE","BLACK","CLEAR","NativeRenderTexture2D","depthStencilFormat","DEPTH_16","_mgrKey","_colorFormat","_depthStencilFormat","_create","currentActive","_currentActive","getIsReady","sourceWidth","sourceHeight","offsetX","offsetY","samples","_start","_end","conchRenderTexture2D","_renderTarget","_textures","restore","getData","recycle","_clearColor","rtStack","defuv","flipyuv","RenderTexture2D","None","_invertY","_isCube","_samples","_generateMipmap","createRenderTargetInternal","rt","w","h","top","bindRenderTarget","bindoutScreenTarget","viewport","scissor","_lastRT","_lastWidth","_lastHeight","activeShader","unbindRenderTarget","clearRenderTexture","Depth","getRenderTextureData","_clearLinearColor","conchConfig","conchWebGL","WebGLRTMgr","dict","RenderStateContext","DepthTestCMD","createRenderStateComand","DepthMaskCMD","DepthFuncCMD","StencilTestCMD","StencilMaskCMD","StencilFuncCMD","stencilOpCMD","BlendCMD","BlendEquationCMD","BlendEquationSeparateCMD","BlendFuncCMD","BlendFuncSeperateCMD","CullFaceCMD","FrontFaceCMD","_GLRenderState","setDepthTest","setDepthMask","setDepthFunc","setStencilTest","setStencilMask","fun","ref","setStencilFunc","fail","zfail","zpass","setstencilOp","setBlend","blendEquation","setBlendEquation","blendEquationRGB","blendEquationAlpha","setBlendEquationSeparate","sFactor","dFactor","setBlendFunc","srcRGB","dstRGB","srcAlpha","dstAlpha","setBlendFuncSeperate","setCullFace","setFrontFace","stencilFuncArray","blendEquationSeparateArray","blenfunArray","blendFuncSeperateArray","stencilOpArray","BlendMode","fns","BlendNormal","BlendAdd","BlendMultiply","BlendScreen","BlendOverlay","BlendLight","BlendMask","BlendDestinationOut","BlendAddOld","targetFns","BlendNormalTarget","BlendAddTarget","BlendMultiplyTarget","BlendScreenTarget","BlendOverlayTarget","BlendLightTarget","BlendAddTargetOld","One","OneMinusSourceAlpha","DestinationAlpha","DestinationColor","OneMinusSourceColor","Zero","SourceAlpha","activeBlendFunction","NAMES","TOINT","normal","multiply","screen","overlay","light","mask","lighter","lighter_old","add_old","NORMAL","MASK","LIGHTER","ShaderDefinesBase","name2int","int2name","int2nameMap","_value","_name2int","_int2name","_int2nameMap","addInt","isDefine","def","getValue","toNameDic","_toText","o","names","words","ShaderDefines2D","__name2int","__int2name","__int2nameMap","reg","PRIMITIVE","FILTERGLOW","FILTERBLUR","FILTERCOLOR","COLORADD","WORLDMAT","FILLTEXTURE","MVP3D","GAMMASPACE","INVERTY","GAMMATEXTURE","_reg","_toInt","SKINMESH","NOOPTMASK","_rect1","_rect2","Texture","uv","uvrect","_w","_h","scaleRate","bitmap","outTexture","tex","btex","DEF_UV","dwidth","dheight","u1","v1","u2","v2","inAltasUVWidth","inAltasUVHeight","oriUV","moveUV","bitmapScale","texScaleRate","_uv","_bitmap","cb","recoverBitmap","Promise","resolve","then","bit","run","getTexturePixels","st","dst","tex2d","texw","texh","tex2dw","tex2dh","draww","drawh","marginL","marginT","rePosX","rePosY","wstride","pix","atlasPosX","atlasPosY","ctx","asBitmap","stu","stv","uk","vk","_drawTextureM","_targets","flush","dt","disposeBitmap","valid","getCachedClip","_clipCache","Map","get","createFromTexture","_sizeGrid","NO_UV","INV_UV","StringKey","_strsToID","_idToStrs","getID","getName","AssetDb","uuidMap","shaderNameMap","metaMap","UUID_to_URL","UUID_to_URL_async","URL_to_UUID_async","resolveURL","onResolve","startsWith","inst","shaderName_to_URL","shaderName","shaderName_to_URL_async","getMeta","getSubAssetURL","subAssetName","subAssetExt","replaceFileExtension","URL","_url","formatURL","_path","getPath","rootPath","basePath","protocol","host","pathname","overrideExtension","base","url2","char1","customFormat","ver","basePaths","hasExtOverrides","extold","getFileExtension","overrideFileExts","parts","ofs","originalExts","targetExt","IncludeFile","txt","codes","funs","curUseID","funnames","script","begin","splitToWords","substr","block","word","ofs2","useFuns","getWith","getFunsScript","funsdef","ShaderNode","includefiles","childs","text","z","setParent","parent","setCondition","condition","conditionType","replace","__condition","toscript","_toscript","__id","ifdef","__noCompileEnable","noCompile","funsCode","file","_clearCR","RegExp","_splitToWordExps3","ShaderCompile","fileName","allowReplace","includes","vs","ps","vsNode","psNode","includeNames","defs","_compileToTree","inc","_loadIncludesDeep","toLoad","includesCnt","map","tc","files","codeName","preNode","fname","lines","src","match","IFDEF_YES","IFDEF_ELSE","includeFile","includeName","loadIncludeFileSync","IFDEF_NO","IFDEF_PARENT","Shader","saveName","nameMap","bindAttrib","_attribInfo","_curActTexIndex","tag","_program","_params","_paramsMap","_count","_vs","_ps","_nameMap","sharders","recreateResource","_render2DContext","render2DContext","nameID","mainID","define","createShader","pre","_preCompileShader","SHADERNAME2ID","defMap","defineStr","addInclude","obj","compile","_compile","mainContext","deleteShader","_vshader","_pshader","deleteProgram","_reCompile","one","gl","createProgram","_createShader","VERTEX_SHADER","FRAGMENT_SHADER","attachShader","attribDescNum","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","nUniformNum","ACTIVE_UNIFORMS","uniform","getActiveUniform","vartype","glfun","ivartype","getUniformLocation","isSame","preValue","indexOfParams","codename","_this","uploadedValue","INT","_uniform1iv","_uniform1i","FLOAT","_uniform1fv","_uniform1f","FLOAT_VEC2","_uniform_vec2v","_uniform_vec2","FLOAT_VEC3","_uniform_vec3v","_uniform_vec3","FLOAT_VEC4","_uniform_vec4v","_uniform_vec4","SAMPLER_2D","_uniform_sampler2D","SAMPLER_CUBE","_uniform_samplerCube","FLOAT_MAT4","uniformMatrix4fv","_uniformMatrix4fv","BOOL","FLOAT_MAT2","FLOAT_MAT3","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniform","uniform1f","uniform1fv","uniform2f","uniform2fv","uniform3f","uniform3fv","uniform4f","uniform4fv","uniform1i","uniform1iv","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","uploadTexture2D","upload","shaderValue","params","bindShader","bindUseProgram","nameKey","Shader2X","_params2dQuick2","_shaderValueWidth","_shaderValueHeight","upload2dQuick2","_make2dQuick2","Value2D","subID","defines","alpha","ALPHA","_cacheID","clipMatDir","clipMatPos","clipOff","textureHost","colorAdd","u_mmat2","_inClassCache","_cache","classT","_typeClass","mainType","subType","types","_ShaderWithCompile","withCompile2D","_attribLocation","updateShaderData","renderstate2d","mmat","u_MvpMatrix","elements","returnGamma","textrueReadGamma","sd","setFilters","filters","action","release","SubmitKey","submitType","blendShader","other","copyFrom2","equal3_2","next","equal4_2","equal_3","SubmitCMD","_ref","_key","renderSubmit","apply","getRenderType","releaseRender","POOL","thisobj","Filter","COLOR","GLOW","_filter","sprite","webglctx","_next","save","setColorFilter","_fun","svCP","p","tMatrix","_curMat","tPadding","tHalfPadding","_cacheStyle","filterCache","getRepaint","_isHaveGlowFilter","getBounds","pivotX","pivotY","getSelfBounds","tSX","tSY","releaseRT","getRT","outRT","_getCacheStyle","pushRT","useRT","tX","tY","drawTarget","fil","_glRender","render","popRT","_drawRenderTexture","submit","s","addRenderObject","_COLOR_MAP","purple","orange","white","red","green","blue","black","yellow","gray","ColorUtils","arrColor","strColor","numColor","fromStringColor","toHexColor","_DEFAULT","_SAVE","_SAVE_SIZE","assign","_initSaveMap","_initDefault","DELTA_INDEX","GRAY_MATRIX","IDENTITY_MATRIX","ColorFilter","_copyMatrix","_mat","_alpha","setByMatrix","setColor","mt","_matrix","adjustColor","brightness","contrast","saturation","hue","adjustHue","adjustContrast","adjustBrightness","adjustSaturation","_clampValue","_multiplyMatrix","x1","x2","dx","col","_fixMatrix","val","limit","onAfterDeserialize","_color","_brightness","_contrast","_saturation","_hue","GrahamScan","p0","tempUse","_mPointList","getFrom","getFromR","pList","_getPoints","_tempPointList","_temPList","copyArray","pointListToPlist","scan","pListToPointList","PointSet","tmp","ch","_tmpDic","_temArr","dis","SpriteConst","RenderStatisticsInfo","RenderParams","BufferTargetType","BufferUsage","IndexFormat","TRANSFORM","BLEND","CANVAS","FILTERS","CLIP","STYLE","TEXTURE","GRAPHICS","LAYAGL3D","CUSTOM","ONECHILD","HITAREA","CHILDS","REPAINT_NONE","REPAINT_NODE","REPAINT_CACHE","REPAINT_ALL","_window","win","doc","_document","document","userAgent","navigator","maxTouchPoints","platform","wxMiniGame","enable","tbMiniGame","aliPayMiniGame","isWXMiMi","ttMiniGame","biliMiniGame","qqMiniGame","hwMiniGame","bdMiniGame","miMiniGame","qgMiniGame","vvMiniGame","trace","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","bodyStyle","body","style","margin","overflow","metas","getElementsByTagName","content","meta","createElement","appendChild","onMobile","onIOS","onIPhone","onMac","onIPad","onAndroid","onWP","onQQBrowser","onMQQBrowser","onIE","ActiveXObject","onWeiXin","onSafari","onChrome","onPC","onFirefox","onEdge","onMiniGame","onBDMiniGame","onLayaRuntime","onQGMiniGame","onQQMiniGame","onBLMiniGame","onTTMiniGame","onHWMiniGame","onVVMiniGame","onKGMiniGame","onAlipayMiniGame","onTBMiniGame","PLATFORM_ANDROID","PLATFORM_IOS","PLATFORM_PC","_isMiniGame","__init__","getElementById","ele","parentNode","removeChild","Date","now","clientWidth","_clientWidth","innerWidth","clientHeight","_clientHeight","innerHeight","documentElement","canvasRotation","pixelRatio","_pixelRatio","devicePixelRatio","container","_container","search","unescape","mainCanvas","hanzi","fontMap","measureText","font","isChinese","test","Stat","views","checkUI","hide","_show","_currentShowArray","AllShow","_statUI","show","loop","_currentToggleArray","showToggle","_timer","updateEngineData","delay","_fpsStr","renderSlow","update","trianglesFaces","getStatisticsInfo","Triangle","drawCall","DrawCall","instanceDrawCall","InstanceDrawCall","GPUMemory","textureMemory","TextureMemeory","renderTextureMemory","RenderTextureMemory","bufferMemory","BufferMemory","element","mode","clearStatisticsInfo","FPSStatUIParams","title","units","NodeStatUIParams","Sprite3DStatUIParams","TriangleFace","RenderNode","SkinRenderNode","ParticleRenderNode","FrustumCulling","UniformUpload","OpaqueDrawCall","TransDrawCall","DepthCastDrawCall","CMDDrawCall","BlitDrawCall","uploadUniformNum","memoryShow","renderShow","toogle_Shadow","toogle_MulLight","toogle_Light","toogle_Postprocess","toogle_AnimatorUpdate","toogle_PhysicsUpdate","toogle_Skin","toogle_Transparent","toogle_Particle","toogle_msaa","toogle_CameraCMD","toogle_Opaque","AllToggle","RenderModeToggle","RenderFuncToggle","loopCount","spriteRenderUseCacheCount","canvasNormal","canvasBitmap","canvasReCache","spriteCount","sprite3DCount","renderNode","skinRenderNode","particleRenderNode","frustumCulling","uniformUpload","opaqueDrawCall","transDrawCall","depthCastDrawCall","cmdDrawCall","blitDrawCall","uploadUniform","enableShadow","enableMulLight","enableLight","enableCameraCMD","enablePostprocess","enableSkin","enableTransparent","enableParticle","enableAnimatorUpdate","enablePhysicsUpdate","enablemsaa","enableOpaque","SubmitBase","renderType","TYPE_2D","clipInfoID","_mesh","_blendFn","_renderType","_parent","_startIdx","_numEle","ID","RENDERBASE","TYPE_CANVAS","TYPE_CMDSETRT","TYPE_CUSTOM","TYPE_BLURRT","TYPE_CMDDESTORYPRERT","TYPE_DISABLESTENCIL","TYPE_OTHERIBVB","TYPE_PRIMITIVE","TYPE_RT","TYPE_BLUR_RT","TYPE_TARGET","TYPE_CHANGE_VALUE","TYPE_SHAPE","TYPE_TEXTURE","TYPE_FILLTEXTURE","KEY_ONCE","KEY_FILLRECT","KEY_DRAWTEXTURE","KEY_VG","KEY_TRIANGLES","preRender","VertexElementFormat","_elementInfos","single","getParams","vector2","vector3","vector4","byte4","UNSIGNED_BYTE","byte3","byte2","short2","UNSIGNED_SHORT","short4","normalizedshort2","normalizedshort4","halfvector2","halfvector4","nbyte4","BYTE","info","Single","Vector2","Vector3","Vector4","Byte4","Byte3","Byte2","ByteOne","Short2","Short4","NormalizedShort2","NormalizedShort4","HalfVector2","HalfVector4","NorByte4","VertexDeclaration","vertexStride","vertexElements","_uniqueIDCounter","_vertexElementsDic","_vertexStride","_vertexElements","_shaderValues","vertexElement","_elementUsage","elmentInfo","getElementInfos","_elementFormat","vertexElementCount","getVertexElementByIndex","getVertexElementByUsage","usage","VertexElement","elementFormat","elementUsage","BufferState","_nativeVertexArrayObject","createVertexState","applyVertexBuffers","applyVertexBuffer","_vertexBuffers","applyIndexBuffers","applyIndexBuffer","_bindedIndexBuffer","applyState","vertexBuffers","indexBuffer","unbind","bind","unBind","bindVertexArray","_curBindedBufferState","unbindVertexArray","isbind","unbindVertexState","Buffer","targetType","bufferUsageType","_byteLength","_glBuffer","createBuffer","_bufferType","_bufferUsage","bufferUsage","bindBuffer","unbindBuffer","IndexBuffer","_indexType","UInt16","_setIndexData","bufferOffset","curBufSta","setDataLength","setData","RenderInfo","loopStTm","Buffer2D","_maxsize","_upload","_uploadSize","_bufferSize","_u8Array","constBuffer","bufferLength","setByteLength","needSize","old","needsz","_floatArray32","_bufferData","_checkArrayUse","buff","_uint32Array","_uint16Array","_bufferSubData","dataStart","dataLength","subBuffer","_bind_upload","_bind_subUpload","nsz","oldU8Arr","newbuffer","append","byteLen","appendU16Array","getBuffer","setNeedUpload","subUpload","scuess","FLOAT32","SHORT","IndexBuffer2D","Static","ELEMENT_ARRAY_BUFFER","buffer2D","_bindForVAO","destory","disposeResource","VertexBuffer","_instanceBuffer","_vertexDeclaration","vertexDeclaration","instanceBuffer","VertexBuffer2D","ARRAY_BUFFER","appendArray","oldoff","deleteBuffer","Dynamic","Mesh2D","stride","vballoc","iballoc","_stride","vertNum","indexNum","_applied","_quadNum","canReuse","_vb","_ib","createQuadIB","QuadNum","idx","curvert","setAttributes","attribs","configVAO","_vao","useMesh","releaseMesh","clearVB","_gvaoid","MeshQuadTexture","const_stride","_fixattriInfo","_fixib","_maxIB","VertexDeclarition","mainctx","_POOL","addQuad","useTex","vb","vpos","vbdata","vbu32Arr","cpos","useTexVal","MeshTexture","addData","vertices","uvs","rgba","ib","vertsz","f32pos","ci","m00","m01","m10","m11","vertN","stib","cidx","stibid","si","MeshVG","addVertAndIBToMesh","NativeWebGLCacheAsNormalCanvas","_context","_conchWebGLCacheAsNormalCanvas","startRec","endRec","isCacheValid","isTextNeedRestore","WebGLCacheAsNormalCanvas","submitStartPos","submitEndPos","submits","meshlist","cachedClipInfo","oldTx","oldTy","invMat","_globalClipMatrix","_charSubmitCache","_enable","_incache","_submits","curm","getAMesh","_pathMesh","_triangleMesh","_curSubmit","_oldMesh","_oldPathMesh","_oldTriMesh","_oldMeshList","parsubmits","curclip","textNeedRestore","charRIs","deleted","flushsubmit","curSubmit","subm","releaseMem","matI","LayaGLQuickRunner","alpha_transform_drawLayaGL","alpha_drawLayaGL","transform_drawLayaGL","transform_drawNodes","alpha_transform_drawTexture","alpha_drawTexture","transform_drawTexture","drawLayaGL_drawNodes","_style","saveTransform","curMat","transformByMatrix","transform","_isWidthSet","_isHeightSet","wRate","hRate","px","py","_getBit","drawTexture","restoreTransform","_needRepaint","globalAlpha","_graphics","_render","textLastRender","drawCallOptimize","drawingToTexture","_drawingToTexture","_children","left","_x","_y","visFlag","_visible","NativeFilter","drawTargetBlurFilter","strength","drawFilter","RenderSprite","NORENDER","_no","_transform","_blend","_canvas","_maskNative","_mask","_clip","_custom","_hitarea","_initRenderFun","onCreate","initRender","renders","_getTypeRender","tType","customRender","scrollRect","clipRect","hitArea","_hit","_unHit","y2","enableCanvasRender","cacheAs","cacheNeedRebuild","canv","isGlobalRepaint","_canvas_webgl_normal_repaint","_canvas_repaint","tRec","cacheRect","drawCanvas","scaleX","scaleY","scaleInfo","tCacheType","_calculateCacheRect","releaseContext","createContext","_applyFilters","staticCache","reCache","blendMode","globalCompositeOperation","preBlendMode","tRect","tmpRT","breakNextMerge","tmpTarget","shrink","getStyle","setBlendMode","recycleTarget","drawMask","drawMasked","drawMaskComposite","Bezier","_controlPoints","_calFun","getPoint2","_switchPoint","shift","t","p3","lineX","lineY","getPoint3","p4","insertPoints","dLen","getBezierPoints","inSertCount","BlendEquationSeparate","CullMode","RenderStateType","I","DrawStyle","_drawStyle","DEFAULT","toInt","toColorStr","Path","_lastOriX","_lastOriY","paths","_curPath","beginPath","convex","renderPath","closePath","newPath","pointX","pointY","rp","SaveBase","namemap","_namemap","TYPE_ALPHA","TYPE_FILESTYLE","TYPE_FONT","TYPE_LINEWIDTH","TYPE_STROKESTYLE","TYPE_ENABLEMERGE","TYPE_MARK","TYPE_TRANSFORM","TYPE_TRANSLATE","TYPE_TEXTBASELINE","TYPE_TEXTALIGN","TYPE_GLOBALCOMPOSITEOPERATION","TYPE_SHADER","TYPE_FILTERS","TYPE_COLORFILTER","isSaveMark","_dataObj","_valueName","_newSubmit","dataObj","newSubmit","_saveMark","_saveuse","cache","_save","TYPE_CLIPRECT","TYPE_CLIPRECT_STENCIL","TYPE_IBVB","TYPE_FILTERS_TYPE","_createArray","_init","SaveClipRect","_clipInfoID","_clipRect","incache","_clipInCache","SaveMark","_preSaveMark","no","SaveTransform","_savematrix","SaveTranslate","MeshTopology","WrapMode","texture_vs","texture_ps","prime_vs","prime_ps","skin_vs","skin_ps","Shader2D","shaderType","fillStyle","strokeStyle","preCompile2D","SkinMeshBuffer","addSkinMesh","skinMesh","getData2","BasePoly","indices","lineWidth","indexBase","outVertex","tempData","newlen","abs","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","denom","dist","outvb","vbstride","outib","ptlen","dy","pointnum","tmpData","realPtNum","EarcutNode","prev","prevZ","nextZ","steiner","Earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","triangles","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","again","area","ear","pass","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","filterPoints","pointInTriangle","minTX","minTY","maxTX","maxTY","minZ","zOrder","maxZ","locallyInside","isValidDiagonal","splitPolygon","list","queue","getLeftmost","sort","compareX","eliminateHole","hole","findHoleBridge","hx","hy","qx","Infinity","mx","my","tanMin","sortLinked","q","tail","numMerges","pSize","qSize","inSize","leftmost","ax","ay","bx","by","cx","cy","intersectsPolygon","middleInside","q1","q2","inside","an","bp","sum","Submit","_tex","renderDrawContext","drawElements2DTemp","Triangles","_poolSize","mesh","sv","blendType","_nBlendType","_shader2D","numEle","SubmitCanvas","_matrix4","preAlpha","preMatrix4","preMatrix","preFilters","worldFilters","preWorldShaderDefines","worldShaderDefines","mout","mul","SubmitTarget","srcRT","blend","_colorFiler","ft","colorMat","colorAlpha","SubmitTexture","lastSubmit","prekey","CharSubmitCache","_data","_ndata","_clipid","_clipMatrix","_imgId","imgid","getPos","__nPosPool","__posPool","colorFiler","_copyClipInfo","_drawCount","AtlasGrid","atlasID","_texCount","_rowInfo","_cells","_used","addRect","pt","_get","_fill","_release","_clear","rx","ry","nWidth","nHeight","pCellBox","tm","xx","nHeghit","_check","yy","TextTexture","textureW","textureH","_texW","_texH","_discardTm","genID","_glTexture","curUsedCovRate","curUsedCovRateAtlas","lastTouchTm","ri","TextRender","atlasWidth","_source","glTex","Bilinear","Clamp","debugUV","fillWhite","addChar","isWan1Wan","addCharCanvas","u0","v0","Uint8ClampedArray","setTextureSubImageData","fill","discard","setGlobalRepaint","curtm","cleanTm","checkCleanTextureDt","poolLen","destroyUnusedTextureDt","touchRect","curloop","texw2","gridw2","TextAtlas","atlasGridW","bmpWidth","bmpHeight","ceil","drawOnScreen","texWidth","texHeight","charMaps","getTextTexture","atlasgrid","setProtecteDist","getAEmpty","find","usedRate","printDebugInfo","FontInfo","_family","_size","_italic","_bold","setFont","_lastFont","_lastFontInfo","_font","l","szpos","fpos","familys","CONTEXT2D_FUNCTION_ID","WordText","pagecharsCtx","_conchWordText","pageChars","scalex","scaley","setText","_text","cleanCache","chars","splitRender","_splitRender","CharRenderInfo","char","orix","oriy","touchTick","isSpace","touch","curLoop","ICharRender","fontsz","getWidth","sx","sy","canvasWidth","getCharBmp","colStr","strokeColStr","margin_left","margin_top","margin_right","margin_bottom","CharRender_Canvas","maxw","maxh","scalefont","useImageData","showdbg","lastScaleX","lastScaleY","maxTexW","maxTexH","scaleFontSize","showDbgInfo","supportImageData","position","getContext","willReadFrequently","setTransform","cri","getCharCanvas","clearW","clearH","clearRect","textBaseline","lineJoin","strokeText","fillText","strokeRect","imgdt","textAlign","fillAndStrokeText","CharRender_Native","lastFont","conchTextCanvas","nStrokeColor","nTextColor","textInfo","getTextBitmapData","fontSizeInfo","mapFont","fontID","fontScaleX","fontScaleY","_curStrPos","textAtlases","isoTextures","fontSizeW","fontSizeH","fontSizeOffX","fontSizeOffY","renderPerChar","tmpAtlasPos","textureMem","bugIOS","miniadp","systemInfo","system","charRender","scaleFontWithCtx","textRenderInst","atlasWidth2","getFontSizeInfo","offx","offy","fw","fh","standardFontSize","fontStr","getNextChar","state","filltext","strokeColor","parse","nTextAlign","_fast_filltext","getMatScaleX","getMatScaleY","maxFontScale","_italicDeg","wt","isWT","sameTexData","strWidth","hasFreedText","splitTex","forceSplitRender","curstr","stx","getCharRenderInfo","o1","texgen","isotex","noAtlas","_drawResortedWords","startx","starty","samePagesData","isLastRender","pri","pisz","riSaved","drawTexAlign","_inner_drawTexture","txts","isoTexture","fid","atlas","w1","lineExt","imgdtRect","addBmpData","cleanAtlases","GC","destroyDt","destroyAtlasDt","totalUsedRateAtlas","maxWasteRateID","maxWasteRate","curatlas","waste","showLog","needGC","cleanMem","simClean","clean","checkBmpLine","ex","bmpData32","stpos","updateBbx","curbbx","onlyH","ey","minx","maxx","finfo","fontstr","szinfo","pixelBBX","tmpRI","bmpdt","sizeinfo","printDbgInfo","totalUsedRate","dtstr","showAtlas","bgcolor","Sprite","texttex","graphics","drawRect","addChild","filltext_native","useOldCharBook","forceWholeRender","MathUtils3D","zeroTolerance","n1","n2","isZero","MaxValue","MinValue","Deg2Rad","nearEqual","writeTo","destVector2","forNativeElement","nativeElements","rewriteNumProperty","proto","ZERO","ONE","destVector4","az","aw","m4x4","vx","vy","vz","vw","me","lengthSquared","inverse","mineX","mineY","mineZ","mineW","maxeX","maxeY","maxeZ","maxeW","value1","value2","UnitX","UnitY","UnitZ","UnitW","tempVec4","rotation","qy","qz","qw","ix","iy","iz","iw","vector","intermediate","_tempVector4","transformV3ToV4","vectorX","vectorY","vectorZ","transformElem","normalX","normalY","normalZ","coordinate","coordinateX","coordinateY","coordinateZ","bz","vsub","vadd","dot","cross","destVector3","toDefault","NegativeUnitX","ForwardRH","ForwardLH","Up","Config3D","customResolution","_resoluWidth","_resoluHeight","enableDynamicBatch","enableStaticBatch","enableUniformBufferObject","defaultCacheRTMemory","defaultPhysicsMemory","enableMultiLight","maxLightCount","lightClusterCount","maxMorphTargetCount","useBVHCull","BVH_max_SpatialCount","BVH_limit_size","BVH_Min_Build_nums","debugFrustumCulling","RenderTexture","colorFormat","depthFormat","multiSamples","generateDepthTexture","_inPool","_isCameraTarget","_generateDepthTexture","_multiSamples","_createRenderTarget","_configInstance","depthTexture","_pool","_poolMemory","bindCanvasRender","_bindCanvasRender","_depthStencilTexture","createRenderTextureInternal","setupRendertargetTextureAttachment","depthStencilTexture","recreate","readRenderTargetPixelData","NativeContext","_byteLen","_renderObject3DList","_tmpMatrix","_conchContext","_tempRenderTexture2D","isSyncToRenderThread","_idata","_fdata","_byteArray","bufferConchRef","webglPlus","createArrayBufferRef","ARRAY_BUFFER_TYPE_CMD","ARRAY_BUFFER_REF_REFERENCE","setSharedCommandBuffer","_need","flushCommand","lineCap","miterLimit","isMain","_target","add_i","keepRT","_deleteRT","const2DRenderCMD","cmd","addCMD","BlendType","BlendEquation","ADD","BlendFunc","DepthTest","DepthMask","CullFace","FrontFace","Front","applyCMD","set2DRenderConfig","add_i_String","SET_GLOBAL_COMPOSITE_OPERTAION","add_ii","FILL_STYLE","add_if","SAVE","RESTORE","add_iffffff","add_iffff","CLIP_RECT","add_iff","SCALE","checkTexture","add_iiffffffffffffi","DRAW_TEXTURE","drawTextureWithTransform","drawTextureWithSizeGrid","sizeGrid","gx","gy","repeat","add_iiffffffffiffffffffffi","DRAW_TEXTURE_SIZE_GRID","TRANSLATE","_rotate","ROTATE","_scale","_drawLine","fromX","fromY","toX","toY","lineColor","vid","add_iffffffif","DRAW_LINE","_drawLines","add_iffif_ab","DRAW_LINES","_drawCircle","radius","fillColor","add_ifffiiiif","DRAW_CIRCLE","_drawPie","startAngle","endAngle","add_ifffffiiiif","DRAW_PIE","_drawPoly","isConvexPolygon","add_iffiiiifi_ab","DRAW_POLY","fillRect","FILL_RECT","fillTexture","typeValue","add_iiffffiffi","FILL_TEXTURE","STROKE_STYLE","LINE_WIDTH","STROKE_RECT","_drawPath","brush","pen","BEGIN_PATH","MOVE_TO","LINE_TO","add_ifffff","ARC_TO","CLOSE_PATH","FILL","STROKE","drawCurves","DRAW_CURVES","drawCanvasNormal","drawCanvasBitmap","align","borderColor","add_iiiifff_String_String","FILL_WORDS","add_iiffiifi_String","FILL_WORD_TEXT","drawText","strokeWord","fillBorderText","filltext11","fontObj","underLine","drawTriangles","colorNum","add_iiifffffffff_ab_ab_ab","DRAW_TRANGLES","from","DRAW_MASKED","SET_AS_BITMAP","add_iii","SIZE","filter","addRenderObject3D","scene3D","cs","repaint","add_iffif","fdata","idata","add_iiffff","ii","add_String","add_iffiiiifi","add_iiffiifi","strTobufer","add_iiiifff","str0","str1","ab0","ab1","add_iiifffffffff","arraybuffer0","arraybuffer1","arraybuffer2","nAlignLength0","getAlignLength","nAlignLength1","nAlignLength2","wab","nAlignLength","byteOffset","add_iif_ab","ARRAY_BUFFER_TYPE_DATA","ARRAY_BUFFER_REF_COPY","defaultClipMatrix","_drawTexToDrawTri_Vert","_drawTexToDrawTri_Index","_tempUV","_drawTriUseAbsMatrix","_COUNT","_other","_renderNextSubmitIndex","_renderCount","_submitKey","_transedPoints","_temp4Points","MAXCLIPRECT","_clipID_Gen","_lastMatScaleX","_lastMatScaleY","_lastMat_a","_lastMat_b","_lastMat_c","_lastMat_d","_lastTex","_fillColor","_flushCnt","defTexture","clearColor","_contextcount","_textRender","defTex2d","ContextParams","$transform","_drawRect","drawTexture2","args2","moveTo","lineTo","stroke","addPath","quadraticCurveTo","_fillAndStroke","arc","PI2","arcTo","scissorTest","clearBG","_getSubmits","_releaseMem","Create","setFillColor","getFillColor","make","lastBlend","_fillRect","sameKey","_MAXVERTNUM","isSameClipInfo","transformQuad","clipedOff","drawstyle","mixRGBandAlpha","_fillTexture","callLater","_repaintSprite","texuvRect","offsetx","offsety","repeatx","repeaty","sty","edx","edy","edu","edv","_mixRGBandAlpha","u_TexRange","drawTextures","colors","ipos","bmpid","_drawTextureAddSubmit","submitDebugger","clipInfo","cm","cmp","_useNewTex2DSubmit","minVertNum","_drawTexRect","ops","lastRender","preKey","tv","tuv","transform4Points","ma","mb","mc","md","a0","a3","a4","a5","a6","a7","italicDeg","xoff","maxy","RTRestore","oldcomp","tmpMat","_flushToTarget","restoreTempArray","triMesh","webGLImg","_transformByMatrix","setTransformByMatrix","escape","miny","cmaxx","cmaxy","submitElement","renderList","getInstance","_getPath","close","tPath","addVGSubmit","curEleNum","xp","yp","cpath","pi","faceNum","idxpos","fi","earcut","createShape","vertex","maxVertexNum","createLine2","ptnum","y1","len1","ndx","ndy","dx2","dy2","len22","len2","ndx2","ndy2","odx","ody","olen","nOdx","nOdy","acos","halfAng","ptx1","pty1","orilen","sinx","cosx","fda","SEGNUM","lastx","lasty","_x1","_y1","cvx","cvy","counterclockwise","ndivs","da","sr","cl","cpx","cpy","tArray","parameterLineWidth","hw","clip","drawParticle","_fillTexture_h","oriw","orih","du","uvr","tmpuv1","_fillTexture_v","dv","uvb","d_top","d_left","d_right","d_bottom","scale_x","scale_y","uvl","uvt","uvl_","uvt_","uvr_","uvb_","tuvr","tmpUVRect","_SUBMITVBSIZE","tmpUV","HTMLCanvas","createCanvas","_ctx","_setContext","contextID","getMemSize","getTexture","toBase64","encoderOptions","conchToBase64FlipY","conchToBase64","toDataURL","toBase64Async","callBack","getDataAsync","base64","BoundsStyle","bounds","userBounds","temBM","CacheStyle","needBitmapCache","cacheForFilters","needEnableCanvasRender","userSetCache","getItem","releaseFilterCache","fc","maskParent","hasGlowFilter","CANVAS_EXTEND_EDGE","_scaleInfo","SpriteStyle","skewX","skewY","dragging","AlphaCmd","cmdID","DrawCircleCmd","percent","getBoundPoints","_getBoundPointS","regClass","DrawCurvesCmd","DrawImageCmd","DrawLineCmd","_tempPoints","DrawLinesCmd","DrawPathCmd","tCMD","DrawPieCmd","_startAngle","_endAngle","lineOffset","end1","ed","s1","s2","csr","DrawPolyCmd","DrawRectCmd","DrawTextureCmd","FillTextureCmd","RestoreCmd","RotateCmd","ScaleCmd","TransformCmd","TranslateCmd","DrawTrianglesCmd","vert","vnum","Draw9GridTextureCmd","EMPTY_SIZE_GRID","SaveCmd","_tempMatrix","_initMatrix","_tempMatrixArrays","GraphicsBounds","_cacheBoundsType","_temp","_rstBoundPoints","_bounds","realSize","_getWrapRec","_getCmdPoints","cmds","_sp","_affectBySize","matrixs","tempMatrix","_switchMatrix","addPointArrToRst","scanPList","tMatix","addPointToRst","_tempPoint","ClipRectCmd","DrawTexturesCmd","FillTextCmd","_wordText","_lineWidth","_borderColor","_textAlign","_fontObj","CacheManger","disposeFunction","getCacheListFunction","unRegCacheByFunction","tryDispose","getCacheList","_cacheList","waitTime","_checkLoop","cacheList","tTime","_index","loopTimeLimit","VectorGraphManager","useDic","shapeDic","shapeLineDic","_checkKey","_freeIdArray","regCacheByFunction","startDispose","getId","addShape","shape","addLine","Line","getShape","deleteShape","endDispose","Graphics","_renderEmpty","_cmds","_vectorgraphArray","_graphicBounds","_createData","_clearData","_destroyData","recoverCmds","_repaint","_clearBoundsCache","onSizeChanged","_initGraphicBounds","_isOnlyOne","_renderOne","_renderAll","addCmd","removeCmd","replaceTextColor","loadImage","getRes","drawLine","drawLines","drawCircle","drawPie","toRadian","drawPoly","drawPath","draw9Grid","ARRAY_EMPTY","Node","_bits","is3D","_updateDisplayedInstage","_setUpNoticeChain","_setBitUp","bubbleEvent","_bubbleChainPool","destroyChild","destroyAllComponent","destroyChildren","removeChildren","_zOrder","getChildIndex","_childChanged","_setParent","addChildren","addChildAt","oldIndex","getChildByName","child","getChildAt","setChildIndex","removeChildAt","removeSelf","removeChildByName","beginIndex","endIndex","replaceChild","newNode","oldNode","numChildren","isAncestorOf","displayedInStage","_displayChild","_onRemoved","_setDisplay","display","timerLoop","method","coverBefore","jumpFrame","timerOnce","frameOnce","clearTimer","runCallLater","scene","active","_activeChangeScripts","_processActive","_onActive","_onInActive","_onActiveInScene","_onInActiveInScene","_setBelongScene","_setUnBelongScene","fromSetter","_activeHierarchy","_inActiveHierarchy","comp","activeChangeScripts","_components","parentScene","_addComponentInstance","_componentsChanged","srcRoot","dstRoot","destNode","destComponent","addComponent","addComponentInstance","component","getComponent","componentType","createByClass","components","getComponents","HALF_PI","Ease","bounceOut","bounceIn","asin","Handler","runWith","unshift","Tween","gid","props","duration","ease","autoRecover","to","isTo","usePool","runNow","_duration","_ease","easeNone","_complete","_delay","_props","_usedTimer","_startTimer","_usedPool","_delayParam","$_GID","tweenMap","clearTween","firstStart","_initProps","_beginLoop","_doEase","_updateEase","time","usedTimer","ratio","prop","progress","uTime","runTimer","handler","restart","pause","dTime","setStartTime","startTime","tweens","tween","clearAll","_remove","resume","Dragging","maxOffset","_dragging","_clickOnly","hasInertia","elasticDistance","elasticBackTime","_elasticRateX","_elasticRateY","_lastX","mouseX","_lastY","mouseY","onStageMouseUp","tweenMove","_tween","backToArea","getMousePoint","_canvasTransform","_offsets","checkArea","_offsetX","_offsetY","checkElastic","NaN","sineOut","SpriteUtils","x0","y0","newLTPoint","newRBPoint","localToGlobal","getGlobalRecByPoints","coordinateSpace","globalTransform","getGlobalPosAndScale","canvasMatrix","canvasLeft","canvasTop","canvasDegree","clientScaleX","clientScaleY","domScaleX","domScaleY","perpendicular","dom","_fitLayaAirInitialized","transformOrigin","webKittransformOrigin","getTransformRelativeToWindow","webkitTransform","_anchorX","_anchorY","_mouseState","_tfChanged","_sizeFlag","_boundStyle","_ownGraphics","mouseThrough","autoSize","hitTestPrior","updateZOrder","updateOrder","_getBoundsStyle","_setCustomRender","customRenderEnable","_setCacheAs","_checkCanvasEnable","tEnable","_setX","_setY","parentRepaint","get_width","set_width","_setWidth","_setPivotX","_setTranformChange","_shouldRefreshLayout","get_height","set_height","_setHeight","_setPivotY","displayWidth","displayHeight","setSelfBounds","bound","_boundPointsToParent","_getBoundPointsM","ifRotate","pX","pY","transPointList","toParentPoint","getGraphicBounds","rec","chidren","cList","setStyle","set_scaleX","set_scaleY","_setScaleX","get_scaleX","_setScaleY","get_scaleY","_setRotation","_setSkewX","_setSkewY","_createTransform","_adjustTransform","sskx","ssky","rot","skx","sky","ssx","ssy","_setTransform","set_transform","get_transform","_getPivotX","_getPivotY","anchorX","get_anchorX","set_anchorX","anchorY","get_anchorY","set_anchorY","_setAlpha","_getAlpha","visible","get_visible","set_visible","setGraphics","transferOwnership","speedMode","pivot","drawToCanvas","canvasHeight","drawToTexture","drawToTexture3D","imgdata","ImageData","lineLen","srcoff","putImageData","drawtocanvCtx","texRT","rtex","createNewPoint","globalNode","globalToLocal","fromParentPoint","scroll","isMouseEvent","mouseEnabled","_onDisplay","_skinBaseUrl","_setMask","startDrag","stopDrag","hitTestPoint","globalScaleX","globalRotation","globalScaleY","_setTexture","recArr","_gcmds","_filters","AnimationBase","wrapMode","_interval","_isReverse","_frameRateChanged","play","_isPlaying","_actionName","_getFrameByLabel","WRAP_REVERSE","interval","_frameLoop","label","_labels","_controlNode","WRAP_PINGPONG","_setControlNode","_resumePlay","addLabel","removeLabel","_removeLabelFromList","gotoAndStop","_displayToIndex","tArr","WRAP_POSITIVE","AtlasInfoManager","infoFile","fetch","addAtlases","dic","_fileLoadDic","prefix","frames","entry","atlasUrl","WorkerLoader","Worker","_worker","workerPath","onmessage","workerMessage","_dispatcher","options","postMessage","evt","imageBitmap","AtlasResource","dir","textures","BatchProgress","_callback","_weights","_progress","itemCount","createCallback","weight","np","ws","perc","ImgUtils","curVersion","needVersion","curVersionArr","needVersionArr","num1","num2","isSupport","wx","getSystemInfoSync","SDKVersion","compareVersion","Blob","arrayBuffer","newurl","createBufferURL","blob","createObjectURL","isSavaData","revokeBufferURL","revokeObjectURL","XMLUtils","aSource","sb","pos1","pos2","entity","attrs","attrName","defValue","XMLTagType","XMLIterator","lowerCaseName","sourceLen","parsePos","lastTagEnd","tagPos","tagLength","tagName","tagType","Start","attrParsed","lastTagName","CDATA","Comment","Instruction","End","singleQuoted","doubleQuoted","possibleEnd","Void","trim","decodeString","trimEnd","attributes","_attrs","parseAttributes","valueStart","valueEnd","waitValue","quoted","attrEnd","prototype","XML","XmlString","getAttrString","getAttrInt","getInt","getAttrFloat","getFloat","getAttrBool","getBool","setAttribute","attrValue","getNode","selector","lastOpenNode","nodeStack","nextTag","childNode","getText","HttpRequest","_http","XMLHttpRequest","send","responseType","headers","_responseType","_urlEncode","http","open","setRequestHeader","JSON","stringify","restype","dataType","onerror","_onError","onabort","_onAbort","onprogress","_onProgress","onload","_onLoad","lengthComputable","loaded","total","status","statusText","responseURL","message","responseText","response","encodeURI","Downloader","httpRequestPool","common","originalUrl","contentType","onProgress","onComplete","getRequestInst","returnRequestInst","$ref","image","Image","crossOrigin","imageWithBlob","arrayBufferToURL","imageWithWorker","workerLoaderOptions","audio","oncanplaythrough","typeIdCounter","NullURLInfo","typeId","main","loaderType","retryNum","retryDelay","maxLoader","_loadings","_queue","_downloadings","exts","typeEntry","typeMap","extMap","arg1","arg2","arg3","priority","group","ignoreCache","useWorkerLoader","promise","dummyOptions","pd","promises","_load1","all","_load2","silent","warnFailed","getURLInfo","obsoluteRes","formattedUrl","groupMap","cacheRes","_getRes","loadingKey","task","atlasInfo","getFileLoadPath","ATLAS","baseUrl","loadTaskPool","LoadTask","obsoluteInst","assetLoader","_cacheRes","catch","delete","retryCnt","noRetry","queueToDownload","download","postFormatURL","preloadedContent","preLoadedMap","completeItem","downloader","extEntry","msg","errMsg","stack","resArr","loadedMap","urlInfo","checkObj","_clearRes","clearTextureRes","clearUnLoaded","cancelLoadByUrls","urls","cancelLoadByUrl","loadPackage","remoteUrl","tmpPath","_loadSubFileConfig","plat","tt","qg","_loadMiniPackage","mini","packName","reject","loadSubpackage","success","onProgressUpdate","fileConfig","hash","config","addAtlas","TEXT","BUFFER","IMAGE","SOUND","VIDEO","FONT","TTF","HIERARCHY","MESH","MATERIAL","TEXTURECUBE","ANIMATIONCLIP","TERRAINHEIGHTDATA","TERRAINRES","SPINE","MathUtil","amount","Offset1","Offset2","Offset3","omega","cosom","sinom","scale0","scale1","bw","atan2","bigFirst","forceNum","_sortFun","sortNumBigFirst","sortBigFirst","sortNumSmallFirst","sortSmallFirst","FrameAnimation","_sortIndexFun","sortByKey","objpre","objnext","_setUp","targetDic","animationData","_targetDic","_animationData","frameRate","parsed","labels","_usedFrames","animationNewFrames","_calculateDatas","nodes","_displayNodeToFrame","frame","propFrames","keys","funFrames","funkeys","tNode","_calculateKeyFrames","tKeyFrames","keyFrames","keyframes","initValues","isFun","_calculateNodePropFrames","resetNodes","_dealKeyFrame","_calculateFrameValues","keyFrame","startFrame","endFrame","easeFun","startValue","dValue","tweenMethod","linearNone","GraphicAnimation","_nodeIDAniDic","_parseNodeList","uiView","_nodeList","_nodeDefaultProps","compId","_calGraphicData","aniData","_createGraphicData","preGraphic","gList","animationDataNew","_createFrameGraphic","_gList","_rootMatrix","_updateNodeGraphic","_rootNode","parentTransfrom","tNodeG","tResultTransform","tTex","_nodeGDic","_getNodeGraphicData","resultTransform","tGraphicAlpha","skin","_getTextureByUrl","_updateNoChilds","tTransform","_updateNodeGraphic2","onlyTranslate","hasTrans","ifSave","getNodeDataByID","nodeID","_getParams","obj2","_temParam","_getObjVar","noValue","vArr","GraphicNode","frameData","_drawTextureCmd","aX","aY","_tempMt","setAniData","aniName","animations","tAniO","aniDic","anilist","frameO","animationList","animationDic","parseByData","rootNode","aniO","nodeRoot","setUpAniData","animationObject","_I","Animation","_autoPlay","_frames","_setFramesFromCache","showWarn","framesMap","parseAnimationByData","_copyLabels","loadAnimation","loadAtlas","loadImages","autoPlay","cacheName","createFrames","onLoaded","loadUrl","getAtlas","_loadAnimationData","parseAnimationData","defaultO","aniList","key2","images","BitmapFont","fontSize","autoScaleSize","tint","maxWidth","lineHeight","letterSpacing","parseFont","xml","paddingArray","padding","ct","advance","getTextWidth","getMaxWidth","getMaxHeight","EffectAnimation","_initData","EFFECT_BEGIN","_onOtherBegin","_addEvent","effect","playEvent","_playEvent","_onPlayAction","_recordInitData","_aniKeys","effectClass","classStr","_effectClass","uiData","effectData","tSecondFrame","secondFrames","TextStyle","bold","italic","underline","underlineColor","valign","leading","HtmlElementType","HtmlElement","getAttr","setAttr","fetchAttributes","Text","HtmlImage","_element","_owner","objContainer","loadTexture","refreshLayout","HtmlLink","_shape","_rects","_rectCnt","resetArea","HtmlParseOptions","linkUnderline","defaultLinkUnderline","linkColor","defaultLinkColor","s_list1","s_list2","HtmlParser","_styleStack","_options","_elements","_styleStackTop","colorChanged","skipText","ignoreWhiteSpace","skipNextCR","appendText","pushStyle","popStyle","strikethrough","getAttribute","getFromPool","Link","LinkEnd","Input","Select","isNewLine","tf","equalStyle","defaultParser","classMap","UBBParser","_readPos","defaultImgWidth","defaultImgHeight","_handlers","onTag_URL","onTag_IMG","onTag_B","onTag_I","onTag_U","onTag_Simple","onTag_COLOR","onTag_FONT","onTag_SIZE","attr","getTagText","lastColor","lastSize","pos3","repl","func","_overflow","VISIBLE","_singleCharRender","_prompt","_textWidth","_textHeight","_textStyle","_lines","_padding","_fontSizeScale","bitmapFont","_bitmapFonts","recoverLines","returnToPool","textWidth","_updatingLayout","drawBg","markChanged","textHeight","typeset","ignoreLang","langPacks","changeText","_realFont","_bitmapFont","family","set_color","_isChanged","wordWrap","_wordWrap","bgColor","_bgColor","singleCharRender","html","_html","ubb","_ubb","_maxWidth","htmlParseOptions","_htmlParseOptions","parseTemplate","template","_templateVars","templateVars","setVar","scrollX","_scrollPos","maxScrollX","renderText","scrollY","maxScrollY","_typeset","doLayout","_objContainer","_hideText","isPrompt","_onPostLayout","saveColor","normalizeCR","_parseEscapeChars","escapeCharsPattern","getReplaceStr","_asPassword","_passwordChar","_promptColor","rectWidth","ELLIPSIS","MAX_VALUE","curLine","lastCmd","charWidth","charHeight","rectHeight","bfont","buildLines","mr","ctxFont","_ctxFont","_testWord","line","wrapText","endLine","startLine","cmdPool","linkEnd","linePool","remainWidth","tw","maybeIndex","wordWidth","startIndex","isEmoji","testEmoji","isEmojiChar","newLine","ccode","unicode","execResult","wordBoundaryTest","exec","calcTextSize","nw","nh","lastLine","htmlObj","SHRINK","low","high","cur","linesDeleted","done","ellipsisStr","SCROLL","HIDDEN","paddingLeft","paddingTop","scrollPos","clipped","curLink","linkStartX","lineCnt","lineClipped","thickness","_bgDrawCmd","RightToLeft","emojiTest","escapeSequence","_isFirstTouch","_tempRect","_rollOverChain","_rollOutChain","_inst","InputManager","_touchPool","_mouseTouch","TouchInfo","_pressKeys","_keyEvent","getTouch","touchTarget","_touchTarget","touchCount","clickCancelled","_stage","oncontextmenu","addEventListener","preventDefault","_touchInput","handleMouse","passive","isTextInputting","handleTouch","setPointerCapture","pointerId","releasePointerCapture","handleKeys","_eventType","_nativeEvent","pageX","clientX","pageY","clientY","mouseEventsEnabled","getNodeUnderPoint","_mouseMoveTime","move","downTargets","lastRollOver","handleRollOver","began","handleFocus","_c","_d","moved","clickTarget","clickTest","isDblClick","clickCount","deltaY","_e","changedTouches","uTouch","multiTouchEnabled","identifier","shouldCreate","focus","pre_input","new_input","nativeInput","multiline","keyEventsEnabled","getSpriteUnderPoint","getSprite3DUnderPoint","editing","hitTest","childEditing","isHit","clickTestThreshold","isiOSWKwebView","clickTrack","downPos","performance","lastClick","WebGLMode","WebGLExtension","TextureCompareMode","DrawType","CompareFunction","StencilOperation","TextureCubeFace","RenderStateCommand","cmdArray","renderstate","applyRenderStateCMD","GLObject","engine","_engine","_gl","_IDCounter","WebGLInternalTex","useSRGBLoader","_baseMipmapLevel","_maxMipmapLevel","createTexture","isPot","isPotSize","_mipmap","_mipmapCount","log2","Repeat","_addStatisticsInfo","_filterMode","getFilteMinrParam","_setTexParameteri","TEXTURE_MIN_FILTER","mag","getFilterMagParam","TEXTURE_MAG_FILTER","_warpU","warpParam","getWrapParam","_setWrapMode","TEXTURE_WRAP_S","_warpV","TEXTURE_WRAP_T","_warpW","Texture3D","TEXTURE_WRAP_R","_anisoLevel","anisoExt","_supportCapatable","getExtension","EXT_texture_filter_anisotropic","maxAnisoLevel","Max_AnisoLevel_Count","level","_setTexParametexf","TEXTURE_MAX_ANISOTROPY_EXT","isWebGL2","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","_compareMode","pname","param","_bindTexture","texParameteri","texParameterf","NEAREST_MIPMAP_NEAREST","NEAREST","LINEAR_MIPMAP_NEAREST","LINEAR","Trilinear","LINEAR_MIPMAP_LINEAR","REPEAT","CLAMP_TO_EDGE","Mirrored","MIRRORED_REPEAT","deleteTexture","WebGLInternalRT","_depthTexture","_framebuffer","createFramebuffer","_msaaFramebuffer","deleteFramebuffer","_depthbuffer","deleteRenderbuffer","_msaaRenderbuffer","GLTextureContext","_glParam","internalFormat","_sRGB","EXT_sRGB","_oesTextureHalfFloat","OES_texture_half_float","_compressdTextureS3tc_srgb","WEBGL_compressed_texture_s3tc_srgb","_compressedTextureEtc1","WEBGL_compressed_texture_etc1","_compressedTextureS3tc","WEBGL_compressed_texture_s3tc","_compressedTextureETC","WEBGL_compressed_texture_etc","_compressedTextureASTC","WEBGL_compressed_texture_astc","_webgl_depth_texture","WEBGL_depth_texture","glTextureParam","useSRGB","SRGB_EXT","RGB","SRGB_ALPHA_EXT","RGBA","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","glRenderTextureParam","DEPTH_COMPONENT","DEPTHSTENCIL_24_8","DEPTH_STENCIL","UNSIGNED_INT_24_8_WEBGL","DEPTH_32","UNSIGNED_INT","STENCIL_8","glRenderBufferParam","DEPTH_COMPONENT16","attachment","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","STENCIL_INDEX8","STENCIL_ATTACHMENT","glRenderTargetAttachment","COLOR_ATTACHMENT0","getTarget","getFormatPixelsParams","formatParams","channels","bytesPerPixel","dataTypedCons","typedSize","getGLtexMemory","depth","singlebyte","bytelength","srgb_alpha","getGLRTTexMemory","cube","getpixelbyte","rtFormat","pixelByte","colorPixelbyte","supportSRGB","Texture_SRGB","supportGenerateMipmap","isSRGBFormat","useSRGBExt","internalTex","glParam","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","texSubImage2D","initVideoTextureData","fourSize","UNPACK_ALIGNMENT","mipmapWidth","mipmapHeight","memory","compressedTexImage2D","imageSize","pixelParams","hdrPixelData","readScanLine","setCubeImageData","sources","cubeFace","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","setCubePixelsData","setCubeSubPixelData","setCubeDDSData","channelsByte","dataTypeConstur","face","setCubeKTXData","renderTarget","faceIndex","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","createRenderTextureCubeInternal","colorAttachment","depthBufferParam","depthbuffer","createRenderbuffer","framebufferRenderbuffer","RENDERBUFFER","createRenderTargetCubeInternal","renderbuffer","bindRenderbuffer","renderbufferStorage","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","updateVideoTexture","video","UNSIGNED_SHORT_4_4_4_4","GL2TextureContext","TEXTURE_2D_ARRAY","Tex3D","TEXTURE_3D","SRGB8","RGB8","SRGB8_ALPHA8","RGBA8","RGB565","RGBA32F","RGB32F","RGB16F","HALF_FLOAT","RGBA16F","DEPTH24_STENCIL8","DEPTH_COMPONENT32F","UNSIGNED_INT_24_8","texStorage2D","setTexture3DImageData","texStorage3D","texSubImage3D","setTexture3DPixlesData","setTexture3DSubPixelsData","zOffset","getCubeKTXRGBMData","LEQUAL","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","GEQUAL","LESS","GREATER","EQUAL","NOTEQUAL","ALWAYS","NEVER","renderbufferStorageMultisample","msaaFramebuffer","renderbufferParam","msaaRenderbuffer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","biltMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","blitFramebuffer","GLBuffer","_glTargetType","_glBufferUsageType","_getGLTarget","_getGLUsage","_glUsage","STATIC_DRAW","DYNAMIC_DRAW","Stream","STREAM_DRAW","_glTarget","UNIFORM_BUFFER","_memorychange","_getbindBuffer","_setbindBuffer","orphanStorage","srcData","bufferData","bufferSubData","setDataEx","bindBufferBase","glPointer","_getBindUBOBuffer","_setBindUBOBuffer","bindBufferRange","byteCount","resizeBuffer","glErrorShadow","synthesizeGLError","opt_msg","WebGLVertexArrayObjectOES","isAlive","hasBeenBound","elementArrayBuffer","maxVertexAttribs","attrib","VertexAttrib","maxAttrib","normalized","cached","recache","OESVertexArrayObject","self","getError","NO_ERROR","err1","wrapGLError","original","getParameter","enableVertexAttribArray","disableVertexAttribArray","getVertexAttrib","vertexAttribPointer","VERTEX_ARRAY_BINDING_OES","currentVertexArrayObject","defaultVertexArrayObject","vao","currentArrayBuffer","VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","VERTEX_ATTRIB_ARRAY_ENABLED","VERTEX_ATTRIB_ARRAY_SIZE","VERTEX_ATTRIB_ARRAY_STRIDE","VERTEX_ATTRIB_ARRAY_TYPE","VERTEX_ATTRIB_ARRAY_NORMALIZED","indx","instrumentExtension","reset_","vertexArrayObjects","MAX_VERTEX_ATTRIBS","bindVertexArrayOES","createVertexArrayOES","arrayObject","deleteVertexArrayOES","isVertexArrayOES","oldVAO","newVAO","currentBinding","oldAttrib","bufferChanged","INVALID_OPERATION","_setupVertexArrayObject","original_getSupportedExtensions","getSupportedExtensions","original_getExtension","__OESVertexArrayObject","GlCapable","glEngine","_extentionVendorPrefixes","initExtension","initCapable","isWebgl2","_capabilityMap","OES_element_index_uint","Element_Index_Uint32","OES_texture_float","Texture_anisotropic","EXT_color_buffer_float","EXT_color_buffer_half_float","OES_texture_half_float_linear","RenderTextureFormat_R16G16B16A16","OES_texture_float_linear","RenderTextureFormat_R32G32B32A32","RenderTextureFormat_Depth","RenderTextureFormat_ShadowMap","OES_vertex_array_object","Vertex_VAO","ANGLE_instanced_arrays","DrawElement_Instance","EXT_shader_texture_lod","Shader_TextureLod","WEBGL_compressed_texture_pvrtc","COMPRESS_TEXTURE_PVRTC","COMPRESS_TEXTURE_ETC1","COMPRESS_TEXTURE_ETC","COMPRESS_TEXTURE_ASTC","Texture_FloatLinearFiltering","Texture_HalfFloatLinearFiltering","MSAA","UnifromBufferObject","GRAPHICS_API_GLES3","_extensionMap","setExtensionMap","extension","_extTextureFilterAnisotropic","_getExtension","_compressedTexturePvrtc","_oesTextureFloatLinear","_extColorBufferHalfFloat","_extColorBufferFloat","_vaoExt","_angleInstancedArrays","_oesTextureHalfFloatLinear","_oesTextureFloat","_oes_element_index_uint","_extShaderTextureLod","OES_standard_derivatives","prefixes","GLParams","_initParams","_glParamsData","Max_Active_Texture_Count","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxVertexUniform","MAX_VERTEX_UNIFORM_VECTORS","maxFragUniform","MAX_FRAGMENT_UNIFORM_VECTORS","Max_Uniform_Count","MAX_Texture_Size","MAX_TEXTURE_SIZE","MAX_Texture_Image_Uint","MAX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","SHADER_CAPAILITY_LEVEL","GLRender2DContext","textureID","_activedTextureID","webglProgram","cacheShaderProgram","useProgram","_glUseProgram","GLRenderDrawContext","getMeshTopology","Points","POINTS","Lines","LINES","LineLoop","LINE_LOOP","LineStrip","LINE_STRIP","TRIANGLES","TriangleStrip","TRIANGLE_STRIP","TriangleFan","TRIANGLE_FAN","getIndexType","UInt8","UInt32","drawElementsInstanced","instanceCount","drawElementsInstancedANGLE","drawArraysInstanced","first","drawArraysInstancedANGLE","drawArrays","drawElements","drawGeometryElement","geometryElement","bufferState","drawParams","drawType","DrawArray","_glmode","DrawElement","_glindexFormat","DrawArrayInstance","DrawElementInstance","GLRenderState","_depthTest","_depthMask","_stencilTest","_cullFace","_initState","Less","_blendEquation","_sFactor","_dFactor","_sFactorAlpha","_dFactorAlpha","_getBlendFactor","factor","SourceColor","SRC_COLOR","ONE_MINUS_SRC_COLOR","DST_COLOR","OneMinusDestinationColor","ONE_MINUS_DST_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","OneMinusDestinationAlpha","ONE_MINUS_DST_ALPHA","SourceAlphaSaturate","SRC_ALPHA_SATURATE","BlendColor","CONSTANT_COLOR","OneMinusBlendColor","ONE_MINUS_CONSTANT_COLOR","_getBlendOperation","FUNC_ADD","SUBTRACT","FUNC_SUBTRACT","REVERSE_SUBTRACT","FUNC_REVERSE_SUBTRACT","_getGLCompareFunction","compareFunction","Never","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","_getGLStencilOperation","Keep","KEEP","Replace","REPLACE","IncrementSaturate","INCR","DecrementSaturate","DECR","Invert","INVERT","IncrementWrap","INCR_WRAP","DecrementWrap","DECR_WRAP","_getGLFrontfaceFactor","cullmode","CCW","CW","DEPTH_TEST","disable","depthMask","_depthFunc","depthFunc","STENCIL_TEST","_stencilMask","stencilMask","_stencilFunc","_stencilRef","stencilFunc","_stencilOp_fail","_stencilOp_zfail","_stencilOp_zpass","stencilOp","_blendEquationRGB","_blendEquationAlpha","blendEquationSeparate","_sFactorRGB","_dFactorRGB","blendFunc","blendFuncSeparate","CULL_FACE","_frontFace","frontFace","applyRenderStateCommand","DepthFunc","StencilTest","StencilMask","StencilFunc","StencilOp","BLEND_DISABLE","BlendFuncSeperate","DEFAULT_PIXELS","TextureCube","_blackTexture","_grayTexture","_whiteTexture","_errorTexture","writeTexture","img","every","updateSubPixelsData","ShaderVariable","GLShaderInstance","attributeMap","_attributeMap","_uniformMap","uniformData","uniName","_addShaderUnifiormFun","propertyNameToID","_uniformObjectMap","nUniformBlock","ACTIVE_UNIFORM_BLOCKS","gl2","uniformBlockName","getActiveUniformBlockName","getUniformBlockIndex","uniformBlockBinding","getUBOPointer","_legalUBObyteLength","_isShaderDebugMode","_uniformMatrix2fv","_uniformMatrix3fv","_uniformMatrix4f","SAMPLER_2D_SHADOW","_glTextureIDParams","SAMPLER_2D_ARRAY","_uniform_sampler2DArray","_uniform_sampler3D","_uniform_UniformBuffer","getUniformMap","uniformMatrix2fv","uniformMatrix3fv","_uniform_ivec2","uniform2i","_uniform_ivec2v","uniform2iv","_uniform_vec3i","uniform3i","_uniform_vec3vi","uniform3iv","_uniform_vec4i","uniform4i","_uniform_vec4vi","uniform4iv","_bindUniformBufferBase","texID","_activeTextures","GLVertexState","createVertexArray","deleteVertexArray","_GLBindVertexArray","isVertexArray","vertexBuffer","clearVAO","verDec","valueData","loc","attribute","vertexAttribDivisor","divisor","vertexAttribDivisorANGLE","WebGLEngine","webglMode","Auto","_propertyNameMap","_propertyNameCounter","_curUBOPointer","_GLUBOPointerMap","_GLBindPointerUBOMap","_lastClearColor","_lastClearDepth","_GLStatisticsInfo","_config","_isWebGL2","_lastViewport","_lastScissor","_webglMode","_initStatisticsInfo","webglConfig","initRenderEngine","WebGL1","WebGL2","_initBindBufferMap","_GLParams","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","TEXTURE16","TEXTURE17","TEXTURE18","TEXTURE19","TEXTURE20","TEXTURE21","TEXTURE22","TEXTURE23","TEXTURE24","TEXTURE25","TEXTURE26","TEXTURE27","TEXTURE28","TEXTURE29","TEXTURE30","TEXTURE31","_GLTextureContext","_GLRenderDrawContext","_GL2DRenderContext","_GLBufferBindMap","capatableType","lv","SCISSOR_TEST","clearFlag","clearcolor","clearDepth","Stencil","clearStencil","STENCIL_BUFFER_BIT","copySubFrameBuffertoTex","xoffset","yoffset","copyTexSubImage2D","colorMask","createShaderInstance","getTextureContext","getDrawContext","get2DRenderContext","getCreateRenderOBJContext","_renderOBJCreateContext","propertyIDToName","uploadUniforms","commandEncoder","shaderData","uploadUnTexture","applyUBO","applyUBOData","shaderUniform","getArrayData","shaderCall","uploadCustomUniforms","custom","NativeGLObject","setResourceManager","NativeGLTextureContext","native","_native","conchImgId","NativeGL2TextureContext","NativeGLVertexState","conchGLVertexState","_nativeVertexBuffers","_conchVertexBuffer3D","_conchIndexBuffer3D","NativeGLRenderDrawContext","conchGLRenderDrawContext","NativeRenderStateCommand","conchRenderStateCommand","addCMDInt1","addCMDInt2","addCMDInt3","addCMDInt4","NativeWebGLEngine","conchWebGLEngine","addStatisticsInfo","conchGL2TextureContext","conchGLTextureContext","conchGLBuffer","Render","mainCanv","_first","_startTm","_timeId","_Render","_mainCanvas","stamp","ifps","frm","lastFrm","_loop","_customRequestAnimationFrame","_loopFunction","fps","_onVisibilitychange","loopFun","customRenderEngine","_customEngine","isVisibility","clearInterval","setInterval","_enterFrame","glConfig","stencil","antialias","failIfMajorPerformanceCaveat","_replaceWebglcall","_rendercontex","_init_","tempgl","_multiline","_editable","_maxChars","_type","IOS_IFRAME","_onMouseDown","_onUnDisplay","_createInputElement","isTrue","_popupInputMethod","inputElement","_initInput","input","inputContainer","zIndex","setPos","cssText","resize","backgroundColor","border","outline","_processInputting","_stopEvent","setFontFace","fontFace","fontFamily","isAppUseNewInput","setFontSize","_restrictPattern","setSelection","selectionStart","selectionEnd","_syncInputTransform","inputWid","inputHei","setScale","setSize","select","_focus","_focusOut","_setInputMethod","_focusIn","scrollTop","blur","parentElement","direction","cssStyle","whiteSpace","_setPromptColor","readOnly","setType","setForbidEdit","maxLength","placeholder","_onKeyDown","setMultiAble","fontStyle","fontWeight","promptStyleDOM","head","innerText","miniGameTxt","setBgColor","restrict","_restrict","editable","maxChars","prompt","promptColor","TYPE_TEXT","TYPE_PASSWORD","TYPE_EMAIL","TYPE_URL","TYPE_NUMBER","TYPE_RANGE","TYPE_DATE","TYPE_MONTH","TYPE_WEEK","TYPE_TIME","TYPE_DATE_TIME","TYPE_DATE_TIME_LOCAL","TYPE_SEARCH","Widget","_top","_bottom","_left","_right","_centerX","_centerY","_onParentResize","resetLayoutX","resetLayoutY","flagX","flagY","resetLayout","centerX","centerY","_rect","_ptPoint","HitArea","_isHitGraphic","graphic","_isHitCmd","_ptInPolygon","areaPoints","nCross","hit","unHit","_hitCmds","_unHitCmds","WeakObject","_obj","_maps","supportWeakMap","delInterval","clearCache","del","Prefab","_deps","errors","json","LegacyUIParser","createByData","deps","addDep","onDepObsolute","addDeps","_listClass","_viewClass","HierarchyResource","PrefabImpl","api","root","runtime","clas","_viewCreated","_funMap","_runScript","tInitTool","InitTool","createComp","_idMap","tAni","_aniList","Scene","finish","view","dataMap","initTool","getCompInstance","isList","_addGraphicsToSprite","_isDrawType","_addGraphicToSprite","tChild","addNodeRef","setCompValue","_afterInited","_sheet","watcher","DataWatcher","exe","_parseWatchData","key1","_parseKeyWord","_watchMap","notifer","changeData","pageData","_doAwake","innerUrls","addInnerUrl","loadList","loadList3D","check","customHandler","instanceHandler","createByJson","itemRender","Function","customProps","created","graphicO","_getGraphicsFromSprite","ox","oy","_addGraphicToGraphics","isChild","dataO","propsName","propsO","drawConfig","DrawTypeDic","_tM","_getPointListByStr","xPos","adptFun","_getTransformData","pointArr","Rect","Circle","Pie","FillTexture","FillText","Curves","Poly","getBindFun","_nodeRefList","_initList","tool","referStr","setNodeRef","tRefInfo","getReferData","tStr","list2","addInitItem","doInits","createChildren","autoDestroyAtClosed","_widget","uimap","loadScene","unDestroyedScenes","_loadPage","hideLoadingPage","createView","getNodeByID","closeOther","closeAll","_scene3D","onOpened","onClosed","_getWidget","_sizeChanged","freshLayout","_root","_scene2D","showLoadingPage","_onSceneLoaded","destroyUnusedResources","loadPage","_showLoading","_hideLoading","Timer","autoActive","currFrame","_delta","_map","gSysTimer","_update","currTimer","_getNowData","_lastTimer","awake","handlers","userFrame","exeTime","_clearHandlers","_recoverHandler","useFrame","_getHandler","TimerHandler","_indexHandler","cid","mid","$_TID","_mid","CallLater","clearCallLater","withClear","_laters","laters","LaterHandler","WebGL","isNativeRender_enable","RunDriver","createShaderCondition","conditionScript","fn","changeWebGLSize","onStageResize","ComponentDriver","_onUpdates","_onLateUpdates","_onPreRenders","_onPostRenders","_toStarts","callStart","onStart","callUpdate","onUpdate","callLateUpdate","onLateUpdate","callPreRender","onPreRender","callPostRender","onPostRender","callDestroy","Stage","_frameRate","designWidth","designHeight","renderingEnabled","screenAdaptationEnabled","_screenMode","_scaleMode","_alignV","_alignH","_safariOffsetY","_frameStartTime","_previousOrientation","orientation","_wgColor","_scene3Ds","_globalRepaintSet","_globalRepaintGet","_needUpdateCanvasSize","_isFocused","_isVisibility","_isInputting","visibilityChange","hidden","mozHidden","msHidden","webkitHidden","__innerHeight","updateCanvasSize","needUpdateCanvasSize","isFocused","setScreenSize","screenWidth","screenHeight","SCREEN_NONE","SCREEN_VERTICAL","SCREEN_HORIZONTAL","canvasStyle","scaleMode","realWidth","realHeight","SCALE_NOSCALE","SCALE_SHOWALL","SCALE_NOBORDER","SCALE_FULL","SCALE_FIXED_WIDTH","SCALE_FIXED_HEIGHT","SCALE_FIXED_AUTO","SCALE_FIXED_AUTO_LAYAME","SCALE_FIXED_AUTO_LAYAVERSE","_formatData","ALIGN_LEFT","ALIGN_RIGHT","ALIGN_TOP","ALIGN_BOTTOM","webkitTransformOrigin","msTransformOrigin","mozTransformOrigin","oTransformOrigin","msTransform","mozTransform","oTransform","setScreenSizeForScene","stageWidth","stageHeight","alignH","alignV","background","screenMode","getFrameTm","getTimeFromFrameStart","visibility","renderToNative","FRAME_SLEEP","_runComponents","_updateTimers","isFastMode","FRAME_MOUSE","FRAME_FAST","FRAME_SLOW","isDoubleLoop","fullScreenEnabled","_requestFullscreen","_fullScreenChanged","removeEventListener","_frameRateNative","setLimitFPS","setMouseFrame","setSlowFrame","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","SCALE_EXACTFIT","ALIGN_CENTER","ALIGN_MIDDLE","BlurFilterGLRender","setShaderInfo","blurinfo","blurInfo","sigma","sigma2","strength_sig2_2sig2_gauss1","BlurFilter","getStrenth_sig2_2sig2_native","strength_sig2_native","GlowFilterGLRender","u_blurInfo1","_sv_blurInfo1","info2","_sv_blurInfo2","u_blurInfo2","u_color","getColor","svBlur","GlowFilter","offX","offY","getColorNative","_color_native","getBlurInfo1Native","_blurInof1_native","getBlurInfo2Native","_blurInof2_native","SoundChannel","isStopped","volume","completeHandler","__runComplete","AudioSoundChannel","_audio","_onEnd","__onEnd","__resumePlay","_src","loops","LayaEvent","currentTime","playbackRate","SoundManager","addChannel","removeChannel","AudioSound","_musicAudio","removeElement","autoReleaseSound","disposeSoundLater","readyState","_audioCache","clearBySign","_makeMusicOK","_bgMusic","_initMusicAudio","onErr","offs","tAd","cloneNode","channel","WebAudioSoundChannel","bufferSource","_currentTime","_volume","_startTime","_pauseTime","WebAudioSound","_onPlayEnd","__onPlayEnd","gain","_clearBufferSource","audioBuffer","createBufferSource","connect","disconnect","destination","onended","setTargetAtTime","SetTargetDelay","sourceNode","noteOff","_tryCleanFailed","_tryClearBuffer","_disposed","_miniBuffer","_unlocked","_playEmptySound","_unlock","_loaded","__playAfterLoaded","__toPlays","toPlays","tParams","supportWebAudio","initWebAudio","_soundClass","_musicClass","_channels","_lastSoundUsedTimeDic","_isCheckingDispose","_checkDisposeSound","hasCheck","disposeSoundIfNotUsed","destroySound","autoStopMusic","_stageOnBlur","_stageOnFocus","_visibilityChange","_autoStopMusic","_isActive","_musicChannel","_blurPaused","stopAllSound","_recoverWebAudio","muted","_muted","musicMuted","soundMuted","_soundMuted","_musicMuted","useAudioMusic","_useAudioMusic","soundClass","tSound","_soundCache","musicVolume","soundVolume","playSound","_setVolume","SoundNode","_onParentChange","_channel","isMusic","_isMusic","playMusic","_setPlayAction","tar","_setPlayActions","events","eventArr","_playEvents","_tar","_stopEvents","stopEvent","VideoTexture","videoWidth","videoHeight","_frameRender","_isLoaded","_needUpdate","immediatelyPlay","_listeningEvents","x5PlaysInline","playsInline","webkitPlaysInline","playsinline","autoplay","loadedmetadata","scope","requestVideoFrameCallback","updateVideo","isNeedUpdate","childElementCount","firstChild","appendSource","sourceElement","frameRender","canPlayType","buffered","currentSrc","ended","paused","preload","seekable","seeking","videoEvents","VideoNode","_internalTex","_videoTexture","videoTexture","onVideoMetaLoaded","reload","detroyChildren","AnimatorPlayState2D","_currentState","_frontPlay","animatorState","_resetPlayState","clipDuration","_finish","_startPlayTime","_elapsedTime","_lastIsFront","_playNum","_parentPlayTime","_playAllTime","playTime","_normalizedPlayTime","AnimatorControllerLayer2D","_playStateInfo","_crossPlayStateInfo","_crossMark","_crossNodesOwnersCount","_crossNodesOwnersIndicesMap","_srcCrossClipNodeIndices","_destCrossClipNodeIndices","playOnWake","defaultWeight","blendingMode","BLENDINGMODE_OVERRIDE","_states","_playType","states","removeState","addState","defaultStateName","_defaultState","getStateByName","_defaultStateNameCatch","defaultState","_removeClip","clipStateInfos","_getReferenceCount","getCurrentPlayState","stateName","AniParmType","AniStateConditionType","AniStateConditionNumberCompressType","AnimatorUpdateMode","AniConditionType","BLENDINGMODE_ADDTIVE","AnimatorControllerParse","layers","controllerLayers","clipsID","retobj","checkStates","enterName","clipState","enterState","_$uuid","checkNext","defName","checkDefault","nexts","soloTransitions","nState","getStateByID","conditions","checkConditions","animatorParams","parms","parm","Float","checkValue","defState","Animator2D","_speed","_updateMode","Normal","_lowUpdateDelty","_controllerLayers","_parameters","controller","_controller","updateTo","parameters","speed","_updateStateFinish","playState","_eventExit","_setClipDatasToNode","stateInfo","additive","isFirstLayer","controllerLayer","realtimeDatas","_realtimeDatas","_nodes","getNodeByIndex","getOwner","_applyFloat","pro","ower","defVal","_ownerMap","property","ownerPathCount","ownPat","getOwnerPathByIndex","pobj","propertyCount","getPropertyByIndex","classObj","_updateClipDatas","addtive","playStateInfo","curPlayTime","clipStart","currentFrameIndices","_currentFrameIndices","_evaluateClipDatasRealTime","_updatePlayer","elapsedTime","layerIndex","isReplay","clipEnd","lastElapsedTime","pAllTime","_lastElapsedTime","normalizedTime","yoyo","pTime","normalizedPlayTime","_eventStateUpdate","_applyTransition","_eventtransition","absTime","_updateEventScript","_animationEvents","frontPlay","parentPlayTime","_eventScript","currPlayTime","scripts","eventName","layerindex","transition","crossFade","destState","transduration","transstartoffset","_applyUpdateMode","LowFrame","UnScaleTime","NEGATIVE_INFINITY","_checkEnterIndex","curPlayState","calclipduration","_eventStart","_enterTransition","defaultClip","getDefaultState","cycleOffset","islooping","addControllerLayer","controllderLayer","transitionDuration","layer","enterTransition","setParamsTrigger","Trigger","setParamsNumber","setParamsBool","getParamsvalue","AnimatorState2D","transitions","_scripts","_resetFrameIndices","EVENT_OnStateUpdate","onStateUpdate","animator","EVENT_OnStateEnter","setPlayScriptInfo","onStateEnter","EVENT_OnStateExit","onStateExit","normalizeTime","paramsMap","soloNums","transNums","addScript","getScript","getScripts","coms","KeyframeNode2D","_ownerPath","_propertys","_keyFrames","keyFramesCount","_setOwnerPathCount","_setOwnerPathByIndex","_setPropertyCount","_setPropertyByIndex","_setKeyframeCount","_joinOwnerPath","sep","_joinProperty","getKeyframeByIndex","Keyframe2D","Animation2DEvent","AnimationClip2DParse01","_DATA","_reader","_BLOCK","blockStarts","blockLengths","prePos","_strings","reader","_version","READ_DATA","READ_BLOCK","READ_STRINGS","blockName","numList","numCount","nodeCount","nodesMap","_nodesMap","nodesDic","_nodesDic","setNodeByIndex","_indexInList","pathLength","nodePath","mapArray","propertyLength","fullPath","keyframeCount","timeToFrame","tweenType","tweenInfo","inTangent","outTangent","inWeight","outWeight","extend","eventCount","paramCount","addEvent","KeyframeNodeList2D","AnimationClip2D","playCurTime","realTimeCurrentFrameIndexes","outDatas","nextFrameIndex","frameIndex","isEnd","nextFarme","_getTweenVal","nextFrame","dur","tweenFun","poval","oval","hermiteInterpolate","hermiteCurveSplineWeight","_binarySearchEventIndex","midValue","frameValue","frametime","frameOutWeight","frameOutTangent","nextframeValue","nextframetime","nextframeInweight","nextframeIntangent","Eps","wt1","wt2","yp1","yp2","isFinite","wt2s","t2","fg","fpg","fppg","Linear","Quad_EaseIn","Quad_EaseOut","Quad_EaseInOut","Cubic_EaseIn","Cubic_EaseOut","Cubic_EaseInOut","Quart_EaseIn","Quart_EaseOut","Quart_EaseInOut","Quint_EaseIn","Quint_EaseOut","Quint_EaseInOut","Sine_EaseIn","Sine_EaseOut","Sine_EaseInOut","Expo_EaseIn","Expo_EaseOut","Expo_EaseInOut","Circ_EaseIn","Circ_EaseOut","Circ_EaseInOut","Elastic_EaseIn","Elastic_EaseOut","Elastic_EaseInOut","Back_EaseIn","Back_EaseOut","Back_EaseInOut","Bounce_EaseIn","Bounce_EaseOut","Bounce_EaseInOut","endValue","t3","Animation2DParm","Animation2DCondition","AnimatorStateCondition","conditionNameToID","_name","_conditionNameMap","checkState","AnimatorStateNumberCondition","_numberValue","_numberCompareFlag","numberValue","compareFlag","AnimatorStateBoolCondition","_compareFlag","Bool","AnimatorStateTriggerCondition","AnimatorTransition2D","exitByTime","exitTime","mute","addCondition","removeCondition","con","AnimatorController2D","getLayers","lArr","acl","getState","createState","idCatch","defID","childStates","groupRet","setTransitions","setExitTransition","exitRet","pExitRet","ats","sts","linArr","ato","addConditions","solo","_getAnimatorTransition2D","pState","exitTransition","idk","Boolean","currLayer","setParm","_tempVector0","_tempVector1","_tempVector2","_tempVector3","DEFAULTARRAY","Matrix4x4","m12","m13","m14","m21","m22","m23","m24","m31","m32","m33","m34","m41","m42","m43","m44","rad","oe","yaw","pitch","roll","Quaternion","createFromYawPitchRoll","createRotationQuaternion","axis","zz","xy","xz","yz","resultE","rotationX","rotationY","rotationZ","rotationW","zw","zx","yw","xw","trans","l11","l12","l13","l14","l21","l22","l23","l24","l31","l32","l33","l34","l41","l42","l43","l44","r11","r12","r13","r14","r21","r22","r23","r24","r31","r32","r33","r34","r41","r42","r43","r44","z2","yx","zy","wy","wz","eye","up","oE","xaxis","yaxis","zaxis","subtract","fov","aspect","znear","zfar","yScale","halfWidth","halfHeight","createPerspectiveOffCenter","zRange","getElementByRowColumn","row","column","setElementByRowColumn","setRotation","setPosition","equalsOtherMatrix","decomposeTransRotScale","translation","rotationMatrix","_tempMatrix4x4","decomposeTransRotMatScale","createFromMatrix4x4","te","re","se","sX","sY","sZ","at","tempRight","decomposeYawPitchRoll","yawPitchRoll","transpose","ae","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","objectPosition","cameraPosition","cameraUp","cameraForward","lengthSq","scalarLengthSquared","crosse","finale","diffee","obpose","mate","isIdentity","defined","num0","cloneByArray","v3","getTranslationVector","setTranslationVector","ve","getForward","setForward","forward","getInvertFront","isInvert","TEMPMatrix0","TEMPMatrix1","DEFAULTINVERT","_DEFAULTELEMENTS","_tempV30","_tempV31","_tempV32","Matrix3x3","rotX","rotY","rotZ","rotW","sou","souE","outE","determinant","b21","TEMPVector30","TEMPVector31","TEMPVector32","TEMPVector33","_tempMatrix3x3","halfRoll","halfPitch","halfYaw","sinRoll","cosRoll","sinPitch","cosPitch","sinYaw","cosYaw","lx","ly","lz","lw","rz","rw","atan","arcTanAngle","half","scaling","rotateX","rotateY","rotateZ","getYawPitchRoll","transformQuat","upe","angleTo","createRotationY","createRotationX","transformCoordinate","invDot","lookAt","forwardLookAt","matrix3x3","NAN","Script","onTriggerEnter","onTriggerStay","onTriggerExit","onCollisionEnter","onCollisionStay","onCollisionExit","onJointBreak","onMouseDown","onMouseUp","onRightMouseDown","onRightMouseUp","onMouseMove","onMouseDrag","onMouseDragEnd","onMouseOver","onMouseOut","onMouseClick","onMouseDoubleClick","onMouseRightClick","onKeyDown","onKeyPress","onKeyUp","TextResourceFormat","TextResource","registerLoader","Plain","toloadPics","folderPath","query","pics","pic","directory","subTextures","tPic","filename","spriteSourceSize","sourceSize","_stateNum","stateNum","TypedArrayClasses","Int8Array","Float64Array","_errors","_getNodeByRef","_getNodeData","SerializeUtil","outErrors","getNodeByRef","getNodeData","isDeserializing","_decodeObj","getResURLByUUID","getLoadTypeByEngineType","_$type","_$ref","typedArray","_$tmpl","childObj","overrideData","od","_$override","_$parent","arr2","nodeData","overrideDataMap","_$id","children","_$child","cloneTree","comps","_$comp","visit","idPath","toWrite","arrayEquals","mergeData","compType","_$prefab","_$index","overrided","errorList","HierarchyParser","inPrefab","prefabNodeDict","skinBaseUrl","bakedOverrideData","nodeMap","dataList","allNodes","outNodes","prefab","createNode","pstr","overrideData2","testId","findNodeInPrefab","_$runtime","nodeData2","topNode","compInitList","compData","decodeOptions","bakeOverrideData","applyOverrideData","decodeObj","_$var","_$preloads","HierarchyLoader","_$ver","_load","legacySceneOrPrefab","links","collectResourceLinks","resArray","HDRTextureInfo","decreaseX","decreaseY","getHDRInfo","readByteOffset","readLine","lineStr","getLineString","commandsMap","commands","resolutions","get_32_bit_rle_rgbe","dataIndex","rgbeBuffer","rgbeArray","pixelBuffer","pixelArray","scanlineLength","Ldexp","mantissa","exponent","scanlineArray","getc","wrong","readcolors","byter","byteg","byteb","bytee","pixelIndex","ldexp","setScanLineData","unnormalizedr","unnormalizedg","unnormalizedb","unnormalizede","olddreadcolors","rshift","scanIndex","lastIndex","color_color","clr","internalResources","HDRTEXTURE","propertyParams2d","constructParams2d","compressedFormats","videoFormats","wrapTex2D","tex2D","getBaseName","load2","fileIndex","platforms","fileInfo","readWrite","_parseDDS","_parseKTX","_parsePVR","_parseHDRTexture","_SimpleAnimatorTextureParse","_parseImage","loadStates","NullLoader","picUrl","testString","fontName","setFontFaceFromBuffer","FontFace","fonts","fontTxt","txtWidth","textContent","checkComplete","decodeAudioData","LocalStorage","_baseClass","Storage","init","items","support","setItem","setJSON","getJSON","removeItem","localStorage","SkinSV","_vlen","glfloat","texcoord","PrimitiveSV","TextureSV","Mouse","cursor","cursorStr","_preCursor","MeshParticle2D","maxNum","setMaxParticleNum","DefineDatas","_intersectionDefineDatas","unionMask","maskStart","newValue","addDefineDatas","addMask","removeDefineDatas","removeMask","destDefineData","destMask","ShaderDefine","_texGammaDefine","ShaderVariant","subShaderIndex","passIndex","_subShaderIndex","_passIndex","_shader","defineNames","_defineNames","subShader","getSubShaderAt","_passes","validDefine","_validDefine","defname","Shader3D","getDefineByName","otherDefines","ShaderVariantCollection","_allCompiled","_variants","allCompiled","variantCount","variant","contatins","getByIndex","variants","compileShaderByDefineNames","ShaderDataType","UniformBufferParamsType","ShaderData","ownerResource","_ownerResource","_defineDatas","_uniformBufferDatas","_uniformBuffersMap","uniformBufferDatas","uniformBuffersMap","_addCheckUBO","ubo","uboData","uboBuffer","_uniformParamsState","setDataByUniformBufferData","_gammaColorMap","addDefine","removeDefine","hasDefine","clearDefine","setBool","setInt","_setData","getNumber","setNumber","getVector2","setVector2","getVector3","setVector3","getVector","setVector","gammaColor","linearColor","getLinearColor","getMatrix4x4","setMatrix4x4","setBuffer","setTexture","lastValue","shaderDefine","getSourceIndex","setValueData","getValueData","setUniformBuffer","getUniformBuffer","setShaderData","uniformIndex","Int","getShaderData","destData","clonecolor","v4","_cloneUBO","uboDatas","UnifromBufferData","uniformParamsStat","_createBuffer","_updateFlag","_resetUpdateFlag","dataPos","_layoutMap","_addUniformParams","_bytelength","_getArraySize","uniformID","offsetadd","posAdd","posG","Vector4Array","MatrixArray","paramsInfo","_getParamsInfo","_setUpdateFlag","_has","setNumberbyIndex","setVector2byIndex","setVector3byIndex","setVector4byIndex","setMatrixbyIndex","setVector4ArraybyIndex","setMatrixArraybyIndex","getbyteLength","setVector4Array","vec","setMatrixArray","setVector4","setColorbyIndex","setMatrix","ubd","ShaderCompileDefineBase","compiledObj","_cacheShaderHierarchy","_cacheSharders","_VS","_PS","_defs","_resizeCacheShaderMap","cacheMap","hierarchy","resizeLength","withCompile","compileDefine","debugMaskLength","debugDefineString","_debugDefineString","debugDefineMask","_debugDefineMask","debugMode","cacheShaders","maskLength","maxEndIndex","subMask","subCacheShaders","cacheKey","defineString","_defineString","_getNamesByDefineData","vertexHead","fragmentHead","vsVersion","psVersion","renderOBJCreate","defStr","defMask","GLSLCodeGenerator","getAttributeType","uniformsMap","useUniformBlock","blocksStr","uniformsStr","blockUniforms","uniformName","ShaderPass","_tags","statefirst","_renderState","createRenderState","setNull","renderState","_addDebugShaderVariantCollection","outDebugDefines","outDebugDefineMask","dbugShaderVariantInfo","_debugShaderVariantInfo","debugSubShader","debugShader","_subShaders","debugShaderVariantCollection","_debugDefineStrings","_debugDefineMasks","_defineStrings","clusterSlices","uniformMap","_uniformBlock","attributeglsl","glslAttributeString","uniformglsl","glslUniformString","_maxAreaLightCountPerClusterAverage","VertexMesh","instanceWorldMatrixDeclaration","MESH_WORLDMATRIX_ROW0","MESH_WORLDMATRIX_ROW1","MESH_WORLDMATRIX_ROW2","MESH_WORLDMATRIX_ROW3","instanceSimpleAnimatorDeclaration","MESH_SIMPLEANIMATOR","vertexFlag","compatible","_vertexDeclarationMap","subFlags","MESH_POSITION0","MESH_NORMAL0","MESH_COLOR0","MESH_TEXTURECOORDINATE0","MESH_TEXTURECOORDINATE1","MESH_BLENDWEIGHT0","MESH_BLENDINDICES0","MESH_TANGENT0","MESH_CUSTOME0","MESH_CUSTOME1","MESH_CUSTOME2","MESH_CUSTOME3","SubShader","DefaultAttributeMap","uniformDefaultValue","_uniformBufferDataMap","_flags","_uniformDefaultValue","_uniformTypeMap","blockUniformMap","uniformType","ShaderDataTypeToUniformBufferType","blockUniformIndexMap","blockData","unifromType","textureGammaDefine","defaultValue","IncludeUniformMap","setFlag","getFlag","addShaderPass","pipelineMode","_addShaderPass","shaderPass","_pipelineMode","_addIncludeUniform","includemap","includeBindInfo","bindtypeMap","bindDefaultValue","shaderDataType","a_Position","a_Normal","a_Tangent0","a_Texcoord0","a_Texcoord1","a_Color","a_BoneWeights","a_BoneIndices","a_WorldMat","a_SimpleTextureParams","enableInstancing","supportReflectionProbe","_enableInstancing","_supportReflectionProbe","defineData","maskMap","_maskMap","subMaskMap","_defineMap","counter","_defineCounter","compileDefineDatas","_compileDefineDatas","_configDefineValues","subshader","addSubShader","passArray","VS","FS","pipeline","defineMask","PERIOD_CUSTOM","PERIOD_MATERIAL","PERIOD_SPRITE","PERIOD_CAMERA","PERIOD_SCENE","_isinit","stageConfig","arrayBufferSlice","float32ArraySlice","uint16ArraySlice","uint8ArraySlice","laya3D","_changeWebGLSize","is3DMode","supportLocalStorage","beforeInit","enableNative","beginCheck","__int__","createRender","_initone","_onInitModuleCallbacks","afterInit","exports","WasmModules","erralert","detail","alert","_evcode","debugJsPath","arrU8List","newU8List","arg","isWXOpenDataContext","isWXPosMsg","alertGlobalError","enableDebugPanel","EffectBase","autoDestroyAtComplete","_comlete","_exeTween","_doTween","Keyboard","NUMBER_0","NUMBER_1","NUMBER_2","NUMBER_3","NUMBER_4","NUMBER_5","NUMBER_6","NUMBER_7","NUMBER_8","NUMBER_9","A","B","C","D","E","F","G","H","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","F13","F14","F15","NUMPAD","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_ADD","NUMPAD_DECIMAL","NUMPAD_DIVIDE","NUMPAD_ENTER","NUMPAD_MULTIPLY","NUMPAD_SUBTRACT","SEMICOLON","COMMA","MINUS","PERIOD","SLASH","BACKQUOTE","LEFTBRACKET","BACKSLASH","RIGHTBRACKET","QUOTE","ALTERNATE","BACKSPACE","CAPS_LOCK","COMMAND","CONTROL","DELETE","ESCAPE","PAGE_UP","PAGE_DOWN","HOME","LEFT","UP","RIGHT","DOWN","SHIFT","SPACE","TAB","INSERT","KeyLocation","STANDARD","NUM_PAD","CommandEncoder","getCount","addShaderUniform","variable","QuickTestTool","_typeToNameDic","showedDic","_rendertypeToStrDic","getMCDName","_addType","showRenderTypeInfo","_stageRender","_countStart","_PreStageRender","_countEnd","_countDic","_i","showCountInfo","Socket","port","byteClass","protocols","isSecure","disableInput","_byteClass","_input","output","_output","connected","_connected","_endian","connectByUrl","_socket","cleanSocket","WebSocket","binaryType","_addInputPosition","onopen","_onOpen","_onMessage","onclose","_onClose","Base64Tool","lookup","bytes","encoded1","encoded2","encoded3","encoded4","reghead","Log","_logdiv","_btn","onclick","toggle","maxCount","autoScrollToBottom","scrollHeight","PerfData","datas","datapos","PerfHUD","xdata","DATANUM","ydata","hud_width","hud_height","gMinV","gMaxV","textSpace","sttm","addDataDef","_now","updateValue","v2y","drawHLine","_lastTm","di","cd","dtlen","_cx","dtsz","drawTexTm","PoolCache","SingletonList","_add","indexof","TimeLine","_tweenDic","_tweenDataList","_currTime","_lastTime","_gidIndex","_firstTweenDic","_startTimeSort","_endTimeSort","_loopKey","_frameIndex","_total","tTweenData","tweenData","endTime","_labelDic","tIndex","gotoTime","tTween","tObject","tTweenDataCopyList","tDataP","diyTarget","_endTweenDataList","Compare","paraA","paraB","tP","_animComplete","gotoLabel","Label","tLabelData","timeOrLabel","tTarget","tSrcData","tNow","tFrameTime","tCurrTime","DrawParticleCmd","_templ","BlendState","colorBlendhash","alphaBlendComponent","_blend_All_pool","_blend_seperate_pool","BlendComponent","blendOperationGLData","sourceBlendFactor","destinationFactor","hashindex","_hashIndex","_blendOperationGLData","_sourceBlendFactor","_destinationFactor","getHash","UniformBufferBase","pointer","_mapArray","_blockName","_singgle","_glPointerID","splitBuffer","UniformBufferObject","isSingle","_isSingle","_glPointer","_Map","bufferBase","createUniformBufferObject","_bindBufferRange","_reset","MAX_SAFE_INTEGER","subData","_updateDataInfo","setDataByByUniformBufferDataOffset","datalength","reallength","_realByte","RenderDrawMode","RenderIndexMode","TextureDecodeFormat","MemoryDataType","UBONAME_SCENE","UBONAME_CAMERA","UBONAME_SPRITE3D","UBONAME_SHADOW","commonMap","RenderState","cull","CULL_BACK","srcBlend","BLENDPARAM_ONE","dstBlend","BLENDPARAM_ZERO","srcBlendRGB","dstBlendRGB","srcBlendAlpha","dstBlendAlpha","BLENDEQUATION_ADD","depthTest","DEPTHTEST_LEQUAL","depthWrite","stencilRef","stencilTest","STENCILTEST_OFF","stencilWrite","STENCILOP_KEEP","STENCILOP_REPLACE","CULL_NONE","Off","CULL_FRONT","Back","BLEND_ENABLE_ALL","BLEND_ENABLE_SEPERATE","BLENDPARAM_SRC_COLOR","BLENDPARAM_ONE_MINUS_SRC_COLOR","BLENDPARAM_DST_COLOR","BLENDPARAM_ONE_MINUS_DST_COLOR","BLENDPARAM_SRC_ALPHA","BLENDPARAM_ONE_MINUS_SRC_ALPHA","BLENDPARAM_DST_ALPHA","BLENDPARAM_ONE_MINUS_DST_ALPHA","BLENDPARAM_SRC_ALPHA_SATURATE","BLENDPARAM_BLENDCOLOR","BLENDPARAM_BLEND_ONEMINUS_COLOR","BLENDEQUATION_SUBTRACT","BLENDEQUATION_REVERSE_SUBTRACT","BLENDEQUATION_MIN","MIN","BLENDEQUATION_MAX","MAX","DEPTHTEST_OFF","DEPTHTEST_NEVER","DEPTHTEST_LESS","DEPTHTEST_EQUAL","DEPTHTEST_GREATER","DEPTHTEST_NOTEQUAL","DEPTHTEST_GEQUAL","DEPTHTEST_ALWAYS","STENCILTEST_NEVER","STENCILTEST_LESS","STENCILTEST_EQUAL","STENCILTEST_LEQUAL","STENCILTEST_GREATER","STENCILTEST_NOTEQUAL","STENCILTEST_GEQUAL","STENCILTEST_ALWAYS","STENCILOP_ZERO","STENCILOP_INCR","STENCILOP_INCR_WRAP","STENCILOP_DECR","STENCILOP_DECR_WRAP","STENCILOP_INVERT","Default","CommonMemoryAllocater","NativeMemory","shared","_sharedBuffer","creatBlock","_f64data","float32Array","float64Array","uint8Array","int32Array","freeMemoryBlock","NativeSourceID","UploadMemory","_currentOffsetInByte","addBlockCell","dataSizeInByte","uploadDataTOShareMemory","UploadMemoryManager","_dataNodeList","_commandNums","_currentBlock","UploadMemorySize","_conchUploadMemoryManager","conchUploadMemoryManager","_instance","_addNodeCommand","sizeInByte","_serialiseData","getUploadMemoryLength","uploadData","ArabicReshaper","characterMapContains","charsMap","getCharRep","getCombCharRep","combCharsMap","isTransparent","transChars","getOriginalCharsFromCode","convertArabic","crep","combcrep","shaped","current","prevID","nextID","convertArabicBack","apfb","selectedChar","toReturn","MatirxArray","ai0","ai1","ai2","ai3","_curState","effectScale","tweenTime","toChangedState","toInitState","_curTween","effectEase","tweenComplete","backEase","_stateName","hasPtrID","propertyID","getMap","propertyKey","_customUniformParamsMap","_uploadMark","_uploadRenderType","_renderShaderInstance","_shaderPass","_sceneUniformParamsMap","_cameraUniformParamsMap","_spriteUniformParamsMap","_materialUniformParamsMap","sceneParams","createGlobalUniformMap","spriteParms","cameraParams","customParams","_uploadMaterial","_uploadRender","_uploadCameraShaderValue","_uploadScene","shaderDatas","uploadRenderStateBlendDepth","uploadRenderStateBlendDepthByShader","uploadRenderStateBlendDepthByMaterial","DEPTH_WRITE","_f","STENCIL_WRITE","_g","_k","_j","STENCIL_Op","_m","_l","STENCIL_Ref","_p","_o","_r","_q","BLEND_EQUATION","_t","_s","BLEND_SRC","_v","_u","BLEND_DST","BLEND_EQUATION_RGB","_z","BLEND_EQUATION_ALPHA","_1","_0","BLEND_SRC_RGB","_3","_2","BLEND_DST_RGB","_5","_4","BLEND_SRC_ALPHA","_7","_6","BLEND_DST_ALPHA","uploadRenderStateFrontFace","isTarget","invertFront","forntFace","CULL","uploadCustomUniform","_isInPool","setPixlesData","assetId"],"sources":["../../src/layaAir/laya/utils/ClassUtils.ts","../../src/layaAir/Decorators.ts","../../src/layaAir/Config.ts","../../src/layaAir/laya/Const.ts","../../src/layaAir/ILaya.ts","../../src/layaAir/LayaEnv.ts","../../src/layaAir/laya/utils/Pool.ts","../../src/layaAir/laya/utils/Utils.ts","../../src/layaAir/laya/components/Component.ts","../../src/layaAir/laya/maths/Matrix.ts","../../src/layaAir/laya/maths/Point.ts","../../src/layaAir/laya/maths/Rectangle.ts","../../src/layaAir/laya/layagl/LayaGL.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/HDREncodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureFormat.ts","../../src/layaAir/laya/utils/Delegate.ts","../../src/layaAir/laya/events/Event.ts","../../src/layaAir/laya/events/EventDispatcher.ts","../../src/layaAir/laya/resource/Resource.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/FilterMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderCapable.ts","../../src/layaAir/laya/resource/BaseTexture.ts","../../src/layaAir/laya/utils/Byte.ts","../../src/layaAir/laya/utils/HalfFloatUtils.ts","../../src/layaAir/laya/RenderEngine/DDSTextureInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDimension.ts","../../src/layaAir/laya/RenderEngine/KTXTextureInfo.ts","../../src/layaAir/laya/resource/Texture2D.ts","../../src/layaAir/laya/webgl/shader/BaseShader.ts","../../src/layaAir/laya/webgl/utils/RenderState2D.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderTargetFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderClearFlag.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendFactor.ts","../../src/layaAir/laya/maths/Color.ts","../../src/layaAir/laya/resource/NativeRenderTexture2D.ts","../../src/layaAir/laya/resource/RenderTexture2D.ts","../../src/layaAir/laya/resource/WebGLRTMgr.ts","../../src/layaAir/laya/RenderEngine/RenderStateContext.ts","../../src/layaAir/laya/webgl/canvas/BlendMode.ts","../../src/layaAir/laya/webgl/shader/ShaderDefinesBase.ts","../../src/layaAir/laya/webgl/shader/d2/ShaderDefines2D.ts","../../src/layaAir/laya/resource/Texture.ts","../../src/layaAir/laya/utils/StringKey.ts","../../src/layaAir/laya/resource/AssetDb.ts","../../src/layaAir/laya/net/URL.ts","../../src/layaAir/laya/webgl/utils/IncludeFile.ts","../../src/layaAir/laya/webgl/utils/ShaderNode.ts","../../src/layaAir/laya/webgl/utils/ShaderCompile.ts","../../src/layaAir/laya/webgl/shader/Shader.ts","../../src/layaAir/laya/webgl/shader/d2/Shader2X.ts","../../src/layaAir/laya/webgl/shader/d2/value/Value2D.ts","../../src/layaAir/laya/webgl/submit/SubmitKey.ts","../../src/layaAir/laya/webgl/submit/SubmitCMD.ts","../../src/layaAir/laya/filters/Filter.ts","../../src/layaAir/laya/utils/ColorUtils.ts","../../src/layaAir/laya/filters/ColorFilter.ts","../../src/layaAir/laya/maths/GrahamScan.ts","../../src/layaAir/laya/display/SpriteConst.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStatInfo.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderParams.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BufferTargetType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/IndexFormat.ts","../../src/layaAir/laya/utils/Browser.ts","../../src/layaAir/laya/utils/Stat.ts","../../src/layaAir/laya/webgl/submit/SubmitBase.ts","../../src/layaAir/laya/renders/VertexElementFormat.ts","../../src/layaAir/laya/RenderEngine/VertexDeclaration.ts","../../src/layaAir/laya/renders/VertexElement.ts","../../src/layaAir/laya/webgl/utils/BufferState.ts","../../src/layaAir/laya/RenderEngine/Buffer.ts","../../src/layaAir/laya/RenderEngine/IndexBuffer.ts","../../src/layaAir/laya/renders/RenderInfo.ts","../../src/layaAir/laya/webgl/utils/Buffer2D.ts","../../src/layaAir/laya/webgl/utils/IndexBuffer2D.ts","../../src/layaAir/laya/RenderEngine/VertexBuffer.ts","../../src/layaAir/laya/webgl/utils/VertexBuffer2D.ts","../../src/layaAir/laya/webgl/utils/Mesh2D.ts","../../src/layaAir/laya/webgl/utils/MeshQuadTexture.ts","../../src/layaAir/laya/webgl/utils/MeshTexture.ts","../../src/layaAir/laya/webgl/utils/MeshVG.ts","../../src/layaAir/laya/webgl/canvas/NativeWebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/webgl/canvas/WebGLCacheAsNormalCanvas.ts","../../src/layaAir/laya/renders/LayaGLQuickRunner.ts","../../src/layaAir/laya/filters/NativeFilter.ts","../../src/layaAir/laya/renders/RenderSprite.ts","../../src/layaAir/laya/maths/Bezier.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendEquationSeparate.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CullMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderStateType.ts","../../src/layaAir/laya/webgl/canvas/DrawStyle.ts","../../src/layaAir/laya/webgl/canvas/Path.ts","../../src/layaAir/laya/webgl/canvas/save/SaveBase.ts","../../src/layaAir/laya/webgl/canvas/save/SaveClipRect.ts","../../src/layaAir/laya/webgl/canvas/save/SaveMark.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTransform.ts","../../src/layaAir/laya/webgl/canvas/save/SaveTranslate.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.vs.glsl","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderPologyMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/WrapMode.ts","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/texture.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/files/primitive.ps.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/skinAnishader/skinShader.vs.glsl","../../bin/tsc/layaAir/laya/webgl/shader/d2/skinAnishader/skinShader.ps.glsl","../../src/layaAir/laya/webgl/shader/d2/Shader2D.ts","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinMeshBuffer.ts","../../src/layaAir/laya/webgl/shapes/BasePoly.ts","../../src/layaAir/laya/webgl/shapes/EarcutNode.ts","../../src/layaAir/laya/webgl/shapes/Earcut.ts","../../src/layaAir/laya/webgl/submit/Submit.ts","../../src/layaAir/laya/webgl/submit/SubmitCanvas.ts","../../src/layaAir/laya/webgl/submit/SubmitTarget.ts","../../src/layaAir/laya/webgl/submit/SubmitTexture.ts","../../src/layaAir/laya/webgl/text/CharSubmitCache.ts","../../src/layaAir/laya/webgl/text/AtlasGrid.ts","../../src/layaAir/laya/webgl/text/TextTexture.ts","../../src/layaAir/laya/webgl/text/TextAtlas.ts","../../src/layaAir/laya/utils/FontInfo.ts","../../src/layaAir/laya/resource/NativeContext.ts","../../src/layaAir/laya/utils/WordText.ts","../../src/layaAir/laya/webgl/text/CharRenderInfo.ts","../../src/layaAir/laya/webgl/text/ICharRender.ts","../../src/layaAir/laya/webgl/text/CharRender_Canvas.ts","../../src/layaAir/laya/webgl/text/CharRender_Native.ts","../../src/layaAir/laya/webgl/text/TextRender.ts","../../src/layaAir/laya/maths/MathUtils3D.ts","../../src/layaAir/laya/maths/Vector2.ts","../../src/layaAir/laya/maths/Vector4.ts","../../src/layaAir/laya/maths/Vector3.ts","../../src/layaAir/Config3D.ts","../../src/layaAir/laya/resource/RenderTexture.ts","../../src/layaAir/laya/resource/Context.ts","../../src/layaAir/laya/resource/HTMLCanvas.ts","../../src/layaAir/laya/display/css/BoundsStyle.ts","../../src/layaAir/laya/display/css/CacheStyle.ts","../../src/layaAir/laya/display/css/SpriteStyle.ts","../../src/layaAir/laya/display/cmd/AlphaCmd.ts","../../src/layaAir/laya/display/cmd/DrawCircleCmd.ts","../../src/layaAir/laya/display/cmd/DrawCurvesCmd.ts","../../src/layaAir/laya/display/cmd/DrawImageCmd.ts","../../src/layaAir/laya/display/cmd/DrawLineCmd.ts","../../src/layaAir/laya/display/cmd/DrawLinesCmd.ts","../../src/layaAir/laya/display/cmd/DrawPathCmd.ts","../../src/layaAir/laya/display/cmd/DrawPieCmd.ts","../../src/layaAir/laya/display/cmd/DrawPolyCmd.ts","../../src/layaAir/laya/display/cmd/DrawRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTextureCmd.ts","../../src/layaAir/laya/display/cmd/FillTextureCmd.ts","../../src/layaAir/laya/display/cmd/RestoreCmd.ts","../../src/layaAir/laya/display/cmd/RotateCmd.ts","../../src/layaAir/laya/display/cmd/ScaleCmd.ts","../../src/layaAir/laya/display/cmd/TransformCmd.ts","../../src/layaAir/laya/display/cmd/TranslateCmd.ts","../../src/layaAir/laya/display/cmd/DrawTrianglesCmd.ts","../../src/layaAir/laya/display/cmd/Draw9GridTextureCmd.ts","../../src/layaAir/laya/display/cmd/SaveCmd.ts","../../src/layaAir/laya/display/GraphicsBounds.ts","../../src/layaAir/laya/display/cmd/ClipRectCmd.ts","../../src/layaAir/laya/display/cmd/DrawTexturesCmd.ts","../../src/layaAir/laya/display/cmd/FillTextCmd.ts","../../src/layaAir/laya/utils/CacheManger.ts","../../src/layaAir/laya/utils/VectorGraphManager.ts","../../src/layaAir/laya/display/Graphics.ts","../../src/layaAir/laya/display/Node.ts","../../src/layaAir/laya/utils/Ease.ts","../../src/layaAir/laya/utils/Handler.ts","../../src/layaAir/laya/utils/Tween.ts","../../src/layaAir/laya/utils/Dragging.ts","../../src/layaAir/laya/utils/SpriteUtils.ts","../../src/layaAir/laya/display/Sprite.ts","../../src/layaAir/laya/display/AnimationBase.ts","../../src/layaAir/laya/net/AtlasInfoManager.ts","../../src/layaAir/laya/net/WorkerLoader.ts","../../src/layaAir/laya/resource/AtlasResource.ts","../../src/layaAir/laya/net/BatchProgress.ts","../../src/layaAir/laya/utils/ImgUtils.ts","../../src/layaAir/laya/html/XMLUtils.ts","../../src/layaAir/laya/html/XMLIterator.ts","../../src/layaAir/laya/html/XML.ts","../../src/layaAir/laya/net/HttpRequest.ts","../../src/layaAir/laya/net/Downloader.ts","../../src/layaAir/laya/net/Loader.ts","../../src/layaAir/laya/maths/MathUtil.ts","../../src/layaAir/laya/display/FrameAnimation.ts","../../src/layaAir/laya/display/GraphicAnimation.ts","../../src/layaAir/laya/display/Animation.ts","../../src/layaAir/laya/display/BitmapFont.ts","../../src/layaAir/laya/display/EffectAnimation.ts","../../src/layaAir/laya/display/css/TextStyle.ts","../../src/layaAir/laya/html/HtmlElement.ts","../../src/layaAir/laya/html/HtmlImage.ts","../../src/layaAir/laya/html/HtmlLink.ts","../../src/layaAir/laya/html/HtmlParseOptions.ts","../../src/layaAir/laya/html/HtmlParser.ts","../../src/layaAir/laya/html/UBBParser.ts","../../src/layaAir/laya/display/Text.ts","../../src/layaAir/laya/events/InputManager.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLExtension.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureCompareMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/DrawType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/BlendType.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/CompareFunction.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/StencilOperation.ts","../../src/layaAir/laya/resource/TextureCube.ts","../../src/layaAir/laya/RenderEngine/RenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalTex.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLInternalRT.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLBuffer.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/VertexArrayObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GlCapable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLParams.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRender2DContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLRenderState.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariable.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLShaderInstance.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/GLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/WebGLEngine/WebGLEngine.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLObject.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLTextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGL2TextureContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLVertexState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRenderDrawContext.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeRenderStateCommand.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine.ts","../../src/layaAir/laya/renders/Render.ts","../../src/layaAir/laya/display/Input.ts","../../src/layaAir/laya/components/Widget.ts","../../src/layaAir/laya/utils/HitArea.ts","../../src/layaAir/laya/utils/WeakObject.ts","../../src/layaAir/laya/resource/HierarchyResource.ts","../../src/layaAir/laya/loaders/LegacyUIParser.ts","../../src/layaAir/laya/resource/PrefabImpl.ts","../../src/layaAir/laya/display/Scene.ts","../../src/layaAir/laya/utils/Timer.ts","../../src/layaAir/laya/utils/CallLater.ts","../../src/layaAir/laya/webgl/WebGL.ts","../../src/layaAir/laya/utils/RunDriver.ts","../../src/layaAir/laya/components/ComponentDriver.ts","../../src/layaAir/laya/display/Stage.ts","../../src/layaAir/laya/filters/BlurFilterGLRender.ts","../../src/layaAir/laya/filters/BlurFilter.ts","../../src/layaAir/laya/filters/GlowFilterGLRender.ts","../../src/layaAir/laya/filters/GlowFilter.ts","../../src/layaAir/laya/media/SoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSoundChannel.ts","../../src/layaAir/laya/media/h5audio/AudioSound.ts","../../src/layaAir/laya/media/webaudio/WebAudioSoundChannel.ts","../../src/layaAir/laya/media/webaudio/WebAudioSound.ts","../../src/layaAir/laya/media/SoundManager.ts","../../src/layaAir/laya/media/SoundNode.ts","../../src/layaAir/laya/media/VideoTexture.ts","../../src/layaAir/laya/media/VideoNode.ts","../../src/layaAir/laya/components/AnimatorPlayState2D.ts","../../src/layaAir/laya/components/AnimatorControllerLayer2D.ts","../../src/layaAir/laya/components/AnimatorControllerParse.ts","../../src/layaAir/laya/components/AnimatorUpdateMode.ts","../../src/layaAir/laya/components/Animation2DCondition.ts","../../src/layaAir/laya/components/Animator2D.ts","../../src/layaAir/laya/components/AnimatorState2D.ts","../../src/layaAir/laya/components/KeyframeNode2D.ts","../../src/layaAir/laya/components/KeyFrame2D.ts","../../src/layaAir/laya/components/Animation2DEvent.ts","../../src/layaAir/laya/components/AnimationClip2DParser01.ts","../../src/layaAir/laya/components/KeyframeNodeList2D.ts","../../src/layaAir/laya/components/AnimationClip2D.ts","../../src/layaAir/laya/components/Animation2DParm.ts","../../src/layaAir/laya/components/AnimatorStateCondition.ts","../../src/layaAir/laya/components/AnimatorTransition2D.ts","../../src/layaAir/laya/components/AnimatorController2D.ts","../../src/layaAir/laya/maths/Matrix4x4.ts","../../src/layaAir/laya/maths/Matrix3x3.ts","../../src/layaAir/laya/maths/Quaternion.ts","../../src/layaAir/laya/components/Script.ts","../../src/layaAir/laya/resource/TextResource.ts","../../src/layaAir/laya/loaders/TextResourceLoader.ts","../../src/layaAir/laya/loaders/AtlasLoader.ts","../../src/layaAir/laya/loaders/SerializeUtil.ts","../../src/layaAir/laya/loaders/HierarchyParser.ts","../../src/layaAir/laya/loaders/HierarchyLoader.ts","../../src/layaAir/laya/RenderEngine/HDRTextureInfo.ts","../../src/layaAir/laya/loaders/TextureLoader.ts","../../src/layaAir/laya/loaders/AnimationClip2DLoader.ts","../../src/layaAir/laya/loaders/AnimationController2DLoader.ts","../../src/layaAir/laya/loaders/NullLoader.ts","../../src/layaAir/laya/loaders/BitmapFontLoader.ts","../../src/layaAir/laya/loaders/TTFFontLoader.ts","../../src/layaAir/laya/media/webaudio/WebAudioLoader.ts","../../src/layaAir/laya/ModuleDef.ts","../../src/layaAir/laya/net/LocalStorage.ts","../../src/layaAir/laya/webgl/shader/d2/skinAnishader/SkinSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/PrimitiveSV.ts","../../src/layaAir/laya/webgl/shader/d2/value/TextureSV.ts","../../src/layaAir/laya/utils/Mouse.ts","../../src/layaAir/laya/webgl/utils/MeshParticle2D.ts","../../src/layaAir/laya/RenderEngine/RenderShader/DefineDatas.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderDefine.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderVariantCollection.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderData.ts","../../src/layaAir/laya/RenderEngine/UniformBufferData.ts","../../src/layaAir/laya/webgl/utils/ShaderCompileDefineBase.ts","../../src/layaAir/laya/RenderEngine/RenderShader/GLSLCodeGenerator.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderPass.ts","../../src/layaAir/laya/RenderEngine/RenderShader/VertexMesh.ts","../../src/layaAir/laya/RenderEngine/RenderShader/SubShader.ts","../../src/layaAir/laya/RenderEngine/RenderShader/Shader3D.ts","../../src/layaAir/Laya.ts","../../src/layaAir/laya/effect/EffectBase.ts","../../src/layaAir/laya/events/Keyboard.ts","../../src/layaAir/laya/events/KeyLocation.ts","../../src/layaAir/laya/layagl/CommandEncoder.ts","../../src/layaAir/laya/layagl/QuickTestTool.ts","../../src/layaAir/laya/net/Socket.ts","../../src/layaAir/laya/utils/Base64Tool.ts","../../src/layaAir/laya/utils/Log.ts","../../src/layaAir/laya/utils/PerfData.ts","../../src/layaAir/laya/utils/PerfHUD.ts","../../src/layaAir/laya/utils/PoolCache.ts","../../src/layaAir/laya/utils/SingletonList.ts","../../src/layaAir/laya/utils/TimeLine.ts","../../src/layaAir/laya/display/cmd/DrawParticleCmd.ts","../../src/layaAir/laya/RenderEngine/BlendState.ts","../../src/layaAir/laya/RenderEngine/UniformBufferBase.ts","../../src/layaAir/laya/RenderEngine/UniformBufferObject.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderDrawMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/RenderIndexMode.ts","../../src/layaAir/laya/RenderEngine/RenderEnum/TextureDecodeFormat.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/MemoryDataType.ts","../../src/layaAir/laya/RenderEngine/RenderShader/RenderState.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/CommonMemoryAllocater.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/NativeMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemory.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/CommonMemory/UploadMemoryManager.ts","../../src/layaAir/laya/webgl/text/ArabicReshaper.ts","../../src/layaAir/laya/webgl/utils/MatirxArray.ts","../../src/layaAir/laya/components/AnimatorState2DScript.ts","../../src/layaAir/laya/effect/ButtonEffect.ts","../../src/layaAir/laya/RenderEngine/CommandUniformMap.ts","../../src/layaAir/laya/effect/FadeIn.ts","../../src/layaAir/laya/effect/FadeOut.ts","../../src/layaAir/laya/RenderEngine/RenderEngine/NativeGLEngine/NativeGLRender2DContext.ts","../../src/layaAir/laya/resource/RenderTextureCube.ts","../../src/layaAir/laya/RenderEngine/RenderShader/ShaderInstance.ts","../../src/layaAir/laya/webgl/shader/ShaderValue.ts","../../src/layaAir/laya/media/Sound.ts","../../src/layaAir/laya/RenderEngine/SubUniformBufferData.ts","../../src/layaAir/laya/system/System.ts","../../src/layaAir/laya/resource/Texture2DArray.ts"],"sourcesContent":["/**\r\n * <code>ClassUtils</code> 是一个类工具类。\r\n */\r\nexport class ClassUtils {\r\n    static _classMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * 注册 Class 映射，方便在class反射时获取。\r\n     * @param\tclassName 映射的名字或者别名。\r\n     * @param\tclassDef 类的全名或者类的引用，全名比如:\"laya.Sprite\"。\r\n     */\r\n    static regClass(className: string, classDef: any): void {\r\n        ClassUtils._classMap[className] = classDef;\r\n    }\r\n\r\n    /**\r\n     * 根据名字返回类对象。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return 类对象\r\n     */\r\n    static getClass(className: string): any {\r\n        return ClassUtils._classMap[className];\r\n    }\r\n\r\n    /**\r\n     * 根据名称创建 Class 实例。\r\n     * @param\tclassName 类名(比如laya.display.Sprite)或者注册的别名(比如Sprite)。\r\n     * @return\t返回类的实例。\r\n     */\r\n    static getInstance(className: string): any {\r\n        var compClass: any = ClassUtils.getClass(className);\r\n        if (compClass) return new compClass();\r\n        else console.warn(\"[error] Undefined class:\", className);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { ClassUtils } from \"./laya/utils/ClassUtils\";\r\n\r\nexport type EnumDescriptor = {\r\n    name: string,\r\n    value: any,\r\n    extend?: EnumDescriptor,\r\n    [index: string]: any,\r\n}[] | any[] | Object | string;\r\n\r\nexport type PropertType = string | Function | Object | [PropertType] | [\"Record\", PropertType];\r\n\r\nexport interface PropertyDescriptor {\r\n    /** 属性名称。一般不需要设定。 */\r\n    name: string;\r\n    /** \r\n     * 属性类型。\r\n     * 基础类型有：number,string,boolean,any，注意是使用字符串，不是类型。\r\n     * 复合类型有：数组，使用类似[\"number\"]这样的方式表达；字典，使用类似[\"Record\", \"number\"]这样的方式表达，第一个元素固定为Record，第二个元素为实际类型。\r\n     * 其他对象类型可以直接使用类名，但要注意该类必须有使用regClass装饰器。也支持枚举类型。枚举类型不需要regClass。\r\n     * 如果不提供type，表示只用于ui样式，没有实际对应数据，和不会序列化\r\n     */\r\n    type: PropertType;\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 提示文字 */\r\n    tips: string;\r\n\r\n    /** 属性栏目。为多个属性设置相同的值，可以将它们显示在同一个Inspector栏目内。 */\r\n    catalog: string;\r\n    /* 栏目标题。不提供则直接使用栏目名称。 */\r\n    catalogCaption: string;\r\n    /* 栏目的显示顺序，数值越小显示在前面。不提供则按属性出现的顺序。*/\r\n    catalogOrder: number;\r\n\r\n    /**\r\n     * 编辑这个属性的控件。内置有：number,string,boolean,color,vec2,vec3,vec4,asset\r\n     * \r\n     *      number : 数字输入。\r\n     *      string : 字符串输入。默认为单行输入，如果是多行，需要激活multiline选项。\r\n     *      boolean : 布尔值输入，用于单选框或多选框。\r\n     *      color : 一个颜色框+调色盘+拾色器\r\n     *      vec2 : XY输入的组合\r\n     *      vec3 : XYZ输入的组合\r\n     *      vec4 : XYZW输入的组合\r\n     *      asset : 选择资源\r\n     * \r\n     * 一般来说，不需要设置这个选项，编辑器会自动根据属性类型选择适合的控件，但在某些情况下可以需要强制指定。\r\n     * 例如，如果数据类型是Vector4，但其实它表达的是颜色，用默认编辑Vector4的控件不适合，需要在这里设置为“color”。\r\n     * \r\n     * 显式设置inspector为null，则不会为属性构造inspector。这与hidden设置为true不同。hidden为true是创建但不可见，\r\n     * inspector为null的话则是完全不创建。\r\n     */\r\n    inspector: string;\r\n\r\n    /** 隐藏控制:true隐藏，false显示。常用于关联属性的情况。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），隐藏这个属性。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    hidden: boolean | string;\r\n\r\n    /** 只读控制。\r\n     * 1. 可以用表达式，通过将条件表达式放到字符串里，获得布尔类型的运算结果，例如\"!data.a && !data.b\"，表示属性a和属性b均为空时，条件成立（true），该属性只读。\r\n     * 2. 这里的data为当前组件的对象数据，data.a与data.b属性字段的a与b就是指当前组件中的a与b属性值，通过这种方法取到组件对象数据中的属性值，用于条件判断，作用于当前属性是否隐藏。\r\n     */\r\n    readonly: boolean | string;\r\n\r\n    /** 数据检查机制。\r\n     * 1. 将包括表达式的字符串传入，用于判断检查是否符合表达式的条件。符合条件，需要返回报错信息。\r\n     * 2. 使用示例为：\"if(value == data.a) return '不能与a的值相同'\"\r\n     * 其中的value为当前用户在该属性输入的值，data为当前组件的对象数据，data.a是当前组件中的a属性值\r\n     */\r\n    validator: string;\r\n\r\n    /** 是否序列化 */\r\n    serializable: boolean;\r\n    /** 属性在不参与序列化时，如果它的数据可能受其他可序列化的属性影响，在这里填写其他属性名称。这通常用于判断预制体属性是否覆盖。*/\r\n    affectBy?: string;\r\n\r\n    /** 是否多行文本输入 */\r\n    multiline: boolean;\r\n    /** 是否密码输入 */\r\n    password: boolean;\r\n    /** 如果true或者缺省，文本输入每次输入都提交；否则只有在失焦时才提交 */\r\n    submitOnTyping: boolean;\r\n    /** 输入文本的提示信息 */\r\n    prompt: string;\r\n\r\n    /** 定义枚举 */\r\n    enumSource: EnumDescriptor;\r\n\r\n    /** 是否反转布尔值。例如当属性值为true时，多选框显示为不勾选。 */\r\n    reverseBool: boolean;\r\n\r\n    /** 是否允许null值。默认为true。*/\r\n    nullable: boolean;\r\n\r\n    /** 数字的最小值 */\r\n    min: number,\r\n    /** 数字的最大值 */\r\n    max: number,\r\n    /** 数值范围，等同于一次性设置min和max。 */\r\n    range: [number, number];\r\n    /** 拖动方式改变数值时，每次数值改变的幅度。 */\r\n    step: number;\r\n    /** 小数点后的位数 */\r\n    fractionDigits: number;\r\n    /** 显示为百分比 */\r\n    percentage: boolean;\r\n\r\n    /** 对数组类型属性适用。表示数组是固定长度，不允许修改。*/\r\n    fixedLength: boolean;\r\n    /** 对数组类型属性适用。如果不提供，则表示数组允许所有操作，如果提供，则只允许列出的操作。*/\r\n    arrayActions: Array<\"append\" | \"insert\" | \"delete\" | \"move\">;\r\n    /** 对数组类型属性适用。这里可以定义数组元素的属性 */\r\n    elementProps: Partial<PropertyDescriptor>;\r\n\r\n    /** 对颜色类型属性适用。表示是否提供透明度a值的修改。 */\r\n    showAlpha: boolean;\r\n    /** 对颜色类型属性适用。它与default值不同的是，当default是null时，可以用defaultColor定义一个非null时的默认值。*/\r\n    defaultColor: any;\r\n    /** 对颜色类型属性适用。允许显示一个checkbox决定颜色是否为null。 */\r\n    colorNullable: boolean;\r\n\r\n    /** 对对象类型属性适用。如果为true，隐藏对象的标题，同时对象下的属性的显示缩进会减少一级。*/\r\n    hideHeader: boolean;\r\n    /** 对对象类型属性适用。对象创建时可以下拉选择一个类型。如果显示设置为null，则禁止菜单。默认是显示一个创建基类的菜单。*/\r\n    createObjectMenu: Array<string>;\r\n\r\n    /** 说明此属性是引用一个资源 */\r\n    isAsset?: boolean;\r\n    /** 对资源类型的属性适用。多个资源类型用逗号分隔，例如“Image,Audio\"。*/\r\n    assetTypeFilter: string;\r\n    /** 如果属性类型是string，并且进行资源选择时，这个选项决定属性值是资源原始路径还是res://uuid这样的格式。如果是true，则是资源原始路径。默认false。*/\r\n    useAssetPath: boolean;\r\n    /** 对资源类型的属性适用。选择资源时是否允许选择内部资源 */\r\n    allowInternalAssets: boolean;\r\n\r\n    /** 显示位置。语法：before xxx/after xxx/first/last。 */\r\n    position: string;\r\n\r\n    /** 表示属性是私有属性。私有属性不会显示在Inspector里，但会序列化保存。 */\r\n    \"private\": boolean;\r\n\r\n    /** 增加缩进，单位是层级，不是像素。 */\r\n    addIndent: number;\r\n\r\n    /** 表示属性是否允许多选情况下编辑。默认true。 */\r\n    allowMultipleObjects: boolean;\r\n\r\n    /** 表示属性不显示在派生类的属性表中 */\r\n    hideInDeriveType: boolean;\r\n\r\n    /** 属性改变时额外调用对象的一个函数，这里是函数名称。\r\n     * 函数原型是func(key?:string)。其中key在改变成员内部属性时会传递。\r\n     * 例如改变数据某个元素的内部属性，则key是这个元素的索引。 \r\n     */\r\n    onChange: string;\r\n\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nexport interface TypeDescriptor {\r\n    /** 标题。如果不提供，则使用name。 */\r\n    caption: string;\r\n    /** 添加到组件菜单。 */\r\n    menu: string;\r\n    /** 图标。*/\r\n    icon: string;\r\n    /** 属性列表 */\r\n    properties: Array<Partial<PropertyDescriptor>>;\r\n    /** 编辑这个类实例的控件 */\r\n    inspector: string;\r\n    /** 对Component使用，表示这个组件允许挂载的节点类型。默认null */\r\n    worldType: \"2d\" | \"3d\" | null;\r\n    /** 额外的选项 */\r\n    options: Record<string, any>;\r\n}\r\n\r\nfunction dummy() { }\r\n\r\n/**\r\n * 注册一个类型，注册后才能被序列化系统自动保存和载入。\r\n */\r\nexport function regClass(assetId?: string): any {\r\n    return function (constructor: Function) {\r\n        ClassUtils.regClass(assetId, constructor);\r\n    };\r\n}\r\n\r\n/**\r\n * 设置类型的额外信息。\r\n * @param info 类型的额外信息\r\n */\r\nexport function classInfo(info?: Partial<TypeDescriptor>): any { return dummy; }\r\n\r\n/**\r\n * 设置组件可以在编辑器环境中执行完整声明周期。\r\n */\r\nexport function runInEditor(constructor: Function): void { }\r\n\r\n/**\r\n * 使用这个装饰器，可以使属性显示在编辑器属性设置面板上，并且能序列化保存。\r\n * @param info 属性的类型，如: Number,\"number\",[Number],[\"Record\", Number]等。或传递对象描述详细信息，例如{ type: \"string\", multiline: true }。\r\n */\r\nexport function property(info: PropertType | Partial<PropertyDescriptor>): any { return dummy; }\r\n","/**\r\n *  Config 用于配置一些全局参数。如需更改，请在初始化引擎之前设置。\r\n */\r\nexport class Config {\r\n    /**\r\n    * 画布设置是否抗锯齿，只对2D(WebGL)有效,3D抗锯齿在camera或RT上面控制。\r\n    */\r\n    static isAntialias: boolean = true;\r\n    /**\r\n     * 是否使用webgl2\r\n     */\r\n    static useWebGL2: boolean = true;\r\n    /*\r\n     * 限制fps \r\n     */\r\n    static FPS = 60;\r\n    /**\r\n     * 是否使用视网膜模式，在iOS上面可能会创建更大的RT，来达到更佳的效果\r\n     */\r\n    static useRetinalCanvas: boolean = false;\r\n\r\n    //-------------2D设置---------------------\r\n    /**\r\n     * 2D动画 Animation 的默认播放时间间隔，单位为毫秒。\r\n     */\r\n    static animationInterval: number = 50;\r\n\r\n    /**\r\n       * 当使用webGL渲染2d的时候，每次创建vb是否直接分配足够64k个顶点的缓存。这样可以提高效率。\r\n       */\r\n    static webGL2D_MeshAllocMaxMem: boolean = true;\r\n\r\n    /*\r\n     *默认文本大小，默认为12\r\n     */\r\n    static defaultFontSize: number = 12;\r\n    /*\r\n     *默认文本字体，默认为Arial\r\n     */\r\n    static defaultFont: string = \"Arial\";\r\n\r\n    //-------------引擎内部使用-------------\r\n    /**\r\n     * 设置画布是否透明，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isAlpha: boolean = false;\r\n    /**\r\n     * 设置画布是否包含深度\r\n     */\r\n    static isDepth: boolean = false;\r\n    /**\r\n     * 表明在一个系统性能低的环境是否创建该上下文的boolean值\r\n     */\r\n    static isfailIfMajorPerformanceCaveat: boolean = false;\r\n\r\n    static powerPreference: WebGLPowerPreference = \"default\";\r\n    /**\r\n     * 设置画布是否预乘，只对2D(WebGL)、3D有效。\r\n     */\r\n    static premultipliedAlpha: boolean = true;\r\n    /**\r\n     * 设置画布的是否开启模板缓冲，只对2D(WebGL)、3D有效。\r\n     */\r\n    static isStencil: boolean = false;\r\n    /**\r\n     * 是否保留渲染缓冲区。\r\n     */\r\n    static preserveDrawingBuffer: boolean = false;\r\n    /**\r\n     * 是否打印Webgl指令，同时定位webgl报错\r\n     */\r\n    static printWebglOrder: boolean = false;\r\n    \r\n    /**在IOS下，一些字体会找不到，引擎提供了字体映射功能，比如默认会把 \"黑体\" 映射为 \"黑体-简\"，更多映射，可以自己添加*/\r\n    static fontFamilyMap: any = { \"报隶\": \"报隶-简\", \"黑体\": \"黑体-简\", \"楷体\": \"楷体-简\", \"兰亭黑\": \"兰亭黑-简\", \"隶变\": \"隶变-简\", \"凌慧体\": \"凌慧体-简\", \"翩翩体\": \"翩翩体-简\", \"苹方\": \"苹方-简\", \"手札体\": \"手札体-简\", \"宋体\": \"宋体-简\", \"娃娃体\": \"娃娃体-简\", \"魏碑\": \"魏碑-简\", \"行楷\": \"行楷-简\", \"雅痞\": \"雅痞-简\", \"圆体\": \"圆体-简\" };\r\n\r\n    /**tempConfig Fixed number of frames */\r\n    static fixedFrames: boolean = true;\r\n\t/*资源引用参数为0是否立即删除资源，如果不立即删除请调用DestrotyUnUse*/\r\n    static destroyResourceImmediatelyDefault = true;\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n * 静态常量集合\r\n */\r\nexport class Const {\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n\r\n    static BYTES_PE: number = 4;\r\n    static BYTES_PIDX: number = 2;\r\n\r\n    static MAX_CLIP_SIZE: number = 99999999;\r\n}\r\n\r\n/**\r\n * @private\r\n * 节点标志\r\n */\r\nexport class NodeFlags {\r\n    static NOT_ACTIVE = 0x01;\r\n    static ACTIVE_INHIERARCHY = 0x02;\r\n    static AWAKED = 0x04;\r\n    static NOT_READY = 0x08;\r\n    static DISPLAY = 0x10;\r\n    static HAS_ZORDER = 0x20;\r\n    static HAS_MOUSE = 0x40;\r\n    static DISPLAYED_INSTAGE = 0x80;\r\n    static DRAWCALL_OPTIMIZE = 0x100;\r\n    static PROCESS_COLLISIONS = 0x200;\r\n    static PROCESS_TRIGGERS = 0x400;\r\n    static HAS_SCRIPT = 0x800;\r\n    static ESCAPE_DRAWING_TO_TEXTURE = 0x1000;\r\n    static DISABLE_INNER_CLIPPING = 0x2000;\r\n    static DISABLE_OUTER_CLIPPING = 0x4000;\r\n    static DISABLE_VISIBILITY = 0x8000;\r\n    static EDITING_NODE = 0x10000;\r\n    static HIDE_BY_EDITOR = 0x20000;\r\n    static LOCK_BY_EDITOR = 0x40000;\r\n}\r\n\r\nexport class HideFlags {\r\n    static HideInHierarchy = 0x1;\r\n    static HideInInspector = 0x2;\r\n    static DontSave = 0x4;\r\n    static HideAndDontSave = 0x7;\r\n}","import { Timer } from \"./laya/utils/Timer\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\n\r\n/**\r\n * @internal\r\n * 使用全局类的时候，避免引用其他模块\r\n */\r\nexport class ILaya {\r\n    static Loader: typeof Loader = null;\r\n    static Context: typeof Context = null;\r\n    static Browser: typeof Browser = null;\r\n\r\n    static Laya: any = null;\r\n    static loader: Loader = null;\r\n    static timer: Timer = null;\r\n    static systemTimer: Timer = null;\r\n    static physicsTimer: Timer = null;\r\n    static stage: Stage = null;\r\n}\r\n","export class LayaEnv {\r\n    static version: string = \"3.0.4\";\r\n    static isPlaying: boolean = true;\r\n    static isPreview: boolean = false;\r\n    static isConch: boolean = (<any>window).conch != null;\r\n\r\n    static beforeInit: (stageConfig: IStageConfig) => void;\r\n    static afterInit: () => void;\r\n}\r\n\r\nexport interface IStageConfig {\r\n    designWidth?: number;\r\n    designHeight?: number;\r\n    scaleMode?: string;\r\n    screenMode?: string;\r\n    alignV?: string;\r\n    alignH?: string;\r\n    backgroundColor?: string;\r\n}","/**\r\n * <p> <code>Pool</code> 是对象池类，用于对象的存储、重复使用。</p>\r\n * <p>合理使用对象池，可以有效减少对象创建的开销，避免频繁的垃圾回收，从而优化游戏流畅度。</p>\r\n */\r\nexport class Pool {\r\n    /**@private */\r\n    private static _CLSID: number = 0;\r\n    /**@private */\r\n    private static POOLSIGN: string = \"__InPool\";\r\n    /**@private  对象存放池。*/\r\n    private static _poolDic: any = {};\r\n\r\n    /**\r\n     * 根据对象类型标识字符，获取对象池。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池。\r\n     */\r\n    static getPoolBySign(sign: string): any[] {\r\n        return Pool._poolDic[sign] || (Pool._poolDic[sign] = []);\r\n    }\r\n\r\n    /**\r\n     * 清除对象池的对象。\r\n     * @param sign 对象类型标识字符。\r\n     */\r\n    static clearBySign(sign: string): void {\r\n        if (Pool._poolDic[sign]) Pool._poolDic[sign].length = 0;\r\n    }\r\n\r\n    /**\r\n     * 将对象放到对应类型标识的对象池中。\r\n     * @param sign 对象类型标识字符。\r\n     * @param item 对象。\r\n     */\r\n    static recover(sign: string, item: any): void {\r\n        if (item[Pool.POOLSIGN] !== false) //有这个标志，才表明对象是从Pool里获取的，允许recover\r\n            return;\r\n        item[Pool.POOLSIGN] = true;\r\n        Pool.getPoolBySign(sign).push(item);\r\n    }\r\n\r\n    /**\r\n     * 根据类名进行回收，如果类有类名才进行回收，没有则不回收\r\n     * @param\tinstance 类的具体实例\r\n     */\r\n    static recoverByClass(instance: any): void {\r\n        if (instance) {\r\n            var className: string = instance[\"__className\"] || instance.constructor._$gid;\r\n            if (className) Pool.recover(className, instance);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 返回类的唯一标识\r\n     */\r\n    private static _getClassSign(cla: any): string {\r\n        var className = cla[\"__className\"] || cla[\"_$gid\"];\r\n        if (!className) {\r\n            cla[\"_$gid\"] = className = Pool._CLSID + \"\";\r\n            Pool._CLSID++;\r\n        }\r\n        return className;\r\n    }\r\n\r\n    /**\r\n     * 根据类型创建对象\r\n     * @param\tcls 类型\r\n     */\r\n    static createByClass<T>(cls: new () => T): T {\r\n        return Pool.getItemByClass(Pool._getClassSign(cls), cls);\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则根据传入的类型，创建一个新的对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param cls 用于创建该类型对象的类。\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByClass<T>(sign: string, cls: new () => T): T {\r\n        let rst: any;\r\n        let pool = Pool.getPoolBySign(sign);\r\n        if (pool.length)\r\n            rst = pool.pop();\r\n        else\r\n            rst = new cls();\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * <p>根据传入的对象类型标识字符，获取对象池中此类型标识的一个对象实例。</p>\r\n     * <p>当对象池中无此类型标识的对象时，则使用传入的创建此类型对象的函数，新建一个对象返回。</p>\r\n     * @param sign 对象类型标识字符。\r\n     * @param createFun 用于创建该类型对象的方法。\r\n     * @param caller this对象\r\n     * @return 此类型标识的一个对象。\r\n     */\r\n    static getItemByCreateFun(sign: string, createFun: Function, caller: any = null): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : createFun.call(caller);\r\n        rst[Pool.POOLSIGN] = false;\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 根据传入的对象类型标识字符，获取对象池中已存储的此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     * @param sign 对象类型标识字符。\r\n     * @return 对象池中此类型的一个对象，如果对象池中无此类型的对象，则返回 null 。\r\n     */\r\n    static getItem(sign: string): any {\r\n        var pool: any[] = Pool.getPoolBySign(sign);\r\n        var rst: any = pool.length ? pool.pop() : null;\r\n        if (rst) {\r\n            rst[Pool.POOLSIGN] = false;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n}\r\n\r\n\r\n","var _gid: number = 1;\r\nconst _pi: number = 180 / Math.PI;\r\nconst _pi2: number = Math.PI / 180;\r\n\r\n/**\r\n * <code>Utils</code> 是工具类。\r\n */\r\nexport class Utils {\r\n\r\n    /**\r\n     * 角度转弧度。\r\n     * @param\tangle 角度值。\r\n     * @return\t返回弧度值。\r\n     */\r\n    static toRadian(angle: number): number {\r\n        return angle * _pi2;\r\n    }\r\n\r\n    /**\r\n     * 弧度转换为角度。\r\n     * @param\tradian 弧度值。\r\n     * @return\t返回角度值。\r\n     */\r\n    static toAngle(radian: number): number {\r\n        return radian * _pi;\r\n    }\r\n\r\n    /**\r\n     * 将传入的 uint 类型颜色值转换为字符串型颜色值。\r\n     * @param color 颜色值。\r\n     * @return 字符串型颜色值。\r\n     */\r\n    static toHexColor(color: number): string {\r\n        if (color < 0 || isNaN(color)) return null;\r\n        var str: string = color.toString(16);\r\n        while (str.length < 6) str = \"0\" + str;\r\n        return \"#\" + str;\r\n    }\r\n\r\n    static fromStringColor(value: string): number {\r\n        if (!value)\r\n            return 0;\r\n\r\n        if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n            let p1 = value.indexOf(\"(\");\r\n            let p2 = value.indexOf(\")\");\r\n            if (p1 == -1 || p2 == -1)\r\n                return 0;\r\n\r\n            value = value.substring(p1 + 1, p2);\r\n            let arr: any[] = value.split(\",\");\r\n            let len = arr.length;\r\n            for (let i = 0; i < len; i++) {\r\n                arr[i] = parseFloat(arr[i]);\r\n                if (isNaN(arr[i]))\r\n                    arr[i] = 0;\r\n            }\r\n            if (arr.length == 4)\r\n                return (arr[0] << 24) + (arr[1] << 16) + (arr[2] << 8) + Math.round(arr[3] * 255);\r\n            else\r\n                return (arr[0] << 16) + (arr[1] << 8) + arr[2];\r\n        } else {\r\n            value.charAt(0) === '#' && (value = value.substring(1));\r\n            let len = value.length;\r\n            if (len === 3 || len === 4) {\r\n                let temp: string = \"\";\r\n                for (let i = 0; i < len; i++) {\r\n                    temp += (value[i] + value[i]);\r\n                }\r\n                value = temp;\r\n            }\r\n            return parseInt(value, 16);\r\n        }\r\n    }\r\n\r\n    /**获取一个全局唯一ID。*/\r\n    static getGID(): number {\r\n        return _gid++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清空source数组，复制array数组的值。\r\n     * @param\tsource 需要赋值的数组。\r\n     * @param\tarray 新的数组值。\r\n     * @return \t复制后的数据 source 。\r\n     */\r\n    static copyArray(source: any[], array: any[]): any[] {\r\n        source || (source = []);\r\n        if (!array) return source;\r\n        source.length = array.length;\r\n        var len: number = array.length;\r\n        for (let i = 0; i < len; i++) {\r\n            source[i] = array[i];\r\n        }\r\n        return source;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 批量移动点坐标。\r\n     * @param points 坐标列表。\r\n     * @param x x轴偏移量。\r\n     * @param y y轴偏移量。\r\n     */\r\n    static transPointList(points: any[], x: number, y: number): void {\r\n        var i: number, len: number = points.length;\r\n        for (i = 0; i < len; i += 2) {\r\n            points[i] += x;\r\n            points[i + 1] += y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 解析一个字符串，并返回一个整数。和JS原生的parseInt不同：如果str为空或者非数字，原生返回NaN，这里返回0。\r\n     * @param\tstr\t\t要被解析的字符串。\r\n     * @param\tradix\t表示要解析的数字的基数。默认值为0，表示10进制，其他值介于 2 ~ 36 之间。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。如果该参数不在上述范围内，则此方法返回 0。\r\n     * @return\t返回解析后的数字。\r\n     */\r\n    static parseInt(str: string, radix: number = 0): number {\r\n        var result: any = parseInt(str, radix);\r\n        if (isNaN(result)) return 0;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 获得路径中的文件名（包含扩展名）\r\n     */\r\n    static getBaseName(path: string): string {\r\n        let i = path.lastIndexOf(\"/\");\r\n        if (i != -1)\r\n            path = path.substring(i + 1);\r\n        i = path.indexOf(\"?\");\r\n        if (i != -1)\r\n            path = path.substring(0, i);\r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * 获取文件名的扩展名，并转换为小写字母。例如\"1.abc\"将返回abc。\r\n     */\r\n    static getFileExtension(path: string): string {\r\n        let i = path.lastIndexOf(\".\");\r\n\r\n        if (i != -1) {\r\n            let ext = path.substring(i + 1).toLowerCase();\r\n            let j = ext.indexOf(\"?\");\r\n            if (j != -1)\r\n                ext = ext.substring(0, j);\r\n            if (ext === \"ls\") { //lanit.ls ltcb.ls 这类特殊扩展名的支持\r\n                let k = path.lastIndexOf(\".\", i - 1);\r\n                if (k != -1) {\r\n                    let ext2 = path.substring(k + 1, i + 1) + ext;\r\n                    if (ext2 === \"lanit.ls\" || ext2 === \"ltcb.ls\")\r\n                        return ext2;\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        else\r\n            return \"\";\r\n    }\r\n\r\n    /**\r\n     * 更改文件名的扩展名。\r\n     */\r\n    static replaceFileExtension(path: string, newExt: string, excludeDot?: boolean): string {\r\n        if (!path)\r\n            return path;\r\n        let i = path.lastIndexOf(\".\");\r\n        if (newExt.length > 0 && !excludeDot)\r\n            newExt = \".\" + newExt;\r\n        if (i != -1) {\r\n            let j = path.indexOf(\"?\", i);\r\n            if (j != -1)\r\n                return path.substring(0, i) + newExt + path.substring(j);\r\n            else\r\n                return path.substring(0, i) + newExt;\r\n        }\r\n        else\r\n            return path + newExt;\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <code>Component</code> 类用于创建组件的基类。\r\n */\r\nexport class Component {\r\n    /** @private */\r\n    _id: number;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n    /**@private */\r\n    private _enableState: boolean;\r\n    /** @internal */\r\n    _status: number = 0; //1-awaked,2-starting,3-started,4-destroyed\r\n\r\n    /**\r\n     * 获取所属Node节点。\r\n     */\r\n    owner: Node;\r\n    /** @internal */\r\n    _enabled: boolean = true;\r\n    /**\r\n     * 是否单例，即同一个节点只能添加此类型的脚本一次\r\n     */\r\n    _singleton?: boolean = true;\r\n    /**\r\n     * 是否可以在IDE环境中运行\r\n     */\r\n    runInEditor?: boolean;\r\n    scriptPath?: string;\r\n    _extra?: IComponentExtra;\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /**\r\n     * 创建一个新的 <code>Component</code> 实例。\r\n     */\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * 唯一标识ID。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 是否启用组件。\r\n     */\r\n    get enabled(): boolean {\r\n        return this._enabled;\r\n    }\r\n\r\n    set enabled(value: boolean) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner)\r\n                this._setActive(value && this.owner.activeInHierarchy);\r\n        }\r\n    }\r\n\r\n    get awaked(): boolean {\r\n        return this._status > 0;\r\n    }\r\n\r\n    /**\r\n     * 是否已经销毁 。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._status == 4;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    _isScript(): boolean {\r\n        return false;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _resetComp(): void {\r\n        this._enabled = true;\r\n        this._status = 0;\r\n        this._enableState = false;\r\n        this.owner = null;\r\n    }\r\n\r\n    _setOwner(node: Node) {\r\n        if (this._status != 0) {\r\n            throw 'reuse a destroyed component';\r\n        }\r\n        this.owner = node;\r\n\r\n        if (this._isScript())\r\n            node._setBit(NodeFlags.HAS_SCRIPT, true);\r\n\r\n        this._onAdded();\r\n        this.onAdded();\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onAdded(): void {\r\n    }\r\n\r\n    /**\r\n   * 被激活后调用，可根据需要重写此方法\r\n   * @internal\r\n   */\r\n    protected _onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 被激活后调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onEnable(): void {\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n    * 被禁用时调用，可根据需要重写此方法\r\n    * @internal\r\n    * 销毁组件\r\n    */\r\n    protected _onDisable(): void {\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * 被销毁时调用，可根据需要重写此方法\r\n     * @internal\r\n     */\r\n    protected _onDestroy(): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, interactMap: any = null): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parseInteractive(data: any = null, spriteMap: any = null) {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _cloneTo(dest: Component): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setActive(value: boolean): void {\r\n        if (value) {\r\n            if (this._status == 0) {\r\n                this._status = 1;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    this._onAwake();\r\n                    this.onAwake();\r\n                }\r\n            }\r\n            if (this._enabled && !this._enableState) {\r\n                this._enableState = true;\r\n\r\n                if (LayaEnv.isPlaying || this.runInEditor) {\r\n                    let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                    driver.add(this);\r\n\r\n                    if (LayaEnv.isPlaying && this._isScript())\r\n                        this.setupScript();\r\n\r\n                    this._onEnable();\r\n                }\r\n            }\r\n        } else if (this._enableState) {\r\n            this._enableState = false;\r\n            if (LayaEnv.isPlaying || this.runInEditor) {\r\n                let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n                driver.remove(this);\r\n\r\n                ILaya.stage.offAllCaller(this);\r\n\r\n                this._onDisable();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected setupScript() {\r\n    }\r\n\r\n    /**\r\n     * 销毁组件\r\n     */\r\n    destroy(): void {\r\n        if (this._status == 4)\r\n            return;\r\n\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroy(second?: boolean): void {\r\n        if (second) {\r\n            this._onDestroy();\r\n            this.onDestroy();\r\n            if (this.onReset) {\r\n                this.onReset();\r\n                this._resetComp();\r\n                Pool.recoverByClass(this);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._setActive(false);\r\n        this._status = 4;\r\n\r\n        let driver = (this.owner._is3D && this.owner._scene)?._componentDriver || ILaya.stage._componentDriver;\r\n        driver._toDestroys.add(this);\r\n    }\r\n\r\n    /**\r\n     * 被添加到节点后调用，和Awake不同的是即使节点未激活onAdded也会调用。\r\n     */\r\n    onAdded(): void {\r\n    }\r\n\r\n    /**\r\n     * 重置组件参数到默认值，如果实现了这个函数，则组件会被重置并且自动回收到对象池，方便下次复用\r\n     * 如果没有重置，则不进行回收复用\r\n\r\n     */\r\n    onReset?(): void;\r\n\r\n    /**\r\n     * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n     */\r\n    onAwake(): void {\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     */\r\n    onEnable(): void {\r\n    }\r\n\r\n    /**\r\n     * 第一次执行update之前执行，只会执行一次\r\n     */\r\n    onStart?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onUpdate?(): void;\r\n\r\n    /**\r\n     * 每帧更新时执行，在update之后执行，尽量不要在这里写大循环逻辑或者使用getComponent方法\r\n     */\r\n    onLateUpdate?(): void;\r\n\r\n    /**\r\n     * 渲染之前执行\r\n     */\r\n    onPreRender?(): void;\r\n\r\n    /**\r\n     * 渲染之后执行\r\n     */\r\n    onPostRender?(): void;\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     */\r\n    onDisable(): void {\r\n    }\r\n\r\n    /**\r\n     * 手动调用节点销毁时执行\r\n     */\r\n    onDestroy(): void {\r\n    }\r\n}\r\n\r\nexport interface IComponentExtra { }","import { Point } from \"./Point\";\r\nimport { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <p> <code>Matrix</code> 类表示一个转换矩阵，它确定如何将点从一个坐标空间映射到另一个坐标空间。</p>\r\n * <p>您可以对一个显示对象执行不同的图形转换，方法是设置 Matrix 对象的属性，将该 Matrix 对象应用于 Transform 对象的 matrix 属性，然后应用该 Transform 对象作为显示对象的 transform 属性。这些转换函数包括平移（x 和 y 重新定位）、旋转、缩放和倾斜。</p>\r\n */\r\nexport class Matrix {\r\n\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTY: Matrix = new Matrix();\r\n    /**用于中转使用的 <code>Matrix</code> 对象。*/\r\n    static TEMP: Matrix = new Matrix();\r\n    /**@internal */\r\n    static _createFun: Function|null = null;\r\n\r\n    /**缩放或旋转图像时影响像素沿 x 轴定位的值。*/\r\n    a: number;\r\n    /**旋转或倾斜图像时影响像素沿 y 轴定位的值。*/\r\n    b: number;\r\n    /**旋转或倾斜图像时影响像素沿 x 轴定位的值。*/\r\n    c: number;\r\n    /**缩放或旋转图像时影响像素沿 y 轴定位的值。*/\r\n    d: number;\r\n    /**沿 x 轴平移每个点的距离。*/\r\n    tx: number;\r\n    /**沿 y 轴平移每个点的距离。*/\r\n    ty: number;\r\n    /**@internal 是否有旋转缩放操作*/\r\n    _bTransform: boolean = false;\r\n\r\n    /**\r\n     * 使用指定参数创建新的 <code>Matrix</code> 对象。\r\n     * @param a\t\t（可选）缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param b\t\t（可选）旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param c\t\t（可选）旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param d\t\t（可选）缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param tx\t（可选）沿 x 轴平移每个点的距离。\r\n     * @param ty\t（可选）沿 y 轴平移每个点的距离。\r\n     */\r\n    constructor(a: number = 1, b: number = 0, c: number = 0, d: number = 1, tx: number = 0, ty: number = 0, nums: number = 0) {\r\n        if (Matrix._createFun != null) {\r\n            return Matrix._createFun(a, b, c, d, tx, ty, nums);\r\n        }\r\n        this.a = a;\r\n        this.b = b;\r\n        this.c = c;\r\n        this.d = d;\r\n        this.tx = tx;\r\n        this.ty = ty;\r\n        this._checkTransform();\r\n    }\r\n\r\n    /**\r\n     * 将本矩阵设置为单位矩阵。\r\n     * @return 返回当前矩形。\r\n     */\r\n    identity(): Matrix {\r\n        this.a = this.d = 1;\r\n        this.b = this.tx = this.ty = this.c = 0;\r\n        this._bTransform = false;\r\n        return this;\r\n    }\r\n\r\n    /**@internal */\r\n    _checkTransform(): boolean {\r\n        return this._bTransform = (this.a !== 1 || this.b !== 0 || this.c !== 0 || this.d !== 1);\r\n    }\r\n\r\n    /**\r\n     * 设置沿 x 、y 轴平移每个点的距离。\r\n     * @param\tx 沿 x 轴平移每个点的距离。\r\n     * @param\ty 沿 y 轴平移每个点的距离。\r\n     * @return\t返回对象本身\r\n     */\r\n    setTranslate(x: number, y: number): Matrix {\r\n        this.tx = x;\r\n        this.ty = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 沿 x 和 y 轴平移矩阵，平移的变化量由 x 和 y 参数指定。\r\n     * @param\tx 沿 x 轴向右移动的量（以像素为单位）。\r\n     * @param\ty 沿 y 轴向下移动的量（以像素为单位）。\r\n     * @return 返回此矩形对象。\r\n     */\r\n    translate(x: number, y: number): Matrix {\r\n        this.tx += x;\r\n        this.ty += y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对矩阵应用缩放转换。\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    scale(x: number, y: number): Matrix {\r\n        this.a *= x;\r\n        this.d *= y;\r\n        this.c *= x;\r\n        this.b *= y;\r\n        this.tx *= x;\r\n        this.ty *= y;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用旋转转换。\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     * @return\t返回矩阵对象本身\r\n     */\r\n    rotate(angle: number): Matrix {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var a1: number = this.a;\r\n        var c1: number = this.c;\r\n        var tx1: number = this.tx;\r\n\r\n        this.a = a1 * cos - this.b * sin;\r\n        this.b = a1 * sin + this.b * cos;\r\n        this.c = c1 * cos - this.d * sin;\r\n        this.d = c1 * sin + this.d * cos;\r\n        this.tx = tx1 * cos - this.ty * sin;\r\n        this.ty = tx1 * sin + this.ty * cos;\r\n        this._bTransform = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对 Matrix 对象应用倾斜转换。\r\n     * @param\tx 沿着 X 轴的 2D 倾斜弧度。\r\n     * @param\ty 沿着 Y 轴的 2D 倾斜弧度。\r\n     * @return 当前 Matrix 对象。\r\n     */\r\n    skew(x: number, y: number): Matrix {\r\n        var tanX: number = Math.tan(x);\r\n        var tanY: number = Math.tan(y);\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        this.a += tanY * this.c;\r\n        this.b += tanY * this.d;\r\n        this.c += tanX * a1;\r\n        this.d += tanX * b1;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 对指定的点应用当前矩阵的逆转化并返回此点。\r\n     * @param\tout 待转化的点 Point 对象。\r\n     * @return\t返回out\r\n     */\r\n    invertTransformPoint(out: Point): Point {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n\r\n        var a2: number = d1 / n;\r\n        var b2: number = -b1 / n;\r\n        var c2: number = -c1 / n;\r\n        var d2: number = a1 / n;\r\n        var tx2: number = (c1 * this.ty - d1 * tx1) / n;\r\n        var ty2: number = -(a1 * this.ty - b1 * tx1) / n;\r\n        return out.setTo(a2 * out.x + c2 * out.y + tx2, b2 * out.x + d2 * out.y + ty2);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPoint(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y + this.tx, this.b * out.x + this.d * out.y + this.ty);\r\n    }\r\n\r\n    /**\r\n     * 将 Matrix 对象表示的几何转换应用于指定点，忽略tx、ty。\r\n     * @param\tout 用来设定输出结果的点。\r\n     * @return\t返回out\r\n     */\r\n    transformPointN(out: Point): Point {\r\n        return out.setTo(this.a * out.x + this.c * out.y /*+ tx*/, this.b * out.x + this.d * out.y /*+ ty*/);\r\n    }\r\n\r\n    /**\r\n     * 获取 X 轴缩放值。\r\n     * @return  X 轴缩放值。\r\n     */\r\n    getScaleX(): number {\r\n        return this.b === 0 ? this.a : Math.sqrt(this.a * this.a + this.b * this.b);\r\n    }\r\n\r\n    /**\r\n     * 获取 Y 轴缩放值。\r\n     * @return Y 轴缩放值。\r\n     */\r\n    getScaleY(): number {\r\n        return this.c === 0 ? this.d : Math.sqrt(this.c * this.c + this.d * this.d);\r\n    }\r\n\r\n    /**\r\n     * 执行原始矩阵的逆转换。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    invert(): Matrix {\r\n        var a1: number = this.a;\r\n        var b1: number = this.b;\r\n        var c1: number = this.c;\r\n        var d1: number = this.d;\r\n        var tx1: number = this.tx;\r\n        var n: number = a1 * d1 - b1 * c1;\r\n        this.a = d1 / n;\r\n        this.b = -b1 / n;\r\n        this.c = -c1 / n;\r\n        this.d = a1 / n;\r\n        this.tx = (c1 * this.ty - d1 * tx1) / n;\r\n        this.ty = -(a1 * this.ty - b1 * tx1) / n;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     *  将 Matrix 的成员设置为指定值。\r\n     * @param\ta 缩放或旋转图像时影响像素沿 x 轴定位的值。\r\n     * @param\tb 旋转或倾斜图像时影响像素沿 y 轴定位的值。\r\n     * @param\tc 旋转或倾斜图像时影响像素沿 x 轴定位的值。\r\n     * @param\td 缩放或旋转图像时影响像素沿 y 轴定位的值。\r\n     * @param\ttx 沿 x 轴平移每个点的距离。\r\n     * @param\tty 沿 y 轴平移每个点的距离。\r\n     * @return 当前矩阵对象。\r\n     */\r\n    setTo(a: number, b: number, c: number, d: number, tx: number, ty: number): Matrix {\r\n        this.a = a, this.b = b, this.c = c, this.d = d, this.tx = tx, this.ty = ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定矩阵与当前矩阵连接，从而将这两个矩阵的几何效果有效地结合在一起。\r\n     * @param\tmatrix 要连接到源矩阵的矩阵。\r\n     * @return\t当前矩阵。\r\n     */\r\n    concat(matrix: Matrix): Matrix {\r\n        var a: number = this.a;\r\n        var c: number = this.c;\r\n        var tx: number = this.tx;\r\n        this.a = a * matrix.a + this.b * matrix.c;\r\n        this.b = a * matrix.b + this.b * matrix.d;\r\n        this.c = c * matrix.a + this.d * matrix.c;\r\n        this.d = c * matrix.b + this.d * matrix.d;\r\n        this.tx = tx * matrix.a + this.ty * matrix.c + matrix.tx;\r\n        this.ty = tx * matrix.b + this.ty * matrix.d + matrix.ty;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘后的结果赋值给指定的输出对象。\r\n     * @param\tm1 矩阵一。\r\n     * @param\tm2 矩阵二。\r\n     * @param\tout 输出对象。\r\n     * @return\t结果输出对象 out。\r\n     */\r\n    static mul(m1: Matrix, m2: Matrix, out: Matrix): Matrix {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out.a = aa * ba + ab * bc;\r\n            out.b = aa * bb + ab * bd;\r\n            out.c = ac * ba + ad * bc;\r\n            out.d = ac * bb + ad * bd;\r\n            out.tx = ba * atx + bc * aty + btx;\r\n            out.ty = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out.a = aa * ba;\r\n            out.b = ab * bd;\r\n            out.c = ac * ba;\r\n            out.d = ad * bd;\r\n            out.tx = ba * atx + btx;\r\n            out.ty = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 将指定的两个矩阵相乘，结果赋值给指定的输出数组，长度为16。\r\n     * @param m1\t矩阵一。\r\n     * @param m2\t矩阵二。\r\n     * @param out\t输出对象Array。\r\n     * @return 结果输出对象 out。\r\n     */\r\n    static mul16(m1: Matrix, m2: Matrix, out: any[]): any[] {\r\n        var aa: number = m1.a, ab: number = m1.b, ac: number = m1.c, ad: number = m1.d, atx: number = m1.tx, aty: number = m1.ty;\r\n        var ba: number = m2.a, bb: number = m2.b, bc: number = m2.c, bd: number = m2.d, btx: number = m2.tx, bty: number = m2.ty;\r\n        if (bb !== 0 || bc !== 0) {\r\n            out[0] = aa * ba + ab * bc;\r\n            out[1] = aa * bb + ab * bd;\r\n            out[4] = ac * ba + ad * bc;\r\n            out[5] = ac * bb + ad * bd;\r\n            out[12] = ba * atx + bc * aty + btx;\r\n            out[13] = bb * atx + bd * aty + bty;\r\n        } else {\r\n            out[0] = aa * ba;\r\n            out[1] = ab * bd;\r\n            out[4] = ac * ba;\r\n            out[5] = ad * bd;\r\n            out[12] = ba * atx + btx;\r\n            out[13] = bd * aty + bty;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对矩阵应用缩放转换。反向相乘\r\n     * @param\tx 用于沿 x 轴缩放对象的乘数。\r\n     * @param\ty 用于沿 y 轴缩放对象的乘数。\r\n     */\r\n    scaleEx(x: number, y: number): void {\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = x * ba;\r\n            this.b = x * bb;\r\n            this.c = y * bc;\r\n            this.d = y * bd;\r\n        } else {\r\n            this.a = x * ba;\r\n            this.b = 0 * bd;\r\n            this.c = 0 * ba;\r\n            this.d = y * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 对 Matrix 对象应用旋转转换。反向相乘\r\n     * @param\tangle 以弧度为单位的旋转角度。\r\n     */\r\n    rotateEx(angle: number): void {\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var ba: number = this.a, bb: number = this.b, bc: number = this.c, bd: number = this.d;\r\n        if (bb !== 0 || bc !== 0) {\r\n            this.a = cos * ba + sin * bc;\r\n            this.b = cos * bb + sin * bd;\r\n            this.c = -sin * ba + cos * bc;\r\n            this.d = -sin * bb + cos * bd;\r\n        } else {\r\n            this.a = cos * ba;\r\n            this.b = sin * bd;\r\n            this.c = -sin * ba;\r\n            this.d = cos * bd;\r\n        }\r\n        this._bTransform = true;\r\n    }\r\n\r\n    /**\r\n     * 返回此 Matrix 对象的副本。\r\n     * @return 与原始实例具有完全相同的属性的新 Matrix 实例。\r\n     */\r\n    clone(): Matrix {\r\n        var dec: Matrix = Matrix.create();\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 将当前 Matrix 对象中的所有矩阵数据复制到指定的 Matrix 对象中。\r\n     * @param\tdec 要复制当前矩阵数据的 Matrix 对象。\r\n     * @return\t已复制当前矩阵数据的 Matrix 对象。\r\n     */\r\n    copyTo(dec: Matrix): Matrix {\r\n        dec.a = this.a;\r\n        dec.b = this.b;\r\n        dec.c = this.c;\r\n        dec.d = this.d;\r\n        dec.tx = this.tx;\r\n        dec.ty = this.ty;\r\n        dec._bTransform = this._bTransform;\r\n        return dec;\r\n    }\r\n\r\n    /**\r\n     * 返回列出该 Matrix 对象属性的文本值。\r\n     * @return 一个字符串，它包含 Matrix 对象的属性值：a、b、c、d、tx 和 ty。\r\n     */\r\n    toString(): string {\r\n        return this.a + \",\" + this.b + \",\" + this.c + \",\" + this.d + \",\" + this.tx + \",\" + this.ty;\r\n    }\r\n\r\n    /**\r\n     * 销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.recover();\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Matrix\", this.identity());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建一个 <code>Matrix</code> 对象。\r\n     * @return <code>Matrix</code> 对象。\r\n     */\r\n    static create(): Matrix {\r\n        return Pool.getItemByClass(\"Matrix\", Matrix);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\"\r\n\r\n/**\r\n * <code>Point</code> 对象表示二维坐标系统中的某个位置，其中 x 表示水平轴，y 表示垂直轴。\r\n */\r\nexport class Point {\r\n\r\n    /**临时使用的公用对象。*/\r\n    static TEMP: Point = new Point();\r\n    /**@private 全局空的point对象(x=0，y=0)，不允许修改此对象内容*/\r\n    static EMPTY: Point = new Point();\r\n\r\n    /**该点的水平坐标。*/\r\n    x: number;\r\n    /**该点的垂直坐标。*/\r\n    y: number;\r\n\r\n    /**\r\n     * 根据指定坐标，创建一个新的 <code>Point</code> 对象。\r\n     * @param x\t（可选）水平坐标。\r\n     * @param y\t（可选）垂直坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 从对象池创建\r\n     */\r\n    static create(): Point {\r\n        return Pool.getItemByClass(\"Point\", Point);\r\n    }\r\n\r\n    /**\r\n     * 将 <code>Point</code> 的成员设置为指定值。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return 当前 Point 对象。\r\n     */\r\n    setTo(x: number, y: number): Point {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Point {\r\n        this.x = this.y = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池，方便复用\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"Point\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 计算当前点和目标点(x，y)的距离。\r\n     * @param\tx 水平坐标。\r\n     * @param\ty 垂直坐标。\r\n     * @return\t返回当前点和目标点之间的距离。\r\n     */\r\n    distance(x: number, y: number): number {\r\n        return Math.sqrt((this.x - x) * (this.x - x) + (this.y - y) * (this.y - y));\r\n    }\r\n\r\n    /**返回包含 x 和 y 坐标的值的字符串。*/\r\n    toString(): string {\r\n        return this.x + \",\" + this.y;\r\n    }\r\n\r\n    /**\r\n     * 标准化向量。\r\n     */\r\n    normalize(): void {\r\n        var d: number = Math.sqrt(this.x * this.x + this.y * this.y);\r\n        if (d > 0) {\r\n            var id: number = 1.0 / d;\r\n            this.x *= id;\r\n            this.y *= id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * copy point坐标\r\n     * @param\tpoint 需要被copy的point\r\n     */\r\n    copy(point: Point): Point {\r\n        return this.setTo(point.x, point.y);\r\n    }\r\n}\r\n\r\n","import { Pool } from \"../utils/Pool\";\r\nimport { Point } from \"./Point\";\r\n\r\n/**\r\n * <p><code>Rectangle</code> 对象是按其位置（由它左上角的点 (x, y) 确定）以及宽度和高度定义的区域。</p>\r\n * <p>Rectangle 类的 x、y、width 和 height 属性相互独立；更改一个属性的值不会影响其他属性。</p>\r\n */\r\nexport class Rectangle {\r\n\r\n    /**@private 全局空的矩形区域x=0,y=0,width=0,height=0，不允许修改此对象内容*/\r\n    static EMPTY: Rectangle = new Rectangle();\r\n    /**全局临时的矩形区域，此对象用于全局复用，以减少对象创建*/\r\n    static TEMP: Rectangle = new Rectangle();\r\n\r\n    /** @private */\r\n    private static _temB: number[] = [];\r\n    /** @private */\r\n    private static _temA: number[] = [];\r\n\r\n    /** 矩形左上角的 X 轴坐标。*/\r\n    x: number;\r\n    /** 矩形左上角的 Y 轴坐标。*/\r\n    y: number;\r\n    /** 矩形的宽度。*/\r\n    width: number;\r\n    /** 矩形的高度。*/\r\n    height: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Rectangle</code> 对象。\r\n     * @param\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth 矩形的宽度。\r\n     * @param\theight 矩形的高度。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n    }\r\n\r\n    /** 此矩形右侧的 X 轴坐标。 x 和 width 属性的和。*/\r\n    get right(): number {\r\n        return this.x + this.width;\r\n    }\r\n\r\n    /** 此矩形底端的 Y 轴坐标。y 和 height 属性的和。*/\r\n    get bottom(): number {\r\n        return this.y + this.height;\r\n    }\r\n\r\n    /**\r\n     * 将 Rectangle 的属性设置为指定值。\r\n     * @param\tx\tx 矩形左上角的 X 轴坐标。\r\n     * @param\ty\tx 矩形左上角的 Y 轴坐标。\r\n     * @param\twidth\t矩形的宽度。\r\n     * @param\theight\t矩形的高。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    setTo(x: number, y: number, width: number, height: number): Rectangle {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): Rectangle {\r\n        this.x = this.y = this.width = this.height = 0;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this == Rectangle.TEMP || this == Rectangle.EMPTY) {\r\n            //console.log(\"recover Temp or Empty:\", this);\r\n            return;\r\n        }\r\n        Pool.recover(\"Rectangle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): Rectangle {\r\n        return Pool.getItemByClass(\"Rectangle\", Rectangle);\r\n    }\r\n\r\n    /**\r\n     * 复制 source 对象的属性值到此矩形对象中。\r\n     * @param\tsourceRect\t源 Rectangle 对象。\r\n     * @return\t返回属性值修改后的矩形对象本身。\r\n     */\r\n    copyFrom(source: Rectangle): Rectangle {\r\n        this.x = source.x;\r\n        this.y = source.y;\r\n        this.width = source.width;\r\n        this.height = source.height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 确定由此 Rectangle 对象定义的矩形区域内是否包含指定的点。\r\n     * @param x\t点的 X 轴坐标值（水平位置）。\r\n     * @param y\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果 Rectangle 对象包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return false;\r\n\r\n        if (x >= this.x && x < this.right) {\r\n            if (y >= this.y && y < this.bottom) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 确定在 rect 参数中指定的对象是否与此 Rectangle 对象相交。此方法检查指定的 Rectangle 对象的 x、y、width 和 height 属性，以查看它是否与此 Rectangle 对象相交。\r\n     * @param\trect Rectangle 对象。\r\n     * @return\t如果传入的矩形对象与此对象相交，则返回 true 值，否则返回 false。\r\n     */\r\n    intersects(rect: Rectangle): boolean {\r\n        return !(rect.x > (this.x + this.width) || (rect.x + rect.width) < this.x || rect.y > (this.y + this.height) || (rect.y + rect.height) < this.y);\r\n    }\r\n\r\n    /**\r\n     * 如果在 rect 参数中指定的 Rectangle 对象与此 Rectangle 对象相交，则返回交集区域作为 Rectangle 对象。如果矩形不相交，则此方法返回null。\r\n     * @param rect\t待比较的矩形区域。\r\n     * @param out\t（可选）待输出的矩形区域。如果为空则创建一个新的。建议：尽量复用对象，减少对象创建消耗。\r\n     * @return\t返回相交的矩形区域对象。\r\n     */\r\n    intersection(rect: Rectangle, out: Rectangle | null = null): Rectangle | null {\r\n        if (!this.intersects(rect)) return null;\r\n        out || (out = new Rectangle());\r\n        out.x = Math.max(this.x, rect.x);\r\n        out.y = Math.max(this.y, rect.y);\r\n        out.width = Math.min(this.right, rect.right) - out.x;\r\n        out.height = Math.min(this.bottom, rect.bottom) - out.y;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * <p>矩形联合，通过填充两个矩形之间的水平和垂直空间，将这两个矩形组合在一起以创建一个新的 Rectangle 对象。</p>\r\n     * <p>注意：union() 方法忽略高度或宽度值为 0 的矩形，如：var rect2:Rectangle = new Rectangle(300,300,50,0);</p>\r\n     * @param\t要添加到此 Rectangle 对象的 Rectangle 对象。\r\n     * @param\tout\t用于存储输出结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。Rectangle.TEMP对象用于对象复用。\r\n     * @return\t充当两个矩形的联合的新 Rectangle 对象。\r\n     */\r\n    union(source: Rectangle, out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        this.clone(out);\r\n        if (source.width <= 0 || source.height <= 0) return out;\r\n        out.addPoint(source.x, source.y);\r\n        out.addPoint(source.right, source.bottom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 返回一个 Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     * @param out\t（可选）用于存储结果的矩形对象。如果为空，则创建一个新的。建议：尽量复用对象，减少对象创建消耗。。Rectangle.TEMP对象用于对象复用。\r\n     * @return Rectangle 对象，其 x、y、width 和 height 属性的值与当前 Rectangle 对象的对应值相同。\r\n     */\r\n    clone(out: Rectangle | null = null): Rectangle {\r\n        out || (out = new Rectangle());\r\n        out.x = this.x;\r\n        out.y = this.y;\r\n        out.width = this.width;\r\n        out.height = this.height;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 当前 Rectangle 对象的水平位置 x 和垂直位置 y 以及高度 width 和宽度 height 以逗号连接成的字符串。\r\n     */\r\n    toString(): string {\r\n        return this.x + \",\" + this.y + \",\" + this.width + \",\" + this.height;\r\n    }\r\n\r\n    /**\r\n     * 检测传入的 Rectangle 对象的属性是否与当前 Rectangle 对象的属性 x、y、width、height 属性值都相等。\r\n     * @param\trect 待比较的 Rectangle 对象。\r\n     * @return\t如果判断的属性都相等，则返回 true ,否则返回 false。\r\n     */\r\n    equals(rect: Rectangle): boolean {\r\n        if (!rect || rect.x !== this.x || rect.y !== this.y || rect.width !== this.width || rect.height !== this.height) return false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * <p>为当前矩形对象加一个点，以使当前矩形扩展为包含当前矩形和此点的最小矩形。</p>\r\n     * <p>此方法会修改本对象。</p>\r\n     * @param x\t点的 X 坐标。\r\n     * @param y\t点的 Y 坐标。\r\n     * @return 返回此 Rectangle 对象。\r\n     */\r\n    addPoint(x: number, y: number): Rectangle {\r\n        this.x > x && (this.width += this.x - x, this.x = x);//左边界比较\r\n        this.y > y && (this.height += this.y - y, this.y = y);//上边界比较\r\n        if (this.width < x - this.x) this.width = x - this.x;//右边界比较\r\n        if (this.height < y - this.y) this.height = y - this.y;//下边界比较\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回代表当前矩形的顶点数据。\r\n     * @return 顶点数据。\r\n     */\r\n    _getBoundPoints() {\r\n        var rst = Rectangle._temB;\r\n        rst.length = 0;\r\n        if (this.width == 0 || this.height == 0) return rst;\r\n        rst.push(this.x, this.y, this.x + this.width, this.y, this.x, this.y + this.height, this.x + this.width, this.y + this.height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回矩形的顶点数据。\r\n     */\r\n    static _getBoundPointS(x: number, y: number, width: number, height: number, sp?: { width: number, height?: number }): number[] {\r\n        var rst: any[] = Rectangle._temA;\r\n        rst.length = 0;\r\n        if (width == 0 || height == 0) return rst;\r\n        if (sp) {\r\n            x *= sp.width;\r\n            y *= sp.height;\r\n            width *= sp.width;\r\n            height *= sp.height;\r\n        }\r\n        rst.push(x, y, x + width, y, x, y + height, x + width, y + height);\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 返回包含所有点的最小矩形。\r\n     * @param pointList 点列表。\r\n     * @return 包含所有点的最小矩形矩形对象。\r\n     */\r\n    static _getWrapRec(pointList: ArrayLike<number>, rst: Rectangle | null = null): Rectangle {\r\n\r\n        if (!pointList || pointList.length < 1) return rst ? rst.setTo(0, 0, 0, 0) : Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        rst = rst ? rst : Rectangle.create();\r\n        var i: number, len: number = pointList.length, minX: number, maxX: number, minY: number, maxY: number, tPoint: Point = Point.TEMP;\r\n        minX = minY = 99999;\r\n        maxX = maxY = -minX;\r\n        for (i = 0; i < len; i += 2) {\r\n            tPoint.x = pointList[i];\r\n            tPoint.y = pointList[i + 1];\r\n            minX = minX < tPoint.x ? minX : tPoint.x;\r\n            minY = minY < tPoint.y ? minY : tPoint.y;\r\n            maxX = maxX > tPoint.x ? maxX : tPoint.x;\r\n            maxY = maxY > tPoint.y ? maxY : tPoint.y;\r\n        }\r\n        return rst.setTo(minX, minY, maxX - minX, maxY - minY);\r\n    }\r\n\r\n    /**\r\n     * 确定此 Rectangle 对象是否为空。\r\n     * @return 如果 Rectangle 对象的宽度或高度小于等于 0，则返回 true 值，否则返回 false。\r\n     */\r\n    isEmpty(): boolean {\r\n        if (this.width <= 0 || this.height <= 0) return true;\r\n        return false;\r\n    }\r\n}\r\n\r\n","import { IRender2DContext } from \"../RenderEngine/RenderInterface/IRender2DContext\";\r\nimport { IRenderDrawContext } from \"../RenderEngine/RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { IRenderOBJCreate } from \"../RenderEngine/RenderInterface/IRenderOBJCreate\";\r\nimport { ITextureContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\n\r\n/**\r\n * 封装GL命令\r\n */\r\nexport class LayaGL {\r\n    static textureContext: ITextureContext;\r\n    static renderEngine: IRenderEngine;\r\n    static render2DContext: IRender2DContext;\r\n    static renderDrawContext: IRenderDrawContext;\r\n    static renderOBJCreate: IRenderOBJCreate;\r\n}","export enum HDREncodeFormat{\r\n    NONE,\r\n    RGBM,\r\n    RGBD\r\n   \r\n}","/**\r\n * 纹理格式\r\n */\r\nexport enum TextureFormat {\r\n    /**纹理格式_R8G8B8。*/\r\n    R8G8B8 = 0,\r\n    /**纹理格式_R8G8B8A8。*/\r\n    R8G8B8A8 = 1,\r\n    /**RGB格式纹理,R通道5位，G通道6位，B通道5位。*/\r\n    R5G6B5 = 16,\r\n    /**纹理格式_ALPHA8。*/\r\n    Alpha8 = 2,\r\n    /**纹理格式_DXT1。*/\r\n    DXT1 = 3,\r\n    /**纹理格式_DXT3 */\r\n    DXT3 = 29,\r\n    /**纹理格式_DXT5。*/\r\n    DXT5 = 4,\r\n    /**纹理格式_ETC2RGB。*/\r\n    ETC1RGB = 5,\r\n    ///**纹理格式_ETC2RGB。*/\r\n    ETC2RGB = 6,\r\n    ///**纹理格式_ETC2RGBA。*/\r\n    ETC2RGBA = 7,\r\n    /**纹理格式_ETC2RGB_PUNCHTHROUGHALPHA。*/\r\n    //ETC2RGB_PUNCHTHROUGHALPHA:int = 8;\r\n    /**纹理格式_PVRTCRGB_2BPPV。*/\r\n    ETC2SRGB_Alpha8 = 8,\r\n    /** 纹理格式_ETC2SRGB*/\r\n    ETC2SRGB = 28,\r\n    /** 纹理格式_PVRTCRGB_2BPPV*/\r\n    PVRTCRGB_2BPPV = 9,\r\n    /**纹理格式_PVRTCRGBA_2BPPV。*/\r\n    PVRTCRGBA_2BPPV = 10,\r\n    /**纹理格式_PVRTCRGB_4BPPV。*/\r\n    PVRTCRGB_4BPPV = 11,\r\n    /**纹理格式_PVRTCRGBA_4BPPV。*/\r\n    PVRTCRGBA_4BPPV = 12,\r\n    /**RGBA格式纹理,每个通道32位浮点数。*/\r\n    R32G32B32A32 = 15,\r\n    /**R32G32B32 */\r\n    R32G32B32 = 30,\r\n    /**RGBA格式纹理，每个通道16位浮点数。 */\r\n    R16G16B16A16 = 17,\r\n    /**R16 G16 B6 */\r\n    R16G16B16 = 31,\r\n    /**ASTC 4x4*/\r\n    ASTC4x4 = 18,\r\n    /**ASTC sRGB 4x4 */\r\n    ASTC4x4SRGB = 23,\r\n    /**ASTC 6x6*/\r\n    ASTC6x6 = 19,\r\n    /**ASTC  6x6*/\r\n    ASTC6x6SRGB = 24,\r\n    /**ASTC 8x8 */\r\n    ASTC8x8 = 20,\r\n    /**ASTC srgb 8x8 */\r\n    ASTC8x8SRGB = 25,\r\n    /**ASTC 10x10 */\r\n    ASTC10x10 = 21,\r\n    /**ASTC srgb 10x10 */\r\n    ASTC10x10SRGB = 26,\r\n    /**ASTC 12x12 */\r\n    ASTC12x12 = 22,\r\n    /**ASTC srgb 12x12 */\r\n    ASTC12x12SRGB = 27,\r\n    /**ktx图片 */\r\n    KTXTEXTURE = -1,\r\n    /**pvr图片 */\r\n    PVRTEXTURE = -2\r\n}","const ITEM_LAYOUT = 4; //callback,target,args,flag(0-deleted,1-normal,2-once) \r\n\r\nexport class Delegate {\r\n    private _flag: number;\r\n    private _items: Array<any>;\r\n\r\n    public constructor() {\r\n        this._flag = 0;\r\n        this._items = [];\r\n    }\r\n\r\n    public add(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 1;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 1);\r\n    }\r\n\r\n    public once(callback: Function, target?: any, args?: any[]): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            arr[index + 2] = args;\r\n            arr[index + 3] = 2;\r\n        }\r\n        else\r\n            arr.push(callback, target, args, 2);\r\n    }\r\n\r\n    public remove(callback: Function, target?: any): void {\r\n        let arr = this._items;\r\n        let index = arr.findIndex((value, index, arr) => value == callback && arr[index + 1] == target);\r\n        if (index != -1) {\r\n            if (this._flag != 0) {\r\n                arr[index + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n            else\r\n                arr.splice(index, ITEM_LAYOUT);\r\n        }\r\n    }\r\n\r\n    public clear(): void {\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if (index % ITEM_LAYOUT == 3) arr[index] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            arr.length = 0;\r\n        }\r\n    }\r\n\r\n    public clearForTarget(target: any): void {\r\n        if (!target)\r\n            return;\r\n\r\n        let arr = this._items;\r\n        if (this._flag != 0) {\r\n            arr.forEach((value, index, arr) => { if ((index % ITEM_LAYOUT == 1) && arr[index] == target) arr[index + 2] = 0; });\r\n            this._flag = 2;\r\n        }\r\n        else {\r\n            let i: number = arr.length - ITEM_LAYOUT;\r\n            while (i >= 0) {\r\n                if (arr[i + 1] == target)\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                i -= ITEM_LAYOUT;\r\n            }\r\n        }\r\n    }\r\n\r\n    public get count(): number {\r\n        return this._items.length / ITEM_LAYOUT;\r\n    }\r\n\r\n    public invoke(...args: any[]): void {\r\n        if (this._flag != 0)\r\n            return;\r\n\r\n        this._flag = 1;\r\n        let arr = this._items;\r\n        let cnt = arr.length;\r\n        for (let i = 0; i < cnt; i += ITEM_LAYOUT) {\r\n            if (0 == arr[i + 3]) continue;\r\n            let fixedArgs = arr[i + 2];\r\n            if (fixedArgs != null)\r\n                arr[i].call(arr[i + 1], ...fixedArgs, ...args);\r\n            else\r\n                arr[i].call(arr[i + 1], ...args);\r\n            if (arr[i + 3] == 2) {\r\n                arr[i + 3] = 0;\r\n                this._flag = 2;\r\n            }\r\n        }\r\n\r\n        if (this._flag == 2) {\r\n            let cnt = arr.length;\r\n            let i = 0;\r\n            while (i < cnt) {\r\n                if (arr[i + 3] == 0) {\r\n                    arr.splice(i, ITEM_LAYOUT);\r\n                    cnt -= ITEM_LAYOUT;\r\n                    continue;\r\n                }\r\n                else\r\n                    i += ITEM_LAYOUT;\r\n            }\r\n        }\r\n        this._flag = 0;\r\n    }\r\n}","import { Point } from \"../maths/Point\"\r\n\r\nexport interface ITouchInfo {\r\n    touchId: number;\r\n    readonly pos: Point;\r\n}\r\n\r\n/**\r\n * <code>Event</code> 是事件类型的集合。一般当发生事件时，<code>Event</code> 对象将作为参数传递给事件侦听器。\r\n */\r\nexport class Event {\r\n\r\n    /** 一个空的 Event 对象。用于事件派发中转使用。*/\r\n    static readonly EMPTY: Readonly<Event> = new Event();\r\n\r\n    /** 定义 mousedown 事件对象的 type 属性值。*/\r\n    static MOUSE_DOWN = \"mousedown\";\r\n    /** 定义 mouseup 事件对象的 type 属性值。*/\r\n    static MOUSE_UP = \"mouseup\";\r\n    /** 定义 rightmousedown 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_DOWN: string = \"rightmousedown\";\r\n    /** 定义 rightmouseup 事件对象的 type 属性值。*/\r\n    static RIGHT_MOUSE_UP: string = \"rightmouseup\";\r\n    /** 定义 click 事件对象的 type 属性值。*/\r\n    static CLICK = \"click\";\r\n    /** 定义 rightclick 事件对象的 type 属性值。*/\r\n    static RIGHT_CLICK = \"rightclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_MOVE = \"mousemove\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static MOUSE_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static MOUSE_OUT = \"mouseout\";\r\n    /** 定义 mousewheel 事件对象的 type 属性值。*/\r\n    static MOUSE_WHEEL = \"mousewheel\";\r\n    /** 定义 mouseover 事件对象的 type 属性值。*/\r\n    static ROLL_OVER = \"mouseover\";\r\n    /** 定义 mouseout 事件对象的 type 属性值。*/\r\n    static ROLL_OUT = \"mouseout\";\r\n    /** 定义 doubleclick 事件对象的 type 属性值。*/\r\n    static DOUBLE_CLICK = \"doubleclick\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG = \"mousedrag\";\r\n    /** 定义 mousemove 事件对象的 type 属性值。*/\r\n    static MOUSE_DRAG_END = \"mousedragend\";\r\n\r\n    /** 定义 dragstart 事件对象的 type 属性值。*/\r\n    static DRAG_START = \"dragstart\";\r\n    /** 定义 dragmove 事件对象的 type 属性值。*/\r\n    static DRAG_MOVE = \"dragmove\";\r\n    /** 定义 dragend 事件对象的 type 属性值。*/\r\n    static DRAG_END = \"dragend\";\r\n\r\n    /** 定义 keydown 事件对象的 type 属性值。*/\r\n    static KEY_DOWN = \"keydown\";\r\n    /** 定义 keypress 事件对象的 type 属性值。*/\r\n    static KEY_PRESS = \"keypress\";\r\n    /** 定义 keyup 事件对象的 type 属性值。*/\r\n    static KEY_UP = \"keyup\";\r\n\r\n    /** 定义 change 事件对象的 type 属性值。*/\r\n    static CHANGE = \"change\";\r\n    /** 定义 changed 事件对象的 type 属性值。*/\r\n    static CHANGED = \"changed\";\r\n    /** 定义 willResize 事件对象的 type 属性值。*/\r\n    static WILL_RESIZE = \"willResize\";\r\n    /** 定义 resize 事件对象的 type 属性值。*/\r\n    static RESIZE = \"resize\";\r\n\r\n    /** 定义 added 事件对象的 type 属性值。*/\r\n    static ADDED = \"added\";\r\n    /** 定义 removed 事件对象的 type 属性值。*/\r\n    static REMOVED = \"removed\";\r\n    /** 定义 display 事件对象的 type 属性值。*/\r\n    static DISPLAY = \"display\";\r\n    /** 定义 undisplay 事件对象的 type 属性值。*/\r\n    static UNDISPLAY = \"undisplay\";\r\n\r\n    /** 定义 error 事件对象的 type 属性值。*/\r\n    static ERROR = \"error\";\r\n    /** 定义 complete 事件对象的 type 属性值。*/\r\n    static COMPLETE = \"complete\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static LOADED = \"loaded\";\r\n    /** 定义 loaded 事件对象的 type 属性值。*/\r\n    static READY = \"ready\";\r\n    /** 定义 progress 事件对象的 type 属性值。*/\r\n    static PROGRESS = \"progress\";\r\n    /** 定义 input 事件对象的 type 属性值。*/\r\n    static INPUT = \"input\";\r\n    /** 定义 render 事件对象的 type 属性值。*/\r\n    static RENDER = \"render\";\r\n    /** 定义 open 事件对象的 type 属性值。*/\r\n    static OPEN = \"open\";\r\n    /** 定义 message 事件对象的 type 属性值。*/\r\n    static MESSAGE = \"message\";\r\n    /** 定义 close 事件对象的 type 属性值。*/\r\n    static CLOSE = \"close\";\r\n\r\n    /** 定义 frame 事件对象的 type 属性值。*/\r\n    static FRAME = \"enterframe\";\r\n    /** 定义 enter 事件对象的 type 属性值。*/\r\n    static ENTER = \"enter\";\r\n    /** 定义 select 事件对象的 type 属性值。*/\r\n    static SELECT = \"select\";\r\n    /** 定义 blur 事件对象的 type 属性值。*/\r\n    static BLUR = \"blur\";\r\n    /** 定义 focus 事件对象的 type 属性值。*/\r\n    static FOCUS = \"focus\";\r\n    /** 定义 visibilitychange 事件对象的 type 属性值。*/\r\n    static VISIBILITY_CHANGE = \"visibilitychange\";\r\n    /** 定义 focuschange 事件对象的 type 属性值。*/\r\n    static FOCUS_CHANGE = \"focuschange\";\r\n    /** 定义 played 事件对象的 type 属性值。*/\r\n    static PLAYED = \"played\";\r\n    /** 定义 paused 事件对象的 type 属性值。*/\r\n    static PAUSED = \"paused\";\r\n    /** 定义 stopped 事件对象的 type 属性值。*/\r\n    static STOPPED = \"stopped\";\r\n    /** 定义 start 事件对象的 type 属性值。*/\r\n    static START = \"start\";\r\n    /** 定义 end 事件对象的 type 属性值。*/\r\n    static END = \"end\";\r\n    /** 定义 link 事件对象的 type 属性值。*/\r\n    static LINK = \"link\";\r\n    /** 定义 label 事件对象的 type 属性值。*/\r\n    static LABEL = \"label\";\r\n    /**浏览器全屏更改时触发*/\r\n    static FULL_SCREEN_CHANGE = \"fullscreenchange\";\r\n    /**显卡设备丢失时触发*/\r\n    static DEVICE_LOST = \"devicelost\";\r\n    /**世界矩阵更新时触发。*/\r\n    static TRANSFORM_CHANGED = \"transformchanged\";\r\n    /**3D layer改变时触发。*/\r\n    static LAYERCHANGE = \"layerChange\";\r\n    /**3D Static改变时触发 */\r\n    static staticMask = \"staticMask\";\r\n\r\n    /**物理碰撞开始*/\r\n    static TRIGGER_ENTER = \"triggerenter\";\r\n    /**物理碰撞持续*/\r\n    static TRIGGER_STAY = \"triggerstay\";\r\n    /**物理碰撞结束*/\r\n    static TRIGGER_EXIT = \"triggerexit\";\r\n\r\n    /**物理碰撞开始*/\r\n    static COLLISION_ENTER = \"collisionenter\";\r\n    /**物理碰撞持续*/\r\n    static COLLISION_STAY = \"collisionstay\";\r\n    /**物理碰撞结束*/\r\n    static COLLISION_EXIT = \"collisionexit\";\r\n    /**关节破坏 */\r\n    static JOINT_BREAK = \"jointbreak\";\r\n\r\n    /**\r\n     * 检测指定事件类型是否是鼠标事件。\r\n     * @param\ttype 事件的类型。\r\n     * @return\t如果是鼠标事件，则值为 true;否则，值为 false。\r\n     */\r\n    static isMouseEvent(type: string): boolean {\r\n        return MOUSE_EVENTS.has(type);\r\n    }\r\n\r\n    /** 事件类型。*/\r\n    type: string;\r\n    /** 事件目标触发对象。*/\r\n    target: any;\r\n    /** 事件当前冒泡对象。*/\r\n    currentTarget: any;\r\n\r\n    /** 分配给触摸点的唯一标识号（作为 int）。*/\r\n    touchId: number = 0;\r\n    /** 点击坐标 */\r\n    readonly touchPos: Point;\r\n    /** 是否双击 */\r\n    isDblClick: boolean;\r\n    /**滚轮滑动增量*/\r\n    delta: number = 0;\r\n    /** \r\n     * 鼠标按键，\r\n     * 0：主按键，通常指鼠标左键\r\n     * 1：辅助按键，通常指鼠标滚轮中键\r\n     * 2：次按键，通常指鼠标右键\r\n     * 3：第四个按钮，通常指浏览器后退按钮\r\n     * 4：第五个按钮，通常指浏览器的前进按钮\r\n     */\r\n    button: number = 0;\r\n\r\n    /** 原生浏览器事件。*/\r\n    nativeEvent: MouseEvent | TouchEvent | WheelEvent | KeyboardEvent;\r\n\r\n    /** @internal */\r\n    _stopped: boolean;\r\n    /** @internal */\r\n    _touches: ReadonlyArray<Readonly<ITouchInfo>>;\r\n\r\n    constructor() {\r\n        this.touchPos = new Point();\r\n    }\r\n\r\n    /**\r\n     * 设置事件数据。\r\n     * @param\ttype 事件类型。\r\n     * @param\tcurrentTarget 事件目标触发对象。\r\n     * @param\ttarget 事件当前冒泡对象。\r\n     * @return 返回当前 Event 对象。\r\n     */\r\n    setTo(type: string, currentTarget: any, target: any): Event {\r\n        this.type = type;\r\n        this.currentTarget = currentTarget;\r\n        this.target = target;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 阻止对事件流中当前节点的后续节点中的所有事件侦听器进行处理。此方法不会影响当前节点 (currentTarget) 中的任何事件侦听器。\r\n     */\r\n    stopPropagation(): void {\r\n        this._stopped = true;\r\n    }\r\n\r\n    /**\r\n     * 触摸点列表。\r\n     */\r\n    get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return this._touches;\r\n    }\r\n\r\n    /**\r\n     * 表示 Alt 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get altKey(): boolean {\r\n        return this.nativeEvent?.altKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Ctrl 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get ctrlKey(): boolean {\r\n        return this.nativeEvent?.ctrlKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get shiftKey(): boolean {\r\n        return this.nativeEvent?.shiftKey;\r\n    }\r\n\r\n    /**\r\n     * 表示 Shift 键是处于活动状态 (true) 还是非活动状态 (false)。\r\n     */\r\n    get metaKey(): boolean {\r\n        return this.nativeEvent?.metaKey;\r\n    }\r\n\r\n    get key(): string {\r\n        return (<KeyboardEvent>this.nativeEvent).key;\r\n    }\r\n\r\n    get keyCode(): number {\r\n        return (<KeyboardEvent>this.nativeEvent).keyCode;\r\n    }\r\n\r\n    /**\r\n     * 包含按下或释放的键的字符代码值。字符代码值为英文键盘值。\r\n     */\r\n    get charCode(): string {\r\n        return (<KeyboardEvent>this.nativeEvent)?.code;\r\n    }\r\n\r\n    /**\r\n     * 表示键在键盘上的位置。这对于区分在键盘上多次出现的键非常有用。<br>\r\n     * 例如，您可以根据此属性的值来区分左 Shift 键和右 Shift 键：左 Shift 键的值为 KeyLocation.LEFT，右 Shift 键的值为 KeyLocation.RIGHT。另一个示例是区分标准键盘 (KeyLocation.STANDARD) 与数字键盘 (KeyLocation.NUM_PAD) 上按下的数字键。\r\n     */\r\n    get keyLocation(): number {\r\n        if (this.nativeEvent)\r\n            return (<KeyboardEvent>this.nativeEvent).location || (<any>this.nativeEvent).keyLocation;\r\n        else\r\n            return 0;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标*/\r\n    get stageX(): number {\r\n        return this.touchPos.x;\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标*/\r\n    get stageY(): number {\r\n        return this.touchPos.y;\r\n    }\r\n}\r\n\r\nconst MOUSE_EVENTS = new Set<string>([\r\n    Event.MOUSE_DOWN, Event.MOUSE_UP, Event.MOUSE_MOVE, Event.CLICK, Event.DOUBLE_CLICK,\r\n    Event.RIGHT_CLICK, Event.RIGHT_MOUSE_DOWN, Event.RIGHT_MOUSE_UP,\r\n    Event.MOUSE_OVER, Event.MOUSE_OUT, Event.MOUSE_WHEEL\r\n]);","import { Delegate } from \"../utils/Delegate\";\r\nimport { Event } from \"./Event\";\r\n\r\nconst eventPool: Array<Event> = [];\r\n\r\n/**\r\n * <code>EventDispatcher</code> 类是可调度事件的所有类的基类。\r\n */\r\nexport class EventDispatcher {\r\n    /**@private */\r\n    private _events: Record<string, Delegate>;\r\n\r\n    protected onStartListeningToType(type: string) {\r\n    }\r\n\r\n    /**\r\n     * 检查 EventDispatcher 对象是否为特定事件类型注册了任何侦听器。\r\n     * @param\ttype 事件的类型。\r\n     * @return 如果指定类型的侦听器已注册，则值为 true；否则，值为 false。\r\n     */\r\n    hasListener(type: string): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        return !!listeners && listeners.count > 0;\r\n    }\r\n\r\n    /**\r\n     * 派发事件。\r\n     * @param type\t事件类型。\r\n     * @param data\t（可选）回调数据。<b>注意：</b>如果是需要传递多个参数 p1,p2,p3,...可以使用数组结构如：[p1,p2,p3,...] ；如果需要回调单个参数 p ，且 p 是一个数组，则需要使用结构如：[p]，其他的单个参数 p ，可以直接传入参数 p。\r\n     * @return 此事件类型是否有侦听者，如果有侦听者则值为 true，否则值为 false。\r\n     */\r\n    event(type: string, data?: any): boolean {\r\n        let listeners = this._events && this._events[type];\r\n        if (!listeners) return false;\r\n        let ret = listeners.count > 0;\r\n\r\n        if (Array.isArray(data))\r\n            listeners.invoke(...data);\r\n        else if (data !== undefined)\r\n            listeners.invoke(data);\r\n        else if (data === Event.EMPTY) {\r\n            let ev = eventPool.length > 0 ? eventPool.pop() : new Event();\r\n            listeners.invoke(ev.setTo(type, this, this));\r\n            ev.target = ev.currentTarget = null;\r\n            eventPool.push(ev);\r\n        }\r\n        else\r\n            listeners.invoke();\r\n\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    on(type: string, listener: Function): EventDispatcher;\r\n    on(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    on(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.add(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 使用 EventDispatcher 对象注册指定类型的事件侦听器对象，以使侦听器能够接收事件通知，此侦听事件响应一次后自动移除。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @param args\t\t（可选）事件侦听函数的回调参数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    once(type: string, listener: Function): EventDispatcher;\r\n    once(type: string, caller: any, listener: Function, args?: any[]): EventDispatcher;\r\n    once(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        if (!this._events) this._events = {};\r\n        let listeners = this._events[type];\r\n        if (!listeners) {\r\n            this.onStartListeningToType(type);\r\n            this._events[type] = listeners = new Delegate();\r\n        }\r\n\r\n        listeners.once(listener, caller, args);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除侦听器。\r\n     * @param type\t\t事件的类型。\r\n     * @param caller\t事件侦听函数的执行域。\r\n     * @param listener\t事件侦听函数。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    off(type: string, listener: Function): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function, args?: any[]): EventDispatcher;\r\n    off(type: string, caller: any, listener?: Function): EventDispatcher {\r\n        if (arguments.length == 2) {\r\n            listener = caller;\r\n            caller = null;\r\n        }\r\n        let listeners = this._events && this._events[type];\r\n        if (listeners)\r\n            listeners.remove(listener, caller);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从 EventDispatcher 对象中删除指定事件类型的所有侦听器。\r\n     * @param type\t（可选）事件类型，如果值为 null，则移除本对象所有类型的侦听器。\r\n     * @return 此 EventDispatcher 对象。\r\n     */\r\n    offAll(type?: string): EventDispatcher {\r\n        if (type == null)\r\n            this._events = null;\r\n        else {\r\n            let listeners = this._events && this._events[type];\r\n            if (listeners)\r\n                listeners.clear();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除caller为target的所有事件监听\r\n     * @param\tcaller caller对象\r\n     */\r\n    offAllCaller(caller: any): EventDispatcher {\r\n        if (caller && this._events) {\r\n            for (let type in this._events)\r\n                this._events[type].clearForTarget(caller);\r\n        }\r\n        return this;\r\n    }\r\n}\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\n\r\nvar _idCounter: number = 0;\r\nvar _disposingCounter: number = 0;\r\nvar _clearRetry: number = 0;\r\n\r\n/**\r\n * <code>Resource</code> 资源存取类。\r\n */\r\nexport class Resource extends EventDispatcher {\r\n    /** @private */\r\n    static _idResourcesMap: any = {};\r\n    /** @private 以字节为单位。*/\r\n    private static _cpuMemory: number = 0;\r\n    /** @private 以字节为单位。*/\r\n    private static _gpuMemory: number = 0;\r\n    /**是否开启debug模式 */\r\n    static DEBUG: boolean = false;\r\n\r\n    /**\r\n     * 当前内存，以字节为单位。\r\n     */\r\n    static get cpuMemory(): number {\r\n        return Resource._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 当前显存，以字节为单位。\r\n     */\r\n    static get gpuMemory(): number {\r\n        return Resource._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addCPUMemory(size: number): void {\r\n        Resource._cpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addGPUMemory(size: number): void {\r\n        Resource._gpuMemory += size;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _addMemory(cpuSize: number, gpuSize: number): void {\r\n        Resource._cpuMemory += cpuSize;\r\n        Resource._gpuMemory += gpuSize;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static destroyUnusedResources(): void {\r\n        _disposingCounter = 0; //复位一下，避免异常造成的标志错误\r\n        _clearRetry = 0;\r\n\r\n        if (!ILaya.loader.loading)\r\n            Resource._destroyUnusedResources(true);\r\n        else\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n    }\r\n\r\n    /** @private */\r\n    private static _destroyUnusedResources(force: boolean): void {\r\n        if (!force && ILaya.loader.loading)\r\n            return;\r\n\r\n        ILaya.timer.clear(Resource, Resource._destroyUnusedResources);\r\n        let destroyCnt = 0;\r\n\r\n        for (let k in Resource._idResourcesMap) {\r\n            let res: Resource = Resource._idResourcesMap[k];\r\n            if (!res.lock && res._referenceCount === 0) {\r\n                res.destroy();\r\n                destroyCnt++;\r\n            }\r\n        }\r\n\r\n        if (Resource.DEBUG && destroyCnt > 0)\r\n            console.debug(`destroyUnusedResources(${destroyCnt})`);\r\n\r\n        if (destroyCnt > 0 && _clearRetry < 5) {\r\n            _clearRetry++;\r\n            ILaya.timer.frameLoop(1, Resource, Resource._destroyUnusedResources);\r\n        }\r\n    }\r\n\r\n    private _cpuMemory: number = 0;\r\n    private _gpuMemory: number = 0;\r\n    _id: number = 0;\r\n    protected _destroyed?: boolean;\r\n    protected _referenceCount: number = 0;\r\n    protected _obsolute: boolean;\r\n\r\n    /**是否加锁，如果true为不能使用自动释放机制。*/\r\n    lock?: boolean;\r\n    /**名称。 */\r\n    name?: string;\r\n    /**获取资源的URL地址。 */\r\n    url: string;\r\n    /**获取资源的UUID。 */\r\n    uuid: string;\r\n\r\n    /**是否在引用计数为0的时候立马删除他 */\r\n    destroyedImmediately: boolean;\r\n\r\n    /**\r\n     * 获取唯一标识ID,通常用于识别。\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 内存大小。\r\n     */\r\n    get cpuMemory(): number {\r\n        return this._cpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 显存大小。\r\n     */\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n\r\n    /**\r\n     * 是否已销毁。\r\n     */\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /** 如果设置一个已缓存的资源obsolute为true，则\r\n     * 1）getRes仍然可以返回这个资源；\r\n     * 2）下次加载时会忽略这个缓存而去重新加载。。\r\n     */\r\n    get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * 获取资源的引用计数。\r\n     */\r\n    get referenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Resource</code> 实例。\r\n     * @param managed 如果设置为true，则在destroyUnusedResources时会检测引用计数并自动释放如果计数为0。默认为true。\r\n     */\r\n    protected constructor(managed?: boolean) {\r\n        super();\r\n\r\n        this._id = ++_idCounter;\r\n        this._destroyed = false;\r\n        this._referenceCount = 0;\r\n        if (managed == null || managed)\r\n            Resource._idResourcesMap[this.id] = this;\r\n        this.lock = false;\r\n        this.destroyedImmediately = true;\r\n    }\r\n\r\n    _setCPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._cpuMemory;\r\n        this._cpuMemory = value;\r\n        Resource._addCPUMemory(offsetValue);\r\n    }\r\n\r\n    _setGPUMemory(value: number): void {\r\n        var offsetValue: number = value - this._gpuMemory;\r\n        this._gpuMemory = value;\r\n        Resource._addGPUMemory(offsetValue);\r\n    }\r\n\r\n    _setCreateURL(url: string, uuid?: string): void {\r\n        this.url = url;\r\n        this.uuid = uuid;\r\n    }\r\n\r\n    /**\r\n     * 返回资源是否从指定url创建\r\n     */\r\n    isCreateFromURL(url: string): boolean {\r\n        return this.uuid && url.length === this.uuid.length + 6 && url.endsWith(this.uuid)\r\n            || this.url === url;\r\n    }\r\n\r\n    _addReference(count: number = 1): void {\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    _removeReference(count: number = 1): void {\r\n        this._referenceCount -= count;\r\n        //如果_removeReference发生在destroy中，可能是在collect或者处理内嵌资源的释放\r\n        if (_disposingCounter > 0 && this._referenceCount <= 0 && !this.lock && this.destroyedImmediately) {\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清除引用\r\n     */\r\n    _clearReference(): void {\r\n        this._referenceCount = 0;\r\n    }\r\n\r\n    protected _recoverResource(): void {\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n    }\r\n\r\n    protected _activeResource(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁资源,销毁后资源不能恢复。\r\n     */\r\n    destroy(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._destroyed = true;\r\n        this.lock = false; //解锁资源，强制清理\r\n        _disposingCounter++;\r\n        this._disposeResource();\r\n        _disposingCounter--;\r\n        this.offAll();\r\n        delete Resource._idResourcesMap[this.id];\r\n        if (this.url) {\r\n            if (Resource.DEBUG)\r\n                console.debug(`destroy ${Object.getPrototypeOf(this).constructor.name} ${this.url}`);\r\n            ILaya.loader.clearRes(this.url, this);\r\n        }\r\n    }\r\n}","/**\r\n * 纹理的过滤模式。\r\n */\r\nexport enum FilterMode {\r\n    /**点过滤。*/\r\n    Point = 0,\r\n    /**双线性过滤。*/\r\n    Bilinear = 1,\r\n    /**三线性过滤。*/\r\n    Trilinear = 2,\r\n}","export enum RenderCapable {\r\n    Element_Index_Uint32,//Index Usage 32\r\n    TextureFormat_R32G32B32A32,//Texturefloat32\r\n    TextureFormat_R16G16B16A16,//TextureFloat16\r\n    Texture_anisotropic,//anisotropic function\r\n    RenderTextureFormat_R16G16B16A16,//Rendertexture Float16\r\n    RenderTextureFormat_R32G32B32A32, // rendertexture float32\r\n    RenderTextureFormat_Depth,//depthTexture\r\n    RenderTextureFormat_ShadowMap,//shadowMap Texture\r\n    Vertex_VAO,//VAO\r\n    DrawElement_Instance,//Instance\r\n    Shader_TextureLod,//Texture lod sampler\r\n    COMPRESS_TEXTURE_S3TC,//compress Texture dds\r\n    COMPRESS_TEXTURE_S3TC_SRGB,//Compress Texture dds srgb\r\n    COMPRESS_TEXTURE_PVRTC,//Compress Texture PVR\r\n    COMPRESS_TEXTURE_ETC1,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ETC,//Compress Texture ktx\r\n    COMPRESS_TEXTURE_ASTC,//Compress Texture astc\r\n    Texture_SRGB,//Textrue srgb   \r\n    MSAA,//MSAA\r\n    UnifromBufferObject,\r\n    GRAPHICS_API_GLES3,//TODO 感觉不太合适\r\n    Texture3D,\r\n    Texture_FloatLinearFiltering,\r\n    Texture_HalfFloatLinearFiltering,\r\n}","import { Config } from \"../../Config\";\r\nimport { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\nimport { TextureCompareMode } from \"../RenderEngine/RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\r\nimport { Resource } from \"./Resource\";\r\n\r\n/**\r\n * <code>BaseTexture</code> 纹理的父类，抽象类，不允许实例。\r\n */\r\nexport class BaseTexture extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    _texture: InternalTexture;\r\n    /**@internal */\r\n    hdrEncodeFormat: HDREncodeFormat;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    protected _dimension: TextureDimension;\r\n\r\n    /**\r\n     * 纹理几何属性\r\n     */\r\n    public get dimension(): TextureDimension {\r\n        return this._dimension;\r\n    }\r\n\r\n    protected _format: TextureFormat;\r\n    /**\r\n     * 纹理格式\r\n     */\r\n    public get format(): TextureFormat {\r\n        return this._format;\r\n    }\r\n\r\n    /**\r\n     * 是否生成mipmap\r\n     */\r\n    public get mipmap(): boolean {\r\n        return this._texture.mipmap;\r\n    }\r\n\r\n    public get mipmapCount(): number {\r\n        return this._texture.mipmapCount;\r\n    }\r\n\r\n    /**\r\n     * 各向异性值\r\n     */\r\n    public get anisoLevel(): number {\r\n        return this._texture.anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        this._texture.anisoLevel = value;\r\n    }\r\n\r\n    /**\r\n     * 采样过滤模式\r\n     */\r\n    public get filterMode(): FilterMode {\r\n        return this._texture.filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        this._texture.filterMode = value;\r\n    }\r\n\r\n    /**\r\n     * U方向采样模式\r\n     */\r\n    public get wrapModeU(): WrapMode {\r\n        return this._texture.wrapU;\r\n    }\r\n    public set wrapModeU(value: WrapMode) {\r\n        this._texture.wrapU = value;\r\n    }\r\n\r\n    /**\r\n     * V方向采样模式\r\n     */\r\n    public get wrapModeV(): WrapMode {\r\n        return this._texture.wrapV;\r\n    }\r\n    public set wrapModeV(value: WrapMode) {\r\n        this._texture.wrapV = value;\r\n    }\r\n\r\n    /**\r\n     * W方向采样模式\r\n     */\r\n    public get wrapModeW(): WrapMode {\r\n        return this._texture.wrapW;\r\n    }\r\n    public set wrapModeW(value: WrapMode) {\r\n        this._texture.wrapW = value;\r\n    }\r\n\r\n    /**\r\n     * 贴图压缩格式\r\n     */\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._texture.compareMode;\r\n    }\r\n\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._texture.compareMode = LayaGL.textureContext.setTextureCompareMode(this._texture, value);\r\n    }\r\n\r\n\r\n    /**\r\n     * gamma矫正值\r\n     * 如果是1.0  texture2D直接采样就是linear \r\n     */\r\n    public get gammaCorrection(): number {\r\n        return this._texture.gammaCorrection;\r\n    }\r\n\r\n    /**\r\n     * mipmap起始等级\r\n     */\r\n    public set baseMipmapLevel(value: number) {\r\n        this._texture.baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel(): number {\r\n        return this._texture.baseMipmapLevel;\r\n    }\r\n\r\n    /**\r\n     * 最大Mipmap等级\r\n     */\r\n    public set maxMipmapLevel(value: number) {\r\n        this._texture.maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel(): number {\r\n        return this._texture.maxMipmapLevel;\r\n    }\r\n\r\n    /**@internal */\r\n    _gammaSpace: boolean = false;\r\n    // todo\r\n    public get gammaSpace(): boolean {\r\n        // return this._gammaSpace;\r\n        return this._texture.useSRGBLoad || this._texture.gammaCorrection > 1;\r\n    }\r\n\r\n    /**\r\n     * 实例化一个纹理\r\n     * @param width 长\r\n     * @param height 宽\r\n     * @param format 格式\r\n     */\r\n    constructor(width: number, height: number, format: number) {\r\n        super();\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = format;\r\n        this.destroyedImmediately = Config.destroyResourceImmediatelyDefault;\r\n        this.hdrEncodeFormat = HDREncodeFormat.NONE;\r\n    }\r\n\r\n    /**\r\n     * 是否是gpu压缩纹理格式\r\n     * @returns \r\n     */\r\n    gpuCompressFormat(): boolean {\r\n        let format = this._format;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n            case TextureFormat.R16G16B16:\r\n            case TextureFormat.R16G16B16A16:\r\n            case TextureFormat.R32G32B32:\r\n            case TextureFormat.R32G32B32A32:\r\n            case TextureFormat.R5G6B5:\r\n            case TextureFormat.Alpha8:\r\n                return false;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n            case TextureFormat.ETC1RGB:\r\n            case TextureFormat.ETC2RGB:\r\n            case TextureFormat.ETC2RGBA:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.PVRTCRGB_2BPPV:\r\n            case TextureFormat.PVRTCRGBA_2BPPV:\r\n            case TextureFormat.PVRTCRGB_4BPPV:\r\n            case TextureFormat.PVRTCRGBA_4BPPV:\r\n            case TextureFormat.ASTC4x4:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取纹理格式的字节数\r\n     * @internal\r\n     */\r\n    _getFormatByteCount(): number {\r\n        switch (this._format) {\r\n            case TextureFormat.R8G8B8:\r\n                return 3;\r\n            case TextureFormat.R8G8B8A8:\r\n                return 4;\r\n            case TextureFormat.R5G6B5:\r\n                return 1;\r\n            case TextureFormat.Alpha8:\r\n                return 1;\r\n            case TextureFormat.R16G16B16A16:\r\n                return 2;\r\n            case TextureFormat.R32G32B32A32:\r\n                return 4;\r\n\r\n            default:\r\n                throw \"Texture2D: unknown format.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getSource() {\r\n        return this._texture.resource;\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        throw \"defaulte\"\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        this._texture.dispose();\r\n    }\r\n}","import { Matrix } from \"../maths/Matrix\"\r\n\r\n/**\r\n * <p> <code>Byte</code> 类提供用于优化读取、写入以及处理二进制数据的方法和属性。</p>\r\n * <p> <code>Byte</code> 类适用于需要在字节层访问数据的高级开发人员。</p>\r\n */\r\nexport class Byte {\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。<br/>\r\n     * <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**@private */\r\n    private static _sysEndian: string = null;\r\n    /**@private 是否为小端数据。*/\r\n    protected _xd_: boolean = true;\r\n    /**@private */\r\n    private _allocated_: number = 8;\r\n    /**@private 原始数据。*/\r\n    protected _d_: any\r\n    /**@private DataView*/\r\n    protected _u8d_: any;\r\n    /**@private */\r\n    protected _pos_: number = 0;\r\n    /**@private */\r\n    protected _length: number = 0;\r\n\r\n    /**\r\n     * <p>获取当前主机的字节序。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     * <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * @return 当前系统的字节序。\r\n     */\r\n    static getSystemEndian(): string {\r\n        if (!Byte._sysEndian) {\r\n            var buffer: any = new ArrayBuffer(2);\r\n            new DataView(buffer).setInt16(0, 256, true);\r\n            Byte._sysEndian = (new Int16Array(buffer))[0] === 256 ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n        }\r\n        return Byte._sysEndian;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Byte</code> 类的实例。\r\n     * @param\tdata\t用于指定初始化的元素数目，或者用于初始化的TypedArray对象、ArrayBuffer对象。如果为 null ，则预分配一定的内存空间，当可用空间不足时，优先使用这部分内存，如果还不够，则重新分配所需内存。\r\n     */\r\n    constructor(data: any = null) {\r\n        if (data) {\r\n            this._u8d_ = new Uint8Array(data);\r\n            this._d_ = new DataView(this._u8d_.buffer);\r\n            this._length = this._d_.byteLength;\r\n        } else {\r\n            this._resizeBuffer(this._allocated_);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取此对象的 ArrayBuffer 数据，数据只包含有效数据部分。\r\n     */\r\n    get buffer(): ArrayBuffer {\r\n        var rstBuffer: ArrayBuffer = this._d_.buffer;\r\n        if (rstBuffer.byteLength === this._length) return rstBuffer;\r\n        return rstBuffer.slice(0, this._length);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 实例的字节序。取值为：<code>BIG_ENDIAN</code> 或 <code>BIG_ENDIAN</code> 。</p>\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。通过 <code>getSystemEndian</code> 可以获取当前系统的字节序。</p>\r\n     * <p> <code>BIG_ENDIAN</code> ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。<br/>\r\n     *  <code>LITTLE_ENDIAN</code> ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._xd_ ? Byte.LITTLE_ENDIAN : Byte.BIG_ENDIAN;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._xd_ = (value === Byte.LITTLE_ENDIAN);\r\n    }\r\n\r\n    /**\r\n     * <p> <code>Byte</code> 对象的长度（以字节为单位）。</p>\r\n     * <p>如果将长度设置为大于当前长度的值，则用零填充字节数组的右侧；如果将长度设置为小于当前长度的值，将会截断该字节数组。</p>\r\n     * <p>如果要设置的长度大于当前已分配的内存空间的字节长度，则重新分配内存空间，大小为以下两者较大者：要设置的长度、当前已分配的长度的2倍，并将原有数据拷贝到新的内存空间中；如果要设置的长度小于当前已分配的内存空间的字节长度，也会重新分配内存空间，大小为要设置的长度，并将原有数据从头截断为要设置的长度存入新的内存空间中。</p>\r\n     */\r\n    set length(value: number) {\r\n        if (this._allocated_ < value) this._resizeBuffer(this._allocated_ = Math.floor(Math.max(value, this._allocated_ * 2)));\r\n        else if (this._allocated_ > value) this._resizeBuffer(this._allocated_ = value);\r\n        this._length = value;\r\n    }\r\n\r\n    get length(): number {\r\n        return this._length;\r\n    }\r\n\r\n    /**@private */\r\n    private _resizeBuffer(len: number): void {\r\n        try {\r\n            var newByteView: any = new Uint8Array(len);\r\n            if (this._u8d_ != null) {\r\n                if (this._u8d_.length <= len) newByteView.set(this._u8d_);\r\n                else newByteView.set(this._u8d_.subarray(0, len));\r\n            }\r\n            this._u8d_ = newByteView;\r\n            this._d_ = new DataView(newByteView.buffer);\r\n        } catch (err) {\r\n            throw \"Invalid typed array length:\" + len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getString(): string {\r\n        return this.readString();\r\n    }\r\n\r\n    /**\r\n     * <p>常用于解析固定格式的字节流。</p>\r\n     * <p>先从字节流的当前字节偏移位置处读取一个 <code>Uint16</code> 值，然后以此值为长度，读取此长度的字符串。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    readString(): string {\r\n        return this._rUTF(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Float32Array 对象，在 JavaScript 环境下，是原生的 HTML5 Float32Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Float32Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    getFloat32Array(start: number, len: number): any {\r\n        return this.readFloat32Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Float32Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Float32Array 对象。\r\n     */\r\n    readFloat32Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Float32Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    getUint8Array(start: number, len: number): Uint8Array {\r\n        return this.readUint8Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Uint8Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readUint8Array(start: number, len: number): Uint8Array {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Uint8Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。</p>\r\n     * <p><b>注意：</b>返回的 Int16Array 对象，在 JavaScript 环境下，是原生的 HTML5 Int16Array 对象，对此对象的读取操作都是基于运行此程序的当前主机字节序，此顺序可能与实际数据的字节序不同，如果使用此对象进行读取，需要用户知晓实际数据的字节序和当前主机字节序，如果相同，可正常读取，否则需要用户对实际数据(Int16Array.buffer)包装一层 DataView ，使用 DataView 对象可按照指定的字节序进行读取。</p>\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Int16Array 对象。\r\n     */\r\n    getInt16Array(start: number, len: number): any {\r\n        return this.readInt16Array(start, len);\r\n    }\r\n\r\n    /**\r\n     * 从字节流中 <code>start</code> 参数指定的位置开始，读取 <code>len</code> 参数指定的字节数的数据，用于创建一个 <code>Int16Array</code> 对象并返回此对象。\r\n     * @param\tstart\t开始读取的字节偏移量位置。\r\n     * @param\tlen\t\t需要读取的字节长度。如果要读取的长度超过可读取范围，则只返回可读范围内的值。\r\n     * @return  读取的 Uint8Array 对象。\r\n     */\r\n    readInt16Array(start: number, len: number): any {\r\n        var end: number = start + len;\r\n        end = (end > this._length) ? this._length : end;\r\n        var v: any = new Int16Array(this._d_.buffer.slice(start, end));\r\n        this._pos_ = end;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    getFloat32(): number {\r\n        return this.readFloat32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移位置处读取一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @return 单精度（32 位）浮点数。\r\n     */\r\n    readFloat32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getFloat32 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    getFloat64(): number {\r\n        return this.readFloat64();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @return 双精度（64 位）浮点数。\r\n     */\r\n    readFloat64(): number {\r\n        if (this._pos_ + 8 > this._length) throw \"getFloat64 error - Out of bounds\";\r\n        var v: number = this._d_.getFloat64(this._pos_, this._xd_);\r\n        this._pos_ += 8;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 单精度（32 位）浮点数。\r\n     * @param\tvalue\t单精度（32 位）浮点数。\r\n     */\r\n    writeFloat32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setFloat32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入一个 IEEE 754 双精度（64 位）浮点数。\r\n     * @param\tvalue\t双精度（64 位）浮点数。\r\n     */\r\n    writeFloat64(value: number): void {\r\n        this._ensureWrite(this._pos_ + 8);\r\n        this._d_.setFloat64(this._pos_, value, this._xd_);\r\n        this._pos_ += 8;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    getInt32(): number {\r\n        return this.readInt32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int32 值。\r\n     * @return Int32 值。\r\n     */\r\n    readInt32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getInt32 error - Out of bounds\";\r\n        var float: number = this._d_.getInt32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return float;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    getUint32(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint32 值。\r\n     * @return Uint32 值。\r\n     */\r\n    readUint32(): number {\r\n        if (this._pos_ + 4 > this._length) throw \"getUint32 error - Out of bounds\";\r\n        var v: number = this._d_.getUint32(this._pos_, this._xd_);\r\n        this._pos_ += 4;\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int32 值。\r\n     * @param\tvalue\t需要写入的 Int32 值。\r\n     */\r\n    writeInt32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setInt32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入 Uint32 值。\r\n     * @param\tvalue\t需要写入的 Uint32 值。\r\n     */\r\n    writeUint32(value: number): void {\r\n        this._ensureWrite(this._pos_ + 4);\r\n        this._d_.setUint32(this._pos_, value, this._xd_);\r\n        this._pos_ += 4;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    getInt16(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Int16 值。\r\n     * @return Int16 值。\r\n     */\r\n    readInt16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getInt16 error - Out of bounds\";\r\n        var us: number = this._d_.getInt16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    getUint16(): number {\r\n        return this.readUint16();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint16 值。\r\n     * @return Uint16 值。\r\n     */\r\n    readUint16(): number {\r\n        if (this._pos_ + 2 > this._length) throw \"getUint16 error - Out of bounds\";\r\n        var us: number = this._d_.getUint16(this._pos_, this._xd_);\r\n        this._pos_ += 2;\r\n        return us;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint16 值。\r\n     * @param\tvalue\t需要写入的Uint16 值。\r\n     */\r\n    writeUint16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setUint16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Int16 值。\r\n     * @param\tvalue\t需要写入的 Int16 值。\r\n     */\r\n    writeInt16(value: number): void {\r\n        this._ensureWrite(this._pos_ + 2);\r\n        this._d_.setInt16(this._pos_, value, this._xd_);\r\n        this._pos_ += 2;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    getUint8(): number {\r\n        return this.readUint8();\r\n    }\r\n\r\n    /**\r\n     * 从字节流的当前字节偏移量位置处读取一个 Uint8 值。\r\n     * @return Uint8 值。\r\n     */\r\n    readUint8(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"getUint8 error - Out of bounds\";\r\n        return this._u8d_[this._pos_++];\r\n    }\r\n\r\n    /**\r\n     * 在字节流的当前字节偏移量位置处写入指定的 Uint8 值。\r\n     * @param\tvalue\t需要写入的 Uint8 值。\r\n     */\r\n    writeUint8(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setUint8(this._pos_, value);\r\n        this._pos_++;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUInt8(pos: number): number {\r\n        return this._readUInt8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint8 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint8 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUInt8(pos: number): number {\r\n        return this._d_.getUint8(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _getUint16(pos: number): number {\r\n        return this._readUint16(pos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 从字节流的指定字节偏移量位置处读取一个 Uint16 值。\r\n     * @param\tpos\t字节读取位置。\r\n     * @return Uint16 值。\r\n     */\r\n    //TODO:coverage\r\n    _readUint16(pos: number): number {\r\n        return this._d_.getUint16(pos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _getMatrix(): Matrix {\r\n        return this._readMatrix();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用 getFloat32() 读取6个值，用于创建并返回一个 Matrix 对象。\r\n     * @return  Matrix 对象。\r\n     */\r\n    //TODO:coverage\r\n    _readMatrix(): Matrix {\r\n        var rst: Matrix = new Matrix(this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32(), this.getFloat32());\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取指定长度的 UTF 型字符串。\r\n     * @param\tlen 需要读取的长度。\r\n     * @return 读取的字符串。\r\n     */\r\n    private _rUTF(len: number): string {\r\n        var v: string = \"\", max: number = this._pos_ + len, c: number, c2: number, c3: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        var strs: any[] = [];\r\n        var n: number = 0;\r\n        strs.length = 1000;\r\n        while (this._pos_ < max) {\r\n            c = u[this._pos_++];\r\n            if (c < 0x80) {\r\n                if (c != 0)\r\n                    //v += f(c);\\\r\n                    strs[n++] = f(c);\r\n            } else if (c < 0xE0) {\r\n                //v += f(((c & 0x3F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x3F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else if (c < 0xF0) {\r\n                c2 = u[this._pos_++];\r\n                //v += f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[_pos_++] & 0x7F));\r\n                strs[n++] = f(((c & 0x1F) << 12) | ((c2 & 0x7F) << 6) | (u[this._pos_++] & 0x7F));\r\n            } else {\r\n                c2 = u[this._pos_++];\r\n                c3 = u[this._pos_++];\r\n                //v += f(((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 << 6) & 0x7F) | (u[_pos_++] & 0x7F));\r\n                const _code = ((c & 0x0F) << 18) | ((c2 & 0x7F) << 12) | ((c3 & 0x7F) << 6) | (u[this._pos_++] & 0x7F);\r\n                if (_code >= 0x10000) {\r\n                    const _offset = _code - 0x10000;\r\n                    const _lead = 0xd800 | (_offset >> 10);\r\n                    const _trail = 0xdc00 | (_offset & 0x3ff);\r\n                    strs[n++] = f(_lead);\r\n                    strs[n++] = f(_trail);\r\n                }\r\n                else {\r\n                    strs[n++] = f(_code);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n        strs.length = n;\r\n        return strs.join('');\r\n        //return v;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    getCustomString(len: number): string {\r\n        return this.readCustomString(len);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读取 <code>len</code> 参数指定的长度的字符串。\r\n     * @param\tlen\t要读取的字符串的长度。\r\n     * @return 指定长度的字符串。\r\n     */\r\n    //TODO:coverage\r\n    readCustomString(len: number): string {\r\n        var v: string = \"\", ulen: number = 0, c: number, c2: number, f: Function = String.fromCharCode;\r\n        var u: any = this._u8d_, i: number = 0;\r\n        while (len > 0) {\r\n            c = u[this._pos_];\r\n            if (c < 0x80) {\r\n                v += f(c);\r\n                this._pos_++;\r\n                len--;\r\n            } else {\r\n                ulen = c - 0x80;\r\n                this._pos_++;\r\n                len -= ulen;\r\n                while (ulen > 0) {\r\n                    c = u[this._pos_++];\r\n                    c2 = u[this._pos_++];\r\n                    v += f((c2 << 8) | c);\r\n                    ulen--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return v;\r\n    }\r\n\r\n    /**\r\n     * 移动或返回 Byte 对象的读写指针的当前位置（以字节为单位）。下一次调用读取方法时将在此位置开始读取，或者下一次调用写入方法时将在此位置开始写入。\r\n     */\r\n    get pos(): number {\r\n        return this._pos_;\r\n    }\r\n\r\n    set pos(value: number) {\r\n        this._pos_ = value;\r\n        //$MOD byteOffset是只读的，这里进行赋值没有意义。\r\n        //_d_.byteOffset = value;\r\n    }\r\n\r\n    /**\r\n     * 可从字节流的当前位置到末尾读取的数据的字节数。\r\n     */\r\n    get bytesAvailable(): number {\r\n        return this._length - this._pos_;\r\n    }\r\n\r\n    /**\r\n     * 清除字节数组的内容，并将 length 和 pos 属性重置为 0。调用此方法将释放 Byte 实例占用的内存。\r\n     */\r\n    clear(): void {\r\n        this._pos_ = 0;\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取此对象的 ArrayBuffer 引用。\r\n     * @return\r\n     */\r\n    __getBuffer(): ArrayBuffer {\r\n        //this._d_.buffer.byteLength = this.length;\r\n        return this._d_.buffer;\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。类似于 writeUTF() 方法，但 writeUTFBytes() 不使用 16 位长度的字为字符串添加前缀。</p>\r\n     * <p>对应的读取方法为： getUTFBytes 。</p>\r\n     * @param value 要写入的字符串。\r\n     */\r\n    writeUTFBytes(value: string): void {\r\n        // utf8-decode\r\n        value = value + \"\";\r\n        for (var i: number = 0, sz: number = value.length; i < sz; i++) {\r\n            var c: number = value.charCodeAt(i);\r\n\r\n            if (c <= 0x7F) {\r\n                this.writeByte(c);\r\n            } else if (c <= 0x7FF) {\r\n                //优化为直接写入多个字节，而不必重复调用writeByte，免去额外的调用和逻辑开销。\r\n                this._ensureWrite(this._pos_ + 2);\r\n                this._u8d_.set([0xC0 | (c >> 6), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 2;\r\n            } else if (c >= 0xD800 && c <= 0xDBFF) {\r\n                i++;\r\n                const c2 = value.charCodeAt(i);\r\n                if (!Number.isNaN(c2) && c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                    const _p1 = (c & 0x3FF) + 0x40;\r\n                    const _p2 = c2 & 0x3FF;\r\n\r\n                    const _b1 = 0xF0 | ((_p1 >> 8) & 0x3F);\r\n                    const _b2 = 0x80 | ((_p1 >> 2) & 0x3F);\r\n                    const _b3 = 0x80 | ((_p1 & 0x3) << 4) | ((_p2 >> 6) & 0xF);\r\n                    const _b4 = 0x80 | (_p2 & 0x3F);\r\n\r\n                    this._ensureWrite(this._pos_ + 4);\r\n                    this._u8d_.set([_b1, _b2, _b3, _b4], this._pos_);\r\n                    this._pos_ += 4;\r\n                }\r\n            } else if (c <= 0xFFFF) {\r\n                this._ensureWrite(this._pos_ + 3);\r\n                this._u8d_.set([0xE0 | (c >> 12), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 3;\r\n            } else {\r\n                this._ensureWrite(this._pos_ + 4);\r\n                this._u8d_.set([0xF0 | (c >> 18), 0x80 | ((c >> 12) & 0x3F), 0x80 | ((c >> 6) & 0x3F), 0x80 | (c & 0x3F)], this._pos_);\r\n                this._pos_ += 4;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 16 位整数），然后写入表示字符串字符的字节。</p>\r\n     * <p>对应的读取方法为： getUTFString 。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString(value: string): void {\r\n        var tPos: number = this.pos;\r\n        this.writeUint16(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos: number = this.pos - tPos - 2;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint16(tPos, dPos, this._xd_);\r\n    }\r\n\r\n    /**\r\n     * <p>将 UTF-8 字符串写入字节流。先写入以字节表示的 UTF-8 字符串长度（作为 32 位整数），然后写入表示字符串字符的字节。</p>\r\n     * @param\tvalue 要写入的字符串值。\r\n     */\r\n    writeUTFString32(value: string): void {\r\n        var tPos = this.pos;\r\n        this.writeUint32(1);\r\n        this.writeUTFBytes(value);\r\n        var dPos = this.pos - tPos - 4;\r\n        //trace(\"writeLen:\",dPos,\"pos:\",tPos);\r\n        this._d_.setUint32(tPos, dPos, this._xd_);\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 读取 UTF-8 字符串。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFString(): string {\r\n        //var tPos:int = pos;\r\n        //var len:int = getUint16();\r\n        ////trace(\"readLen:\"+len,\"pos,\",tPos);\r\n        return this.readUTFBytes(this.getUint16());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    readUTFString32(): string {\r\n        return this.readUTFBytes(this.getUint32());\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个 UTF-8 字符串。假定字符串的前缀是一个无符号的短整型（以此字节表示要读取的长度）。</p>\r\n     * <p>对应的写入方法为： writeUTFString 。</p>\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFString(): string {\r\n        return this.readUTFString();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 读字符串，必须是 writeUTFBytes 方法写入的字符串。\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    readUTFBytes(len: number = -1): string {\r\n        if (len === 0) return \"\";\r\n        var lastBytes: number = this.bytesAvailable;\r\n        if (len > lastBytes) throw \"readUTFBytes error - Out of bounds\";\r\n        len = len > 0 ? len : lastBytes;\r\n        return this._rUTF(len);\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取一个由 length 参数指定的长度的 UTF-8 字节序列，并返回一个字符串。</p>\r\n     * <p>一般读取的是由 writeUTFBytes 方法写入的字符串。</p>\r\n     * @param len\t要读的buffer长度，默认将读取缓冲区全部数据。\r\n     * @return 读取的字符串。\r\n     */\r\n    getUTFBytes(len: number = -1): string {\r\n        return this.readUTFBytes(len);\r\n    }\r\n\r\n    /**\r\n     * <p>在字节流中写入一个字节。</p>\r\n     * <p>使用参数的低 8 位。忽略高 24 位。</p>\r\n     * @param\tvalue\r\n     */\r\n    writeByte(value: number): void {\r\n        this._ensureWrite(this._pos_ + 1);\r\n        this._d_.setInt8(this._pos_, value);\r\n        this._pos_ += 1;\r\n    }\r\n\r\n    /**\r\n     * <p>从字节流中读取带符号的字节。</p>\r\n     * <p>返回值的范围是从 -128 到 127。</p>\r\n     * @return 介于 -128 和 127 之间的整数。\r\n     */\r\n    readByte(): number {\r\n        if (this._pos_ + 1 > this._length) throw \"readByte error - Out of bounds\";\r\n        return this._d_.getInt8(this._pos_++);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 从字节流中读取带符号的字节。\r\n     */\r\n    getByte(): number {\r\n        return this.readByte();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * <p>保证该字节流的可用长度不小于 <code>lengthToEnsure</code> 参数指定的值。</p>\r\n     * @param\tlengthToEnsure\t指定的长度。\r\n     */\r\n    _ensureWrite(lengthToEnsure: number): void {\r\n        if (this._length < lengthToEnsure) this._length = lengthToEnsure;\r\n        if (this._allocated_ < lengthToEnsure) this.length = lengthToEnsure;\r\n    }\r\n\r\n    /**\r\n     * <p>将指定 arraybuffer 对象中的以 offset 为起始偏移量， length 为长度的字节序列写入字节流。</p>\r\n     * <p>如果省略 length 参数，则使用默认长度 0，该方法将从 offset 开始写入整个缓冲区；如果还省略了 offset 参数，则写入整个缓冲区。</p>\r\n     * <p>如果 offset 或 length 小于0，本函数将抛出异常。</p>\r\n     * @param\tarraybuffer\t需要写入的 Arraybuffer 对象。\r\n     * @param\toffset\t\tArraybuffer 对象的索引的偏移量（以字节为单位）\r\n     * @param\tlength\t\t从 Arraybuffer 对象写入到 Byte 对象的长度（以字节为单位）\r\n     */\r\n    writeArrayBuffer(arraybuffer: any, offset: number = 0, length: number = 0): void {\r\n        if (offset < 0 || length < 0) throw \"writeArrayBuffer error - Out of bounds\";\r\n        if (length == 0) length = arraybuffer.byteLength - offset;\r\n        this._ensureWrite(this._pos_ + length);\r\n        var uint8array: any = new Uint8Array(arraybuffer);\r\n        this._u8d_.set(uint8array.subarray(offset, offset + length), this._pos_);\r\n        this._pos_ += length;\r\n    }\r\n\r\n    /**\r\n     * 读取ArrayBuffer数据\r\n     * @param\tlength\r\n     * @return\r\n     */\r\n    readArrayBuffer(length: number): ArrayBuffer {\r\n        var rst: ArrayBuffer;\r\n        rst = this._u8d_.buffer.slice(this._pos_, this._pos_ + length);\r\n        this._pos_ = this._pos_ + length\r\n        return rst;\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>HalfFloatUtils</code> 类用于创建HalfFloat工具。\r\n */\r\nexport class HalfFloatUtils {\r\n    /**@internal */\r\n    private static _buffer: ArrayBuffer = new ArrayBuffer(4);\r\n    /**@internal */\r\n    private static _floatView: Float32Array = new Float32Array(HalfFloatUtils._buffer);\r\n    /**@internal */\r\n    private static _uint32View: Uint32Array = new Uint32Array(HalfFloatUtils._buffer);\r\n\r\n    /**@internal */\r\n    private static _baseTable: Uint32Array = new Uint32Array(512);\r\n    /**@internal */\r\n    private static _shiftTable: Uint32Array = new Uint32Array(512);\r\n\r\n    /**@internal */\r\n    private static _mantissaTable: Uint32Array = new Uint32Array(2048);\r\n    /**@internal */\r\n    private static _exponentTable: Uint32Array = new Uint32Array(64);\r\n    /**@internal */\r\n    private static _offsetTable: Uint32Array = new Uint32Array(64);\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        for (var i: number = 0; i < 256; ++i) {\r\n            var e: number = i - 127;\r\n            // very small number (0, -0)\r\n            if (e < -27) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0000;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // small number (denorm)\r\n            } else if (e < -14) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x0400 >> (-e - 14);\r\n                HalfFloatUtils._baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = -e - 1;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = -e - 1;\r\n\r\n                // normal number\r\n            } else if (e <= 15) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = (e + 15) << 10;\r\n                HalfFloatUtils._baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n\r\n                // large number (Infinity, -Infinity)\r\n            } else if (e < 128) {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 24;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 24;\r\n\r\n                // stay (NaN, Infinity, -Infinity)\r\n            } else {\r\n                HalfFloatUtils._baseTable[i | 0x000] = 0x7c00;\r\n                HalfFloatUtils._baseTable[i | 0x100] = 0xfc00;\r\n                HalfFloatUtils._shiftTable[i | 0x000] = 13;\r\n                HalfFloatUtils._shiftTable[i | 0x100] = 13;\r\n            }\r\n        }\r\n\r\n        HalfFloatUtils._mantissaTable[0] = 0;\r\n        for (i = 1; i < 1024; ++i) {\r\n            var m: number = i << 13;    // zero pad mantissa bits\r\n            e = 0;          // zero exponent\r\n\r\n            // normalized\r\n            while ((m & 0x00800000) === 0) {\r\n                e -= 0x00800000;    // decrement exponent\r\n                m <<= 1;\r\n            }\r\n\r\n            m &= ~0x00800000;   // clear leading 1 bit\r\n            e += 0x38800000;    // adjust bias\r\n\r\n            HalfFloatUtils._mantissaTable[i] = m | e;\r\n        }\r\n        for (i = 1024; i < 2048; ++i) {\r\n            HalfFloatUtils._mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\r\n        }\r\n\r\n        HalfFloatUtils._exponentTable[0] = 0;\r\n        for (i = 1; i < 31; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = i << 23;\r\n        }\r\n        HalfFloatUtils._exponentTable[31] = 0x47800000;\r\n        HalfFloatUtils._exponentTable[32] = 0x80000000;\r\n        for (i = 33; i < 63; ++i) {\r\n            HalfFloatUtils._exponentTable[i] = 0x80000000 + ((i - 32) << 23);\r\n        }\r\n        HalfFloatUtils._exponentTable[63] = 0xc7800000;\r\n\r\n        HalfFloatUtils._offsetTable[0] = 0;\r\n        for (i = 1; i < 64; ++i) {\r\n            if (i === 32) {\r\n                HalfFloatUtils._offsetTable[i] = 0;\r\n            } else {\r\n                HalfFloatUtils._offsetTable[i] = 1024;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * round a number to a half float number bits.\r\n     * @param {number} num\r\n     */\r\n    static roundToFloat16Bits(num: number): number {\r\n        HalfFloatUtils._floatView[0] = num;\r\n        var f: number = HalfFloatUtils._uint32View[0];\r\n        var e: number = (f >> 23) & 0x1ff;\r\n        return HalfFloatUtils._baseTable[e] + ((f & 0x007fffff) >> HalfFloatUtils._shiftTable[e]);\r\n    }\r\n\r\n    /**\r\n     * convert a half float number bits to a number.\r\n     * @param {number} float16bits - half float number bits\r\n     */\r\n    static convertToNumber(float16bits: number): number {\r\n        var m: number = float16bits >> 10;\r\n        HalfFloatUtils._uint32View[0] = HalfFloatUtils._mantissaTable[HalfFloatUtils._offsetTable[m] + (float16bits & 0x3ff)] + HalfFloatUtils._exponentTable[m];\r\n        return HalfFloatUtils._floatView[0];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst FOURCC_DXT1: number = 827611204;\r\nconst FOURCC_DXT3 = 861165636;\r\nconst FOURCC_DXT5: number = 894720068;\r\nconst FOURCC_DX10 = 808540228;\r\nconst DDPF_FOURCC: number = 0x4;\r\nconst DDPF_RGB = 0x40;\r\nconst DDSCAPS2_CUBEMAP = 0x200;\r\nconst DDPF_LUMINANCE = 0x20000;\r\nconst DDSD_MIPMAPCOUNT: number = 0x20000;\r\nconst DDS_MAGIC: number = 0x20534444;\r\nconst DDS_HEADER_LENGTH: number = 31;\r\nconst DDS_DXGI_FORMAT: number = 32;\r\nconst DDS_HEADER_MAGIC: number = 0;\r\nconst DDS_HEADER_SIZE: number = 1;\r\nconst DDS_HEADER_FLAGS: number = 2;\r\nconst DDS_HEADER_HEIGHT: number = 3;\r\nconst DDS_HEADER_WIDTH: number = 4;\r\nconst DDS_HEADER_MIPMAPCOUNT: number = 7;\r\nconst DDS_HEADER_PF_FLAGS: number = 20;\r\nconst DDS_HEADER_PF_FOURCC: number = 21;\r\nconst DDS_HEADER_PF_RGBBPP: number = 22;\r\nconst DDS_HEADER_PF_CAPS2: number = 28;\r\nconst FOURCC_D3DFMT_R16G16B16A16F = 113;\r\nconst FOURCC_D3DFMT_R32G32B32A32F = 116;\r\n\r\nconst Int32ToFourCC = (value: number) => {\r\n    return String.fromCharCode(\r\n        value & 0xff,\r\n        (value >> 8) & 0xff,\r\n        (value >> 16) & 0xff,\r\n        (value >> 24) & 0xff\r\n    );\r\n}\r\n\r\n/**\r\n * dds 未存储 color space 需要手动指定\r\n */\r\nexport class DDSTextureInfo {\r\n\r\n    width: number;\r\n    height: number;\r\n    mipmapCount: number;\r\n    isCube: boolean;\r\n    bpp: number;\r\n    blockBytes: number;\r\n    format: TextureFormat;\r\n    compressed: boolean;\r\n    dataOffset: number;\r\n    source: ArrayBuffer;\r\n\r\n    constructor(width: number, height: number, mipmapCount: number, isCube: boolean, bpp: number, blockBytes: number, dataOffset: number, format: TextureFormat, compressed: boolean, sourceData: ArrayBuffer) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.mipmapCount = mipmapCount;\r\n        this.isCube = isCube;\r\n        this.blockBytes = blockBytes;\r\n        this.dataOffset = dataOffset;\r\n        this.format = format;\r\n        this.source = sourceData;\r\n        this.bpp = bpp;\r\n        this.compressed = compressed;\r\n    }\r\n\r\n    static getDDSTextureInfo(source: ArrayBuffer): DDSTextureInfo {\r\n        let header = new Int32Array(source, 0, DDS_HEADER_LENGTH);\r\n\r\n        let width = header[DDS_HEADER_WIDTH];\r\n        let height = header[DDS_HEADER_HEIGHT];\r\n\r\n        let mipmapCount = 1;\r\n        if (header[DDS_HEADER_FLAGS] & DDSD_MIPMAPCOUNT) {\r\n            mipmapCount = Math.max(1, header[DDS_HEADER_MIPMAPCOUNT]);\r\n        }\r\n\r\n        let fourCC = header[DDS_HEADER_PF_FOURCC];\r\n\r\n        // let extendedHeader = new Int32Array(source, 0, DDS_HEADER_LENGTH + 4);\r\n        // let dxgiFormat = (fourCC == FOURCC_DX10) ? header[32] : 0;\r\n\r\n        let isFourCC = (header[DDS_HEADER_PF_FLAGS] & DDPF_FOURCC) === DDPF_FOURCC;\r\n\r\n        let isRGB = (header[DDS_HEADER_PF_FLAGS] & DDPF_RGB) === DDPF_RGB;\r\n        let isLuminance = (header[DDS_HEADER_PF_FLAGS] & DDPF_LUMINANCE) === DDPF_LUMINANCE;\r\n        let isCube = (header[DDS_HEADER_PF_CAPS2] & DDSCAPS2_CUBEMAP) === DDSCAPS2_CUBEMAP;\r\n        let isCompressed = (fourCC === FOURCC_DXT1 || fourCC === FOURCC_DXT3 || fourCC === FOURCC_DXT5);\r\n\r\n        let layaTexFormat = TextureFormat.DXT1;\r\n        let dataOffset = header[DDS_HEADER_SIZE] + 4;\r\n        let blockBytes = 1;\r\n        // todo  DXT10  unCompressed texture ?\r\n        switch (fourCC) {\r\n            case FOURCC_DXT1:\r\n                layaTexFormat = TextureFormat.DXT1;\r\n                blockBytes = 8;\r\n                break;\r\n            case FOURCC_DXT3:\r\n                layaTexFormat = TextureFormat.DXT3;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_DXT5:\r\n                layaTexFormat = TextureFormat.DXT5;\r\n                blockBytes = 16;\r\n                break;\r\n            case FOURCC_D3DFMT_R16G16B16A16F:\r\n                layaTexFormat = TextureFormat.R16G16B16A16;\r\n                blockBytes = 4;\r\n                break;\r\n            case FOURCC_D3DFMT_R32G32B32A32F:\r\n                layaTexFormat = TextureFormat.R32G32B32A32;\r\n                blockBytes = 4;\r\n                break;\r\n            default:\r\n                throw \"Unsupported format \" + Int32ToFourCC(fourCC)\r\n        }\r\n\r\n        if (header[DDS_HEADER_MAGIC] !== DDS_MAGIC) {\r\n            throw \"Invalid magic number in DDS header\";\r\n        }\r\n        if (!isFourCC && !isRGB && !isLuminance) {\r\n            throw \"Unsupported format, must contain a FourCC, RGB or LUMINANCE code\";\r\n        }\r\n\r\n        let ext = LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC) || LayaGL.renderEngine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB);\r\n\r\n        if (isCompressed && !ext) {\r\n            throw \"Compressed textures are not supported on this platform.\";\r\n        }\r\n\r\n        return new DDSTextureInfo(width, height, mipmapCount, isCube, 0, blockBytes, dataOffset, layaTexFormat, isCompressed, source);\r\n    }\r\n\r\n}","\r\nexport enum TextureDimension {\r\n    Tex2D,\r\n    Cube,\r\n    Tex3D,\r\n    Texture2DArray,\r\n    CubeArray,\r\n    Unkonw,\r\n    None\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\n\r\nconst KTX1FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst KTX2FileIdentifier = [\r\n    0xAB, 0x4B, 0x54, 0x58, 0x20, 0x32, 0x30, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A\r\n];\r\n\r\nconst IdentifierByteSize = 12;\r\nconst HeaderSize = 13;\r\n\r\n/** etc1 */\r\nconst COMPRESSED_RGB_ETC1_WEBGL = 36196;\r\n\r\n/** etc2 */\r\nconst COMPRESSED_R11_EAC = 37488;\r\nconst COMPRESSED_RG11_EAC = 37490;\r\nconst COMPRESSED_RGB8_ETC2 = 37492;\r\nconst COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\r\nconst COMPRESSED_RGBA8_ETC2_EAC = 37496;\r\nconst COMPRESSED_SIGNED_R11_EAC = 37489;\r\nconst COMPRESSED_SIGNED_RG11_EAC = 37491;\r\nconst COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\r\nconst COMPRESSED_SRGB8_ETC2 = 37493;\r\nconst COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\r\n\r\n/** astc */\r\nconst COMPRESSED_RGBA_ASTC_4x4_KHR = 37808;\r\nconst COMPRESSED_RGBA_ASTC_5x4_KHR = 37809;\r\nconst COMPRESSED_RGBA_ASTC_5x5_KHR = 37810;\r\nconst COMPRESSED_RGBA_ASTC_6x5_KHR = 37811;\r\nconst COMPRESSED_RGBA_ASTC_6x6_KHR = 37812;\r\nconst COMPRESSED_RGBA_ASTC_8x5_KHR = 37813;\r\nconst COMPRESSED_RGBA_ASTC_8x6_KHR = 37814;\r\nconst COMPRESSED_RGBA_ASTC_8x8_KHR = 37815;\r\nconst COMPRESSED_RGBA_ASTC_10x5_KHR = 37816;\r\nconst COMPRESSED_RGBA_ASTC_10x6_KHR = 37817;\r\nconst COMPRESSED_RGBA_ASTC_10x8_KHR = 37818;\r\nconst COMPRESSED_RGBA_ASTC_10x10_KHR = 37819;\r\nconst COMPRESSED_RGBA_ASTC_12x10_KHR = 37820;\r\nconst COMPRESSED_RGBA_ASTC_12x12_KHR = 37821;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 37841;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 37842;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 37843;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 37844;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 37845;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 37846;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 37847;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 37848;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 37849;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 37850;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 37851;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 37852;\r\nconst COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 37853;\r\n\r\n/** pvr */\r\n// todo\r\n\r\n\r\n/** gl param for unCompressed image data*/\r\nconst GL_FORMAT_RGBA = 6408;\r\nconst GL_FORMAT_RGB = 6407;\r\nconst GL_FORMAT_RGBA32F = 0x8814;\r\nconst GL_FORMAT_RGB32F = 0x8815;\r\nconst GL_FORMAT_RGBA16F = 0x881A;\r\nconst GL_FORMAT_RGB16F = 0x881B;\r\nconst GL_FORMAT_SRGB8 = 0x8C41;\r\n\r\nconst GL_INTERNALFORMAT_RGBA8 = 0x8058;\r\nconst GL_INTERNALFORMAT_RGB8 = 0x8051;\r\nconst GL_INTERNALFORMAT_SRGB8_ALPHA8 = 0x8C43;\r\nconst GL_INTERNALFORMAT_R11F_G11F_B10F = 0x8C3A;\r\n\r\n// gl data type\r\nconst GL_DATATYPE_BYTE = 0x1400;\r\nconst GL_DATATYPE_UNSIGNED_BYTE = 0x1401;\r\nconst GL_DATATYPE_SHORT = 0x1402;\r\nconst GL_DATATYPE_UNSIGNED_SHORT = 0x1403;\r\nconst GL_DATATYPE_INT = 0x1404;\r\nconst GL_DATATYPE_UNSIGNED_INT = 0x1405;\r\nconst GL_DATATYPE_FLOAT = 0x1406;\r\nconst GL_DATATYPE_HALF_FLOAT = 0x140b;\r\n\r\n/**\r\n * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\r\n * https://www.khronos.org/registry/KTX/specs/2.0/ktxspec_v2.html\r\n */\r\nexport class KTXTextureInfo {\r\n\r\n    static getLayaFormat(glFormat: number, glInternalFormat: number, glType: number, glTypeSize: number): { format: TextureFormat, sRGB: boolean } {\r\n\r\n        if (glFormat == 0) {\r\n            switch (glInternalFormat) {\r\n                /** etc1 */\r\n                case COMPRESSED_RGB_ETC1_WEBGL:\r\n                    return { format: TextureFormat.ETC1RGB, sRGB: false };\r\n                /** etc2 */\r\n                // todo etc2 其他格式\r\n                case COMPRESSED_RGBA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2RGBA, sRGB: false };\r\n                case COMPRESSED_RGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2RGB, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:\r\n                    return { format: TextureFormat.ETC2SRGB_Alpha8, sRGB: true };\r\n                case COMPRESSED_SRGB8_ETC2:\r\n                    return { format: TextureFormat.ETC2SRGB, sRGB: true };\r\n\r\n                /** astc */\r\n                // todo astc 其他格式\r\n                case COMPRESSED_RGBA_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10, sRGB: false };\r\n                case COMPRESSED_RGBA_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12, sRGB: false };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:\r\n                    return { format: TextureFormat.ASTC4x4SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:\r\n                    return { format: TextureFormat.ASTC6x6SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:\r\n                    return { format: TextureFormat.ASTC8x8SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:\r\n                    return { format: TextureFormat.ASTC10x10SRGB, sRGB: true };\r\n                case COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:\r\n                    return { format: TextureFormat.ASTC12x12SRGB, sRGB: true };\r\n                default:\r\n                    throw \"KTX: UnSupported Compressed format.\";\r\n            }\r\n        }\r\n        else {\r\n            if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_RGBA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_INTERNALFORMAT_SRGB8_ALPHA8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8A8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32A32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGBA && glInternalFormat == GL_FORMAT_RGBA16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16A16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB32F && glType == GL_DATATYPE_FLOAT) {\r\n                return { format: TextureFormat.R32G32B32, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_RGB16F && glType == GL_DATATYPE_HALF_FLOAT) {\r\n                return { format: TextureFormat.R16G16B16, sRGB: false };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_FORMAT_SRGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: true };\r\n            }\r\n            else if (glFormat == GL_FORMAT_RGB && glInternalFormat == GL_INTERNALFORMAT_RGB8 && glType == GL_DATATYPE_UNSIGNED_BYTE) {\r\n                return { format: TextureFormat.R8G8B8, sRGB: false };\r\n            }\r\n            else {\r\n                throw \"ktx: Unsupported UnCompressed image data.\";\r\n            }\r\n        }\r\n    }\r\n\r\n    static getKTXTextureInfo(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n\r\n        let FileIdentifier = new Uint8Array(source, 0, 12);\r\n\r\n        // ktx2\r\n        if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x32 && FileIdentifier[6] === 0x30 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            throw \"ktx2 !\"\r\n        }\r\n        // ktx1\r\n        else if (FileIdentifier[0] === 0xAB && FileIdentifier[1] === 0x4B && FileIdentifier[2] === 0x54 && FileIdentifier[3] === 0x58 && FileIdentifier[4] === 0x20 && FileIdentifier[5] === 0x31 && FileIdentifier[6] === 0x31 && FileIdentifier[7] === 0xBB && FileIdentifier[8] === 0x0D && FileIdentifier[9] === 0x0A && FileIdentifier[10] === 0x1A && FileIdentifier[11] === 0x0A) {\r\n            return KTXTextureInfo.createKTX1Info(source);\r\n        }\r\n        else {\r\n            throw \"ktx data wrong, not ktx1 or ktx2 buffer!\";\r\n        }\r\n    }\r\n\r\n    static createKTX1Info(source: ArrayBuffer): KTXTextureInfo {\r\n\r\n        let dataSize = Uint32Array.BYTES_PER_ELEMENT;\r\n\r\n        let headerDataView = new DataView(source, IdentifierByteSize, dataSize * HeaderSize);\r\n\r\n        let endianness = headerDataView.getUint32(0, true);\r\n        let littleEndian = endianness == 0x04030201;\r\n\r\n        // header\r\n        let glType = headerDataView.getUint32(1 * dataSize, littleEndian);\r\n        let glTypeSize = headerDataView.getUint32(2 * dataSize, littleEndian);\r\n        let glFormat = headerDataView.getUint32(3 * dataSize, littleEndian);\r\n        let glInternalFormat = headerDataView.getUint32(4 * dataSize, littleEndian);\r\n        let glBaseInternalFormat = headerDataView.getUint32(5 * dataSize, littleEndian);\r\n        let pixelWidth = headerDataView.getUint32(6 * dataSize, littleEndian);\r\n        let pixelHeight = headerDataView.getUint32(7 * dataSize, littleEndian);\r\n        let pixelDepth = headerDataView.getUint32(8 * dataSize, littleEndian);\r\n        let numberOfArrayElements = headerDataView.getUint32(9 * dataSize, littleEndian);\r\n        let numberOfFaces = headerDataView.getUint32(10 * dataSize, littleEndian);\r\n        let numberOfMipmapLevels = headerDataView.getUint32(11 * dataSize, littleEndian);\r\n        let bytesOfKeyValueData = headerDataView.getUint32(12 * dataSize, littleEndian);\r\n        let compressed = glType == 0;\r\n\r\n        let formatInfo = KTXTextureInfo.getLayaFormat(glFormat, glInternalFormat, glType, glTypeSize);\r\n        let layaFormat = formatInfo.format;\r\n        let sRGBData = formatInfo.sRGB;\r\n\r\n        // todo  3d texture\r\n        let layaDemision = TextureDimension.Tex2D;\r\n        if (numberOfFaces > 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.CubeArray;\r\n        }\r\n        else if (numberOfFaces > 1 && numberOfArrayElements <= 1) {\r\n            layaDemision = TextureDimension.Cube;\r\n        }\r\n        else if (numberOfFaces <= 1 && numberOfArrayElements > 1) {\r\n            layaDemision = TextureDimension.Texture2DArray;\r\n        }\r\n\r\n        let headerOffset = IdentifierByteSize + HeaderSize * 4;\r\n\r\n        return new KTXTextureInfo(source, glFormat == 0, sRGBData, layaDemision, pixelWidth, pixelHeight, layaFormat, numberOfMipmapLevels || 1, bytesOfKeyValueData, headerOffset);\r\n\r\n    }\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public compress: boolean, public sRGB: boolean, public dimension: TextureDimension, public width: number, public height: number, public format: TextureFormat, public mipmapCount: number, public bytesOfKeyValueData: number, public headerOffset: number) {\r\n\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Byte } from \"../utils/Byte\";\r\nimport { HalfFloatUtils } from \"../utils/HalfFloatUtils\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { RenderCapable } from \"../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HDREncodeFormat } from \"../RenderEngine/RenderEnum/HDREncodeFormat\";\r\n\r\nexport interface TexturePropertyParams {\r\n    wrapModeU?: number,\r\n    wrapModeV?: number,\r\n    filterMode?: FilterMode,\r\n    anisoLevel?: number,\r\n    premultiplyAlpha?: boolean,\r\n    hdrEncodeFormat?: HDREncodeFormat,\r\n}\r\n\r\nexport type TextureConstructParams = ConstructorParameters<typeof Texture2D>;\r\n\r\n/**\r\n * <code>Texture2D</code> 类用于生成2D纹理。\r\n */\r\nexport class Texture2D extends BaseTexture {\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D: string = \"TEXTURE2D\";\r\n\r\n    /**纯灰色纹理。*/\r\n    static grayTexture: Texture2D = null;\r\n    /**纯白色纹理。*/\r\n    static whiteTexture: Texture2D = null;\r\n    /**纯黑色纹理。*/\r\n    static blackTexture: Texture2D = null;\r\n    /**默认法线纹理 */\r\n    static normalTexture: Texture2D = null;\r\n    /**错误纹理 */\r\n    static errorTexture: Texture2D = null;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        var pixels: Uint8Array = new Uint8Array(3);\r\n        pixels[0] = 128;\r\n        pixels[1] = 128;\r\n        pixels[2] = 128;\r\n        Texture2D.grayTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\r\n        Texture2D.grayTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.grayTexture.name = \"Default_Gray\";\r\n        pixels[0] = 255;\r\n        pixels[1] = 255;\r\n        pixels[2] = 255;\r\n        Texture2D.whiteTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\r\n        Texture2D.whiteTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.whiteTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.whiteTexture.name = \"Default_White\";\r\n        pixels[0] = 0;\r\n        pixels[1] = 0;\r\n        pixels[2] = 0;\r\n        Texture2D.blackTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false);\r\n        Texture2D.blackTexture.setPixelsData(pixels, false, false);\r\n        Texture2D.blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        Texture2D.blackTexture.name = \"Default_Black\";\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n            let floatPixle = new Uint16Array(3);\r\n            floatPixle[0] = 14336;\r\n            floatPixle[1] = 14336;\r\n            floatPixle[2] = 15360;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R16G16B16, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(floatPixle, false, false);\r\n        }\r\n        else {\r\n            pixels[0] = 128;\r\n            pixels[1] = 128;\r\n            pixels[2] = 255;\r\n            Texture2D.normalTexture = new Texture2D(1, 1, TextureFormat.R8G8B8, false, false, false);\r\n            Texture2D.normalTexture.setPixelsData(pixels, false, false);\r\n        }\r\n\r\n        Texture2D.normalTexture.lock = true;\r\n        Texture2D.normalTexture.name = \"Default_Normal\";\r\n        Texture2D.errorTexture = Texture2D.whiteTexture;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _SimpleAnimatorTextureParse(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        var byte: Byte = new Byte(data);\r\n        var version: String = byte.readUTFString();\r\n        var texture: Texture2D;\r\n        var pixelDataArrays: Float32Array | Uint16Array;\r\n        var usePixelData: Float32Array | Uint16Array;\r\n        switch (version) {\r\n            case \"LAYAANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Float32Array(textureWidth * textureWidth * 4);\r\n                usePixelData = new Float32Array(byte.readArrayBuffer(pixelDataLength * 4));\r\n                pixelDataArrays.set(usePixelData, 0);\r\n                var texture: Texture2D = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                texture.setPixelsData(pixelDataArrays, false, false);\r\n                texture.filterMode = FilterMode.Point;\r\n                break;\r\n            case \"LAYACOMPRESSANIMATORTEXTURE:0000\":\r\n                var textureWidth: number = byte.readInt32();\r\n                var pixelDataLength: number = byte.readInt32();\r\n                pixelDataArrays = new Uint16Array(byte.readArrayBuffer(pixelDataLength * 2));\r\n                if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R16G16B16A16)) {\r\n                    console.log(\"The platform does not support 16-bit floating-point textures\");\r\n                    if (!LayaGL.renderEngine.getCapable(RenderCapable.TextureFormat_R32G32B32A32))\r\n                        console.error(\"The platform does not support 32-bit floating-point textures\");\r\n                    usePixelData = new Float32Array(textureWidth * textureWidth * 4);\r\n                    for (var i = 0, n = pixelDataArrays.length; i < n; i++) {\r\n                        usePixelData[i] = HalfFloatUtils.convertToNumber(pixelDataArrays[i]);\r\n                    }\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R32G32B32A32, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n\r\n                } else {\r\n                    usePixelData = new Uint16Array(textureWidth * textureWidth * 4);\r\n                    usePixelData.set(pixelDataArrays, 0);\r\n                    texture = new Texture2D(textureWidth, textureWidth, TextureFormat.R16G16B16A16, false, false);\r\n                    texture.setPixelsData(usePixelData, false, false);\r\n                    texture.filterMode = FilterMode.Point;\r\n                }\r\n                break;\r\n            default:\r\n                throw \"Laya3D:unknow version.\";\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param imageSource \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseImage(imageSource: any, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n\r\n        let format = constructParams ? constructParams[2] : TextureFormat.R8G8B8A8;\r\n        let mipmap = constructParams ? constructParams[3] : true;\r\n        let canread = constructParams ? constructParams[4] : false;\r\n        let srgb = constructParams ? constructParams[5] : false;\r\n        let pma = propertyParams ? propertyParams.premultiplyAlpha : false;\r\n        // todo  srgb\r\n        let texture = new Texture2D(imageSource.width, imageSource.height, format, mipmap, canread, srgb, pma);\r\n\r\n        if (propertyParams) {\r\n            texture.setImageData(imageSource, pma, false);\r\n            texture.setProperties(propertyParams);\r\n        }\r\n        else\r\n            texture.setImageData(imageSource, false, false);\r\n\r\n        if (canread) {\r\n            if (LayaEnv.isConch && imageSource._nativeObj) {\r\n                texture._pixels = new Uint8Array(imageSource._nativeObj.getImageData(0, 0, imageSource.width, imageSource.height));\r\n            } else {\r\n                ILaya.Browser.canvas.size(imageSource.width, imageSource.height);\r\n                ILaya.Browser.canvas.clear();\r\n                ILaya.Browser.context.drawImage(imageSource, 0, 0, imageSource.width, imageSource.height);\r\n                texture._pixels = new Uint8Array(ILaya.Browser.context.getImageData(0, 0, imageSource.width, imageSource.height).data.buffer);\r\n            }\r\n        }\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseDDS(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n\r\n        let ddsInfo = DDSTextureInfo.getDDSTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ddsInfo.width, ddsInfo.height, ddsInfo.format, ddsInfo.mipmapCount > 1, false, false);\r\n\r\n        texture.setDDSData(ddsInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     * @returns \r\n     */\r\n    static _parseKTX(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null) {\r\n        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n\r\n        let texture = new Texture2D(ktxInfo.width, ktxInfo.height, ktxInfo.format, ktxInfo.mipmapCount > 1, false, ktxInfo.sRGB);\r\n\r\n        texture.setKTXData(ktxInfo);\r\n        if (propertyParams)\r\n            texture.setProperties(propertyParams);\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @param propertyParams \r\n     * @param constructParams \r\n     */\r\n    static _parsePVR(data: ArrayBuffer, propertyParams: TexturePropertyParams = null, constructParams: TextureConstructParams = null): Texture2D {\r\n        throw \"pvr !\";\r\n    }\r\n\r\n    /**\r\n     * 加载纹理\r\n     * @param url 路径\r\n     * @param complete 处理时间\r\n     */\r\n    static load(url: string, complete: Handler): void {\r\n        ILaya.loader.load(url, complete, null, ILaya.Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**@internal */\r\n    _canRead: boolean = false;\r\n    /**@internal */\r\n    _pixels: Uint8Array;\r\n\r\n    /**\r\n     * 实例化2D纹理\r\n     * @param width \r\n     * @param height \r\n     * @param format \r\n     * @param mipmap \r\n     * @param canRead \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    constructor(width: number, height: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._gammaSpace = sRGB;\r\n        this._canRead = canRead;\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param source Image原始数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureImageData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixelsData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素值\r\n     * @param xOffset offset X\r\n     * @param yOffset offset Y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param pixels 像素\r\n     * @param mipmapLevel mipmap等级\r\n     * @param generateMipmap 生成mipmap\r\n     * @param premultiplyAlpha 预乘\r\n     * @param invertY 翻转Y\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, width: number, height: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置dds数据\r\n     * @param ddsInfo \r\n     */\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置ktx数据\r\n     * @param ktxInfo \r\n     */\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    /**\r\n     * 设置HDR数据\r\n     * @param hdrInfo \r\n     */\r\n    setHDRData(hdrInfo: HDRTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setTextureHDRData(texture, hdrInfo);\r\n    }\r\n\r\n    /**\r\n     * 默认贴图\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * 获得像素\r\n     * @returns \r\n     */\r\n    getPixels() {\r\n        if (this._canRead && this._pixels) {\r\n            return this._pixels;\r\n        }\r\n        else {\r\n            throw new Error(\"Texture2D: must set texture canRead is true.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param propertyParams \r\n     */\r\n    private setProperties(propertyParams: TexturePropertyParams) {\r\n        if (propertyParams) {\r\n            if (propertyParams.wrapModeU != null) this.wrapModeU = propertyParams.wrapModeU;\r\n            if (propertyParams.wrapModeV != null) this.wrapModeV = propertyParams.wrapModeV;\r\n            if (propertyParams.filterMode != null) this.filterMode = propertyParams.filterMode;\r\n            if (propertyParams.anisoLevel != null) this.anisoLevel = propertyParams.anisoLevel;\r\n        }\r\n    }\r\n}","import { Resource } from \"../../resource/Resource\"\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class BaseShader extends Resource {\r\n    static activeShader: BaseShader|null;\t\t\t//等于bindShader或者null\r\n    static bindShader: BaseShader;\t\t\t//当前绑定的shader\r\n\r\n    constructor() {\r\n        super();\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\n\r\nexport class RenderState2D {\r\n    static _MAXSIZE: number = 99999999;\r\n    /**@private 一个初始化的 <code>Matrix</code> 对象，不允许修改此对象内容。*/\r\n    static EMPTYMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static TEMPMAT4_ARRAY: number[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    static worldMatrix4: number[] = RenderState2D.TEMPMAT4_ARRAY;\r\n\r\n    static worldMatrix: Matrix = new Matrix();\r\n    static matWVP: any = null;// :Matrix4x4 = Matrix4x4.DEFAULT;\t\t// 3d矩阵\r\n    static worldAlpha: number = 1.0;\r\n\r\n    static worldScissorTest: boolean = false;\r\n\r\n    //public static var worldClipRect:Rectangle = new Rectangle(0, 0, _MAXSIZE, _MAXSIZE);\r\n    static worldShaderDefines: ShaderDefines2D;\r\n    static worldFilters: any[];\r\n\r\n    static width: number = 0;\r\n    static height: number = 0;\r\n\r\n    static InvertY:boolean = false;\r\n    /* 不知道 有什么用，删掉先\r\n    public static function getMatrArray():Array {\r\n        return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n    }\r\n    */\r\n    //TODO:coverage\r\n    static mat2MatArray(mat: Matrix, matArray: any[]): any[] {\r\n        var m: Matrix = mat;\r\n        var m4: any[] = matArray;\r\n        m4[0] = m.a;\r\n        m4[1] = m.b;\r\n        m4[2] = RenderState2D.EMPTYMAT4_ARRAY[2];\r\n        m4[3] = RenderState2D.EMPTYMAT4_ARRAY[3];\r\n        m4[4] = m.c;\r\n        m4[5] = m.d;\r\n        m4[6] = RenderState2D.EMPTYMAT4_ARRAY[6];\r\n        m4[7] = RenderState2D.EMPTYMAT4_ARRAY[7];\r\n        m4[8] = RenderState2D.EMPTYMAT4_ARRAY[8];\r\n        m4[9] = RenderState2D.EMPTYMAT4_ARRAY[9];\r\n        m4[10] = RenderState2D.EMPTYMAT4_ARRAY[10];\r\n        m4[11] = RenderState2D.EMPTYMAT4_ARRAY[11];\r\n        m4[12] = m.tx;\r\n        m4[13] = m.ty;\r\n        m4[14] = RenderState2D.EMPTYMAT4_ARRAY[14];\r\n        m4[15] = RenderState2D.EMPTYMAT4_ARRAY[15];\r\n        return matArray;\r\n    }\r\n\r\n    static restoreTempArray(): void {\r\n        RenderState2D.TEMPMAT4_ARRAY[0] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[1] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[4] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[5] = 1;\r\n        RenderState2D.TEMPMAT4_ARRAY[12] = 0;\r\n        RenderState2D.TEMPMAT4_ARRAY[13] = 0;\r\n    }\r\n\r\n    static clear(): void {\r\n        RenderState2D.worldScissorTest = false;\r\n        //worldFilters = null;\r\n        RenderState2D.worldAlpha = 1;\r\n        //worldClipRect.x = worldClipRect.y = 0;\r\n        //worldClipRect.width = width;\r\n        //worldClipRect.height = height;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { TextureFormat } from \"./TextureFormat\";\r\n\r\nexport enum RenderTargetFormat {\r\n \r\n    None = -1,\r\n    /**使用RGB的纹理，不可设置SRGB参数 */\r\n    R8G8B8 = TextureFormat.R8G8B8,\r\n    R8G8B8A8 = TextureFormat.R8G8B8A8,\r\n    R16G16B16A16 = TextureFormat.R16G16B16A16,\r\n    R32G32B32 = TextureFormat.R32G32B32,\r\n    R32G32B32A32 = TextureFormat.R32G32B32A32,\r\n    R16G16B16 = TextureFormat.R16G16B16,\r\n    \r\n    DEPTH_16 = 35,\r\n    STENCIL_8 = 36,\r\n    DEPTHSTENCIL_24_8 = 37,\r\n    DEPTH_32 = 38\r\n}","export enum RenderClearFlag{\r\n    Nothing = 0,\r\n    Color = 1,\r\n    Depth = 2,\r\n    Stencil = 4,\r\n}","export enum BlendFactor {\r\n    /** (0, 0, 0, 0)*/\r\n    Zero,\r\n    /** (1, 1, 1, 1)*/\r\n    One,\r\n    /** (Rs, Gs, Bs, As) */\r\n    SourceColor,\r\n    /** (1 - Rs, 1 - Gs, 1 - Bs, 1 - As)*/\r\n    OneMinusSourceColor,\r\n    /** (Rd, Gd, Bd, Ad)*/\r\n    DestinationColor,\r\n    /** (1 - Rd, 1 - Gd, 1 - Bd, 1 - Ad)*/\r\n    OneMinusDestinationColor,\r\n    /** (As, As, As, As)*/\r\n    SourceAlpha,\r\n    /** (1 - As, 1 - As, 1 - As, 1 - As)*/\r\n    OneMinusSourceAlpha,\r\n    /** (Ad, Ad, Ad, Ad)*/\r\n    DestinationAlpha,\r\n    /** (1 - Ad, 1 - Ad, 1 - Ad, 1 - Ad)*/\r\n    OneMinusDestinationAlpha,\r\n    /** (min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad), 10)*/\r\n    SourceAlphaSaturate,\r\n    /** (Rc, Gc, Bc, Ac)*/\r\n    BlendColor,\r\n    /** (1 - Rc, 1 - Gc, 1 - Bc, 1 - Ac)*/\r\n    OneMinusBlendColor\r\n  }","import { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Color</code> 类用于创建颜色实例。\r\n */\r\nexport class Color implements IClone {\r\n    /**\r\n     * 红色\r\n     */\r\n    static RED: Color = new Color(1, 0, 0, 1);\r\n    /**\r\n     * 绿色\r\n     */\r\n    static GREEN: Color = new Color(0, 1, 0, 1);\r\n    /**\r\n     * 蓝色\r\n     */\r\n    static BLUE: Color = new Color(0, 0, 1, 1);\r\n    /**\r\n     * 蓝绿色\r\n     */\r\n    static CYAN: Color = new Color(0, 1, 1, 1);\r\n    /**\r\n     * 黄色\r\n     */\r\n    static YELLOW: Color = new Color(1, 0.92, 0.016, 1);\r\n    /**\r\n     * 品红色\r\n     */\r\n    static MAGENTA: Color = new Color(1, 0, 1, 1);\r\n    /**\r\n     * 灰色\r\n     */\r\n    static GRAY: Color = new Color(0.5, 0.5, 0.5, 1);\r\n    /**\r\n     * 白色\r\n     */\r\n    static WHITE: Color = new Color(1, 1, 1, 1);\r\n    /**\r\n     * 黑色\r\n     */\r\n    static BLACK: Color = new Color(0, 0, 0, 1);\r\n    /**\r\n     * 全透明\r\n     */\r\n    static CLEAR: Color = new Color(0, 0, 0, 0);\r\n\r\n    /**\r\n     * Gamma空间值转换到线性空间。\r\n     * @param value gamma空间值。\r\n     */\r\n    static gammaToLinearSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  cs / 12.92,                 cs <= 0.04045 }\r\n        // {  ((cs + 0.055)/1.055)^2.4,   cs >  0.04045 }\r\n        if (value <= 0.04045)\r\n            return value / 12.92;\r\n        else if (value < 1.0)\r\n            return Math.pow((value + 0.055) / 1.055, 2.4);\r\n        else\r\n            return Math.pow(value, 2.4);\r\n    }\r\n\r\n    /**\r\n     * 线性空间值转换到Gamma空间。\r\n     * @param value 线性空间值。\r\n     */\r\n    static linearToGammaSpace(value: number): number {\r\n        // http://www.opengl.org/registry/specs/EXT/framebuffer_sRGB.txt\r\n        // http://www.opengl.org/registry/specs/EXT/texture_sRGB_decode.txt\r\n        // {  0.0,                          0         <= cl\r\n        // {  12.92 * c,                    0         <  cl < 0.0031308\r\n        // {  1.055 * cl^0.41666 - 0.055,   0.0031308 <= cl < 1\r\n        // {  1.0,                                       cl >= 1  <- This has been adjusted since we want to maintain HDR colors\r\n        if (value <= 0.0)\r\n            return 0.0;\r\n        else if (value <= 0.0031308)\r\n            return 12.92 * value;\r\n        else if (value <= 1.0)\r\n            return 1.055 * Math.pow(value, 0.41666) - 0.055;\r\n        else\r\n            return Math.pow(value, 0.41666);\r\n    }\r\n\r\n\r\n    /**red分量*/\r\n    r: number;\r\n\r\n    /**green分量*/\r\n    g: number;\r\n\r\n    /**blue分量*/\r\n    b: number;\r\n\r\n    /**alpha分量*/\r\n    a: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Color</code> 实例。\r\n     * @param\tr  颜色的red分量。\r\n     * @param\tg  颜色的green分量。\r\n     * @param\tb  颜色的blue分量。\r\n     * @param\ta  颜色的alpha分量。\r\n     */\r\n    constructor(r: number = 1, g: number = 1, b: number = 1, a: number = 1) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    equal(c: Color): boolean {\r\n        if (!c) return false;\r\n        const toFIxed = (a: number, b: number) => {\r\n            var delta = 1e-5;\r\n            return -delta < a - b && a - b < delta;\r\n        }\r\n        return toFIxed(c.r, this.r) && toFIxed(c.g, this.g) && toFIxed(c.b, this.b) && toFIxed(c.a, this.a);\r\n    }\r\n\r\n    /**\r\n     * Gamma空间转换到线性空间。\r\n     * @param\tlinear 线性空间颜色。\r\n     */\r\n    toLinear(out: Color): void {\r\n        out.r = Color.gammaToLinearSpace(this.r);\r\n        out.g = Color.gammaToLinearSpace(this.g);\r\n        out.b = Color.gammaToLinearSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 线性空间转换到Gamma空间。\r\n     * @param\tgamma Gamma空间颜色。\r\n     */\r\n    toGamma(out: Color): void {\r\n        out.r = Color.linearToGammaSpace(this.r);\r\n        out.g = Color.linearToGammaSpace(this.g);\r\n        out.b = Color.linearToGammaSpace(this.b);\r\n        out.a = this.a;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destColor: Color = (<Color>destObject);\r\n        destColor.r = this.r;\r\n        destColor.g = this.g;\r\n        destColor.b = this.b;\r\n        destColor.a = this.a;\r\n    }\r\n\r\n    scale(value: number): Color {\r\n        this.r = this.r * value;\r\n        this.g = this.g * value;\r\n        this.b = this.b * value;\r\n        return this;\r\n    }\r\n\r\n    setValue(r: number, g: number, b: number, a: number) {\r\n        this.r = r;\r\n        this.g = g;\r\n        this.b = b;\r\n        this.a = a;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.r = array[offset + 0];\r\n        this.g = array[offset + 1];\r\n        this.b = array[offset + 2];\r\n        this.a = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.r, this.g, this.b, this.a];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Color = new Color();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { InternalTexture } from \"../RenderEngine/RenderInterface/InternalTexture\";\r\n\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class NativeRenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: NativeRenderTexture2D;\r\n    private static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    private _lastRT: NativeRenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): NativeRenderTexture2D {\r\n        return NativeRenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n\r\n    depthStencilTexture: BaseTexture;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n    _isCameraTarget: boolean;\r\n\r\n    private _nativeObj: any;\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: number = RenderTargetFormat.R8G8B8, depthStencilFormat: number = RenderTargetFormat.DEPTH_16, create: boolean = true ) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0 && create) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._nativeObj.isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._nativeObj.samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._nativeObj.generateMipmap;\r\n    }\r\n\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _create() {\r\n        // todo  mipmap\r\n        this._nativeObj = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, this.width, this.height, this._colorFormat, this.depthStencilFormat);\r\n        this._texture = this._nativeObj._renderTarget._textures[0];\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        this._nativeObj.start();\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        this._nativeObj.end();\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        this._nativeObj.restore();\r\n    }\r\n\r\n\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n        this._nativeObj.clear(r, g, b, a);\r\n    }\r\n\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._nativeObj.getData(x, y, width, height);\r\n    }\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        this._nativeObj._disposeResource();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\"\r\nimport { BaseTexture } from \"./BaseTexture\"\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\"\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Color } from \"../maths/Color\";\r\n/**\r\n * <code>RenderTexture</code> 类用于创建渲染目标。\r\n */\r\nexport class RenderTexture2D extends BaseTexture implements IRenderTarget {\r\n    /** @private */\r\n    private static _currentActive: RenderTexture2D;\r\n    static _clearColor: Color = new Color(0, 0, 0, 0);\r\n    static _clearLinearColor: Color = new Color();\r\n    private _lastRT: RenderTexture2D;\r\n    private _lastWidth: number;\r\n    private _lastHeight: number;\r\n\r\n    //为push,pop 用的。以后和上面只保留一份。\r\n    //由于可能递归，所以不能简单的用save，restore\r\n    private static rtStack: any[] = [];//rt:RenderTexture，w:int，h:int\r\n    /**\r\n     * 默认uv\r\n     */\r\n    static defuv: any[] = [0, 0, 1, 0, 1, 1, 0, 1];\r\n    /**\r\n     * 默认翻转uv\r\n     */\r\n    static flipyuv: any[] = [0, 1, 1, 1, 1, 0, 0, 0];\r\n    /**\r\n     * 获取当前激活的Rendertexture\r\n     */\r\n    static get currentActive(): RenderTexture2D {\r\n        return RenderTexture2D._currentActive;\r\n    }\r\n\r\n    /** @private */\r\n    private _depthStencilFormat: number;\r\n    /** @private */\r\n    private _colorFormat: RenderTargetFormat;\r\n\r\n    /**@internal */\r\n    _mgrKey: number = 0;\t//给WebGLRTMgr用的\r\n    /**@internal */\r\n    _invertY: boolean = false;\r\n    /**\r\n     * 获取深度格式。\r\n     *@return 深度格式。\r\n     */\r\n    get depthStencilFormat(): number {\r\n        return this._depthStencilFormat;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get defaultTexture(): BaseTexture {\r\n        return Texture2D.grayTexture;\r\n    }\r\n\r\n    /**\r\n     * RenderTexture2D是否准备好\r\n     * @returns \r\n     */\r\n    getIsReady(): boolean {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get sourceWidth(): number {\r\n        return this._width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get sourceHeight(): number {\r\n        return this._height;\r\n    }\r\n\r\n    /**\r\n     * 获取offsetX。\r\n     */\r\n    get offsetX(): number {\r\n        return 0;\r\n    }\r\n\r\n    /***\r\n     * 获取offsetY\r\n     */\r\n    get offsetY(): number {\r\n        return 0;\r\n    }\r\n    /**深度模板纹理 */\r\n    depthStencilTexture: BaseTexture;\r\n    \r\n    _renderTarget: InternalRenderTarget;\r\n    /**是否是CameraTarget */\r\n    _isCameraTarget: boolean;\r\n\r\n\r\n    /**\r\n     * @param width  宽度。\r\n     * @param height 高度。\r\n     * @param format 纹理格式。\r\n     * @param depthStencilFormat 深度格式。\r\n     * 创建一个 <code>RenderTexture</code> 实例。\r\n     */\r\n    constructor(width: number, height: number, format: RenderTargetFormat = RenderTargetFormat.R8G8B8, depthStencilFormat: RenderTargetFormat = RenderTargetFormat.None) {//TODO:待老郭清理\r\n\r\n        super(width, height, format);\r\n        this._colorFormat = format;\r\n        this._depthStencilFormat = depthStencilFormat;\r\n        if (width != 0 && height != 0) {\r\n            this._create();\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**是否是RTCube */\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    /**采样 */\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    /**\r\n     * 是否生成Mipmap\r\n     */\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _start(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _end(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _create() {\r\n        // todo  mipmap\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, this._colorFormat, this.depthStencilFormat, false, false, 1);\r\n        this._texture = this._renderTarget._textures[0];\r\n        this._texture.gammaCorrection = 2.2;\r\n    }\r\n\r\n\r\n    /**\r\n     * 保存当前的RT信息。\r\n     */\r\n    static pushRT(): void {\r\n        RenderTexture2D.rtStack.push({ rt: RenderTexture2D._currentActive, w: RenderState2D.width, h: RenderState2D.height });\r\n    }\r\n    /**\r\n     * 恢复上次保存的RT信息\r\n     */\r\n    static popRT(): void {\r\n        var top: any = RenderTexture2D.rtStack.pop();\r\n        if (top) {\r\n            if (RenderTexture2D._currentActive != top.rt) {\r\n                if (top.rt) {\r\n                    LayaGL.textureContext.bindRenderTarget(top.rt._renderTarget);\r\n                    RenderState2D.InvertY = top.rt._invertY;\r\n                } else {\r\n                    LayaGL.textureContext.bindoutScreenTarget();\r\n                    RenderState2D.InvertY = false;\r\n                }\r\n                RenderTexture2D._currentActive = top.rt;\r\n            }\r\n            LayaGL.renderEngine.viewport(0, 0, top.w, top.h);\r\n            LayaGL.renderEngine.scissor(0, 0, top.w, top.h);\r\n            RenderState2D.width = top.w;\r\n            RenderState2D.height = top.h;\r\n        }\r\n    }\r\n    /**\r\n     * 开始绑定。\r\n     */\r\n    start(): void {\r\n        //(memorySize == 0) && recreateResource();\r\n        LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        this._lastRT = RenderTexture2D._currentActive;\r\n        RenderTexture2D._currentActive = this;\r\n        RenderState2D.InvertY = this._invertY;\r\n        //var gl:LayaGL = LayaGL.instance;//TODO:这段代码影响2D、3D混合\r\n        ////(memorySize == 0) && recreateResource();\r\n        //LayaGL.instance.bindFramebuffer(WebGLContext.FRAMEBUFFER, _frameBuffer);\r\n        //_lastRT = _currentActive;\r\n        //_currentActive = this;\r\n        ////_readyed = false;  \r\n        //_readyed = true;\t//这个没什么用。还会影响流程，比如我有时候并不调用end。所以直接改成true\r\n        //\r\n        ////if (_type == TYPE2D) {\r\n        LayaGL.renderEngine.viewport(0, 0, this._width, this._height);//外部设置\r\n        LayaGL.renderEngine.scissor(0, 0, this._width, this._height);//外部设置\r\n        this._lastWidth = RenderState2D.width;\r\n        this._lastHeight = RenderState2D.height;\r\n        RenderState2D.width = this._width;\r\n        RenderState2D.height = this._height;\r\n        BaseShader.activeShader = null;\r\n        ////}\r\n    }\r\n\r\n    /**\r\n     * 结束绑定。\r\n     */\r\n    end(): void {\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        RenderTexture2D._currentActive = null;\r\n        RenderState2D.InvertY = false;\r\n    }\r\n\r\n    /**\r\n     * 恢复上一次的RenderTarge.由于使用自己保存的，所以如果被外面打断了的话，会出错。\r\n     */\r\n    restore(): void {\r\n        if (this._lastRT != RenderTexture2D._currentActive) {\r\n\r\n            if (this._lastRT) {\r\n                LayaGL.textureContext.bindRenderTarget(this._lastRT._renderTarget);\r\n                RenderState2D.InvertY = this._lastRT._invertY;\r\n            }\r\n            else {\r\n                LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n                RenderState2D.InvertY = false;\r\n            }\r\n\r\n            RenderTexture2D._currentActive = this._lastRT;\r\n        }\r\n        // this._readyed = true;\r\n        //if (_type == TYPE2D)//待调整\r\n        //{\r\n        LayaGL.renderEngine.viewport(0, 0, this._lastWidth, this._lastHeight);\r\n        LayaGL.renderEngine.scissor(0, 0, this._lastWidth, this._lastHeight);\r\n        RenderState2D.width = this._lastWidth;\r\n        RenderState2D.height = this._lastHeight;\r\n        BaseShader.activeShader = null;\r\n        //} else \r\n        //\tgl.viewport(0, 0, Laya.stage.width, Laya.stage.height);\r\n    }\r\n\r\n    /**\r\n     * 清理RT\r\n     * @param r \r\n     * @param g \r\n     * @param b \r\n     * @param a \r\n     */\r\n    clear(r: number = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0): void {\r\n\r\n        RenderTexture2D._clearColor.r = r;\r\n        RenderTexture2D._clearColor.g = g;\r\n        RenderTexture2D._clearColor.b = b;\r\n        RenderTexture2D._clearColor.a = a;\r\n        //RenderTexture2D._clearColor.toLinear(RenderTexture2D._clearLinearColor);\r\n        //@ts-ignore\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, RenderTexture2D._clearColor, 1);\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据。\r\n     * @param x X像素坐标。\r\n     * @param y Y像素坐标。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     * @return 像素数据。\r\n     */\r\n    getData(x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return LayaGL.textureContext.getRenderTextureData(this._renderTarget, x, y, width, height);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    recycle(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @internal\r\n     */\r\n    _disposeResource(): void {\r\n        //width 和height为0的时候不会创建资源\r\n        this._renderTarget && this._renderTarget.dispose();\r\n    }\r\n\r\n}\r\n\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    RenderTexture2D = NativeRenderTexture2D;\r\n}\r\n\r\n\r\n","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\n\r\n/**\r\n * WebGLRTMgr 管理WebGLRenderTarget的创建和回收\r\n * TODO 需求不大，管理成本高。先去掉。\r\n */\r\n\r\nexport class WebGLRTMgr {\r\n\r\n\tprivate static dict: any = {};\t\t//key=h*10000+w\r\n\t/**\r\n\t * 获得一个renderTarget\r\n\t * 暂时先按照严格大小判断。\r\n\t * \r\n\t * @param\tw\r\n\t * @param\th\r\n\t * @return\r\n\t */\r\n\tstatic getRT(w: number, h: number): RenderTexture2D {\r\n\t\tw = w | 0;\r\n\t\th = h | 0;\r\n\t\tif (w >= 10000) {\r\n\t\t\tconsole.error('getRT error! w too big');\r\n\t\t}\r\n\t\tvar ret: RenderTexture2D;\r\n\t\t/*\r\n\t\tvar key: number = h * 10000 + w;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[key];\r\n\t\tif (sw) {\r\n\t\t\tif (sw.length > 0) {\r\n\t\t\t\tret = sw.pop();\r\n\t\t\t\tret._mgrKey = key;\t//只有不再mgr中的才有key\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tret = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n\t\t//ret._mgrKey = key;\r\n\t\treturn ret;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 回收一个renderTarget\r\n\t * @param\trt\r\n\t */\r\n\tstatic releaseRT(rt: RenderTexture2D): void {\r\n\t\trt.destroy();\r\n\t\t//rt._disposeResource();// 直接删除贴图。否则还要管理占用过多的时候的清理。  修改：去掉了，直接destroy，否则统计会以为没有释放掉。\r\n\t\treturn;\r\n\t\t/*\r\n\t\t//如果_mgrKey<=0表示已经加进来了。\r\n\t\tif (rt._mgrKey <= 0)\r\n\t\t\treturn;\r\n\t\tvar sw: any[] = WebGLRTMgr.dict[rt._mgrKey];\r\n\t\t!sw && (sw = [], WebGLRTMgr.dict[rt._mgrKey] = sw);\r\n\t\trt._mgrKey = 0;\r\n\t\tsw.push(rt);\r\n\t\t*/\r\n\t}\r\n}\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEngine/RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEngine/RenderEnum/CompareFunction\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { StencilOperation } from \"../RenderEngine/RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { WebGLEngine } from \"./RenderEngine/WebGLEngine/WebGLEngine\";\r\n/**\r\n * @private\r\n */\r\nexport class RenderStateContext {\r\n    /**@internal */\r\n    static mainContext: any;\r\n    /**@internal */\r\n    static DepthTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static DepthFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilTestCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilMaskCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static StencilFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilOpCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendEquationSeparateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static BlendFuncSeperateCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static CullFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static FrontFaceCMD: RenderStateCommand;\r\n    /**@internal */\r\n    static stencilFuncArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blendEquationSeparateArray = new Array<number>(2);\r\n    /**@internal */\r\n    static blenfunArray = new Array(2);\r\n    /**@internal */\r\n    static blendFuncSeperateArray = new Array(4);\r\n    /**@internal */\r\n    static stencilOpArray = new Array<number>(3);\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__() {\r\n        RenderStateContext.DepthTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.DepthFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilTestCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilMaskCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.StencilFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.stencilOpCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendEquationSeparateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.BlendFuncSeperateCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.CullFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n        RenderStateContext.FrontFaceCMD = LayaGL.renderEngine.createRenderStateComand();\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthTest(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthMask(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setDepthFunc(value: CompareFunction): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setDepthFunc(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilTest(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilTest(value);\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param gl \r\n     * @param value \r\n     */\r\n    static setStencilMask(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilMask(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setStencilFunc(fun: CompareFunction, ref: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setStencilFunc(fun, ref);\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    static setstencilOp(fail: StencilOperation, zfail: StencilOperation, zpass: StencilOperation) {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setstencilOp(fail, zfail, zpass);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlend(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlend(value);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquation(blendEquation: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquation(blendEquation);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendEquationSeparate(blendEquationRGB: BlendEquationSeparate, blendEquationAlpha: BlendEquationSeparate): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFunc(sFactor: BlendFactor, dFactor: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFunc(sFactor, dFactor);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static setBlendFuncSeperate(srcRGB: BlendFactor, dstRGB: BlendFactor, srcAlpha: BlendFactor, dstAlpha: BlendFactor): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setCullFace(value: boolean): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setCullFace(value);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param value \r\n     */\r\n    static setFrontFace(value: number): void {\r\n        (LayaGL.renderEngine as WebGLEngine)._GLRenderState.setFrontFace(value);\r\n    }\r\n}\r\n\r\n\r\n","import { BlendFactor } from \"../../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\n//export type BlendFunc = (gl:WebGLRenderingContext)=>void\r\nexport class BlendMode {\r\n    static activeBlendFunction: Function = null;\r\n    /** @internal 这个不直接暴露给开发者*/\r\n    static NAMES = [\r\n        \"normal\", \r\n        \"add\", \r\n        \"multiply\", \r\n        \"screen\", \r\n        \"overlay\", \r\n        \"light\", \r\n        \"mask\", \r\n        \"destination-out\",\r\n        \"add_old\"];\r\n\r\n    /** @internal */\r\n    static TOINT:{[key:string]:number} = { \r\n        \"normal\": 0, \r\n        \"add\": 1, \r\n        \"multiply\": 2, \r\n        \"screen\": 3, \r\n        \"overlay\": 4, \r\n        \"light\": 5, \r\n        \"mask\": 6, \r\n        \"destination-out\": 7, \r\n        \"lighter\": 1,\r\n        \"lighter_old\": 8,\r\n        \"add_old\":8};\r\n\r\n    static      NORMAL = \"normal\";\t\t\t\t\t//0\r\n    static        MASK = \"mask\";\t\t\t\t\t//6\r\n    static     LIGHTER = \"lighter\";\t\t\t\t\t//1  \r\n\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    /**@internal */\r\n    static _init_(): void {\r\n        BlendMode.fns =       [\r\n            BlendMode.BlendNormal,      //0\r\n            BlendMode.BlendAdd,         //1\r\n            BlendMode.BlendMultiply,    //2\r\n            BlendMode.BlendScreen,      //3\r\n            BlendMode.BlendOverlay,     //4\r\n            BlendMode.BlendLight,       //5\r\n            BlendMode.BlendMask,        //6\r\n            BlendMode.BlendDestinationOut,   //7\r\n            BlendMode.BlendAddOld         //8\r\n        ];\r\n\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,    //0\r\n            BlendMode.BlendAddTarget,       //1\r\n            BlendMode.BlendMultiplyTarget,  //2\r\n            BlendMode.BlendScreenTarget,    //3\r\n            BlendMode.BlendOverlayTarget,   //4\r\n            BlendMode.BlendLightTarget,     //5\r\n            BlendMode.BlendMask,            //6\r\n            BlendMode.BlendDestinationOut,  //7\r\n            BlendMode.BlendAddTargetOld     //8\r\n        ];\r\n    }\r\n\r\n    static BlendNormal(): void {\r\n        //为了避免黑边，和canvas作为贴图的黑边\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n        \r\n    }\r\n\r\n    /**@internal 这个add感觉不合理，所以改成old了 */\r\n    static BlendAddOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n\r\n    static BlendAdd(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiply(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreen(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlay(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendLight(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One,BlendFactor.One);\r\n    }\r\n\r\n    static BlendNormalTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    /**@internal add不应该是1+dst_α 所以改成old */\r\n    static BlendAddTargetOld(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.DestinationAlpha);\r\n    }\r\n    static BlendAddTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMultiplyTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.DestinationColor, BlendFactor.OneMinusSourceAlpha);\r\n    }\r\n\r\n    static BlendScreenTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendOverlayTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.OneMinusSourceColor);\r\n    }\r\n\r\n    static BlendLightTarget(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.One, BlendFactor.One);\r\n    }\r\n\r\n    static BlendMask(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.SourceAlpha);\r\n    }\r\n\r\n    static BlendDestinationOut(): void {\r\n        RenderStateContext.setBlendFunc(BlendFactor.Zero, BlendFactor.Zero);\r\n    }\r\n}\r\n\r\n","export class ShaderDefinesBase {\r\n\r\n    /**@internal */\r\n    _value: number = 0;\r\n\r\n    private _name2int: { [id: string]: number };\r\n    private _int2name: any[];\r\n    private _int2nameMap: any[];\r\n\r\n    constructor(name2int: any, int2name: any[], int2nameMap: any[]) {\r\n        this._name2int = name2int;\r\n        this._int2name = int2name;\r\n        this._int2nameMap = int2nameMap;\r\n    }\r\n\r\n    //TODO:coverage\r\n    add(value: any): number {\r\n        if (typeof (value) == 'string') {\r\n            this._value |= this._name2int[(<string>value)];\r\n        } else {\r\n            this._value |= value;\r\n        }\r\n        return this._value;\r\n    }\r\n\r\n    addInt(value: number): number {\r\n        this._value |= value;\r\n        return this._value;\r\n    }\r\n\r\n    //TODO:coverage\r\n    remove(value: any): number {\r\n        if (typeof (value) == 'string') {\r\n            this._value &= ~(this._name2int[(<string>value)]);\r\n        } else {\r\n            this._value &= (~value);\r\n        }\r\n        return this._value;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isDefine(def: number): boolean {\r\n        return (this._value & def) === def;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getValue(): number {\r\n        return this._value;\r\n    }\r\n\r\n    setValue(value: number): void {\r\n        this._value = value;\r\n    }\r\n\r\n    toNameDic(): any {\r\n        var r: string = this._int2nameMap[this._value];\r\n        return r ? r : ShaderDefinesBase._toText(this._value, this._int2name, this._int2nameMap);\r\n    }\r\n\r\n    static _reg(name: string, value: number, _name2int: any, _int2name: any[]): void {\r\n        _name2int[name] = value;\r\n        _int2name[value] = name;\r\n    }\r\n\r\n    static _toText(value: number, _int2name: any[], _int2nameMap: any): any {\r\n        var r: string = _int2nameMap[value];\r\n        if (r) return r;\r\n        var o: any = {};\r\n        var d: number = 1;\r\n        for (var i: number = 0; i < 32; i++) {\r\n            d = 1 << i;\r\n            if (d > value) break;\r\n            if (value & d) {\r\n                var name: string = _int2name[d];\r\n                name && (o[name] = \"\");\r\n            }\r\n        }\r\n        _int2nameMap[value] = o;\r\n        return o;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static _toInt(names: string, _name2int: any): number {\r\n        var words: any[] = names.split('.');\r\n        var num: number = 0;\r\n        for (var i: number = 0, n: number = words.length; i < n; i++) {\r\n            var value: number = _name2int[words[i]];\r\n            if (!value) throw new Error(\"Defines to int err:\" + names + \"/\" + words[i]);\r\n            num |= value;\r\n        }\r\n        return num;\r\n    }\r\n}\r\n\r\n\r\n","import { ShaderDefinesBase } from \"../ShaderDefinesBase\"\r\nexport class ShaderDefines2D extends ShaderDefinesBase {\r\n    static TEXTURE2D: number = 0x01;\r\n    static PRIMITIVE: number = 0x04;\r\n    static FILTERGLOW: number = 0x08;\r\n    static FILTERBLUR: number = 0x10;\r\n    static FILTERCOLOR: number = 0x20;\r\n    static COLORADD: number = 0x40;\r\n\r\n    static WORLDMAT: number = 0x80;\r\n    static FILLTEXTURE: number = 0x100;\r\n    static SKINMESH: number = 0x200;\r\n    static MVP3D: number = 0x800;\r\n\r\n    static GAMMASPACE: number = 0x1000;\r\n\r\n    static INVERTY: number = 0x2000;\r\n    static GAMMATEXTURE: number = 0x4000;\r\n\r\n    static NOOPTMASK: number = ShaderDefines2D.FILTERGLOW | ShaderDefines2D.FILTERBLUR | ShaderDefines2D.FILTERCOLOR | ShaderDefines2D.FILLTEXTURE;\t//有这些定义的不要优化。见submittexture\r\n\r\n    private static __name2int: any = {};\r\n    private static __int2name: any[] = [];\r\n    private static __int2nameMap: any[] = [];\r\n\r\n    static __init__(): void {\r\n        ShaderDefines2D.reg(\"TEXTURE2D\", ShaderDefines2D.TEXTURE2D);\r\n        ShaderDefines2D.reg(\"PRIMITIVE\", ShaderDefines2D.PRIMITIVE);\r\n\r\n        ShaderDefines2D.reg(\"GLOW_FILTER\", ShaderDefines2D.FILTERGLOW);\r\n        ShaderDefines2D.reg(\"BLUR_FILTER\", ShaderDefines2D.FILTERBLUR);\r\n        ShaderDefines2D.reg(\"COLOR_FILTER\", ShaderDefines2D.FILTERCOLOR);\r\n        ShaderDefines2D.reg(\"COLOR_ADD\", ShaderDefines2D.COLORADD);\r\n\r\n        ShaderDefines2D.reg(\"WORLDMAT\", ShaderDefines2D.WORLDMAT);\r\n        ShaderDefines2D.reg(\"FILLTEXTURE\", ShaderDefines2D.FILLTEXTURE);\r\n        ShaderDefines2D.reg('MVP3D', ShaderDefines2D.MVP3D);\r\n\r\n        ShaderDefines2D.reg('GAMMASPACE', ShaderDefines2D.GAMMASPACE);\r\n\r\n        ShaderDefines2D.reg('INVERTY', ShaderDefines2D.INVERTY);\r\n\r\n        ShaderDefines2D.reg('GAMMATEXTURE', ShaderDefines2D.GAMMATEXTURE);\r\n    }\r\n\r\n    constructor() {\r\n        super(ShaderDefines2D.__name2int, ShaderDefines2D.__int2name, ShaderDefines2D.__int2nameMap);\r\n    }\r\n\r\n    static reg(name: string, value: number): void {\r\n        this._reg(name, value, ShaderDefines2D.__name2int, ShaderDefines2D.__int2name);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static toText(value: number, int2name: any[], int2nameMap: any): any {\r\n        return this._toText(value, int2name, int2nameMap);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static toInt(names: string): number {\r\n        return this._toInt(names, ShaderDefines2D.__name2int);\r\n    }\r\n}\r\n\r\n\r\n","import { Texture2D } from \"./Texture2D\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nconst _rect1 = new Rectangle();\r\nconst _rect2 = new Rectangle();\r\n\r\n/**\r\n * <code>Texture</code> 是一个纹理处理类。\r\n */\r\nexport class Texture extends Resource {\r\n    /**@private 默认 UV 信息。*/\r\n    static readonly DEF_UV = new Float32Array([0, 0, 1.0, 0, 1.0, 1.0, 0, 1.0]);\r\n    /**@private */\r\n    static readonly NO_UV = new Float32Array([0, 0, 0, 0, 0, 0, 0, 0]);\r\n    /**@private 反转 UV 信息。*/\r\n    static readonly INV_UV = new Float32Array([0, 1, 1.0, 1, 1.0, 0.0, 0, 0.0]);\r\n\r\n    /**@private uv的范围*/\r\n    uvrect: any[] = [0, 0, 1, 1]; //startu,startv, urange,vrange\r\n    /**@private */\r\n    private _bitmap: BaseTexture;\r\n    /**@internal */\r\n    public _uv: ArrayLike<number>;\r\n    /** @private */\r\n    private _w: number = 0;\r\n    /** @private */\r\n    private _h: number = 0;\r\n\r\n    /**沿 X 轴偏移量。*/\r\n    offsetX: number = 0;\r\n    /**沿 Y 轴偏移量。*/\r\n    offsetY: number = 0;\r\n    /**原始宽度（包括被裁剪的透明区域）。*/\r\n    sourceWidth: number = 0;\r\n    /**原始高度（包括被裁剪的透明区域）。*/\r\n    sourceHeight: number = 0;\r\n    /**图片地址*/\r\n    url: string;\r\n    /** UUID */\r\n    uuid: string;\r\n    /** @private */\r\n    scaleRate: number = 1;\r\n\r\n    /**九宫格*/\r\n    _sizeGrid?: Array<number>;\r\n    /**状态数量*/\r\n    _stateNum?: number;\r\n\r\n    /**@internal */\r\n    _clipCache: Map<string, Texture>;\r\n\r\n    /**\r\n     *  根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\t就是[x,y]相对于原始小图片的位置。一般都是正的，表示裁掉了空白边的大小，如果是负的一般表示加了保护边\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): Texture {\r\n        return Texture._create(source, x, y, width, height, offsetX, offsetY, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 根据指定资源和坐标、宽高、偏移量等创建 <code>Texture</code> 对象。\r\n     * @param\tsource 绘图资源 Texture2D 或者 Texture 对象。\r\n     * @param\tx 起始绝对坐标 x 。\r\n     * @param\ty 起始绝对坐标 y 。\r\n     * @param\twidth 宽绝对值。\r\n     * @param\theight 高绝对值。\r\n     * @param\toffsetX X 轴偏移量（可选）。\r\n     * @param\toffsetY Y 轴偏移量（可选）。\r\n     * @param\tsourceWidth 原始宽度，包括被裁剪的透明区域（可选）。\r\n     * @param\tsourceHeight 原始高度，包括被裁剪的透明区域（可选）。\r\n     * @param\toutTexture 返回的Texture对象。\r\n     * @return  <code>Texture</code> 对象。\r\n     */\r\n    static _create(source: Texture | BaseTexture, x: number, y: number, width: number, height: number,\r\n        offsetX: number = 0, offsetY: number = 0,\r\n        sourceWidth: number = 0, sourceHeight: number = 0, outTexture: Texture = null): Texture {\r\n        var btex: boolean = source instanceof Texture;\r\n        var uv = btex ? ((<Texture>source)).uv : Texture.DEF_UV;\r\n        var bitmap = btex ? ((<Texture>source)).bitmap : <Texture2D>source;\r\n\r\n        if (bitmap.width && (x + width) > bitmap.width)\r\n            width = bitmap.width - x;\r\n        if (bitmap.height && (y + height) > bitmap.height)\r\n            height = bitmap.height - y;\r\n        var tex: Texture;\r\n        if (outTexture) {\r\n            tex = outTexture;\r\n            tex.setTo(bitmap, null, sourceWidth || width, sourceHeight || height);\r\n        } else {\r\n            tex = new Texture(bitmap, null, sourceWidth || width, sourceHeight || height)\r\n        }\r\n        tex.width = width;\r\n        tex.height = height;\r\n        tex.offsetX = offsetX;\r\n        tex.offsetY = offsetY;\r\n\r\n        var dwidth: number = 1 / bitmap.width;\r\n        var dheight: number = 1 / bitmap.height;\r\n        x *= dwidth;\r\n        y *= dheight;\r\n        width *= dwidth;\r\n        height *= dheight;\r\n\r\n        var u1: number = tex.uv[0], v1: number = tex.uv[1], u2: number = tex.uv[4], v2: number = tex.uv[5];\r\n        var inAltasUVWidth: number = (u2 - u1), inAltasUVHeight: number = (v2 - v1);\r\n        var oriUV: any[] = moveUV(uv[0], uv[1], [x, y, x + width, y, x + width, y + height, x, y + height]);\r\n        tex.uv = new Float32Array([u1 + oriUV[0] * inAltasUVWidth, v1 + oriUV[1] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[2]) * inAltasUVWidth, v1 + oriUV[3] * inAltasUVHeight,\r\n        u2 - (1 - oriUV[4]) * inAltasUVWidth, v2 - (1 - oriUV[5]) * inAltasUVHeight,\r\n        u1 + oriUV[6] * inAltasUVWidth, v2 - (1 - oriUV[7]) * inAltasUVHeight]);\r\n\r\n        var bitmapScale: number = ((<Texture>(bitmap as any))).scaleRate;\r\n        if (bitmapScale && bitmapScale != 1) {\r\n            tex.sourceWidth /= bitmapScale;\r\n            tex.sourceHeight /= bitmapScale;\r\n            tex.width /= bitmapScale;\r\n            tex.height /= bitmapScale;\r\n            tex.scaleRate = bitmapScale;\r\n            tex.offsetX /= bitmapScale;\r\n            tex.offsetY /= bitmapScale;\r\n        } else {\r\n            tex.scaleRate = 1;\r\n        }\r\n        return tex;\r\n    }\r\n\r\n    /**\r\n     * 截取Texture的一部分区域，生成新的Texture，如果两个区域没有相交，则返回null。\r\n     * @param\ttexture\t目标Texture。\r\n     * @param\tx\t\t相对于目标Texture的x位置。\r\n     * @param\ty\t\t相对于目标Texture的y位置。\r\n     * @param\twidth\t截取的宽度。\r\n     * @param\theight\t截取的高度。\r\n     * @return 返回一个新的Texture。\r\n     */\r\n    static createFromTexture(texture: Texture, x: number, y: number, width: number, height: number): Texture {\r\n        var texScaleRate: number = texture.scaleRate;\r\n        if (texScaleRate != 1) {\r\n            x *= texScaleRate;\r\n            y *= texScaleRate;\r\n            width *= texScaleRate;\r\n            height *= texScaleRate;\r\n        }\r\n        var rect: Rectangle = Rectangle.TEMP.setTo(x - texture.offsetX, y - texture.offsetY, width, height);\r\n        var result = rect.intersection(_rect1.setTo(0, 0, texture.width, texture.height), _rect2);\r\n        if (result)\r\n            return Texture.create(texture, result.x, result.y, result.width, result.height, result.x - rect.x, result.y - rect.y, width, height);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * uv\r\n     */\r\n    get uv(): ArrayLike<number> {\r\n        return this._uv;\r\n    }\r\n\r\n    set uv(value: ArrayLike<number>) {\r\n        this.uvrect[0] = Math.min(value[0], value[2], value[4], value[6]);\r\n        this.uvrect[1] = Math.min(value[1], value[3], value[5], value[7]);\r\n        this.uvrect[2] = Math.max(value[0], value[2], value[4], value[6]) - this.uvrect[0];\r\n        this.uvrect[3] = Math.max(value[1], value[3], value[5], value[7]) - this.uvrect[1];\r\n        this._uv = value;\r\n    }\r\n\r\n    /** 实际宽度。*/\r\n    get width(): number {\r\n        if (this._w)\r\n            return this._w;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[2] - this.uv[0]) * this.bitmap.width : this.bitmap.width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._w = value;\r\n        this.sourceWidth || (this.sourceWidth = value);\r\n    }\r\n\r\n    /** 实际高度。*/\r\n    get height(): number {\r\n        if (this._h)\r\n            return this._h;\r\n        if (!this.bitmap) return 0;\r\n        return (this.uv && this.uv !== Texture.DEF_UV) ? (this.uv[5] - this.uv[1]) * this.bitmap.height : this.bitmap.height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._h = value;\r\n        this.sourceHeight || (this.sourceHeight = value);\r\n    }\r\n\r\n    /**\r\n     * 获取位图。\r\n     * @return 位图。\r\n     */\r\n    get bitmap(): BaseTexture {\r\n        return this._bitmap;\r\n    }\r\n\r\n    /**\r\n     * 设置位图。\r\n     * @param 位图。\r\n     */\r\n    set bitmap(value: BaseTexture) {\r\n        if (this._bitmap == value)\r\n            return;\r\n        this._bitmap && this._bitmap._removeReference();\r\n        this._bitmap = value;\r\n        value && (value._addReference());\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Texture</code> 实例。\r\n     * @param bitmap 位图资源。\r\n     * @param uv UV 数据信息。\r\n     */\r\n    constructor(source: Texture | BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0) {\r\n        super(false);\r\n        let bitmap = (source instanceof Texture) ? source.bitmap : source;\r\n        this.setTo(bitmap, uv, sourceWidth, sourceHeight);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getSource(cb: () => void = null): any {\r\n        if (this._destroyed || !this._bitmap)\r\n            return null;\r\n        this.recoverBitmap(cb);\r\n        return this._bitmap.destroyed ? null : this.bitmap._getSource();\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的位图资源、UV数据信息。\r\n     * @param\tbitmap 位图资源\r\n     * @param\tuv UV数据信息\r\n     */\r\n    setTo(bitmap: BaseTexture = null, uv: ArrayLike<number> = null,\r\n        sourceWidth: number = 0, sourceHeight: number = 0): void {\r\n        this.bitmap = bitmap;\r\n        this.sourceWidth = sourceWidth;\r\n        this.sourceHeight = sourceHeight;\r\n\r\n        if (bitmap) {\r\n            this._w = bitmap.width;\r\n            this._h = bitmap.height;\r\n            this.sourceWidth = this.sourceWidth || bitmap.width;\r\n            this.sourceHeight = this.sourceHeight || bitmap.height\r\n        }\r\n        this.uv = uv || Texture.DEF_UV;\r\n    }\r\n\r\n    /**\r\n     * 加载指定地址的图片。\r\n     * @param\turl 图片地址。\r\n     * @param\tcomplete 加载完成回调\r\n     */\r\n    load(url: string, complete?: Handler): Promise<void> {\r\n        if (this._destroyed)\r\n            return Promise.resolve();\r\n\r\n        return ILaya.loader.load(url).then((tex: Texture) => {\r\n            let bit = tex.bitmap;\r\n            this.bitmap = bit;\r\n            this.sourceWidth = this._w = bit.width;\r\n            this.sourceHeight = this._h = bit.height;\r\n            complete && complete.run();\r\n            this.event(Event.READY, this);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 获得像素数据\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    getTexturePixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        var st: number, dst: number, i: number;\r\n        var tex2d = this.bitmap;\r\n        // 适配图集\r\n        var texw = this._w;\r\n        var texh = this._h;\r\n        var sourceWidth = this.sourceWidth;\r\n        var sourceHeight = this.sourceHeight;\r\n        var tex2dw = tex2d.width;\r\n        var tex2dh = tex2d.height;\r\n        var offsetX = this.offsetX;\r\n        var offsetY = this.offsetY;\r\n        let draww = width;\r\n        let drawh = height;\r\n        if (x + width > texw + offsetX) draww -= (x + width) - texw - offsetX;\r\n        if (x + width > sourceWidth) width -= (x + width) - sourceWidth;\r\n        if (y + height > texh + offsetY) drawh -= (y + height) - texh - offsetY;\r\n        if (y + height > sourceHeight) height -= (y + height) - sourceHeight;\r\n        if (width <= 0 || height <= 0) return null;\r\n        let marginL = offsetX > x ? offsetX - x : 0; // 考虑图集的情况，只渲染图集中的图片，左侧可能需要补充空白\r\n        let marginT = offsetY > y ? offsetY - y : 0;\r\n        let rePosX = x > offsetX ? x - offsetX : 0; // 考虑图集的情况，只渲染图集中的图片，不渲染 offset，需要重新定位 x 坐标\r\n        let rePosY = y > offsetY ? y - offsetY : 0;\r\n        draww -= marginL; // 考虑图集的情况，只渲染图集中的图片，其大小要减去空白\r\n        drawh -= marginT;\r\n\r\n        var wstride = width * 4;\r\n        var pix: Uint8Array = null;\r\n        try {\r\n            pix = <Uint8Array>(tex2d as Texture2D).getPixels();\r\n        } catch (e) {\r\n        }\r\n        if (pix) {\r\n            if (x == 0 && y == 0 && width == tex2dw && height == tex2dh)\r\n                return pix;\r\n            //否则只取一部分\r\n            let uv = (this._uv as Array<number>).slice();\r\n            let atlasPosX = Math.round(uv[0] * tex2dw); // 计算图片在图集中的位置\r\n            let atlasPosY = Math.round(uv[1] * tex2dh);\r\n            var ret: Uint8Array = new Uint8Array(width * height * 4);\r\n            wstride = tex2dw * 4;\r\n            dst = (atlasPosY + rePosY) * wstride;\r\n            st = atlasPosX * 4 + rePosX * 4 + dst;\r\n            for (i = 0; i < drawh; i++) {\r\n                ret.set(pix.slice(st, st + draww * 4), width * 4 * (i + marginT) + marginL * 4);\r\n                st += wstride;\r\n            }\r\n            return ret;\r\n        }\r\n\r\n        // 如果无法直接获取，只能先渲染出来\r\n        var ctx = new ILaya.Context();\r\n        ctx.size(width, height);\r\n        ctx.asBitmap = true;\r\n        var uv: number[] = null;\r\n        if (x != 0 || y != 0 || width != tex2dw || height != tex2dh) {\r\n            uv = (this._uv as number[]).slice();\t// 复制一份uv\r\n            var stu = uv[0];\r\n            var stv = uv[1];\r\n            var uvw = uv[2] - stu;\r\n            var uvh = uv[7] - stv;\r\n            var uk = uvw / texw;\r\n            var vk = uvh / texh;\r\n            uv = [stu + rePosX * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + rePosY * vk,\r\n            stu + (rePosX + draww) * uk, stv + (rePosY + drawh) * vk,\r\n            stu + rePosX * uk, stv + (rePosY + drawh) * vk];\r\n        }\r\n        ctx._drawTextureM(this, marginL, marginT, draww, drawh, null, 1.0, uv, 0xffffffff);\r\n        //ctx.drawTexture(value, -x, -y, x + width, y + height);\r\n        ctx._targets.start();\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, width, height) as Uint8Array;\r\n        ctx.destroy();\r\n        // 上下颠倒一下\r\n        ret = new Uint8Array(width * height * 4);\r\n        st = 0;\r\n        dst = (height - 1) * wstride;\r\n        for (i = height - 1; i >= 0; i--) {\r\n            ret.set(dt.slice(dst, dst + wstride), st);\r\n            st += wstride;\r\n            dst -= wstride;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 获取Texture上的某个区域的像素点\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @return  返回像素点集合\r\n     */\r\n    getPixels(x: number, y: number, width: number, height: number): Uint8Array {\r\n        return this.getTexturePixels(x, y, width, height);\r\n        // canvas 不支持\r\n    }\r\n\r\n    /**\r\n     * 通过url强制恢复bitmap。\r\n     */\r\n    recoverBitmap(callback?: () => void): void {\r\n        var url = this._bitmap.url;\r\n        if (!this._destroyed && (!this._bitmap || this._bitmap.destroyed) && url) {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.bitmap = tex.bitmap;\r\n                callback && callback();\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制释放Bitmap,无论是否被引用。\r\n     */\r\n    disposeBitmap(): void {\r\n        if (!this._destroyed && this._bitmap) {\r\n            this._bitmap.destroy();\r\n        }\r\n    }\r\n\r\n    get valid(): boolean {\r\n        return !this._destroyed && this._bitmap && !this._bitmap.destroyed;\r\n    }\r\n\r\n    /**\r\n     * obsolute\r\n     */\r\n    public get obsolute(): boolean {\r\n        return this._obsolute || !this._bitmap || this._bitmap.destroyed || this._bitmap.obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        this._obsolute = value;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _disposeResource(): void {\r\n        let bit = this._bitmap;\r\n        this._bitmap = null;\r\n        if (bit)\r\n            bit._removeReference();\r\n    }\r\n\r\n    /**\r\n     * 获得clip贴图\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @returns \r\n     */\r\n    public getCachedClip(x: number, y: number, width: number, height: number): Texture {\r\n        let key = `${x}_${y}_${width}_${height}`;\r\n        if (!this._clipCache)\r\n            this._clipCache = new Map();\r\n\r\n        let tex = this._clipCache.get(key);\r\n        if (tex)\r\n            return tex;\r\n        tex = Texture.createFromTexture(this, x, y, width, height);\r\n        if (tex)\r\n            tex._sizeGrid = this._sizeGrid;\r\n\r\n        if (this._clipCache.size > 100)\r\n            this._clipCache.clear();\r\n\r\n        this._clipCache.set(key, tex);\r\n\r\n        return tex;\r\n    }\r\n}\r\n\r\n/**\r\n * 平移 UV。\r\n * @param offsetX 沿 X 轴偏移量。\r\n * @param offsetY 沿 Y 轴偏移量。\r\n * @param uv 需要平移操作的的 UV。\r\n * @return 平移后的UV。\r\n */\r\nfunction moveUV(offsetX: number, offsetY: number, uv: any[]): any[] {\r\n    for (var i: number = 0; i < 8; i += 2) {\r\n        uv[i] += offsetX;\r\n        uv[i + 1] += offsetY;\r\n    }\r\n    return uv;\r\n}\r\n","/**\r\n * @private\r\n * <code>StringKey</code> 类用于存取字符串对应的数字。\r\n */\r\nexport class StringKey {\r\n\r\n    private _strsToID: any = {};\r\n    private _idToStrs: any[] = [];\r\n    private _length: number = 0;\r\n    //TODO:\r\n\r\n    /**\r\n     * 添加一个字符。\r\n     * @param\tstr 字符，将作为key 存储相应生成的数字。\r\n     * @return 此字符对应的数字。\r\n     */\r\n    //TODO:coverage\r\n    add(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        if (index != null) return index;\r\n\r\n        this._idToStrs[this._length] = str;\r\n        return this._strsToID[str] = this._length++;\r\n    }\r\n\r\n    /**\r\n     * 获取指定字符对应的ID。\r\n     * @param\tstr 字符。\r\n     * @return 此字符对应的ID。\r\n     */\r\n    //TODO:coverage\r\n    getID(str: string): number {\r\n        var index: any = this._strsToID[str];\r\n        return index == null ? -1 : index;\r\n    }\r\n\r\n    /**\r\n     * 根据指定ID获取对应字符。\r\n     * @param  id ID。\r\n     * @return 此id对应的字符。\r\n     */\r\n    //TODO:coverage\r\n    getName(id: number): string {\r\n        var str: any = this._idToStrs[id];\r\n        return str == null ? undefined : str;\r\n    }\r\n}\r\n\r\n","import { Utils } from \"../utils/Utils\";\r\n/**\r\n * 此类用来描述资源\r\n */\r\nexport class AssetDb {\r\n    /**\r\n     * 默认资源实例\r\n     */\r\n    static inst: AssetDb = new AssetDb();\r\n\r\n    /**\r\n     * uuid 数据\r\n     */\r\n    uuidMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * shaderName 数据\r\n     */\r\n    shaderNameMap: Record<string, string> = {};\r\n\r\n    /**\r\n     * 元资源 数据\r\n     */\r\n    metaMap: Record<string, any> = {};\r\n\r\n    /**\r\n     * uuid获得url\r\n     * @param uuid uuid\r\n     * @returns \r\n     */\r\n    UUID_to_URL(uuid: string): string {\r\n        return this.uuidMap[uuid];\r\n    }\r\n\r\n    /**\r\n     * 异步uuid获得Url\r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    UUID_to_URL_async(uuid: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * Url获得uuid值\r\n     * @param url \r\n     * @returns \r\n     */\r\n    URL_to_UUID_async(url: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获取真实的Url\r\n     * @param url \r\n     * @param onResolve \r\n     * @returns \r\n     */\r\n    resolveURL(url: string, onResolve?: (url: string) => void): Promise<string> {\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            return AssetDb.inst.UUID_to_URL_async(uuid).then(url => {\r\n                if (onResolve)\r\n                    onResolve(url);\r\n                return url;\r\n            });\r\n        }\r\n        else {\r\n            if (onResolve)\r\n                onResolve(url);\r\n            return Promise.resolve(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 查找shadername的地址\r\n     * @param shaderName \r\n     * @returns \r\n     */\r\n    shaderName_to_URL(shaderName: string): string {\r\n        return this.shaderNameMap[shaderName];\r\n    }\r\n\r\n    shaderName_to_URL_async(shaderName: string): Promise<string> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得元数据\r\n     * @param url \r\n     * @param uuid \r\n     * @returns \r\n     */\r\n    getMeta(url: string, uuid: string): Promise<any> {\r\n        return Promise.resolve(null);\r\n    }\r\n\r\n    /**\r\n     * 获得子资源路径\r\n     * @param url \r\n     * @param uuid \r\n     * @param subAssetName \r\n     * @param subAssetExt \r\n     * @returns \r\n     */\r\n    getSubAssetURL(url: string, uuid: string, subAssetName: string, subAssetExt: string): string {\r\n        if (subAssetName)\r\n            return `${Utils.replaceFileExtension(url, \"\")}@${subAssetName}.${subAssetExt}`;\r\n        else\r\n            return url;\r\n    }\r\n}","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\n/**\r\n * <p><code>URL</code> 提供URL格式化，URL版本管理的类。</p>\r\n * <p>引擎加载资源的时候，会自动调用formatURL函数格式化URL路径</p>\r\n * <p>通过basePath属性可以设置网络基础路径</p>\r\n * <p>通过设置customFormat函数，可以自定义URL格式化的方式</p>\r\n */\r\nexport class URL {\r\n    /**URL地址版本映射表，比如{\"aaa/bb.png\":\"edcba\",\"aaa/bb.png\":\"1342a\"}，默认情况下，通过formatURL格式化后，会自动生成为\"aaa/bb-1342a.png\"的一个地址*/\r\n    static version: Record<string, string> = {};\r\n\r\n    /**基础路径。如果不设置，默认为当前网页的路径。最终地址将被格式化为 basePath+相对URL地址，*/\r\n    static basePath: string = \"\";\r\n    /**扩展的基础路径映射表，比如{\"aa/\":\"http://abc.com/\"},则把路径以aa/开头的资源映射到http://abc.com/下*/\r\n    static basePaths: Record<string, string> = {};\r\n\r\n    /**root路径。只针对'~'类型的url路径有效*/\r\n    static rootPath: string = \"\";\r\n\r\n    /**@private */\r\n    private _url: string;\r\n    /**@private */\r\n    private _path: string;\r\n\r\n    private static overrideFileExts: Record<string, string> = {};\r\n    private static hasExtOverrides: boolean;\r\n\r\n    static __init__() {\r\n        //xiaomi 没有location\r\n        //Vivo location.protocol是\"\"\r\n        //微信真机 location.protocol是undefined\r\n        URL.rootPath = URL.basePath = (location && location.protocol != undefined && location.protocol != \"\") ? URL.getPath(location.protocol + \"//\" + location.host + location.pathname) : \"\";\r\n    }\r\n\r\n    static initMiniGameExtensionOverrides() {\r\n        if (LayaEnv.isPreview)\r\n            return;\r\n\r\n        URL.overrideExtension([\"rendertexture\", \"videotexture\"], \"rt.json\");\r\n        URL.overrideExtension([\"controller\"], \"controller.json\");\r\n        URL.overrideExtension([\"mc\"], \"mc.bin\");\r\n        URL.overrideExtension([\"mcc\"], \"mcc.json\");\r\n        URL.overrideExtension([\"shader\"], \"shader.json\");\r\n        URL.overrideExtension([\"scene3d\", \"scene\", \"taa\", \"prefab\"], \"json\");\r\n        URL.overrideExtension([\"fui\"], \"fui.json\");\r\n        URL.overrideExtension([\"glsl\"], \"glsl.txt\");\r\n        URL.overrideExtension([\"skel\"], \"skel.bin\");\r\n    }\r\n\r\n    /**创建一个新的 <code>URL</code> 实例。*/\r\n    constructor(url: string) {\r\n        this._url = URL.formatURL(url);\r\n        this._path = URL.getPath(url);\r\n    }\r\n\r\n    /**格式化后的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**地址的文件夹路径（不包括文件名）。*/\r\n    get path(): string {\r\n        return this._path;\r\n    }\r\n\r\n    /** 自定义URL格式化的方式。例如： customFormat = function(url:String):String{} */\r\n    static customFormat: Function = function (url: string): string {\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 包含normalizedURL功能，并且合并base，如果base没有提供，则使用URL.basePath或者URL.rootPath。\r\n     * @param url 地址。\r\n     * @param base 基础路径，如果没有，则使用URL.basePath或者URL.rootPath。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static formatURL(url: string, base?: string): string {\r\n        if (!url)\r\n            return base || URL.basePath || \"\";\r\n\r\n        if (url.startsWith(\"res://\")) {\r\n            let uuid = url.substring(6);\r\n            let url2 = AssetDb.inst.UUID_to_URL(uuid);\r\n            if (!url2)\r\n                return url;\r\n\r\n            url = url2;\r\n        }\r\n\r\n        let char1 = url.charCodeAt(0);\r\n        if (url.indexOf(\":\") == -1 && char1 !== 47) { //已经format过\r\n            //自定义路径格式化\r\n            if (URL.customFormat != null)\r\n                url = URL.customFormat(url);\r\n\r\n            let ver = URL.version[url];\r\n            if (ver != null) {\r\n                let i = url.lastIndexOf(\".\");\r\n                url = url.substring(0, i) + \"-\" + ver + url.substring(i);\r\n            }\r\n\r\n            if (char1 === 126) // ~\r\n                url = URL.join(URL.rootPath, url.substring(2));\r\n            else {\r\n                if (base == null) {\r\n                    base = URL.basePath;\r\n                    for (let k in URL.basePaths) {\r\n                        if (url.startsWith(k)) {\r\n                            base = URL.basePaths[k];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                url = URL.join(base, url);\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 处理扩展名的自动转换\r\n     * @param url 地址。\r\n     * @return 格式化处理后的地址。\r\n     */\r\n    static postFormatURL(url: string): string {\r\n        if (URL.hasExtOverrides) {\r\n            let extold = Utils.getFileExtension(url);\r\n            let ext = URL.overrideFileExts[extold];\r\n            if (ext != null)\r\n                url = Utils.replaceFileExtension(url, ext);\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    /**\r\n     * 格式化相对路径。主要是处理.和..这些情况。\r\n     */\r\n    static normalize(url: string): string {\r\n        if (url.indexOf(\"./\") == -1)\r\n            return url;\r\n\r\n        let parts = url.split(\"/\");\r\n        let len = parts.length;\r\n        let i = 0;\r\n        while (i < len) {\r\n            if (parts[i] == \".\") {\r\n                parts.splice(i, 1);\r\n                len--;\r\n                continue;\r\n            }\r\n            else if (parts[i] == '..') {\r\n                let index: number = i - 1;\r\n                if (index >= 0 && parts[index] !== '..') {\r\n                    parts.splice(index, 2);\r\n                    len -= 2;\r\n                    i--;\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            i++;\r\n        }\r\n        parts.length = len;\r\n        return parts.join('/');\r\n    }\r\n\r\n    static getResURLByUUID(url: string): string {\r\n        if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n            return \"res://\" + url;\r\n        else\r\n            return url;\r\n    }\r\n\r\n    /**\r\n    * 组合相对路径并格式化\r\n    * @param base\r\n    * @param path\r\n    */\r\n    static join(base: string, path: string): string {\r\n        if (!path) return \"\";\r\n\r\n        //如果是全路径，直接返回，提高性能\r\n        if (path.indexOf(\":\") > 0)\r\n            return path;\r\n\r\n        if (base) {\r\n            let char1 = path.charCodeAt(0);\r\n            if (char1 !== 126 && char1 !== 47) { // ~或者 /\r\n                if (base.charCodeAt(base.length - 1) !== 47)\r\n                    path = base + \"/\" + path;\r\n                else\r\n                    path = base + path;\r\n            }\r\n        }\r\n\r\n        return URL.normalize(path);\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件夹路径（不包括文件名）。\r\n     * <p><b>注意：</b>末尾有斜杠（/）。</p>\r\n     * @param url url地址。\r\n     * @return 返回文件夹路径。\r\n     */\r\n    static getPath(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(0, ofs + 1) : \"\";\r\n    }\r\n\r\n    /**\r\n     * 获取指定 URL 的文件名。\r\n     * @param url 地址。\r\n     * @return 返回文件名。\r\n     */\r\n    static getFileName(url: string): string {\r\n        var ofs: number = url.lastIndexOf('/');\r\n        return ofs > 0 ? url.substring(ofs + 1) : url;\r\n    }\r\n\r\n    /**\r\n     * 获取URL版本字符。\r\n     * @param url\r\n     * @return\r\n     */\r\n    static getURLVerion(url: string): string {\r\n        var index: number = url.indexOf(\"?\");\r\n        return index >= 0 ? url.substring(index) : null;\r\n    }\r\n\r\n    /**\r\n     * 下载时，转换URL的扩展名。\r\n     * @originalExts 原始扩展名。例如[\"scene\"]。\r\n     * @targetExt 要转换为的扩展名。例如\"json\"。\r\n     */\r\n    static overrideExtension(originalExts: Array<string>, targetExt: string) {\r\n        for (let ext of originalExts)\r\n            URL.overrideFileExts[ext] = targetExt;\r\n        URL.hasExtOverrides = true;\r\n    }\r\n}","import { ShaderCompile } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class IncludeFile {\r\n    static splitToWords(str: string, block: ShaderNode): any[] {//这里要修改\r\n        var out: any[] = [];\r\n        /*\r\n           var words:Array = str.split(_splitToWordExps);\r\n           trace(str);\r\n           trace(words);\r\n         */\r\n        var c: string;\r\n        var ofs: number = -1;\r\n        var word: string;\r\n        for (var i: number = 0, n: number = str.length; i < n; i++) {\r\n            c = str.charAt(i);\r\n            if (\" \\t=+-*/&%!<>()'\\\",;\".indexOf(c) >= 0) {\r\n                if (ofs >= 0 && (i - ofs) > 1) {\r\n                    word = str.substr(ofs, i - ofs);\r\n                    out.push(word);\r\n                }\r\n                if (c == '\"' || c == \"'\") {\r\n                    var ofs2: number = str.indexOf(c, i + 1);\r\n                    if (ofs2 < 0) {\r\n                        throw \"Sharder err:\" + str;\r\n                    }\r\n                    out.push(str.substr(i + 1, ofs2 - i - 1));\r\n                    i = ofs2;\r\n                    ofs = -1;\r\n                    continue;\r\n                }\r\n                if (c == '(' && block && out.length > 0) {\r\n                    word = out[out.length - 1] + \";\";\r\n                    if (\"vec4;main;\".indexOf(word) < 0)\r\n                        block.useFuns += word;\r\n                }\r\n                ofs = -1;\r\n                continue;\r\n            }\r\n            if (ofs < 0) ofs = i;\r\n        }\r\n        if (ofs < n && (n - ofs) > 1) {\r\n            word = str.substr(ofs, n - ofs);\r\n            out.push(word);\r\n        }\r\n        return out;\r\n    }\r\n\r\n\r\n    script: string;\r\n    codes: any = {};\r\n    funs: any = {};\r\n    curUseID: number = -1;\r\n    funnames: string = \"\";\r\n\r\n    constructor(txt: string) {\r\n        this.script = txt;\r\n        var begin: number = 0, ofs: number, end: number;\r\n        while (true) {\r\n            begin = txt.indexOf(\"#begin\", begin);\r\n            if (begin < 0) break;\r\n\r\n            end = begin + 5;\r\n            while (true) {\r\n                end = txt.indexOf(\"#end\", end);\r\n                if (end < 0) break;\r\n                if (txt.charAt(end + 4) === 'i')\r\n                    end += 5;\r\n                else break;\r\n            }\r\n\r\n            if (end < 0) {\r\n                throw \"add include err,no #end:\" + txt;\r\n            }\r\n\r\n            ofs = txt.indexOf('\\n', begin);\r\n            var words: any[] = IncludeFile.splitToWords(txt.substr(begin, ofs - begin), null);\r\n            if (words[1] == 'code') {\r\n                this.codes[words[2]] = txt.substr(ofs + 1, end - ofs - 1);\r\n            } else if (words[1] == 'function')//#begin function void test()\r\n            {\r\n                ofs = txt.indexOf(\"function\", begin);\r\n                ofs += \"function\".length;\r\n                this.funs[words[3]] = txt.substr(ofs + 1, end - ofs - 1);\r\n                this.funnames += words[3] + \";\";\r\n            }\r\n\r\n            begin = end + 1;\r\n        }\r\n    }\r\n\r\n    getWith(name: string | null = null): string {\r\n        var r: string = name ? this.codes[name] : this.script;\r\n        if (!r) {\r\n            throw \"get with error:\" + name;\r\n        }\r\n        return r;\r\n    }\r\n\r\n    getFunsScript(funsdef: string): string {\r\n        var r: string = \"\";\r\n        for (var i in this.funs) {\r\n            if (funsdef.indexOf(i + \";\") >= 0) {\r\n                r += this.funs[i];\r\n            }\r\n        }\r\n        return r;\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class ShaderNode {\r\n    private static __id: number = 1;\r\n    //是否删除无用代码\r\n    private static __noCompileEnable = true;\r\n\r\n    childs: any[] = [];\r\n    text: string = \"\";\r\n    parent: ShaderNode;\r\n    name: string;\r\n    noCompile: boolean;\r\n    includefiles: any[];\r\n    condition: any;\r\n    conditionType: number;\r\n    useFuns: string = \"\";\r\n    z: number = 0;\r\n    src: string;\r\n\r\n    constructor(includefiles: any[]) {\r\n        this.includefiles = includefiles;\r\n    }\r\n\r\n    setParent(parent: ShaderNode): void {\r\n        parent.childs.push(this);\r\n        this.z = parent.z + 1;\r\n        this.parent = parent;\r\n    }\r\n\r\n    setCondition(condition: string, type: number): void {\r\n        if (condition) {\r\n            this.conditionType = type;\r\n            condition = condition.replace(/(\\s*$)/g, \"\");\r\n            this.condition = function (): boolean {\r\n                return (this as any)[condition];\r\n            }\r\n            this.condition.__condition = condition;\r\n        }\r\n    }\r\n\r\n    toscript(def: any, out: any[]): any[] {\r\n        return this._toscript(def, out, ++ShaderNode.__id);\r\n    }\r\n\r\n    private _toscript(def: any, out: any[], id: number): any[] {\r\n        if (this.childs.length < 1 && !this.text) return out;\r\n        var outIndex: number = out.length;\r\n        if (this.condition) {\r\n            var ifdef: boolean = !!this.condition.call(def);\r\n            this.conditionType === 2&&(ifdef = !ifdef); //2 is ShaderCompile.IFDEF_ELSE && (ifdef = !ifdef);\r\n            if (!ifdef&&ShaderNode.__noCompileEnable) return out;\r\n        }\r\n        if(this.noCompile||!ShaderNode.__noCompileEnable)\r\n        this.text && out.push(this.text);\r\n        this.childs.length > 0 && this.childs.forEach(function (o: ShaderNode, index: number, arr: ShaderNode[]): void {\r\n            o._toscript(def, out, id);\r\n        });\r\n\r\n        if (this.includefiles.length > 0 && this.useFuns.length > 0) {\r\n            var funsCode: string;\r\n            for (var i: number = 0, n: number = this.includefiles.length; i < n; i++) {\r\n                //如果已经加入了，就不要再加\r\n                if (this.includefiles[i].curUseID == id) {\r\n                    continue;\r\n                }\r\n                funsCode = this.includefiles[i].file.getFunsScript(this.useFuns);\r\n                if (funsCode.length > 0) {\r\n                    this.includefiles[i].curUseID = id;\r\n                    out[0] = funsCode + out[0];\r\n                }\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n}\r\n\r\n\r\n","import { ILaya } from \"../../../ILaya\";\r\nimport { URL } from \"../../net/URL\";\r\nimport { IncludeFile } from \"./IncludeFile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport interface IShaderCompiledObj {\r\n    vsNode: ShaderNode;\r\n    psNode: ShaderNode;\r\n    includeNames: Set<string>;\r\n    defs: Set<string>;\r\n};\r\n\r\ntype IncludeItem = { name: string, node: ShaderNode, codeName: string, file: IncludeFile };\r\n\r\nconst _clearCR: RegExp = new RegExp(\"\\r\", \"g\");\r\nconst _removeAnnotation: RegExp = new RegExp(\"(/\\\\*([^*]|[\\\\r\\\\\\n]|(\\\\*+([^*/]|[\\\\r\\\\n])))*\\\\*+/)|(//.*)\", \"g\");\r\nconst _reg: RegExp = new RegExp(\"(\\\".*\\\")|('.*')|([#\\\\w\\\\*-\\\\.+/()=<>{}\\\\\\\\]+)|([,;:\\\\\\\\])\", \"g\");\r\nconst _splitToWordExps: RegExp = new RegExp(\"[(\\\".*\\\")]+|[('.*')]+|([ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;])\", \"g\");\r\nconst _splitToWordExps3: RegExp = new RegExp(\"[ \\\\t=\\\\+\\\\-*/&%!<>!%\\(\\),;\\\\|]\", \"g\");\r\n\r\n/**\r\n * @private\r\n * <code>ShaderCompile</code> 类用于实现Shader编译。\r\n */\r\nexport class ShaderCompile {\r\n    static IFDEF_NO: number = 0;\r\n    static IFDEF_YES: number = 1;\r\n    static IFDEF_ELSE: number = 2;\r\n    static IFDEF_PARENT: number = 3;\r\n\r\n    static includes: Record<string, IncludeFile> = {};\r\n\r\n    static loadIncludeFileSync: (fileName: string) => void;\r\n\r\n    static addInclude(fileName: string, txt: string, allowReplace?: boolean): IncludeFile {\r\n        if (!txt || txt.length === 0) {\r\n            console.error(\"shader include file err:\" + fileName);\r\n            return null;\r\n        }\r\n\r\n        if (!allowReplace && ShaderCompile.includes[fileName]) {\r\n            console.warn(\"shader include file already exists:\" + fileName);\r\n            return ShaderCompile.includes[fileName];\r\n        }\r\n\r\n        txt = txt.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        let file = new IncludeFile(txt);\r\n        ShaderCompile.includes[fileName] = file;\r\n        return file;\r\n    }\r\n\r\n    static compile(vs: string, ps: string, basePath?: string): IShaderCompiledObj {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");//CRLF风格需要先去掉“\\r\",否则切分字符会出错导致宏定义编译错误等\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        for (let inc of includes) {\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else\r\n                console.warn(`ShaderCompile missing file ${inc.name}`);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static compileAsync(vs: string, ps: string, basePath: string): Promise<IShaderCompiledObj> {\r\n        let result: IShaderCompiledObj = {\r\n            vsNode: new ShaderNode([]),\r\n            psNode: new ShaderNode([]),\r\n            includeNames: new Set(),\r\n            defs: new Set()\r\n        };\r\n\r\n        let includes: Array<IncludeItem> = [];\r\n\r\n        vs = vs.replace(_clearCR, \"\");\r\n        ps = ps.replace(_clearCR, \"\")\r\n\r\n        ShaderCompile._compileToTree(result.vsNode, vs, result.defs, includes, basePath);\r\n        ShaderCompile._compileToTree(result.psNode, ps, result.defs, includes, basePath);\r\n\r\n        return this._loadIncludesDeep(result, includes, 0);\r\n    }\r\n\r\n    private static _loadIncludesDeep(result: IShaderCompiledObj, includes: Array<IncludeItem>, index: number): Promise<IShaderCompiledObj> {\r\n        let toLoad: Array<IncludeItem>;\r\n        let includesCnt = includes.length;\r\n        for (let i = index; i < includesCnt; i++) {\r\n            let inc = includes[i];\r\n            if (inc.file)\r\n                result.includeNames.add(inc.name);\r\n            else {\r\n                if (!toLoad) toLoad = [];\r\n                toLoad.push(inc);\r\n            }\r\n        }\r\n\r\n        if (!toLoad)\r\n            return Promise.resolve(result);\r\n\r\n        return ILaya.loader.load(toLoad.map(tc => tc.name)).then(files => {\r\n            let cnt = toLoad.length;\r\n            for (let i = 0; i < cnt; i++) {\r\n                let inc = toLoad[i];\r\n                let file = files[i];\r\n                if (!file) {\r\n                    let childs = inc.node.parent.childs;\r\n                    childs.splice(childs.indexOf(inc.node), 1);\r\n                }\r\n                else {\r\n                    result.includeNames.add(inc.name);\r\n\r\n                    let text = file.getWith(inc.codeName);\r\n                    if (inc.node.condition)\r\n                        inc.node.text = text;\r\n                    else {\r\n                        ShaderCompile._compileToTree(inc.node, text, result.defs, includes, URL.getPath(inc.name));\r\n                        inc.node.text = \"\";\r\n                    }\r\n                }\r\n            }\r\n            if (includes.length > includesCnt)\r\n                return ShaderCompile._loadIncludesDeep(result, includes, includesCnt);\r\n            else\r\n                return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _compileToTree(parent: ShaderNode, script: string, defs: Set<string>, includes: Array<IncludeItem>, basePath: string): void {\r\n        let node: ShaderNode, preNode: ShaderNode;\r\n        let text: string, name: string, fname: string;\r\n        let ofs: number, words: any[];\r\n        let i: number, n: number, j: number;\r\n        let lines = script.split(\"\\n\");\r\n\r\n        for (i = 0; i < lines.length; i++) {\r\n            text = lines[i];\r\n            if (text.length < 1) continue;\r\n            ofs = text.indexOf(\"//\");\r\n            if (ofs === 0) continue;\r\n            if (ofs >= 0) text = text.substr(0, ofs);\r\n\r\n            if ((ofs = text.indexOf(\"#\")) < 0) {\r\n                preNode = parent.childs[parent.childs.length - 1];\r\n                let includefiles = parent.includefiles;\r\n                if (preNode && !preNode.name) {\r\n                    includefiles.length > 0 && IncludeFile.splitToWords(text, preNode);\r\n                    preNode.text += \"\\n\" + text;\r\n                    continue;\r\n                }\r\n\r\n                node = new ShaderNode(includefiles);\r\n                node.text = text;\r\n                node.noCompile = true;\r\n                includefiles.length > 0 && IncludeFile.splitToWords(text, node);\r\n                node.setParent(parent);\r\n                continue;\r\n            }\r\n\r\n            node = new ShaderNode(parent.includefiles);\r\n            node.text = text;\r\n            node.noCompile = true;\r\n\r\n            name = \"#\";\r\n            for (j = ofs + 1, n = text.length; j < n; j++) {\r\n                let c: string = text.charAt(j);\r\n                if (c === ' ' || c === '\\t' || c === '?') break;\r\n                name += c;\r\n            }\r\n            node.name = name;\r\n            switch (name) {\r\n                case \"#ifdef\":\r\n                case \"#ifndef\":\r\n                    node.src = text;\r\n                    node.noCompile = text.match(/[!&|()=<>]/) != null;\r\n                    if (!node.noCompile) {\r\n                        words = text.replace(/^\\s*/, '').split(/\\s+/);\r\n                        node.setCondition(words[1], name === \"#ifdef\" ? ShaderCompile.IFDEF_YES : ShaderCompile.IFDEF_ELSE);\r\n                        node.text = node.text;\r\n                    } else {\r\n                        console.log(\"function():Boolean{return \" + text.substr(ofs + node.name.length) + \"}\");\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#if\":\r\n                case \"#elif\":\r\n                    node.src = text;\r\n                    node.noCompile = true;\r\n                    if (name == \"#elif\") {\r\n                        parent = parent.parent;\r\n                        preNode = parent.childs[parent.childs.length - 1];\r\n                        //匹配\"#ifdef\"\r\n                        preNode.text = preNode.src;\r\n                        preNode.noCompile = true;\r\n                        preNode.condition = null;\r\n                    }\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n\r\n                    words = text.substr(j).split(_splitToWordExps3);\r\n                    for (j = 0; j < words.length; j++) {\r\n                        text = words[j];\r\n                        text.length && text != \"defined\" && defs.add(text);\r\n                    }\r\n                    break;\r\n\r\n                case \"#else\":\r\n                    node.src = text;\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.condition = preNode.condition;\r\n                        node.conditionType = preNode.conditionType == ShaderCompile.IFDEF_YES ? ShaderCompile.IFDEF_ELSE : ShaderCompile.IFDEF_YES;\r\n                        //node.text =  node.text + \" \" + preNode.text + \" \" + node.conditionType;\r\n                    }\r\n                    //递归节点树\r\n                    node.setParent(parent);\r\n                    parent = node;\r\n                    break;\r\n\r\n                case \"#endif\":\r\n                    parent = parent.parent;\r\n                    preNode = parent.childs[parent.childs.length - 1];\r\n                    node.noCompile = preNode.noCompile;\r\n                    if (!node.noCompile) {\r\n                        node.text = node.text;\r\n                    }\r\n                    node.setParent(parent);\r\n                    break;\r\n\r\n                case \"#include\"://这里有问题,主要是空格\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    let includeName: string = words[1];\r\n                    let includeFile: IncludeFile;\r\n                    if (includeName.startsWith(\".\"))\r\n                        includeName = URL.join(basePath, includeName);\r\n                    else if (includeName.startsWith(\"/\"))\r\n                        includeName = URL.formatURL(includeName.substring(1));\r\n                    else {\r\n                        //check if builtin\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                        if (!includeFile)\r\n                            includeName = \"internal/\" + includeName;\r\n                    }\r\n                    includeFile = ShaderCompile.includes[includeName];\r\n\r\n                    if (!includeFile && ShaderCompile.loadIncludeFileSync) {\r\n                        ShaderCompile.loadIncludeFileSync(includeName);\r\n                        includeFile = ShaderCompile.includes[includeName];\r\n                    }\r\n\r\n                    let codeName = words[2] == 'with' ? words[3] : null;\r\n                    includes.push({ name: includeName, codeName: codeName, node: node, file: includeFile });\r\n                    node.setParent(parent);\r\n\r\n                    if ((ofs = words[0].indexOf(\"?\")) < 0) {\r\n                        if (includeFile) {\r\n                            text = includeFile.getWith(codeName);\r\n                            this._compileToTree(node, text, defs, includes, URL.getPath(includeName));\r\n                        }\r\n                        node.text = \"\";\r\n                    }\r\n                    else {\r\n                        node.setCondition(words[0].substr(ofs + 1), ShaderCompile.IFDEF_YES);\r\n\r\n                        if (includeFile)\r\n                            node.text = includeFile.getWith(codeName);\r\n                    }\r\n                    break;\r\n\r\n                case \"#import\":\r\n                    words = IncludeFile.splitToWords(text, null);\r\n                    fname = words[1];\r\n                    node.includefiles.push({ node: node, file: ShaderCompile.includes[fname], ofs: node.text.length });\r\n                    break;\r\n\r\n                default:\r\n                    node.setParent(parent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { StringKey } from \"../../utils/StringKey\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../utils/ShaderCompile\";\r\nimport { BaseShader } from \"./BaseShader\";\r\nimport { ShaderValue } from \"./ShaderValue\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\n\r\nexport class Shader extends BaseShader {\r\n    private static _count: number = 0;\r\n    /**@internal */\r\n    static _preCompileShader: Record<string, IShaderCompiledObj> = {}; //存储预编译结果，可以通过名字获得内容,目前不支持#ifdef嵌套和条件\r\n    private _attribInfo: any[] | null = null;\r\n\r\n    static SHADERNAME2ID: number = 0.0002;\r\n\r\n\r\n    static nameKey: StringKey = new StringKey();\r\n\r\n    static sharders: any[] = new Array(0x20);// (sharders = [], sharders.length = 0x20, sharders);\r\n\r\n    //TODO:coverage\r\n    static create(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[] = null): Shader {\r\n        return new Shader(vs, ps, saveName, nameMap, bindAttrib);\r\n    }\r\n\r\n    // /**\r\n    //  * 根据宏动态生成shader文件，支持#include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";条件嵌入文件\r\n    //  * @param\tname\r\n    //  * @param\tvs\r\n    //  * @param\tps\r\n    //  * @param\tdefine 宏定义，格式:{name:value...}\r\n    //  * @return\r\n    //  */\r\n    // //TODO:coverage\r\n    // static withCompile(nameID: number, define: any, shaderName: any, createShader: Function): Shader {\r\n    //     if (shaderName && Shader.sharders[shaderName])\r\n    //         return Shader.sharders[shaderName];\r\n\r\n    //     var pre: ShaderCompile = Shader._preCompileShader[Shader.SHADERNAME2ID * nameID];\r\n    //     if (!pre)\r\n    //         throw new Error(\"withCompile shader err!\" + nameID);\r\n    //     return pre.createShader(define, shaderName, createShader, null);\r\n    // }\r\n\r\n    /**\r\n     * 根据宏动态生成shader文件，支持#include?COLOR_FILTER \"parts/ColorFilter_ps_logic.glsl\";条件嵌入文件\r\n     * @param\tname\r\n     * @param\tvs\r\n     * @param\tps\r\n     * @param\tdefine 宏定义，格式:{name:value...}\r\n     * @return\r\n     */\r\n    static withCompile2D(nameID: number, mainID: number, define: any, shaderName: any, createShader: Function, bindAttrib: any[] = null): Shader {\r\n        if (shaderName && Shader.sharders[shaderName])\r\n            return Shader.sharders[shaderName];\r\n\r\n        var pre: IShaderCompiledObj = Shader._preCompileShader[Shader.SHADERNAME2ID * nameID + mainID];\r\n        if (!pre)\r\n            throw new Error(\"withCompile shader err!\" + nameID + \" \" + mainID);\r\n\r\n        var defMap: any = {};\r\n        var defineStr: string = \"\";\r\n        if (define) {\r\n            for (var i in define) {\r\n                defineStr += \"#define \" + i + \"\\n\";\r\n                defMap[i] = true;\r\n            }\r\n        }\r\n        var vs: any[] = pre.vsNode.toscript(defMap, []);\r\n        var ps: any[] = pre.psNode.toscript(defMap, []);\r\n        return ((<Function>createShader)\r\n            || (<Function>Shader.create))(defineStr + vs.join('\\n'), defineStr + ps.join('\\n'), shaderName, (<any>pre).nameMap, bindAttrib);\r\n    }\r\n\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 预编译shader文件，主要是处理宏定义\r\n     * @param\tnameID,一般是特殊宏+shaderNameID*0.0002组成的一个浮点数当做唯一标识\r\n     * @param\tvs\r\n     * @param\tps\r\n     */\r\n    //TODO:coverage\r\n    static preCompile(nameID: number, vs: string, ps: string, nameMap: any): void {\r\n        let id: number = Shader.SHADERNAME2ID * nameID;\r\n        let obj = ShaderCompile.compile(vs, ps);\r\n        (<any>obj).nameMap = nameMap;\r\n        Shader._preCompileShader[id] = obj;\r\n    }\r\n\r\n    /**\r\n     * 预编译shader文件，主要是处理宏定义\r\n     * @param\tnameID,一般是特殊宏+shaderNameID*0.0002组成的一个浮点数当做唯一标识\r\n     * @param\tvs\r\n     * @param\tps\r\n     */\r\n    static preCompile2D(nameID: number, mainID: number, vs: string, ps: string, nameMap: any): void {\r\n        let id: number = Shader.SHADERNAME2ID * nameID + mainID;\r\n        let obj = ShaderCompile.compile(vs, ps);\r\n        (<any>obj).nameMap = nameMap;\r\n        Shader._preCompileShader[id] = obj;\r\n    }\r\n\r\n    private _nameMap: any; //shader参数别名，语义\r\n    private _vs: string\r\n    private _ps: string;\r\n    private _curActTexIndex: number = 0;\r\n    private _reCompile: boolean;\r\n    private _render2DContext: IRender2DContext;\r\n\r\n    //存储一些私有变量\r\n    tag: any = {};\r\n    /**@internal */\r\n    _vshader: any;\r\n    /**@internal */\r\n    _pshader: any\r\n    /**@internal */\r\n    _program: any = null;\r\n    /**@internal */\r\n    _params: any[] = null;\r\n    /**@internal */\r\n    _paramsMap: any = {};\r\n\r\n    /**\r\n     * 根据vs和ps信息生成shader对象\r\n     * 把自己存储在 sharders 数组中\r\n     * @param\tvs\r\n     * @param\tps\r\n     * @param\tname:\r\n     * @param\tnameMap 帮助里要详细解释为什么需要nameMap\r\n     */\r\n    constructor(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[] | null = null) {\r\n        super();\r\n        if ((!vs) || (!ps)) throw \"Shader Error\";\r\n        this._attribInfo = bindAttrib;\r\n        this._id = ++Shader._count;\r\n        this._vs = vs;\r\n        this._ps = ps;\r\n        this._nameMap = nameMap ? nameMap : {};\r\n        saveName != null && (Shader.sharders[saveName] = this);\r\n        this.recreateResource();\r\n        this.lock = true;\r\n        this._render2DContext = LayaGL.render2DContext;\r\n    }\r\n\r\n    protected recreateResource(): void {\r\n        this._compile();\r\n        this._setGPUMemory(0);//忽略尺寸尺寸\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        RenderStateContext.mainContext.deleteShader(this._vshader);\r\n        RenderStateContext.mainContext.deleteShader(this._pshader);\r\n        RenderStateContext.mainContext.deleteProgram(this._program);\r\n        this._vshader = this._pshader = this._program = null;\r\n        this._params = null;\r\n        this._paramsMap = {};\r\n        this._setGPUMemory(0);\r\n        this._curActTexIndex = 0;\r\n    }\r\n\r\n    private _compile(): void {\r\n        if (!this._vs || !this._ps || this._params)\r\n            return;\r\n        this._reCompile = true;\r\n        this._params = [];\r\n\r\n        var result: any;\r\n\r\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        this._program = gl.createProgram();\r\n        this._vshader = Shader._createShader(gl, this._vs, gl.VERTEX_SHADER);\r\n        this._pshader = Shader._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\r\n\r\n        gl.attachShader(this._program, this._vshader);\r\n        gl.attachShader(this._program, this._pshader);\r\n\r\n        var one: any, i: number, j: number, n: number, location: any;\r\n\r\n        //属性用指定location的方法，这样更灵活，更方便与vao结合。\r\n        //注意注意注意 这个必须放到link前面\r\n        var attribDescNum: number = this._attribInfo ? this._attribInfo.length : 0;\r\n        for (i = 0; i < attribDescNum; i += 2) {\r\n            gl.bindAttribLocation(this._program, this._attribInfo[i + 1], this._attribInfo[i]);\r\n        }\r\n\r\n        gl.linkProgram(this._program);\r\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\r\n            throw gl.getProgramInfoLog(this._program);\r\n        }\r\n\r\n        var nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS); //个数\r\n\r\n        for (i = 0; i < nUniformNum; i++) {\r\n            var uniform: any = gl.getActiveUniform(this._program, i);//得到uniform对象，包括名字等信息 {name,type,size}\r\n            location = gl.getUniformLocation(this._program, uniform.name); //用名字来得到location\r\n            one = { vartype: \"uniform\", glfun: null, ivartype: 1, location: location, name: uniform.name, type: uniform.type, isArray: false, isSame: false, preValue: null, indexOfParams: 0 };\r\n            if (one.name.indexOf('[0]') > 0) {\r\n                one.name = one.name.substr(0, one.name.length - 3);\r\n                one.isArray = true;\r\n                one.location = gl.getUniformLocation(this._program, one.name);\r\n            }\r\n            this._params.push(one);\r\n        }\r\n\r\n        for (i = 0, n = this._params.length; i < n; i++) {\r\n            one = this._params[i];\r\n            one.indexOfParams = i;\r\n            one.index = 1;\r\n            one.value = [one.location, null];\r\n            one.codename = one.name;\r\n            one.name = this._nameMap[one.codename] ? this._nameMap[one.codename] : one.codename;\r\n            this._paramsMap[one.name] = one;\r\n            one._this = this;\r\n            one.uploadedValue = [];\r\n\r\n            switch (one.type) {\r\n                case gl.INT:\r\n                    one.fun = one.isArray ? this._uniform1iv : this._uniform1i;\r\n                    break;\r\n                case gl.FLOAT:\r\n                    one.fun = one.isArray ? this._uniform1fv : this._uniform1f;\r\n                    break;\r\n                case gl.FLOAT_VEC2:\r\n                    one.fun = one.isArray ? this._uniform_vec2v : this._uniform_vec2;\r\n                    break;\r\n                case gl.FLOAT_VEC3:\r\n                    one.fun = one.isArray ? this._uniform_vec3v : this._uniform_vec3;\r\n                    break;\r\n                case gl.FLOAT_VEC4:\r\n                    one.fun = one.isArray ? this._uniform_vec4v : this._uniform_vec4;\r\n                    break;\r\n                case gl.SAMPLER_2D:\r\n                    one.fun = this._uniform_sampler2D;\r\n                    break;\r\n                case gl.SAMPLER_CUBE:\r\n                    one.fun = this._uniform_samplerCube;\r\n                    break;\r\n                case gl.FLOAT_MAT4:\r\n                    one.glfun = gl.uniformMatrix4fv;\r\n                    one.fun = this._uniformMatrix4fv;\r\n                    break;\r\n                case gl.BOOL:\r\n                    one.fun = this._uniform1i;\r\n                    break;\r\n                case gl.FLOAT_MAT2:\r\n                case gl.FLOAT_MAT3:\r\n                    //TODO 这个有人会用的。\r\n                    throw new Error(\"compile shader err!\");\r\n                default:\r\n                    throw new Error(\"compile shader err!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _createShader(gl: WebGLRenderingContext, str: string, type: any): any {\r\n        var shader: any = gl.createShader(type);\r\n        gl.shaderSource(shader, str);\r\n        gl.compileShader(shader);\r\n        if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            return shader;\r\n        } else {\r\n            console.log(gl.getShaderInfoLog(shader));\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据变量名字获得\r\n     * @param\tname\r\n     * @return\r\n     */\r\n    //TODO:coverage\r\n    getUniform(name: string): any {\r\n        return this._paramsMap[name];\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform1f(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            RenderStateContext.mainContext.uniform1f(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform1fv(one: any, value: any): number {\r\n        if (value.length < 4) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                RenderStateContext.mainContext.uniform1fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            RenderStateContext.mainContext.uniform1fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    private _uniform_vec2(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\r\n            RenderStateContext.mainContext.uniform2f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform_vec2v(one: any, value: any): number {\r\n        if (value.length < 2) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                RenderStateContext.mainContext.uniform2fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            RenderStateContext.mainContext.uniform2fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform_vec3(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\r\n            RenderStateContext.mainContext.uniform3f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform_vec3v(one: any, value: any): number {\r\n        RenderStateContext.mainContext.uniform3fv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    private _uniform_vec4(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n            RenderStateContext.mainContext.uniform4f(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform_vec4v(one: any, value: any): number {\r\n        RenderStateContext.mainContext.uniform4fv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    private _uniformMatrix4fv(one: any, value: any): number {\r\n        RenderStateContext.mainContext.uniformMatrix4fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform1i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            RenderStateContext.mainContext.uniform1i(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform1iv(one: any, value: any): number {\r\n        RenderStateContext.mainContext.uniform1iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    private _uniform_sampler2D(one: any, value: any): number {//TODO:TEXTURTE ARRAY\r\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] == null) {\r\n            uploadedValue[0] = this._curActTexIndex;\r\n            gl.uniform1i(one.location, this._curActTexIndex);\r\n            this._render2DContext.activeTexture(gl.TEXTURE0 + this._curActTexIndex);\r\n            this._render2DContext.bindTexture(gl.TEXTURE_2D, value);\r\n            //WebGLContext.activeTexture(gl, gl.TEXTURE0 + this._curActTexIndex);\r\n            //WebGLContext.bindTexture(gl, gl.TEXTURE_2D, value);\r\n            this._curActTexIndex++;\r\n            return 1;\r\n        } else {\r\n            this._render2DContext.activeTexture(gl.TEXTURE0 + uploadedValue[0]);\r\n            this._render2DContext.bindTexture(gl.TEXTURE_2D, value);\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _uniform_samplerCube(one: any, value: any): number {//TODO:TEXTURTECUBE ARRAY\r\n        var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] == null) {\r\n            uploadedValue[0] = this._curActTexIndex;\r\n            gl.uniform1i(one.location, this._curActTexIndex);\r\n            this._render2DContext.activeTexture(gl.TEXTURE0 + this._curActTexIndex);\r\n            this._render2DContext.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n            this._curActTexIndex++;\r\n            return 1;\r\n        } else {\r\n            this._render2DContext.activeTexture(gl.TEXTURE0 + uploadedValue[0]);\r\n            this._render2DContext.bindTexture(gl.TEXTURE_CUBE_MAP, value);\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    uploadTexture2D(value: any): void {\r\n        //这个可能执行频率非常高，所以这里能省就省点\r\n        //Stat.shaderCall++;\r\n        //var gl:WebGLContext = WebGLContext.mainContext;\r\n        //WebGLContext.activeTexture(gl,WebGLContext.TEXTURE0);\t2d必须是active0\r\n        // var CTX: any = RenderStateContext;\r\n\r\n        // if (CTX._activeTextures[0] !== value) {\r\n        this._render2DContext.bindTexture(RenderStateContext.mainContext.TEXTURE_2D, value);\r\n        // CTX._activeTextures[0] = value;\r\n        //}\r\n    }\r\n\r\n    /**\r\n     * 提交shader到GPU\r\n     * @param\tshaderValue\r\n     */\r\n    upload(shaderValue: ShaderValue, params: any[] = null): void {\r\n        BaseShader.activeShader = BaseShader.bindShader = this;\r\n        //recreateResource();\r\n        this._render2DContext.bindUseProgram(this._program);\r\n\r\n        if (this._reCompile) {\r\n            params = this._params;\r\n            this._reCompile = false;\r\n        } else {\r\n            params = params || this._params;\r\n        }\r\n\r\n\r\n        var one: any, value: any, n: number = params.length, shaderCall: number = 0;\r\n\r\n        for (var i: number = 0; i < n; i++) {\r\n            one = params[i];\r\n            if ((value = (shaderValue as any)[one.name]) !== null)\r\n\r\n                shaderCall += one.fun.call(this, one, value);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import { Shader } from \"../Shader\"\r\nimport { ShaderValue } from \"../ShaderValue\"\r\n\r\nexport class Shader2X extends Shader {\r\n    _params2dQuick2: any[]|null = null;\r\n    _shaderValueWidth: number = 0;\r\n    _shaderValueHeight: number = 0;\r\n\r\n    constructor(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[]|null = null) {\r\n        super(vs, ps, saveName, nameMap, bindAttrib);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        super._disposeResource();\r\n        this._params2dQuick2 = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    upload2dQuick2(shaderValue: ShaderValue): void {\r\n        this.upload(shaderValue, this._params2dQuick2 || this._make2dQuick2());\r\n    }\r\n\r\n    //去掉size的所有的uniform\r\n    _make2dQuick2(): any[] {\r\n        if (!this._params2dQuick2) {\r\n            this._params2dQuick2 = [];\r\n\r\n            var params: any[] = this._params, one: any;\r\n            for (var i: number = 0, n: number = params.length; i < n; i++) {\r\n                one = params[i];\r\n                if (one.name !== \"size\") this._params2dQuick2.push(one);\r\n            }\r\n        }\r\n        return this._params2dQuick2;\r\n    }\r\n\r\n    static create(vs: string, ps: string, saveName: any = null, nameMap: any = null, bindAttrib: any[]|null = null): Shader {\r\n        return new Shader2X(vs, ps, saveName, nameMap, bindAttrib);\r\n    }\r\n}\r\n\r\n\r\n","import { Texture } from \"../../../../resource/Texture\"\r\nimport { Shader } from \"../../Shader\"\r\nimport { ShaderValue } from \"../../ShaderValue\"\r\nimport { Shader2D } from \"../Shader2D\"\r\nimport { Shader2X } from \"../Shader2X\"\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\nimport { RenderState2D } from \"../../../utils/RenderState2D\"\r\nimport { RenderTexture2D } from \"../../../../resource/RenderTexture2D\"\r\nimport { TextTexture } from \"laya/webgl/text/TextTexture\"\r\nimport { Const } from \"../../../../Const\"\r\nimport { Texture2DArray } from \"../../../../resource/Texture2DArray\"\r\n\r\nexport class Value2D {\r\n    protected static _cache: any[] = [];\r\n    protected static _typeClass: any = [];\r\n\r\n    static TEMPMAT4_ARRAY: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    public static _initone(type: number, classT: any): void {\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n    }\r\n\r\n    static create(mainType: number, subType: number): Value2D {\r\n        var types: any = Value2D._cache[mainType | subType];\r\n        if (types._length)\r\n            return types[--types._length];\r\n        else\r\n            return new Value2D._typeClass[mainType | subType](subType);\r\n    }\r\n\r\n\r\n    static __init__(): void {\r\n    }\r\n\r\n    defines: ShaderDefines2D = new ShaderDefines2D();\r\n\r\n\r\n    size: any[] = [0, 0];\r\n\r\n    alpha: number = 1.0;\t//这个目前只给setIBVB用。其他的都放到attribute的color中了\r\n    mmat: any[];\t\t//worldmatrix，是4x4的，因为为了shader使用方便。 TODO 换成float32Array\r\n    u_MvpMatrix: any[];\r\n    texture: any;\r\n\r\n    ALPHA: number = 1.0;\t//这个？\r\n\r\n    shader: Shader;\r\n\r\n    mainID: number;\r\n    subID: number = 0;\r\n    filters: any[];\r\n\r\n    textureHost: Texture | RenderTexture2D | TextTexture;\r\n    //public var fillStyle:DrawStyle;\t\t\t//TODO 这个有什么用？\r\n    color: any[];\r\n    //public var strokeStyle:DrawStyle;\r\n    colorAdd: any[];\r\n    u_mmat2: any[];\r\n    ref: number = 1;\r\n    protected _attribLocation: any[];\t//[name,location,name,location...] 由继承类赋值。这个最终会传给对应的shader\r\n\r\n    private _inClassCache: any;\r\n    private _cacheID: number = 0;\r\n    clipMatDir: any[] = [Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\r\n    clipMatPos: any[] = [0, 0];\r\n    clipOff: any[] = [0, 0];\t\t\t// 裁剪是否需要加上偏移，cacheas normal用\r\n    //public var clipDir:Array = [Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t\t//裁剪信息\r\n    //public var clipRect:Array = [0, 0];\t\t\t\t\t\t//裁剪位置\r\n\r\n    constructor(mainID: number, subID: number) {\r\n        this.mainID = mainID;\r\n        this.subID = subID;\r\n\r\n        this.textureHost = null;\r\n        this.texture = null;\r\n        //this.fillStyle = null;\r\n        this.color = null;\r\n        //this.strokeStyle = null;\r\n        this.colorAdd = null;\r\n        this.u_mmat2 = null;\r\n\r\n        this._cacheID = mainID | subID;\r\n        this._inClassCache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !this._inClassCache) {\r\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\r\n            this._inClassCache._length = 0;\r\n        }\r\n        this.clear();\r\n\r\n    }\r\n\r\n    setValue(value: Shader2D): void { }\r\n    //throw new Error(\"todo in subclass\");\r\n\r\n    //不知道什么意思，这个名字太难懂，反正只有submitIBVB中用到。直接把代码拷贝到哪里\r\n    //public function refresh():ShaderValue\r\n\r\n    private _ShaderWithCompile(): Shader2X {\r\n        var ret: Shader2X = (<Shader2X>Shader.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Shader2X.create, this._attribLocation));\r\n        //ret.setAttributesLocation(_attribLocation); 由于上面函数的流程的修改，导致这里已经晚了\r\n        return ret;\r\n    }\r\n    public updateShaderData() {\r\n        var renderstate2d: any = RenderState2D;\r\n        // 如果有矩阵的话，就设置 WORLDMAT 宏\r\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addInt(ShaderDefines2D.WORLDMAT);\r\n        this.mmat = renderstate2d.worldMatrix4;\r\n\r\n        if (RenderState2D.matWVP) {\r\n            this.defines.addInt(ShaderDefines2D.MVP3D);\r\n            this.u_MvpMatrix = RenderState2D.matWVP.elements;\r\n        }\r\n        let returnGamma: boolean = !(RenderTexture2D.currentActive) || ((RenderTexture2D.currentActive)._texture.gammaCorrection != 1);\r\n        //returnGamma = returnGamma && (this.textureHost && ((this.textureHost as RenderTexture2D).gammaCorrection == 1 || (this.textureHost as Texture).bitmap.gammaCorrection == 1));\r\n        let textrueReadGamma: boolean = false;\r\n        if (this.textureHost) {\r\n            if (this.textureHost instanceof RenderTexture2D) {\r\n                textrueReadGamma = (this.textureHost as RenderTexture2D).gammaCorrection != 1;\r\n            } else if (this.textureHost instanceof Texture) {\r\n                textrueReadGamma = (this.textureHost as Texture).bitmap.gammaCorrection != 1;\r\n            }\r\n        }\r\n\r\n        if (textrueReadGamma) {\r\n            this.defines.addInt(ShaderDefines2D.GAMMATEXTURE);\r\n        } else {\r\n            this.defines.remove(ShaderDefines2D.GAMMATEXTURE);\r\n        }\r\n\r\n        if (returnGamma) {\r\n            this.defines.addInt(ShaderDefines2D.GAMMASPACE);\r\n        } else {\r\n            this.defines.remove(ShaderDefines2D.GAMMASPACE);\r\n        }\r\n\r\n        if (RenderState2D.InvertY) {\r\n            this.defines.addInt(ShaderDefines2D.INVERTY);\r\n        } else {\r\n            this.defines.remove(ShaderDefines2D.INVERTY);\r\n        }\r\n    }\r\n    upload(): void {\r\n        var renderstate2d: any = RenderState2D;\r\n\r\n        this.updateShaderData();\r\n\r\n\r\n        var sd: Shader2X = Shader.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();\r\n\r\n        if (sd._shaderValueWidth !== renderstate2d.width || sd._shaderValueHeight !== renderstate2d.height) {\r\n            this.size[0] = renderstate2d.width;\r\n            this.size[1] = renderstate2d.height;\r\n            sd._shaderValueWidth = renderstate2d.width;\r\n            sd._shaderValueHeight = renderstate2d.height;\r\n            sd.upload((<ShaderValue>this), null);\r\n        }\r\n        else {\r\n            sd.upload((<ShaderValue>this), sd._params2dQuick2 || sd._make2dQuick2());\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    setFilters(value: any[]): void {\r\n        this.filters = value;\r\n        if (!value)\r\n            return;\r\n\r\n        var n: number = value.length, f: any;\r\n        for (var i: number = 0; i < n; i++) {\r\n            f = value[i];\r\n            if (f) {\r\n                this.defines.add(f.type);//搬到setValue中\r\n                f.action.setValue(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.defines._value = this.subID;\r\n        this.clipOff[0] = 0;\r\n    }\r\n\r\n    release(): void {\r\n        if ((--this.ref) < 1) {\r\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\r\n            //this.fillStyle = null;\r\n            //this.strokeStyle = null;\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n            this.clipOff[0] = 0;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n\t * ...\r\n\t * @author xie\r\n\t */\r\nexport class SubmitKey {\r\n    blendShader: number;\r\n    submitType: number;\r\n    other: number;\r\n\r\n    constructor() {\r\n        this.clear();\r\n    }\r\n\r\n    clear(): void {\r\n        this.submitType = -1;\r\n        this.blendShader = this.other = 0;\r\n        //alpha = 1;\r\n    }\r\n\r\n    //TODO:coverage\r\n    copyFrom(src: SubmitKey): void {\r\n        this.other = src.other;\r\n        this.blendShader = src.blendShader;\r\n        this.submitType = src.submitType;\r\n        //alpha = src.alpha;\r\n    }\r\n\r\n    copyFrom2(src: SubmitKey, submitType: number, other: number): void {\r\n        //this.blendShader = src.blendShader;\r\n        //this.alpha = src.alpha;\t\t\t\r\n        this.other = other;\r\n        this.submitType = submitType;\r\n    }\r\n\r\n    //�Ƚ�3�����ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal3_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && this.alpha === alpha;\r\n    }\r\n\r\n    //ȫ�Ƚϡ��ⲿ�ṩ2��\r\n    //TODO:coverage\r\n    equal4_2(next: SubmitKey, submitType: number, other: number): boolean {\r\n        return this.submitType === submitType && this.other === other && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n    //�Ƚ�3��\r\n    //TODO:coverage\r\n    equal_3(next: SubmitKey): boolean {\r\n        return this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n    //ȫ�Ƚϡ�4��\r\n    //TODO:coverage\r\n    equal(next: SubmitKey): boolean {\r\n        return this.other === next.other && this.submitType === next.submitType && this.blendShader === next.blendShader;// && alpha === next.alpha;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nexport class SubmitCMD implements ISubmit {\r\n    static POOL: SubmitCMD[] = []; fun: Function;\r\n    /**@internal */\r\n    _this: any;\r\n    args: any[];\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        this.fun.apply(this._this, this.args);\r\n        return 1;\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitCMD.POOL;\r\n            pool[pool._length++] = this;\r\n            this.args = null;\r\n            this.fun = null;\r\n            this._this = null;\r\n        }\r\n    }\r\n\r\n    static create(args: any[], fun: Function, thisobj: any): SubmitCMD {\r\n        var o: SubmitCMD = (SubmitCMD.POOL as any)._length ? SubmitCMD.POOL[--(SubmitCMD.POOL as any)._length] : new SubmitCMD();\r\n        o.fun = fun;\r\n        o.args = args;\r\n        o._this = thisobj;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        return o;\r\n    }\r\n}\r\n{ (SubmitCMD.POOL as any)._length = 0 }\r\n\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { Texture2D } from \"../resource/Texture2D\"\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class Filter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this:RenderSprite,sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var webglctx: Context = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == Filter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: RenderTexture2D = null;\r\n            var out: RenderTexture2D = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                source = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: Filter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case Filter.BLUR:\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            break;\r\n                        case Filter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case Filter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { Utils } from \"./Utils\"\r\n\r\nconst _COLOR_MAP: Record<string, string> = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\n\r\n/**\r\n * @private\r\n * <code>ColorUtils</code> 是一个颜色值处理类。\r\n */\r\nexport class ColorUtils {\r\n    /**@private */\r\n    static _SAVE: any = {};\r\n    /**@private */\r\n    static _SAVE_SIZE: number = 0;\r\n    /**@private */\r\n\r\n    /**@private */\r\n    private static _DEFAULT: any = ColorUtils._initDefault();\r\n\r\n    /**rgba 取值范围0-1*/\r\n    //TODO:delete？\r\n    arrColor: any[] = [];\r\n    /** 字符串型颜色值。*/\r\n    strColor: string;\r\n    /** uint 型颜色值。*/\r\n    numColor: number;\r\n    /**@internal TODO:*/\r\n    _drawStyle: any;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     */\r\n    constructor(value: any) {\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n\r\n        let color: number;\r\n        if (typeof (value) == 'string') {\r\n            color = Utils.fromStringColor(value);\r\n            this.strColor = value;\r\n        } else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            //color:0xrrggbbaa numColor此时为负数\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);//to 0xffbbggrr\r\n        } else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;//to 0xffbbggrr\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static _initDefault(): any {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in _COLOR_MAP) ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(_COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n\r\n    /**@private 缓存太大，则清理缓存*/\r\n    static _initSaveMap(): void {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = Object.assign({}, ColorUtils._DEFAULT);\r\n    }\r\n\r\n    /**\r\n     * 根据指定的属性值，创建并返回一个 <code>Color</code> 类的实例。\r\n     * @param\tvalue 颜色值，可以是字符串：\"#ff0000\"或者16进制颜色 0xff0000。\r\n     * @return 一个 <code>Color</code> 类的实例。\r\n     */\r\n    static create(value: any): ColorUtils {\r\n        let key: string = value + \"\";\r\n        let color: ColorUtils = ColorUtils._SAVE[key];\r\n        if (color != null) return color;\r\n        if (ColorUtils._SAVE_SIZE > 500) ColorUtils._initSaveMap();\r\n        ColorUtils._SAVE_SIZE++;\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { IFilter } from \"./IFilter\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\n\r\n/**对比度列表*/\r\nconst DELTA_INDEX: any[] = [0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.20, 0.21, 0.22, 0.24, 0.25, 0.27, 0.28, 0.30, 0.32, 0.34, 0.36, 0.38, 0.40, 0.42, 0.44, 0.46, 0.48, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.80, 0.83, 0.86, 0.89, 0.92, 0.95, 0.98, 1.0, 1.06, 1.12, 1.18, 1.24, 1.30, 1.36, 1.42, 1.48, 1.54, 1.60, 1.66, 1.72, 1.78, 1.84, 1.90, 1.96, 2.0, 2.12, 2.25, 2.37, 2.50, 2.62, 2.75, 2.87, 3.0, 3.2, 3.4, 3.6, 3.8, 4.0, 4.3, 4.7, 4.9, 5.0, 5.5, 6.0, 6.5, 6.8, 7.0, 7.3, 7.5, 7.8, 8.0, 8.4, 8.7, 9.0, 9.4, 9.6, 9.8, 10.0];\r\n/**灰色矩阵*/\r\nconst GRAY_MATRIX: any[] = [0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0.3086, 0.6094, 0.082, 0, 0, 0, 0, 0, 1, 0];\r\n/**单位矩阵,表示什么效果都没有*/\r\nconst IDENTITY_MATRIX: any[] = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];\r\n/**标准矩阵长度*/\r\nconst LENGTH: number = 25;\r\n\r\n/**\r\n * <p><code>ColorFilter</code> 是颜色滤镜。使用 ColorFilter 类可以将 4 x 5 矩阵转换应用于输入图像上的每个像素的 RGBA 颜色和 Alpha 值，以生成具有一组新的 RGBA 颜色和 Alpha 值的结果。该类允许饱和度更改、色相旋转、亮度转 Alpha 以及各种其他效果。您可以将滤镜应用于任何显示对象（即，从 Sprite 类继承的对象）。</p>\r\n * <p>注意：对于 RGBA 值，最高有效字节代表红色通道值，其后的有效字节分别代表绿色、蓝色和 Alpha 通道值。</p>\r\n */\r\nexport class ColorFilter extends Filter implements IFilter {\r\n\r\n    /** @internal */\r\n    _mat: Float32Array;\r\n    /** @internal */\r\n    _alpha: Float32Array;\r\n    /**当前使用的矩阵*/\r\n    _matrix: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>ColorFilter</code> 实例。\r\n     * @param mat\t（可选）由 20 个项目（排列成 4 x 5 矩阵）组成的数组，用于颜色转换。\r\n     */\r\n    constructor(mat: any[] = null) {\r\n        super();\r\n        if (!mat) mat = this._copyMatrix(IDENTITY_MATRIX);\r\n        this._mat = new Float32Array(16);\r\n        this._alpha = new Float32Array(4);\r\n        this.setByMatrix(mat);\r\n    }\r\n\r\n    /**\r\n     * 设置为灰色滤镜\r\n     */\r\n    gray(): ColorFilter {\r\n        return this.setByMatrix(GRAY_MATRIX);\r\n    }\r\n\r\n    /**\r\n     * 设置为变色滤镜\r\n     * @param red 红色系数,范围:0~1\r\n     * @param green 绿色系数,范围:0~1\r\n     * @param blue 蓝色系数,范围:0~1\r\n     * @param alpha alpha系数,范围:0~1\r\n     */\r\n    color(red: number = 0, green: number = 0, blue: number = 0, alpha: number = 1): ColorFilter {\r\n        return this.setByMatrix([red, 0, 0, 0, 1, 0, green, 0, 0, 1, 0, 0, blue, 0, 1, 0, 0, 0, alpha, 0]);\r\n    }\r\n\r\n    /**\r\n     * 设置滤镜色\r\n     * @param\tcolor 颜色值\r\n     */\r\n    setColor(color: string): ColorFilter {\r\n        var arr: any[] = ColorUtils.create(color).arrColor;\r\n        var mt: any[] = [0, 0, 0, 0, 256 * arr[0], 0, 0, 0, 0, 256 * arr[1], 0, 0, 0, 0, 256 * arr[2], 0, 0, 0, 1, 0];\r\n        return this.setByMatrix(mt);\r\n    }\r\n\r\n    /**\r\n     * 设置矩阵数据\r\n     * @param matrix 由 20 个项目（排列成 4 x 5 矩阵）组成的数组\r\n     * @return this\r\n     */\r\n    setByMatrix(matrix: any[]): ColorFilter {\r\n        if (this._matrix != matrix) this._copyMatrix(matrix);\r\n        var j: number = 0;\r\n        var z: number = 0;\r\n        for (var i: number = 0; i < 20; i++) {\r\n            if (i % 5 != 4) {\r\n                this._mat[j++] = matrix[i];\r\n            } else {\r\n                this._alpha[z++] = matrix[i];\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    get type(): number {\r\n        return Filter.COLOR;\r\n    }\r\n\r\n    /**\r\n     * 调整颜色，包括亮度，对比度，饱和度和色调\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustColor(brightness: number, contrast: number, saturation: number, hue: number): ColorFilter {\r\n        this.adjustHue(hue);\r\n        this.adjustContrast(contrast);\r\n        this.adjustBrightness(brightness);\r\n        this.adjustSaturation(saturation);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 调整亮度\r\n     * @param brightness 亮度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustBrightness(brightness: number): ColorFilter {\r\n        brightness = this._clampValue(brightness, 100);\r\n        if (brightness == 0 || isNaN(brightness)) return this;\r\n        return this._multiplyMatrix([1, 0, 0, 0, brightness, 0, 1, 0, 0, brightness, 0, 0, 1, 0, brightness, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整对比度\r\n     * @param contrast 对比度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustContrast(contrast: number): ColorFilter {\r\n        contrast = this._clampValue(contrast, 100);\r\n        if (contrast == 0 || isNaN(contrast)) return this;\r\n        var x: number;\r\n        if (contrast < 0) {\r\n            x = 127 + contrast / 100 * 127\r\n        } else {\r\n            x = contrast % 1;\r\n            if (x == 0) {\r\n                x = DELTA_INDEX[contrast];\r\n            } else {\r\n                x = DELTA_INDEX[(contrast << 0)] * (1 - x) + DELTA_INDEX[(contrast << 0) + 1] * x;\r\n            }\r\n            x = x * 127 + 127;\r\n        }\r\n        var x1: number = x / 127;\r\n        var x2: number = (127 - x) * 0.5;\r\n        return this._multiplyMatrix([x1, 0, 0, 0, x2, 0, x1, 0, 0, x2, 0, 0, x1, 0, x2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整饱和度\r\n     * @param saturation 饱和度,范围:-100~100\r\n     * @return this\r\n     */\r\n    adjustSaturation(saturation: number): ColorFilter {\r\n        saturation = this._clampValue(saturation, 100);\r\n        if (saturation == 0 || isNaN(saturation)) return this;\r\n        var x: number = 1 + ((saturation > 0) ? 3 * saturation / 100 : saturation / 100);\r\n        var dx: number = 1 - x;\r\n        var r: number = 0.3086 * dx;\r\n        var g: number = 0.6094 * dx;\r\n        var b: number = 0.0820 * dx;\r\n\r\n        return this._multiplyMatrix([r + x, g, b, 0, 0, r, g + x, b, 0, 0, r, g, b + x, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 调整色调\r\n     * @param hue 色调,范围:-180~180\r\n     * @return this\r\n     */\r\n    adjustHue(hue: number): ColorFilter {\r\n        hue = this._clampValue(hue, 180) / 180 * Math.PI;\r\n        if (hue == 0 || isNaN(hue)) return this;\r\n        var cos: number = Math.cos(hue);\r\n        var sin: number = Math.sin(hue);\r\n        var r: number = 0.213;\r\n        var g: number = 0.715;\r\n        var b: number = 0.072;\r\n        return this._multiplyMatrix([r + cos * (1 - r) + sin * (-r), g + cos * (-g) + sin * (-g), b + cos * (-b) + sin * (1 - b), 0, 0, r + cos * (-r) + sin * (0.143), g + cos * (1 - g) + sin * (0.140), b + cos * (-b) + sin * (-0.283), 0, 0, r + cos * (-r) + sin * (-(1 - r)), g + cos * (-g) + sin * (g), b + cos * (1 - b) + sin * (b), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1]);\r\n    }\r\n\r\n    /**\r\n     * 重置成单位矩阵，去除滤镜效果\r\n     */\r\n    reset(): ColorFilter {\r\n        return this.setByMatrix(this._copyMatrix(IDENTITY_MATRIX));\r\n    }\r\n\r\n    /**\r\n     * 矩阵乘法\r\n     * @param matrix\r\n     * @return this\r\n     */\r\n    private _multiplyMatrix(matrix: any[]): ColorFilter {\r\n        var col: any[] = [];\r\n        this._matrix = this._fixMatrix(this._matrix);\r\n        for (var i: number = 0; i < 5; i++) {\r\n            for (var j: number = 0; j < 5; j++) {\r\n                col[j] = this._matrix[j + i * 5];\r\n            }\r\n            for (j = 0; j < 5; j++) {\r\n                var val: number = 0;\r\n                for (var k: number = 0; k < 5; k++) {\r\n                    val += matrix[j + k * 5] * col[k];\r\n                }\r\n                this._matrix[j + i * 5] = val;\r\n            }\r\n        }\r\n        return this.setByMatrix(this._matrix);\r\n    }\r\n\r\n    /**\r\n     * 规范值的范围\r\n     * @param val 当前值\r\n     * @param limit 值的范围-limit~limit\r\n     */\r\n    private _clampValue(val: number, limit: number): number {\r\n        return Math.min(limit, Math.max(-limit, val));\r\n    }\r\n\r\n    /**\r\n     * 规范矩阵,将矩阵调整到正确的大小\r\n     * @param matrix 需要调整的矩阵\r\n     */\r\n    private _fixMatrix(matrix: any[] = null): any[] {\r\n        if (matrix == null) return IDENTITY_MATRIX;\r\n        if (matrix.length < LENGTH) matrix = matrix.slice(0, matrix.length).concat(IDENTITY_MATRIX.slice(matrix.length, LENGTH));\r\n        else if (matrix.length > LENGTH) matrix = matrix.slice(0, LENGTH);\r\n        return matrix;\r\n    }\r\n\r\n    /**\r\n     * 复制矩阵\r\n     */\r\n    private _copyMatrix(matrix: any[]): any[] {\r\n        var len: number = LENGTH;\r\n        if (!this._matrix) this._matrix = [];\r\n        for (var i: number = 0; i < len; i++) {\r\n            this._matrix[i] = matrix[i];\r\n        }\r\n        return this._matrix;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        let arr: any[] = ColorUtils.create((<any>this)._color || \"#FFFFFF\").arrColor;\r\n        this.color(arr[0], arr[1], arr[2], arr[3]);\r\n        this.adjustColor((<any>this)._brightness || 0, (<any>this)._contrast || 0, (<any>this)._saturation || 0, (<any>this)._hue || 0);\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\nimport { Utils } from \"../utils/Utils\"\r\n\r\n/**\r\n * @private\r\n * 凸包算法。\r\n */\r\nexport class GrahamScan {\r\n\r\n    private static _mPointList: any[];\r\n    private static _tempPointList: any[] = [];\r\n    private static _temPList: any[] = [];\r\n    private static _temArr: any[] = [];\r\n\r\n    static multiply(p1: Point, p2: Point, p0: Point): number {\r\n        return ((p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y));\r\n    }\r\n\r\n    /**\r\n     * 计算两个点的距离。\r\n     * @param\tp1\r\n     * @param\tp2\r\n     * @return\r\n     */\r\n    static dis(p1: Point, p2: Point): number {\r\n        return (p1.x - p2.x) * (p1.x - p2.x) + (p1.y - p2.y) * (p1.y - p2.y);\r\n    }\r\n\r\n    private static _getPoints(count: number, tempUse: boolean = false, rst: any[]|null = null): any[] {\r\n        if (!GrahamScan._mPointList) GrahamScan._mPointList = [];\r\n        while (GrahamScan._mPointList.length < count) GrahamScan._mPointList.push(new Point());\r\n        if (!rst) rst = [];\r\n        rst.length = 0;\r\n        if (tempUse) {\r\n            //\t\t\t\trst=_mPointList.slice(0,count);\r\n            GrahamScan.getFrom(rst, GrahamScan._mPointList, count);\r\n        } else {\r\n            //\t\t\t\trst=_mPointList.splice(0,count);\r\n            GrahamScan.getFromR(rst, GrahamScan._mPointList, count);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从索引0位置 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFrom(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src[i]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 将数组 src 从末尾索引位置往头部索引位置方向 依次取 cout 个项添加至 tst 数组的尾部。\r\n     * @param\trst 原始数组，用于添加新的子元素。\r\n     * @param\tsrc 用于取子元素的数组。\r\n     * @param\tcount 需要取得子元素个数。\r\n     * @return 添加完子元素的 rst 对象。\r\n     */\r\n    static getFromR(rst: any[], src: any[], count: number): any[] {\r\n        var i: number;\r\n        for (i = 0; i < count; i++) {\r\n            rst.push(src.pop());\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  [x,y...]列表 转 Point列表\r\n     * @param pList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pListToPointList(pList: any[], tempUse: boolean = false): any[] {\r\n        var i: number, len: number = pList.length / 2, rst: any[] = GrahamScan._getPoints(len, tempUse, GrahamScan._tempPointList);\r\n        for (i = 0; i < len; i++) {\r\n            rst[i].setTo(pList[i + i], pList[i + i + 1]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * Point列表转[x,y...]列表\r\n     * @param pointList Point列表\r\n     * @return [x,y...]列表\r\n     */\r\n    static pointListToPlist(pointList: any[]): any[] {\r\n        var i: number, len: number = pointList.length, rst: any[] = GrahamScan._temPList, tPoint: Point;\r\n        rst.length = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tPoint = pointList[i];\r\n            rst.push(tPoint.x, tPoint.y);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     *  寻找包括所有点的最小多边形顶点集合\r\n     * @param pList 形如[x0,y0,x1,y1...]的点列表\r\n     * @return  最小多边形顶点集合\r\n     */\r\n    static scanPList(pList: any[]): any[] {\r\n        return Utils.copyArray(pList, GrahamScan.pointListToPlist(GrahamScan.scan(GrahamScan.pListToPointList(pList, true))));\r\n    }\r\n\r\n    /**\r\n     * 寻找包括所有点的最小多边形顶点集合\r\n     * @param PointSet Point列表\r\n     * @return 最小多边形顶点集合\r\n     */\r\n    static scan(PointSet: any[]): any[] {\r\n        var i: number, j: number, k: number = 0, top: number = 2, tmp: Point, n: number = PointSet.length, ch: any[];\r\n        var _tmpDic: any = {};\r\n        var key: string;\r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        n = PointSet.length;\r\n        for (i = n - 1; i >= 0; i--) {\r\n            tmp = PointSet[i];\r\n            key = tmp.x + \"_\" + tmp.y;\r\n            if (!(key in _tmpDic)) {\r\n                _tmpDic[key] = true;\r\n                ch.push(tmp);\r\n            }\r\n        }\r\n        n = ch.length;\r\n        Utils.copyArray(PointSet, ch);\r\n        //\t\t\tPointSet=ch;\r\n        //\t\t\tn=PointSet.length;\r\n        //找到最下且偏左的那个点  \r\n        for (i = 1; i < n; i++)\r\n            if ((PointSet[i].y < PointSet[k].y) || ((PointSet[i].y == PointSet[k].y) && (PointSet[i].x < PointSet[k].x)))\r\n                k = i;\r\n        //将这个点指定为PointSet[0]  \r\n        tmp = PointSet[0];\r\n        PointSet[0] = PointSet[k];\r\n        PointSet[k] = tmp;\r\n        //按极角从小到大,距离偏短进行排序  \r\n        for (i = 1; i < n - 1; i++) {\r\n            k = i;\r\n            for (j = i + 1; j < n; j++)\r\n                if ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) > 0) || ((GrahamScan.multiply(PointSet[j], PointSet[k], PointSet[0]) == 0) && (GrahamScan.dis(PointSet[0], PointSet[j]) < GrahamScan.dis(PointSet[0], PointSet[k]))))\r\n                    k = j;//k保存极角最小的那个点,或者相同距离原点最近  \r\n            tmp = PointSet[i];\r\n            PointSet[i] = PointSet[k];\r\n            PointSet[k] = tmp;\r\n        }\r\n        //第三个点先入栈  \r\n        ch = GrahamScan._temArr;\r\n        ch.length = 0;\r\n        //trace(\"scan:\",PointSet[0],PointSet[1],PointSet[2]);\r\n        if (PointSet.length < 3) {\r\n            return Utils.copyArray(ch, PointSet);\r\n        }\r\n        ch.push(PointSet[0], PointSet[1], PointSet[2]);\r\n        //ch=[PointSet[0],PointSet[1],PointSet[2]];\r\n        //判断与其余所有点的关系  \r\n        for (i = 3; i < n; i++) {\r\n            //不满足向左转的关系,栈顶元素出栈  \r\n            while (ch.length >= 2 && GrahamScan.multiply(PointSet[i], ch[ch.length - 1], ch[ch.length - 2]) >= 0) ch.pop();\r\n            //当前点与栈内所有点满足向左关系,因此入栈.  \r\n            PointSet[i] && ch.push(PointSet[i]);\r\n        }\r\n        return ch;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class SpriteConst {\r\n    /** @private */\r\n    static ALPHA: number = 0x01;\r\n    /** @private */\r\n    static TRANSFORM: number = 0x02;\r\n    /** @private */\r\n    static BLEND: number = 0x04;\r\n    /** @private */\r\n    static CANVAS: number = 0x08;\r\n    /** @private */\r\n    static FILTERS: number = 0x10;\r\n    /** @private */\r\n    static MASK: number = 0x20;\r\n    /** @private */\r\n    static CLIP: number = 0x40;\r\n    /** @private */\r\n    static STYLE: number = 0x80;\r\n    /** @private */\r\n    static TEXTURE: number = 0x100;\r\n    /** @private */\r\n    static GRAPHICS: number = 0x200;\r\n    /** @private */\r\n    static LAYAGL3D: number = 0x400;\r\n    /** @private */\r\n    static CUSTOM: number = 0x800;\r\n    /** @private */\r\n    static ONECHILD: number = 0x1000;\r\n    /** @private */\r\n    static HITAREA: number = 0x2000;\r\n    /** @private */\r\n    static CHILDS: number = 0x4000;\r\n\r\n    /** @private */\r\n    static REPAINT_NONE: number = 0;\r\n    /** @private */\r\n    static REPAINT_NODE: number = 0x01;\r\n    /** @private */\r\n    static REPAINT_CACHE: number = 0x02;\r\n    /** @private */\r\n    static REPAINT_ALL: number = 0x03;\r\n}\r\n\r\n\r\n","/**\r\n * 渲染统计数据\r\n */\r\nexport enum RenderStatisticsInfo{\r\n    DrawCall,\r\n    InstanceDrawCall,\r\n    Triangle,\r\n    UniformUpload,//TODO\r\n    GPUMemory,\r\n    TextureMemeory,\r\n    RenderTextureMemory,\r\n    BufferMemory,\r\n}","export enum RenderParams{\r\n    Max_Active_Texture_Count,//可激活的纹理数量，即shader中的最大纹理数量\r\n    Max_Uniform_Count,//最大Uniform数量\r\n    Max_AnisoLevel_Count,//最大各向异性数量\r\n    MAX_Texture_Size,//Shader中的最大纹理\r\n    MAX_Texture_Image_Uint,//图形设备支持的最大纹理数量。\r\n    SHADER_CAPAILITY_LEVEL,//Shader质量\r\n    FLOAT,\r\n    UNSIGNED_BYTE,\r\n    BYTE,\r\n    UNSIGNED_SHORT,\r\n}","export enum BufferTargetType{\r\n    ARRAY_BUFFER,//顶点\r\n    ELEMENT_ARRAY_BUFFER,//索引\r\n    //WebGL2.0 UniformBuffer\r\n    UNIFORM_BUFFER,//UBO\r\n    COPY_READ_BUFFER,//TODO\r\n    COPY_WRITE_BUFFER,//TODO\r\n    TRANSFORM_FEEDBACK_BUFFER,//TODO\r\n    PIXEL_PACK_BUFFER,//TODO\r\n    PIXEL_UNPACK_BUFFER,//TODO\r\n}\r\n\r\n\r\n/**\r\n * Buffer usage.\r\n */\r\n export enum BufferUsage {\r\n    /** The buffer content are intended to be specified once, and used many times */\r\n    Static,\r\n    /** The buffer contents are intended to be respecified repeatedly, and used many times */\r\n    Dynamic,\r\n    /** The buffer contents are intended to be specified once, and used at most a few times */\r\n    Stream\r\n  }","export enum IndexFormat {\r\n    /** 8 位无符号整型索引格式。*/\r\n    UInt8,\r\n    /** 16 位无符号整型索引格式。*/\r\n    UInt16,\r\n    /** 32 位无符号整型索引格式。*/\r\n    UInt32\r\n}","import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Browser</code> 是浏览器代理类。封装浏览器及原生 js 提供的一些功能。\r\n */\r\nexport class Browser {\r\n\r\n    /** 浏览器代理信息。*/\r\n    static userAgent: string;\r\n    /** 表示是否在移动设备，包括IOS和安卓等设备内。*/\r\n    static onMobile: boolean;\r\n    /** 表示是否在 IOS 设备内。*/\r\n    static onIOS: boolean;\r\n    /** 表示是否在 Mac 设备。*/\r\n    static onMac: boolean;\r\n    /** 表示是否在 IPhone 设备内。*/\r\n    static onIPhone: boolean;\r\n    /** 表示是否在 IPad 设备内。*/\r\n    static onIPad: boolean;\r\n    /** 表示是否在 Android 设备内。*/\r\n    static onAndroid: boolean;\r\n    /** 表示是否在 Windows Phone 设备内。*/\r\n    static onWP: boolean;\r\n    /** 表示是否在 QQ 浏览器内。*/\r\n    static onQQBrowser: boolean;\r\n    /** 表示是否在移动端 QQ 或 QQ 浏览器内。*/\r\n    static onMQQBrowser: boolean;\r\n    /** 表示是否在 Safari 内。*/\r\n    static onSafari: boolean;\r\n    /** 表示是否在 Chrome 内 */\r\n    static onChrome: boolean;\r\n    /** 表示是否在 IE 浏览器内*/\r\n    static onIE: boolean;\r\n    /** 表示是否在 微信 内*/\r\n    static onWeiXin: boolean;\r\n    /** 表示是否在 PC 端。*/\r\n    static onPC: boolean;\r\n    /** 微信小游戏 **/\r\n    static onMiniGame: boolean;\r\n    /** 百度小游戏 **/\r\n    static onBDMiniGame: boolean;\r\n    /** 小米戏小游戏 **/\r\n    static onKGMiniGame: boolean;\r\n    /** OPPO小游戏 **/\r\n    static onQGMiniGame: boolean;\r\n    /** VIVO小游戏 **/\r\n    static onVVMiniGame: boolean;\r\n    /** 阿里小游戏 **/\r\n    static onAlipayMiniGame: boolean;\r\n    /***手机QQ小游戏 */\r\n    static onQQMiniGame: boolean;\r\n    /*** BILIBILI小游戏 */\r\n    static onBLMiniGame: boolean;\r\n    /** 抖音小游戏*/\r\n    static onTTMiniGame: boolean;\r\n    /** 华为快游戏 */\r\n    static onHWMiniGame: boolean;\r\n    /** 淘宝小程序 */\r\n    static onTBMiniGame: boolean;\r\n    /** @private */\r\n    static onFirefox: boolean;//TODO:求补充\r\n    /** Edge浏览器 */\r\n    static onEdge: boolean;\r\n    /** @private */\r\n    static onLayaRuntime: boolean;\r\n\r\n    /** 真实平台类型，onMobile等是通过UserAgent判断，可能具有欺骗性 **/\r\n    static platform: number;\r\n    static PLATFORM_PC = 0;\r\n    static PLATFORM_ANDROID = 1;\r\n    static PLATFORM_IOS = 2;\r\n\r\n    /** 表示是否支持WebAudio*/\r\n    static supportWebAudio: boolean;\r\n    /** 表示是否支持LocalStorage*/\r\n    static supportLocalStorage: boolean;\r\n\r\n    /** 全局离线画布（非主画布）。主要用来测量字体、获取image数据。*/\r\n    static canvas: any;\r\n    /** 全局离线画布上绘图的环境（非主画布）。 */\r\n    static context: CanvasRenderingContext2D;\r\n\r\n    /** @private */\r\n    private static _window: any;\r\n    /** @private */\r\n    private static _document: Document;\r\n    /** @private */\r\n    private static _container: any;\r\n    /** @private */\r\n    private static _pixelRatio: number = -1;\r\n\r\n    /** @private */\r\n    private static _clientWidth: number;\r\n    /** @private */\r\n    private static _clientHeight: number;\r\n\r\n    /** @private */\r\n    static mainCanvas: any = null;\r\n\r\n    /**@private */\r\n    private static hanzi: RegExp = new RegExp(\"^[\\u4E00-\\u9FA5]$\");\r\n    /**@private */\r\n    private static fontMap: { [key: string]: string } = {};\r\n    /**@private */\r\n    static measureText: Function = function (txt: string, font: string): any {\r\n        let isChinese: boolean = Browser.hanzi.test(txt);\r\n        if (isChinese && Browser.fontMap[font]) {\r\n            return Browser.fontMap[font];\r\n        }\r\n\r\n        let ctx: CanvasRenderingContext2D = Browser.context;\r\n        ctx.font = font;\r\n\r\n        let r: any = ctx.measureText(txt);\r\n        if (isChinese) Browser.fontMap[font] = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        let Laya: any = (window as any).Laya || ILaya.Laya;\r\n        if (Browser._window) return Browser._window;\r\n        let win: any = Browser._window = window;\r\n        let doc: any = Browser._document = win.document;\r\n        let u: string = Browser.userAgent = win.navigator.userAgent;\r\n        let maxTouchPoints: number = win.navigator.maxTouchPoints || 0;\r\n        let platform: string = win.navigator.platform;\r\n\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            (window as any).wxMiniGame(Laya, Laya);\r\n            Laya[\"MiniAdpter\"].enable();\r\n        }\r\n        //阿里小游戏\r\n        if (\"my\" in Browser.window) {\r\n            if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).tbMiniGame(Laya, Laya);\r\n                if (!Laya[\"TBMiniAdapter\"]) {\r\n                    console.error(\"请先添加淘宝适配库\");\r\n                } else {\r\n                    Laya[\"TBMiniAdapter\"].enable();\r\n                }\r\n            } else if (u.indexOf('AlipayMiniGame') > -1) {\r\n                //这里需要手动初始化阿里适配库\r\n                (window as any).aliPayMiniGame(Laya, Laya);\r\n                if (!Laya[\"ALIMiniAdapter\"]) {\r\n                    console.error(\"请先添加阿里小游戏适配库\");\r\n                } else {\r\n                    Laya[\"ALIMiniAdapter\"].enable();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (((u.indexOf('OPPO') == -1 && u.indexOf(\"MiniGame\") > -1) || u.indexOf('runtime') != -1 || (u.indexOf('miniprogram') != -1 && (window as any).isWXMiMi)) && \"wx\" in Browser.window) {\r\n            if (\"tt\" in Browser.window) {\r\n                //抖音小游戏\r\n                (window as any).ttMiniGame(Laya, Laya);\r\n                if (!Laya[\"TTMiniAdapter\"]) {\r\n                    //TODO\r\n                    console.error(\"请引入抖音小游戏的适配库，详细教程：https://layaair.com/3.x/doc/released/miniGame/byteDance/readme.html\");\r\n                } else {\r\n                    Laya[\"TTMiniAdapter\"].enable();\r\n                }\r\n            } else if (\"bl\" in Browser.window) {\r\n                //手机B站小游戏\r\n                (window as any).biliMiniGame(Laya, Laya);\r\n                if (!Laya[\"BLMiniAdapter\"]) {\r\n                    console.error(\"请引入bilibili小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"BLMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else if (\"qq\" in Browser.window) {\r\n                //手机QQ小游戏\r\n                (window as any).qqMiniGame(Laya, Laya);\r\n                if (!Laya[\"QQMiniAdapter\"]) {\r\n                    console.error(\"请引入手机QQ小游戏的适配库\");\r\n                } else {\r\n                    Laya[\"QQMiniAdapter\"].enable();\r\n                }\r\n            }\r\n            else {\r\n                //微信小游戏\r\n                (window as any).wxMiniGame(Laya, Laya);\r\n                if (!Laya[\"MiniAdpter\"]) {\r\n                    console.error(\"请先添加小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/wechat/readme.html\");\r\n                    //TODO 教程要改\r\n                } else {\r\n                    Laya[\"MiniAdpter\"].enable();\r\n                }\r\n            }\r\n        }\r\n        //华为快游戏\r\n        if (\"hbs\" in Browser.window) {\r\n            (window as any).hwMiniGame(Laya, Laya);\r\n            if (!Laya[\"HWMiniAdapter\"]) {\r\n                console.error(\"请先添加小游戏适配库!\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"HWMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //百度小游戏\r\n        if (u.indexOf(\"SwanGame\") > -1) {\r\n            (window as any).bdMiniGame(Laya, Laya);\r\n            if (!Laya[\"BMiniAdapter\"]) {\r\n                console.error(\"请先添加百度小游戏适配库\");\r\n                //TODO 教程要改\r\n            } else {\r\n                Laya[\"BMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //小米小游戏\r\n        if (u.indexOf('QuickGame') > -1) {\r\n            (window as any).miMiniGame(Laya, Laya);\r\n            if (!Laya[\"KGMiniAdapter\"]) {\r\n                console.error(\"请先添加小米小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/xiaomi/readme.html\");\r\n            } else {\r\n                Laya[\"KGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //OPPO小游戏\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            (window as any).qgMiniGame(Laya, Laya);\r\n            if (!Laya[\"QGMiniAdapter\"]) {\r\n                console.error(\"请先添加OPPO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/OPPO/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"QGMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //VIVO小游戏\r\n        if (u.indexOf('VVGame') > -1) {\r\n            (window as any).vvMiniGame(Laya, Laya);\r\n            if (!Laya[\"VVMiniAdapter\"]) {\r\n                console.error(\"请先添加VIVO小游戏适配库,详细教程：https://layaair.com/3.x/doc/released/miniGame/vivo/readme.html\");\r\n            } else {\r\n                //temp oppo 需要修改交换链的功能\r\n                Config.fixedFrames = false;\r\n                Laya[\"VVMiniAdapter\"].enable();\r\n            }\r\n        }\r\n\r\n        //新增trace的支持\r\n        win.trace = console.log;\r\n\r\n        //兼容requestAnimationFrame\r\n        win.requestAnimationFrame = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (fun: any): any {\r\n            return win.setTimeout(fun, 1000 / 60);\r\n        }\r\n\r\n        //强制修改body样式\r\n        var bodyStyle: any = doc.body.style;\r\n        bodyStyle.margin = 0;\r\n        bodyStyle.overflow = 'hidden';\r\n        bodyStyle['-webkit-user-select'] = 'none';\r\n        bodyStyle['-webkit-tap-highlight-color'] = 'rgba(200,200,200,0)';\r\n\r\n        //强制修改meta标签，防止开发者写错\r\n        var metas: any[] = doc.getElementsByTagName('meta');\r\n        var i: number = 0, flag: boolean = false, content: any = 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no';\r\n        while (i < metas.length) {\r\n            var meta: any = metas[i];\r\n            if (meta.name == 'viewport') {\r\n                meta.content = content;\r\n                flag = true;\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        if (!flag) {\r\n            meta = doc.createElement('meta');\r\n            meta.name = 'viewport', meta.content = content;\r\n            doc.getElementsByTagName('head')[0].appendChild(meta);\r\n        }\r\n\r\n        //处理兼容性\t\t\t\r\n        Browser.onMobile = (window as any).conch ? true : u.indexOf(\"Mobile\") > -1;\r\n        Browser.onIOS = !!u.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/);\r\n        Browser.onIPhone = u.indexOf(\"iPhone\") > -1;\r\n        Browser.onMac = u.indexOf(\"Mac OS X\") > -1;\r\n        Browser.onIPad = u.indexOf(\"iPad\") > -1 || (platform === 'MacIntel' && maxTouchPoints > 1);//\"platform === 'MacIntel' && maxTouchPoints >1\" is a temporary solution，maybe accidentally injure other platform.\r\n        Browser.onAndroid = u.indexOf('Android') > -1 || u.indexOf('Adr') > -1;\r\n        Browser.onWP = u.indexOf(\"Windows Phone\") > -1;\r\n        Browser.onQQBrowser = u.indexOf(\"QQBrowser\") > -1;\r\n        Browser.onMQQBrowser = u.indexOf(\"MQQBrowser\") > -1 || (u.indexOf(\"Mobile\") > -1 && u.indexOf(\"QQ\") > -1);\r\n        Browser.onIE = !!win.ActiveXObject || \"ActiveXObject\" in win;\r\n        Browser.onWeiXin = u.indexOf('MicroMessenger') > -1;\r\n        Browser.onSafari = u.indexOf(\"Safari\") > -1 && u.indexOf(\"Chrome\") === -1;\r\n        Browser.onChrome = u.indexOf(\"Chrome\") > -1;\r\n        Browser.onPC = !Browser.onMobile;\r\n        Browser.onFirefox = u.indexOf('Firefox') > -1;\r\n        Browser.onEdge = u.indexOf('Edge') > -1 || u.indexOf('Edg') > -1;\r\n        Browser.onMiniGame = u.indexOf('MiniGame') > -1;\r\n        Browser.onBDMiniGame = u.indexOf('SwanGame') > -1;\r\n        Browser.onLayaRuntime = !!(window as any).conch;\r\n        if (u.indexOf('OPPO') > -1 && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQGMiniGame = true;//OPPO环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"qq\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onQQMiniGame = true;//手机QQ环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"bl\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onBLMiniGame = true;//B站环境判断\r\n            Browser.onMiniGame = false;\r\n        } else if (\"tt\" in Browser.window && u.indexOf('MiniGame') > -1) {\r\n            Browser.onTTMiniGame = true;\r\n            Browser.onMiniGame = false;\r\n        }\r\n\r\n        Browser.onHWMiniGame = \"hbs\" in Browser.window;\r\n        Browser.onVVMiniGame = u.indexOf('VVGame') > -1;//vivo\r\n        Browser.onKGMiniGame = u.indexOf('QuickGame') > -1;//小米运行环境判断\r\n        if (u.indexOf('AlipayMiniGame') > -1) {\r\n            Browser.onAlipayMiniGame = true;//阿里小游戏环境判断\r\n            Browser.onMiniGame = false;\r\n        }\r\n        if (u.indexOf('TB/') > -1 || u.indexOf('Taobao/') > -1 || u.indexOf('TM/') > -1) {\r\n            Browser.onTBMiniGame = true;\r\n        }\r\n\r\n        if (Browser.onAndroid || Browser.onIOS) {\r\n            //也有可能是模拟器\r\n            if (platform && (platform.indexOf(\"Win\") != -1 || platform.indexOf(\"Mac\") != -1))\r\n                Browser.platform = Browser.PLATFORM_PC;\r\n            else if (Browser.onAndroid)\r\n                Browser.platform = Browser.PLATFORM_ANDROID;\r\n            else\r\n                Browser.platform = Browser.PLATFORM_IOS;\r\n        }\r\n        else\r\n            Browser.platform = Browser.PLATFORM_PC;\r\n\r\n        return win;\r\n    }\r\n    /**\r\n     * 获取是否为小游戏环境\r\n     * @returns onMiniGame || onBDMiniGame || onQGMiniGame || onKGMiniGame || onVVMiniGame || onAlipayMiniGame || onQQMiniGame || onBLMiniGame || onTTMiniGame || onHWMiniGame || onTBMiniGame\r\n     */\r\n    static get _isMiniGame(): boolean {\r\n        return Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame || Browser.onBLMiniGame || Browser.onTTMiniGame || Browser.onHWMiniGame || Browser.onTBMiniGame || (Browser.window && Browser.window.isWXMiMi);\r\n    }\r\n    /**\r\n     * 创建浏览器原生节点。\r\n     * @param\ttype 节点类型。\r\n     * @return\t创建的节点对象的引用。\r\n     */\r\n    static createElement(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.createElement(type);\r\n    }\r\n\r\n    /**\r\n     * 返回 Document 对象中拥有指定 id 的第一个对象的引用。\r\n     * @param\ttype 节点id。\r\n     * @return\t节点对象。\r\n     */\r\n    static getElementById(type: string): any {\r\n        Browser.__init__();\r\n        return Browser._document.getElementById(type);\r\n    }\r\n\r\n    /**\r\n     * 移除指定的浏览器原生节点对象。\r\n     * @param\ttype 节点对象。\r\n     */\r\n    static removeElement(ele: any): void {\r\n        if (ele && ele.parentNode) ele.parentNode.removeChild(ele);\r\n    }\r\n\r\n    /**\r\n     * 获取浏览器当前时间戳，单位为毫秒。\r\n     */\r\n    static now(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视宽度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerWidth(包含滚动条宽度) > document.body.clientWidth(不包含滚动条宽度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientWidth(): number {\r\n        Browser.__init__();\r\n        return Browser._clientWidth || Browser._window.innerWidth || Browser._document.body.clientWidth;\r\n    }\r\n\r\n    static set clientWidth(value: number) {\r\n        Browser._clientWidth = value;\r\n    }\r\n\r\n    /**\r\n     * 浏览器窗口可视高度。\r\n     * 通过分析浏览器信息获得。浏览器多个属性值优先级为：window.innerHeight(包含滚动条高度) > document.body.clientHeight(不包含滚动条高度) > document.documentElement.clientHeight(不包含滚动条高度)，如果前者为0或为空，则选择后者。\r\n     */\r\n    static get clientHeight(): number {\r\n        Browser.__init__();\r\n        return Browser._clientHeight || Browser._window.innerHeight || Browser._document.body.clientHeight || Browser._document.documentElement.clientHeight;\r\n    }\r\n\r\n    static set clientHeight(value: number) {\r\n        Browser._clientHeight = value;\r\n    }\r\n\r\n    /** 浏览器窗口物理宽度。考虑了设备像素比。*/\r\n    static get width(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientHeight : Browser.clientWidth) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 浏览器窗口物理高度。考虑了设备像素比。*/\r\n    static get height(): number {\r\n        Browser.__init__();\r\n        return ((ILaya.stage && ILaya.stage.canvasRotation) ? Browser.clientWidth : Browser.clientHeight) * Browser.pixelRatio;\r\n    }\r\n\r\n    /** 获得设备像素比。*/\r\n    static get pixelRatio(): number {\r\n        if (Browser._pixelRatio < 0) {\r\n            Browser.__init__();\r\n            if (Browser.userAgent.indexOf(\"Mozilla/6.0(Linux; Android 6.0; HUAWEI NXT-AL10 Build/HUAWEINXT-AL10)\") > -1) Browser._pixelRatio = 2;\r\n            else {\r\n                Browser._pixelRatio = (Browser._window.devicePixelRatio || 1);\r\n                if (Browser._pixelRatio < 1) Browser._pixelRatio = 1;\r\n            }\r\n        }\r\n        return Browser._pixelRatio;\r\n    }\r\n\r\n    /**画布容器，用来盛放画布的容器。方便对画布进行控制*/\r\n    static get container(): any {\r\n        if (!Browser._container) {\r\n            Browser.__init__();\r\n            Browser._container = Browser.createElement(\"div\");\r\n            Browser._container.id = \"layaContainer\";\r\n            Browser._document.body.appendChild(Browser._container);\r\n        }\r\n        return Browser._container;\r\n    }\r\n\r\n    static set container(value: any) {\r\n        Browser._container = value;\r\n    }\r\n\r\n    /**浏览器原生 window 对象的引用。*/\r\n    static get window(): any {\r\n        return Browser._window || Browser.__init__();\r\n    }\r\n\r\n    /**浏览器原生 document 对象的引用。*/\r\n    static get document(): any {\r\n        Browser.__init__();\r\n        return Browser._document;\r\n    }\r\n\r\n    /**\r\n     * 获得URL参数值\r\n     * @param\tname 参数名称\r\n     * @return\t参数值\r\n     */\r\n    static getQueryString(name: string): string {\r\n        if (Browser.onMiniGame) return null;\r\n        if (!window.location || !window.location.search)\r\n            return null;\r\n        var reg: RegExp = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n        var r: any = window.location.search.substring(1).match(reg);\r\n        if (r != null) return unescape(r[2]);\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderStatisticsInfo } from \"../RenderEngine/RenderEnum/RenderStatInfo\";\r\nimport { Browser } from \"./Browser\";\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IStatUI, StatToggleUIParams, StatUIParams } from \"./IStatUI\";\r\n\r\n/**\r\n * <p> <code>Stat</code> 是一个性能统计面板，可以实时更新相关的性能参数。</p>\r\n * <p>参与统计的性能参数如下（所有参数都是每大约1秒进行更新）：<br/>\r\n * FPS(WebGL)：WebGL 模式下的帧频，也就是每秒显示的帧数，值越高、越稳定，感觉越流畅；<br/>\r\n * Sprite：统计所有渲染节点（包括容器）数量，它的大小会影响引擎进行节点遍历、数据组织和渲染的效率。其值越小，游戏运行效率越高；<br/>\r\n * DrawCall：此值是决定性能的重要指标，其值越小，游戏运行效率越高。Canvas模式下表示每大约1秒的图像绘制次数；WebGL模式下表示每大约1秒的渲染提交批次，每次准备数据并通知GPU渲染绘制的过程称为1次DrawCall，在每次DrawCall中除了在通知GPU的渲染上比较耗时之外，切换材质与shader也是非常耗时的操作；<br/>\r\n * CurMem：Canvas模式下，表示内存占用大小，值越小越好，过高会导致游戏闪退；WebGL模式下，表示内存与显存的占用，值越小越好；<br/>\r\n * Shader：是 WebGL 模式独有的性能指标，表示每大约1秒 Shader 提交次数，值越小越好；<br/>\r\n * Canvas：由三个数值组成，只有设置 CacheAs 后才会有值，默认为0/0/0。从左到右数值的意义分别为：每帧重绘的画布数量 / 缓存类型为\"normal\"类型的画布数量 / 缓存类型为\"bitmap\"类型的画布数量。</p>\r\n */\r\nexport class Stat {\r\n    //FPS\r\n    public static FPSStatUIParams: StatUIParams = { title: \"FPS\", value: \"_fpsStr\", color: \"yellow\", units: \"int\", mode: \"summit\" };\r\n    //Node nums\r\n    public static NodeStatUIParams: StatUIParams = { title: \"Node\", value: \"spriteCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //Sprite3D nums\r\n    public static Sprite3DStatUIParams: StatUIParams = { title: \"Sprite3D\", value: \"sprite3DCount\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //DrawCall\r\n    public static DrawCall: StatUIParams = { title: \"DrawCall\", value: \"drawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //triangleFace\r\n    public static TriangleFace: StatUIParams = { title: \"TriangleFace\", value: \"trianglesFaces\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //RenderNoe 渲染节点数量\r\n    public static RenderNode: StatUIParams = { title: \"RenderNode\", value: \"renderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //SkinRenderNode\r\n    public static SkinRenderNode: StatUIParams = { title: \"SkinRenderNode\", value: \"skinRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //ParticleRenderNode\r\n    public static ParticleRenderNode: StatUIParams = { title: \"ParticleRenderNode\", value: \"particleRenderNode\", color: \"white\", units: \"int\", mode: \"summit\" };\r\n    //FrustumCulling\r\n    public static FrustumCulling: StatUIParams = { title: \"FrustumCulling\", value: \"frustumCulling\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //uniformUpload\r\n    public static UniformUpload: StatUIParams = { title: \"UniformUpload\", value: \"uniformUpload\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //OpaqueDrawCall\r\n    public static OpaqueDrawCall: StatUIParams = { title: \"OpaqueDrawCall\", value: \"opaqueDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //TransformDrawCall\r\n    public static TransDrawCall: StatUIParams = { title: \"TransDrawCall\", value: \"transDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //DepthCastDrawCall\r\n    public static DepthCastDrawCall: StatUIParams = { title: \"DepthCastDrawCall\", value: \"depthCastDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //InstanceDrawCall\r\n    public static InstanceDrawCall: StatUIParams = { title: \"InstanceDrawCall\", value: \"instanceDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //CMDDrawCall\r\n    public static CMDDrawCall: StatUIParams = { title: \"CMDDrawCall\", value: \"cmdDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //BlitDrawCall\r\n    public static BlitDrawCall: StatUIParams = { title: \"BlitDrawCall\", value: \"blitDrawCall\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //GPU 显存:\r\n    public static GPUMemory: StatUIParams = { title: \"GPUMemory\", value: \"gpuMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //Texture2D memory\r\n    public static TextureMemeory: StatUIParams = { title: \"TextureMemory\", value: \"textureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //RenderTexture memory\r\n    public static RenderTextureMemory: StatUIParams = { title: \"RenderTextureMemory\", value: \"renderTextureMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //BufferMemory\r\n    public static BufferMemory: StatUIParams = { title: \"BufferMemory\", value: \"bufferMemory\", color: \"white\", units: \"M\", mode: \"summit\" };\r\n    //upload Uniform\r\n    public static uploadUniformNum: StatUIParams = { title: \"UploadUniformNum\", value: \"uploadUniform\", color: \"white\", units: \"int\", mode: \"average\" };\r\n    //所有显示\r\n    public static AllShow: Array<StatUIParams> = [Stat.FPSStatUIParams, Stat.NodeStatUIParams, Stat.Sprite3DStatUIParams, Stat.DrawCall, Stat.TriangleFace, Stat.RenderNode, Stat.SkinRenderNode, Stat.ParticleRenderNode\r\n        , Stat.FrustumCulling, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall, Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory, Stat.uploadUniformNum];\r\n    //memory显示\r\n    public static memoryShow: Array<StatUIParams> = [Stat.GPUMemory, Stat.TextureMemeory, Stat.RenderTextureMemory, Stat.BufferMemory];\r\n    //渲染显示\r\n    public static renderShow: Array<StatUIParams> = [Stat.DrawCall, Stat.TriangleFace, Stat.OpaqueDrawCall, Stat.TransDrawCall, Stat.DepthCastDrawCall, Stat.InstanceDrawCall, Stat.CMDDrawCall, Stat.BlitDrawCall];\r\n\r\n    /**@internal 开启关闭阴影 */\r\n    public static toogle_Shadow: StatToggleUIParams = { title: \"Shadow\", value: \"enableShadow\", color: \"white\" };\r\n    /**@internal 开启关闭多光源 */\r\n    public static toogle_MulLight: StatToggleUIParams = { title: \"MulLight\", value: \"enableMulLight\", color: \"white\" };\r\n    /**@internal 开启关闭光源 */\r\n    public static toogle_Light: StatToggleUIParams = { title: \"Light\", value: \"enableLight\", color: \"white\" };\r\n    /**@internal 开启关闭后期处理 */\r\n    public static toogle_Postprocess: StatToggleUIParams = { title: \"Postprocess\", value: \"enablePostprocess\", color: \"white\" };\r\n    /**@internal 开启关闭动画更新 */\r\n    public static toogle_AnimatorUpdate: StatToggleUIParams = { title: \"AnimatorUpdate\", value: \"enableAnimatorUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭物理更新*/\r\n    public static toogle_PhysicsUpdate: StatToggleUIParams = { title: \"PhysicsUpdate\", value: \"enablePhysicsUpdate\", color: \"white\" };\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static toogle_Skin: StatToggleUIParams = { title: \"Skin\", value: \"enableSkin\", color: \"white\" };\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static toogle_Transparent: StatToggleUIParams = { title: \"Transparent\", value: \"enableTransparent\", color: \"white\" };\r\n    /**@internal 开启关闭粒子 */\r\n    public static toogle_Particle: StatToggleUIParams = { title: \"Particle\", value: \"enableParticle\", color: \"white\" };\r\n    /**@internal 开启关闭msaa */\r\n    public static toogle_msaa: StatToggleUIParams = { title: \"MSAA\", value: \"enablemsaa\", color: \"white\" };\r\n    /**@internal 开启关闭CMD */\r\n    public static toogle_CameraCMD: StatToggleUIParams = { title: \"CameraCMD\", value: \"enableCameraCMD\", color: \"white\" };\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static toogle_Opaque: StatToggleUIParams = { title: \"Opaque\", value: \"enableOpaque\", color: \"white\" };\r\n\r\n    //所有开关\r\n    public static AllToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate, Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n    //渲染开关\r\n    public static RenderModeToggle: Array<StatToggleUIParams> = [Stat.toogle_Shadow, Stat.toogle_Light, Stat.toogle_MulLight, Stat.toogle_Postprocess, Stat.toogle_AnimatorUpdate, Stat.toogle_PhysicsUpdate];\r\n    //功能开关\r\n    public static RenderFuncToggle: Array<StatToggleUIParams> = [Stat.toogle_Opaque, Stat.toogle_Transparent, Stat.toogle_CameraCMD, Stat.toogle_Skin, Stat.toogle_Particle, Stat.toogle_msaa];\r\n\r\n    /** 每秒帧数。*/\r\n    public static FPS: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    public static loopCount: number = 0;\r\n    /** 精灵渲染使用缓存<code>Sprite</code> 的数量。*/\r\n    public static spriteRenderUseCacheCount: number = 0;\r\n\r\n    /** 画布 canvas 使用标准渲染的次数。*/\r\n    static canvasNormal: number = 0;\r\n    /** 画布 canvas 使用位图渲染的次数。*/\r\n    static canvasBitmap: number = 0;\r\n    /** 画布 canvas 缓冲区重绘次数。*/\r\n    static canvasReCache: number = 0;\r\n    /** 表示当前使用的是否为慢渲染模式。*/\r\n    static renderSlow: boolean = false;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    //static gpuMemory: number;\r\n    static cpuMemory: number;\r\n\r\n    /**@internal */\r\n    public static _timer: number = 0;\r\n    /**@internal */\r\n    public static _count: number = 0;\r\n\r\n    /**@internal */\r\n    public static _fpsStr: string = \"\";\r\n    /**@internal */\r\n    public static spriteCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static sprite3DCount: number = 0;//TODO\r\n    /**@internal */\r\n    public static drawCall: number = 0;\r\n    /**@internal */\r\n    public static trianglesFaces: number = 0;\r\n    /**@internal */\r\n    public static renderNode: number = 0;\r\n    /**@internal */\r\n    public static skinRenderNode: number = 0;\r\n    /**@internal */\r\n    public static particleRenderNode: number = 0;\r\n    /**@internal 视锥剔除次数。*/\r\n    public static frustumCulling: number = 0;\r\n    /**@internal */\r\n    public static uniformUpload: number = 0;\r\n    /**@internal */\r\n    public static opaqueDrawCall: number = 0;\r\n    /**@internal */\r\n    public static transDrawCall: number = 0;\r\n    /**@internal */\r\n    public static depthCastDrawCall: number = 0;\r\n    /**@internal */\r\n    public static instanceDrawCall: number = 0;\r\n    /**@internal */\r\n    public static cmdDrawCall: number = 0;\r\n    /**@internal */\r\n    public static blitDrawCall: number = 0;\r\n    /** 资源管理器所管理资源的累计内存,以字节为单位。*/\r\n    public static gpuMemory: number;\r\n    /**@internal */\r\n    public static textureMemory: number = 0;\r\n    /**@internal */\r\n    public static renderTextureMemory: number = 0;\r\n    /**@interanl */\r\n    public static bufferMemory: number = 0;\r\n    /**@internal */\r\n    public static uploadUniform: number = 0;\r\n\r\n    //Toggle\r\n    /**@internal 开启关闭阴影 */\r\n    public static enableShadow: boolean = true;\r\n    /**@internal 开启关闭多光源 */\r\n    public static enableMulLight: boolean = true;\r\n    /**@internal 开启关闭光源 */\r\n    public static enableLight: boolean = true;\r\n    /**@internal 开启关闭CMD */\r\n    public static enableCameraCMD: boolean = true;\r\n    /**@internal 开启关闭后期处理 */\r\n    public static enablePostprocess: boolean = true;\r\n    /**@internal 开启关闭skin渲染 */\r\n    public static enableSkin: boolean = true;\r\n    /**@internal 开启关闭透明渲染 */\r\n    public static enableTransparent: boolean = true;\r\n    /**@internal 开启关闭粒子 */\r\n    public static enableParticle: boolean = true;\r\n    /**@internal 开启关闭动画更新 */\r\n    public static enableAnimatorUpdate: boolean = true;\r\n    /**@internal 开启关闭物理更新*/\r\n    public static enablePhysicsUpdate: boolean = true;\r\n    /**@internal 开启关闭msaa */\r\n    public static enablemsaa: boolean = true;\r\n    /**@internal 开启关闭非透明物体渲染 */\r\n    public static enableOpaque: boolean = true;\r\n\r\n    static _statUI: IStatUI;\r\n\r\n    /**@internal */\r\n    private static _currentShowArray: Array<StatUIParams>;\r\n    /**@internal */\r\n    private static _currentToggleArray: Array<StatToggleUIParams>;\r\n    /**@internal */\r\n    private static _show: boolean;\r\n\r\n    /**\r\n     * 显示性能统计信息。\r\n     * @param\tx X轴显示位置。\r\n     * @param\ty Y轴显示位置。\r\n     */\r\n    static show(x?: number, y?: number, views?: Array<StatUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentShowArray = views||Stat.AllShow;\r\n        Stat._statUI.show(x, y, Stat._currentShowArray);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    static showToggle(x?: number, y?: number, views?: Array<StatToggleUIParams>): void {\r\n        if (!Stat.checkUI())\r\n            return;\r\n        this.hide();\r\n\r\n        Stat._show = true;\r\n        Stat._currentToggleArray = views;\r\n        Stat._statUI.showToggle(x, y, views);\r\n        ILaya.systemTimer.frameLoop(1, null, Stat.loop);\r\n    }\r\n\r\n    private static checkUI() {\r\n        if (!Stat._statUI) {\r\n            let cls = ClassUtils.getClass(\"StatUI\");\r\n            if (!cls) {\r\n                console.error(\"StatUI not found\");\r\n                return false;\r\n            }\r\n            Stat._statUI = new cls();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 隐藏性能统计信息。\r\n     */\r\n    static hide(): void {\r\n        if (!Stat._show)\r\n            return;\r\n\r\n        Stat._show = false;\r\n        Stat._currentShowArray = null;\r\n        Stat._currentToggleArray = null;\r\n        ILaya.systemTimer.clear(null, Stat.loop);\r\n        if (Stat._statUI)\r\n            Stat._statUI.hide();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 性能统计参数计算循环处理函数。\r\n     */\r\n    static loop(): void {\r\n        Stat._count++;\r\n        let timer: number = Browser.now();\r\n        if (timer - Stat._timer < 1000) return;\r\n\r\n        let count: number = Stat._count;\r\n        //计算更精确的FPS值\r\n        Stat.FPS = Math.round((count * 1000) / (timer - Stat._timer));\r\n\r\n        if (Stat._show) {\r\n            Stat.updateEngineData();\r\n            let delay: string = Stat.FPS > 0 ? Math.floor(1000 / Stat.FPS).toString() : \" \";\r\n            Stat._fpsStr = Stat.FPS + (Stat.renderSlow ? \" slow\" : \"\") + \" \" + delay + \"ms\";\r\n            Stat._statUI.update();\r\n            Stat.clear();\r\n        }\r\n\r\n        Stat._count = 0;\r\n        Stat._timer = timer;\r\n    }\r\n\r\n    static updateEngineData(): void {\r\n        Stat.trianglesFaces = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        Stat.drawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        Stat.instanceDrawCall = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n\r\n        Stat.gpuMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.GPUMemory);\r\n        Stat.textureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.TextureMemeory);\r\n        Stat.renderTextureMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory);\r\n        Stat.bufferMemory = LayaGL.renderEngine.getStatisticsInfo(RenderStatisticsInfo.BufferMemory);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清零性能统计计算相关的数据。\r\n     */\r\n    static clear(): void {\r\n        if (!Stat._currentShowArray)\r\n            return;\r\n        Stat._currentShowArray.forEach(element => {\r\n            if (element.mode == \"average\")\r\n                (Stat as any)[element.value] = 0;\r\n        });\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.Triangle);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.DrawCall);\r\n        LayaGL.renderEngine.clearStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall);\r\n    }\r\n\r\n    static render(ctx: any, x: number, y: number) {\r\n        if (Stat._show)\r\n            Stat._statUI.render(ctx, x, y);\r\n    }\r\n}\r\n\r\n(window as any).Stat = Stat;\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\n\r\nexport class SubmitBase implements ISubmit {\r\n\r\n    static TYPE_2D: number = 10000;\r\n    static TYPE_CANVAS: number = 10003;\r\n    static TYPE_CMDSETRT: number = 10004;\r\n    static TYPE_CUSTOM: number = 10005;\r\n    static TYPE_BLURRT: number = 10006;\r\n    static TYPE_CMDDESTORYPRERT: number = 10007;\r\n    static TYPE_DISABLESTENCIL: number = 10008;\r\n    static TYPE_OTHERIBVB: number = 10009;\r\n    static TYPE_PRIMITIVE: number = 10010;\r\n    static TYPE_RT: number = 10011;\r\n    static TYPE_BLUR_RT: number = 10012;\r\n    static TYPE_TARGET: number = 10013;\r\n    static TYPE_CHANGE_VALUE: number = 10014;\r\n    static TYPE_SHAPE: number = 10015;\r\n    static TYPE_TEXTURE: number = 10016;\r\n    static TYPE_FILLTEXTURE: number = 10017;\r\n\r\n    static KEY_ONCE: number = -1;\r\n    static KEY_FILLRECT: number = 1;\r\n    static KEY_DRAWTEXTURE: number = 2;\r\n    static KEY_VG: number = 3;\r\n    static KEY_TRIANGLES: number = 4;\r\n\r\n    static RENDERBASE: SubmitBase;\r\n    static ID: number = 1;\r\n    static preRender: ISubmit = null;\t//上一个submit，主要用来比较key,以减少uniform的重复提交。\r\n\r\n    clipInfoID: number = -1;\t//用来比较clipinfo\r\n    /**@internal */\r\n    _mesh: Mesh2D|null = null;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _blendFn: Function = null;\r\n    protected _id: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _parent: ISubmit = null;\r\n    //渲染key，通过key判断是否是同一个\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n\r\n    // 从VB中什么地方开始画，画到哪\r\n    /**@internal */\r\n    _startIdx: number = 0;\t\t//indexbuffer 的偏移，单位是byte\r\n    /**@internal */\r\n    _numEle: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\t// 其实已经没有用了\r\n\r\n    shaderValue: Value2D = null;\r\n\r\n    static __init__(): void {\r\n        var s: SubmitBase = SubmitBase.RENDERBASE = new SubmitBase(-1);\r\n        s.shaderValue = new Value2D(0, 0);\r\n        s.shaderValue.ALPHA = 1;\r\n        s._ref = 0xFFFFFFFF;\r\n    }\r\n\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        this._renderType = renderType;\r\n        this._id = ++SubmitBase.ID;\r\n    }\r\n\r\n    getID(): number {\r\n        return this._id;\r\n    }\r\n\r\n\r\n    getRenderType(): number {\r\n        return this._renderType;\r\n    }\r\n\r\n    toString(): string {\r\n        return \"ibindex:\" + this._startIdx + \" num:\" + this._numEle + \" key=\" + this._key;\r\n    }\r\n\r\n    renderSubmit(): number { return 1; }\r\n    releaseRender(): void { }\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderParams } from \"../RenderEngine/RenderEnum/RenderParams\";\r\n\r\n\r\n/**\r\n * 类用来定义顶点元素格式\r\n */\r\nexport class VertexElementFormat {\r\n\t/**单精度浮点数 */\r\n\tstatic Single: string = \"single\";\r\n\t/**vec2 数据*/\r\n\tstatic Vector2: string = \"vector2\";\r\n\t/**vec3 数据*/\r\n\tstatic Vector3: string = \"vector3\";\r\n\t/**vec4 数据 */\r\n\tstatic Vector4: string = \"vector4\";\r\n\t/**颜色 */\r\n\tstatic Color: string = \"color\";\r\n\t/**字节数组4 */\r\n\tstatic Byte4: string = \"byte4\";\r\n\t/**字节数组3 */\r\n\tstatic Byte3: string = \"byte3\";\r\n\t/**字节数组2 */\r\n\tstatic Byte2: string = \"byte2\";\r\n\t/**字节数组1 */\r\n\tstatic ByteOne:string = \"byte\";\r\n\t/**半精度浮点数数组2 */\r\n\tstatic Short2: string = \"short2\";\r\n\t/**半精度浮点数数组4 */\r\n\tstatic Short4: string = \"short4\";\r\n\t/**归一化半精度浮点数组2 */\r\n\tstatic NormalizedShort2: string = \"normalizedshort2\";\r\n\t/**归一化半精度浮点数组4 */\r\n\tstatic NormalizedShort4: string = \"normalizedshort4\";\r\n\t/**@internal */\r\n\tstatic HalfVector2: string = \"halfvector2\";\r\n\t/**@internal */\r\n\tstatic HalfVector4: string = \"halfvector4\";\r\n\t/**@internal */\r\n\tstatic NorByte4: string = \"nbyte4\";\r\n\r\n\t/** @internal [组数量,数据类型,是否归一化:0为false]。*/\r\n\tprivate static _elementInfos: any;\r\n\t/**@internal */\r\n\tstatic __init__(): void {\r\n\t\tVertexElementFormat._elementInfos = {\r\n\t\t\t\"single\": [1, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector3\": [3, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"vector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"color\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"byte4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte3\": [3,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"byte\": [1,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_BYTE), 0],\r\n\t\t\t\"short2\": [2,  LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"short4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 0],\r\n\t\t\t\"normalizedshort2\": [2, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"normalizedshort4\": [4, LayaGL.renderEngine.getParams(RenderParams.UNSIGNED_SHORT), 1],\r\n\t\t\t\"halfvector2\": [2, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"halfvector4\": [4, LayaGL.renderEngine.getParams(RenderParams.FLOAT), 0],\r\n\t\t\t\"nbyte4\":[4,LayaGL.renderEngine.getParams(RenderParams.BYTE),1],\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点元素格式信息。\r\n\t * @param element 元素名称\r\n\t * @returns 返回顶点元素信息\r\n\t */\r\n\tstatic getElementInfos(element: string): any[] {\r\n\t\tvar info: any[] = VertexElementFormat._elementInfos[element];\r\n\t\tif (info)\r\n\t\t\treturn info;\r\n\t\telse\r\n\t\t\tthrow \"VertexElementFormat: this vertexElementFormat is not implement.\";\r\n\t}\r\n}\r\n\r\n","import { VertexElement } from \"../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../renders/VertexElementFormat\";\r\n\r\n/**\r\n * <code>VertexDeclaration</code> 类用于生成顶点声明。\r\n */\r\nexport class VertexDeclaration {\r\n    /**@internal */\r\n    private static _uniqueIDCounter: number = 1;\r\n\r\n    /**@internal */\r\n    private _id: number;\r\n    /**@internal */\r\n    private _vertexStride: number;\r\n    /**@internal */\r\n    private _vertexElementsDic: { [key: string]: VertexElement };\r\n    /**@internal */\r\n    _shaderValues: { [key: number]: Int32Array };\r\n\r\n    /**@internal [只读]*/\r\n    _vertexElements: Array<VertexElement>;\r\n\r\n    /**\r\n     * 获取唯一标识ID(通常用于优化或识别)。\r\n     * @return 唯一标识ID\r\n     */\r\n    get id(): number {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 顶点跨度，以字节为单位。\r\n     */\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    /**\r\n     * 顶点元素的数量。\r\n     */\r\n    get vertexElementCount(): number {\r\n        return this._vertexElements.length;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>VertexDeclaration</code> 实例。\r\n     * @param\tvertexStride 顶点跨度。\r\n     * @param\tvertexElements 顶点元素集合。\r\n     */\r\n    constructor(vertexStride: number, vertexElements: Array<VertexElement>) {\r\n        this._id = ++VertexDeclaration._uniqueIDCounter;\r\n        this._vertexElementsDic = {};\r\n        this._vertexStride = vertexStride;\r\n        this._vertexElements = vertexElements;\r\n        var count: number = vertexElements.length;\r\n        this._shaderValues = {};\r\n\r\n        for (var j: number = 0; j < count; j++) {\r\n            var vertexElement: VertexElement = vertexElements[j];\r\n            var name: number = vertexElement._elementUsage;\r\n            this._vertexElementsDic[name] = vertexElement;\r\n            var value: Int32Array = new Int32Array(5);\r\n            var elmentInfo: any[] = VertexElementFormat.getElementInfos(vertexElement._elementFormat);\r\n            value[0] = elmentInfo[0];\r\n            value[1] = elmentInfo[1];\r\n            value[2] = elmentInfo[2];\r\n            value[3] = this._vertexStride;\r\n            value[4] = vertexElement._offset;\r\n            this._shaderValues[name] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取顶点元素。\r\n     * @param index 索引。\r\n     */\r\n    getVertexElementByIndex(index: number): VertexElement {\r\n        return this._vertexElements[index];\r\n    }\r\n\r\n    /**\r\n     * get vertexElement by usage\r\n     */\r\n    getVertexElementByUsage(usage: number): VertexElement {\r\n        return this._vertexElementsDic[usage];\r\n    }\r\n}\r\n\r\n\r\n","/**\r\n* <code>VertexElement</code> 类用于创建顶点结构分配。\r\n*/\r\nexport class VertexElement {\r\n    /**@internal */\r\n    _offset: number;\r\n    /**@internal */\r\n    _elementFormat: string;\r\n    /**@internal */\r\n    _elementUsage: number;\r\n    //usageIndex:int;//TODO:待确定是否添加\r\n\r\n    /**\r\n     * 顶点偏移\r\n     */\r\n    get offset(): number {\r\n        return this._offset;\r\n    }\r\n    /**\r\n     * 顶点信息名称\r\n     */\r\n    get elementFormat(): string {\r\n        return this._elementFormat;\r\n    }\r\n\r\n    /**\r\n     * 顶点宏标记\r\n     */\r\n    get elementUsage(): number {\r\n        return this._elementUsage;\r\n    }\r\n\r\n    /**\r\n     * 创建顶点结构分配实例\r\n     * @param offset 顶点偏移\r\n     * @param elementFormat 顶点数据格式名称\r\n     * @param elementUsage 顶点宏标记\r\n     */\r\n    constructor(offset: number, elementFormat: string, elementUsage: number) {\r\n        this._offset = offset;\r\n        this._elementFormat = elementFormat;\r\n        this._elementUsage = elementUsage;\r\n        //this.usageIndex = usageIndex;\r\n    }\r\n}\r\n\r\n","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderEngine/RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\n\r\n\r\n\r\n/**\r\n * <code>BufferState</code> 类用于实现渲染所需的Buffer状态集合。\r\n */\r\nexport class BufferState {\r\n\tstatic _curBindedBufferState:BufferState;\r\n\t/**@private [只读]*/\r\n\tprotected _nativeVertexArrayObject: IRenderVertexState;\r\n\r\n\t/**@internal [只读]*/\r\n\t_bindedIndexBuffer: IndexBuffer;\r\n\r\n\t/**@internal */\r\n\t_vertexBuffers: VertexBuffer[];\r\n\r\n\t/**\r\n\t * 创建一个 <code>BufferState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis._nativeVertexArrayObject = LayaGL.renderEngine.createVertexState();\r\n\t}\r\n\r\n\tprotected applyVertexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject.applyVertexBuffer(this._vertexBuffers);\r\n\t}\r\n\r\n\tprotected applyIndexBuffers(): void {\r\n\t\tthis._nativeVertexArrayObject.applyIndexBuffer(this._bindedIndexBuffer);\r\n\t}\r\n\r\n\r\n\tapplyState(vertexBuffers: VertexBuffer[], indexBuffer: IndexBuffer | null) {\r\n\t\tthis._vertexBuffers = vertexBuffers;\r\n\t\tthis._bindedIndexBuffer = indexBuffer;\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t\tthis.bind();\r\n\t\tthis.applyVertexBuffers();\r\n\t\tthis.applyIndexBuffers();\r\n\t\tthis.unBind();\r\n\t\tindexBuffer && indexBuffer.unbind();//清空绑定\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): void {\r\n\t\tthis._nativeVertexArrayObject.bindVertexArray();\r\n\t\tBufferState._curBindedBufferState = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tunBind(): void {\r\n\t\tif (BufferState._curBindedBufferState==this) {\r\n\t\t\tthis._nativeVertexArrayObject.unbindVertexArray();\r\n\t\t\tBufferState._curBindedBufferState = null;\r\n\t\t} else {\r\n\t\t\tthrow \"BufferState: must call bind() function first.\";\r\n\t\t}\r\n\t}\r\n\r\n\tisbind():boolean{\r\n\t\treturn (BufferState._curBindedBufferState==this);\r\n\t}\r\n\r\n\tstatic clearbindBufferState(){\r\n\t\tLayaGL.renderEngine.unbindVertexState();\r\n\t\tBufferState._curBindedBufferState = null;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tthis._nativeVertexArrayObject.destroy();\r\n\t\tthis._nativeVertexArrayObject = null;\r\n\t}\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IRenderBuffer } from \"./RenderInterface/IRenderBuffer\";\r\n\r\nexport class Buffer {\r\n\r\n\t_glBuffer: IRenderBuffer;\r\n\t_buffer: Float32Array|Uint16Array|Uint8Array|Uint32Array;\r\n\r\n\t_bufferType: number;\r\n\t_bufferUsage: number;\r\n\r\n\t_byteLength: number = 0; \r\n\r\n\tget bufferUsage(): number {\r\n\t\treturn this._bufferUsage;\r\n\t}\r\n\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tthis._glBuffer = LayaGL.renderEngine.createBuffer(targetType,bufferUsageType);\r\n\t\tthis._bufferType = targetType;\r\n\t\tthis._bufferUsage = bufferUsageType;\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tbind(): boolean {\r\n\t\treturn this._glBuffer.bindBuffer();\r\n\t}\r\n\r\n\tunbind():void{\r\n\t\treturn this._glBuffer.unbindBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tif (this._glBuffer) {\r\n\t\t\tthis._glBuffer.destroy();\r\n\t\t\tthis._glBuffer = null;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { IndexFormat } from \"./RenderEnum/IndexFormat\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\n\r\nexport class IndexBuffer extends Buffer {\r\n    /** @internal */\r\n    protected _indexType: IndexFormat = IndexFormat.UInt16;\r\n    /** @internal */\r\n    protected _indexTypeByteCount: number;\r\n    /** @internal */\r\n    protected _indexCount: number;\r\n    constructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(targetType, bufferUsageType);\r\n    }\r\n\r\n\r\n    _setIndexData(data: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array, bufferOffset: number): void;\r\n    _setIndexData(data: Uint32Array | Uint16Array | Uint8Array | number, bufferOffset?: number): void {\r\n        var curBufSta: BufferState = BufferState._curBindedBufferState;\r\n\r\n        if (curBufSta) {\r\n            if (curBufSta._bindedIndexBuffer === this) {\r\n                this._glBuffer.setDataLength(0);\r\n            } else {\r\n                curBufSta.unBind();//避免影响VAO\r\n                this.bind();\r\n                if (typeof data === \"number\")\r\n                    this._glBuffer.setDataLength(data);\r\n                else\r\n                    this._glBuffer.setData(data, bufferOffset);\r\n                curBufSta.bind();\r\n            }\r\n        } else {\r\n            this.bind();\r\n            if (typeof data === \"number\")\r\n                this._glBuffer.setDataLength(data);\r\n            else\r\n                this._glBuffer.setData(data, bufferOffset)\r\n        }\r\n    }\r\n}","/**\r\n * \r\n * @author laya\r\n */\r\nexport class RenderInfo {\r\n    /**当前帧的开始时间 */\r\n    static loopStTm: number = 0;\r\n    /**主舞台 <code>Stage</code> 渲染次数计数。 */\r\n    static loopCount: number = 0;\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\";\r\nimport { BaseShader } from \"../shader/BaseShader\";\r\nimport { Buffer } from \"../../RenderEngine/Buffer\";\r\n\r\nexport class Buffer2D {\r\n\r\n    static FLOAT32: number = 4;\r\n    static SHORT: number = 2;\r\n\r\n    protected _maxsize: number = 0;\r\n\r\n    _upload: boolean = true;\r\n    protected _uploadSize: number = 0;\r\n    protected _bufferSize: number = 0;\r\n    protected _u8Array: Uint8Array = null;\t\t//反正常常要拷贝老的数据，所以保留这个可以提高效率\r\n    _floatArray32: Float32Array;\r\n    _uint32Array: Uint32Array;\r\n    _uint16Array: Uint16Array;\r\n\r\n    private constBuffer: Buffer;\r\n\r\n    get bufferLength(): number {\r\n        return this.constBuffer._buffer.byteLength;\r\n    }\r\n\r\n    set byteLength(value: number) {\r\n        this.setByteLength(value);\r\n    }\r\n\r\n    setByteLength(value: number): void {\r\n        if (this.constBuffer._byteLength !== value) {\r\n            value <= this._bufferSize || (this._resizeBuffer(value * 2 + 256, true));\r\n            this.constBuffer._byteLength = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 在当前的基础上需要多大空间，单位是byte\r\n     * @param\tsz\r\n     * @return  增加大小之前的写位置。单位是byte\r\n     */\r\n    needSize(sz: number): number {\r\n        var old: number = this.constBuffer._byteLength;\r\n        if (sz) {\r\n            var needsz: number = this.constBuffer._byteLength + sz;\r\n            needsz <= this._bufferSize || (this._resizeBuffer(needsz << 1, true));\r\n            this.constBuffer._byteLength = needsz;\r\n        }\r\n        return old;\r\n    }\r\n\r\n    constructor(buffer: Buffer) {\r\n        this.constBuffer = buffer;\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        if (!this._floatArray32) {\r\n            this._floatArray32 = new Float32Array(this.constBuffer._buffer.buffer);\r\n        }\r\n        return this._floatArray32;\r\n    }\r\n\r\n    protected _bufferData(): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {//每30帧缩小一下buffer\t。TODO 这个有问题。不知道_maxsize和_byteLength是怎么维护的，这里会导致重新分配64字节\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n                let buff = this.constBuffer._buffer.buffer;\r\n                ((this._bufferSize % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n                ((this._bufferSize % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n                this._uint16Array = new Uint16Array(buff);\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n        }\r\n        this.constBuffer._glBuffer.setData(new Uint8Array(this.constBuffer._buffer.buffer, 0, this.constBuffer._byteLength), 0);\r\n        this.constBuffer.unbind();\r\n    }\r\n\r\n    //TODO:coverage\r\n    protected _bufferSubData(offset: number = 0, dataStart: number = 0, dataLength: number = 0): void {\r\n        this._maxsize = Math.max(this._maxsize, this.constBuffer._byteLength);\r\n        if (RenderInfo.loopCount % 30 == 0) {\r\n            if (this.constBuffer._buffer.byteLength > (this._maxsize + 64)) {\r\n                //_setGPUMemory(_buffer.byteLength);\r\n                this.constBuffer._buffer = this.constBuffer._buffer.slice(0, this._maxsize + 64);\r\n                this._bufferSize = this.constBuffer._buffer.byteLength;\r\n                this._checkArrayUse();\r\n            }\r\n            this._maxsize = this.constBuffer._byteLength;\r\n        }\r\n\r\n        if (this._uploadSize < this.constBuffer._buffer.byteLength) {\r\n            this._uploadSize = this.constBuffer._buffer.byteLength;\r\n            this.constBuffer._glBuffer.setDataLength(this._uploadSize);\r\n            //_setGPUMemory(_uploadSize);\r\n        }\r\n\r\n        if (dataStart || dataLength) {\r\n            var subBuffer: ArrayBuffer = this.constBuffer._buffer.buffer.slice(dataStart, dataLength);\r\n            this.constBuffer._glBuffer.setData(subBuffer, offset);\r\n        } else {\r\n            this.constBuffer._glBuffer.setData(this.constBuffer._buffer.buffer, offset);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * buffer重新分配了，继承类根据需要做相应的处理。\r\n     */\r\n    protected _checkArrayUse(): void {\r\n\r\n    }\r\n\r\n    // /**\r\n    //  * 给vao使用的 _bind_upload函数。不要与已经绑定的判断是否相同\r\n    //  * @return\r\n    //  */\r\n    // _bind_uploadForVAO(): boolean {\r\n    // \tif (!this._upload)\r\n    // \t\treturn false;\r\n    // \tthis._upload = false;\r\n    // \tthis.constBuffer.bind();\r\n    // \tthis._bufferData();\r\n    // \treturn true;\r\n    // }\r\n\r\n    _bind_upload(): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferData();\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    _bind_subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        if (!this._upload)\r\n            return false;\r\n\r\n        this._upload = false;\r\n        this.constBuffer.bind();\r\n        this._bufferSubData(offset, dataStart, dataLength);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 重新分配buffer大小，如果nsz比原来的小则什么都不做。\r\n     * @param\tnsz\t\tbuffer大小，单位是byte。\r\n     * @param\tcopy\t是否拷贝原来的buffer的数据。\r\n     * @return\r\n     */\r\n    _resizeBuffer(nsz: number, copy: boolean): Buffer2D //是否修改了长度\r\n    {\r\n        var buff: any = this.constBuffer._buffer;\r\n        if (buff && nsz <= buff.byteLength)\r\n            return this;\r\n        var u8buf: Uint8Array = this._u8Array;\r\n        //_setGPUMemory(nsz);\r\n        if (copy && buff && buff.byteLength > 0) {\r\n            var oldU8Arr: Uint8Array = new Uint8Array(buff.buffer);\r\n            var newbuffer: Uint8Array = new Uint8Array(nsz);\r\n            newbuffer.set(oldU8Arr, 0);\r\n            buff = this.constBuffer._buffer = newbuffer;\r\n            this._u8Array = new Uint8Array(this.constBuffer._buffer.buffer);\r\n        } else {\r\n            var data = new ArrayBuffer(nsz);\r\n            buff = this.constBuffer._buffer = new Uint8Array(data);\r\n            this._u8Array = new Uint8Array(buff.buffer);\r\n        }\r\n        buff = this.constBuffer._buffer.buffer;\r\n        ((nsz % 4) == 0) && (this._floatArray32 = new Float32Array(buff));\r\n        ((nsz % 4) == 0) && (this._uint32Array = new Uint32Array(buff));\r\n        this._uint16Array = new Uint16Array(buff);\r\n        this._checkArrayUse();\r\n        this._upload = true;\r\n        this._bufferSize = buff.byteLength;\r\n        return this;\r\n    }\r\n\r\n    append(data: any): void {\r\n        this._upload = true;\r\n        var byteLen: number, n: any;\r\n        byteLen = data.byteLength;\r\n        if (data instanceof Uint8Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint8Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Uint16Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        } else if (data instanceof Float32Array) {\r\n            this._resizeBuffer(this.constBuffer._byteLength + byteLen, true);\r\n            n = new Float32Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength);\r\n        }\r\n        n.set(data, 0);\r\n        this.constBuffer._byteLength += byteLen;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    /**\r\n     * 附加Uint16Array的数据。数据长度是len。byte的话要*2\r\n     * @param\tdata\r\n     * @param\tlen\r\n     */\r\n    appendU16Array(data: Uint16Array, len: number): void {\r\n        this._resizeBuffer(this.constBuffer._byteLength + len * 2, true);\r\n        //(new Uint16Array(_buffer, _byteLength, len)).set(data.slice(0, len));\r\n        //下面这种写法比上面的快多了\r\n        var u: Uint16Array = new Uint16Array(this.constBuffer._buffer.buffer, this.constBuffer._byteLength, len);\t//TODO 怎么能不用new\r\n        if (len == 6) {\r\n            u[0] = data[0]; u[1] = data[1]; u[2] = data[2];\r\n            u[3] = data[3]; u[4] = data[4]; u[5] = data[5];\r\n        } else if (len >= 100) {\r\n            u.set(new Uint16Array(data.buffer, 0, len));\r\n        } else {\r\n            for (var i: number = 0; i < len; i++) {\r\n                u[i] = data[i];\r\n            }\r\n        }\r\n        this.constBuffer._byteLength += len * 2;\r\n        this._checkArrayUse();\r\n    }\r\n\r\n    //TODO:coverage\r\n    getBuffer(): ArrayBuffer {\r\n        return this.constBuffer._buffer.buffer;\r\n    }\r\n\r\n    setNeedUpload(): void {\r\n        this._upload = true;\r\n    }\r\n\r\n\r\n    //TODO:coverage\r\n    subUpload(offset: number = 0, dataStart: number = 0, dataLength: number = 0): boolean {\r\n        var scuess: boolean = this._bind_subUpload();\r\n        this.constBuffer.unbind();\r\n        //gl.bindBuffer(this._bufferType, null);\r\n        //if (this._bufferType == gl.ARRAY_BUFFER) Buffer._bindedVertexBuffer = null;\r\n        //if (this._bufferType == gl.ELEMENT_ARRAY_BUFFER) Buffer._bindedIndexBuffer = null;\r\n        BaseShader.activeShader = null\r\n        return scuess;\r\n    }\r\n\r\n    _disposeResource(): void {\r\n        this._upload = true;\r\n        this._uploadSize = 0;\r\n        this._floatArray32 = null;\r\n        this._uint32Array = null;\r\n        this._u8Array = null;\r\n    }\r\n\r\n\r\n    /**\r\n     * 清理数据。保留ArrayBuffer\r\n     */\r\n    clear(): void {\r\n        this.constBuffer._byteLength = 0;\r\n        this._upload = true;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { IndexBuffer } from \"../../RenderEngine/IndexBuffer\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class IndexBuffer2D extends IndexBuffer {\r\n    static create: Function = function (bufferUsage: number = BufferUsage.Static): IndexBuffer2D {\r\n        return new IndexBuffer2D(bufferUsage);\r\n    }\r\n\r\n    protected _uint16Array: Uint16Array;\r\n    buffer2D:Buffer2D;\r\n    constructor(bufferUsage: number = BufferUsage.Static) {\r\n        super(BufferTargetType.ELEMENT_ARRAY_BUFFER,bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._bufferUsage = bufferUsage;\r\n        this._buffer = new Uint8Array(8);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    // protected _checkArrayUse(): void {\r\n    //     this._uint16Array && (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    // getUint16Array(): Uint16Array {\r\n    //     return this._uint16Array || (this._uint16Array = new Uint16Array(this._buffer));\r\n    // }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        \r\n        this._glBuffer.bindBuffer()\r\n    }\r\n\r\n    destory(): void {\r\n        this._uint16Array = null;\r\n        this._buffer = null;\r\n    }\r\n\r\n    disposeResource(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n}\r\n\r\n","import { BufferTargetType, BufferUsage } from \"./RenderEnum/BufferTargetType\";\r\nimport { Buffer } from \"./Buffer\";\r\nimport { VertexDeclaration } from \"./VertexDeclaration\";\r\n\r\nexport class VertexBuffer extends Buffer {\r\n\tprivate _instanceBuffer: boolean = false;\r\n\t/** @internal */\r\n\t_vertexDeclaration: VertexDeclaration | null = null;\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t */\r\n\tget vertexDeclaration(): VertexDeclaration | null {\r\n\t\treturn this._vertexDeclaration;\r\n\t}\r\n\r\n\tset vertexDeclaration(value: VertexDeclaration | null) {\r\n\t\tthis._vertexDeclaration = value;\r\n\t}\r\n\tget instanceBuffer(): boolean {\r\n\t\treturn this._instanceBuffer;\r\n\t}\r\n\r\n\tset instanceBuffer(value: boolean) {\r\n\t\tthis._instanceBuffer = value;\r\n\t}\r\n\tconstructor(targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n\t\tsuper(targetType, bufferUsageType);\r\n\t}\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { VertexBuffer } from \"../../RenderEngine/VertexBuffer\";\r\nimport { Buffer2D } from \"./Buffer2D\";\r\n\r\nexport class VertexBuffer2D extends VertexBuffer {\r\n    static create: Function = function (vertexStride: number, bufferUsage: number = BufferUsage.Dynamic): VertexBuffer2D {\r\n        return new VertexBuffer2D(vertexStride, bufferUsage);\r\n    }\r\n\r\n    buffer2D: Buffer2D;\r\n\r\n    private _vertexStride: number;\r\n\r\n    get vertexStride(): number {\r\n        return this._vertexStride;\r\n    }\r\n\r\n    constructor(vertexStride: number, bufferUsage: number) {\r\n        super(BufferTargetType.ARRAY_BUFFER, bufferUsage);\r\n        this.buffer2D = new Buffer2D(this);\r\n        this._vertexStride = vertexStride;\r\n        this._bufferUsage = bufferUsage;\r\n        //this._buffer = new Uint8Array(8);\r\n        //this._floatArray32 = new Float32Array(this._buffer);\r\n        //this._uint32Array = new Uint32Array(this._buffer);\r\n    }\r\n\r\n    getFloat32Array(): Float32Array {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _floatArray32() {\r\n        return this.buffer2D._floatArray32;\r\n    }\r\n\r\n    get _uint32Array() {\r\n        return this.buffer2D._uint32Array;\r\n    }\r\n\r\n    /**\r\n     * 在当前位置插入float数组。\r\n     * @param\tdata\r\n     * @param\tpos\r\n     */\r\n    appendArray(data: any[]): void {\r\n        var oldoff: number = this._byteLength >> 2;\r\n        this.buffer2D.setByteLength(this._byteLength + data.length * 4);\r\n        var vbdata: Float32Array = this.getFloat32Array();\r\n        vbdata.set(data, oldoff);\r\n        this.buffer2D._upload = true;\r\n    }\r\n    // \t/**\r\n    // \t * @override\r\n    // \t */\r\n    // \t protected _checkArrayUse(): void {\r\n    //     this._floatArray32 && (this._floatArray32 = new Float32Array(this._buffer));\r\n    //     this._uint32Array && (this._uint32Array = new Uint32Array(this._buffer));\r\n    // }\r\n\r\n    //只删除buffer，不disableVertexAttribArray\r\n    deleteBuffer(): void {\r\n        this.buffer2D._disposeResource();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _bindForVAO(): void {\r\n        this._glBuffer.bindBuffer();\r\n    }\r\n    /**\r\n     * @override\r\n     * override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._byteLength = 0;\r\n        this.buffer2D._upload = true;\r\n        this._buffer = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { BufferUsage } from \"../../RenderEngine/RenderEnum/BufferTargetType\";\r\nimport { Config } from \"./../../../Config\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * Mesh2d只是保存数据。描述attribute用的。本身不具有渲染功能。\r\n */\r\nexport class Mesh2D {\r\n    _stride = 0;\t\t\t//顶点结构大小。每个mesh的顶点结构是固定的。\r\n    vertNum = 0;\t\t\t\t//当前的顶点的个数\r\n    indexNum = 0;\t\t\t//实际index 个数。例如一个三角形是3个。由于ib本身可能超过实际使用的数量，所以需要一个indexNum\r\n    protected _applied = false;\t//是否已经设置给webgl了\r\n    _vb: VertexBuffer2D;\t\t\t//vb和ib都可能需要在外部修改，所以public\r\n    _ib: IndexBuffer2D;\r\n    private _vao: BufferState;\t\t\t\t\t\t//webgl VAO对象。需要WebGL扩展。\r\n    private static _gvaoid = 0;\r\n    private _attribInfo: any[];\t\t\t//保存起来的属性定义数组。\r\n    protected _quadNum = 0;\r\n    //public static var meshlist:Array = [];\t//活着的mesh对象列表。\r\n    canReuse = false;\t//用完以后，是删除还是回收。\r\n\r\n    /**\r\n     * \r\n     * @param\tstride\r\n     * @param\tvballoc  vb预分配的大小。主要是用来提高效率。防止不断的resizebfufer\r\n     * @param\tiballoc\r\n     */\r\n    constructor(stride: number, vballoc: number, iballoc: number) {\r\n        this._stride = stride;\r\n        this._vb = new VertexBuffer2D(stride, BufferUsage.Dynamic);\r\n        if (vballoc) {\r\n            this._vb.buffer2D._resizeBuffer(vballoc, false);\r\n        } else {\r\n            Config.webGL2D_MeshAllocMaxMem && this._vb.buffer2D._resizeBuffer(64 * 1024 * stride, false);\r\n        }\r\n        this._ib = new IndexBuffer2D();\r\n        if (iballoc) {\r\n            this._ib.buffer2D._resizeBuffer(iballoc, false);\r\n        }\r\n        //meshlist.push(this);\r\n    }\r\n\r\n    /**\r\n     * 直接创建一个固定的ib。按照固定四边形的索引。\r\n     * @param\tvar QuadNum\r\n     */\r\n    createQuadIB(QuadNum: number): void {\r\n        this._quadNum = QuadNum;\r\n        this._ib.buffer2D._resizeBuffer(QuadNum * 6 * 2, false);\t//short类型\r\n        this._ib.buffer2D.byteLength = this._ib.buffer2D.bufferLength;\t//这个我也不知道是什么意思\r\n\r\n        var bd: Uint16Array = this._ib.buffer2D._uint16Array;\r\n        var idx: number = 0;\r\n        var curvert: number = 0;\r\n        for (var i: number = 0; i < QuadNum; i++) {\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 2;\r\n            bd[idx++] = curvert + 1;\r\n            bd[idx++] = curvert;\r\n            bd[idx++] = curvert + 3;\r\n            bd[idx++] = curvert + 2;\r\n            curvert += 4;\r\n        }\r\n\r\n        this._ib.buffer2D.setNeedUpload();\r\n    }\r\n\r\n    /**\r\n     * 设置mesh的属性。每3个一组，对应的location分别是0,1,2...\r\n     * 含义是：type,size,offset\r\n     * 不允许多流。因此stride是固定的，offset只是在一个vertex之内。\r\n     * @param\tattribs\r\n     */\r\n    setAttributes(attribs: any[]): void {\r\n        this._attribInfo = attribs;\r\n        if (this._attribInfo.length % 3 != 0) {\r\n            throw 'Mesh2D setAttributes error!';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 初始化VAO的配置，只需要执行一次。以后使用的时候直接bind就行\r\n     * @param\tgl\r\n     */\r\n    private configVAO(): void {\r\n        if (this._applied)\r\n            return;\r\n        this._applied = true;\r\n        if (!this._vao) {\r\n            //_vao = __JS__('gl.createVertexArray();');\r\n            this._vao = new BufferState();\r\n            //_vao.dbgid = _gvaoid++;\r\n        }\r\n        this._vao.applyState([this._vb],this._ib);\r\n        // var attribNum: number = this._attribInfo.length / 3;\r\n        // var idx: number = 0;\r\n        // for (var i: number = 0; i < attribNum; i++) {\r\n        //     var _size: number = this._attribInfo[idx + 1];\r\n        //     var _type: number = this._attribInfo[idx];\r\n        //     var _off: number = this._attribInfo[idx + 2];\r\n        //     gl.enableVertexAttribArray(i);\r\n        //     gl.vertexAttribPointer(i, _size, _type, false, this._stride, _off); //注意 normalize都设置为false了，想必没人要用这个功能把。\r\n        //     idx += 3;\r\n        // }\r\n        // this._vao.unBind();\r\n        //gl.bindVertexArray(null);\r\n    }\r\n\r\n    /**\r\n     * 应用这个mesh\r\n     * @param\tgl\r\n     */\r\n    useMesh(): void {\r\n        if((this._vao&&!this._vao.isbind())||this._ib.buffer2D._upload||this._vb.buffer2D._upload){\r\n            BufferState._curBindedBufferState&&BufferState._curBindedBufferState.unBind();\r\n        }\r\n        //要先bind，在bufferData\r\n        this._applied || this.configVAO();\r\n        this._ib.buffer2D._bind_upload();\r\n        this._vb.buffer2D._bind_upload();\r\n        this._vao.bind();\r\n    }\r\n\r\n    // //TODO:coverage\r\n    // getEleNum(): number {\r\n    //     return this._ib.buffer2D.getBuffer().byteLength / 2;\r\n    // }\r\n\r\n    /**\r\n     * 子类实现。用来把自己放到对应的回收池中，以便复用。\r\n     */\r\n    releaseMesh(): void { }\r\n\r\n    /**\r\n     * 释放资源。\r\n     */\r\n    destroy(): void {\r\n    }\r\n\r\n    /**\r\n     * 清理vb数据\r\n     */\r\n    clearVB(): void {\r\n        this._vb.buffer2D.clear();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshQuadTexture extends Mesh2D {\r\n\tstatic const_stride: number = 24;// 48;  24是不带clip的\r\n\tprivate static _fixib: IndexBuffer2D;\r\n\tprivate static _maxIB: number = 16 * 1024;\r\n\tprivate static _fixattriInfo: any[];\r\n\tprivate static _POOL: any[] = [];\r\n\t//private static var _num;\r\n\tstatic VertexDeclarition: VertexDeclaration;\r\n\tstatic __int__(): void {\r\n\t\t//var gl: WebGLRenderingContext = LayaGL.instance;\r\n\t\tMeshQuadTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n\t\t\t5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(MeshQuadTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n\t\tthis.canReuse = true;\r\n\t\tthis.setAttributes(MeshQuadTexture._fixattriInfo);\r\n\t\tif (!MeshQuadTexture._fixib) {\r\n\t\t\tthis.createQuadIB(MeshQuadTexture._maxIB);\t//每个quad 4个顶点。正好达到64k的索引。\r\n\t\t\tMeshQuadTexture._fixib = this._ib;\r\n\t\t} else {\r\n\t\t\tthis._ib = MeshQuadTexture._fixib;\r\n\t\t\tthis._quadNum = MeshQuadTexture._maxIB;\r\n\t\t}\r\n\t\tif (!MeshQuadTexture.VertexDeclarition)\r\n\t\t\tMeshQuadTexture.VertexDeclarition = new VertexDeclaration(24, [\r\n\t\t\t\tnew VertexElement(0, VertexElementFormat.Vector4, 0),\r\n\t\t\t\tnew VertexElement(16, VertexElementFormat.Byte4, 1),\r\n\t\t\t\tnew VertexElement(20, VertexElementFormat.Byte4, 2),\r\n\t\t\t])\r\n\t\tthis._vb.vertexDeclaration = MeshQuadTexture.VertexDeclarition;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n\tstatic getAMesh(mainctx: boolean): MeshQuadTexture {\r\n\t\t//console.log('getmesh');\r\n\t\tvar ret: MeshQuadTexture = null;\r\n\t\tif (MeshQuadTexture._POOL.length) {\r\n\t\t\tret = MeshQuadTexture._POOL.pop();\r\n\t\t} else\r\n\t\t\tret = new MeshQuadTexture();\r\n\t\t// 先分配64k顶点的空间，这样可以避免浪费内存，否则后面增加内存的时候是成倍增加的，当快超过64k的时候，直接变成了128k\r\n\t\tmainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\r\n\t\treturn ret;\r\n\t}\r\n\r\n\t/**\r\n\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t * @override\r\n\t */\r\n\treleaseMesh(): void {\r\n\t\tthis._vb.buffer2D.setByteLength(0);\r\n\t\tthis.vertNum = 0;\r\n\t\tthis.indexNum = 0;\r\n\t\t//_applied = false;\r\n\t\tMeshQuadTexture._POOL.push(this);\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tdestroy(): void {\r\n\t\t//_ib.destroy(); ib是公用的。\r\n\t\tthis._vb.destroy();\r\n\t\tthis._vb.deleteBuffer();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param pos 顶点坐标\r\n\t * @param uv 纹理坐标\r\n\t * @param color 顶点颜色\r\n\t * @param useTex 是否使用贴图。false的话是给fillRect用的\r\n\t */\r\n\taddQuad(pos: ArrayLike<number>, uv: ArrayLike<number>, color: number, useTex: boolean): void {\r\n\t\tvar vb: VertexBuffer2D = this._vb;\r\n\t\tvar vpos: number = (vb._byteLength >> 2);\t//float数组的下标\r\n\t\t//x,y,u,v,rgba\r\n\t\tvb.buffer2D.setByteLength((vpos + MeshQuadTexture.const_stride) << 2); //是一个四边形的大小，也是这里填充的大小\r\n\t\tvar vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n\t\tvar vbu32Arr: Uint32Array = vb._uint32Array;\r\n\t\tvar cpos: number = vpos;\r\n\t\tvar useTexVal: number = useTex ? 0xff : 0;\r\n\t\tvbdata[cpos++] = pos[0]; vbdata[cpos++] = pos[1]; vbdata[cpos++] = uv[0]; vbdata[cpos++] = uv[1]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[2]; vbdata[cpos++] = pos[3]; vbdata[cpos++] = uv[2]; vbdata[cpos++] = uv[3]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[4]; vbdata[cpos++] = pos[5]; vbdata[cpos++] = uv[4]; vbdata[cpos++] = uv[5]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvbdata[cpos++] = pos[6]; vbdata[cpos++] = pos[7]; vbdata[cpos++] = uv[6]; vbdata[cpos++] = uv[7]; vbu32Arr[cpos++] = color; vbu32Arr[cpos++] = useTexVal;\r\n\t\tvb.buffer2D._upload = true;\r\n\t}\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { IndexBuffer2D } from \"./IndexBuffer2D\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\nimport { VertexBuffer2D } from \"./VertexBuffer2D\";\r\n\r\n/**\r\n * 与MeshQuadTexture基本相同。不过index不是固定的\r\n */\r\nexport class MeshTexture extends Mesh2D {\r\n    static const_stride: number = 24;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n\r\n    static VertexDeclarition:VertexDeclaration;\r\n\r\n    \r\n\r\n    static __init__(): void {\r\n        MeshTexture._fixattriInfo = [5126/*gl.FLOAT*/, 4, 0,\t//pos,uv\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 16,\t//color alpha\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 20];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshTexture.const_stride, 4, 4);\t//x,y,u,v,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshTexture._fixattriInfo);\r\n        if(!MeshTexture.VertexDeclarition)\r\n         MeshTexture.VertexDeclarition = new VertexDeclaration(24,[\r\n            new VertexElement(0,VertexElementFormat.Vector4,0),\r\n            new VertexElement(16,VertexElementFormat.Byte4,1),\r\n            new VertexElement(20,VertexElementFormat.Byte4,2),\r\n        ])\r\n        this._vb.vertexDeclaration = MeshTexture.VertexDeclarition;\r\n        \r\n    }\r\n\r\n\t/**\r\n\t * \r\n\t */\r\n    static getAMesh(mainctx: boolean): MeshTexture {\r\n        //console.log('getmesh');\r\n        var ret: MeshTexture;\r\n        if (MeshTexture._POOL.length) {\r\n            ret = MeshTexture._POOL.pop();\r\n        }\r\n        else ret = new MeshTexture();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshTexture.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    addData(vertices: Float32Array, uvs: Float32Array, idx: Uint16Array, matrix: Matrix, rgba: number): void {\r\n        //vb\r\n        var vb: VertexBuffer2D = this._vb;\r\n        var ib: IndexBuffer2D = this._ib;\r\n        var vertsz: number = vertices.length >> 1;\r\n        var startpos: number = vb.buffer2D.needSize(vertsz * MeshTexture.const_stride);//vb的起点。\t\t\t\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = vb._floatArray32 || vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = vb._uint32Array;\r\n        var ci: number = 0;\r\n        var m00: number = matrix.a;\r\n        var m01: number = matrix.b;\r\n        var m10: number = matrix.c;\r\n        var m11: number = matrix.d;\r\n        var tx: number = matrix.tx;\r\n        var ty: number = matrix.ty;\r\n        var i: number = 0;\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        for (i = 0; i < vertsz; i++) {\r\n            var x: number = vertices[ci], y: number = vertices[ci + 1];\r\n            vbdata[f32pos] = x * m00 + y * m10 + tx;\r\n            vbdata[f32pos + 1] = x * m01 + y * m11 + ty;\r\n            vbdata[f32pos + 2] = uvs[ci];\r\n            vbdata[f32pos + 3] = uvs[ci + 1];\r\n            vbu32Arr[f32pos + 4] = rgba;\r\n            vbu32Arr[f32pos + 5] = 0xff;\r\n            f32pos += 6;\r\n            //裁剪信息。\r\n            //vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            //vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1];\t//cliprect的位置\r\n            ci += 2;\r\n        }\r\n        vb.buffer2D.setNeedUpload();\r\n\r\n        var vertN: number = this.vertNum;\r\n        var sz: number = idx.length;\r\n        var stib: number = ib.buffer2D.needSize(idx.byteLength);\r\n        var cidx: Uint16Array = ib.buffer2D._uint16Array;\r\n        //var cidx:Uint16Array = new Uint16Array(__JS__('ib._buffer'), stib);\r\n        var stibid: number = stib >> 1;\t// indexbuffer的起始位置\r\n        if (vertN > 0) {\r\n            var end: number = stibid + sz;\r\n            var si: number = 0;\r\n            for (i = stibid; i < end; i++ , si++) {\r\n                cidx[i] = idx[si] + vertN;\r\n            }\r\n        } else {\r\n            cidx.set(idx, stibid);\r\n        }\r\n        ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += vertsz;\r\n        this.indexNum += idx.length;\r\n    }\r\n\r\n\t\t/**\r\n\t\t * 把本对象放到回收池中，以便getMesh能用。\r\n\t\t * @override\r\n\t\t */\r\n\t\t /*override*/ releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshTexture._POOL.push(this);\r\n    }\r\n/**\r\n * @override\r\n */\r\n\t\t /*override*/ destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","import { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Mesh2D } from \"./Mesh2D\";\r\n\r\n/**\r\n * 用来画矢量的mesh。顶点格式固定为 x,y,rgba\r\n */\r\nexport class MeshVG extends Mesh2D {\r\n    static const_stride: number = 12;// 36;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n\r\n    static __init__(): void {\r\n        MeshVG._fixattriInfo = [5126/*gl.FLOAT*/, 2, 0,\t//x,y\r\n            5121/*gl.UNSIGNED_BYTE*/, 4, 8];\r\n    }\r\n\r\n    constructor() {\r\n        super(MeshVG.const_stride, 4, 4);\t//x,y,rgba\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshVG._fixattriInfo);\r\n        if (!MeshVG.vertexDeclaration)\r\n            MeshVG.vertexDeclaration = new VertexDeclaration(12, [\r\n                new VertexElement(0, VertexElementFormat.Vector2, 0),\r\n                new VertexElement(8, VertexElementFormat.Byte4, 1),\r\n            ]);\r\n        this._vb.vertexDeclaration = MeshVG.vertexDeclaration;\r\n    }\r\n\r\n    static getAMesh(mainctx: boolean): MeshVG {\r\n        //console.log('getmeshvg');\r\n        var ret: MeshVG;\r\n        if (MeshVG._POOL.length) {\r\n            ret = MeshVG._POOL.pop();\r\n        } else\r\n            ret = new MeshVG();\r\n        mainctx && ret._vb.buffer2D._resizeBuffer(64 * 1024 * MeshVG.const_stride, false);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 往矢量mesh中添加顶点和index。会把rgba和points在mesh中合并。\r\n     * @param\tpoints\t顶点数组，只包含x,y。[x,y,x,y...]\r\n     * @param\trgba\trgba颜色\r\n     * @param\tib\t\tindex数组。\r\n     */\r\n    addVertAndIBToMesh(ctx: Context, points: any[], rgba: number, ib: any[]): void {\r\n        var startpos: number = this._vb.buffer2D.needSize(points.length / 2 * MeshVG.const_stride);//vb的起点。\r\n        var f32pos: number = startpos >> 2;\r\n        var vbdata: Float32Array = this._vb._floatArray32 || this._vb.getFloat32Array();\r\n        var vbu32Arr: Uint32Array = this._vb._uint32Array;\r\n        var ci: number = 0;\r\n        //vb\r\n        //var clipinfo:Array = ctx.getTransedClipInfo();\r\n        var sz: number = points.length / 2;\r\n        for (var i: number = 0; i < sz; i++) {\r\n            vbdata[f32pos++] = points[ci]; vbdata[f32pos++] = points[ci + 1]; ci += 2;\r\n            vbu32Arr[f32pos++] = rgba;\r\n            /*\r\n            //裁剪信息。\r\n            vbdata[f32pos++] = clipinfo[2] ; vbdata[f32pos++] = clipinfo[3]; vbdata[f32pos++] = clipinfo[4]; vbdata[f32pos++] = clipinfo[5];//cliprect的方向\r\n            vbdata[f32pos++] = clipinfo[0]; vbdata[f32pos++] = clipinfo[1]; //cliprect的位置\r\n            */\r\n        }\r\n        this._vb.buffer2D.setNeedUpload();\r\n\r\n        //ib\r\n        //TODO 现在这种添加数据的方法效率非常低。而且会引起大量的gc\r\n        this._ib.buffer2D.append(new Uint16Array(ib));\r\n        this._ib.buffer2D.setNeedUpload();\r\n\r\n        this.vertNum += sz;\r\n        this.indexNum += ib.length;\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this._ib.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshVG._POOL.push(this);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._ib.disposeResource();\r\n        this._vb.deleteBuffer();\r\n    }\r\n}\r\n\r\n","export class NativeWebGLCacheAsNormalCanvas {\r\n    _nativeObj: any;\r\n    _context: any;\r\n    constructor(ctx: any, sp: any)\r\n    {\r\n        this._context = ctx;\r\n        this._nativeObj = new (window as any)._conchWebGLCacheAsNormalCanvas(ctx._nativeObj, 0);\r\n    }\r\n    startRec(): void {\r\n        this._nativeObj.startRec();\r\n    }\r\n    endRec(): void {\r\n        this._nativeObj.endRec();\r\n    }\r\n    isCacheValid(): boolean {\r\n        return this._nativeObj.isCacheValid();\r\n    }  \r\n    isTextNeedRestore(): boolean {\r\n        return this._nativeObj.isTextNeedRestore();\r\n    }\r\n    get context() {\r\n        return this._context;\r\n    }\r\n}\r\n","import { Sprite } from \"../../display/Sprite\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Submit } from \"../submit/Submit\"\r\nimport { SubmitBase } from \"../submit/SubmitBase\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { MeshTexture } from \"../utils/MeshTexture\"\r\nimport { MeshVG } from \"../utils/MeshVG\"\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"./NativeWebGLCacheAsNormalCanvas\"\r\n\r\n/**\r\n * 对象 cacheas normal的时候，本质上只是想把submit缓存起来，以后直接执行\r\n * 为了避免各种各样的麻烦，这里采用复制相应部分的submit的方法。执行环境还是在原来的context中\r\n * 否则包括clip等都非常难以处理\r\n */\r\nexport class WebGLCacheAsNormalCanvas {\r\n    submitStartPos: number = 0;\t// 对应的context的submit的开始的地方\r\n    submitEndPos: number = 0;\r\n    context: Context;\r\n    touches: any[] = [];\t\t//记录的文字信息。cacheas normal的话，文字要能正确touch\r\n    submits: any[] = [];\t\t// 从context中剪切的submit\r\n    sprite: Sprite|null = null;\t// 对应的sprite对象\r\n\r\n    // submit需要关联稳定独立的mesh。所以这里要创建自己的mesh对象\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    private _pathMesh: MeshVG;\t\t\t//矢量专用mesh。\r\n    private _triangleMesh: MeshTexture;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n    meshlist: any[] = [];\t\t\t//本context用到的mesh\r\n\r\n    // 原始context的原始值\r\n    private _oldMesh: MeshQuadTexture|null;\r\n    private _oldPathMesh: MeshVG|null;\r\n    private _oldTriMesh: MeshTexture|null;\r\n    private _oldMeshList: any[];\r\n\r\n    // cache的时候对应的clip\r\n    private cachedClipInfo: Matrix = new Matrix();\t// 用来判断是否需要把cache无效\r\n    //private var oldMatrix:Matrix = null;\t\t\t\t//本地画的时候完全不应用矩阵，所以需要先保存老的，以便恢复\t\t这样会丢失缩放信息，导致文字模糊，所以不用这种方式了\r\n    private oldTx: number = 0;\r\n    private oldTy: number = 0;\r\n    private static matI: Matrix = new Matrix();\r\n\r\n    // 创建这个canvas的时候对应的矩阵的逆矩阵。因为要保留矩阵的缩放信息。所以采用逆矩阵的方法。\r\n    invMat: Matrix = new Matrix();\r\n\r\n    constructor(ctx: Context, sp: Sprite) {\r\n        this.context = ctx;\r\n        this.sprite = sp;\r\n        ctx._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n    }\r\n\r\n    startRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        context._incache = true;\r\n        this.touches.length = 0;\r\n        //记录需要touch的文字资源\r\n        ((<any>context)).touches = this.touches;\r\n        context._globalClipMatrix.copyTo(this.cachedClipInfo);\r\n\r\n        this.submits.length = 0;\r\n        this.submitStartPos = context._submits._length;\r\n\r\n        // 先把之前的释放掉\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(false);\r\n        this._pathMesh = MeshVG.getAMesh(false);\r\n        this._triangleMesh = MeshTexture.getAMesh(false);\r\n\r\n        this.meshlist.push(this._mesh);\r\n        this.meshlist.push(this._pathMesh);\r\n        this.meshlist.push(this._triangleMesh);\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 接管context中的一些值\r\n        this._oldMesh = context._mesh;\r\n        this._oldPathMesh = context._pathMesh;\r\n        this._oldTriMesh = context._triangleMesh;\r\n        this._oldMeshList = context.meshlist;\r\n\r\n        context._mesh = this._mesh;\r\n        context._pathMesh = this._pathMesh;\r\n        context._triangleMesh = this._triangleMesh;\r\n        context.meshlist = this.meshlist;\r\n\r\n        // 要取消位置，因为以后会再传入位置。这里好乱\r\n        this.oldTx = context._curMat.tx;\r\n        this.oldTy = context._curMat.ty;\r\n        context._curMat.tx = 0;\r\n        context._curMat.ty = 0;\r\n\r\n        // 取消缩放等\r\n        context._curMat.copyTo(this.invMat);\r\n        this.invMat.invert();\r\n        //oldMatrix = context._curMat;\r\n        //context._curMat = matI;\r\n    }\r\n\r\n    endRec(): void {\r\n\t\tlet context = this.context;\r\n        // 如果有文字优化，这里要先提交一下\r\n        if (context._charSubmitCache && context._charSubmitCache._enable) {\r\n            context._charSubmitCache.enable(false, context);\r\n            context._charSubmitCache.enable(true, context);\r\n        }\r\n        // copy submit\r\n        var parsubmits: any = context._submits;\r\n        this.submitEndPos = parsubmits._length;\r\n        var num: number = this.submitEndPos - this.submitStartPos;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this.submits.push(parsubmits[this.submitStartPos + i]);\r\n        }\r\n        parsubmits._length -= num;\r\n\r\n        // 恢复原始context的值\r\n        context._mesh = this._oldMesh;\r\n        context._pathMesh = this._oldPathMesh;\r\n        context._triangleMesh = this._oldTriMesh;\r\n        context.meshlist = this._oldMeshList;\r\n\r\n        // 打断合并\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        // 恢复matrix\r\n        //context._curMat = oldMatrix;\r\n        context._curMat.tx = this.oldTx;\r\n        context._curMat.ty = this.oldTy;\r\n        ((<any>context)).touches = null;\r\n        context._incache = false;\r\n    }\r\n\r\n    /**\r\n     * 当前缓存是否还有效。例如clip变了就失效了，因为clip太难自动处理\r\n     * @return\r\n     */\r\n    isCacheValid(): boolean {\r\n        var curclip: Matrix = this.context._globalClipMatrix;\r\n        if (curclip.a != this.cachedClipInfo.a || curclip.b != this.cachedClipInfo.b || curclip.c != this.cachedClipInfo.c\r\n            || curclip.d != this.cachedClipInfo.d || curclip.tx != this.cachedClipInfo.tx || curclip.ty != this.cachedClipInfo.ty)\r\n            return false;\r\n        return true;\r\n    }\r\n    isTextNeedRestore(): boolean {\r\n        var textNeedRestore: boolean = false;\r\n        var charRIs: any[] = this.touches;\r\n\t\tif (charRIs) {\r\n\t\t\tfor (var ci: number = 0; ci < charRIs.length; ci++) {\r\n\t\t\t\tif (charRIs[ci].deleted) {\r\n\t\t\t\t\ttextNeedRestore = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n        return textNeedRestore;\r\n    }\r\n    flushsubmit(): void {\r\n        var curSubmit: SubmitBase = SubmitBase.RENDERBASE;\r\n        this.submits.forEach(function (subm: Submit): void {\r\n            if (subm == SubmitBase.RENDERBASE) return;\r\n            SubmitBase.preRender = curSubmit;\r\n            curSubmit = subm;\r\n            subm.renderSubmit();\r\n        });\r\n    }\r\n\r\n    releaseMem(): void {\r\n\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n\t//@ts-ignore\r\n\tWebGLCacheAsNormalCanvas = NativeWebGLCacheAsNormalCanvas;\r\n}","import { NodeFlags } from \"../Const\"\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { _RenderFunction } from \"./RenderSprite\"\r\n\r\n/**\r\n * @internal\r\n * 快速节点命令执行器\r\n * 多个指令组合才有意义，单个指令没必要在下面加\r\n */\r\nexport class LayaGLQuickRunner {\r\n    /*[FILEINDEX:10000]*/\r\n    static map: _RenderFunction[] = [];\r\n    private static curMat: Matrix = new Matrix();\r\n    /**@internal */\r\n    static __init__(): void {\r\n        /*\r\n           glQuickMap[\"drawNode;\"] = drawNode;\r\n           glQuickMap[\"drawNodes;\"] = drawNodes;\r\n           glQuickMap[\"drawLayaGL;\"] = drawLayaGL;\r\n           glQuickMap[\"drawLayaGL;drawNodes;\"] = drawLayaGL_drawNodes;\r\n           glQuickMap[\"save;alpha;drawNode;restore;\"] = save_alpha_drawNode_restore;\r\n           glQuickMap[\"save;alpha;drawLayaGL;restore;\"] = save_alpha_drawLayaGL_restore;\r\n         */\r\n        //glQuickMap[\"save;alpha;drawTextureWithGr;restore;\"] = save_alpha_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawTextureWithGr;restore;\"] = save_alpha_transform_drawTextureWithGr_restore;\r\n        //glQuickMap[\"drawTextureWithGr;\"] = drawTextureWithGr;\r\n        //glQuickMap[\"save;transform;drawNodes;restore;\"] = save_transform_drawNodes_restore;\r\n        //glQuickMap[\"save;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //glQuickMap[\"save;alpha;transform;drawLayaGL;restore;\"] = save_alpha_transform_drawLayaGL_restore;\r\n        //map[SpriteConst.TEXTURE] = _drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_transform_drawLayaGL;\r\n        //map[ SpriteConst.GRAPHICS] = _drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.GRAPHICS] = LayaGLQuickRunner.alpha_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.GRAPHICS] = LayaGLQuickRunner.transform_drawLayaGL;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.CHILDS] = LayaGLQuickRunner.transform_drawNodes;\r\n\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.ALPHA | SpriteConst.TEXTURE] = LayaGLQuickRunner.alpha_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.TRANSFORM | SpriteConst.TEXTURE] = LayaGLQuickRunner.transform_drawTexture;\r\n        LayaGLQuickRunner.map[SpriteConst.GRAPHICS | SpriteConst.CHILDS] = LayaGLQuickRunner.drawLayaGL_drawNodes;\r\n    }\r\n\r\n    static transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var tex: Texture = sprite.texture;\r\n\r\n\r\n        /*\r\n        var ctx:WebGLContext2D = context as WebGLContext2D;\r\n        var ctxm:Matrix = ctx._curMat;\r\n        ctxm.copyTo(curMat);\r\n        //context.saveTransform(curMat);\r\n        ctx.transformByMatrixNoSave(sprite.getTransform(), x, y);\r\n        ctx.drawTexture(tex, -style.pivotX, -style.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n        curMat.copyTo(ctxm);\r\n        //ctx.restoreTransform(curMat);\r\n        */\r\n\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n        var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n        var wRate: number = width / tex.sourceWidth;\r\n        var hRate: number = height / tex.sourceHeight;\r\n        width = tex.width * wRate;\r\n        height = tex.height * hRate;\r\n        if (width <= 0 || height <= 0) return null;\r\n        var px: number = -sprite.pivotX + tex.offsetX * wRate;\r\n        var py: number = -sprite.pivotY + tex.offsetY * hRate;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            context.drawTexture(tex, px, py, width, height);\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n        /*\r\n        context.saveTransform(curMat);\r\n        var w:int = sprite._width || tex.width;\r\n        var h:int = sprite._height || tex.height;\r\n        var mat:Matrix = sprite.transform;// (sprite as Object)._tfChanged?(sprite as Object)._adjustTransform():(sprite as Object)._transform;\r\n        mat.tx += x; mat.ty += y;\r\n        //(context as WebGLContext2D).drawTextureWithTransform(tex, -style.pivotX, -style.pivotY, w, h,mat,x,y,1,null,null);\r\n    \t\r\n        var ctx:WebGLContext2D = context;\r\n        var curMat:Matrix = ctx._curMat;\r\n        var tmpMat:Matrix = ctx._tmpMatrix;\r\n        var transform = mat;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + x; tmpMat.ty = transform.ty + y;\r\n        tmpMat._bTransform = transform._bTransform;\r\n        if (transform && curMat._bTransform) {\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        }else {\r\n            //如果curmat没有旋转。\r\n            transform = tmpMat;\r\n        }\r\n        ctx._drawTextureM(tex, x, y, w,h, mat, 1,null);\r\n    \t\r\n        //var st = __JS__(\"performance.now()\");\r\n        //Laya.stage.perfdt += (__JS__(\"performance.now()\")-st);\r\n        context.restoreTransform(curMat);\r\n        */\r\n    }\r\n\r\n    //static public function _drawTexture(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //var tex:Texture = sprite.texture;\r\n    //context.drawTexture(tex, x-sprite.pivotX, y-sprite.pivotY, sprite._width || tex.width, sprite._height || tex.height);\r\n    //}\r\n\r\n    static alpha_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = x - style.pivotX + tex.offsetX * wRate;\r\n            var py: number = y - style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawTexture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        var tex: Texture = sprite.texture;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n            var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n            var wRate: number = width / tex.sourceWidth;\r\n            var hRate: number = height / tex.sourceHeight;\r\n            width = tex.width * wRate;\r\n            height = tex.height * hRate;\r\n            if (width <= 0 || height <= 0) return null;\r\n            var px: number = -style.pivotX + tex.offsetX * wRate;\r\n            var py: number = -style.pivotY + tex.offsetY * hRate;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                context.drawTexture(tex, px, py, width, height);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n\r\n            context.saveTransform(LayaGLQuickRunner.curMat);\r\n            context.transformByMatrix(sprite.transform, x, y);\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n            context.restoreTransform(LayaGLQuickRunner.curMat);\r\n\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    static alpha_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n                sprite._graphics && sprite._graphics._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    //static public function _drawLayaGL(sprite:Sprite, context:Context, x:Number, y:Number):void {\r\n    //sprite._graphics._render(sprite, context, x, y);\r\n    //}\t\t\r\n\r\n    static transform_drawLayaGL(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        //var transform:Matrix = sprite.transform;\r\n\r\n        //临时\r\n        //if (transform) {\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        //}else {\r\n        //sprite._graphics && sprite._graphics._render(sprite, context, -style.pivotX, -style.pivotY);\r\n        //}\t\t\t\r\n    }\r\n\r\n    static transform_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //var transform:Matrix = sprite.transform;\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        context.saveTransform(LayaGLQuickRunner.curMat);\r\n        context.transformByMatrix(sprite.transform, x, y);\r\n\r\n        //x = x-style.pivotX;\r\n        //y = y - style.pivotY;\r\n\r\n        x = -style.pivotX;\r\n        y = -style.pivotY;\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n        }\r\n\r\n        context.restoreTransform(LayaGLQuickRunner.curMat);\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    static drawLayaGL_drawNodes(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n\r\n        var style: SpriteStyle = sprite._style;\r\n        x = x - style.pivotX;\r\n        y = y - style.pivotY;\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR))\r\n            sprite._graphics && sprite._graphics._render(sprite, context, x, y);\r\n\r\n        var childs: any[] = sprite._children, n: number = childs.length;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, _x: number, _y: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (rect && ((_x = ele._x) >= right || (_x + ele.width) <= left || (_y = ele._y) >= bottom || (_y + ele.height) <= top))\r\n                visFlag = false;\r\n\r\n            if (visFlag)\r\n                ele.render(context, x, y);\r\n\r\n        }\r\n\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n}\r\n\r\n","import { IFilter } from \"./IFilter\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { ColorFilter } from \"./ColorFilter\";\r\nimport { BlurFilter } from \"./BlurFilter\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\n\r\n/**\r\n * <code>Filter</code> 是滤镜基类。\r\n */\r\nexport class NativeFilter implements IFilter {\r\n    /**@private 模糊滤镜。*/\r\n    static BLUR: number = 0x10;\r\n    /**@private 颜色滤镜。*/\r\n    static COLOR: number = 0x20;\r\n    /**@private 发光滤镜。*/\r\n    static GLOW: number = 0x08;\r\n    /** @internal*/\r\n    _glRender: any;\r\n\r\n    /**\r\n     * 创建一个 <code>Filter</code> 实例。\r\n     * */\r\n    constructor() { }\r\n\r\n    /**@private 滤镜类型。*/\r\n    get type(): number { return -1 }\r\n\r\n    static _filter = function (this:RenderSprite,sprite: Sprite, context: any, x: number, y: number): void {\r\n        var webglctx: any = context;\r\n        var next: any = ((<RenderSprite>this))._next;\r\n        if (next) {\r\n            var filters: any[] = sprite.filters, len: number = filters.length;\r\n            //如果只有一个滤镜，那么还用原来的方式\r\n            if (len == 1 && (filters[0].type == NativeFilter.COLOR)) {\r\n                context.save();\r\n                context.setColorFilter(filters[0]);\r\n                next._fun.call(next, sprite, context, x, y);\r\n                context.restore();\r\n                return;\r\n            }\r\n            //思路：依次遍历滤镜，每次滤镜都画到out的RenderTarget上，然后把out画取src的RenderTarget做原图，去叠加新的滤镜\r\n            var svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\t//拷贝用shaderValue\r\n            var b: Rectangle;\r\n\r\n            var p: Point = Point.TEMP;\r\n            var tMatrix: Matrix = webglctx._curMat;\r\n            var mat: Matrix = Matrix.create();\r\n            tMatrix.copyTo(mat);\r\n            var tPadding: number = 0;\t//给glow用\r\n            var tHalfPadding: number = 0;\r\n            var tIsHaveGlowFilter: boolean = false;\r\n            //这里判断是否存储了out，如果存储了直接用;\r\n            var source: any = null;\r\n            var out: any = sprite._cacheStyle.filterCache || null;\r\n            if (!out || sprite.getRepaint() != 0) {\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter();\r\n                //glow需要扩展边缘\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = new Rectangle();\r\n                b.copyFrom(sprite.getSelfBounds());\r\n                b.x += sprite.x;\r\n                b.y += sprite.y;\r\n                b.x -= sprite.pivotX + 4;//blur \r\n                b.y -= sprite.pivotY + 4;//blur\r\n                var tSX: number = b.x;\r\n                var tSY: number = b.y;\r\n                //重新计算宽和高\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //out && WebGLRTMgr.releaseRT(out);// out.recycle();\r\n                out && out.destroy();// out.recycle();\r\n                //source = WebGLRTMgr.getRT(b.width, b.height);\r\n                source = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                //var outRT: RenderTexture2D = out = WebGLRTMgr.getRT(b.width, b.height);\r\n                var outRT: any = out = new (window as any).conchRenderTexture2D((LayaGL.renderEngine as any)._nativeObj, b.width, b.height, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None);\r\n                sprite._getCacheStyle().filterCache = out;\r\n                //使用RT\r\n                webglctx.pushRT();\r\n                webglctx.useRT(source);\r\n                var tX: number = sprite.x - tSX + tHalfPadding;\r\n                var tY: number = sprite.y - tSY + tHalfPadding;\r\n                //执行节点的渲染\r\n                next._fun.call(next, sprite, context, tX, tY);\r\n                webglctx.useRT(outRT);\r\n                for (var i: number = 0; i < len; i++) {\r\n                    if (i != 0) {\r\n                        //把out往src上画。这只是一个拷贝的过程，下面draw(src) to outRT 才是真正的应用filter\r\n                        //由于是延迟执行，不能直接在这里swap。 TODO 改成延迟swap\r\n                        webglctx.useRT(source);\r\n                        webglctx.drawTarget(outRT, 0, 0, b.width, b.height, Matrix.TEMP.identity(), svCP, null, BlendMode.TOINT.overlay);\r\n                        webglctx.useRT(outRT);\r\n                    }\r\n                    var fil: NativeFilter = filters[i];\r\n                    //把src往out上画\r\n                    switch (fil.type) {\r\n                        case NativeFilter.BLUR:\r\n                            //fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            //BlurFilterGLRender.render(source, context, b.width, b.height, fil as BlurFilter);\r\n                            webglctx.drawTargetBlurFilter(source, 0, 0, b.width, b.height, (fil as BlurFilter).strength);\r\n                            break;\r\n                        case NativeFilter.GLOW:\r\n                            //GlowFilterGLRender.render(source, context, b.width, b.height, fil as GlowFilter);\r\n                            fil._glRender && fil._glRender.render(source, context, b.width, b.height, fil);\r\n                            break;\r\n                        case NativeFilter.COLOR:\r\n                            webglctx.setColorFilter((<ColorFilter>fil));\r\n                            webglctx.drawTarget(source, 0, 0, b.width, b.height, Matrix.EMPTY.identity(), Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                            webglctx.setColorFilter(null);\r\n                            break;\r\n                    }\r\n                }\r\n                webglctx.popRT();\r\n            } else {\r\n\r\n                // tIsHaveGlowFilter = sprite._cacheStyle.hasGlowFilter || false;\r\n                tIsHaveGlowFilter = sprite._isHaveGlowFilter() || false;\r\n                if (tIsHaveGlowFilter) {\r\n                    tPadding = 50;\r\n                    tHalfPadding = 25;\r\n                }\r\n                b = sprite.getBounds();\r\n                if (b.width <= 0 || b.height <= 0) {\r\n                    return;\r\n                }\r\n                //edit\r\n                b.width += (tPadding + 8);//增加宽度 blur  由于blur系数为9\r\n                b.height += (tPadding + 8);//增加高度 blur\r\n                b.x -= sprite.pivotX + 4; //blur \r\n                b.y -= sprite.pivotY + 4;//blur \r\n                p.x = b.x * mat.a + b.y * mat.c;\r\n                p.y = b.y * mat.d + b.x * mat.b;\r\n                b.x = p.x;\r\n                b.y = p.y;\r\n                p.x = b.width * mat.a + b.height * mat.c;\r\n                p.y = b.height * mat.d + b.width * mat.b;\r\n                b.width = p.x;\r\n                b.height = p.y;\r\n                //scope.addValue(\"out\", out);\r\n            }\r\n            x = x - tHalfPadding - sprite.x;\r\n            y = y - tHalfPadding - sprite.y;\r\n            p.setTo(x, y);\r\n            mat.transformPoint(p);\r\n            x = p.x + b.x;\r\n            y = p.y + b.y;\r\n            //把最后的out纹理画出来\r\n            //webglctx._drawRenderTexture(out, x, y, b.width, b.height, Matrix.TEMP.identity(), 1.0, RenderTexture2D.defuv);\r\n\r\n            //把对象放回池子中\r\n            //var submit:SubmitCMD = SubmitCMD.create([scope], Filter._recycleScope, this);\r\n            /*if (source) {\r\n                var submit: SubmitCMD = SubmitCMD.create([source], function (s: Texture2D): void {\r\n                    s.destroy();\r\n                }, this);\r\n                source = null;\r\n                context.addRenderObject(submit);\r\n            }*/\r\n            webglctx.drawFilter(out, source, x, y, b.width, b.height);\r\n            mat.destroy();\r\n        }\r\n    }\r\n}\r\n\r\n","import { NodeFlags } from \"../Const\";\r\nimport { CacheStyle } from \"../display/css/CacheStyle\";\r\nimport { SpriteStyle } from \"../display/css/SpriteStyle\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { SpriteConst } from \"../display/SpriteConst\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { WebGLRTMgr } from \"../resource/WebGLRTMgr\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { LayaGLQuickRunner } from \"./LayaGLQuickRunner\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { NativeFilter } from \"../filters/NativeFilter\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\n\r\n/**\r\n * @private\r\n * \r\n */\r\nexport interface _RenderFunction {\r\n    (sp: Sprite, ctx: Context, x: number, y: number): void;\r\n}\r\n\r\nconst INIT = 0x11111;\r\n/**\r\n * @private\r\n * 精灵渲染器\r\n */\r\nexport class RenderSprite {\r\n    /** @private */\r\n    static renders: RenderSprite[] = [];\r\n    /** @private */\r\n    protected static NORENDER: RenderSprite = new RenderSprite(0, null);\r\n    /** @internal */\r\n    _next: RenderSprite;\r\n    /** @internal */\r\n    _fun: Function;\r\n\r\n    /** @internal */\r\n    static __init__(): void {\r\n        LayaGLQuickRunner.__init__();\r\n        var i: number, len: number;\r\n        var initRender: RenderSprite;\r\n        initRender = new RenderSprite(INIT, null);\r\n        len = RenderSprite.renders.length = SpriteConst.CHILDS * 2;\r\n        for (i = 0; i < len; i++)\r\n            RenderSprite.renders[i] = initRender;\r\n\r\n        RenderSprite.renders[0] = new RenderSprite(0, null);\r\n    }\r\n\r\n    private static _initRenderFun(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var type: number = sprite._renderType;\r\n        var r: RenderSprite = RenderSprite.renders[type] = RenderSprite._getTypeRender(type);\r\n        r._fun(sprite, context, x, y);\r\n    }\r\n\r\n    private static _getTypeRender(type: number): RenderSprite {\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) return new RenderSprite(type, null);\r\n        var rst: RenderSprite | null = null;\r\n        var tType: number = SpriteConst.CHILDS;\r\n        while (tType > 0) {\r\n            if (tType & type)\r\n                rst = new RenderSprite(tType, rst);\r\n            tType = tType >> 1;\r\n        }\r\n        return rst as RenderSprite;\r\n    }\r\n\r\n    constructor(type: number, next: RenderSprite | null) {\r\n\r\n        if (LayaGLQuickRunner.map[type] && LayaEnv.isPlaying) {\r\n            this._fun = LayaGLQuickRunner.map[type];\r\n            this._next = RenderSprite.NORENDER;\r\n            return;\r\n        }\r\n        this._next = next || RenderSprite.NORENDER;\r\n        switch (type) {\r\n            case 0:\r\n                this._fun = this._no;\r\n                return;\r\n            case SpriteConst.ALPHA:\r\n                this._fun = this._alpha;\r\n                return;\r\n            case SpriteConst.TRANSFORM:\r\n                this._fun = this._transform;\r\n                return;\r\n            case SpriteConst.BLEND:\r\n                this._fun = this._blend;\r\n                return;\r\n            case SpriteConst.CANVAS:\r\n                this._fun = this._canvas;\r\n                return;\r\n            case SpriteConst.MASK:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = this._maskNative;\r\n                }\r\n                else {\r\n                    this._fun = this._mask;\r\n                }\r\n                return;\r\n            case SpriteConst.CLIP:\r\n                this._fun = this._clip;\r\n                return;\r\n            case SpriteConst.STYLE:\r\n                this._fun = this._style;\r\n                return;\r\n            case SpriteConst.GRAPHICS:\r\n                this._fun = this._graphics;\r\n                return;\r\n            case SpriteConst.CHILDS:\r\n                this._fun = this._children;\r\n                return;\r\n            case SpriteConst.CUSTOM:\r\n                this._fun = this._custom;\r\n                return;\r\n            case SpriteConst.TEXTURE:\r\n                this._fun = this._texture;\r\n                return;\r\n            case SpriteConst.FILTERS:\r\n                if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                    this._fun = NativeFilter._filter;\r\n                }\r\n                else {\r\n                    this._fun = Filter._filter;\r\n                }\r\n                return;\r\n            case SpriteConst.HITAREA:\r\n                this._fun = this._hitarea;\r\n                return;\r\n            case INIT:\r\n                this._fun = RenderSprite._initRenderFun;\r\n                return;\r\n        }\r\n\r\n        this.onCreate(type);\r\n    }\r\n\r\n    protected onCreate(type: number): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _style(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        //这里的功能取消了，应该不会走进这里\r\n    }\r\n\r\n    /**@internal */\r\n    _no(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _custom(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        sprite.customRender(context, x, y);\r\n        this._next._fun.call(this._next, sprite, context, 0, 0);\r\n    }\r\n\r\n    /**@internal */\r\n    _clip(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let next: RenderSprite = this._next;\r\n        if (next == RenderSprite.NORENDER) return;\r\n\r\n        if (sprite._getBit(NodeFlags.DISABLE_INNER_CLIPPING) && !context._drawingToTexture) {\r\n            next._fun.call(next, sprite, context, x, y);\r\n            return;\r\n        }\r\n\r\n        let r = sprite._style.scrollRect;\r\n        let width = r.width;\r\n        let height = r.height;\r\n        if (width === 0)\r\n            width = 0.001;\r\n        if (height === 0)\r\n            height = 0.001;\r\n        context.save();\r\n        context.clipRect(x, y, width, height);\r\n        next._fun.call(next, sprite, context, x - r.x, y - r.y);\r\n        context.restore();\r\n    }\r\n\r\n    /**@internal */\r\n    _texture(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var tex: Texture = sprite.texture;\r\n            if (tex._getSource()) {\r\n                var width: number = sprite._isWidthSet ? sprite._width : tex.sourceWidth;\r\n                var height: number = sprite._isHeightSet ? sprite._height : tex.sourceHeight;\r\n                var wRate: number = width / tex.sourceWidth;\r\n                var hRate: number = height / tex.sourceHeight;\r\n                width = tex.width * wRate;\r\n                height = tex.height * hRate;\r\n                if (width > 0 && height > 0) {\r\n                    let px = x - sprite.pivotX + tex.offsetX * wRate;\r\n                    let py = y - sprite.pivotY + tex.offsetY * hRate;\r\n\r\n                    context.drawTexture(tex, px, py, width, height, 0xffffffff);\r\n                }\r\n            }\r\n        }\r\n        var next: RenderSprite = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    _graphics(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!sprite._getBit(NodeFlags.HIDE_BY_EDITOR)) {\r\n            var style = sprite._style;\r\n            var g = sprite._graphics;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal IDE only*/\r\n    _hitarea(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        if (!context._drawingToTexture && sprite.hitArea) {\r\n            var style = sprite._style;\r\n            var g = (<HitArea>sprite.hitArea)._hit;\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= 0.5;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            g = (<HitArea>sprite.hitArea)._unHit;\r\n            g && g._render(sprite, context, x - style.pivotX, y - style.pivotY);\r\n            context.globalAlpha = temp;\r\n        }\r\n        var next = this._next;\r\n        if (next != RenderSprite.NORENDER)\r\n            next._fun.call(next, sprite, context, x, y);\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _alpha(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var alpha: number;\r\n        if ((alpha = style.alpha) > 0.01 || sprite._needRepaint()) {\r\n            var temp: number = context.globalAlpha;\r\n            context.globalAlpha *= alpha;\r\n            var next: RenderSprite = this._next;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.globalAlpha = temp;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _transform(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var transform: Matrix = sprite.transform, _next: RenderSprite = this._next;\r\n        if (transform && _next != RenderSprite.NORENDER) {\r\n            context.save();\r\n            context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + x, transform.ty + y);\r\n            _next._fun.call(_next, sprite, context, 0, 0);\r\n            context.restore();\r\n        } else {\r\n            if (_next != RenderSprite.NORENDER)\r\n                _next._fun.call(_next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _children(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        let style: SpriteStyle = sprite._style;\r\n        let childs = <Sprite[]>sprite._children, n: number = childs.length;\r\n        x = x - sprite.pivotX;\r\n        y = y - sprite.pivotY;\r\n        let textLastRender: boolean = sprite._getBit(NodeFlags.DRAWCALL_OPTIMIZE) && context.drawCallOptimize(true);\r\n        let drawingToTexture = context._drawingToTexture;\r\n        let rect: Rectangle;\r\n        let left: number, top: number, right: number, bottom: number, x2: number, y2: number;\r\n\r\n        if (style.viewport) {\r\n            rect = style.viewport;\r\n            left = rect.x;\r\n            top = rect.y;\r\n            right = rect.right;\r\n            bottom = rect.bottom;\r\n        }\r\n\r\n        for (let i = 0; i < n; ++i) {\r\n            let ele = childs[i];\r\n            let visFlag: boolean;\r\n            if (drawingToTexture)\r\n                visFlag = ele._visible && !ele._getBit(NodeFlags.ESCAPE_DRAWING_TO_TEXTURE);\r\n            else\r\n                visFlag = ele._visible || ele._getBit(NodeFlags.DISABLE_VISIBILITY);\r\n            if (visFlag) {\r\n                if (rect && ((x2 = ele._x) >= right || (x2 + ele.width) <= left || (y2 = ele._y) >= bottom || (y2 + ele.height) <= top))\r\n                    visFlag = false;\r\n                else if (sprite._cacheStyle.mask == ele && !ele._getBit(NodeFlags.DISABLE_VISIBILITY))\r\n                    visFlag = false;\r\n            }\r\n\r\n            if (visFlag) {\r\n                if (ele._getBit(NodeFlags.DISABLE_OUTER_CLIPPING))\r\n                    context.clipRect(0, 0, 1, 1, true);\r\n\r\n                ele.render(context, x, y);\r\n            }\r\n        }\r\n        textLastRender && context.drawCallOptimize(false);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n\r\n        if (!_cacheStyle.enableCanvasRender || !context._drawingToTexture && _cacheStyle.mask && _cacheStyle.mask._getBit(NodeFlags.DISABLE_VISIBILITY)) {\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        _cacheStyle.cacheAs === 'bitmap' ? (Stat.canvasBitmap++) : (Stat.canvasNormal++);\r\n\r\n        //检查保存的文字是否失效了\r\n        var cacheNeedRebuild: boolean = false;\r\n        var textNeedRestore: boolean = false;\r\n\r\n        if (_cacheStyle.canvas) {\r\n            // 检查文字是否被释放了，以及clip是否改变了，需要重新cache了\r\n            var canv: any = _cacheStyle.canvas;\r\n            textNeedRestore = canv.isTextNeedRestore && canv.isTextNeedRestore();\r\n            cacheNeedRebuild = canv.isCacheValid && !canv.isCacheValid();\r\n        }\r\n\r\n        if (sprite._needRepaint() || (!_cacheStyle.canvas) || textNeedRestore || cacheNeedRebuild || ILaya.stage.isGlobalRepaint()) {\r\n            if (_cacheStyle.cacheAs === 'normal') {\r\n                if (context._targets) {// 如果有target说明父节点已经是一个cacheas bitmap了，就不再走cacheas normal的流程了\r\n                    _next._fun.call(_next, sprite, context, x, y);\r\n                    return;\t//不再继续\r\n                } else {\r\n                    this._canvas_webgl_normal_repaint(sprite, context);\r\n                }\r\n            } else {\r\n                this._canvas_repaint(sprite, context, x, y);\r\n            }\r\n        }\r\n        var tRec: Rectangle = _cacheStyle.cacheRect;\r\n        //Stage._dbgSprite.graphics.drawRect(x, y, 30,30, null, 'red');\r\n        context.drawCanvas(_cacheStyle.canvas, x + tRec.x, y + tRec.y, tRec.width, tRec.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_repaint(sprite: Sprite, context: Context, x: number, y: number): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var tx: Context;\r\n        var canvas: HTMLCanvas = _cacheStyle.canvas;\r\n        var left: number;\r\n        var top: number;\r\n        var tRec: Rectangle;\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n\r\n        var w: number, h: number;\r\n        var scaleX: number, scaleY: number;\r\n\r\n        var scaleInfo: Point;\r\n        scaleInfo = _cacheStyle._calculateCacheRect(sprite, tCacheType, x, y);\r\n        scaleX = scaleInfo.x;\r\n        scaleY = scaleInfo.y;\r\n\r\n        //显示对象实际的绘图区域\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n        //计算cache画布的大小\r\n        w = tRec.width * scaleX;\r\n        h = tRec.height * scaleY;\r\n        left = tRec.x;\r\n        top = tRec.y;\r\n\r\n        if (tCacheType === 'bitmap' && (w > 2048 || h > 2048)) {\r\n            console.warn(\"cache bitmap size larger than 2048, cache ignored\");\r\n            _cacheStyle.releaseContext();\r\n            _next._fun.call(_next, sprite, context, x, y);\r\n            return;\r\n        }\r\n        if (!canvas) {\r\n            _cacheStyle.createContext();\r\n            canvas = _cacheStyle.canvas;\r\n        }\r\n        tx = canvas.context as Context;\r\n\r\n        //WebGL用\r\n        tx.sprite = sprite;\r\n\r\n        (canvas.width != w || canvas.height != h) && canvas.size(w, h);//asbitmap需要合理的大小，所以size放到前面\r\n\r\n        if (tCacheType === 'bitmap') tx.asBitmap = true;\r\n        else if (tCacheType === 'normal') tx.asBitmap = false;\r\n\r\n        //清理画布。之前记录的submit会被全部清掉\r\n        tx.clear();\r\n\r\n        //TODO:测试webgl下是否有缓存模糊\r\n        if (scaleX != 1 || scaleY != 1) {\r\n            var ctx: any = tx;\r\n            ctx.save();\r\n            ctx.scale(scaleX, scaleY);\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            ctx.restore();\r\n            sprite._applyFilters();\r\n        } else {\r\n            ctx = tx;\r\n            _next._fun.call(_next, sprite, tx, -left, -top);\r\n            sprite._applyFilters();\r\n        }\r\n\r\n        if (_cacheStyle.staticCache) _cacheStyle.reCache = false;\r\n        Stat.canvasReCache++;\r\n    }\r\n\r\n    /**@internal */\r\n    _canvas_webgl_normal_repaint(sprite: Sprite, context: Context): void {\r\n\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        var _next: RenderSprite = this._next;\r\n        var canvas: WebGLCacheAsNormalCanvas = _cacheStyle.canvas as unknown as WebGLCacheAsNormalCanvas;\r\n\r\n        var tCacheType: string = _cacheStyle.cacheAs;\r\n        _cacheStyle._calculateCacheRect(sprite, tCacheType, 0, 0);\r\n\r\n        if (!canvas) {\r\n            canvas = new WebGLCacheAsNormalCanvas(context, sprite);\r\n            _cacheStyle.canvas = ((canvas as any) as HTMLCanvas);\r\n        }\r\n        var tx: Context = canvas.context as Context;\r\n\r\n\r\n        canvas.startRec();\r\n        _next._fun.call(_next, sprite, tx, sprite.pivotX, sprite.pivotY);\t// 由于后面的渲染会减去pivot，而cacheas normal并不希望这样，只希望创建一个原始的图像。所以在这里补偿。\r\n        sprite._applyFilters();\r\n\r\n        Stat.canvasReCache++;\r\n        canvas.endRec();\r\n\r\n        //context.drawCanvas(canvas, x , y , 1, 1); // 这种情况下宽高没用\r\n    }\r\n\r\n    /**@internal */\r\n    _blend(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        var style: SpriteStyle = sprite._style;\r\n        var next: RenderSprite = this._next;\r\n        if (style.blendMode) {\r\n            context.save();\r\n            context.globalCompositeOperation = style.blendMode;\r\n            next._fun.call(next, sprite, context, x, y);\r\n            context.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * mask的渲染。 sprite有mask属性的情况下，来渲染这个sprite\r\n     * @param\tsprite\r\n     * @param\tcontext\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    _mask(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        let next = this._next;\r\n        let mask = sprite.mask;\r\n        if (mask && (!mask._getBit(NodeFlags.DISABLE_VISIBILITY) || ctx._drawingToTexture)) {\r\n            ctx.save();\r\n\r\n            let preBlendMode: string = ctx.globalCompositeOperation;\r\n            let tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                ctx.breakNextMerge();\r\n                ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                let shrink = 0.1;\r\n                ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n                ctx.restore();\r\n\r\n                //设置混合模式\r\n                preBlendMode = ctx.globalCompositeOperation;\r\n                ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                let shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n                let uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n            }\r\n\r\n            //恢复混合模式\r\n            ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n    _maskNative(sprite: Sprite, ctx: Context, x: number, y: number): void {\r\n        var next: RenderSprite = this._next;\r\n        var mask: Sprite = sprite.mask;\r\n        if (mask) {\r\n            ctx.save();\r\n            var preBlendMode: string = ctx.globalCompositeOperation;\r\n            var tRect: Rectangle = new Rectangle();\r\n            //裁剪范围是根据mask来定的\r\n            tRect.copyFrom(mask.getBounds());\r\n            // 为什么round\r\n            let w = tRect.width = Math.round(tRect.width);\r\n            let h = tRect.height = Math.round(tRect.height);\r\n            tRect.x = Math.round(tRect.x);\r\n            tRect.y = Math.round(tRect.y);\r\n\r\n            if (w > 0 && h > 0) {\r\n                let tmpRT: any = (ctx as any).drawMask(w, h);\r\n                /*var tmpRT: RenderTexture2D = WebGLRTMgr.getRT(w, h);\r\n\r\n                ctx.breakNextMerge();\r\n                //先把mask画到tmpTarget上\r\n                ctx.pushRT();\r\n                ctx.addRenderObject(SubmitCMD.create([ctx, tmpRT, w, h], RenderSprite.tmpTarget, this));*/\r\n                mask.render(ctx, -tRect.x, -tRect.y);\r\n                let shrink = 0.1;\r\n                (ctx as any).drawMasked(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w - shrink * 2, h - shrink * 2);\r\n                //ctx.breakNextMerge();\r\n                //ctx.popRT();\r\n                //设置裁剪为mask的大小。要考虑pivot。有pivot的话，可能要从负的开始\r\n                //ctx.save();\r\n\r\n                /**\r\n                 * 有时候会有浮点误差，例如起点在0.5的时候，有的像素中心正好处于边界，可能会出错。\r\n                 * 对于mask来说，一般缩小一点点是没有问题的，所以缩小0.1个像素\r\n                 */\r\n                //let shrink = 0.1;\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX + shrink, y + tRect.y - sprite.getStyle().pivotY + shrink, w-shrink*2, h-shrink*2);\r\n                //ctx.clipRect(x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n\r\n                //画出本节点的内容\r\n                next._fun.call(next, sprite, ctx, x, y);\r\n\r\n                (ctx as any).drawMaskComposite(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h);\r\n                //ctx.restore();\r\n\r\n                //设置混合模式\r\n                //preBlendMode = ctx.globalCompositeOperation;\r\n                //ctx.addRenderObject(SubmitCMD.create([\"mask\"], RenderSprite.setBlendMode, this));\r\n\r\n                //var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n                //var uv = Texture.INV_UV;\r\n                //这个地方代码不要删除，为了解决在iphone6-plus上的诡异问题\r\n                //renderTarget + StencilBuffer + renderTargetSize < 32 就会变得超级卡\r\n                //所以增加的限制。王亚伟\r\n                //  180725 本段限制代码已经删除，如果出了问题再找王亚伟\r\n\r\n                //ctx.drawTarget(tmpRT, x + tRect.x - sprite.getStyle().pivotX, y + tRect.y - sprite.getStyle().pivotY, w, h, Matrix.TEMP.identity(), shaderValue, uv, 6);\r\n                //ctx.addRenderObject(SubmitCMD.create([tmpRT], RenderSprite.recycleTarget, this));\r\n\r\n                //恢复混合模式\r\n                //ctx.addRenderObject(SubmitCMD.create([preBlendMode], RenderSprite.setBlendMode, this));\r\n            }\r\n            ctx.restore();\r\n        } else {\r\n            next._fun.call(next, sprite, ctx, x, y);\r\n        }\r\n\r\n    }\r\n\r\n    //static tempUV: any[] = new Array(8);\r\n    static tmpTarget(ctx: Context, rt: RenderTexture2D, w: number, h: number): void {\r\n        rt.start();\r\n        rt.clear(0, 0, 0, 0);\r\n    }\r\n\r\n    static recycleTarget(rt: RenderTexture2D): void {\r\n        WebGLRTMgr.releaseRT(rt);\r\n    }\r\n\r\n    static setBlendMode(blendMode: string): void {\r\n        BlendMode.targetFns[BlendMode.TOINT[blendMode]]();\r\n    }\r\n}\r\n\r\n","import { Point } from \"./Point\";\r\n\r\n/**\r\n * @private\r\n * 计算贝塞尔曲线的工具类。\r\n */\r\nexport class Bezier {\r\n\r\n    /**\r\n     * 工具类单例\r\n     */\r\n    static I: Bezier = new Bezier();\r\n    /** @private */\r\n    private _controlPoints: any[] = [new Point(), new Point(), new Point()];\r\n    /** @private */\r\n    private _calFun: Function = this.getPoint2;\r\n\r\n    /** @private */\r\n    private _switchPoint(x: number, y: number): void {\r\n        var tPoint: Point = this._controlPoints.shift();\r\n        tPoint.setTo(x, y);\r\n        this._controlPoints.push(tPoint);\r\n    }\r\n\r\n    /**\r\n     * 计算二次贝塞尔点。\r\n     */\r\n    getPoint2(t: number, rst: any[]): void {\r\n        //二次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var lineX: number = Math.pow((1 - t), 2) * p1.x + 2 * t * (1 - t) * p2.x + Math.pow(t, 2) * p3.x;\r\n        var lineY: number = Math.pow((1 - t), 2) * p1.y + 2 * t * (1 - t) * p2.y + Math.pow(t, 2) * p3.y;\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算三次贝塞尔点\r\n     */\r\n    getPoint3(t: number, rst: any[]): void {\r\n        //三次贝塞尔曲线公式\r\n        var p1: Point = this._controlPoints[0];\r\n        var p2: Point = this._controlPoints[1];\r\n        var p3: Point = this._controlPoints[2];\r\n        var p4: Point = this._controlPoints[3];\r\n        var lineX: number = Math.pow((1 - t), 3) * p1.x + 3 * p2.x * t * (1 - t) * (1 - t) + 3 * p3.x * t * t * (1 - t) + p4.x * Math.pow(t, 3);\r\n        var lineY: number = Math.pow((1 - t), 3) * p1.y + 3 * p2.y * t * (1 - t) * (1 - t) + 3 * p3.y * t * t * (1 - t) + p4.y * Math.pow(t, 3);\r\n        rst.push(lineX, lineY);\r\n    }\r\n\r\n    /**\r\n     * 计算贝塞尔点序列\r\n     */\r\n    insertPoints(count: number, rst: any[]): void {\r\n        var i: number;\r\n        count = count > 0 ? count : 5;\r\n        var dLen: number;\r\n        dLen = 1 / count;\r\n        for (i = 0; i <= 1; i += dLen) {\r\n            this._calFun(i, rst);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取贝塞尔曲线上的点。\r\n     * @param pList 控制点[x0,y0,x1,y1...]\r\n     * @param inSertCount 每次曲线的插值数量\r\n     */\r\n    getBezierPoints(pList: any[], inSertCount: number = 5, count: number = 2): any[] {\r\n        var i: number, len: number;\r\n        len = pList.length;\r\n        if (len < (count + 1) * 2) return [];\r\n        var rst: any[] = [];\r\n        switch (count) {\r\n            case 2:\r\n                this._calFun = this.getPoint2;\r\n                break;\r\n            case 3:\r\n                this._calFun = this.getPoint3;\r\n                break;\r\n            default:\r\n                return [];\r\n        }\r\n        while (this._controlPoints.length <= count) {\r\n            this._controlPoints.push(Point.create());\r\n        }\r\n        for (i = 0; i < count * 2; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n        }\r\n        for (i = count * 2; i < len; i += 2) {\r\n            this._switchPoint(pList[i], pList[i + 1]);\r\n            if ((i / 2) % count == 0) this.insertPoints(inSertCount, rst);\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\n","export enum BlendEquationSeparate{\r\n    ADD,//source + destination (default value)\r\n    SUBTRACT,// source - destination\r\n    REVERSE_SUBTRACT,//destination - source\r\n    //TODO:\r\n    MIN,//Minimum of source and destination\r\n    MAX,//Maximum of source and destination\r\n}","export enum CullMode {\r\n    /** Disable culling. */\r\n    Off = 0,\r\n    /** cut the front-face of the polygons. */\r\n    Front = 1,\r\n    /** cut the back-face of the polygons. */\r\n    Back = 2\r\n  }\r\n  ","export enum RenderStateType{\r\n    DepthTest,\r\n    DepthMask,\r\n    DepthFunc,\r\n    StencilTest,\r\n    StencilMask,\r\n    StencilFunc,\r\n    StencilOp,\r\n    BlendType,\r\n    BlendEquation,\r\n    BlendEquationSeparate,\r\n    BlendFunc,\r\n    BlendFuncSeperate,\r\n    CullFace,\r\n    FrontFace,\r\n}","import { ColorUtils } from \"../../utils/ColorUtils\"\r\n\r\nexport class DrawStyle {\r\n    static DEFAULT: DrawStyle = new DrawStyle(\"#000000\")\r\n\r\n    _color: ColorUtils;\r\n\r\n    static create(value: any): DrawStyle {\r\n        if (value) {\r\n            var color: ColorUtils = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n            return color._drawStyle || (color._drawStyle = new DrawStyle(value));\r\n        }\r\n        return DrawStyle.DEFAULT;\r\n    }\r\n\r\n    constructor(value: any) {\r\n        this.setValue(value);\r\n    }\r\n\r\n    setValue(value: any): void {\r\n        if (value) {\r\n            this._color = (value instanceof ColorUtils) ? ((<ColorUtils>value)) : ColorUtils.create(value);\r\n        }\r\n        else this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    reset(): void {\r\n        this._color = ColorUtils.create(\"#000000\");\r\n    }\r\n\r\n    toInt(): number {\r\n        return this._color.numColor;\r\n    }\r\n\r\n    equal(value: any): boolean {\r\n        if (typeof (value) == 'string') return this._color.strColor === (<string>value);\r\n        if (value instanceof ColorUtils) return this._color.numColor === ((<ColorUtils>value)).numColor;\r\n        return false;\r\n    }\r\n\r\n    toColorStr(): string {\r\n        return this._color.strColor;\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class Path {\r\n\r\n    //public var _rect:Rectangle;\r\n    /**@internal */\r\n    _lastOriX: number = 0;\t//moveto等的原始位置。没有经过内部矩阵变换的\r\n    /**@internal */\r\n    _lastOriY: number = 0;\r\n    paths: any[] = [];\t//所有的路径。{@type renderPath[] }\r\n    private _curPath: renderPath = null;\r\n\r\n\r\n    constructor() {\r\n    }\r\n\r\n    beginPath(convex: boolean): void {\r\n        this.paths.length = 1;\r\n        this._curPath = this.paths[0] = new renderPath();\r\n        this._curPath.convex = convex;\r\n        //_curPath.path = [];\r\n    }\r\n\r\n    closePath(): void {\r\n        this._curPath.loop = true;\r\n    }\r\n\r\n    newPath(): void {\r\n        this._curPath = new renderPath();\r\n        this.paths.push(this._curPath);\r\n    }\r\n\r\n    addPoint(pointX: number, pointY: number): void {\r\n        //tempArray.push(pointX, pointY);\r\n        this._curPath.path.push(pointX, pointY);\r\n    }\r\n\r\n    //直接添加一个完整的path\r\n    push(points: any[], convex: boolean): void {\r\n        if (!this._curPath) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        } else if (this._curPath.path.length > 0) {\r\n            this._curPath = new renderPath();\r\n            this.paths.push(this._curPath);\r\n        }\r\n        var rp: renderPath = this._curPath;\r\n        rp.path = points.slice();//TODO 这个可能多次slice了\r\n        rp.convex = convex;\r\n    }\r\n\r\n    reset(): void {\r\n        this.paths.length = 0;//TODO 复用\r\n    }\r\n}\r\n\r\n\r\n\r\nclass renderPath {\r\n    path: any[] = []; //[x,y,x,y,....]的数组\r\n    loop: boolean = false;\r\n    convex: boolean = false;\r\n}\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { Context } from \"../../../resource/Context\"\r\nimport { SubmitBase } from \"../../submit/SubmitBase\"\r\n\r\nexport class SaveBase implements ISaveData {\r\n\r\n    /*[FILEINDEX:1]*/\r\n    /*[DISBALEOUTCONST-BEGIN]*/\r\n    static TYPE_ALPHA: number = 0x1;\r\n    static TYPE_FILESTYLE: number = 0x2;\r\n    static TYPE_FONT: number = 0x8;\r\n    static TYPE_LINEWIDTH: number = 0x100;\r\n    static TYPE_STROKESTYLE: number = 0x200;\r\n    static TYPE_MARK: number = 0x400;\r\n    static TYPE_TRANSFORM: number = 0x800;\r\n    static TYPE_TRANSLATE: number = 0x1000;\r\n    static TYPE_ENABLEMERGE: number = 0x2000;\r\n\r\n    static TYPE_TEXTBASELINE: number = 0x4000;\r\n    static TYPE_TEXTALIGN: number = 0x8000;\r\n    static TYPE_GLOBALCOMPOSITEOPERATION: number = 0x10000;\r\n    static TYPE_CLIPRECT: number = 0x20000;\r\n    static TYPE_CLIPRECT_STENCIL: number = 0x40000;\r\n    static TYPE_IBVB: number = 0x80000;\r\n    static TYPE_SHADER: number = 0x100000;\r\n    static TYPE_FILTERS: number = 0x200000;\r\n    static TYPE_FILTERS_TYPE: number = 0x400000;\r\n    static TYPE_COLORFILTER: number = 0x800000;\r\n    /*[DISBALEOUTCONST-END]*/\r\n    private static POOL: any = SaveBase._createArray();\r\n    private static _namemap: any = SaveBase._init();\r\n    /**@internal */\r\n    static _createArray(): any[] {\r\n        var value: any = [];\r\n        value._length = 0;\r\n        return value;\r\n    }\r\n    /**@internal */\r\n    static _init(): any {\r\n        var namemap: any = SaveBase._namemap = {};\r\n\r\n        namemap[SaveBase.TYPE_ALPHA] = \"ALPHA\";\r\n        namemap[SaveBase.TYPE_FILESTYLE] = \"fillStyle\";\r\n        namemap[SaveBase.TYPE_FONT] = \"font\";\r\n        namemap[SaveBase.TYPE_LINEWIDTH] = \"lineWidth\";\r\n        namemap[SaveBase.TYPE_STROKESTYLE] = \"strokeStyle\";\r\n\r\n        namemap[SaveBase.TYPE_ENABLEMERGE] = \"_mergeID\";\r\n\r\n        namemap[SaveBase.TYPE_MARK] = namemap[SaveBase.TYPE_TRANSFORM] = namemap[SaveBase.TYPE_TRANSLATE] = [];\r\n\r\n        namemap[SaveBase.TYPE_TEXTBASELINE] = \"textBaseline\";\r\n        namemap[SaveBase.TYPE_TEXTALIGN] = \"textAlign\";\r\n        namemap[SaveBase.TYPE_GLOBALCOMPOSITEOPERATION] = \"_nBlendType\";\r\n        namemap[SaveBase.TYPE_SHADER] = \"shader\";\r\n        namemap[SaveBase.TYPE_FILTERS] = \"filters\";\r\n        namemap[SaveBase.TYPE_COLORFILTER] = '_colorFiler';\r\n        return namemap;\r\n    }\r\n\r\n    private _valueName: string;\r\n    private _value: any;\r\n    private _dataObj: any;\r\n    private _newSubmit: boolean;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._dataObj[this._valueName] = this._value;\r\n        SaveBase.POOL[SaveBase.POOL._length++] = this;\r\n        this._newSubmit && (context._curSubmit = SubmitBase.RENDERBASE);\r\n    }\r\n\r\n    static save(context: Context, type: number, dataObj: any, newSubmit: boolean): void {\r\n        if ((context._saveMark._saveuse & type) !== type) {\r\n            context._saveMark._saveuse |= type;\r\n            var cache: any = SaveBase.POOL;\r\n            var o: any = cache._length > 0 ? cache[--cache._length] : (new SaveBase());\r\n            o._value = dataObj[o._valueName = SaveBase._namemap[type]];\r\n            o._dataObj = dataObj;\r\n            o._newSubmit = newSubmit;\r\n            var _save: any = context._save;\r\n            _save[_save._length++] = o;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Rectangle } from \"../../../maths/Rectangle\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveClipRect implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n\r\n    _globalClipMatrix: Matrix = new Matrix();\r\n    _clipInfoID: number = -1;\r\n    _clipRect: Rectangle = new Rectangle();\r\n    incache: boolean = false;\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._globalClipMatrix.copyTo(context._globalClipMatrix);\r\n        this._clipRect.clone(context._clipRect);\r\n        context._clipInfoID = this._clipInfoID;\r\n        SaveClipRect.POOL[SaveClipRect.POOL._length++] = this;\r\n        context._clipInCache = this.incache;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        if ((context._saveMark._saveuse & SaveBase.TYPE_CLIPRECT) == SaveBase.TYPE_CLIPRECT) return;\r\n        context._saveMark._saveuse |= SaveBase.TYPE_CLIPRECT;\r\n        var cache: any = SaveClipRect.POOL;\r\n        var o: SaveClipRect = cache._length > 0 ? cache[--cache._length] : (new SaveClipRect());\r\n        context._globalClipMatrix.copyTo(o._globalClipMatrix);\r\n        context._clipRect.clone(o._clipRect);\r\n        o._clipInfoID = context._clipInfoID;\r\n        o.incache = context._clipInCache;\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../../resource/Context\";\r\nimport { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\n\r\nexport class SaveMark implements ISaveData {\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _saveuse: number = 0;\r\n    /**@internal */\r\n    _preSaveMark: SaveMark;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean {\r\n        return true;\r\n    }\r\n\r\n    restore(context: Context): void {\r\n        context._saveMark = this._preSaveMark;\r\n        SaveMark.POOL[SaveMark.POOL._length++] = this;\r\n    }\r\n\r\n    static Create(context: Context): SaveMark {\r\n        var no: any = SaveMark.POOL;\r\n        var o: SaveMark = no._length > 0 ? no[--no._length] : (new SaveMark());\r\n        o._saveuse = 0;\r\n        o._preSaveMark = context._saveMark;\r\n        context._saveMark = o;\r\n        return o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTransform implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _savematrix: Matrix;\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        context._curMat = this._savematrix;\r\n        SaveTransform.POOL[SaveTransform.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var _saveMark: any = context._saveMark;\r\n        if ((_saveMark._saveuse & SaveBase.TYPE_TRANSFORM) === SaveBase.TYPE_TRANSFORM) return;\r\n        _saveMark._saveuse |= SaveBase.TYPE_TRANSFORM;\r\n        var no: any = SaveTransform.POOL;\r\n        var o: SaveTransform = no._length > 0 ? no[--no._length] : (new SaveTransform());\r\n        o._savematrix = context._curMat;\r\n        context._curMat = context._curMat.copyTo(o._matrix);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n}\r\n\r\n","import { ISaveData } from \"./ISaveData\";\r\nimport { SaveBase } from \"./SaveBase\";\r\nimport { Matrix } from \"../../../maths/Matrix\"\r\nimport { Context } from \"../../../resource/Context\"\r\n\r\nexport class SaveTranslate implements ISaveData {\r\n\r\n\r\n    private static POOL: any = SaveBase._createArray();\r\n    /**@internal */\r\n    _mat: Matrix = new Matrix();\r\n    isSaveMark(): boolean { return false; }\r\n\r\n    restore(context: Context): void {\r\n        this._mat.copyTo(context._curMat);\r\n        SaveTranslate.POOL[SaveTranslate.POOL._length++] = this;\r\n    }\r\n\r\n    static save(context: Context): void {\r\n        var no: any = SaveTranslate.POOL;\r\n        var o: SaveTranslate = no._length > 0 ? no[--no._length] : (new SaveTranslate());\r\n        context._curMat.copyTo(o._mat);\r\n        var _save: any = context._save;\r\n        _save[_save._length++] = o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n\ttexture和fillrect使用的。\r\n*/\r\nattribute vec4 posuv;\r\nattribute vec4 attribColor;\r\nattribute vec4 attribFlags;\r\n//attribute vec4 clipDir;\r\n//attribute vec2 clipRect;\r\nuniform vec4 clipMatDir;\r\nuniform vec2 clipMatPos;\t\t// 这个是全局的，不用再应用矩阵了。\r\nvarying vec2 cliped;\r\nuniform vec2 size;\r\nuniform vec2 clipOff;\t\t\t// 使用要把clip偏移。cacheas normal用. 只用了[0]\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\n#ifdef MVP3D\r\n\tuniform mat4 u_MvpMatrix;\r\n#endif\r\nvarying vec4 v_texcoordAlpha;\r\nvarying vec4 v_color;\r\nvarying float v_useTex;\r\n\r\nvoid main() {\r\n\r\n\tvec4 pos = vec4(posuv.xy,0.,1.);\r\n#ifdef WORLDMAT\r\n\tpos=mmat*pos;\r\n#endif\r\n\tvec4 pos1  =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,0.,1.0);\r\n#ifdef MVP3D\r\n\tgl_Position=u_MvpMatrix*pos1;\r\n#else\r\n\tgl_Position=pos1;\r\n#endif\r\n\tv_texcoordAlpha.xy = posuv.zw;\r\n\t//v_texcoordAlpha.z = attribColor.a/255.0;\r\n\tv_color = attribColor/255.0;\r\n\tv_color.xyz*=v_color.w;//反正后面也要预乘\r\n\tv_useTex = attribFlags.r/255.0;\r\n\r\n\tfloat clipw = length(clipMatDir.xy);\r\n\tfloat cliph = length(clipMatDir.zw);\r\n\t\r\n\tvec2 clpos = clipMatPos.xy;\r\n\t#ifdef WORLDMAT\r\n\t\t// 如果有mmat，需要修改clipMatPos,因为 这是cacheas normal （如果不是就错了）， clipMatPos被去掉了偏移\r\n\t\tif(clipOff[0]>0.0){\r\n\t\t\tclpos.x+=mmat[3].x;\t//tx\t最简单处理\r\n\t\t\tclpos.y+=mmat[3].y;\t//ty\r\n\t\t}\r\n\t#endif\r\n\tvec2 clippos = pos.xy - clpos;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n\tif(clipw>20000. && cliph>20000.)\r\n\t\tcliped = vec2(0.5,0.5);\r\n\telse {\r\n\t\t//转成0到1之间。/clipw/clipw 表示clippos与normalize之后的clip朝向点积之后，再除以clipw\r\n\t\tcliped=vec2( dot(clippos,clipMatDir.xy)/clipw/clipw, dot(clippos,clipMatDir.zw)/cliph/cliph);\r\n\t}\r\n\r\n\t#ifdef INVERTY\r\n\t\tgl_Position.y = -gl_Position.y;\r\n\t#endif\r\n\r\n}\r\n","/**\r\n * Mesh topology.\r\n */\r\n export enum MeshTopology {\r\n    /** Draws a single dot */\r\n    Points,\r\n    /** Draws a line between a pair of vertices */\r\n    Lines,\r\n    /** Draws a straight line to the next vertex, and connects the last vertex back to the first */\r\n    LineLoop,\r\n    /** Draws a straight line to the next vertex. */\r\n    LineStrip,\r\n    /** Draws a triangle for a group of three vertices */\r\n    Triangles,\r\n    /** Draws a triangle strip */\r\n    TriangleStrip,\r\n    /** Draws a triangle fan */\r\n    TriangleFan\r\n  }\r\n  ","/**\r\n * 纹理寻址模式。\r\n */\r\nexport enum WrapMode {\r\n    /** 循环平铺。*/\r\n    Repeat = 0,\r\n    /** 超过UV边界后采用最后一个像素。*/\r\n    Clamp = 1,\r\n    /** 镜像采样 */\r\n    Mirrored = 2\r\n}","/*\r\n\ttexture和fillrect使用的。\r\n*/\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH) // 原来的写法会被我们自己的解析流程处理，而我们的解析是不认内置宏的，导致被删掉，所以改成 if defined 了\r\nprecision highp float;\r\n#else\r\nprecision mediump float;\r\n#endif\r\n\r\nvec3 linearToGamma(in vec3 value)\r\n{\r\n    return vec3(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))));\r\n\r\n    // return pow(value, vec3(1.0 / 2.2));\r\n    // return pow(value, vec3(0.455));\r\n}\r\n\r\nvec4 linearToGamma(in vec4 value)\r\n{\r\n    return vec4(linearToGamma(value.rgb), value.a);\r\n}\r\n\r\nvec3 gammaToLinear(in vec3 value)\r\n{\r\n    // return pow((value + 0.055) / 1.055, vec3(2.4));\r\n    return pow(value, vec3(2.2));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\n\r\nvarying vec4 v_texcoordAlpha;\r\nvarying vec4 v_color;\r\nvarying float v_useTex;\r\nuniform sampler2D texture;\r\nvarying vec2 cliped;\r\n\r\nvec4 sampleTexture(sampler2D texture, vec2 uv)\r\n{\r\n    vec4 color = texture2D(texture, uv);\r\n#ifndef GAMMATEXTURE\r\n    //是linear数据\r\n    #ifdef GAMMASPACE\r\n        color.xyz = linearToGamma(color.xyz);    \r\n    #endif\r\n#else\r\n    //gamma数据\r\n    #ifndef GAMMASPACE\r\n        color.xyz = gammaToLinear(color.xyz);\r\n    #endif\r\n#endif\r\n    return color;\r\n}\r\n\r\n#ifdef BLUR_FILTER\r\nuniform vec4 strength_sig2_2sig2_gauss1; // TODO模糊的过程中会导致变暗变亮\r\nuniform vec2 blurInfo;\r\n\r\n    #define PI 3.141593\r\n\r\nfloat getGaussian(float x, float y)\r\n{\r\n    return strength_sig2_2sig2_gauss1.w * exp(-(x * x + y * y) / strength_sig2_2sig2_gauss1.z);\r\n}\r\n\r\nvec4 blur()\r\n{\r\n    const float blurw = 9.0;\r\n    vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n    vec2 halfsz = vec2(blurw, blurw) / 2.0 / blurInfo;\r\n    vec2 startpos = v_texcoordAlpha.xy - halfsz;\r\n    vec2 ctexcoord = startpos;\r\n    vec2 step = 1.0 / blurInfo; //每个像素\r\n\r\n    for (float y = 0.0; y <= blurw; ++y)\r\n\t{\r\n\t    ctexcoord.x = startpos.x;\r\n\t    for (float x = 0.0; x <= blurw; ++x)\r\n\t\t{\r\n\t\t    // TODO 纹理坐标的固定偏移应该在vs中处理\r\n\t\t    vec4Color += sampleTexture(texture, ctexcoord) * getGaussian(x - blurw / 2.0, y - blurw / 2.0);\r\n\t\t    ctexcoord.x += step.x;\r\n\t\t}\r\n\t    ctexcoord.y += step.y;\r\n\t}\r\n    // vec4Color.w=1.0;  这个会导致丢失alpha。以后有时间再找模糊会导致透明的问题\r\n    return vec4Color;\r\n}\r\n#endif\r\n\r\n#ifdef COLOR_FILTER\r\nuniform vec4 colorAlpha;\r\nuniform mat4 colorMat;\r\n#endif\r\n\r\n#ifdef GLOW_FILTER\r\nuniform vec4 u_color;\r\nuniform vec4 u_blurInfo1;\r\nuniform vec4 u_blurInfo2;\r\n#endif\r\n\r\n#ifdef COLOR_ADD\r\nuniform vec4 colorAdd;\r\n#endif\r\n\r\n#ifdef FILLTEXTURE\r\nuniform vec4 u_TexRange; // startu,startv,urange, vrange\r\n#endif\r\n\r\nvoid main()\r\n{\r\n    if (cliped.x < 0.)\r\n\tdiscard;\r\n    if (cliped.x > 1.)\r\n\tdiscard;\r\n    if (cliped.y < 0.)\r\n\tdiscard;\r\n    if (cliped.y > 1.)\r\n\tdiscard;\r\n\r\n#ifdef FILLTEXTURE\r\n    vec4 color = sampleTexture(texture, fract(v_texcoordAlpha.xy) * u_TexRange.zw + u_TexRange.xy);\r\n#else\r\n    vec4 color = sampleTexture(texture, v_texcoordAlpha.xy);\r\n#endif\r\n\r\n    if (v_useTex <= 0.)\r\n        color = vec4(1., 1., 1., 1.);\r\n\r\n    color.a *= v_color.w;\r\n    // color.rgb*=v_color.w;\r\n    vec4 transColor = v_color;\r\n    #ifndef GAMMASPACE\r\n        transColor = gammaToLinear(v_color);\r\n    #endif\r\n    color.rgb *= transColor.rgb;\r\n    gl_FragColor = color;\r\n\r\n#ifdef COLOR_ADD\r\n    gl_FragColor = vec4(colorAdd.rgb, colorAdd.a * gl_FragColor.a);\r\n    gl_FragColor.xyz *= colorAdd.a;\r\n#endif\r\n\r\n#ifdef BLUR_FILTER\r\n    gl_FragColor = blur();\r\n    gl_FragColor.w *= v_color.w;\r\n#endif\r\n\r\n#ifdef COLOR_FILTER\r\n    mat4 alphaMat = colorMat;\r\n\r\n    alphaMat[0][3] *= gl_FragColor.a;\r\n    alphaMat[1][3] *= gl_FragColor.a;\r\n    alphaMat[2][3] *= gl_FragColor.a;\r\n\r\n    gl_FragColor = gl_FragColor * alphaMat;\r\n    gl_FragColor += colorAlpha / 255.0 * gl_FragColor.a;\r\n#endif\r\n\r\n#ifdef GLOW_FILTER\r\n    const float c_IterationTime = 10.0;\r\n    float floatIterationTotalTime = c_IterationTime * c_IterationTime;\r\n    vec4 vec4Color = vec4(0.0, 0.0, 0.0, 0.0);\r\n    vec2 vec2FilterDir = vec2(-(u_blurInfo1.z) / u_blurInfo2.x, -(u_blurInfo1.w) / u_blurInfo2.y);\r\n    vec2 vec2FilterOff = vec2(u_blurInfo1.x / u_blurInfo2.x / c_IterationTime * 2.0, u_blurInfo1.y / u_blurInfo2.y / c_IterationTime * 2.0);\r\n    float maxNum = u_blurInfo1.x * u_blurInfo1.y;\r\n    vec2 vec2Off = vec2(0.0, 0.0);\r\n    float floatOff = c_IterationTime / 2.0;\r\n    for (float i = 0.0; i <= c_IterationTime; ++i)\r\n\t{\r\n\t    for (float j = 0.0; j <= c_IterationTime; ++j)\r\n\t\t{\r\n\t\t    vec2Off = vec2(vec2FilterOff.x * (i - floatOff), vec2FilterOff.y * (j - floatOff));\r\n\t\t    vec4Color += sampleTexture(texture, v_texcoordAlpha.xy + vec2FilterDir + vec2Off) / floatIterationTotalTime;\r\n\t\t}\r\n\t}\r\n    gl_FragColor = vec4(u_color.rgb, vec4Color.a * u_blurInfo2.z);\r\n    gl_FragColor.rgb *= gl_FragColor.a;\r\n#endif\r\n}\r\n","attribute vec4 position;\r\nattribute vec4 attribColor;\r\n//attribute vec4 clipDir;\r\n//attribute vec2 clipRect;\r\nuniform vec4 clipMatDir;\r\nuniform vec2 clipMatPos;\r\n#ifdef WORLDMAT\r\n\tuniform mat4 mmat;\r\n#endif\r\nuniform mat4 u_mmat2;\r\n//uniform vec2 u_pos;\r\nuniform vec2 size;\r\nvarying vec4 color;\r\n//vec4 dirxy=vec4(0.9,0.1, -0.1,0.9);\r\n//vec4 clip=vec4(100.,30.,300.,600.);\r\nvarying vec2 cliped;\r\nvoid main(){\r\n\t\r\n#ifdef WORLDMAT\r\n\tvec4 pos=mmat*vec4(position.xy,0.,1.);\r\n\tgl_Position =vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\r\n#else\r\n\tgl_Position =vec4((position.x/size.x-0.5)*2.0,(0.5-position.y/size.y)*2.0,position.z,1.0);\r\n#endif\t\r\n\tfloat clipw = length(clipMatDir.xy);\r\n\tfloat cliph = length(clipMatDir.zw);\r\n\tvec2 clippos = position.xy - clipMatPos.xy;\t//pos已经应用矩阵了，为了减的有意义，clip的位置也要缩放\r\n\tif(clipw>20000. && cliph>20000.)\r\n\t\tcliped = vec2(0.5,0.5);\r\n\telse {\r\n\t\t//clipdir是带缩放的方向，由于上面clippos是在缩放后的空间计算的，所以需要把方向先normalize一下\r\n\t\tcliped=vec2( dot(clippos,clipMatDir.xy)/clipw/clipw, dot(clippos,clipMatDir.zw)/cliph/cliph);\r\n\t}\r\n  //pos2d.x = dot(clippos,dirx);\r\n  color=attribColor/255.;\r\n}","precision mediump float;\r\n//precision mediump float;\r\nvarying vec4 color;\r\n//uniform float alpha;\r\nvarying vec2 cliped;\r\n\r\nvec3 gammaToLinear(in vec3 value)\r\n{\r\n    return pow((value + 0.055) / 1.055, vec3(2.4));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvoid main(){\r\n\t//vec4 a=vec4(color.r, color.g, color.b, 1);\r\n\t//a.a*=alpha;\r\n\t#ifdef GAMMASPACE\r\n    \tgl_FragColor= color;// vec4(color.r, color.g, color.b, alpha);\r\n\t#else\r\n\t\tgl_FragColor= gammaToLinear(color);\r\n\t#endif\r\n\tgl_FragColor.rgb*=color.a;\r\n\tif(cliped.x<0.) discard;\r\n\tif(cliped.x>1.) discard;\r\n\tif(cliped.y<0.) discard;\r\n\tif(cliped.y>1.) discard;\r\n}","attribute vec2 position;\r\nattribute vec2 texcoord;\r\nattribute vec4 color;\r\nuniform vec2 size;\r\nuniform float offsetX;\r\nuniform float offsetY;\r\nuniform mat4 mmat;\r\nuniform mat4 u_mmat2;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\nvoid main() {\r\n  vec4 pos=mmat*u_mmat2*vec4(offsetX+position.x,offsetY+position.y,0,1 );\r\n  gl_Position = vec4((pos.x/size.x-0.5)*2.0,(0.5-pos.y/size.y)*2.0,pos.z,1.0);\r\n  v_color = color;\r\n  v_color.rgb *= v_color.a;\r\n  v_texcoord = texcoord;  \r\n}","precision mediump float;\r\nvarying vec2 v_texcoord;\r\nvarying vec4 v_color;\r\nuniform sampler2D texture;\r\nuniform float alpha;\r\n\r\nvec4 sampleTexture(sampler2D texture,vec2 uv){\r\n    vec4 color = texture2D(texture,uv);\r\n    #ifdef GAMMASPACE\r\n        color.xyz = color.xyz*color.xyz;\r\n    #endif\r\n    return color;\r\n}\r\n\r\nvec3 gammaToLinear(in vec3 value)\r\n{\r\n    // return pow((value + 0.055) / 1.055, vec3(2.4));\r\n    return pow(value, vec3(2.2));\r\n}\r\n\r\nvec4 gammaToLinear(in vec4 value)\r\n{\r\n    return vec4(gammaToLinear(value.rgb), value.a);\r\n}\r\n\r\nvoid main() {\r\n    vec4 t_color = sampleTexture(texture, v_texcoord);\r\n    vec4 transColor = v_color;\r\n    #ifndef GAMMASPACE\r\n        transColor = gammaToLinear(v_color);\r\n    #endif\r\n    gl_FragColor = t_color.rgba * transColor;\r\n    gl_FragColor *= alpha;\r\n}","import { ShaderDefines2D } from \"./ShaderDefines2D\";\r\nimport { DrawStyle } from \"../../canvas/DrawStyle\"\r\nimport { Shader } from \"../Shader\"\r\n\r\nimport texture_vs from './files/texture.vs.glsl';\r\nimport texture_ps from './files/texture.ps.glsl';\r\nimport prime_vs from './files/primitive.vs.glsl';\r\nimport prime_ps from './files/primitive.ps.glsl';\r\nimport skin_vs from './skinAnishader/skinShader.vs.glsl';\r\nimport skin_ps from './skinAnishader/skinShader.ps.glsl';\r\n\r\nexport class Shader2D {\r\n    ALPHA: number = 1;\r\n    shader: Shader;\r\n    filters: any[];\r\n    defines = new ShaderDefines2D();\r\n    shaderType: number = 0;\r\n    colorAdd: any[];\r\n    fillStyle = DrawStyle.DEFAULT;\r\n    strokeStyle  = DrawStyle.DEFAULT;\r\n    destroy(): void {\r\n\t\t//@ts-ignore\r\n\t\tthis.defines = null;\r\n\t\t//@ts-ignore\r\n        this.filters = null;\r\n    }\r\n\r\n    static __init__(): void {\r\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n            (window as any).preCompile2D(ShaderDefines2D.TEXTURE2D, texture_vs, texture_ps);\r\n            (window as any).preCompile2D(ShaderDefines2D.PRIMITIVE, prime_vs, prime_ps);\r\n            (window as any).preCompile2D(ShaderDefines2D.SKINMESH, skin_vs, skin_ps);\r\n        }\r\n        else {\r\n            Shader.preCompile2D(0, ShaderDefines2D.TEXTURE2D, texture_vs, texture_ps, null);\r\n            Shader.preCompile2D(0, ShaderDefines2D.PRIMITIVE, prime_vs, prime_ps, null);\r\n            Shader.preCompile2D(0, ShaderDefines2D.SKINMESH, skin_vs, skin_ps, null);\r\n        }\r\n    }\r\n}\r\n\r\n","import { IndexBuffer2D } from \"../../../utils/IndexBuffer2D\"\r\nimport { VertexBuffer2D } from \"../../../utils/VertexBuffer2D\"\r\nimport { BufferUsage } from \"../../../../RenderEngine/RenderEnum/BufferTargetType\";\r\n\r\nexport class SkinMeshBuffer {\r\n\r\n    ib: IndexBuffer2D;\r\n    vb: VertexBuffer2D;\r\n\r\n    static instance: SkinMeshBuffer;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        this.ib = IndexBuffer2D.create(BufferUsage.Dynamic);\r\n        this.vb = VertexBuffer2D.create(8);\r\n    }\r\n\r\n    //TODO:coverage\r\n    static getInstance(): SkinMeshBuffer {\r\n        return SkinMeshBuffer.instance = SkinMeshBuffer.instance || new SkinMeshBuffer();\r\n    }\r\n\r\n    //TODO:coverage\r\n    addSkinMesh(skinMesh: any): void {\r\n        //skinMesh.getData(vb, ib, vb.byteLength / 32);\r\n        skinMesh.getData2(this.vb, this.ib, this.vb._byteLength / 32);\r\n    }\r\n\r\n\r\n    reset(): void {\r\n        this.vb.buffer2D.clear();\r\n        this.ib.buffer2D.clear();\r\n    }\r\n\r\n}\r\n\r\n\r\n","export class BasePoly {\r\n\r\n    private static tempData: any[] = new Array(256);\r\n\r\n\t/**\r\n\t * 构造线的三角形数据。根据一个位置数组生成vb和ib\r\n\t * @param\tp\r\n\t * @param\tindices\r\n\t * @param\tlineWidth\r\n\t * @param\tindexBase\t\t\t\t顶点开始的值，ib中的索引会加上这个\r\n\t * @param\toutVertex\r\n\t * @return\r\n\t */\r\n    static createLine2(p: any[], indices: any[], lineWidth: number, indexBase: number, outVertex: any[], loop: boolean): any[] {\r\n\r\n        if (p.length < 4) return null;\r\n        var points: any[] = BasePoly.tempData.length > (p.length + 2) ? BasePoly.tempData : new Array(p.length + 2);\t//可能有loop，所以+2\r\n        points[0] = p[0]; points[1] = p[1];\r\n\t\t/*\r\n\t\tvar points:Array = p.concat();\r\n\t\tif (loop) {\r\n\t\t\tpoints.push(points[0], points[1]);\r\n\t\t}\r\n\t\t*/\r\n        var newlen: number = 2;\t//points的下标，也是points的实际长度\r\n        var i: number = 0;\r\n        var length: number = p.length;\r\n        //先过滤一下太相近的点\r\n        for (i = 2; i < length; i += 2) {\r\n            if (Math.abs(p[i] - p[i - 2]) + Math.abs(p[i + 1] - p[i - 1]) > 0.01) {//只是判断是否重合，所以不用sqrt\r\n                points[newlen++] = p[i]; points[newlen++] = p[i + 1];\r\n            }\r\n        }\r\n        //如果终点和起点没有重合，且要求loop的情况的处理\r\n        if (loop && Math.abs(p[0] - points[newlen - 2]) + Math.abs(p[1] - points[newlen - 1]) > 0.01) {\r\n            points[newlen++] = p[0]; points[newlen++] = p[1];\r\n        }\r\n\r\n        var result: any[] = outVertex;\r\n        length = newlen / 2;\t//points可能有多余的点，所以要用inew来表示\r\n        var w: number = lineWidth / 2;\r\n\r\n        var px: number, py: number, p1x: number, p1y: number, p2x: number, p2y: number, p3x: number, p3y: number;\r\n        var perpx: number, perpy: number, perp2x: number, perp2y: number, perp3x: number, perp3y: number;\r\n        var a1: number, b1: number, c1: number, a2: number, b2: number, c2: number;\r\n        var denom: number, pdist: number, dist: number;\r\n\r\n        p1x = points[0];\r\n        p1y = points[1];\r\n        p2x = points[2];\r\n        p2y = points[3];\r\n\r\n        perpx = -(p1y - p2y);\r\n        perpy = p1x - p2x;\r\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        perpx = perpx / dist * w;\r\n        perpy = perpy / dist * w;\r\n\r\n        result.push(p1x - perpx, p1y - perpy, p1x + perpx, p1y + perpy);\r\n        for (i = 1; i < length - 1; i++) {\r\n            p1x = points[(i - 1) * 2];\r\n            p1y = points[(i - 1) * 2 + 1];\r\n            p2x = points[(i) * 2];\r\n            p2y = points[(i) * 2 + 1];\r\n            p3x = points[(i + 1) * 2];\r\n            p3y = points[(i + 1) * 2 + 1];\r\n\r\n            perpx = -(p1y - p2y);\r\n            perpy = p1x - p2x;\r\n            dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n            perpx = perpx / dist * w;\r\n            perpy = perpy / dist * w;\r\n\r\n            perp2x = -(p2y - p3y);\r\n            perp2y = p2x - p3x;\r\n            dist = Math.sqrt(perp2x * perp2x + perp2y * perp2y);\r\n            perp2x = perp2x / dist * w;\r\n            perp2y = perp2y / dist * w;\r\n\r\n            a1 = (-perpy + p1y) - (-perpy + p2y);\r\n            b1 = (-perpx + p2x) - (-perpx + p1x);\r\n            c1 = (-perpx + p1x) * (-perpy + p2y) - (-perpx + p2x) * (-perpy + p1y);\r\n            a2 = (-perp2y + p3y) - (-perp2y + p2y);\r\n            b2 = (-perp2x + p2x) - (-perp2x + p3x);\r\n            c2 = (-perp2x + p3x) * (-perp2y + p2y) - (-perp2x + p2x) * (-perp2y + p3y);\r\n            denom = a1 * b2 - a2 * b1;\r\n            if (Math.abs(denom) < 0.1) {\r\n                denom += 10.1;\r\n                result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\r\n                continue;\r\n            }\r\n            px = (b1 * c2 - b2 * c1) / denom;\r\n            py = (a2 * c1 - a1 * c2) / denom;\r\n            pdist = (px - p2x) * (px - p2x) + (py - p2y) + (py - p2y);\r\n            result.push(px, py, p2x - (px - p2x), p2y - (py - p2y));\r\n        }\r\n\r\n        p1x = points[newlen - 4];\r\n        p1y = points[newlen - 3];\r\n        p2x = points[newlen - 2];\r\n        p2y = points[newlen - 1];\r\n\r\n        perpx = -(p1y - p2y);\r\n        perpy = p1x - p2x;\r\n        dist = Math.sqrt(perpx * perpx + perpy * perpy);\r\n        perpx = perpx / dist * w;\r\n        perpy = perpy / dist * w;\r\n\r\n        result.push(p2x - perpx, p2y - perpy, p2x + perpx, p2y + perpy);\r\n        for (i = 1; i < length; i++) {\r\n            indices.push(indexBase + (i - 1) * 2, indexBase + (i - 1) * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2 + 1, indexBase + i * 2, indexBase + (i - 1) * 2);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\t/**\r\n\t * 相邻的两段线，边界会相交，这些交点可以作为三角形的顶点。有两种可选，一种是采用左左,右右交点，一种是采用 左右，左右交点。当两段线夹角很小的时候，如果采用\r\n\t * 左左，右右会产生很长很长的交点，这时候就要采用左右左右交点，相当于把尖角截断。\r\n\t * 当采用左左右右交点的时候，直接用切线的垂线。采用左右左右的时候，用切线\r\n\t * 切线直接采用两个方向的平均值。不能用3-1的方式，那样垂线和下一段可能都在同一方向（例如都在右方）\r\n\t * 注意把重合的点去掉\r\n\t * @param\tpath\r\n\t * @param\tcolor\r\n\t * @param\twidth\r\n\t * @param\tloop\r\n\t * @param\toutvb\r\n\t * @param\tvbstride  顶点占用几个float,(bytelength/4)\r\n\t * @param\toutib\r\n\t * test:\r\n\t * 横线\r\n\t * [100,100, 400,100]\r\n\t * 竖线\r\n\t * [100,100, 100,400]\r\n\t * 直角\r\n\t * [100,100, 400,100, 400,400]\r\n\t * 重合点\r\n\t * [100,100,100,100,400,100]\r\n\t * 同一直线上的点\r\n\t * [100,100,100,200,100,3000]\r\n\t * 像老式电视的左边不封闭的图形\r\n\t * [98,176,  163,178, 95,66, 175,177, 198,178, 252,56, 209,178,  248,175,  248,266,  209,266, 227,277, 203,280, 188,271,  150,271, 140,283, 122,283, 131,268, 99,268]\r\n\t * \r\n\t */\r\n    //TODO:coverage\r\n    static createLineTriangle(path: any[], color: number, width: number, loop: boolean, outvb: Float32Array, vbstride: number, outib: Uint16Array): void {\r\n\r\n        var points: any[] = path.slice();\r\n        var ptlen: number = points.length;\r\n        var p1x: number = points[0], p1y: number = points[1];\r\n        var p2x: number = points[2], p2y: number = points[2];\r\n        var len: number = 0;\r\n        var rp: number = 0;\r\n        var dx: number = 0, dy: number = 0;\r\n\r\n        //计算每一段的长度，取出有效数据。保存:长度，方向，拐角，切线\r\n        //x,y,len,dx,dy,tx,ty,dot\r\n        //数组中每个都表示当前点开始的长度，方向\r\n        //x,y,dx,dy\r\n\r\n        var pointnum: number = ptlen / 2;\r\n        if (pointnum <= 1) return;\r\n        if (pointnum == 2) {\r\n            //TODO\r\n            return;\r\n        }\r\n\r\n        var tmpData: any[] = new Array(pointnum * 4);//TODO 做到外面\r\n        var realPtNum: number = 0;\t//去掉重复点后的实际点个数。同一直线上的点不做优化\r\n        //var segNum:int = pointnum + (loop?1:0);\r\n        var ci: number = 0;\r\n        for (var i: number = 0; i < pointnum - 1; i++) {\r\n            p1x = points[ci++], p1y = points[ci++];\r\n            p2x = points[ci++], p2y = points[ci++];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        }\r\n        if (loop) {//loop的话，需要取第一个点来算\r\n            p1x = points[ptlen - 2], p1y = points[ptlen - 1];\r\n            p2x = points[0], p2y = points[1];\r\n            dx = p2x - p1x, dy = p2y - p1y;\r\n            if (dx != 0 && dy != 0) {//如果长度为零的话，最后这个点就不用加了，上一个点就是指向了第一个点。\r\n                len = Math.sqrt(dx * dx + dy * dy);\r\n                if (len > 1e-3) {\r\n                    rp = realPtNum * 4;\r\n                    tmpData[rp] = p1x;\r\n                    tmpData[rp + 1] = p1y;\r\n                    tmpData[rp + 2] = dx / len;\r\n                    tmpData[rp + 3] = dy / len;\r\n                    realPtNum++;\r\n                }\r\n            }\r\n        } else {//不是loop的话，直接取当前段的朝向，记录在上一个点上\r\n            rp = realPtNum * 4;\r\n            tmpData[rp] = p1x;\r\n            tmpData[rp + 1] = p1y;\r\n            tmpData[rp + 2] = dx / len;\r\n            tmpData[rp + 3] = dy / len;\r\n            realPtNum++;\r\n        }\r\n        ci = 0;\r\n\r\n\t\t/**\r\n\t\t * 根据前后两段的方向，计算垂线的方向，根据这个方向和任意一边的dxdy的垂线的点积为w/2可以得到长度。就可以得到增加的点\r\n\t\t */\r\n        //如果相邻两段朝向的dot值接近-1，则表示反向了，需要改成切\r\n\r\n        for (i = 0; i < pointnum; i++) {\r\n            p1x = points[ci], p1y = points[ci + 1];\r\n            p2x = points[ci + 2], p2y = points[ci + 3];\r\n            //var p3x: number = points[ci + 4], p3y: number = points[ci + 5];\r\n\r\n        }\r\n        if (loop) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","export class EarcutNode {\r\n    i: any;\r\n    x: any;\r\n    y: any;\r\n    prev: any;\r\n    next: any;\r\n    z: any;\r\n    prevZ: any;\r\n    nextZ: any;\r\n    steiner: any;\r\n    constructor(i: any, x: any, y: any) {\r\n        // vertice index in coordinates array\r\n        this.i = i;\r\n\r\n        // vertex coordinates\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        // previous and next vertice nodes in a polygon ring\r\n        this.prev = null;\r\n        this.next = null;\r\n\r\n        // z-order curve value\r\n        this.z = null;\r\n\r\n        // previous and next nodes in z-order\r\n        this.prevZ = null;\r\n        this.nextZ = null;\r\n\r\n        // indicates whether this is a steiner point\r\n        this.steiner = false;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { EarcutNode } from \"./EarcutNode\";\r\nexport class Earcut {\r\n    static earcut(data: any, holeIndices: any, dim: any): any {\r\n\r\n        dim = dim || 2;\r\n\r\n        var hasHoles: any = holeIndices && holeIndices.length,\r\n            outerLen: any = hasHoles ? holeIndices[0] * dim : data.length,\r\n            outerNode: any = Earcut.linkedList(data, 0, outerLen, dim, true),\r\n            triangles: any = [];\r\n\r\n        if (!outerNode) return triangles;\r\n\r\n        var minX: any, minY: any, maxX: any, maxY: any, x: any, y: any, invSize: any;\r\n\r\n        if (hasHoles) outerNode = Earcut.eliminateHoles(data, holeIndices, outerNode, dim);\r\n\r\n        // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n        if (data.length > 80 * dim) {\r\n            minX = maxX = data[0];\r\n            minY = maxY = data[1];\r\n\r\n            for (var i: any = dim; i < outerLen; i += dim) {\r\n                x = data[i];\r\n                y = data[i + 1];\r\n                if (x < minX) minX = x;\r\n                if (y < minY) minY = y;\r\n                if (x > maxX) maxX = x;\r\n                if (y > maxY) maxY = y;\r\n            }\r\n\r\n            // minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n            invSize = Math.max(maxX - minX, maxY - minY);\r\n            invSize = invSize !== 0 ? 1 / invSize : 0;\r\n        }\r\n\r\n        Earcut.earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\r\n\r\n        return triangles;\r\n    }\r\n\r\n    // create a circular doubly linked list from polygon points in the specified winding order\r\n    static linkedList(data: any, start: any, end: any, dim: any, clockwise: any): any {\r\n        var i: any, last: any;\r\n\r\n        if (clockwise === (Earcut.signedArea(data, start, end, dim) > 0)) {\r\n            for (i = start; i < end; i += dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        } else {\r\n            for (i = end - dim; i >= start; i -= dim) last = Earcut.insertNode(i, data[i], data[i + 1], last);\r\n        }\r\n\r\n        if (last && Earcut.equals(last, last.next)) {\r\n            Earcut.removeNode(last);\r\n            last = last.next;\r\n        }\r\n\r\n        return last;\r\n    }\r\n\r\n    // eliminate colinear or duplicate points\r\n    static filterPoints(start: any, end: any): any {\r\n        if (!start) return start;\r\n        if (!end) end = start;\r\n\r\n        var p: any = start,\r\n            again: any;\r\n        do {\r\n            again = false;\r\n\r\n            if (!p.steiner && (Earcut.equals(p, p.next) || Earcut.area(p.prev, p, p.next) === 0)) {\r\n                Earcut.removeNode(p);\r\n                p = end = p.prev;\r\n                if (p === p.next) break;\r\n                again = true;\r\n\r\n            } else {\r\n                p = p.next;\r\n            }\r\n        } while (again || p !== end);\r\n\r\n        return end;\r\n    }\r\n\r\n    // main ear slicing loop which triangulates a polygon (given as a linked list)\r\n    static earcutLinked(ear: any, triangles: any, dim: any, minX: any, minY: any, invSize: any, pass: any = null): any {\r\n        if (!ear) return;\r\n\r\n        // interlink polygon nodes in z-order\r\n        if (!pass && invSize) Earcut.indexCurve(ear, minX, minY, invSize);\r\n\r\n        var stop: any = ear,\r\n            prev: any, next: any;\r\n\r\n        // iterate through ears, slicing them one by one\r\n        while (ear.prev !== ear.next) {\r\n            prev = ear.prev;\r\n            next = ear.next;\r\n\r\n            if (invSize ? Earcut.isEarHashed(ear, minX, minY, invSize) : Earcut.isEar(ear)) {\r\n                // cut off the triangle\r\n                triangles.push(prev.i / dim);\r\n                triangles.push(ear.i / dim);\r\n                triangles.push(next.i / dim);\r\n\r\n                Earcut.removeNode(ear);\r\n\r\n                // skipping the next vertice leads to less sliver triangles\r\n                ear = next.next;\r\n                stop = next.next;\r\n\r\n                continue;\r\n            }\r\n\r\n            ear = next;\r\n\r\n            // if we looped through the whole remaining polygon and can't find any more ears\r\n            if (ear === stop) {\r\n                // try filtering points and slicing again\r\n                if (!pass) {\r\n                    Earcut.earcutLinked(Earcut.filterPoints(ear, null), triangles, dim, minX, minY, invSize, 1);\r\n\r\n                    // if this didn't work, try curing all small self-intersections locally\r\n                } else if (pass === 1) {\r\n                    ear = Earcut.cureLocalIntersections(ear, triangles, dim);\r\n                    Earcut.earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\r\n\r\n                    // as a last resort, try splitting the remaining polygon into two\r\n                } else if (pass === 2) {\r\n                    Earcut.splitEarcut(ear, triangles, dim, minX, minY, invSize);\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // check whether a polygon node forms a valid ear with adjacent nodes\r\n    static isEar(ear: any): any {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // now make sure we don't have other points inside the potential ear\r\n        var p: any = ear.next.next;\r\n\r\n        while (p !== ear.prev) {\r\n            if (Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.next;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static isEarHashed(ear: any, minX: any, minY: any, invSize: any): boolean {\r\n        var a: any = ear.prev,\r\n            b: any = ear,\r\n            c: any = ear.next;\r\n\r\n        if (Earcut.area(a, b, c) >= 0) return false; // reflex, can't be an ear\r\n\r\n        // triangle bbox; min & max are calculated like this for speed\r\n        var minTX: any = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\r\n            minTY: any = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\r\n            maxTX: any = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\r\n            maxTY: any = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\r\n\r\n        // z-order range for the current triangle bbox;\r\n        var minZ: any = Earcut.zOrder(minTX, minTY, minX, minY, invSize),\r\n            maxZ: any = Earcut.zOrder(maxTX, maxTY, minX, minY, invSize);\r\n\r\n        // first look for points inside the triangle in increasing z-order\r\n        var p: any = ear.nextZ;\r\n\r\n        while (p && p.z <= maxZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.nextZ;\r\n        }\r\n\r\n        // then look for points in decreasing z-order\r\n        p = ear.prevZ;\r\n\r\n        while (p && p.z >= minZ) {\r\n            if (p !== ear.prev && p !== ear.next &&\r\n                Earcut.pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\r\n                Earcut.area(p.prev, p, p.next) >= 0) return false;\r\n            p = p.prevZ;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // go through all polygon nodes and cure small local self-intersections\r\n    //TODO:coverage\r\n    static cureLocalIntersections(start: any, triangles: any, dim: any): any {\r\n        var p: any = start;\r\n        do {\r\n            var a: any = p.prev,\r\n                b: any = p.next.next;\r\n\r\n            if (!Earcut.equals(a, b) && Earcut.intersects(a, p, p.next, b) && Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a)) {\r\n\r\n                triangles.push(a.i / dim);\r\n                triangles.push(p.i / dim);\r\n                triangles.push(b.i / dim);\r\n\r\n                // remove two nodes involved\r\n                Earcut.removeNode(p);\r\n                Earcut.removeNode(p.next);\r\n\r\n                p = start = b;\r\n            }\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return p;\r\n    }\r\n\r\n    // try splitting polygon into two and triangulate them independently\r\n    //TODO:coverage\r\n    static splitEarcut(start: any, triangles: any, dim: any, minX: any, minY: any, invSize: any): void {\r\n        // look for a valid diagonal that divides the polygon into two\r\n        var a: any = start;\r\n        do {\r\n            var b: any = a.next.next;\r\n            while (b !== a.prev) {\r\n                if (a.i !== b.i && Earcut.isValidDiagonal(a, b)) {\r\n                    // split the polygon in two by the diagonal\r\n                    var c: any = Earcut.splitPolygon(a, b);\r\n\r\n                    // filter colinear points around the cuts\r\n                    a = Earcut.filterPoints(a, a.next);\r\n                    c = Earcut.filterPoints(c, c.next);\r\n\r\n                    // run earcut on each half\r\n                    Earcut.earcutLinked(a, triangles, dim, minX, minY, invSize);\r\n                    Earcut.earcutLinked(c, triangles, dim, minX, minY, invSize);\r\n                    return;\r\n                }\r\n                b = b.next;\r\n            }\r\n            a = a.next;\r\n        } while (a !== start);\r\n    }\r\n\r\n    // link every hole into the outer loop, producing a single-ring polygon without holes\r\n    //TODO:coverage\r\n    static eliminateHoles(data: any, holeIndices: any, outerNode: any, dim: any): any {\r\n        var queue: any = [],\r\n            i: any, len: any, start: any, end: any, list: any;\r\n\r\n        for (i = 0, len = holeIndices.length; i < len; i++) {\r\n            start = holeIndices[i] * dim;\r\n            end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n            list = Earcut.linkedList(data, start, end, dim, false);\r\n            if (list === list.next) list.steiner = true;\r\n            queue.push(Earcut.getLeftmost(list));\r\n        }\r\n\r\n        queue.sort(Earcut.compareX);\r\n\r\n        // process holes from left to right\r\n        for (i = 0; i < queue.length; i++) {\r\n            Earcut.eliminateHole(queue[i], outerNode);\r\n            outerNode = Earcut.filterPoints(outerNode, outerNode.next);\r\n        }\r\n\r\n        return outerNode;\r\n    }\r\n\r\n    //TODO:coverage\r\n    static compareX(a: any, b: any): any {\r\n        return a.x - b.x;\r\n    }\r\n\r\n    // find a bridge between vertices that connects hole with an outer ring and and link it\r\n    //TODO:coverage\r\n    static eliminateHole(hole: any, outerNode: any): void {\r\n        outerNode = Earcut.findHoleBridge(hole, outerNode);\r\n        if (outerNode) {\r\n            var b: any = Earcut.splitPolygon(outerNode, hole);\r\n            Earcut.filterPoints(b, b.next);\r\n        }\r\n    }\r\n\r\n    // David Eberly's algorithm for finding a bridge between hole and outer polygon\r\n    //TODO:coverage\r\n    static findHoleBridge(hole: any, outerNode: any): any {\r\n        var p: any = outerNode,\r\n            hx: any = hole.x,\r\n            hy: any = hole.y,\r\n            qx: any = -Infinity,\r\n            m: any;\r\n\r\n        // find a segment intersected by a ray from the hole's leftmost point to the left;\r\n        // segment's endpoint with lesser x will be potential connection point\r\n        do {\r\n            if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\r\n                var x: any = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\r\n                if (x <= hx && x > qx) {\r\n                    qx = x;\r\n                    if (x === hx) {\r\n                        if (hy === p.y) return p;\r\n                        if (hy === p.next.y) return p.next;\r\n                    }\r\n                    m = p.x < p.next.x ? p : p.next;\r\n                }\r\n            }\r\n            p = p.next;\r\n        } while (p !== outerNode);\r\n\r\n        if (!m) return null;\r\n\r\n        if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\r\n\r\n        // look for points inside the triangle of hole point, segment intersection and endpoint;\r\n        // if there are no points found, we have a valid connection;\r\n        // otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n        var stop: any = m,\r\n            mx: any = m.x,\r\n            my: any = m.y,\r\n            tanMin: any = Infinity,\r\n            tan: any;\r\n\r\n        p = m.next;\r\n\r\n        while (p !== stop) {\r\n            if (hx >= p.x && p.x >= mx && hx !== p.x &&\r\n                Earcut.pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\r\n\r\n                tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\r\n\r\n                if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && Earcut.locallyInside(p, hole)) {\r\n                    m = p;\r\n                    tanMin = tan;\r\n                }\r\n            }\r\n\r\n            p = p.next;\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    // interlink polygon nodes in z-order\r\n    //TODO:coverage\r\n    static indexCurve(start: any, minX: any, minY: any, invSize: any): void {\r\n        var p: any = start;\r\n        do {\r\n            if (p.z === null) p.z = Earcut.zOrder(p.x, p.y, minX, minY, invSize);\r\n            p.prevZ = p.prev;\r\n            p.nextZ = p.next;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        p.prevZ.nextZ = null;\r\n        p.prevZ = null;\r\n\r\n        Earcut.sortLinked(p);\r\n    }\r\n\r\n    // Simon Tatham's linked list merge sort algorithm\r\n    // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\n    //TODO:coverage\r\n    static sortLinked(list: any): any {\r\n        var i: any, p: any, q: any, e: any, tail: any, numMerges: any, pSize: any, qSize: any,\r\n            inSize: any = 1;\r\n\r\n        do {\r\n            p = list;\r\n            list = null;\r\n            tail = null;\r\n            numMerges = 0;\r\n\r\n            while (p) {\r\n                numMerges++;\r\n                q = p;\r\n                pSize = 0;\r\n                for (i = 0; i < inSize; i++) {\r\n                    pSize++;\r\n                    q = q.nextZ;\r\n                    if (!q) break;\r\n                }\r\n                qSize = inSize;\r\n\r\n                while (pSize > 0 || (qSize > 0 && q)) {\r\n\r\n                    if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\r\n                        e = p;\r\n                        p = p.nextZ;\r\n                        pSize--;\r\n                    } else {\r\n                        e = q;\r\n                        q = q.nextZ;\r\n                        qSize--;\r\n                    }\r\n\r\n                    if (tail) tail.nextZ = e;\r\n                    else list = e;\r\n\r\n                    e.prevZ = tail;\r\n                    tail = e;\r\n                }\r\n\r\n                p = q;\r\n            }\r\n\r\n            tail.nextZ = null;\r\n            inSize *= 2;\r\n\r\n        } while (numMerges > 1);\r\n\r\n        return list;\r\n    }\r\n\r\n    // z-order of a point given coords and inverse of the longer side of data bbox\r\n    //TODO:coverage\r\n    static zOrder(x: any, y: any, minX: any, minY: any, invSize: any): any {\r\n        // coords are transformed into non-negative 15-bit integer range\r\n        x = 32767 * (x - minX) * invSize;\r\n        y = 32767 * (y - minY) * invSize;\r\n\r\n        x = (x | (x << 8)) & 0x00FF00FF;\r\n        x = (x | (x << 4)) & 0x0F0F0F0F;\r\n        x = (x | (x << 2)) & 0x33333333;\r\n        x = (x | (x << 1)) & 0x55555555;\r\n\r\n        y = (y | (y << 8)) & 0x00FF00FF;\r\n        y = (y | (y << 4)) & 0x0F0F0F0F;\r\n        y = (y | (y << 2)) & 0x33333333;\r\n        y = (y | (y << 1)) & 0x55555555;\r\n\r\n        return x | (y << 1);\r\n    }\r\n\r\n    // find the leftmost node of a polygon ring\r\n    //TODO:coverage\r\n    static getLeftmost(start: any): any {\r\n        var p: any = start,\r\n            leftmost: any = start;\r\n        do {\r\n            if (p.x < leftmost.x) leftmost = p;\r\n            p = p.next;\r\n        } while (p !== start);\r\n\r\n        return leftmost;\r\n    }\r\n\r\n    // check if a point lies within a convex triangle\r\n    static pointInTriangle(ax: any, ay: any, bx: any, by: any, cx: any, cy: any, px: any, py: any): boolean {\r\n        return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\r\n            (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\r\n            (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\r\n    }\r\n\r\n    // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\n    //TODO:coverage\r\n    static isValidDiagonal(a: any, b: any): boolean {\r\n        return a.next.i !== b.i && a.prev.i !== b.i && !Earcut.intersectsPolygon(a, b) &&\r\n            Earcut.locallyInside(a, b) && Earcut.locallyInside(b, a) && Earcut.middleInside(a, b);\r\n    }\r\n\r\n    // signed area of a triangle\r\n    static area(p: any, q: any, r: any): any {\r\n        return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\r\n    }\r\n\r\n    // check if two points are equal\r\n    static equals(p1: any, p2: any): boolean {\r\n        return p1.x === p2.x && p1.y === p2.y;\r\n    }\r\n\r\n    // check if two segments intersect\r\n    //TODO:coverage\r\n    static intersects(p1: any, q1: any, p2: any, q2: any): boolean {\r\n        if ((Earcut.equals(p1, q1) && Earcut.equals(p2, q2)) ||\r\n            (Earcut.equals(p1, q2) && Earcut.equals(p2, q1))) return true;\r\n        return Earcut.area(p1, q1, p2) > 0 !== Earcut.area(p1, q1, q2) > 0 &&\r\n            Earcut.area(p2, q2, p1) > 0 !== Earcut.area(p2, q2, q1) > 0;\r\n    }\r\n\r\n    // check if a polygon diagonal intersects any polygon segments\r\n    //TODO:coverage\r\n    static intersectsPolygon(a: any, b: any): boolean {\r\n        var p: any = a;\r\n        do {\r\n            if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n                Earcut.intersects(p, p.next, a, b)) return true;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return false;\r\n    }\r\n\r\n    // check if a polygon diagonal is locally inside the polygon\r\n    //TODO:coverage\r\n    static locallyInside(a: any, b: any): boolean {\r\n        return Earcut.area(a.prev, a, a.next) < 0 ?\r\n            Earcut.area(a, b, a.next) >= 0 && Earcut.area(a, a.prev, b) >= 0 :\r\n            Earcut.area(a, b, a.prev) < 0 || Earcut.area(a, a.next, b) < 0;\r\n    }\r\n\r\n    // check if the middle point of a polygon diagonal is inside the polygon\r\n    //TODO:coverage\r\n    static middleInside(a: any, b: any): boolean {\r\n        var p: any = a,\r\n            inside: any = false,\r\n            px: any = (a.x + b.x) / 2,\r\n            py: any = (a.y + b.y) / 2;\r\n        do {\r\n            if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\r\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\r\n                inside = !inside;\r\n            p = p.next;\r\n        } while (p !== a);\r\n\r\n        return inside;\r\n    }\r\n\r\n    // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n    // if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\n    //TODO:coverage\r\n    static splitPolygon(a: any, b: any): any {\r\n        var a2: any = new EarcutNode(a.i, a.x, a.y),\r\n            b2: any = new EarcutNode(b.i, b.x, b.y),\r\n            an: any = a.next,\r\n            bp: any = b.prev;\r\n\r\n        a.next = b;\r\n        b.prev = a;\r\n\r\n        a2.next = an;\r\n        an.prev = a2;\r\n\r\n        b2.next = a2;\r\n        a2.prev = b2;\r\n\r\n        bp.next = b2;\r\n        b2.prev = bp;\r\n\r\n        return b2;\r\n    }\r\n\r\n    // create a node and optionally link it with previous one (in a circular doubly linked list)\r\n    static insertNode(i: any, x: any, y: any, last: any): any {\r\n        var p: any = new EarcutNode(i, x, y);\r\n\r\n        if (!last) {\r\n            p.prev = p;\r\n            p.next = p;\r\n\r\n        } else {\r\n            p.next = last.next;\r\n            p.prev = last;\r\n            last.next.prev = p;\r\n            last.next = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    static removeNode(p: any): void {\r\n        p.next.prev = p.prev;\r\n        p.prev.next = p.next;\r\n\r\n        if (p.prevZ) p.prevZ.nextZ = p.nextZ;\r\n        if (p.nextZ) p.nextZ.prevZ = p.prevZ;\r\n    }\r\n    // return a percentage difference between the polygon area and its triangulation area;\r\n    // used to verify correctness of triangulation\r\n    /*earcut.deviation = function (data, holeIndices, dim, triangles) {\r\n        var hasHoles = holeIndices && holeIndices.length;\r\n        var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\r\n    \r\n        var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\r\n        if (hasHoles) {\r\n            for (var i = 0, len = holeIndices.length; i < len; i++) {\r\n                var start = holeIndices[i] * dim;\r\n                var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\r\n                polygonArea -= Math.abs(signedArea(data, start, end, dim));\r\n            }\r\n        }\r\n    \r\n        var trianglesArea = 0;\r\n        for (i = 0; i < triangles.length; i += 3) {\r\n            var a = triangles[i] * dim;\r\n            var b = triangles[i + 1] * dim;\r\n            var c = triangles[i + 2] * dim;\r\n            trianglesArea += Math.abs(\r\n                (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\r\n                (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\r\n        }\r\n    \r\n        return polygonArea === 0 && trianglesArea === 0 ? 0 :\r\n            Math.abs((trianglesArea - polygonArea) / polygonArea);\r\n    };*/\r\n\r\n    static signedArea(data: any, start: any, end: any, dim: any): any {\r\n        var sum: any = 0;\r\n        for (var i: any = start, j: any = end - dim; i < end; i += dim) {\r\n            sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\r\n            j = i;\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    // turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\r\n    /*earcut.flatten = function (data) {\r\n        var dim = data[0][0].length,\r\n            result = {vertices: [], holes: [], dimensions: dim},\r\n            holeIndex = 0;\r\n    \r\n        for (var i = 0; i < data.length; i++) {\r\n            for (var j = 0; j < data[i].length; j++) {\r\n                for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\r\n            }\r\n            if (i > 0) {\r\n                holeIndex += data[i - 1].length;\r\n                result.holes.push(holeIndex);\r\n            }\r\n        }\r\n        return result;\r\n    };*/\r\n}\r\n\r\n","import { Const } from \"../../Const\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { BlendMode } from \"../canvas/BlendMode\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Mesh2D } from \"../utils/Mesh2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\nexport class Submit extends SubmitBase {\r\n\r\n    protected static _poolSize: number = 0;\r\n    protected static POOL: Submit[] = [];\r\n\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0) return 1;//怎么会有_numEle是0的情况?\r\n\r\n        var _tex = this.shaderValue.textureHost;\r\n        if (_tex) {\r\n            var source: any = _tex._getSource();\r\n            if (!source)\r\n                return 1;\r\n            this.shaderValue.texture = source;\r\n        }\r\n\r\n        this._mesh.useMesh();\r\n        //_ib._bind_upload() || _ib._bind();\r\n        //_vb._bind_upload() || _vb._bind();\r\n\r\n        this.shaderValue.upload();\r\n\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            RenderStateContext.setBlend(true);\r\n            this._blendFn();\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        // Stat.renderBatches++;\r\n        // Stat.trianglesFaces += this._numEle / 3;\r\n\r\n        return 1;\r\n    }\r\n    \r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if (SubmitBase.RENDERBASE == this)\r\n            return;\r\n\r\n        if ((--this._ref) < 1) {\r\n            Submit.POOL[Submit._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            this.shaderValue = null;\r\n            //_vb = null;\r\n            //_mesh.destroy();\r\n            this._mesh = null;\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\r\n        o._ref = 1;\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.shaderValue.setValue(context._shader2D);\r\n        var filters: any[] = context._shader2D.filters;\r\n        filters && o.shaderValue.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 创建一个矢量submit\r\n     * @param\tctx\r\n     * @param\tmesh\r\n     * @param\tnumEle\t\t对应drawElement的第二个参数:count\r\n     * @param\toffset\t\tdrawElement的时候的ib的偏移。\r\n     * @param\tsv\t\t\tValue2D\r\n     * @return\r\n     */\r\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\r\n        o._mesh = mesh;\r\n        o._numEle = numEle;\r\n        o._startIdx = mesh.indexNum * 2;\r\n        o._ref = 1;\r\n        o.shaderValue = sv;\r\n        o.shaderValue.setValue(ctx._shader2D);\r\n        var blendType = ctx._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        return o;\r\n    }\r\n}\r\n\r\n\r\n","import { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"../utils/RenderState2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\n\r\n/**\r\n * cache as normal 模式下的生成的canvas的渲染。\r\n */\r\nexport class SubmitCanvas extends SubmitBase {\r\n    /**@internal */\r\n    _matrix: Matrix = new Matrix();\t\t// 用来计算当前的世界矩阵\r\n    canv: Context;\r\n    /**@internal */\r\n    _matrix4: any[] = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n\r\n    static POOL: SubmitCanvas[] = [];\r\n\r\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas {\r\n        var o = (!(SubmitCanvas.POOL as any)._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--(SubmitCanvas.POOL as any)._length];\r\n        o.canv = canvas;\r\n        o._ref = 1;\r\n        o._numEle = 0;\r\n        var v: Value2D = o.shaderValue;\r\n        v.alpha = alpha;\r\n        v.defines.setValue(0);\r\n        filters && filters.length && v.setFilters(filters);\r\n        return o;\r\n    }\r\n\r\n    constructor() {\r\n        super(SubmitBase.TYPE_2D);\r\n        this.shaderValue = new Value2D(0, 0);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    renderSubmit(): number {\r\n        // 下面主要是为了给canvas设置矩阵。因为canvas保存的是没有偏移的。\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n\r\n        var preFilters: any[] = RenderState2D.worldFilters;\r\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\r\n\r\n        var v = this.shaderValue;\r\n        var m = this._matrix;\r\n        var m4 = this._matrix4;\r\n        var mout = Matrix.TEMP;\r\n        Matrix.mul(m, preMatrix, mout);\r\n        m4[0] = mout.a;\r\n        m4[1] = mout.b;\r\n        m4[4] = mout.c;\r\n        m4[5] = mout.d;\r\n        m4[12] = mout.tx;\r\n        m4[13] = mout.ty;\r\n\r\n        RenderState2D.worldMatrix = mout.clone();\r\n        RenderState2D.worldMatrix4 = m4;\r\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\r\n        if (v.filters && v.filters.length) {\r\n            RenderState2D.worldFilters = v.filters;\r\n            RenderState2D.worldShaderDefines = v.defines;\r\n        }\r\n        (this.canv as any)['flushsubmit']();\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix.destroy();\r\n        RenderState2D.worldMatrix = preMatrix;\r\n\r\n        RenderState2D.worldFilters = preFilters;\r\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\r\n        return 1;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var cache = SubmitCanvas.POOL;\r\n            //_vb = null;\r\n            this._mesh = null;\r\n            cache[(cache as any)._length++] = this;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    getRenderType(): number {\r\n        return SubmitBase.TYPE_CANVAS;\r\n    }\r\n\r\n}\r\n{ (SubmitCanvas.POOL as any)._length = 0 }\r\n","import { ISubmit } from \"./ISubmit\";\r\nimport { SubmitKey } from \"./SubmitKey\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { RenderTexture2D } from \"../../resource/RenderTexture2D\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class SubmitTarget implements ISubmit {\r\n    /**@internal */\r\n    _mesh: Mesh2D;\t\t\t//代替 _vb,_ib\r\n    /**@internal */\r\n    _startIdx: number;\r\n    /**@internal */\r\n    _numEle: number;\r\n    shaderValue: Value2D;\r\n    blendType: number = 0;\r\n    /**@internal */\r\n    _ref: number = 1;\r\n    /**@internal */\r\n    _key: SubmitKey = new SubmitKey();\r\n    srcRT: RenderTexture2D;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    static POOL: SubmitTarget[] = [];\r\n    renderSubmit(): number {\r\n        this._mesh.useMesh();\r\n\r\n        var target = this.srcRT;\r\n        if (target) {//??为什么会出现为空的情况\r\n            this.shaderValue.texture = target._getSource();\r\n            this.shaderValue.upload();\r\n            this.blend();\r\n            // Stat.renderBatches++;\r\n            // Stat.trianglesFaces += this._numEle / 3;\r\n            LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    blend(): void {\r\n        if (BlendMode.activeBlendFunction !== BlendMode.fns[this.blendType]) {\r\n            RenderStateContext.setBlend(true);\r\n            BlendMode.fns[this.blendType]();\r\n            BlendMode.activeBlendFunction = BlendMode.fns[this.blendType];\r\n        }\r\n    }\r\n\r\n    getRenderType(): number {\r\n        return 0;\r\n    }\r\n\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            var pool: any = SubmitTarget.POOL;\r\n            pool[pool._length++] = this;\r\n        }\r\n    }\r\n\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D, rt: RenderTexture2D): SubmitTarget {\r\n        var o: SubmitTarget = (SubmitTarget.POOL as any)._length ? SubmitTarget.POOL[--(SubmitTarget.POOL as any)._length] : new SubmitTarget();\r\n        o._mesh = mesh;\r\n        o.srcRT = rt;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._ref = 1;\r\n        o._key.clear();\r\n        o._numEle = 0;\r\n        o.blendType = context._nBlendType;\r\n        o._key.blendShader = o.blendType;\r\n        o.shaderValue = sv;\r\n        o.shaderValue.setValue(context._shader2D);\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.add(ft.type);\r\n            (<TextureSV>sv).colorMat = ft._mat;\r\n            (<TextureSV>sv).colorAlpha = ft._alpha;\r\n        }\r\n        return o;\r\n    }\r\n}\r\n\r\n{\r\n    (SubmitTarget.POOL as any)._length = 0;\r\n}\r\n\r\n\r\n","import { SubmitBase } from \"./SubmitBase\";\r\nimport { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { BlendMode } from \"../canvas/BlendMode\"\r\nimport { BaseShader } from \"../shader/BaseShader\"\r\nimport { Shader } from \"../shader/Shader\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\nimport { TextureSV } from \"../shader/d2/value/TextureSV\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { Mesh2D } from \"../utils/Mesh2D\"\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { MeshTopology } from \"../../RenderEngine/RenderEnum/RenderPologyMode\";\r\nimport { IndexFormat } from \"../../RenderEngine/RenderEnum/IndexFormat\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class SubmitTexture extends SubmitBase {\r\n    private static _poolSize: number = 0;\r\n    private static POOL: SubmitTexture[] = [];\r\n    constructor(renderType: number = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    releaseRender(): void {\r\n        if ((--this._ref) < 1) {\r\n            SubmitTexture.POOL[SubmitTexture._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            //_vb = null;\r\n            this._mesh = null;\t\t//下次create会重新赋值。既然会重新赋值，那还设置干嘛\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n\r\n    renderSubmit(): number {\r\n        if (this._numEle === 0)\r\n            return 1;\r\n\r\n        var tex = this.shaderValue.textureHost;\r\n        if (tex) {//现在fillrect也用的这个submit，所以不必要求有texture\r\n            var source: any = tex ? tex._getSource() : null;\r\n            if (!source) return 1;\r\n        }\r\n\r\n        this._mesh.useMesh();\r\n        this.shaderValue.updateShaderData();\r\n        //如果shader参数都相同，只要提交texture就行了\r\n        var lastSubmit = <SubmitTexture>SubmitBase.preRender;\r\n        var prekey = ((<SubmitBase>SubmitBase.preRender))._key;\r\n        if (this._key.blendShader === 0 && (this._key.submitType === prekey.submitType && this._key.blendShader === prekey.blendShader) && BaseShader.activeShader &&\r\n            (<SubmitBase>SubmitBase.preRender).clipInfoID == this.clipInfoID &&\r\n            lastSubmit.shaderValue.defines._value === this.shaderValue.defines._value && //shader define要相同. \r\n            (this.shaderValue.defines._value & ShaderDefines2D.NOOPTMASK) == 0 //只有基本类型的shader走这个，像blur，glow，filltexture等都不要这样优化\r\n        ) {\r\n            (<Shader>BaseShader.activeShader).uploadTexture2D(source);\r\n        }\r\n        else {\r\n            if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n                RenderStateContext.setBlend(true);\r\n                this._blendFn();\r\n                BlendMode.activeBlendFunction = this._blendFn;\r\n            }\r\n            this.shaderValue.texture = source;\r\n            this.shaderValue.upload();\r\n        }\r\n\r\n        LayaGL.renderDrawContext.drawElements2DTemp(MeshTopology.Triangles, this._numEle, IndexFormat.UInt16, this._startIdx);\r\n\r\n        // Stat.renderBatches++;\r\n        // Stat.trianglesFaces += this._numEle / 3;\r\n        return 1;\r\n    }\r\n\r\n    /*\r\n       create方法只传对submit设置的值\r\n     */\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): SubmitTexture {\r\n        var o = SubmitTexture._poolSize ? SubmitTexture.POOL[--SubmitTexture._poolSize] : new SubmitTexture(SubmitBase.TYPE_TEXTURE);\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._key.submitType = SubmitBase.KEY_DRAWTEXTURE;\r\n        o._ref = 1;\r\n        o._startIdx = mesh.indexNum * Const.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        //sv.setValue(context._shader2D);\r\n        if (context._colorFiler) {\r\n            var ft: ColorFilter = context._colorFiler;\r\n            sv.defines.add(ft.type);\r\n            (<TextureSV>sv).colorMat = ft._mat;\r\n            (<TextureSV>sv).colorAlpha = ft._alpha;\r\n        }\r\n        return o;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\"\r\nimport { Value2D } from \"../shader/d2/value/Value2D\"\r\nimport { SubmitTexture } from \"../submit/SubmitTexture\"\r\nimport { MeshQuadTexture } from \"../utils/MeshQuadTexture\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\n/**\r\n * ...\r\n * @author laoxie\r\n */\r\nexport class CharSubmitCache {\r\n    private static __posPool: any[] = [];\r\n    private static __nPosPool: number = 0;\r\n\r\n    private _data: any[] = [];\r\n    private _ndata: number = 0;\r\n    private _tex: Texture;\r\n    private _imgId: number;\r\n    private _clipid: number = -1;\r\n    private _clipMatrix: Matrix = new Matrix();\r\n    /**@internal */\r\n    _enable: boolean = false;\r\n    /**@internal */\r\n    _colorFiler: ColorFilter;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n\r\n    destroy(): void {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n\r\n    getPos(): any[] {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n\r\n    enable(value: boolean, ctx: Context): void {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n\r\n    submit(ctx: Context): void {\r\n        var n: number = this._ndata;\r\n        if (!n)\r\n            return;\r\n\r\n        var _mesh: MeshQuadTexture = ctx._mesh;\r\n\r\n        var colorFiler: ColorFilter = ctx._colorFiler;\r\n        ctx._colorFiler = this._colorFiler;\r\n        var submit: SubmitTexture = SubmitTexture.create(ctx, _mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\r\n        submit.shaderValue.textureHost = this._tex;\r\n        submit._key.other = this._imgId;\r\n        ctx._colorFiler = colorFiler;\r\n        ctx._copyClipInfo(submit, this._clipMatrix);\r\n        submit.clipInfoID = this._clipid;\r\n\r\n        for (var i: number = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n\r\n        n /= 3;\r\n        submit._numEle += n * 6;\r\n        _mesh.indexNum += n * 6;\r\n        _mesh.vertNum += n * 4;\r\n        ctx._drawCount += n;\r\n        this._ndata = 0;\r\n\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Point } from \"../../maths/Point\"\r\n\r\n// 注意长宽都不要超过256，一个是影响效率，一个是超出表达能力\r\nexport class AtlasGrid {\r\n    atlasID: number = 0;\r\n    private _width: number = 0;\r\n    private _height: number = 0;\r\n    private _texCount: number = 0;\r\n    private _rowInfo: Uint8Array = null;\t\t// 当前行的最大长度\r\n    private _cells: Uint8Array = null;\t\t// 每个格子的信息。{type,w,h} 相当于一个距离场. type =0 表示空闲的。不为0的情况下填充的是宽高（有什么用呢）\r\n    _used: number = 0;\t\t\t\t// 使用率\r\n\r\n    // TODO type 是否有用\r\n\r\n    //------------------------------------------------------------------------------\r\n    constructor(width: number = 0, height: number = 0, id: number = 0) {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n        this.atlasID = id;\r\n        this._init(width, height);\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    addRect(type: number, width: number, height: number, pt: Point): boolean {\r\n        //调用获得应该放在哪 返回值有三个。。bRet是否成功，nX x位置，nY y位置\r\n        if (!this._get(width, height, pt))\r\n            return false;\r\n        //根据获得的x,y填充\r\n        this._fill(pt.x, pt.y, width, height, type);\r\n        this._texCount++;\r\n        //返回是否成功，以及X位置和Y位置\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _release(): void {\r\n        this._cells = null;\r\n        this._rowInfo = null;\r\n    }\r\n\r\n    //------------------------------------------------------------------------------\r\n    private _init(width: number, height: number): boolean {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._release();\r\n        if (this._width == 0) return false;\r\n        this._cells = new Uint8Array(this._width * this._height * 3);\r\n        this._rowInfo = new Uint8Array(this._height);\r\n        this._used = 0;\r\n        this._clear();\r\n        return true;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _get(width: number, height: number, pt: Point): boolean {\r\n        if (width > this._width || height > this._height) {\r\n            return false;\r\n        }\r\n        //定义返回的x,y的位置\r\n        var rx: number = -1;\r\n        var ry: number = -1;\r\n        //为了效率先保存临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeight: number = this._height;\r\n        //定义一个变量为了指向 m_pCells\r\n        var pCellBox: Uint8Array = this._cells;\r\n\r\n        //遍历查找合适的位置  //TODO 下面的方法应该可以优化\r\n        for (var y: number = 0; y < nHeight; y++) {\r\n            //如果该行的空白数 小于 要放入的宽度返回\r\n            if (this._rowInfo[y] < width) continue;\r\n            for (var x: number = 0; x < nWidth;) {\r\n\r\n                var tm: number = (y * nWidth + x) * 3;\r\n\r\n                if (pCellBox[tm] != 0 || pCellBox[tm + 1] < width || pCellBox[tm + 2] < height) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                rx = x;\r\n                ry = y;\r\n                // 检查当前宽度是否能完全放下，即x方向的每个位置都有足够的高度。\r\n                for (var xx: number = 0; xx < width; xx++) {\r\n                    if (pCellBox[3 * xx + tm + 2] < height) {\r\n                        rx = -1;\r\n                        break;\r\n                    }\r\n                }\r\n                // 不行就x继续前进\r\n                if (rx < 0) {\r\n                    x += pCellBox[tm + 1];\r\n                    continue;\r\n                }\r\n                // 找到了\r\n                pt.x = rx;\r\n                pt.y = ry;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _fill(x: number, y: number, w: number, h: number, type: number): void {\r\n        //定义一些临时变量\r\n        var nWidth: number = this._width;\r\n        var nHeghit: number = this._height;\r\n        //代码检查\r\n        this._check((x + w) <= nWidth && (y + h) <= nHeghit);\r\n\r\n        //填充\r\n        for (var yy: number = y; yy < (h + y); ++yy) {\r\n            this._check(this._rowInfo[yy] >= w);\r\n            this._rowInfo[yy] -= w;\r\n            for (var xx: number = 0; xx < w; xx++) {\r\n                var tm: number = (x + yy * nWidth + xx) * 3;\r\n                this._check(this._cells[tm] == 0);\r\n                this._cells[tm] = type;\r\n                this._cells[tm + 1] = w;\r\n                this._cells[tm + 2] = h;\r\n            }\r\n        }\r\n        //调整我左方相邻空白格子的宽度连续信息描述\r\n        if (x > 0) {\r\n            for (yy = 0; yy < h; ++yy) {\r\n                // TODO 下面应该可以优化\r\n                var s: number = 0;\r\n                for (xx = x - 1; xx >= 0; --xx, ++s) {\r\n                    if (this._cells[((y + yy) * nWidth + xx) * 3] != 0) break;\r\n                }\r\n                for (xx = s; xx > 0; --xx) {\r\n                    this._cells[((y + yy) * nWidth + x - xx) * 3 + 1] = xx;\r\n                    this._check(xx > 0);\r\n                }\r\n            }\r\n        }\r\n        //调整我上方相邻空白格子的高度连续信息描述\r\n        if (y > 0) {\r\n            for (xx = x; xx < (x + w); ++xx) {\r\n                // TODO 下面应该可以优化\r\n                s = 0;\r\n                for (yy = y - 1; yy >= 0; --yy, s++) {\r\n                    if (this._cells[(xx + yy * nWidth) * 3] != 0) break;\r\n                }\r\n                for (yy = s; yy > 0; --yy) {\r\n                    this._cells[(xx + (y - yy) * nWidth) * 3 + 2] = yy;\r\n                    this._check(yy > 0);\r\n                }\r\n            }\r\n        }\r\n\r\n        this._used += (w * h) / (this._width * this._height);\r\n    }\r\n\r\n    private _check(ret: boolean): void {\r\n        if (ret == false) {\r\n            console.log(\"xtexMerger 错误啦\");\r\n        }\r\n    }\r\n\r\n    //------------------------------------------------------------------\r\n    private _clear(): void {\r\n        this._texCount = 0;\r\n        for (var y: number = 0; y < this._height; y++) {\r\n            this._rowInfo[y] = this._width;\r\n        }\r\n        for (var i: number = 0; i < this._height; i++) {\r\n            for (var j: number = 0; j < this._width; j++) {\r\n                var tm: number = (i * this._width + j) * 3;\r\n                this._cells[tm] = 0;\r\n                this._cells[tm + 1] = this._width - j;\r\n                this._cells[tm + 2] = this._width - i;\r\n            }\r\n        }\r\n    }\r\n    //------------------------------------------------------------------\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../../layagl/LayaGL\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Resource } from \"../../resource/Resource\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { IRender2DContext } from \"../../RenderEngine/RenderInterface/IRender2DContext\"\r\nimport { Texture2D } from \"../../resource/Texture2D\";\r\nimport { TextureFormat } from \"../../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { FilterMode } from \"../../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../../RenderEngine/RenderEnum/WrapMode\";\r\nimport { TextAtlas } from \"./TextAtlas\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { TextRender } from \"./TextRender\";\r\n\r\nexport class TextTexture extends Resource {\r\n    private static pool: any[] = new Array(10); // 回收用\r\n    private static poolLen: number = 0;\r\n    private static cleanTm: number = 0;\r\n    private _render2DContext: IRender2DContext;\r\n\r\n    /**@internal */\r\n    _source: Texture2D;\t// webgl 贴图\r\n    /**@internal */\r\n    _texW: number = 0;\r\n    /**@internal */\r\n    _texH: number = 0;\r\n    /**@internal */\r\n    _discardTm: number = 0;\t\t\t//释放的时间。超过一定时间会被真正删除\r\n    genID: number = 0; \t\t\t\t// 这个对象会重新利用，为了能让引用他的人知道自己引用的是否有效，加个id\r\n    bitmap: any = { id: 0, _glTexture: null };\t\t\t\t\t\t//samekey的判断用的\r\n    curUsedCovRate: number = 0; \t// 当前使用到的使用率。根据面积算的\r\n    curUsedCovRateAtlas: number = 0; \t// 大图集中的占用率。由于大图集分辨率低，所以会浪费一些空间\r\n    lastTouchTm: number = 0;\r\n    ri: CharRenderInfo = null; \t\t// 如果是独立文字贴图的话带有这个信息\r\n    //public var isIso:Boolean = false;\r\n    get gammaCorrection(): number {\r\n        return (this.bitmap._glTexture as any).gammaCorrection;\r\n    }\r\n    constructor(textureW: number, textureH: number) {\r\n        super();\r\n        this._texW = textureW || TextRender.atlasWidth;\r\n        this._texH = textureH || TextRender.atlasWidth;\r\n        this.bitmap.id = this.id;\r\n        this.lock = true;//防止被资源管理清除\r\n        this._render2DContext = LayaGL.render2DContext;\r\n    }\r\n\r\n    recreateResource(): void {\r\n        if (this._source)\r\n            return;\r\n        var glTex: Texture2D = this._source = new Texture2D(this._texW, this._texH, TextureFormat.R8G8B8A8, false, false, true);\r\n        glTex.setPixelsData(null, true, false);\r\n        glTex.lock = true;\r\n        this.bitmap._glTexture = glTex;\r\n\r\n        this._source.filterMode = FilterMode.Bilinear;\r\n        this._source.wrapModeU = WrapMode.Clamp;\r\n        this._source.wrapModeV = WrapMode.Clamp;\r\n\r\n        //TODO 预乘alpha\r\n        if (TextRender.debugUV) {\r\n            this.fillWhite();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tdata\r\n     * @param\tx\t\t\t拷贝位置。\r\n     * @param\ty\r\n     * @param  uv  \r\n     * @return uv数组  如果uv不为空就返回传入的uv，否则new一个数组\r\n     */\r\n    addChar(data: ImageData, x: number, y: number, uv: any[] = null): any[] {\r\n        //if (!LayaEnv.isConch &&  !__JS__('(data instanceof ImageData)')) {\r\n        if (TextRender.isWan1Wan) {\r\n            return this.addCharCanvas(data, x, y, uv);\r\n        }\r\n        var dt: any = data.data;\r\n        if (data.data instanceof Uint8ClampedArray)\r\n            dt = new Uint8Array(dt.buffer);\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubPixelsData(this._source._texture, dt, 0, false, x, y, data.width, data.height, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        u0 = x / this._texW;\r\n        v0 = y / this._texH;\r\n        u1 = (x + data.width) / this._texW;\r\n        v1 = (y + data.height) / this._texH;\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 玩一玩不支持 getImageData\r\n     * @param\tcanv\r\n     * @param\tx\r\n     * @param\ty\r\n     */\r\n    addCharCanvas(canv: any, x: number, y: number, uv: any[] = null): any[] {\r\n        !this._source && this.recreateResource();\r\n\r\n        LayaGL.textureContext.setTextureSubImageData(this._source._texture, canv, x, y, true, false);\r\n        var u0: number;\r\n        var v0: number;\r\n        var u1: number;\r\n        var v1: number;\r\n        if (LayaEnv.isConch) {\r\n            u0 = x / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = y / this._texH;\r\n            u1 = (x + canv.width) / this._texW;\r\n            v1 = (y + canv.height) / this._texH;\r\n        } else {\r\n            u0 = (x + 1) / this._texW;\t\t// +1 表示内缩一下，反正文字总是有留白。否则会受到旁边的一个像素的影响\r\n            v0 = (y + 1) / this._texH;\r\n            u1 = (x + canv.width - 1) / this._texW;\r\n            v1 = (y + canv.height - 1) / this._texH;\r\n        }\r\n        uv = uv || new Array(8);\r\n        uv[0] = u0, uv[1] = v0;\r\n        uv[2] = u1, uv[3] = v0;\r\n        uv[4] = u1, uv[5] = v1;\r\n        uv[6] = u0, uv[7] = v1;\r\n        return uv;\r\n    }\r\n\r\n    /**\r\n     * 填充白色。调试用。\r\n     */\r\n    fillWhite(): void {\r\n        !this._source && this.recreateResource();\r\n        var dt: Uint8Array = new Uint8Array(this._texW * this._texH * 4);\r\n        ((<any>dt)).fill(0xff);\r\n        LayaGL.textureContext.setTextureImageData(this._source._getSource(), dt as any, true, false);\r\n    }\r\n\r\n    discard(): void {\r\n        // 文字贴图的释放要触发全局cacheas normal无效\r\n        ILaya.stage.setGlobalRepaint();\r\n        // 不再使用问题贴图的重用，否则会有内容清理问题\r\n        this.destroy();\r\n        return;\r\n    }\r\n\r\n    static getTextTexture(w: number, h: number): TextTexture {\r\n        // 不再回收\r\n        return new TextTexture(w, h);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    protected _disposeResource(): void {\r\n        //console.log('destroy TextTexture');\r\n        this._source && this._source.destroy();\r\n        this._source = null;\r\n    }\r\n\r\n    /**\r\n     * 定期清理\r\n     * 为了简单，只有发生 getAPage 或者 discardPage的时候才检测是否需要清理\r\n     */\r\n    static clean(): void {\r\n        var curtm: number = RenderInfo.loopStTm;// Laya.stage.getFrameTm();\r\n        if (TextTexture.cleanTm === 0) TextTexture.cleanTm = curtm;\r\n        if (curtm - TextTexture.cleanTm >= TextRender.checkCleanTextureDt) {\t//每10秒看看pool中的贴图有没有很老的可以删除的\r\n            for (var i: number = 0; i < TextTexture.poolLen; i++) {\r\n                var p: TextTexture = TextTexture.pool[i];\r\n                if (curtm - p._discardTm >= TextRender.destroyUnusedTextureDt) {//超过20秒没用的删掉\r\n                    p.destroy();\t\t\t\t\t//真正删除贴图\r\n                    TextTexture.pool[i] = TextTexture.pool[TextTexture.poolLen - 1];\r\n                    TextTexture.poolLen--;\r\n                    i--;\t//这个还要处理，用来抵消i++\r\n                }\r\n            }\r\n            TextTexture.cleanTm = curtm;\r\n        }\r\n    }\r\n\r\n    touchRect(ri: CharRenderInfo, curloop: number): void {\r\n        if (this.lastTouchTm != curloop) {\r\n            this.curUsedCovRate = 0;\r\n            this.curUsedCovRateAtlas = 0;\r\n            this.lastTouchTm = curloop;\r\n        }\r\n        var texw2: number = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        var gridw2: number = TextAtlas.atlasGridW * TextAtlas.atlasGridW;\r\n        this.curUsedCovRate += (ri.bmpWidth * ri.bmpHeight) / texw2;\r\n        this.curUsedCovRateAtlas += (Math.ceil(ri.bmpWidth / TextAtlas.atlasGridW) * Math.ceil(ri.bmpHeight / TextAtlas.atlasGridW)) / (texw2 / gridw2);\r\n    }\r\n\r\n    // 为了与当前的文字渲染兼容的补丁\r\n    get texture(): any {\r\n        return this;\r\n    }\r\n    /**@internal */\r\n    _getSource(): any {\r\n        return this._source._getSource();\r\n    }\r\n\r\n    // for debug\r\n    drawOnScreen(x: number, y: number): void {\r\n\r\n    }\r\n}\r\n","import { AtlasGrid } from \"./AtlasGrid\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Point } from \"../../maths/Point\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { TextRender } from \"./TextRender\";\r\n\r\n/**\r\n *  文字贴图的大图集。\r\n */\r\nexport class TextAtlas {\r\n    texWidth: number = 1024;\r\n    texHeight: number = 1024;\r\n    private atlasgrid: AtlasGrid;\r\n    //private protectDist: number = 1;\r\n    texture: TextTexture|null = null;\r\n    charMaps: any = {};\t\t// 保存文字信息的字典\r\n    static atlasGridW: number = 16;\r\n\r\n    constructor() {\r\n        this.texHeight = this.texWidth = TextRender.atlasWidth;\r\n        this.texture = TextTexture.getTextTexture(this.texWidth, this.texHeight);\r\n        if (this.texWidth / TextAtlas.atlasGridW > 256) {\r\n            TextAtlas.atlasGridW = Math.ceil(this.texWidth / 256);\r\n        }\r\n        this.atlasgrid = new AtlasGrid(this.texWidth / TextAtlas.atlasGridW, this.texHeight / TextAtlas.atlasGridW, this.texture.id);\r\n    }\r\n\r\n    setProtecteDist(d: number): void {\r\n        //this.protectDist = d;\r\n    }\r\n\r\n    /**\r\n     * 如果返回null，则表示无法加入了\r\n     * 分配的时候优先选择最接近自己高度的节点\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    getAEmpty(w: number, h: number, pt: Point): boolean {\r\n        var find: boolean = this.atlasgrid.addRect(1, Math.ceil(w / TextAtlas.atlasGridW), Math.ceil(h / TextAtlas.atlasGridW), pt);\r\n        if (find) {\r\n            pt.x *= TextAtlas.atlasGridW;\r\n            pt.y *= TextAtlas.atlasGridW;\r\n        }\r\n        return find;\r\n    }\r\n\r\n    /**\r\n     * 大图集格子单元的占用率，老的也算上了。只是表示这个大图集还能插入多少东西。\r\n     */\r\n    get usedRate(): number {\r\n        return this.atlasgrid._used;\r\n    }\r\n    //data 也可能是canvas\r\n    /*\r\n    public function pushData(data:ImageData, node:TextAtlasNode):void {\r\n        texture.addChar(data, node.x, node.y);\r\n    }\r\n    */\r\n\r\n    destroy(): void {\r\n        for (var k in this.charMaps) {\r\n            var ri: CharRenderInfo = this.charMaps[k];\r\n            ri.deleted = true;\r\n        }\r\n        this.texture.discard();\r\n    }\r\n\r\n    printDebugInfo(): void {\r\n\r\n    }\r\n}\r\n\r\n","export class FontInfo {\r\n\r\n    private static _cache: Record<string, FontInfo> = {};\r\n\r\n    /**\r\n     * 解析字体模型\r\n     * @param font \r\n     */\r\n    static parse(font: string): FontInfo {\r\n        if (font === _lastFont) {\r\n            return _lastFontInfo;\r\n        }\r\n        let r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        _lastFont = font;\r\n        _lastFontInfo = r;\r\n        return r;\r\n    }\r\n\r\n    /**@internal */\r\n    _font: string;\r\n    /**@internal */\r\n    _family: string = \"Arial\";\r\n    /**@internal */\r\n    _size: number = 14;\r\n    /**@internal */\r\n    _italic: boolean = false;\r\n    /**@internal */\r\n    _bold: boolean = false;\r\n\r\n    constructor(font: string | null) {\r\n        this.setFont(font || \"14px Arial\");\r\n    }\r\n\r\n    /**\r\n     * 设置字体格式\r\n     * @param value \r\n     */\r\n    setFont(value: string): void {\r\n        this._font = value;\r\n        var words: any[] = value.split(' ');\r\n        var l: number = words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos: number = -1;\r\n        //由于字体可能有空格，例如Microsoft YaHei 所以不能直接取倒数第二个，要先找到px\r\n        for (let i = 0; i < l; i++) {\r\n            if (words[i].indexOf('px') > 0 || words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(words[i]);\r\n                if (this._size <= 0) {\r\n                    console.debug('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        //最后一个是用逗号分开的family\r\n        var fpos: number = szpos + 1;\r\n        var familys: string = words[fpos];\r\n        fpos++;//下一个\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = words.indexOf('italic') >= 0;\r\n        this._bold = words.indexOf('bold') >= 0;\r\n    }\r\n}\r\n\r\nvar _lastFont: string = '';\r\nvar _lastFontInfo: FontInfo;","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { Const } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { NativeWebGLCacheAsNormalCanvas } from \"../webgl/canvas/NativeWebGLCacheAsNormalCanvas\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { BufferState } from \"../webgl/utils/BufferState\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\nimport { NativeRenderTexture2D } from \"./NativeRenderTexture2D\";\r\nimport { Point } from \"../maths/Point\";\r\n\r\n/**\r\n * @internal\r\n */\r\nenum CONTEXT2D_FUNCTION_ID {\r\n    SIZE = 0,\r\n    CLEAR,\r\n    SAVE,\r\n    TRANSFORM,\r\n    ALPHA,\r\n    RESTORE,\r\n    FILL_STYLE,\r\n    FILL_RECT,\r\n    STROKE_STYLE,\r\n    LINE_WIDTH,\r\n    STROKE_RECT,\r\n    FILL_WORD_TEXT,\r\n    DRAW_TEXTURE_SIZE_GRID,\r\n    DRAW_TEXTURE,\r\n    CLIP_RECT,\r\n    DRAW_LINE,\r\n    DRAW_LINES,\r\n    SCALE,\r\n    TRANSLATE,\r\n    ROTATE,\r\n    DRAW_CIRCLE,\r\n    DRAW_PIE,\r\n    DRAW_POLY,\r\n    DRAW_CURVES,\r\n    BEGIN_PATH,\r\n    MOVE_TO,\r\n    LINE_TO,\r\n    ARC_TO,\r\n    CLOSE_PATH,\r\n    FILL,\r\n    STROKE,\r\n    SET_AS_BITMAP,\r\n    DRAW_MASKED,\r\n    DRAW_TRANGLES,\r\n    SET_GLOBAL_COMPOSITE_OPERTAION,\r\n    FILL_WORDS,\r\n    FILL_TEXTURE,\r\n}\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class NativeContext {\r\n    public static readonly ARRAY_BUFFER_TYPE_DATA = 0;          //创建ArrayBuffer时的类型为Data\r\n    public static readonly ARRAY_BUFFER_TYPE_CMD = 1;           //创建ArrayBuffer时的类型为Command\r\n    public static readonly ARRAY_BUFFER_REF_REFERENCE = 0;          //创建ArrayBuffer时的类型为引用\r\n    public static readonly ARRAY_BUFFER_REF_COPY = 1;               //创建ArrayBuffer时的类型为拷贝\r\n\r\n    public _idata: Int32Array;\r\n    public _fdata: Float32Array;\r\n    public _byteArray: Uint8Array;\r\n    public _buffer: ArrayBuffer;\r\n    private _byteLen: number = 0;\r\n\r\n\r\n    static ENUM_TEXTALIGN_DEFAULT: number = 0;\r\n    static ENUM_TEXTALIGN_CENTER: number = 1;\r\n    static ENUM_TEXTALIGN_RIGHT: number = 2;\r\n    private _nativeObj: any;\r\n    private _tempRenderTexture2D: any;\r\n    sprite: any = null;\r\n    private _renderObject3DList: any[] = [];\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\r\n    static __init__(): void {\r\n    }\r\n    constructor() {\r\n        this._nativeObj = new (window as any)._conchContext((LayaGL.renderEngine as any)._nativeObj);\r\n        this._byteLen = 1024 * 512;\r\n        this._tempRenderTexture2D = new NativeRenderTexture2D(0, 0, RenderTargetFormat.R8G8B8A8, RenderTargetFormat.None, false);\r\n        this._init(false);\r\n    }\r\n    _init(isSyncToRenderThread: boolean): void {\r\n        this._buffer = new ArrayBuffer(this._byteLen);\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n\r\n        var bufferConchRef: any = (window as any).webglPlus.createArrayBufferRef(this._buffer, NativeContext.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread, NativeContext.ARRAY_BUFFER_REF_REFERENCE);\r\n        this._nativeObj.setSharedCommandBuffer(bufferConchRef);\r\n        //this._layagl.createArrayBufferRef(this._buffer, NativeCommandEncoder.ARRAY_BUFFER_TYPE_CMD, isSyncToRenderThread);\r\n        this._idata[0] = 1;\r\n    }\r\n    _need(sz: number): void {\r\n        if ((this._byteLen - (this._idata[0] << 2)) >= sz) return;\r\n        this._nativeObj.flushCommand();\r\n        if (sz > this._byteLen) {\r\n            throw \"too big\";\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    set isMain(value: boolean) {\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.isMain = value;\r\n    }\r\n    get isMain() {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.isMain;\r\n    }\r\n    set _targets(target: RenderTexture2D) {\r\n        if (target) {\r\n            this._nativeObj.flushCommand();\r\n            this._nativeObj._target = (target as any)._nativeObj;\r\n        }\r\n    }\r\n    get _targets(): RenderTexture2D {\r\n        this._nativeObj.flushCommand();\r\n        let target = this._nativeObj._target;\r\n        //if (target && !this._tempRenderTexture2D._renderTarget) {\r\n        if (target) {\r\n            this._tempRenderTexture2D.width = this._nativeObj.width;\r\n            this._tempRenderTexture2D.height = this._nativeObj.height;\r\n            this._tempRenderTexture2D._nativeObj = target;\r\n            this._tempRenderTexture2D._renderTarget = target._renderTarget;\r\n            this._tempRenderTexture2D._texture = target._renderTarget._textures[0];\r\n            return this._tempRenderTexture2D;\r\n        }\r\n        return null;\r\n    }\r\n    alpha(value: number): void {\r\n        //this._nativeObj.globalAlpha *= value;\r\n        //this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n        this.globalAlpha *= value;\r\n    }\r\n    flush(): void {\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n        //this._nativeObj.flush();\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.flush();\r\n\r\n    }\r\n    clear(): void {\r\n        //this._nativeObj.clear();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.CLEAR);\r\n        this._nativeObj.flushCommand();\r\n        this._renderObject3DList.length = 0;\r\n    }\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        this._nativeObj.flushCommand();\r\n        if (this._tempRenderTexture2D._nativeObj) {\r\n            this._tempRenderTexture2D._nativeObj._deleteRT = keepRT;\r\n        }\r\n        this._nativeObj.destroy(keepRT);\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n\r\n        if (!NativeContext.const2DRenderCMD) {\r\n            const cmd = NativeContext.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            cmd.addCMD(RenderStateType.BlendType, true);\r\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n            //WebGLContext.setDepthTest(gl, false);\r\n            cmd.addCMD(RenderStateType.DepthTest, false);\r\n            //WebGLContext.setDepthMask(gl, true);\r\n            cmd.addCMD(RenderStateType.DepthMask, true);\r\n            //WebGLContext.setCullFace(gl, false);\r\n            cmd.addCMD(RenderStateType.CullFace, false);\r\n            //WebGLContext.setFrontFace(gl, gl.CCW);\r\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n        }\r\n        NativeContext.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        (window as any).set2DRenderConfig();\r\n        BufferState._curBindedBufferState && BufferState._curBindedBufferState.unBind();\r\n    }\r\n    set globalCompositeOperation(value: string) {\r\n        //this._nativeObj.globalCompositeOperation = value;\r\n        this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, value);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalCompositeOperation;\r\n    }\r\n    set fillStyle(value: any) {\r\n        var c: ColorUtils = ColorUtils.create(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.fillStyle;\r\n    }\r\n    set globalAlpha(value: number) {\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ALPHA, value);\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.globalAlpha;\r\n    }\r\n    save(): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    restore(): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    saveTransform(matrix: Matrix): void {\r\n        //this._nativeObj.save();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n    }\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        //this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n    restoreTransform(matrix: Matrix): void {\r\n        //this._nativeObj.restore();\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n    clipRect(x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.clipRect(x, y, width, height);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.CLIP_RECT, x, y, width, height);\r\n    }\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        //this._nativeObj.transform(a, b, c, d, tx, ty);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, a, b, c, d, tx, ty);\r\n    }\r\n    scale(scaleX: number, scaleY: number): void {\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        //this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width, height, (tex as any).uv);\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width, height\r\n            , (tex as any).uv[0]\r\n            , (tex as any).uv[1]\r\n            , (tex as any).uv[2]\r\n            , (tex as any).uv[3]\r\n            , (tex as any).uv[4]\r\n            , (tex as any).uv[5]\r\n            , (tex as any).uv[6]\r\n            , (tex as any).uv[7]\r\n            , color);\r\n    }\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        if (transform) {\r\n            this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        else {\r\n            this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height|| tex.height, uv || (tex as any).uv);\r\n        }\r\n        this._nativeObj.restore();*/\r\n        this.save();\r\n        this.alpha(alpha);\r\n        var uvs: any = uv || (tex as any).uv;\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx + tx, transform.ty + ty);\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        else {\r\n            this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x + tx, y + ty, width || tex.width, height || tex.height\r\n                , uvs[0]\r\n                , uvs[1]\r\n                , uvs[2]\r\n                , uvs[3]\r\n                , uvs[4]\r\n                , uvs[5]\r\n                , uvs[6]\r\n                , uvs[7]\r\n                , color);\r\n        }\r\n        this.restore();\r\n    }\r\n\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n\r\n        /*this._nativeObj.drawTextureWithSizeGrid((tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat, gx, gy, uv[0]\r\n            ,uv[1]\r\n            ,uv[2]\r\n            ,uv[3]\r\n            ,uv[4]\r\n            ,uv[5]\r\n            ,uv[6]\r\n            ,uv[7]);*/\r\n        this.add_iiffffffffiffffffffffi(\r\n            CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE_SIZE_GRID,\r\n            (tex as any).bitmap._texture.id, tx, ty, width, height, top, right, bottom, left, repeat ? 1 : 0, gx, gy\r\n            , uv[0]\r\n            , uv[1]\r\n            , uv[2]\r\n            , uv[3]\r\n            , uv[4]\r\n            , uv[5]\r\n            , uv[6]\r\n            , uv[7]\r\n            , color);\r\n    }\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix, alpha: number, uv: any[] | null, color: number): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        /*this._nativeObj.save();\r\n        this._nativeObj.globalAlpha = alpha;\r\n        transform && this._nativeObj.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        this._nativeObj.drawTexture((tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height, uv || (tex as any).uv);\r\n        this._nativeObj.restore();*/\r\n\r\n        this.save();\r\n        this.alpha(alpha);\r\n        if (transform) {\r\n            this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\r\n        }\r\n        var uvs: any = uv || (tex as any).uv;\r\n        this.add_iiffffffffffffi(CONTEXT2D_FUNCTION_ID.DRAW_TEXTURE, (tex as any).bitmap._texture.id, x, y, width || tex.width, height || tex.height\r\n            , uvs[0]\r\n            , uvs[1]\r\n            , uvs[2]\r\n            , uvs[3]\r\n            , uvs[4]\r\n            , uvs[5]\r\n            , uvs[6]\r\n            , uvs[7]\r\n            , color);\r\n        this.restore();\r\n\r\n    }\r\n    translate(x: number, y: number): void {\r\n        //this._nativeObj.translate(x, y);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, x, y);\r\n    }\r\n    _transform(mat: any/*Matrix*/, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iffffff(CONTEXT2D_FUNCTION_ID.TRANSFORM, mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.rotate(angle);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_if(CONTEXT2D_FUNCTION_ID.ROTATE, angle);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        //this._nativeObj.translate(pivotX, pivotY);\r\n        //this._nativeObj.scale(scaleX, scaleY);\r\n        //this._nativeObj.translate(-pivotX, -pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, pivotX, pivotY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.SCALE, scaleX, scaleY);\r\n        this.add_iff(CONTEXT2D_FUNCTION_ID.TRANSLATE, -pivotX, -pivotY);\r\n    }\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLine(x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n        this.add_iffffffif(CONTEXT2D_FUNCTION_ID.DRAW_LINE, x, y, fromX, fromY, toX, toY, c1.numColor, lineWidth);\r\n    }\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawLines(x, y, new Float32Array(points), c1.numColor, lineWidth);\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_LINES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawCircle(x, y, radius, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_CIRCLE, x, y, radius, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPie(x, y, radius, startAngle, endAngle, fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth);\r\n        this.add_ifffffiiiif(CONTEXT2D_FUNCTION_ID.DRAW_PIE, x, y, radius, startAngle, endAngle, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth);\r\n    }\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(fillColor);\r\n        var c2: ColorUtils = ColorUtils.create(lineColor);\r\n        //this._nativeObj._drawPoly(x, y, new Float32Array(points), fillColor ? true : false, c1.numColor, lineColor ? true : false, c2.numColor, lineWidth, isConvexPolygon);\r\n        this.add_iffiiiifi_ab(CONTEXT2D_FUNCTION_ID.DRAW_POLY, x, y, fillColor ? 1 : 0, c1.numColor, lineColor ? 1 : 0, c2.numColor, lineWidth, isConvexPolygon ? 1 : 0, new Float32Array(points));\r\n    }\r\n    fillRect(x: number, y: number, width: number, height: number, fillColor: any) {\r\n        if (fillColor != null) {\r\n            var c: ColorUtils = ColorUtils.create(fillColor);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c.numColor);\r\n        }\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n        this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n    }\r\n\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        if (!this.checkTexture(texture)) {\r\n            return;\r\n        }\r\n        var typeValue: number = 0;\r\n        switch (type) {\r\n            case \"repeat\": typeValue = 0; break;\r\n            case \"repeat-x\": typeValue = 1; break;\r\n            case \"repeat-y\": typeValue = 2; break;\r\n            case \"no-repeat\": typeValue = 3; break;\r\n            default: break;\r\n        }\r\n\r\n        this.add_iiffffiffi(CONTEXT2D_FUNCTION_ID.FILL_TEXTURE, (texture as any).bitmap._texture.id, x, y, width, height, typeValue, offset.x, offset.y, color);\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n\r\n        /*if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n   \r\n            this._nativeObj.save(); \r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fillRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }\r\n        if (lineColor != null) {         \r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this._nativeObj.save(); \r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = lineWidth;//lineColor\r\n            this._nativeObj.strokeRect(x, y, width, height);\r\n            this._nativeObj.restore();\r\n        }*/\r\n\r\n        if (fillColor != null) {\r\n            var c1: ColorUtils = ColorUtils.create(fillColor);\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.FILL_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        if (lineColor != null) {\r\n            var c2: ColorUtils = ColorUtils.create(lineColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, lineWidth);\r\n            this.add_iffff(CONTEXT2D_FUNCTION_ID.STROKE_RECT, x, y, width, height);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n    }\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        /*this._nativeObj.beginPath(false);\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this._nativeObj.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this._nativeObj.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this._nativeObj.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this._nativeObj.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this._nativeObj.fillStyle = c1.numColor;\r\n            this._nativeObj.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this._nativeObj.strokeStyle = c2.numColor;\r\n            this._nativeObj.lineWidth = pen.lineWidth || 1;\r\n            this._nativeObj.lineJoin = pen.lineJoin;\r\n            this._nativeObj.lineCap = pen.lineCap;\r\n            this._nativeObj.miterLimit = pen.miterLimit;\r\n            this._nativeObj.stroke();\r\n        }*/\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.BEGIN_PATH, 0);\r\n\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.MOVE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.add_iff(CONTEXT2D_FUNCTION_ID.LINE_TO, x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.add_ifffff(CONTEXT2D_FUNCTION_ID.ARC_TO, x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.add_i(CONTEXT2D_FUNCTION_ID.CLOSE_PATH);\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            var c1: ColorUtils = ColorUtils.create(brush.fillStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.FILL_STYLE, c1.numColor);\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.FILL);\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            var c2: ColorUtils = ColorUtils.create(pen.strokeStyle);\r\n            this.add_ii(CONTEXT2D_FUNCTION_ID.STROKE_STYLE, c2.numColor);\r\n            this.add_if(CONTEXT2D_FUNCTION_ID.LINE_WIDTH, pen.lineWidth || 1);\r\n            //this._nativeObj.lineJoin = pen.lineJoin;\r\n            //this._nativeObj.lineCap = pen.lineCap;\r\n            //this._nativeObj.miterLimit = pen.miterLimit;\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.STROKE);\r\n        }\r\n    }\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        var c1: ColorUtils = ColorUtils.create(lineColor);\r\n\r\n        /*this._nativeObj.beginPath(false);\r\n        this._nativeObj.strokeStyle = c1.numColor;\r\n        this._nativeObj.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this._nativeObj.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this._nativeObj.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this._nativeObj.stroke();*/\r\n        this.add_iffif_ab(CONTEXT2D_FUNCTION_ID.DRAW_CURVES, x, y, c1.numColor, lineWidth, new Float32Array(points));\r\n    }\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        this._nativeObj.flushCommand();\r\n        if (canvas instanceof (NativeWebGLCacheAsNormalCanvas)) {\r\n            this._nativeObj.drawCanvasNormal(canvas._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_NORMAL, canvas._nativeObj.id, x, y, width, height);\r\n        }\r\n        else {\r\n            this._nativeObj.drawCanvasBitmap((canvas.context as any)._nativeObj, x, y, width, height);\r\n            //this.add_iiffff(CONTEXT2D_FUNCTION_ID.DRAW_CANVAS_BITMAP, (canvas.context as any)._nativeObj.id, x, y, width, height);\r\n        }\r\n    }\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, 0, text, font)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, 0, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, 0, nTextAlign, font);\r\n        }\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(null);\r\n        if (typeof (text) === 'string') {\r\n            //this._nativeObj.fillWords(text, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, text, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((text as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (text as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(borderColor);\r\n        if (typeof (txt) === 'string') {\r\n            //this._nativeObj.fillWords(txt, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, txt, font);\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((txt as any)._nativeObj.id, x, y, font, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (txt as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, font);\r\n        }\r\n    }\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, align: string): void {\r\n        var nTextAlign = 0;\r\n        switch (align) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, nTextAlign, x, y, lineWidth, data, fontStr)\r\n        }\r\n        else {\r\n            //this._nativeObj.fillWordText((data as any)._nativeObj.id, x, y, fontStr, c1.numColor, c2.numColor, lineWidth, nTextAlign);\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, nTextAlign, fontStr);\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: any, color: string, strokeColor: string | null, lineWidth: number, textAlign: number, underLine: number = 0): void {\r\n        var c1: ColorUtils = ColorUtils.create(color);\r\n        var c2: ColorUtils = ColorUtils.create(strokeColor);\r\n\r\n        if (typeof (data) === 'string') {\r\n            //this._nativeObj.fillWords(data, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n            this.add_iiiifff_String_String(CONTEXT2D_FUNCTION_ID.FILL_WORDS, c1.numColor, c2.numColor, textAlign, x, y, lineWidth, data, (fontObj as any)._font)\r\n        }\r\n        else {\r\n\r\n            this.add_iiffiifi_String(CONTEXT2D_FUNCTION_ID.FILL_WORD_TEXT, (data as any)._nativeObj.id, x, y, c1.numColor, c2.numColor, lineWidth, textAlign, (fontObj as any)._font);\r\n            //this._nativeObj.fillWordText(data._nativeObj.id, x, y, (fontObj as any)._font, c1.numColor, c2.numColor, lineWidth, textAlign);\r\n        }\r\n    }\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n        if (!this.checkTexture(tex)) {\r\n            return;\r\n        }\r\n        var m: Matrix = matrix ? matrix : this._tmpMatrix;\r\n        if (blendMode != null) {\r\n\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.SAVE);\r\n            //to do ColorFilter \r\n            this.add_i_String(CONTEXT2D_FUNCTION_ID.SET_GLOBAL_COMPOSITE_OPERTAION, blendMode);\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n            this.add_i(CONTEXT2D_FUNCTION_ID.RESTORE);\r\n        }\r\n        else {\r\n            this.add_iiifffffffff_ab_ab_ab(CONTEXT2D_FUNCTION_ID.DRAW_TRANGLES, (tex as any).bitmap._texture.id, colorNum\r\n                , x\r\n                , y\r\n                , alpha\r\n                , m.a, m.b, m.c, m.d, m.tx, m.ty\r\n                , (vertices instanceof Array) ? Float32Array.from(vertices) : vertices\r\n                , (uvs instanceof Array) ? Float32Array.from(uvs) : uvs\r\n                , (indices instanceof Array) ? Uint16Array.from(indices) : indices\r\n            );\r\n        }\r\n    }\r\n    drawMask(w: number, h: number): any {\r\n        //return this._nativeObj.drawMask(w, h);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawMask(w, h);\r\n    }\r\n    drawMasked(x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMasked(x, y, w, h);\r\n        this.add_iffff(CONTEXT2D_FUNCTION_ID.DRAW_MASKED, x, y, w, h);\r\n    }\r\n    drawMaskComposite(rt: any, x: number, y: number, w: number, h: number): void {\r\n        //this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawMaskComposite(rt, x, y, w, h);\r\n    }\r\n    set asBitmap(value: boolean) {\r\n        //this._nativeObj.setAsBitmap(value);\r\n        this.add_ii(CONTEXT2D_FUNCTION_ID.SET_AS_BITMAP, value ? 1 : 0);\r\n    }\r\n    size(w: number, h: number): void {\r\n        //this._nativeObj.size(w, h);\r\n        this.add_iii(CONTEXT2D_FUNCTION_ID.SIZE, w, h);\r\n    }\r\n    setColorFilter(filter: ColorFilter): void {\r\n        /*if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }*/\r\n        this._nativeObj.flushCommand();\r\n        if (filter) {\r\n            this._nativeObj.setColorFilter(true, filter._alpha, filter._mat);\r\n        }\r\n        else {\r\n            this._nativeObj.setColorFilter(false, null, null);\r\n        }\r\n    }\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, matrix: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1): boolean {\r\n        //return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty, blend);\r\n        this._nativeObj.flushCommand();\r\n        return this._nativeObj.drawTarget(rt, x, y, width, height, matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty, blend);\r\n    }\r\n    drawTargetBlurFilter(rt: RenderTexture2D, x: number, y: number, width: number, height: number, strength: number): void {\r\n        //this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawTargetBlurFilter(rt, x, y, width, height, strength);\r\n    }\r\n    get _curMat(): Matrix {\r\n        /*var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];*/\r\n\r\n        this._nativeObj.flushCommand();\r\n\r\n        var data: any = this._nativeObj._curMat;\r\n        var mat: Matrix = Matrix.create();\r\n        mat.a = data[0];\r\n        mat.b = data[1];\r\n        mat.c = data[2];\r\n        mat.d = data[3];\r\n        mat.tx = data[4];\r\n        mat.ty = data[5];\r\n\r\n        return mat;\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        //this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n        this._renderObject3DList.push((scene3D as any)._nativeObj);\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.addRenderObject3D((scene3D as any)._nativeObj);\r\n    }\r\n    pushRT(): void {\r\n        //this._nativeObj.pushRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.pushRT();\r\n    }\r\n    popRT(): void {\r\n        //this._nativeObj.popRT();\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.popRT();\r\n    }\r\n    useRT(rt: RenderTexture2D): void {\r\n        //this._nativeObj.useRT(rt);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.useRT(rt);\r\n    }\r\n    drawFilter(out: RenderTexture2D, src: RenderTexture2D, x: number, y: number, width: number, height: number): void {\r\n        //this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n\r\n        this._nativeObj.flushCommand();\r\n        this._nativeObj.drawFilter(out, src, x, y, width, height);\r\n    }\r\n    protected checkTexture(tex: Texture): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    add_i(i: number): void {\r\n        this._need(4);\r\n        this._idata[this._idata[0]++] = i;\r\n    }\r\n    add_ii(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_if(a: number, b: number): void {\r\n        this._need(8);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iff(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var i: number = this._idata[0];\r\n        this._idata[i++] = a;\r\n        this._fdata[i++] = b;\r\n        this._fdata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffif(a: number, b: number, c: number, d: number, e: number) {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n\r\n    add_iffff(a: number, b: number, c: number, d: number, e: number): void {\r\n        this._need(20);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iii(a: number, b: number, c: number): void {\r\n        this._need(12);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = this._idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffff(a: number, b: number, c: number, d: number, e: number, f: number) {\r\n        this._need(24);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number): void {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_ifffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        idata[i++] = e;\r\n        idata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_ifffffiiiif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number): void {\r\n        this._need(44);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        idata[i++] = g;\r\n        idata[i++] = h;\r\n        idata[i++] = ii;\r\n        idata[i++] = j;\r\n        fdata[i++] = k;\r\n        idata[0] = i;\r\n    }\r\n    add_iffffffif(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number): void {\r\n        this._need(36);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        idata[i++] = h;\r\n        fdata[i++] = ii;\r\n        idata[0] = i;\r\n    }\r\n    add_String(ab: ArrayBuffer): void {\r\n        var len: number = ab.byteLength;\r\n        this._need(len + 4);\r\n        this._idata[this._idata[0]++] = len;\r\n        if (len == 0) return;\r\n        var uint8array: Uint8Array = new Uint8Array(ab);\r\n        this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        this._idata[0] += len / 4;\r\n    }\r\n    add_iffiiiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number) {\r\n        this._need(45);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        fdata[i++] = b;\r\n        fdata[i++] = c;\r\n        this._idata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        this._idata[i++] = g;\r\n        fdata[i++] = h;\r\n        this._idata[i++] = ii;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) {\r\n        this._need(32);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        this._idata[i++] = e;\r\n        this._idata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[i++] = h;\r\n        this._idata[0] = i;\r\n    }\r\n    add_i_String(a: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(4 + ab.byteLength + 4);\r\n        this.add_i(a);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff(a: number, b: number, c: number, d: number, e: number, f: number, g: number) {\r\n        this._need(28);\r\n        var i: number = this._idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        this._idata[i++] = a;\r\n        this._idata[i++] = b;\r\n        this._idata[i++] = c;\r\n        this._idata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        this._idata[0] = i;\r\n    }\r\n    add_iiffiifi_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, str: string): void {\r\n        var ab: ArrayBuffer = (window as any).conch.strTobufer(str);\r\n        this._need(32 + ab.byteLength + 4);\r\n        this.add_iiffiifi(a, b, c, d, e, f, g, h);\r\n        this.add_String(ab);\r\n    }\r\n    add_iiiifff_String_String(a: number, b: number, c: number, d: number, e: number, f: number, g: number, str0: string, str1: string): void {\r\n        var ab0: ArrayBuffer = (window as any).conch.strTobufer(str0);\r\n        var ab1: ArrayBuffer = (window as any).conch.strTobufer(str1);\r\n        this._need(28 + (ab0.byteLength + 4) + (ab1.byteLength + 4));\r\n\r\n        this.add_iiiifff(a, b, c, d, e, f, g);\r\n        this.add_String(ab0);\r\n        this.add_String(ab1);\r\n    }\r\n    add_iiffffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number, k: number, l: number, m: number, n: number, o: number) {\r\n        this._need(60);\r\n        var idata: Int32Array = this._idata;\r\n        var i: number = idata[0];\r\n        var fdata: Float32Array = this._fdata;\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        idata[i++] = o;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffffffiffffffffffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, m: number, n: number, o: number, p: number, q: number, r: number, s: number, t: number\r\n        , u: number, v: number) {\r\n        this._need(88);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        fdata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        idata[i++] = k;\r\n        fdata[i++] = l;\r\n        fdata[i++] = m;\r\n        fdata[i++] = n;\r\n        fdata[i++] = o;\r\n        fdata[i++] = p;\r\n        fdata[i++] = q;\r\n        fdata[i++] = r;\r\n        fdata[i++] = s;\r\n        fdata[i++] = t;\r\n        fdata[i++] = u;\r\n        idata[i++] = v;\r\n        idata[0] = i;\r\n    }\r\n    add_iiifffffffff(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number) {\r\n        this._need(48);\r\n        var idata: Int32Array = this._idata;\r\n        var fdata: Float32Array = this._fdata;\r\n        var i: number = idata[0];\r\n        idata[i++] = a;\r\n        idata[i++] = b;\r\n        idata[i++] = c;\r\n        fdata[i++] = d;\r\n        fdata[i++] = e;\r\n        fdata[i++] = f;\r\n        fdata[i++] = g;\r\n        fdata[i++] = h;\r\n        fdata[i++] = ii;\r\n        fdata[i++] = j;\r\n        fdata[i++] = k;\r\n        fdata[i++] = l;\r\n        idata[0] = i;\r\n    }\r\n    add_iiffffiffi(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number): void {\r\n        this._need(40);\r\n        let idata: Int32Array = this._idata;\r\n        let fdata: Float32Array = this._fdata;\r\n        var idx: number = idata[0];\r\n        idata[idx++] = a;\r\n        idata[idx++] = b;\r\n        fdata[idx++] = c;\r\n        fdata[idx++] = d;\r\n        fdata[idx++] = e;\r\n        fdata[idx++] = f;\r\n        idata[idx++] = g;\r\n        fdata[idx++] = h;\r\n        fdata[idx++] = i;\r\n        idata[idx++] = j;\r\n        idata[0] = idx;\r\n    }\r\n\r\n    add_iiifffffffff_ab_ab_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, j: number\r\n        , k: number, l: number, arraybuffer0: any, arraybuffer1: any, arraybuffer2: any) {\r\n\r\n        var nAlignLength0 = this.getAlignLength(arraybuffer0);\r\n        var nAlignLength1 = this.getAlignLength(arraybuffer1);\r\n        var nAlignLength2 = this.getAlignLength(arraybuffer2);\r\n        d\r\n        this._need(48 + (nAlignLength0 + 4) + (nAlignLength1 + 4) + (nAlignLength2 + 4));\r\n\r\n        this.add_iiifffffffff(a, b, c, d, e, f, g, h, ii, j, k, l);\r\n        this.wab(arraybuffer0, arraybuffer0.byteLength, nAlignLength0, 0);\r\n        this.wab(arraybuffer1, arraybuffer1.byteLength, nAlignLength1, 0);\r\n        this.wab(arraybuffer2, arraybuffer2.byteLength, nAlignLength2, 0);\r\n\r\n    }\r\n    wab(arraybuffer: any, length: number, nAlignLength: number, offset?: number): void {\r\n        offset = offset ? offset : 0;\r\n        this._need(nAlignLength + 4);\r\n        //写入长度\r\n        this._idata[this._idata[0]++] = length;\r\n        //写入数据\r\n        var uint8array: Uint8Array = null;\r\n        if (arraybuffer instanceof Float32Array && offset == 0) {\r\n            this._fdata.set(arraybuffer, this._idata[0]);\r\n        }\r\n        else {\r\n            if (arraybuffer instanceof ArrayBuffer) {\r\n                uint8array = new Uint8Array(arraybuffer, offset, length);\r\n            }\r\n            else if (arraybuffer.buffer) {\r\n                uint8array = new Uint8Array(arraybuffer.buffer, offset + arraybuffer.byteOffset, length);\r\n            }\r\n            else {\r\n                console.log(\"not arraybuffer/dataview\");\r\n                return;\r\n            }\r\n            this._byteArray.set(uint8array, this._idata[0] * 4);\r\n        }\r\n        this._idata[0] += nAlignLength / 4;\r\n    }\r\n    getAlignLength(data: any): number {\r\n        var byteLength = data.byteLength;\r\n        return (byteLength + 3) & 0xfffffffc;\r\n    }\r\n    add_iif_ab(a: number, b: number, c: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(12 + nAlignLength + 4);\r\n        this.add_iff(a, b, c);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffif_ab(a: number, b: number, c: number, d: number, e: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(20 + nAlignLength + 4);\r\n        this.add_iffif(a, b, c, d, e);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n    add_iffiiiifi_ab(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, ii: number, arraybuffer: any) {\r\n        var nAlignLength = this.getAlignLength(arraybuffer);\r\n        this._need(45 + nAlignLength + 4);\r\n        this.add_iffiiiifi(a, b, c, d, e, f, g, h, ii);\r\n        this.wab(arraybuffer, arraybuffer.byteLength, nAlignLength, 0);\r\n    }\r\n} \r\n","import { Context } from \"../resource/Context\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WordText {\r\n    text: string;\r\n    width: number;\t//整个WordText的长度。-1表示没有计算还。\r\n    pageChars: any[];\t//把本对象的字符按照texture分组保存的文字信息。里面又是一个数组。具体含义见使用的地方。\r\n    pagecharsCtx: Context = null;  // 上面缓存的时候用的ctx。跨ctx的时候（例如drawToTexture）要清理\r\n    scalex;\t// 缓存的时候的缩放\r\n    scaley;\r\n\r\n    _nativeObj: any;\r\n    _splitRender: boolean;\t// 强制拆分渲染\r\n\r\n    constructor() {\r\n        if ((window as any).conch && !(window as any).conchConfig.conchWebGL)\r\n            this._nativeObj = new (window as any)._conchWordText();\r\n        else {\r\n            this.width = -1;\r\n            this.pageChars = [];\r\n            this.scalex = 1;\r\n            this.scaley = 1;\r\n        }\r\n    }\r\n\r\n    setText(txt: string): void {\r\n        this.text = txt;\r\n        if (this._nativeObj)\r\n            this._nativeObj._text = txt;\r\n        else\r\n            this.width = -1;\r\n        this.cleanCache();\r\n    }\r\n\r\n    toString(): string {\r\n        return this.text;\r\n    }\r\n\r\n    get length(): number {\r\n        return this.text ? this.text.length : 0;\r\n    }\r\n\r\n    /**\r\n     * 自己主动清理缓存，需要把关联的贴图删掉\r\n     * 不做也可以，textrender会自动清理不用的\r\n     * TODO 重用\r\n     */\r\n    cleanCache(): void {\r\n        if (this._nativeObj) {\r\n            this._nativeObj.cleanCache();\r\n            return;\r\n        }\r\n\r\n        // 如果是独占文字贴图的，需要删掉\r\n        //TODO 这个效果不对。会造成文字错乱\r\n        let chars = this.pageChars;\r\n        if (chars.length > 0) {\r\n            for (let p of chars) {\r\n                let tex = p.tex;\r\n                let words = p.words;\r\n                if (words.length == 1 && tex && tex.ri) {// 如果有ri表示是独立贴图\r\n                    tex.destroy();\r\n                }\r\n            }\r\n\r\n            this.pageChars = [];\r\n        }\r\n        this.scalex = 1;\r\n        this.scaley = 1;\r\n    }\r\n\r\n    get splitRender() {\r\n        return this._splitRender;\r\n    }\r\n\r\n    set splitRender(value: boolean) {\r\n        this._splitRender = value;\r\n        if (this._nativeObj)\r\n            this._nativeObj.splitRender = value;\r\n    }\r\n}","import { RenderInfo } from \"../../renders/RenderInfo\"\r\n/**\r\n * TODO如果占用内存较大,这个结构有很多成员可以临时计算\r\n */\r\nexport class CharRenderInfo {\r\n    char: string = '';\t\t\t\t// 调试用\r\n    tex: any;\t\t\t\t\t\t//\r\n    deleted: boolean = false; \t// 已经被删除了\r\n    uv: any[] = new Array(8);// [0, 0, 1, 1];\t\t//uv\r\n    pos: number = 0;\t\t\t\t\t//数组下标\r\n    width: number;\t\t\t\t\t//字体宽度。测量的宽度，用来排版。没有缩放\r\n    height: number; \t\t\t\t//字体高度。没有缩放\r\n    bmpWidth: number;\t\t\t\t//实际图片的宽度。可能与排版用的width不一致。包含缩放和margin\r\n    bmpHeight: number;\r\n    orix: number = 0;\t\t\t\t// 原点位置，通常都是所在区域的左上角\r\n    oriy: number = 0;\r\n    touchTick: number = 0;\t\t//\r\n    isSpace: boolean = false;\t\t//是否是空格，如果是空格，则只有width有效\r\n    touch(): void {\r\n        var curLoop: number = RenderInfo.loopCount;\r\n        if (this.touchTick != curLoop) {// 这个保证每帧只调用一次\r\n            this.tex.touchRect(this, curLoop);\r\n        }\r\n        this.touchTick = curLoop;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nexport class ICharRender {\r\n    fontsz = 16;\r\n    getWidth(font: string, str: string): number { return 0; }\r\n\r\n    scale(sx: number, sy: number): void {\r\n    }\r\n\r\n    get canvasWidth(): number {\r\n        return 0;\r\n    }\r\n\r\n    set canvasWidth(w: number) {\r\n\r\n    }\r\n    /**\r\n     *TODO stroke \r\n     * @param\tchar\r\n     * @param\tfont\r\n     * @param\tsize  返回宽高\r\n     * @return\r\n     */\r\n    getCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[]|null = null): ImageData|null {\r\n        return null;\r\n    }\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { Browser } from \"../../utils/Browser\";\r\nexport class CharRender_Canvas extends ICharRender {\r\n\tprivate static canvas: any = null;// HTMLCanvasElement;\r\n\tprivate ctx: any = null;\r\n\tprivate lastScaleX = 1.0;\r\n\tprivate lastScaleY = 1.0;\r\n\t//private needResetScale: boolean = false;\r\n\tprivate maxTexW = 0;\r\n\tprivate maxTexH = 0;\r\n\tprivate scaleFontSize = true;\r\n\tprivate showDbgInfo = false;\r\n\tprivate supportImageData = true;\r\n\tconstructor(maxw: number, maxh: number, scalefont: boolean = true, useImageData: boolean = true, showdbg: boolean = false) {\r\n\t\tsuper();\r\n\t\tthis.maxTexW = maxw;\r\n\t\tthis.maxTexH = maxh;\r\n\t\tthis.scaleFontSize = scalefont;\r\n\t\tthis.supportImageData = useImageData;\r\n\t\tthis.showDbgInfo = showdbg;\r\n\t\tif (!CharRender_Canvas.canvas) {\r\n\t\t\tCharRender_Canvas.canvas = Browser.createElement('canvas');\r\n\t\t\tCharRender_Canvas.canvas.width = 1024;\r\n\t\t\tCharRender_Canvas.canvas.height = 512;\r\n\t\t\t//这个canvas是用来获取字体渲染结果的。由于不可见canvas的字体不能小于12，所以要加到body上\r\n\t\t\t//为了避免被发现，设一个在屏幕外的绝对位置。\r\n\t\t\tCharRender_Canvas.canvas.style.left = \"-10000px\";\r\n\t\t\tCharRender_Canvas.canvas.style.position = \"absolute\";\r\n\t\t\tdocument.body.appendChild(CharRender_Canvas.canvas);;\r\n\t\t\tthis.ctx = CharRender_Canvas.canvas.getContext('2d', { willReadFrequently: true });\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tget canvasWidth(): number {\r\n\t\treturn CharRender_Canvas.canvas.width;\r\n\t}\r\n\r\n\t/**\r\n\t * @override\r\n\t */\r\n\tset canvasWidth(w: number) {\r\n\t\tif (CharRender_Canvas.canvas.width == w)\r\n\t\t\treturn;\r\n\t\tCharRender_Canvas.canvas.width = w;\r\n\t\tif (w > 2048) {\r\n\t\t\tconsole.warn(\"画文字设置的宽度太大，超过2048了\");\r\n\t\t}\r\n\t\t// 重新恢复一下缩放\r\n\t\tthis.ctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\tthis.ctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\tgetWidth(font: string, str: string): number {\r\n\t\tif (!this.ctx) return 0;\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\tif (this.ctx._lastFont != font) {\r\n\t\t\tthis.ctx.font = font;\r\n\t\t\tthis.ctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\t\treturn this.ctx.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tif (!this.supportImageData) {// supportImageData==false表示用 getCharCanvas，这个自己管理缩放\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.lastScaleX != sx || this.lastScaleY != sy) {\r\n\t\t\tthis.ctx.setTransform(sx, 0, 0, sy, 0, 0);\t// 强制清理缩放\t\t\t\r\n\t\t\tthis.lastScaleX = sx;\r\n\t\t\tthis.lastScaleY = sy;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tcri  修改里面的width。\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData | null {\r\n\t\tif (!this.supportImageData)\r\n\t\t\treturn this.getCharCanvas(char, font, lineWidth, colStr, strokeColStr, cri, margin_left, margin_top, margin_right, margin_bottom);\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += (margin_top + margin_bottom) * this.lastScaleY;\r\n\t\tw = Math.ceil(w);\r\n\t\th = Math.ceil(h);\r\n\t\tw = Math.min(w, CharRender_Canvas.canvas.width);\r\n\t\th = Math.min(h, CharRender_Canvas.canvas.height);\r\n\r\n\t\tvar clearW: number = w + lineWidth * 2 + 1;\r\n\t\tvar clearH: number = h + lineWidth * 2 + 1;\r\n\t\tif (rect) {// measureText可能会小于请求的区域。 rect[2]可能为-1\r\n\t\t\tclearW = Math.max(clearW, rect[0] + rect[2] + 1);\r\n\t\t\tclearH = Math.max(clearH, rect[1] + rect[3] + 1);\r\n\t\t}\r\n\t\tctx.clearRect(0, 0, clearW / this.lastScaleX + 1, clearH / this.lastScaleY + 1);\r\n\t\tctx.save();\r\n\t\t//ctx.textAlign = \"end\";\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\t//解决默认字体Arial下，描边会出现尖角的问题\r\n\t\t\tctx.lineJoin = \"round\";\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\tctx.strokeText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\t\tif (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, margin_left, margin_top + sz / 2);\r\n\t\t}\r\n\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(1, 1, w - 2, h - 2);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(margin_left, margin_top, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\t//ctx.restore();\r\n\t\tif (rect) {\r\n\t\t\tif (rect[2] == -1) rect[2] = Math.ceil((cri.width + lineWidth * 2) * this.lastScaleX); // 这个没有考虑左右margin\r\n\t\t\tif (rect[2] <= 0) rect[2] = 1;\t// 有的字体在处理不存在文字的时候，测量宽度为0，会导致getImageData出错\r\n\t\t}\r\n\t\tvar imgdt: ImageData = rect ? (ctx.getImageData(rect[0], rect[1], rect[2], rect[3] + 1)) : (ctx.getImageData(0, 0, w, h + 1));\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = imgdt.width;\r\n\t\tcri.bmpHeight = imgdt.height;\r\n\t\treturn imgdt;\r\n\t}\r\n\r\n\tgetCharCanvas(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, cri: CharRenderInfo, margin_left: number, margin_top: number, margin_right: number, margin_bottom: number): ImageData {\r\n\t\tvar ctx: any = this.ctx;\r\n\r\n\t\t//ctx.save();\r\n\t\t//由于大家公用一个canvas，所以需要在选中的时候做一些配置。\r\n\t\t//跟_lastFont比较容易出错，所以比较ctx.font\r\n\t\tif (ctx.font != font) {// ctx._lastFont != font) {\t问题：ctx.font=xx 然后ctx==xx可能返回false，例如可能会给自己加\"\",当字体有空格的时候\r\n\t\t\tctx.font = font;\r\n\t\t\tctx._lastFont = font;\r\n\t\t\t//console.log('use font ' + font);\r\n\t\t}\r\n\r\n\t\tcri.width = ctx.measureText(char).width;//排版用的width是没有缩放的。后面会用矩阵缩放\r\n\t\tvar w: number = cri.width * this.lastScaleX;//w h 只是clear用的。所以要缩放\r\n\t\tvar h: number = cri.height * this.lastScaleY;\r\n\t\tw += (margin_left + margin_right) * this.lastScaleX;\r\n\t\th += ((margin_top + margin_bottom) * this.lastScaleY + 1);\t// 这个+1只是为了让测试能通过。确实应该加点高度，否则会被裁掉一部分，但是加多少还没找到方法。\r\n\t\tw = Math.min(w, this.maxTexW);\r\n\t\th = Math.min(h, this.maxTexH);\r\n\r\n\t\t//if (canvas.width != (w + 1) || canvas.height != (h + 1)) {\r\n\t\tCharRender_Canvas.canvas.width = Math.min(w + 1, this.maxTexW);\r\n\t\tCharRender_Canvas.canvas.height = Math.min(h + 1, this.maxTexH);\r\n\t\tctx.font = font;\r\n\t\t//}\r\n\t\tctx.clearRect(0, 0, w + 1 + lineWidth, h + 1 + lineWidth);\r\n\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\t// 强制清理缩放\r\n\t\tctx.save();\r\n\t\tif (this.scaleFontSize) {\r\n\t\t\t//这里的缩放会导致与上面的缩放同时起作用。所以上面保护\r\n\t\t\tctx.scale(this.lastScaleX, this.lastScaleY);\r\n\t\t}\r\n\t\tctx.translate(margin_left, margin_top);\r\n\t\tctx.textAlign = \"left\";\r\n\r\n\t\tvar sz = this.fontsz;\r\n\t\tctx.textBaseline = \"middle\";\r\n\t\t//ctx.translate(CborderSize, CborderSize);\r\n\t\t//ctx.scale(xs, ys);\r\n\t\tif (lineWidth > 0) {\r\n\t\t\tctx.strokeStyle = strokeColStr;\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.lineWidth = lineWidth;\r\n\t\t\t//ctx.strokeText(char, margin_left, margin_top);\r\n\t\t\tif (ctx.fillAndStrokeText) {\r\n\t\t\t\tctx.fillAndStrokeText(char, 0, sz / 2);\r\n\t\t\t} else {\r\n\t\t\t\tctx.strokeText(char, 0, sz / 2);\r\n\t\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t\t}\r\n\t\t} else if (colStr) {\r\n\t\t\tctx.fillStyle = colStr;\r\n\t\t\tctx.fillText(char, 0, sz / 2);\r\n\t\t}\r\n\t\tif (this.showDbgInfo) {\r\n\t\t\tctx.strokeStyle = '#ff0000';\r\n\t\t\tctx.strokeRect(0, 0, w, h);\r\n\t\t\tctx.strokeStyle = '#00ff00';\r\n\t\t\tctx.strokeRect(0, 0, cri.width, cri.height);//原始大小，没有缩放的\r\n\t\t}\r\n\t\tctx.restore();\r\n\t\tcri.bmpWidth = CharRender_Canvas.canvas.width;\r\n\t\tcri.bmpHeight = CharRender_Canvas.canvas.height;\r\n\t\treturn CharRender_Canvas.canvas;\r\n\t}\r\n}\r\n\r\n","import { CharRenderInfo } from \"./CharRenderInfo\";\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nexport class CharRender_Native extends ICharRender {\r\n\tprivate lastFont: string = '';\r\n\tprivate lastScaleX: number = 1.0;\r\n\tprivate lastScaleY: number = 1.0;\r\n\r\n\t//TODO:coverage\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param font \r\n\t * @param str \r\n\t * @override\r\n\t */\r\n\t getWidth(font: string, str: string): number {\r\n\t\tif (!(window as any).conchTextCanvas) return 0;\r\n\t\t//TODO 先取消判断，保证字体信息一致\r\n\t\t//if (lastFont != font) { \r\n\t\t(window as any).conchTextCanvas.font = font;\r\n\t\tthis.lastFont = font;\r\n\t\t//console.log('use font ' + font);\r\n\t\t//}\t\t\t\t\t\r\n\t\t//getTextBitmapData\r\n\t\treturn (window as any).conchTextCanvas.measureText(str).width;\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param sx \r\n\t * @param sy \r\n\t * @override\r\n\t */\r\n\tscale(sx: number, sy: number): void {\r\n\t\tthis.lastScaleX = sx;\r\n\t\tthis.lastScaleY = sy;\r\n\t}\r\n\t/**\r\n\t *TODO stroke \r\n\t * @param\tchar\r\n\t * @param\tfont\r\n\t * @param\tsize  返回宽高\r\n\t * @return\r\n\t * @override\r\n\t */\r\n\tgetCharBmp(char: string, font: string, lineWidth: number, colStr: string, strokeColStr: string, size: CharRenderInfo,\r\n\t\tmargin_left: number, margin_top: number, margin_right: number, margin_bottom: number, rect: any[] | null = null): ImageData|null {\r\n\r\n\t\tif (!(window as any).conchTextCanvas) return null;\r\n\t\t//window.conchTextCanvas.getTextBitmapData();\r\n\r\n\t\t//TODO 先取消判断，保证字体信息一致\r\n\t\t//if(lastFont!=font){\r\n\t\t(window as any).conchTextCanvas.font = font;\r\n\t\tthis.lastFont = font;\r\n\t\t//}\t\t\t\t\t\t\r\n\t\tvar w: number = size.width = (window as any).conchTextCanvas.measureText(char).width;\r\n\t\tvar h: number = size.height;\r\n\t\tw += (margin_left + margin_right);\r\n\t\th += (margin_top + margin_bottom);\r\n\r\n\t\t(window as any).conchTextCanvas.scale && (window as any).conchTextCanvas.scale(this.lastScaleX, this.lastScaleY);\r\n\r\n\t\tvar c1: ColorUtils = ColorUtils.create(strokeColStr);\r\n\t\tvar nStrokeColor: number = c1.numColor;\r\n\t\tvar c2: ColorUtils = ColorUtils.create(colStr);\r\n\t\tvar nTextColor: number = c2.numColor;\r\n\t\tvar textInfo: any = (window as any).conchTextCanvas.getTextBitmapData(char, nTextColor, lineWidth > 2 ? 2 : lineWidth, nStrokeColor);\r\n\t\t//window.Laya.LayaGL.instance.texSubImage2D(1,2,0,0,textInfo.width,textInfo.height,0,0,textInfo.bitmapData);\r\n\t\t//var ret = new ImageData();\r\n\t\tsize.bmpWidth = textInfo.width;\r\n\t\tsize.bmpHeight = textInfo.height;\r\n\t\treturn textInfo;\r\n        /*\r\n        ctx.clearRect(0,0, w, h);\r\n        //ctx.textAlign = \"end\";\r\n        ctx.textBaseline = \"top\";\r\n        if (lineWidth > 0) { \r\n            ctx.strokeStyle = colStr;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeText(char, margin_left, margin_top);\r\n        } else {\r\n            ctx.fillStyle = colStr;\r\n            ctx.fillText(char, margin_left, margin_top);\r\n        }\r\n        if ( CharBook.debug) {\r\n            ctx.strokeStyle = '#ff0000';\r\n            ctx.strokeRect(0, 0, w, h);\r\n            ctx.strokeStyle = '#00ff00';\r\n            ctx.strokeRect(margin_left, margin_top, size.width, size.height);\r\n        }\r\n        //ctx.restore();\r\n        return ctx.getImageData( 0,0, w, h );\r\n        */\r\n\t}\r\n}\r\n\r\n","import { TextAtlas } from \"./TextAtlas\";\r\nimport { TextTexture } from \"./TextTexture\";\r\nimport { Sprite } from \"../../display/Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { RenderInfo } from \"../../renders/RenderInfo\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { FontInfo } from \"../../utils/FontInfo\"\r\nimport { WordText } from \"../../utils/WordText\"\r\nimport { CharRenderInfo } from \"./CharRenderInfo\"\r\nimport { CharRender_Canvas } from \"./CharRender_Canvas\"\r\nimport { CharRender_Native } from \"./CharRender_Native\"\r\nimport { ICharRender } from \"./ICharRender\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { Const } from \"../../Const\";\r\n\r\nexport class TextRender {\r\n    //config\r\n    static useOldCharBook = false;\r\n    static atlasWidth = 1024;\r\n    static noAtlas = false;\t\t\t\t// 一串文字用独立贴图\r\n    static forceSplitRender = false;\t    // 强制把一句话拆开渲染\r\n    static forceWholeRender = false; \t// 强制整句话渲染\r\n    static scaleFontWithCtx = true;\t\t// 如果有缩放，则修改字体，以保证清晰度\r\n    static maxFontScale = 4;            //当scaleFontWithCtx为true时，最大允许放大的倍数\r\n    static standardFontSize = 32;\t\t\t// 测量的时候使用的字体大小\r\n    static destroyAtlasDt = 10;\t\t\t\t\t// 回收图集贴图的时间\r\n    static checkCleanTextureDt = 2000;\t\t// 检查是否要真正删除纹理的时间。单位是ms\r\n    static destroyUnusedTextureDt = 3000; \t// 长时间不用的纹理删除的时间。单位是ms\r\n    static cleanMem = 100 * 1024 * 1024;\t\t// 多大内存触发清理图集。这时候占用率低的图集会被清理\r\n    static isWan1Wan = false;\r\n    static showLog = false;\r\n    static debugUV = false;\t\t\t\t// 文字纹理需要保护边。当像素没有对齐的时候，可能会采样到旁边的贴图。true则填充texture为白色，模拟干扰\r\n    //config\r\n\r\n    /**\r\n     * fontSizeInfo\r\n     * 记录每种字体的像素的大小。标准是32px的字体。由4个byte组成，分别表示[xdist,ydist,w,h]。 \r\n     * xdist,ydist 是像素起点到排版原点的距离，都是正的，表示实际数据往左和上偏多少，如果实际往右和下偏，则算作0，毕竟这个只是一个大概\r\n     * 例如 [Arial]=0x00002020, 表示宽高都是32\r\n     */\r\n    private fontSizeInfo: any = {};\r\n    static atlasWidth2: number;\r\n    private charRender: ICharRender;\r\n    private static tmpRI: CharRenderInfo = new CharRenderInfo();\r\n    private static pixelBBX: number[] = [0, 0, 0, 0];\r\n    private mapFont: any = {};\t\t// 把font名称映射到数字\r\n    private fontID: number = 0;\r\n\r\n    private fontScaleX: number = 1.0;\t\t\t\t\t\t//临时缩放。\r\n    private fontScaleY: number = 1.0;\r\n\r\n    //private var charMaps:Object = {};\t// 所有的都放到一起\r\n\r\n    private _curStrPos: number = 0;\t\t//解开一个字符串的时候用的。表示当前解到什么位置了\r\n    static textRenderInst: TextRender;\t//debug\r\n\r\n    textAtlases: TextAtlas[] = [];\t\t// 所有的大图集\r\n    private isoTextures: TextTexture[] = [];\t// 所有的独立贴图\r\n\r\n    private bmpData32: Uint32Array;\r\n    private static imgdtRect: any[] = [0, 0, 0, 0];\r\n\r\n    // 当前字体的测量信息。\r\n    private lastFont: FontInfo | null = null;\r\n    private fontSizeW: number = 0;\r\n    private fontSizeH: number = 0;\r\n    private fontSizeOffX: number = 0;\r\n    private fontSizeOffY: number = 0;\r\n\r\n    private renderPerChar: boolean = true;\t// 是否是单个字符渲染。这个是结果，上面的是配置\r\n    private tmpAtlasPos: Point = new Point();\r\n    private textureMem: number = 0; \t\t\t// 当前贴图所占用的内存\r\n    private fontStr: string;\t\t\t\t\t// 因为要去掉italic，所以自己保存一份\r\n    static simClean: boolean = false;\t\t\t\t// 测试用。强制清理占用低的图集\r\n\r\n    constructor() {\r\n        var bugIOS = false;//是否是有bug的ios版本\r\n        //在微信下有时候不显示文字，所以采用canvas模式，现在测试微信好像都好了，所以去掉了。\r\n        var miniadp: any = ILaya.Laya['MiniAdpter']; //头条也继承了这个bug\r\n        if (miniadp && miniadp.systemInfo && miniadp.systemInfo.system) {\r\n            bugIOS = miniadp.systemInfo.system.toLowerCase() === 'ios 10.1.1';\r\n            //12.3\r\n        }\r\n        if ((ILaya.Browser.onMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onTBMiniGame) /*&& !Browser.onAndroid*/ && !bugIOS) TextRender.isWan1Wan = true; //android 微信下 字边缘发黑，所以不用getImageData了\r\n        //TextRender.isWan1Wan = true;\r\n        this.charRender = LayaEnv.isConch ? (new CharRender_Native()) : (new CharRender_Canvas(2048, 2048, TextRender.scaleFontWithCtx, !TextRender.isWan1Wan, false));\r\n        TextRender.textRenderInst = this;\r\n        ILaya.Laya['textRender'] = this;\r\n        TextRender.atlasWidth2 = TextRender.atlasWidth * TextRender.atlasWidth;\r\n        //TEST\r\n        //forceSplitRender = true;\r\n        //noAtlas = true;\r\n        //forceWholeRender = true;\r\n        //TEST\r\n    }\r\n\r\n    /**\r\n     * 设置当前字体，获得字体的大小信息。\r\n     * @param\tfont\r\n     */\r\n    setFont(font: FontInfo): void {\r\n        if (this.lastFont == font) return;\r\n        this.lastFont = font;\r\n        var fontsz = this.getFontSizeInfo(font._family);\r\n        var offx = fontsz >> 24\r\n        var offy = (fontsz >> 16) & 0xff;\r\n        var fw = (fontsz >> 8) & 0xff;\r\n        var fh = fontsz & 0xff;\r\n        var k = font._size / TextRender.standardFontSize;\r\n        this.fontSizeOffX = Math.ceil(offx * k);\r\n        this.fontSizeOffY = Math.ceil(offy * k);\r\n        this.fontSizeW = Math.ceil(fw * k);\r\n        this.fontSizeH = Math.ceil(fh * k);\r\n        if (font._font.indexOf('italic') >= 0) {// 先判断一下效率会高一些\r\n            this.fontStr = font._font.replace('italic', '');\r\n        } else {\r\n            this.fontStr = font._font;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从string中取出一个完整的char，例如emoji的话要多个\r\n     * 会修改 _curStrPos\r\n     * TODO 由于各种文字中的组合写法，这个需要能扩展，以便支持泰文等\r\n     * @param\tstr\r\n     * @param\tstart\t开始位置\r\n     */\r\n    getNextChar(str: string): string | null {\r\n        var len = str.length;\r\n        var start = this._curStrPos;\r\n        if (!str.substring) return null;\t// 保护一下，避免下面 substring 报错\r\n        if (start >= len)\r\n            return null;\r\n\r\n        //var link: boolean = false;\t//如果是连接的话要再加一个完整字符\r\n        var i = start;\r\n        var state = 0; //0 初始化 1  正常 2 连续中\r\n        for (; i < len; i++) {\r\n            var c = str.charCodeAt(i);\r\n            if ((c >>> 11) == 0x1b) { //可能是0b110110xx或者0b110111xx。 这都表示2个u16组成一个emoji\r\n                if (state == 1) break;//新的字符了，要截断\r\n                state = 1;\t// 其他状态都转成正常读取字符状态，只是一次读两个\r\n                i++;\t//跨过一个。\r\n            }\r\n            else if (c === 0xfe0e || c === 0xfe0f) {\t//样式控制字符\r\n                // 继续。不改变状态\r\n            }\r\n            else if (c == 0x200d) {\t\t//zero width joiner\r\n                state = 2; \t// 继续\r\n            } else {\r\n                if (state == 0) state = 1;\r\n                else if (state == 1) break;\r\n                else if (state == 2) {\r\n                    // 继续\r\n                }\r\n            }\r\n        }\r\n        this._curStrPos = i;\r\n        return str.substring(start, i);\r\n    }\r\n\r\n    filltext(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data.length <= 0)\r\n            return;\r\n        //以后保存到wordtext中\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n\r\n    _fast_filltext(ctx: Context, data: string | WordText | null, x: number, y: number, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        if (data && !(data.length >= 1)) return;\t// length有可能是 undefined\r\n        if (lineWidth < 0) lineWidth = 0;\r\n        this.setFont(font);\r\n        this.fontScaleX = this.fontScaleY = 1.0;\r\n        if (TextRender.scaleFontWithCtx) {\r\n            let sx = 1;\r\n            let sy = 1;\r\n\r\n            if (!LayaEnv.isConch || ((window as any).conchTextCanvas.scale)) {\r\n                sx = ctx.getMatScaleX();\r\n                sy = ctx.getMatScaleY();\r\n            }\r\n\r\n            if (sx < 1e-4 || sy < 1e-1)\r\n                return;\r\n\r\n            if (sx > 1) this.fontScaleX = Math.min(TextRender.maxFontScale, sx);\r\n            if (sy > 1) this.fontScaleY = Math.min(TextRender.maxFontScale, sy);\r\n        }\r\n\r\n        font._italic && (ctx._italicDeg = 13);\r\n        //准备bmp\r\n        //拷贝到texture上,得到一个gltexture和uv\r\n        var wt = <WordText>data;\r\n        var isWT = data instanceof WordText;\r\n        var str = data && data.toString();//(<string>data);guo 某种情况下，str还是WordText（没找到为啥），这里保护一下\r\n\r\n        /**\r\n         * sameTexData \r\n         * WordText 中保存了一个数组，这个数组是根据贴图排序的，目的是为了能相同的贴图合并。\r\n         * 类型是 {ri:CharRenderInfo,stx:int,sty:int,...}[文字个数][贴图分组]\r\n         */\r\n        var sameTexData: any[] = isWT ? wt.pageChars : [];\r\n\r\n        var strWidth = 0;\r\n        if (isWT) {\r\n            str = wt.text;\r\n            strWidth = wt.width;\r\n            if (strWidth < 0) {\r\n                strWidth = wt.width = this.charRender.getWidth(this.fontStr, str);\t// 字符串长度是原始的。\r\n            }\r\n        } else {\r\n            strWidth = str ? this.charRender.getWidth(this.fontStr, str) : 0;\r\n        }\r\n\r\n        //水平对齐方式\r\n        switch (textAlign) {\r\n            case Const.ENUM_TEXTALIGN_CENTER:\r\n                x -= strWidth / 2;\r\n                break;\r\n            case Const.ENUM_TEXTALIGN_RIGHT:\r\n                x -= strWidth;\r\n                break;\r\n        }\r\n\r\n        //检查保存的数据是否有的已经被释放了\r\n        if (isWT) {\t// TODO 能利用lastGCCnt么\r\n            //wt.lastGCCnt = _curPage.gcCnt;\r\n            if (this.hasFreedText(sameTexData) || wt.pagecharsCtx != ctx) {\r\n                sameTexData = wt.pageChars = [];\r\n            }\r\n            // if(isWT && (this.fontScaleX!=wt.scalex || this.fontScaleY!=wt.scaley)) {\r\n            // \t// 文字缩放要清理缓存\r\n            // \tsameTexData = wt.pageChars = [];\r\n            // }\r\n        }\r\n        var ri: CharRenderInfo = null;\r\n        //var oneTex: boolean = isWT || TextRender.forceWholeRender;\t// 如果能缓存的话，就用一张贴图\r\n        var splitTex = this.renderPerChar = (!isWT) || TextRender.forceSplitRender || (isWT && wt.splitRender); \t// 拆分字符串渲染，这个优先级高\r\n        if (!sameTexData || sameTexData.length < 1) {\r\n            if (isWT) {\r\n                wt.scalex = this.fontScaleX;\r\n                wt.scaley = this.fontScaleY;\r\n            }\r\n            // 重新构建缓存的贴图信息\r\n            // TODO 还是要ctx.scale么\r\n            if (splitTex) {\r\n                // 如果要拆分字符渲染\r\n                var stx = 0;\r\n                var sty = 0;\r\n\r\n                this._curStrPos = 0;\r\n                var curstr: string | null;\r\n                while (true) {\r\n                    curstr = this.getNextChar(str);\r\n                    if (!curstr)\r\n                        break;\r\n                    ri = this.getCharRenderInfo(curstr, font, color, strokeColor, lineWidth, false);\r\n                    if (!ri) {\r\n                        // 没有分配到。。。\r\n                        break;\r\n                    }\r\n                    if (ri.isSpace) {\t// 空格什么都不做\r\n                    } else {\r\n                        //分组保存\r\n                        var add = sameTexData[ri.tex.id];\r\n                        if (!add) {\r\n                            var o1 = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: new Array() };\t// 根据genid来减少是否释放的判断量\r\n                            sameTexData[ri.tex.id] = o1;\r\n                            add = o1.words;\r\n                        } else {\r\n                            add = add.words;\r\n                        }\r\n                        //不能直接修改ri.bmpWidth, 否则会累积缩放，所以把缩放保存到独立的变量中\r\n                        add.push({ ri: ri, x: stx, y: sty, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY });\r\n                        stx += ri.width;\t// TODO 缩放\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                // 如果要整句话渲染\r\n                var margin = LayaEnv.isConch ? 0 : (font._size / 3 | 0);  // margin保持与charrender_canvas的一致\r\n                var isotex = TextRender.noAtlas || (strWidth + margin + margin) * this.fontScaleX > TextRender.atlasWidth;\t// 独立贴图还是大图集。需要考虑margin\r\n                ri = this.getCharRenderInfo(str, font, color, strokeColor, lineWidth, isotex);\r\n                // 整句渲染，则只有一个贴图\r\n                sameTexData[0] = { texgen: ((<TextTexture>ri.tex)).genID, tex: ri.tex, words: [{ ri: ri, x: 0, y: 0, w: ri.bmpWidth / this.fontScaleX, h: ri.bmpHeight / this.fontScaleY }] };\r\n            }\r\n            isWT && (wt.pagecharsCtx = ctx);\r\n            //TODO getbmp 考虑margin 字体与标准字体的关系\r\n        }\r\n\r\n        this._drawResortedWords(ctx, x, y, sameTexData);\r\n        ctx._italicDeg = 0;\r\n    }\r\n\r\n    /**\r\n     * 画出重新按照贴图顺序分组的文字。\r\n     * @param\tsamePagesData\r\n     * @param  startx 保存的数据是相对位置，所以需要加上这个偏移。用相对位置更灵活一些。\r\n     * @param y {int} 因为这个只能画在一行上所以没有必要保存y。所以这里再把y传进来\r\n     */\r\n    protected _drawResortedWords(ctx: Context, startx: number, starty: number, samePagesData: any[]): void {\r\n        var isLastRender = ctx._charSubmitCache ? ctx._charSubmitCache._enable : false;\r\n        var mat = ctx._curMat;\r\n        //var slen = samePagesData.length;\r\n        //for (var id = 0; id < slen; id++) {\r\n        for (var id in samePagesData) {// TODO samePagesData可能是个不连续的数组，比如只有一个samePagesData[29999] = dt;\r\n            // TODO 想个更好的方法\r\n            var dt = samePagesData[id];\r\n            if (!dt) continue;\r\n            var pri: any[] = dt.words;\r\n            var pisz = pri.length; if (pisz <= 0) continue;\r\n            var tex = ((<TextTexture>samePagesData[id].tex));\r\n            for (var j = 0; j < pisz; j++) {\r\n                var riSaved: any = pri[j];\r\n                var ri: CharRenderInfo = riSaved.ri;\r\n                if (ri.isSpace) continue;\r\n                ri.touch();\r\n                ctx.drawTexAlign = true;\r\n                //ctx._drawTextureM(ri.tex.texture as Texture, startx +riSaved.x -ri.orix / fontScaleX , starty + riSaved.y -ri.oriy / fontScaleY , riSaved.w, riSaved.h, null, 1.0, ri.uv);\r\n                if (LayaEnv.isConch) {\r\n                    ctx._drawTextureM((<Texture>tex.texture), startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h, null, 1.0, ri.uv, 0xffffffff);\r\n                } else {\r\n                    let t = tex as TextTexture;\r\n                    ctx._inner_drawTexture(t.texture, t.id,\r\n                        startx + riSaved.x - ri.orix, starty + riSaved.y - ri.oriy, riSaved.w, riSaved.h,\r\n                        mat, ri.uv, 1.0, isLastRender, 0xffffffff);\r\n                }\r\n\r\n                if ((<any>ctx).touches) {\r\n                    (<any>ctx).touches.push(ri);\r\n                }\r\n            }\r\n        }\r\n        //不要影响别人\r\n        //ctx._curSubmit._key.other = -1;\r\n    }\r\n\r\n    /**\r\n     * 检查 txts数组中有没有被释放的资源\r\n     * @param\ttxts {{ri:CharRenderInfo,...}[][]}\r\n     * @param\tstartid\r\n     * @return\r\n     */\r\n    hasFreedText(txts: any[]): boolean {\r\n        for (let i in txts) {\r\n            var pri = txts[i];\r\n            if (!pri) continue;\r\n            var tex = (<TextTexture>pri.tex);\r\n            if (tex.destroyed || tex.genID != pri.texgen) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getCharRenderInfo(str: string, font: FontInfo, color: string, strokeColor: string | null, lineWidth: number, isoTexture: boolean = false): CharRenderInfo {\r\n        var fid = this.mapFont[font._family];\r\n        if (fid == undefined) {\r\n            this.mapFont[font._family] = fid = this.fontID++;\r\n        }\r\n        /*\r\n        var cid:int = mapColor[color];\r\n        if (cid == undefined) {\r\n            mapColor[color] = cid = colorID++;\r\n        }\r\n        var scid:int = mapColor[strokeColor];\r\n        */\r\n        var key = str + '_' + fid + '_' + font._size + '_' + color;\r\n        if (lineWidth > 0)\r\n            key += '_' + strokeColor! + lineWidth;\r\n        if (font._bold)\r\n            key += 'P';\r\n        if (this.fontScaleX != 1 || this.fontScaleY != 1) {\r\n            key += (this.fontScaleX * 20 | 0) + '_' + (this.fontScaleY * 20 | 0);\t// 这个精度可以控制占用资源的大小，精度越高越能细分缩放。\r\n        }\r\n\r\n        var i = 0;\r\n        // 遍历所有的大图集看是否存在\r\n        var sz = this.textAtlases.length;\r\n        var ri: CharRenderInfo;\r\n        var atlas: TextAtlas;\r\n        if (!isoTexture) {\r\n            for (i = 0; i < sz; i++) {\r\n                atlas = this.textAtlases[i];\r\n                ri = atlas.charMaps[key]\r\n                if (ri) {\r\n                    ri.touch();\r\n                    return ri;\r\n                }\r\n            }\r\n        }\r\n        // 没有找到，要创建一个\r\n        ri = new CharRenderInfo();\r\n        this.charRender.scale(this.fontScaleX, this.fontScaleY);\r\n        ri.char = str;\r\n        ri.height = font._size;\r\n        var margin = LayaEnv.isConch ? 0 : (font._size / 3 | 0);\t// 凑的。 注意这里不能乘以缩放，因为ctx会自动处理\r\n        // 如果不存在，就要插入已有的，或者创建新的\r\n        var imgdt: ImageData | null = null;\r\n        // 先大约测量文字宽度 \r\n\r\n        if (!lineWidth) {\r\n            lineWidth = 0;\r\n        }\r\n        var w1 = Math.ceil((this.charRender.getWidth(this.fontStr, str) + 2 * lineWidth) * this.fontScaleX);\r\n        if (w1 > this.charRender.canvasWidth) {\r\n            this.charRender.canvasWidth = Math.min(2048, w1 + margin * 2);\r\n        }\r\n        if (isoTexture) {\r\n            // 独立贴图\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri, margin, margin, margin, margin, null);\r\n            // 这里可以直接\r\n            if (imgdt) {\r\n                var tex = TextTexture.getTextTexture(imgdt.width, imgdt.height);\r\n                tex.addChar(imgdt, 0, 0, ri.uv);\r\n                ri.tex = tex;\r\n                ri.orix = margin; // 这里是原始的，不需要乘scale,因为scale的会创建一个scale之前的rect\r\n                ri.oriy = margin;\r\n                tex.ri = ri;\r\n                this.isoTextures.push(tex);\r\n            }\r\n        } else {\r\n            // 大图集\r\n            var len = str.length;\r\n            if (len > 1) {\r\n                // emoji或者组合的\r\n            }\r\n            var lineExt = lineWidth * 1;\t// 这里，包括下面的*2 都尽量用整数。否则在取整以后可能有有偏移。\r\n            var fw = Math.ceil((this.fontSizeW + lineExt * 2) * this.fontScaleX); \t//本来只要 lineWidth就行，但是这样安全一些\r\n            var fh = Math.ceil((this.fontSizeH + lineExt * 2) * this.fontScaleY);\r\n            TextRender.imgdtRect[0] = ((margin - this.fontSizeOffX - lineExt) * this.fontScaleX) | 0;\t// 本来要 lineWidth/2 但是这样一些尖角会有问题，所以大一点\r\n            TextRender.imgdtRect[1] = ((margin - this.fontSizeOffY - lineExt) * this.fontScaleY) | 0;\r\n            if (this.renderPerChar || len == 1) {\r\n                // 单个字符的处理\r\n                TextRender.imgdtRect[2] = Math.max(w1, fw);\r\n                TextRender.imgdtRect[3] = Math.max(w1, fh);\t// 高度也要取大的。 例如emoji\r\n            } else {\r\n                // 多个字符的处理\r\n                TextRender.imgdtRect[2] = -1;\t// -1 表示宽度要测量\r\n                TextRender.imgdtRect[3] = fh; \t// TODO 如果被裁剪了，可以考虑把这个加大一点点\r\n            }\r\n            this.charRender.fontsz = font._size;\r\n            imgdt = this.charRender.getCharBmp(str, this.fontStr, lineWidth, color, strokeColor, ri,\r\n                margin, margin, margin, margin, TextRender.imgdtRect);\r\n            if (imgdt) {\r\n                atlas = this.addBmpData(imgdt, ri);\r\n                if (TextRender.isWan1Wan) {\r\n                    // 这时候 imgdtRect 是不好使的，要自己设置\r\n                    ri.orix = margin;\t// 不要乘缩放。要不后面也要除。\r\n                    ri.oriy = margin;\r\n                } else {\r\n                    // 取下来的imagedata的原点在哪\r\n                    ri.orix = (this.fontSizeOffX + lineExt);\t// 由于是相对于imagedata的，上面会根据包边调整左上角，所以原点也要相应反向调整\r\n                    ri.oriy = (this.fontSizeOffY + lineExt);\r\n                }\r\n                atlas.charMaps[key] = ri;\r\n            }\r\n        }\r\n        return ri;\r\n    }\r\n\r\n    /**\r\n     * 添加数据到大图集\r\n     * @param\tw\r\n     * @param\th\r\n     * @return\r\n     */\r\n    addBmpData(data: ImageData, ri: CharRenderInfo): TextAtlas {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var sz = this.textAtlases.length;\r\n        var atlas: TextAtlas;\r\n        var find = false;\r\n        for (var i = 0; i < sz; i++) {\r\n            atlas = this.textAtlases[i];\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (find) {\r\n                break;\r\n            }\r\n        }\r\n        if (!find) {\r\n            // 创建一个新的\r\n            atlas = new TextAtlas()\r\n            this.textAtlases.push(atlas);\r\n            find = atlas.getAEmpty(w, h, this.tmpAtlasPos);\r\n            if (!find) {\r\n                throw 'err1'; //TODO\r\n            }\r\n            // 清理旧的\r\n            this.cleanAtlases();\r\n        }\r\n        if (find) {\r\n            atlas.texture.addChar(data, this.tmpAtlasPos.x, this.tmpAtlasPos.y, ri.uv);\r\n            ri.tex = atlas.texture;\r\n        }\r\n        return atlas;\r\n    }\r\n\r\n    /**\r\n     * 清理利用率低的大图集\r\n     */\r\n    GC(): void {\r\n        var i = 0;\r\n        var sz = this.textAtlases.length;\r\n        var dt = 0;\r\n        var destroyDt = TextRender.destroyAtlasDt;\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        var curloop = RenderInfo.loopCount;\r\n\r\n        //var minUsedRateID:int = -1;\r\n        //var minUsedRate:Number = 1;\r\n        var maxWasteRateID = -1;\r\n        var maxWasteRate = 0;\r\n        var tex: TextTexture = null;\r\n        var curatlas: TextAtlas = null;\r\n        // 图集的清理\r\n        for (; i < sz; i++) {\r\n            curatlas = this.textAtlases[i];\r\n            tex = curatlas.texture;\r\n            if (tex) {\r\n                totalUsedRate += tex.curUsedCovRate;\r\n                totalUsedRateAtlas += tex.curUsedCovRateAtlas;\r\n                // 浪费掉的图集\r\n                // (已经占用的图集和当前使用的图集的差。图集不可局部重用，所以有占用的和使用的的区别)\r\n                var waste = curatlas.usedRate - tex.curUsedCovRateAtlas;\r\n                // 记录哪个图集浪费的最多\r\n                if (maxWasteRate < waste) {\r\n                    maxWasteRate = waste;\r\n                    maxWasteRateID = i;\r\n                }\r\n                /*\r\n                if (minUsedRate > tex.curUsedCovRate) {\r\n                    minUsedRate = tex.curUsedCovRate;\r\n                    minUsedRateID = i;\r\n                }\r\n                */\r\n            }\r\n            // 如果当前贴图的touch时间超出了指定的间隔（单位是帧，例如），则设置回收\r\n            // 可能同时会有多个图集被回收\r\n            dt = curloop - curatlas.texture.lastTouchTm;\r\n            if (dt > destroyDt) {\r\n                TextRender.showLog && console.log('TextRender GC delete atlas ' + tex ? curatlas.texture.id : 'unk');\r\n                curatlas.destroy();\r\n                this.textAtlases[i] = this.textAtlases[sz - 1];\t// 把最后的拿过来冲掉\r\n                sz--;\r\n                i--;\r\n                maxWasteRateID = -1;\r\n            }\r\n        }\r\n        // 缩减图集数组的长度\r\n        this.textAtlases.length = sz;\r\n\r\n        // 独立贴图的清理 TODO 如果多的话，要不要分开处理\r\n        sz = this.isoTextures.length;\r\n        for (i = 0; i < sz; i++) {\r\n            tex = this.isoTextures[i];\r\n            dt = curloop - tex.lastTouchTm;\r\n            if (dt > TextRender.destroyUnusedTextureDt) {\r\n                tex.ri.deleted = true;\r\n                tex.ri.tex = null;\r\n                // 直接删除，不回收\r\n                tex.destroy();\r\n                this.isoTextures[i] = this.isoTextures[sz - 1];\r\n                sz--;\r\n                i--;\r\n            }\r\n        }\r\n        this.isoTextures.length = sz;\r\n\r\n        // 如果超出内存需要清理不常用\r\n        var needGC = this.textAtlases.length > 1 && this.textAtlases.length - totalUsedRateAtlas >= 2;\t// 总量浪费了超过2张\r\n        if (TextRender.atlasWidth * TextRender.atlasWidth * 4 * this.textAtlases.length > TextRender.cleanMem || needGC || TextRender.simClean) {\r\n            TextRender.simClean = false;\r\n            TextRender.showLog && console.log('清理使用率低的贴图。总使用率:', totalUsedRateAtlas, ':', this.textAtlases.length, '最差贴图:' + maxWasteRateID);\r\n            if (maxWasteRateID >= 0) {\r\n                curatlas = this.textAtlases[maxWasteRateID];\r\n                curatlas.destroy();\r\n                this.textAtlases[maxWasteRateID] = this.textAtlases[this.textAtlases.length - 1];\r\n                this.textAtlases.length = this.textAtlases.length - 1;\r\n            }\r\n        }\r\n\r\n        TextTexture.clean();\r\n    }\r\n\r\n    /**\r\n     * 尝试清理大图集\r\n     */\r\n    cleanAtlases(): void {\r\n        // TODO 根据覆盖率决定是否清理\r\n    }\r\n\r\n    getCharBmp(c: string): any {\r\n\r\n    }\r\n\r\n    /**\r\n     * 检查当前线是否存在数据\r\n     * @param\tdata\r\n     * @param\tl\r\n     * @param\tsx\r\n     * @param\tex\r\n     * @return\r\n     */\r\n    private checkBmpLine(data: ImageData, l: number, sx: number, ex: number): boolean {\r\n        if (this.bmpData32.buffer != data.data.buffer) {\r\n            this.bmpData32 = new Uint32Array(data.data.buffer);\r\n        }\r\n        var stpos = data.width * l + sx;\r\n        for (var x = sx; x < ex; x++) {\r\n            if (this.bmpData32[stpos++] != 0) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 根据bmp数据和当前的包围盒，更新包围盒\r\n     * 由于选择的文字是连续的，所以可以用二分法\r\n     * @param\tdata\r\n     * @param\tcurbbx \t[l,t,r,b]\r\n     * @param   onlyH 不检查左右\r\n     */\r\n    private updateBbx(data: ImageData, curbbx: number[], onlyH: boolean = false): void {\r\n        var w = data.width;\r\n        var h = data.height;\r\n        var x = 0;\r\n        // top\r\n        var sy = curbbx[1];\t//从t到0 sy表示有数据的行\r\n        var ey = 0;\r\n        var y = sy;\r\n        if (this.checkBmpLine(data, sy, 0, w)) {\r\n            // 如果当前行有数据，就要往上找\r\n            while (true) {\r\n                y = (sy + ey) / 2 | 0;\t// 必须是int\r\n                if (y + 1 >= sy) {// \r\n                    // 找到了。严格来说还不知道这个是否有像素，不过这里要求不严格，可以认为有\r\n                    curbbx[1] = y;\r\n                    break;\r\n                }\r\n                if (this.checkBmpLine(data, y, 0, w)) {\r\n                    //中间线有数据，搜索上半部分\r\n                    sy = y;\r\n                } else {\r\n                    //中间线没有有数据，搜索下半部分\r\n                    ey = y;\r\n                }\r\n            }\r\n        }\r\n        // 下半部分\r\n        if (curbbx[3] > h) curbbx[3] = h;\r\n        else {\r\n            y = sy = curbbx[3];\r\n            ey = h;\r\n            if (this.checkBmpLine(data, sy, 0, w)) {\r\n                while (true) {\r\n                    y = (sy + ey) / 2 | 0;\r\n                    if (y - 1 <= sy) {\r\n                        curbbx[3] = y;\r\n                        break;\r\n                    }\r\n                    if (this.checkBmpLine(data, y, 0, w)) {\r\n                        sy = y;\r\n                    } else {\r\n                        ey = y;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (onlyH)\r\n            return;\r\n\r\n        // 左半部分\r\n        var minx = curbbx[0];\r\n        var stpos = w * curbbx[1]; //w*cy+0\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = 0; x < minx; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    minx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[0] = minx;\r\n        // 右半部分\r\n        var maxx = curbbx[2];\r\n        stpos = w * curbbx[1]; //w*cy\r\n        for (y = curbbx[1]; y < curbbx[3]; y++) {\r\n            for (x = maxx; x < w; x++) {\r\n                if (this.bmpData32[stpos + x] != 0) {\r\n                    maxx = x;\r\n                    break;\r\n                }\r\n            }\r\n            stpos += w;\r\n        }\r\n        curbbx[2] = maxx;\r\n    }\r\n\r\n    getFontSizeInfo(font: string): number {\r\n        var finfo: any = this.fontSizeInfo[font];\r\n        if (finfo != undefined)\r\n            return finfo;\r\n\r\n        var fontstr: string = 'bold ' + TextRender.standardFontSize + 'px ' + font;\r\n        if (TextRender.isWan1Wan) {\r\n            // 这时候无法获得imagedata，只能采取保险测量\r\n            this.fontSizeW = this.charRender.getWidth(fontstr, '有') * 1.5;\r\n            this.fontSizeH = TextRender.standardFontSize * 1.5;\r\n            var szinfo: number = this.fontSizeW << 8 | this.fontSizeH;\r\n            this.fontSizeInfo[font] = szinfo;\r\n            return szinfo;\r\n        }\r\n        // bbx初始大小\r\n        TextRender.pixelBBX[0] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[1] = TextRender.standardFontSize / 2;// 16;\r\n        TextRender.pixelBBX[2] = TextRender.standardFontSize;// 32;\r\n        TextRender.pixelBBX[3] = TextRender.standardFontSize;// 32;\r\n\r\n        var orix: number = 16;\t\t// 左边留白，也就是x原点的位置\r\n        var oriy: number = 16;\r\n        var marginr: number = 16;\r\n        var marginb: number = 16;\r\n        this.charRender.scale(1, 1);\r\n        TextRender.tmpRI.height = TextRender.standardFontSize;\r\n        this.charRender.fontsz = TextRender.standardFontSize;\r\n        var bmpdt = this.charRender.getCharBmp('g', fontstr, 0, 'red', null, TextRender.tmpRI, orix, oriy, marginr, marginb);\r\n        // native 返回的是 textBitmap。 data直接是ArrayBuffer \r\n        if (LayaEnv.isConch) {\r\n            //bmpdt.data.buffer = bmpdt.data;\r\n            (bmpdt as any).data = new Uint8ClampedArray(bmpdt.data);\r\n        }\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        //测量宽度是 tmpRI.width\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);\r\n        bmpdt = this.charRender.getCharBmp('有', fontstr, 0, 'red', null, TextRender.tmpRI, oriy, oriy, marginr, marginb);// '有'比'国'大\r\n        if (LayaEnv.isConch) {\r\n            //bmpdt.data.buffer = bmpdt.data;\r\n            (bmpdt as any).data = new Uint8ClampedArray(bmpdt.data);\r\n        }\r\n        this.bmpData32 = new Uint32Array(bmpdt.data.buffer);\r\n        // 国字的宽度就用系统测量的，不再用像素检测\r\n        if (TextRender.pixelBBX[2] < orix + TextRender.tmpRI.width)\r\n            TextRender.pixelBBX[2] = orix + TextRender.tmpRI.width;\r\n        this.updateBbx(bmpdt, TextRender.pixelBBX, false);//TODO 改成 true\r\n        // 原点在 16,16\r\n        if (LayaEnv.isConch) {\r\n            //runtime 的接口好像有问题，不认orix，oriy\r\n            orix = 0;\r\n            oriy = 0;\r\n        }\r\n        var xoff = Math.max(orix - TextRender.pixelBBX[0], 0);\r\n        var yoff = Math.max(oriy - TextRender.pixelBBX[1], 0);\r\n        var bbxw = TextRender.pixelBBX[2] - TextRender.pixelBBX[0];\r\n        var bbxh = TextRender.pixelBBX[3] - TextRender.pixelBBX[1];\r\n        var sizeinfo = xoff << 24 | yoff << 16 | bbxw << 8 | bbxh;\r\n        this.fontSizeInfo[font] = sizeinfo;\r\n        return sizeinfo;\r\n    }\r\n\r\n    printDbgInfo(): void {\r\n        console.log('图集个数:' + this.textAtlases.length + ',每个图集大小:' + TextRender.atlasWidth + 'x' + TextRender.atlasWidth, ' 用canvas:', TextRender.isWan1Wan);\r\n        console.log('图集占用空间:' + (TextRender.atlasWidth * TextRender.atlasWidth * 4 / 1024 / 1024 * this.textAtlases.length) + 'M');\r\n        console.log('缓存用到的字体:');\r\n        for (var f in this.mapFont) {\r\n            var fontsz = this.getFontSizeInfo(f);\r\n            var offx = fontsz >> 24\r\n            var offy = (fontsz >> 16) & 0xff;\r\n            var fw = (fontsz >> 8) & 0xff;\r\n            var fh = fontsz & 0xff;\r\n            console.log('    ' + f, ' off:', offx, offy, ' size:', fw, fh);\r\n        }\r\n        var num = 0;\r\n        console.log('缓存数据:');\r\n        var totalUsedRate = 0;\t// 总使用率\r\n        var totalUsedRateAtlas = 0;\r\n        this.textAtlases.forEach(function (a: TextAtlas): void {\r\n            var id = a.texture.id;\r\n            var dt = RenderInfo.loopCount - a.texture.lastTouchTm\r\n            var dtstr = dt > 0 ? ('' + dt + '帧以前') : '当前帧';\r\n            totalUsedRate += a.texture.curUsedCovRate;\r\n            totalUsedRateAtlas += a.texture.curUsedCovRateAtlas;\r\n            console.log('--图集(id:' + id + ',当前使用率:' + (a.texture.curUsedCovRate * 1000 | 0) + '‰', '当前图集使用率:', (a.texture.curUsedCovRateAtlas * 100 | 0) + '%', '图集使用率:', (a.usedRate * 100 | 0), '%, 使用于:' + dtstr + ')--:');\r\n            for (var k in a.charMaps) {\r\n                var ri: CharRenderInfo = a.charMaps[k];\r\n                console.log('     off:', ri.orix, ri.oriy, ' bmp宽高:', ri.bmpWidth, ri.bmpHeight, '无效:', ri.deleted, 'touchdt:', (RenderInfo.loopCount - ri.touchTick), '位置:', ri.uv[0] * TextRender.atlasWidth | 0, ri.uv[1] * TextRender.atlasWidth | 0,\r\n                    '字符:', ri.char, 'key:', k);\r\n                num++;\r\n            }\r\n        });\r\n        console.log('独立贴图文字(' + this.isoTextures.length + '个):');\r\n        this.isoTextures.forEach(function (tex: TextTexture): void {\r\n            console.log('    size:', tex._texW, tex._texH, 'touch间隔:', (RenderInfo.loopCount - tex.lastTouchTm), 'char:', tex.ri.char);\r\n        });\r\n        console.log('总缓存:', num, '总使用率:', totalUsedRate, '总当前图集使用率:', totalUsedRateAtlas);\r\n\r\n    }\r\n\r\n    // 在屏幕上显示某个大图集\r\n    showAtlas(n: number, bgcolor: string, x: number, y: number, w: number, h: number): Sprite {\r\n        if (!this.textAtlases[n]) {\r\n            console.log('没有这个图集');\r\n            return null;\r\n        }\r\n        var sp = new Sprite();\r\n        var texttex = this.textAtlases[n].texture;\r\n        var texture: any = {\r\n            width: TextRender.atlasWidth,\r\n            height: TextRender.atlasWidth,\r\n            sourceWidth: TextRender.atlasWidth,\r\n            sourceHeight: TextRender.atlasWidth,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            getIsReady: function (): boolean { return true; },\r\n            _addReference: function (): void { },\r\n            _removeReference: function (): void { },\r\n            _getSource: function (): any { return texttex._getSource(); },\r\n            bitmap: { id: texttex.id },\r\n            _uv: Texture.DEF_UV\r\n        };\r\n        ((<any>sp)).size = function (w: number, h: number): Sprite {\r\n            this.width = w;\r\n            this.height = h;\r\n            sp.graphics.clear();\r\n            sp.graphics.drawRect(0, 0, sp.width, sp.height, bgcolor);\r\n            sp.graphics.drawTexture((<Texture>texture), 0, 0, sp.width, sp.height);\r\n            return (<Sprite>this);\r\n        }\r\n        sp.graphics.drawRect(0, 0, w, h, bgcolor);\r\n        sp.graphics.drawTexture((<Texture>texture), 0, 0, w, h);\r\n        sp.pos(x, y);\r\n        ILaya.stage.addChild(sp);\r\n        return sp;\r\n    }\r\n\r\n    /////// native ///////\r\n    filltext_native(ctx: Context, data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        if (data && data.length <= 0) return;\r\n\r\n        var font = FontInfo.parse(fontStr);\r\n\r\n        var nTextAlign = 0;\r\n        switch (textAlign) {\r\n            case 'center':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                nTextAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n        }\r\n        return this._fast_filltext(ctx, data, x, y, font, color, strokeColor, lineWidth, nTextAlign);\r\n    }\r\n}\r\n","/**\r\n * <code>MathUtils3D</code> 类用于创建数学工具。\r\n */\r\nexport class MathUtils3D {\r\n\t/**单精度浮点(float)零的容差*/\r\n\tstatic zeroTolerance: number = 1e-6;\r\n\t/**浮点数默认最大值*/\r\n\tstatic MaxValue: number = 3.40282347e+38;\r\n\t/**浮点数默认最小值*/\r\n\tstatic MinValue: number = -3.40282347e+38;\r\n\t/**角度转弧度系数*/\r\n\tstatic Deg2Rad: number = Math.PI / 180;\r\n\r\n\t/**\r\n\t * 创建一个 <code>MathUtils</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 是否在容差的范围内近似于0\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic isZero(v: number): boolean {\r\n\t\treturn Math.abs(v) < MathUtils3D.zeroTolerance;\r\n\t}\r\n\r\n\t/**\r\n\t * 两个值是否在容差的范围内近似相等Sqr Magnitude\r\n\t * @param  判断值\r\n\t * @return  是否近似于0\r\n\t */\r\n\tstatic nearEqual(n1: number, n2: number): boolean {\r\n\t\tif (MathUtils3D.isZero(n1 - n2))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\tstatic fastInvSqrt(value: number): number {\r\n\t\tif (MathUtils3D.isZero(value))\r\n\t\t\treturn value;\r\n\t\treturn 1.0 / Math.sqrt(value);\r\n\t}\r\n}\r\n\r\n\r\n","import { IClone } from \"../utils/IClone\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\n\r\n\r\n/**\r\n * <code>Vector2</code> 类用于创建二维向量。\r\n */\r\nexport class Vector2 implements IClone {\r\n    /**零向量,禁止修改*/\r\n    static readonly ZERO: Readonly<Vector2> = new Vector2(0.0, 0.0);\r\n    /**一向量,禁止修改*/\r\n    static readonly ONE: Readonly<Vector2> = new Vector2(1.0, 1.0);\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector2</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 设置xy值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     */\r\n    setValue(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    /**\r\n     * 缩放二维向量。\r\n     * @param\ta 源二维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出二维向量。\r\n     */\r\n    static scale(a: Vector2, b: number, out: Vector2): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n    }\r\n\r\n    /**\r\n     * 判断两个二维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector2, b: Vector2): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y);\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: ArrayLike<number>, offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param array 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(array: Float32Array, offset: number = 0): void {\r\n        array[offset + 0] = this.x;\r\n        array[offset + 1] = this.y;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector2: Vector2 = (<Vector2>destObject);\r\n        destVector2.x = this.x;\r\n        destVector2.y = this.y;\r\n    }\r\n\r\n    /**\r\n     * 求两个二维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector2, b: Vector2): number {\r\n        return (a.x * b.x) + (a.y * b.y);\r\n    }\r\n\r\n    /**\r\n     * 归一化二维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector2, out: Vector2): void {\r\n        var x: number = s.x, y: number = s.y;\r\n        var len: number = x * x + y * y;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector2): number {\r\n        var x: number = a.x, y: number = a.y;\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector2: Vector2 = new Vector2();\r\n        this.cloneTo(destVector2);\r\n        return destVector2;\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array | null = null): void//[NATIVE_TS]\r\n    {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n    }\r\n\r\n    static rewriteNumProperty(proto: any, name: string, index: number): void {\r\n        Object[\"defineProperty\"](proto, name, {\r\n            \"get\": function (): any {\r\n                return this.elements[index];\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this.elements[index] = v;\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\n/**\r\n * <code>Vector4</code> 类用于创建四维向量。\r\n */\r\nexport class Vector4 implements IClone {\r\n\r\n    /**零向量*/\r\n    static readonly ZERO: Readonly<Vector4> = new Vector4();\r\n\r\n    /*一向量*/\r\n    static readonly ONE: Readonly<Vector4> = new Vector4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    /*X单位向量*/\r\n    static readonly UnitX: Readonly<Vector4> = new Vector4(1.0, 0.0, 0.0, 0.0);\r\n\r\n    /*Y单位向量*/\r\n    static readonly UnitY: Readonly<Vector4> = new Vector4(0.0, 1.0, 0.0, 0.0);\r\n\r\n    /*Z单位向量*/\r\n    static readonly UnitZ: Readonly<Vector4> = new Vector4(0.0, 0.0, 1.0, 0.0);\r\n\r\n    /*W单位向量*/\r\n    static readonly UnitW: Readonly<Vector4> = new Vector4(0.0, 0.0, 0.0, 1.0);\r\n\r\n    /** @internal */\r\n    static tempVec4: Vector4 = new Vector4(0.0, 0.0, 0.0, 0.0);\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector4</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     * @param\tw  W轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置xyzw值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @param\tw W值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: any[], offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n        this.w = arr[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z, this.w];\r\n    }\r\n\r\n    /**\r\n     * 写入Float32Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n        arr[offset + 3] = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector4: Vector4 = (<Vector4>destObject);\r\n        destVector4.x = this.x;\r\n        destVector4.y = this.y;\r\n        destVector4.z = this.z;\r\n        destVector4.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector4: Vector4 = new Vector4();\r\n        this.cloneTo(destVector4);\r\n        return destVector4;\r\n    }\r\n\r\n    /**\r\n     * 插值四维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector4, b: Vector4, t: number, out: Vector4): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, aw: number = a.w;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n        out.w = aw + t * (b.w - aw);\r\n    }\r\n\r\n    /**\r\n     * 通过4x4矩阵把一个四维向量转换为另一个四维向量\r\n     * @param\tvector4 带转换四维向量。\r\n     * @param\tM4x4    4x4矩阵。\r\n     * @param\tout     转换后四维向量。\r\n     */\r\n    static transformByM4x4(vector4: Vector4, m4x4: Matrix4x4, out: Vector4): void {\r\n        var vx: number = vector4.x;\r\n        var vy: number = vector4.y;\r\n        var vz: number = vector4.z;\r\n        var vw: number = vector4.w;\r\n\r\n        var me: Float32Array = m4x4.elements;\r\n\r\n        out.x = vx * me[0] + vy * me[4] + vz * me[8] + vw * me[12];\r\n        out.y = vx * me[1] + vy * me[5] + vz * me[9] + vw * me[13];\r\n        out.z = vx * me[2] + vy * me[6] + vz * me[10] + vw * me[14];\r\n        out.w = vx * me[3] + vy * me[7] + vz * me[11] + vw * me[15];\r\n    }\r\n\r\n    /**\r\n     * 判断两个四维向量是否相等。\r\n     * @param\ta 四维向量。\r\n     * @param\tb 四维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector4, b: Vector4): boolean {\r\n        return MathUtils3D.nearEqual(Math.abs(a.x), Math.abs(b.x)) && MathUtils3D.nearEqual(Math.abs(a.y), Math.abs(b.y)) && MathUtils3D.nearEqual(Math.abs(a.z), Math.abs(b.z)) && MathUtils3D.nearEqual(Math.abs(a.w), Math.abs(b.w));\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value:Vector4){\r\n        return Vector4.equals(this,value);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量的长度。\r\n     * @return  长度。\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 求四维向量长度的平方。\r\n     * @return  长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n\r\n        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n    }\r\n\r\n    /**\r\n     * 归一化四维向量。\r\n     * @param\ts   源四维向量。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static normalize(s: Vector4, out: Vector4): void {\r\n        var len: number = s.length();\r\n        if (len > 0) {\r\n            var inverse: number = 1.0 / len;\r\n            out.x = s.x * inverse;\r\n            out.y = s.y * inverse;\r\n            out.z = s.z * inverse;\r\n            out.w = s.w * inverse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的和。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n        out.w = a.w + b.w;\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的差。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static subtract(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x - b.x;\r\n        out.y = a.y - b.y;\r\n        out.z = a.z - b.z;\r\n        out.w = a.w - b.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四维向量的乘积。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static multiply(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n        out.w = a.w * b.w;\r\n    }\r\n\r\n    /**\r\n     * 缩放四维向量。\r\n     * @param\ta   源四维向量。\r\n     * @param\tb   缩放值。\r\n     * @param\tout 输出四维向量。\r\n     */\r\n    static scale(a: Vector4, b: number, out: Vector4): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n        out.w = a.w * b;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的四维向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin   最小\r\n     * @param\tmax   最大\r\n     * @param   out   输出向量\r\n     */\r\n    static Clamp(value: Vector4, min: Vector4, max: Vector4, out: Vector4): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n        var w: number = value.w;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n        var mineW: number = min.w;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n        var maxeW: number = max.w;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        w = (w > maxeW) ? maxeW : w;\r\n        w = (w < mineW) ? mineW : w;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n        out.w = w;\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return (x * x) + (y * y) + (z * z) + (w * w);\r\n    }\r\n\r\n    /**\r\n     * 两个四维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector4, value2: Vector4): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        var w: number = value1.w - value2.w;\r\n\r\n        return Math.sqrt((x * x) + (y * y) + (z * z) + (w * w));\r\n    }\r\n\r\n    /**\r\n     * 求两个四维向量的点积。\r\n     * @param\ta 向量。\r\n     * @param\tb 向量。\r\n     * @return  点积。\r\n     */\r\n    static dot(a: Vector4, b: Vector4): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z) + (a.w * b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最小值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static min(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n        out.w = Math.min(a.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个四维向量x、y、z的最大值计算新的四维向量。\r\n     * @param\ta   四维向量。\r\n     * @param\tb   四维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector4, b: Vector4, out: Vector4): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n        out.w = Math.max(a.w, b.w);\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void {\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { Vector4 } from \"./Vector4\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Quaternion } from \"./Quaternion\";\r\n\r\n/**\r\n * <code>Vector3</code> 类用于创建三维向量。\r\n */\r\nexport class Vector3 implements IClone {\r\n    /**@internal\t*/\r\n    static _tempVector4 = new Vector4();\r\n\r\n    static readonly ZERO: Readonly<Vector3> = new Vector3(0.0, 0.0, 0.0);\r\n    static readonly ONE: Readonly<Vector3> = new Vector3(1.0, 1.0, 1.0);\r\n    static readonly NegativeUnitX: Readonly<Vector3> = new Vector3(-1, 0, 0);\r\n    static readonly UnitX: Readonly<Vector3> = new Vector3(1, 0, 0);\r\n    static readonly UnitY: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n    static readonly UnitZ: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly ForwardRH: Readonly<Vector3> = new Vector3(0, 0, -1);\r\n    static readonly ForwardLH: Readonly<Vector3> = new Vector3(0, 0, 1);\r\n    static readonly Up: Readonly<Vector3> = new Vector3(0, 1, 0);\r\n\r\n    /**\r\n     * 两个三维向量距离的平方。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离的平方。\r\n     */\r\n    static distanceSquared(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return (x * x) + (y * y) + (z * z);\r\n    }\r\n\r\n    /**\r\n     * 两个三维向量距离。\r\n     * @param\tvalue1 向量1。\r\n     * @param\tvalue2 向量2。\r\n     * @return\t距离。\r\n     */\r\n    static distance(value1: Vector3, value2: Vector3): number {\r\n        var x: number = value1.x - value2.x;\r\n        var y: number = value1.y - value2.y;\r\n        var z: number = value1.z - value2.z;\r\n        return Math.sqrt((x * x) + (y * y) + (z * z));\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最小值计算新的三维向量。\r\n     * @param\ta。\r\n     * @param\tb。\r\n     * @param\tout。\r\n     */\r\n    static min(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.min(a.x, b.x);\r\n        out.y = Math.min(a.y, b.y);\r\n        out.z = Math.min(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 分别取两个三维向量x、y、z的最大值计算新的三维向量。\r\n     * @param\ta a三维向量。\r\n     * @param\tb b三维向量。\r\n     * @param\tout 结果三维向量。\r\n     */\r\n    static max(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = Math.max(a.x, b.x);\r\n        out.y = Math.max(a.y, b.y);\r\n        out.z = Math.max(a.z, b.z);\r\n    }\r\n\r\n    /**\r\n     * 根据四元数旋转三维向量。\r\n     * @param\tsource 源三维向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static transformQuat(source: Vector3, rotation: Quaternion, out: Vector3): void {\r\n        var x: number = source.x, y: number = source.y, z: number = source.z, qx: number = rotation.x, qy: number = rotation.y, qz: number = rotation.z, qw: number = rotation.w,\r\n\r\n            ix: number = qw * x + qy * z - qz * y, iy: number = qw * y + qz * x - qx * z, iz: number = qw * z + qx * y - qy * x, iw: number = -qx * x - qy * y - qz * z;\r\n\r\n        out.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度。\r\n     */\r\n    static scalarLength(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * 计算标量长度的平方。\r\n     * @param\ta 源三维向量。\r\n     * @return 标量长度的平方。\r\n     */\r\n    static scalarLengthSquared(a: Vector3): number {\r\n        var x: number = a.x, y: number = a.y, z: number = a.z;\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * 归一化三维向量。\r\n     * @param\ts 源三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static normalize(s: Vector3, out: Vector3): void {\r\n        var x: number = s.x, y: number = s.y, z: number = s.z;\r\n        var len: number = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = x * len;\r\n            out.y = y * len;\r\n            out.z = z * len;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * 计算两个三维向量的乘积。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static multiply(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x * b.x;\r\n        out.y = a.y * b.y;\r\n        out.z = a.z * b.z;\r\n    }\r\n\r\n    /**\r\n     * 缩放三维向量。\r\n     * @param\ta 源三维向量。\r\n     * @param\tb 缩放值。\r\n     * @param\tout 输出三维向量。\r\n     */\r\n    static scale(a: Vector3, b: number, out: Vector3): void {\r\n        out.x = a.x * b;\r\n        out.y = a.y * b;\r\n        out.z = a.z * b;\r\n    }\r\n\r\n    /**\r\n     * 插值三维向量。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\tt 插值比例。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static lerp(a: Vector3, b: Vector3, t: number, out: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z;\r\n        out.x = ax + t * (b.x - ax);\r\n        out.y = ay + t * (b.y - ay);\r\n        out.z = az + t * (b.z - az);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformV3ToV3(vector: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var intermediate: Vector4 = Vector3._tempVector4;\r\n        Vector3.transformV3ToV4(vector, transform, intermediate);\r\n        result.x = intermediate.x;\r\n        result.y = intermediate.y;\r\n        result.z = intermediate.z;\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个四维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出四维向量。\r\n     */\r\n    static transformV3ToV4(vector: Vector3, transform: Matrix4x4, result: Vector4): void {\r\n        var vectorX: number = vector.x;\r\n        var vectorY: number = vector.y;\r\n        var vectorZ: number = vector.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (vectorX * transformElem[0]) + (vectorY * transformElem[4]) + (vectorZ * transformElem[8]) + transformElem[12];\r\n        result.y = (vectorX * transformElem[1]) + (vectorY * transformElem[5]) + (vectorZ * transformElem[9]) + transformElem[13];\r\n        result.z = (vectorX * transformElem[2]) + (vectorY * transformElem[6]) + (vectorZ * transformElem[10]) + transformElem[14];\r\n        result.w = (vectorX * transformElem[3]) + (vectorY * transformElem[7]) + (vectorZ * transformElem[11]) + transformElem[15];\r\n    }\r\n\r\n    /**\r\n     * 通过法线矩阵转换一个法线三维向量到另外一个三维向量。\r\n     * @param\tnormal 源法线三维向量。\r\n     * @param\ttransform  法线变换矩阵。\r\n     * @param\tresult 输出法线三维向量。\r\n     */\r\n    static TransformNormal(normal: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var normalX: number = normal.x;\r\n        var normalY: number = normal.y;\r\n        var normalZ: number = normal.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        result.x = (normalX * transformElem[0]) + (normalY * transformElem[4]) + (normalZ * transformElem[8]);\r\n        result.y = (normalX * transformElem[1]) + (normalY * transformElem[5]) + (normalZ * transformElem[9]);\r\n        result.z = (normalX * transformElem[2]) + (normalY * transformElem[6]) + (normalZ * transformElem[10]);\r\n    }\r\n\r\n    /**\r\n     * 通过矩阵转换一个三维向量到另外一个归一化的三维向量。\r\n     * @param\tvector 源三维向量。\r\n     * @param\ttransform  变换矩阵。\r\n     * @param\tresult 输出三维向量。\r\n     */\r\n    static transformCoordinate(coordinate: Vector3, transform: Matrix4x4, result: Vector3): void {\r\n        var coordinateX: number = coordinate.x;\r\n        var coordinateY: number = coordinate.y;\r\n        var coordinateZ: number = coordinate.z;\r\n\r\n        var transformElem: Float32Array = transform.elements;\r\n        var w: number = coordinateX * transformElem[3] + coordinateY * transformElem[7] + coordinateZ * transformElem[11] + transformElem[15];\r\n        result.x = (coordinateX * transformElem[0] + coordinateY * transformElem[4] + coordinateZ * transformElem[8] + transformElem[12]) / w;\r\n        result.y = (coordinateX * transformElem[1] + coordinateY * transformElem[5] + coordinateZ * transformElem[9] + transformElem[13]) / w;\r\n        result.z = (coordinateX * transformElem[2] + coordinateY * transformElem[6] + coordinateZ * transformElem[10] + transformElem[14]) / w;\r\n    }\r\n\r\n    /**\r\n     * 求一个指定范围的向量\r\n     * @param\tvalue clamp向量\r\n     * @param\tmin  最小\r\n     * @param\tmax  最大\r\n     * @param   out 输出向量\r\n     */\r\n    static Clamp(value: Vector3, min: Vector3, max: Vector3, out: Vector3): void {\r\n        var x: number = value.x;\r\n        var y: number = value.y;\r\n        var z: number = value.z;\r\n\r\n        var mineX: number = min.x;\r\n        var mineY: number = min.y;\r\n        var mineZ: number = min.z;\r\n\r\n        var maxeX: number = max.x;\r\n        var maxeY: number = max.y;\r\n        var maxeZ: number = max.z;\r\n\r\n        x = (x > maxeX) ? maxeX : x;\r\n        x = (x < mineX) ? mineX : x;\r\n\r\n        y = (y > maxeY) ? maxeY : y;\r\n        y = (y < mineY) ? mineY : y;\r\n\r\n        z = (z > maxeZ) ? maxeZ : z;\r\n        z = (z < mineZ) ? mineZ : z;\r\n\r\n        out.x = x;\r\n        out.y = y;\r\n        out.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的和。\r\n     * @param\ta left三维向量。\r\n     * @param\tb right三维向量。\r\n     * @param\tout 输出向量。\r\n     */\r\n    static add(a: Vector3, b: Vector3, out: Vector3): void {\r\n        out.x = a.x + b.x;\r\n        out.y = a.y + b.y;\r\n        out.z = a.z + b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的差。\r\n     * @param\ta  left三维向量。\r\n     * @param\tb  right三维向量。\r\n     * @param\to out 输出向量。\r\n     */\r\n    static subtract(a: Vector3, b: Vector3, o: Vector3): void {\r\n        o.x = a.x - b.x;\r\n        o.y = a.y - b.y;\r\n        o.z = a.z - b.z;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的叉乘。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @param\to 输出向量。\r\n     */\r\n    static cross(a: Vector3, b: Vector3, o: Vector3): void {\r\n        var ax: number = a.x, ay: number = a.y, az: number = a.z, bx: number = b.x, by: number = b.y, bz: number = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n    }\r\n\r\n    /**\r\n     * 求两个三维向量的点积。\r\n     * @param\ta left向量。\r\n     * @param\tb right向量。\r\n     * @return   点积。\r\n     */\r\n    static dot(a: Vector3, b: Vector3): number {\r\n        return (a.x * b.x) + (a.y * b.y) + (a.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 判断两个三维向量是否相等。\r\n     * @param\ta 三维向量。\r\n     * @param\tb 三维向量。\r\n     * @return  是否相等。\r\n     */\r\n    static equals(a: Vector3, b: Vector3): boolean {\r\n        return MathUtils3D.nearEqual(a.x, b.x) && MathUtils3D.nearEqual(a.y, b.y) && MathUtils3D.nearEqual(a.z, b.z);\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Vector3</code> 实例。\r\n     * @param\tx  X轴坐标。\r\n     * @param\ty  Y轴坐标。\r\n     * @param\tz  Z轴坐标。\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n    }\r\n\r\n    /**\r\n     * 求四维向量是否相等\r\n     * @param value \r\n     * @returns \r\n     */\r\n    equal(value: Vector3) {\r\n        return Vector3.equals(this, value);\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number): Vector3 {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 设置xyz值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回Vector3\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  arr 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(arr: any[], offset: number = 0): void {\r\n        this.x = arr[offset + 0];\r\n        this.y = arr[offset + 1];\r\n        this.z = arr[offset + 2];\r\n    }\r\n\r\n    /**\r\n     * 转换为Array数组\r\n     * @return\r\n     */\r\n    toArray(): Array<number> {\r\n        return [this.x, this.y, this.z];\r\n    }\r\n\r\n    /**\r\n     * 写入Array数组\r\n     * @param arr 数组。\r\n     * @param offset 数组偏移。 \r\n     */\r\n    writeTo(arr: Float32Array, offset: number = 0): void {\r\n        arr[offset + 0] = this.x;\r\n        arr[offset + 1] = this.y;\r\n        arr[offset + 2] = this.z;\r\n    }\r\n\r\n    /**\r\n     * 计算长度。\r\n     * @return 长度。\r\n     */\r\n    length() {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\r\n    }\r\n\r\n    /**\r\n     * 计算平方。\r\n     * @return 返回向量长度的平方。\r\n     */\r\n    lengthSquared() {\r\n        return this.x * this.x + this.y * this.y + this.z * this.z;\r\n    }\r\n\r\n    /**\r\n     * 向量相减\r\n     * @param b 被减向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vsub(b: Vector3, out: Vector3) {\r\n        out.x = this.x - b.x;\r\n        out.y = this.y - b.y;\r\n        out.z = this.z - b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 向量相加\r\n     * @param b 加向量\r\n     * @param out \r\n     * @returns \r\n     */\r\n    vadd(b: Vector3, out: Vector3) {\r\n        out.x = this.x + b.x;\r\n        out.y = this.y + b.y;\r\n        out.z = this.z + b.z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 缩放向量\r\n     * @param s 缩放值\r\n     * @param out\r\n     * @returns 返回缩放向量\r\n     */\r\n    scale(s: number, out: Vector3) {\r\n        out.x = this.x * s;\r\n        out.y = this.y * s;\r\n        out.z = this.z * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 归一化向量\r\n     * @returns \r\n     */\r\n    normalize() {\r\n        let x = this.x, y = this.y, z = this.z;\r\n        var len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            this.x = x * len;\r\n            this.y = y * len;\r\n            this.z = z * len;\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 向量点乘\r\n     * @param b \r\n     * @returns \r\n     */\r\n    dot(b: Vector3): number {\r\n        return (this.x * b.x) + (this.y * b.y) + (this.z * b.z);\r\n    }\r\n\r\n    /**\r\n     * 向量叉乘\r\n     * @param b \r\n     * @param o \r\n     * @returns \r\n     */\r\n    cross(b: Vector3, o: Vector3): Vector3 {\r\n        var ax = this.x, ay = this.y, az = this.z, bx = b.x, by = b.y, bz = b.z;\r\n        o.x = ay * bz - az * by;\r\n        o.y = az * bx - ax * bz;\r\n        o.z = ax * by - ay * bx;\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var destVector3: Vector3 = (<Vector3>destObject);\r\n        destVector3.x = this.x;\r\n        destVector3.y = this.y;\r\n        destVector3.z = this.z;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var destVector3: Vector3 = new Vector3();\r\n        this.cloneTo(destVector3);\r\n        return destVector3;\r\n    }\r\n\r\n    /**\r\n     * 设置默认值\r\n     */\r\n    toDefault(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n    }\r\n}\r\n\r\n","import { Config } from \"./Config\";\r\nimport { Vector3 } from \"./laya/maths/Vector3\";\r\n\r\n/**\r\n * <code>Config3D</code> 类用于创建3D初始化配置。\r\n */\r\nexport class Config3D {\r\n    /**\r\n     * 控制是否动态合并 \r\n     */\r\n    static enableDynamicBatch: boolean = true;\r\n    /**\r\n     * 是否静态合并 \r\n     */\r\n    static enableStaticBatch: boolean = true;\r\n    /** \r\n     * 是否开启UniformBuffer\r\n     */\r\n    static enableUniformBufferObject = true;\r\n    /**\r\n     * 设置3DRT分辨率倍数\r\n     */\r\n    static pixelRatio: number = 1;\r\n    /**\r\n     *  设置自定义分辨率\r\n     */\r\n    static customResolution: boolean = false;\r\n    /**\r\n     *  设置最大RendertexturePool缓存的值\r\n     */\r\n    static defaultCacheRTMemory: number = 256;\r\n    /**\r\n     * 默认物理功能初始化内存，单位为M。\r\n     */\r\n    static defaultPhysicsMemory: number = 16;\r\n    /**\r\n     *  是否开启多光源,如果场景不需要多光源，关闭后可提升性能。\r\n     */\r\n    static enableMultiLight: boolean = true;\r\n    /**\r\n     * 最大光源数量。\r\n     */\r\n    static maxLightCount: number = 32;\r\n    /**\r\n    * X、Y、Z轴的光照集群数量,Z值会影响Cluster接受区域光(点光、聚光)影响的数量,Math.floor(2048 / lightClusterCount.z - 1) * 4 为每个Cluster的最大平均接受区域光数量,如果每个Cluster所接受光源影响的平均数量大于该值，则较远的Cluster会忽略其中多余的光照影响。\r\n    */\r\n    static lightClusterCount: Vector3 = new Vector3(12, 12, 12);\r\n\r\n    /**\r\n     * 最大形变数量\r\n     */\r\n    static maxMorphTargetCount: number = 32;\r\n\r\n    /**\r\n    * 设置分辨率大小（并不是实际渲染分辨率）\r\n    * @param width \r\n    * @param height \r\n    */\r\n    static setResolution(width: number, height: number) {\r\n        Config3D.customResolution = true;\r\n        Config3D._resoluWidth = width;\r\n        Config3D._resoluHeight = height;\r\n    }\r\n\r\n    /**BVHRenderConfig */\r\n    /**是否使用BVH裁剪 */\r\n    static useBVHCull: boolean = false;\r\n    /**一个BVH节点最大的cell数，超过这个数会分离 */\r\n    static BVH_max_SpatialCount = 7;\r\n    /**最大BVH节点的大小 */\r\n    static BVH_limit_size = 32;\r\n    /**最小cellbuild数，如果小于这个数，不会BVH构建 */\r\n    static BVH_Min_Build_nums = 10\r\n\r\n\r\n    //----引擎内部使用,不暴露给开发者----\r\n    /**@internal */\r\n    static _uniformBlock: boolean;\r\n    /**@internal 设置分辨率宽度*/\r\n    static _resoluWidth: number = -1;\r\n    /**@internal 设置分辨率高度*/\r\n    static _resoluHeight: number = -1;\r\n    /**@internal*/\r\n    static _maxAreaLightCountPerClusterAverage: number;\r\n    /**@internal*/\r\n    static _multiLighting: boolean;\r\n    /** @internal是否开启视锥裁剪调试。\r\n     */\r\n    static debugFrustumCulling: boolean = false;\r\n}\r\n\r\nConfig.isStencil = true;","import { Config3D } from \"../../Config3D\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { InternalRenderTarget } from \"../RenderEngine/RenderInterface/InternalRenderTarget\";\r\nimport { IRenderTarget } from \"../RenderEngine/RenderInterface/IRenderTarget\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport class RenderTexture extends BaseTexture implements IRenderTarget {\r\n\r\n    // todo 记录当前 绑定 rt  位置不放在这里\r\n    protected static _currentActive: RenderTexture = null;\r\n\r\n    static get currentActive(): RenderTexture {\r\n        return RenderTexture._currentActive;\r\n    }\r\n\r\n    protected static _configInstance: any = {};\r\n    static configRenderContextInstance(value: any) {\r\n        RenderTexture._configInstance = value;\r\n    }\r\n\r\n    private static _pool: RenderTexture[] = [];\r\n    private static _poolMemory: number = 0;\r\n\r\n    /**\r\n     * 创建一个RenderTexture\r\n     * @param width\r\n     * @param height\r\n     * @param colorFormat\r\n     * @param depthFormat\r\n     * @param mipmap \r\n     * @param multiSamples \r\n     * @param depthTexture \r\n     * @param sRGB \r\n     * @returns \r\n     */\r\n    static createFromPool(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, mipmap: boolean = false, multiSamples: number = 1, depthTexture: boolean = false, sRGB: boolean = false) {\r\n\r\n        // todo mipmap 判断\r\n        mipmap = mipmap && (width & (width - 1)) === 0 && (height & (height - 1)) === 0;\r\n\r\n        let n = RenderTexture._pool.length;\r\n        for (let index = 0; index < n; index++) {\r\n            let rt = RenderTexture._pool[index];\r\n\r\n            if (rt.width == width && rt.height == height && rt.colorFormat == colorFormat && rt.depthStencilFormat == depthFormat && rt._generateMipmap == mipmap && rt.multiSamples == multiSamples && rt.generateDepthTexture == depthTexture && rt._gammaSpace == sRGB) {\r\n                rt._inPool = false;\r\n                let end = RenderTexture._pool[n - 1];\r\n                RenderTexture._pool[index] = end;\r\n                RenderTexture._pool.length -= 1;\r\n                RenderTexture._poolMemory -= (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n                return rt;\r\n            }\r\n        }\r\n\r\n        let rt = new RenderTexture(width, height, colorFormat, depthFormat, mipmap, multiSamples, depthTexture, sRGB);\r\n        rt.lock = true;\r\n        return rt;\r\n    }\r\n\r\n    static recoverToPool(rt: RenderTexture): void {\r\n        if (rt._inPool || rt.destroyed)\r\n            return;\r\n        RenderTexture._pool.push(rt);\r\n        RenderTexture._poolMemory += (rt._renderTarget.gpuMemory / 1024 / 1024);\r\n        rt._inPool = true;\r\n    }\r\n\r\n    static clearPool() {\r\n        if (RenderTexture._poolMemory < Config3D.defaultCacheRTMemory) {\r\n            return;\r\n        }\r\n        for (var i in RenderTexture._pool) {\r\n            RenderTexture._pool[i].destroy();\r\n        }\r\n        RenderTexture._pool = [];\r\n        RenderTexture._poolMemory = 0;\r\n    }\r\n\r\n    /** @internal 最后绑定到主画布上的结果 此值可能为null*/\r\n    private static _bindCanvasRender: RenderTexture;\r\n    /**\r\n     * 绑定到主画布上的RenderTexture\r\n     */\r\n    static get bindCanvasRender(): RenderTexture {\r\n        return RenderTexture._bindCanvasRender;\r\n    }\r\n\r\n    static set bindCanvasRender(value: RenderTexture) {\r\n        if (value != this._bindCanvasRender)\r\n            //(this._bindCanvasRender) && RenderTexture.recoverToPool(this._bindCanvasRender);\r\n            this._bindCanvasRender = value;\r\n    }\r\n\r\n\r\n    _inPool: boolean = false;\r\n\r\n    _isCameraTarget: boolean = false;\r\n\r\n    _renderTarget: InternalRenderTarget;\r\n\r\n    private _generateDepthTexture: boolean = false;\r\n    public get generateDepthTexture(): boolean {\r\n        return this._generateDepthTexture;\r\n    }\r\n    public set generateDepthTexture(value: boolean) {\r\n\r\n        // todo  重复 设置\r\n        if (value && !this._depthStencilTexture) {\r\n            // todo  base texture format 移出构造函数\r\n            this._depthStencilTexture = new BaseTexture(this.width, this.height, this.depthStencilFormat);\r\n            // @ts-ignore\r\n            this._depthStencilTexture._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n            this._depthStencilTexture._texture = LayaGL.textureContext.createRenderTextureInternal(TextureDimension.Tex2D, this.width, this.height, this.depthStencilFormat, false, false);\r\n\r\n            LayaGL.textureContext.setupRendertargetTextureAttachment(this._renderTarget, this._depthStencilTexture._texture);\r\n\r\n        }\r\n\r\n        this._generateDepthTexture = value;\r\n    }\r\n\r\n    private _depthStencilTexture: BaseTexture;\r\n\r\n    get depthStencilTexture(): BaseTexture {\r\n        return this._depthStencilTexture;\r\n    }\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    get colorFormat(): RenderTargetFormat {\r\n        return this._renderTarget.colorFormat;\r\n    }\r\n\r\n    protected _depthStencilFormat: RenderTargetFormat;\r\n    get depthStencilFormat(): RenderTargetFormat {\r\n        return this._renderTarget.depthStencilFormat;\r\n    }\r\n\r\n    protected _multiSamples: number;\r\n    public get multiSamples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get isCube(): boolean {\r\n        return this._renderTarget._isCube;\r\n    }\r\n\r\n    get samples(): number {\r\n        return this._renderTarget._samples;\r\n    }\r\n\r\n    get generateMipmap(): boolean {\r\n        return this._renderTarget._generateMipmap;\r\n    }\r\n\r\n    /**\r\n     * @param width \r\n     * @param height \r\n     * @param colorFormat \r\n     * @param depthFormat \r\n     * @param generateMipmap \r\n     * @param multiSamples \r\n     * @param generateDepthTexture \r\n     * @param sRGB \r\n     */\r\n    constructor(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        super(width, height, colorFormat);\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _createRenderTarget() {\r\n        this._dimension = TextureDimension.Tex2D;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetInternal(this.width, this.height, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        // rt 格式 宽高可能不支持\r\n        this._generateMipmap = this._renderTarget._generateMipmap;\r\n        this._texture = this._renderTarget._textures[0];\r\n\r\n        this.generateDepthTexture = this._generateDepthTexture;\r\n    }\r\n\r\n    //@internal\r\n    recreate(width: number, height: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean = false, multiSamples: number = 1, generateDepthTexture: boolean = false, sRGB: boolean = false) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this._format = <TextureFormat><any>colorFormat;\r\n\r\n        this._gammaSpace = sRGB;\r\n\r\n        this._depthStencilFormat = (depthFormat == null ? RenderTargetFormat.None : depthFormat);\r\n\r\n        this._generateMipmap = generateMipmap;\r\n        this._multiSamples = multiSamples;\r\n        this._generateDepthTexture = generateDepthTexture;\r\n\r\n        this._disposeResource();\r\n\r\n        // todo format \r\n        this._createRenderTarget();\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget);\r\n        }\r\n    }\r\n\r\n    _end() {\r\n        RenderTexture._currentActive = null;\r\n\r\n        LayaGL.textureContext.unbindRenderTarget(this._renderTarget);\r\n        (this._isCameraTarget) && (RenderTexture._configInstance.invertY = false);\r\n    }\r\n\r\n    getData(xOffset: number, yOffset: number, width: number, height: number, out: Uint8Array | Float32Array): Uint8Array | Float32Array {\r\n        LayaGL.textureContext.readRenderTargetPixelData(this._renderTarget, xOffset, yOffset, width, height, out);\r\n        return out;\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n\r\n        if (RenderTexture._currentActive == this) {\r\n            this._end();\r\n        }\r\n\r\n        this._renderTarget.dispose();\r\n        this._renderTarget = null;\r\n        this._depthStencilTexture?.destroy();\r\n        this._depthStencilTexture = null;\r\n    }\r\n\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { Bezier } from \"../maths/Bezier\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { BlendEquationSeparate } from \"../RenderEngine/RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEngine/RenderEnum/BlendFactor\";\r\nimport { CullMode } from \"../RenderEngine/RenderEnum/CullMode\";\r\nimport { RenderClearFlag } from \"../RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { RenderStateType } from \"../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderStateCommand } from \"../RenderEngine/RenderStateCommand\";\r\nimport { FontInfo } from \"../utils/FontInfo\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { DrawStyle } from \"../webgl/canvas/DrawStyle\";\r\nimport { Path } from \"../webgl/canvas/Path\";\r\nimport { ISaveData } from \"../webgl/canvas/save/ISaveData\";\r\nimport { SaveBase } from \"../webgl/canvas/save/SaveBase\";\r\nimport { SaveClipRect } from \"../webgl/canvas/save/SaveClipRect\";\r\nimport { SaveMark } from \"../webgl/canvas/save/SaveMark\";\r\nimport { SaveTransform } from \"../webgl/canvas/save/SaveTransform\";\r\nimport { SaveTranslate } from \"../webgl/canvas/save/SaveTranslate\";\r\nimport { WebGLCacheAsNormalCanvas } from \"../webgl/canvas/WebGLCacheAsNormalCanvas\";\r\nimport { BaseShader } from \"../webgl/shader/BaseShader\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinMeshBuffer } from \"../webgl/shader/d2/skinAnishader/SkinMeshBuffer\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { BasePoly } from \"../webgl/shapes/BasePoly\";\r\nimport { Earcut } from \"../webgl/shapes/Earcut\";\r\nimport { ISubmit } from \"../webgl/submit/ISubmit\";\r\nimport { Submit } from \"../webgl/submit/Submit\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { SubmitCanvas } from \"../webgl/submit/SubmitCanvas\";\r\nimport { SubmitCMD } from \"../webgl/submit/SubmitCMD\";\r\nimport { SubmitKey } from \"../webgl/submit/SubmitKey\";\r\nimport { SubmitTarget } from \"../webgl/submit/SubmitTarget\";\r\nimport { SubmitTexture } from \"../webgl/submit/SubmitTexture\";\r\nimport { CharRenderInfo } from \"../webgl/text/CharRenderInfo\";\r\nimport { CharSubmitCache } from \"../webgl/text/CharSubmitCache\";\r\nimport { TextRender } from \"../webgl/text/TextRender\";\r\nimport { Mesh2D } from \"../webgl/utils/Mesh2D\";\r\nimport { MeshQuadTexture } from \"../webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"../webgl/utils/MeshTexture\";\r\nimport { MeshVG } from \"../webgl/utils/MeshVG\";\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { HTMLCanvas } from \"./HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { NativeContext } from \"./NativeContext\";\r\nimport { Const } from \"../Const\";\r\nimport { Color } from \"../maths/Color\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\nconst defaultClipMatrix = new Matrix(Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE, 0, 0);\r\n\r\n/**\r\n * @private\r\n * Context扩展类\r\n */\r\nexport class Context {\r\n\r\n    /**@internal */\r\n    static _rendercontex: Context;\r\n    /**@internal */\r\n    _canvas: HTMLCanvas;\r\n    /**@internal */\r\n    _drawingToTexture: boolean;\r\n\r\n    static _SUBMITVBSIZE: number = 32000;\r\n\r\n    private static _MAXVERTNUM: number = 65535;\r\n\r\n    static MAXCLIPRECT: Rectangle = null;\r\n\r\n    static _COUNT: number = 0;\r\n\r\n    /**@internal */\r\n    _tmpMatrix: Matrix = new Matrix();\t\t// chrome下静态的访问比从this访问要慢\r\n\r\n    private static SEGNUM: number = 32;\r\n\r\n    private static _contextcount: number = 0;\r\n\r\n    private _drawTexToDrawTri_Vert: Float32Array = new Float32Array(8);\t\t// 从速度考虑，不做成static了\r\n    private _drawTexToDrawTri_Index: Uint16Array = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n    private _tempUV: Float32Array = new Float32Array(8);\r\n    private _drawTriUseAbsMatrix: boolean = false;\t//drawTriange函数的矩阵是全局的，不用再乘以当前矩阵了。这是一个补丁。\r\n\r\n    static __init__(): void {\r\n        Context.MAXCLIPRECT = new Rectangle(0, 0, Const.MAX_CLIP_SIZE, Const.MAX_CLIP_SIZE);\r\n        ContextParams.DEFAULT = new ContextParams();\r\n        WebGLCacheAsNormalCanvas;\r\n    }\r\n\r\n    /**@private */\r\n    drawImage(...args: any[]): void {\r\n    }\r\n\r\n    /**@private */\r\n    getImageData(...args: any[]): any {\r\n    }\r\n\r\n    /**@private */\r\n    measureText(text: string): any {\r\n        return null;\r\n    }\r\n\r\n    /**@private */\r\n    setTransform(...args: any[]): void {\r\n    }\r\n\r\n\r\n    /**@private */\r\n    $transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n    }\r\n\r\n\r\n    /**@private */\r\n    get lineJoin(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineJoin(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get lineCap(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set lineCap(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    get miterLimit(): string {\r\n        return '';\r\n    }\r\n\r\n    /**@private */\r\n    set miterLimit(value: string) {\r\n    }\r\n\r\n    /**@private */\r\n    clearRect(x: number, y: number, width: number, height: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _drawRect(x: number, y: number, width: number, height: number, style: any): void {\r\n        style && (this.fillStyle = style);\r\n        this.fillRect(x, y, width, height, null);\r\n    }\r\n\r\n    ///**@private */\r\n    //public function transformByMatrix(value:Matrix):void {\r\n    //this.transform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    //public function setTransformByMatrix(value:Matrix):void {\r\n    //\tthis.setTransform(value.a, value.b, value.c, value.d, value.tx, value.ty);\r\n    //}\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    drawTexture2(x: number, y: number, pivotX: number, pivotY: number, m: Matrix, args2: any[]): void {\r\n    }\r\n\r\n    //=============新增==================\r\n    transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        this.transform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx + tx, matrix.ty + ty);\r\n    }\r\n\r\n    saveTransform(matrix: Matrix): void {\r\n        this.save();\r\n    }\r\n\r\n    restoreTransform(matrix: Matrix): void {\r\n        this.restore();\r\n    }\r\n\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number): void {\r\n        var ctx: any = this;\r\n\r\n        //填充矩形\r\n        if (fillColor != null) {\r\n            ctx.fillStyle = fillColor;\r\n            ctx.fillRect(x, y, width, height);\r\n        }\r\n\r\n        //绘制矩形边框\r\n        if (lineColor != null) {\r\n            ctx.strokeStyle = lineColor;\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeRect(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    alpha(value: number): void {\r\n        this.globalAlpha *= value;\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _transform(mat: Matrix, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.transform(mat.a, mat.b, mat.c, mat.d, mat.tx, mat.ty);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _rotate(angle: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.rotate(angle);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _scale(scaleX: number, scaleY: number, pivotX: number, pivotY: number): void {\r\n        this.translate(pivotX, pivotY);\r\n        this.scale(scaleX, scaleY);\r\n        this.translate(-pivotX, -pivotY);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLine(x: number, y: number, fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        this.moveTo(x + fromX, y + fromY);\r\n        this.lineTo(x + toX, y + toY);\r\n        this.stroke();\r\n    }\r\n\r\n    /**@internal */\r\n    _drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        this.addPath(points.slice(), false, false, x, y);\r\n        this.stroke();\r\n    }\r\n\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number): void {\r\n        this.beginPath();\r\n        this.strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        //var points:Array = args[2];\r\n        //x += args[0], y += args[1];\r\n        this.moveTo(x + points[0], y + points[1]);\r\n        var i: number = 2, n: number = points.length;\r\n        while (i < n) {\r\n            this.quadraticCurveTo(x + points[i++], y + points[i++], x + points[i++], y + points[i++]);\r\n        }\r\n        this.stroke();\r\n    }\r\n\r\n    private _fillAndStroke(fillColor: string, strokeColor: string, lineWidth: number, isConvexPolygon: boolean = false): void {\r\n        //绘制填充区域\r\n        if (fillColor != null) {\r\n            this.fillStyle = fillColor;\r\n            this.fill();\r\n        }\r\n\r\n        //绘制边框\r\n        if (strokeColor != null && lineWidth > 0) {\r\n            this.strokeStyle = strokeColor;\r\n            this.lineWidth = lineWidth;\r\n            this.stroke();\r\n        }\r\n    }\r\n    /**Math.PI*2的结果缓存 */\r\n    static PI2: number = 2 * Math.PI;\r\n    /**@internal */\r\n    _drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        this.beginPath(true);\r\n        this.arc(x, y, radius, 0, Context.PI2);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n    }\r\n\r\n    //矢量方法\t\r\n    /**@internal */\r\n    _drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number, vid: number): void {\r\n        //移动中心点\r\n        //ctx.translate(x + args[0], y + args[1]);\r\n        //形成路径\r\n        this.beginPath();\r\n        this.moveTo(x, y);\r\n        this.arc(x, y, radius, startAngle, endAngle);\r\n        this.closePath();\r\n        //绘制\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth);\r\n        //恢复中心点\r\n        //ctx.translate(-x - args[0], -y - args[1]);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number, isConvexPolygon: boolean, vid: number): void {\r\n        //var points:Array = args[2];\r\n        this.beginPath();\r\n        //poly一定是close的\r\n        this.addPath(points.slice(), true, isConvexPolygon, x, y);\r\n        this.closePath();\r\n        this._fillAndStroke(fillColor, lineColor, lineWidth, isConvexPolygon);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawPath(x: number, y: number, paths: any[], brush: any, pen: any): void {\r\n        //形成路径\r\n        this.beginPath();\r\n        //x += args[0], y += args[1];\r\n\r\n        //var paths:Array = args[2];\r\n        for (var i: number = 0, n: number = paths.length; i < n; i++) {\r\n\r\n            var path: any[] = paths[i];\r\n            switch (path[0]) {\r\n                case \"moveTo\":\r\n                    this.moveTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"lineTo\":\r\n                    this.lineTo(x + path[1], y + path[2]);\r\n                    break;\r\n                case \"arcTo\":\r\n                    this.arcTo(x + path[1], y + path[2], x + path[3], y + path[4], path[5]);\r\n                    break;\r\n                case \"closePath\":\r\n                    this.closePath();\r\n                    break;\r\n            }\r\n        }\r\n\r\n        //var brush:Object = args[3];\r\n        if (brush != null) {\r\n            this.fillStyle = brush.fillStyle;\r\n            this.fill();\r\n        }\r\n\r\n        //var pen:Object = args[4];\r\n        if (pen != null) {\r\n            this.strokeStyle = pen.strokeStyle;\r\n            this.lineWidth = pen.lineWidth || 1;\r\n            this.lineJoin = pen.lineJoin;\r\n            this.lineCap = pen.lineCap;\r\n            this.miterLimit = pen.miterLimit;\r\n            this.stroke();\r\n        }\r\n    }\r\n\r\n    static const2DRenderCMD: RenderStateCommand;\r\n    static set2DRenderConfig(): void {\r\n        if (!Context.const2DRenderCMD) {\r\n            const cmd = Context.const2DRenderCMD = LayaGL.renderEngine.createRenderStateComand();\r\n            cmd.addCMD(RenderStateType.BlendType, true);\r\n            //WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n            cmd.addCMD(RenderStateType.BlendEquation, BlendEquationSeparate.ADD);\r\n            BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n            //WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n            cmd.addCMD(RenderStateType.BlendFunc, [BlendFactor.One, BlendFactor.OneMinusSourceAlpha]);\r\n            //WebGLContext.setDepthTest(gl, false);\r\n            cmd.addCMD(RenderStateType.DepthTest, false);\r\n            //WebGLContext.setDepthMask(gl, true);\r\n            cmd.addCMD(RenderStateType.DepthMask, true);\r\n            //WebGLContext.setCullFace(gl, false);\r\n            cmd.addCMD(RenderStateType.CullFace, false);\r\n            //WebGLContext.setFrontFace(gl, gl.CCW);\r\n            cmd.addCMD(RenderStateType.FrontFace, CullMode.Front);\r\n        }\r\n        Context.const2DRenderCMD.applyCMD();\r\n        RenderTexture.currentActive && RenderTexture.currentActive._end();\r\n        // WebGLContext.setBlend(gl, true);//还原2D设置\r\n        // WebGLContext.setBlendEquation(gl, gl.FUNC_ADD);\r\n        // BlendMode.activeBlendFunction = null;// 防止submit不设置blend\r\n        // WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\r\n        // WebGLContext.setDepthTest(gl, false);\r\n        // WebGLContext.setDepthMask(gl, true);\r\n        // WebGLContext.setCullFace(gl, false);\r\n        // WebGLContext.setFrontFace(gl, gl.CCW);\r\n        RenderTexture2D.currentActive && RenderTexture2D.currentActive.end();\r\n        LayaGL.renderEngine.viewport(0, 0, RenderState2D.width, RenderState2D.height);//还原2D视口\r\n        LayaGL.renderEngine.scissorTest(true);\r\n        LayaGL.renderEngine.scissor(0, 0, RenderState2D.width, RenderState2D.height);\r\n    }\r\n\r\n    /**@internal */\r\n    _id: number = ++Context._COUNT;\r\n\r\n    private _other: ContextParams | null = null;\r\n    private _renderNextSubmitIndex: number = 0;\r\n\r\n    private _path: Path | null = null;\r\n    /**@internal */\r\n    _drawCount: number = 1;\r\n    private _width: number = Const.MAX_CLIP_SIZE;\r\n    private _height: number = Const.MAX_CLIP_SIZE;\r\n    private _renderCount: number = 0;\r\n    /**@internal */\r\n    _submits: any = null;\r\n    /**@internal */\r\n    _curSubmit: any = null;\r\n    /**@internal */\r\n    _submitKey: SubmitKey = new SubmitKey();\t//当前将要使用的设置。用来跟上一次的_curSubmit比较\r\n\r\n    /**@internal */\r\n    _mesh: MeshQuadTexture;\t\t\t//用Mesh2D代替_vb,_ib. 当前使用的mesh\r\n    /**@internal */\r\n    _pathMesh: MeshVG | null = null;\t\t\t//矢量专用mesh。\r\n    /**@internal */\r\n    _triangleMesh: MeshTexture | null = null;\t//drawTriangles专用mesh。由于ib不固定，所以不能与_mesh通用\r\n\r\n    meshlist: any[] = [];\t//本context用到的mesh\r\n\r\n    //public var _vbs:Array = [];\t//双buffer管理。TODO 临时删掉，需要mesh中加上\r\n    private _transedPoints: any[] = new Array(8);\t//临时的数组，用来计算4个顶点的转换后的位置。\r\n    private _temp4Points: any[] = new Array(8);\t\t//临时数组。用来保存4个顶点的位置。\r\n\r\n    /**@internal */\r\n    _clipRect: Rectangle = Context.MAXCLIPRECT;\r\n    //public var _transedClipInfo:Array = [0, 0, Const.MAX_CLIP_SIZE, 0, 0, Const.MAX_CLIP_SIZE];\t//应用矩阵后的clip。ox,oy, xx,xy,yx,yy \txx,xy等是缩放*宽高\r\n    /**@internal */\r\n    _globalClipMatrix: Matrix = defaultClipMatrix.clone();\t//用矩阵描述的clip信息。最终的点投影到这个矩阵上，在0~1之间就可见。\r\n    /**@internal */\r\n    _clipInCache: boolean = false; \t// 当前记录的clipinfo是在cacheas normal后赋值的，因为cacheas normal会去掉当前矩阵的tx，ty，所以需要记录一下，以便在是shader中恢复\r\n    /**@internal */\r\n    _clipInfoID: number = 0;\t\t\t\t\t//用来区分是不是clipinfo已经改变了\r\n    private _clipID_Gen: number = 0;\t\t\t//生成clipid的，原来是  _clipInfoID=++_clipInfoID 这样会有问题，导致兄弟clip的id都相同\r\n    /**@internal */\r\n    _curMat: Matrix;\r\n\r\n    //计算矩阵缩放的缓存\r\n    /**@internal */\r\n    _lastMatScaleX: number = 1.0;\r\n    /**@internal */\r\n    _lastMatScaleY: number = 1.0;\r\n    private _lastMat_a: number = 1.0;\r\n    private _lastMat_b: number = 0.0;\r\n    private _lastMat_c: number = 0.0;\r\n    private _lastMat_d: number = 1.0;\r\n    /**@internal */\r\n    _nBlendType: number = 0;\r\n    /**@internal */\r\n    _save: ISaveData[] & { _length?: number } = null;\r\n    /**@internal */\r\n    _targets: RenderTexture2D | null = null;\r\n    /**@internal */\r\n    _charSubmitCache: CharSubmitCache | null = null;\r\n    /**@internal */\r\n    _saveMark: SaveMark | null = null;\r\n    /**@internal */\r\n    _shader2D: Shader2D = new Shader2D();\t//\r\n\r\n    /**\r\n     * 所cacheAs精灵\r\n     * 对于cacheas bitmap的情况，如果图片还没准备好，需要有机会重画，所以要保存sprite。例如在图片\r\n     * 加载完成后，调用repaint\r\n     */\r\n    sprite: Sprite | null = null;\r\n\r\n    /**@internal */\r\n    public static _textRender: TextRender | null = null;// new TextRender();\r\n    /**@internal */\r\n    _italicDeg: number = 0;//文字的倾斜角度\r\n    /**@internal */\r\n    _lastTex: Texture | null = null; //上次使用的texture。主要是给fillrect用，假装自己也是一个drawtexture\r\n\r\n    private _fillColor: number = 0;\r\n    private _flushCnt: number = 0;\r\n\r\n    private defTexture: Texture | null = null;\t//给fillrect用\r\n    /**@internal */\r\n    _colorFiler: ColorFilter | null = null;\r\n\r\n    drawTexAlign: boolean = false;\t\t// 按照像素对齐\r\n    /**@internal */\r\n    _incache: boolean = false;\t\t\t// 正处在cacheas normal过程中\r\n\r\n    isMain: boolean = false;\t\t\t\t// 是否是主context\r\n\r\n    clearColor: Color = new Color();\r\n\r\n    constructor() {\r\n        Context._contextcount++;\r\n        Context._textRender = Context._textRender || new TextRender();\r\n        //_ib = IndexBuffer2D.QuadrangleIB;\r\n        if (!this.defTexture) {\r\n            var defTex2d: Texture2D = new Texture2D(2, 2, TextureFormat.R8G8B8A8, true, false, false);\r\n            defTex2d.setPixelsData(new Uint8Array(16), false, false);\r\n            defTex2d.lock = true;\r\n            this.defTexture = new Texture(defTex2d);\r\n        }\r\n        this._lastTex = this.defTexture;\r\n        this.clear();\r\n    }\r\n\r\n    clearBG(r: number, g: number, b: number, a: number): void {\r\n        // var gl: WebGLRenderingContext = RenderStateContext.mainContext;\r\n        this.clearColor.r = r;\r\n        this.clearColor.g = g;\r\n        this.clearColor.b = b;\r\n        this.clearColor.a = a;\r\n        LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color, this.clearColor, 1);\r\n        // gl.clearColor(r, g, b, a);\r\n        // gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _getSubmits(): any[] {\r\n        return this._submits;\r\n    }\r\n\r\n    /**\r\n     * 释放占用内存\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    private _releaseMem(keepRT: boolean = false): void {\r\n        if (!this._submits)\r\n            return;\r\n\r\n        this._curMat && this._curMat.destroy();\r\n        //@ts-ignore\r\n        this._curMat = null;\r\n        this._shader2D.destroy();\r\n        //@ts-ignore\r\n        this._shader2D = null;\r\n        //@ts-ignore\r\n        this._charSubmitCache.clear();\r\n\r\n        for (var i: number = 0, n: number = this._submits._length; i < n; i++) {\r\n            this._submits[i].releaseRender();\r\n        }\r\n        this._submits.length = 0;\r\n        this._submits._length = 0;\r\n        this._submits = null;\r\n        this._curSubmit = null;\r\n\r\n        this._path = null;\r\n        //_other && (_other.font = null);\r\n        this._save = null;\r\n\r\n        var sz: number;\r\n        for (i = 0, sz = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.destroy();\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this.sprite = null;\r\n        if (!keepRT) {\r\n            this._targets && (this._targets.destroy());\r\n            this._targets = null;\r\n        }\r\n        //TODO mesh 暂时releaseMem了\r\n    }\r\n\r\n    /**\r\n     * 释放所有资源\r\n     * @param\tkeepRT  是否保留rendertarget\r\n     */\r\n    destroy(keepRT: boolean = false): void {\r\n        --Context._contextcount;\r\n        this.sprite = null;\r\n        this._releaseMem(keepRT);\r\n        this._charSubmitCache && this._charSubmitCache.destroy();\r\n        //_ib && (_ib != IndexBuffer2D.QuadrangleIB) && _ib.releaseResource();\r\n        this._mesh.destroy();\r\n        if (!keepRT) {\r\n            this._targets && this._targets.destroy();//用回收么？可能没什么重复利用的价值\r\n            this._targets = null;\r\n        }\r\n        if (this.defTexture) {\r\n            this.defTexture.bitmap && this.defTexture.bitmap.destroy();\r\n            this.defTexture.destroy();\r\n        }\r\n\r\n    }\r\n\r\n    clear(): void {\r\n        if (!this._submits) {//第一次\r\n            this._other = ContextParams.DEFAULT;\r\n            this._curMat = Matrix.create();\r\n            this._charSubmitCache = new CharSubmitCache();\r\n            //_vb = _vbs[0] = VertexBuffer2D.create( -1);\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n            this.meshlist.push(this._pathMesh);\r\n            this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._triangleMesh);\r\n            //if(Config.smartCache) _vbs[1] = VertexBuffer2D.create( -1);\r\n            this._submits = [];\r\n            this._save = [SaveMark.Create(this)];\r\n            this._save.length = 10;\r\n            this._shader2D = new Shader2D();\r\n        }\r\n\r\n        this._submitKey.clear();\r\n\r\n        //_vb = _vbs[_renderCount%2];\r\n        //_vb.clear();\r\n        this._mesh.clearVB();\r\n\r\n        //_targets && (_targets.repaint = true);\r\n\r\n        this._drawCount = 1;\r\n\r\n        this._other = ContextParams.DEFAULT;\r\n        this._other.lineWidth = this._shader2D.ALPHA = 1.0;\r\n\r\n        this._nBlendType = 0;\r\n\r\n        this._clipRect = Context.MAXCLIPRECT;\r\n\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        SubmitBase.RENDERBASE._ref = 0xFFFFFF;\r\n        SubmitBase.RENDERBASE._numEle = 0;\r\n\r\n        this._shader2D.fillStyle = this._shader2D.strokeStyle = DrawStyle.DEFAULT;\r\n\r\n        for (let i = 0, n = this._submits._length; i < n; i++)\r\n            this._submits[i].releaseRender();\r\n\r\n        this._submits._length = 0;\r\n\r\n        this._curMat.identity();\r\n        this._other.clear();\r\n\r\n        this._saveMark = <SaveMark>this._save[0];\r\n        this._save._length = 1;\r\n    }\r\n\r\n    /**\r\n     * 设置ctx的size，这个不允许直接设置，必须是canvas调过来的。所以这个函数里也不用考虑canvas相关的东西\r\n     * @param\tw\r\n     * @param\th\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h) {\r\n            this._width = w;\r\n            this._height = h;\r\n            //TODO 问题：如果是rendertarget 计算内存会有问题，即canvas算一次，rt又算一次,所以这里要修改\r\n            //这种情况下canvas应该不占内存\r\n            if (this._targets) {\r\n                this._targets.destroy();\r\n                this._targets = new RenderTexture2D(w, h, RenderTargetFormat.R8G8B8A8, -1);\r\n            }\r\n            //如果是主画布，要记录窗口大小\r\n            //如果不是 TODO\r\n            if (this.isMain) {\r\n                LayaGL.renderEngine.viewport(0, 0, w, h);\r\n                LayaGL.renderEngine.scissor(0, 0, w, h);\r\n                RenderState2D.width = w;\r\n                RenderState2D.height = h;\r\n            }\r\n        }\r\n        if (w === 0 && h === 0) this._releaseMem();\r\n    }\r\n\r\n    /**\r\n     * 当前canvas请求保存渲染结果。\r\n     * 实现：\r\n     * 如果value==true，就要给_target赋值\r\n     * @param value {Boolean} \r\n     */\r\n    set asBitmap(value: boolean) {\r\n        if (value) {\r\n            //缺省的RGB没有a，不合理把。况且没必要自定义一个常量。\r\n            //深度格式为-1表示不用深度缓存。\r\n            let rt = this._targets;\r\n            if (!this._width || !this._height)\r\n                throw Error(\"asBitmap no size!\");\r\n            if (!rt || rt.width != this._width || rt.height != this._height) {\r\n                if (rt) {\r\n                    rt.destroy();\r\n                }\r\n                this._targets = new RenderTexture2D(this._width, this._height, RenderTargetFormat.R8G8B8A8);\r\n            }\r\n        } else {\r\n            this._targets && this._targets.destroy();\r\n            this._targets = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获得当前矩阵的缩放值\r\n     * 避免每次都计算getScaleX\r\n     * @return\r\n     */\r\n    getMatScaleX(): number {\r\n        if (this._lastMat_a == this._curMat.a && this._lastMat_b == this._curMat.b)\r\n            return this._lastMatScaleX;\r\n        this._lastMatScaleX = this._curMat.getScaleX();\r\n        this._lastMat_a = this._curMat.a;\r\n        this._lastMat_b = this._curMat.b;\r\n        return this._lastMatScaleX;\r\n    }\r\n\r\n    getMatScaleY(): number {\r\n        if (this._lastMat_c == this._curMat.c && this._lastMat_d == this._curMat.d)\r\n            return this._lastMatScaleY;\r\n        this._lastMatScaleY = this._curMat.getScaleY();\r\n        this._lastMat_c = this._curMat.c;\r\n        this._lastMat_d = this._curMat.d;\r\n        return this._lastMatScaleY;\r\n    }\r\n\r\n    //TODO\r\n    setFillColor(color: number): void {\r\n        this._fillColor = color;\r\n    }\r\n    getFillColor(): number {\r\n        return this._fillColor;\r\n    }\r\n\r\n    set fillStyle(value: any) {\r\n        if (!this._shader2D.fillStyle.equal(value)) {\r\n            SaveBase.save(this, SaveBase.TYPE_FILESTYLE, this._shader2D, false);\r\n            this._shader2D.fillStyle = DrawStyle.create(value);\r\n            this._submitKey.other = -this._shader2D.fillStyle.toInt();\r\n        }\r\n    }\r\n\r\n    get fillStyle(): any {\r\n        return this._shader2D.fillStyle;\r\n    }\r\n\r\n    set globalAlpha(value: number) {\r\n        value = Math.floor(value * 1000) / 1000;\r\n        if (value != this._shader2D.ALPHA) {\r\n            SaveBase.save(this, SaveBase.TYPE_ALPHA, this._shader2D, false);\r\n            this._shader2D.ALPHA = value;\r\n        }\r\n    }\r\n\r\n    get globalAlpha(): number {\r\n        return this._shader2D.ALPHA;\r\n    }\r\n\r\n    set textAlign(value: string) {\r\n        (this._other.textAlign === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTALIGN, this._other, false), this._other.textAlign = value);\r\n    }\r\n\r\n    get textAlign(): string {\r\n        return this._other.textAlign;\r\n    }\r\n\r\n    set textBaseline(value: string) {\r\n        (this._other.textBaseline === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_TEXTBASELINE, this._other, false), this._other.textBaseline = value);\r\n    }\r\n\r\n    get textBaseline(): string {\r\n        return this._other.textBaseline;\r\n    }\r\n\r\n    set globalCompositeOperation(value: string) {\r\n        var n = BlendMode.TOINT[value];\r\n        n == null || (this._nBlendType === n) || (SaveBase.save(this, SaveBase.TYPE_GLOBALCOMPOSITEOPERATION, this, true), this._curSubmit = SubmitBase.RENDERBASE, this._nBlendType = n /*, _shader2D.ALPHA = 1*/);\r\n    }\r\n\r\n    get globalCompositeOperation(): string {\r\n        return BlendMode.NAMES[this._nBlendType];\r\n    }\r\n\r\n    set strokeStyle(value: any) {\r\n        this._shader2D.strokeStyle.equal(value) || (SaveBase.save(this, SaveBase.TYPE_STROKESTYLE, this._shader2D, false), this._shader2D.strokeStyle = DrawStyle.create(value), this._submitKey.other = -this._shader2D.strokeStyle.toInt());\r\n    }\r\n\r\n    get strokeStyle(): any {\r\n        return this._shader2D.strokeStyle;\r\n    }\r\n\r\n    translate(x: number, y: number): void {\r\n        if (x !== 0 || y !== 0) {\r\n            SaveTranslate.save(this);\r\n            if (this._curMat._bTransform) {\r\n                SaveTransform.save(this);\r\n                //_curMat.transformPointN(Point.TEMP.setTo(x, y));\r\n                //x = Point.TEMP.x;\r\n                //y = Point.TEMP.y;\r\n                //translate的话，相当于在当前坐标系下移动x,y，所以直接修改_curMat,然后x,y就消失了。\r\n                this._curMat.tx += (x * this._curMat.a + y * this._curMat.c);\r\n                this._curMat.ty += (x * this._curMat.b + y * this._curMat.d);\r\n            } else {\r\n                this._curMat.tx = x;\r\n                this._curMat.ty = y;\r\n            }\r\n        }\r\n    }\r\n\r\n    set lineWidth(value: number) {\r\n        (this._other.lineWidth === value) || (this._other = this._other.make(), SaveBase.save(this, SaveBase.TYPE_LINEWIDTH, this._other, false), this._other.lineWidth = value);\r\n    }\r\n\r\n    get lineWidth(): number {\r\n        return this._other.lineWidth;\r\n    }\r\n\r\n    save(): void {\r\n        this._save[this._save._length++] = SaveMark.Create(this);\r\n    }\r\n\r\n    restore(): void {\r\n        var sz: number = this._save._length;\r\n        var lastBlend: number = this._nBlendType;\r\n        if (sz < 1)\r\n            return;\r\n        for (var i: number = sz - 1; i >= 0; i--) {\r\n            var o: ISaveData = this._save[i];\r\n            o.restore(this);\r\n            if (o.isSaveMark()) {\r\n                this._save._length = i;\r\n                return;\r\n            }\r\n        }\r\n        if (lastBlend != this._nBlendType) {\r\n            //阻止合并\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    set font(str: string) {\r\n        //if (str == _other.font.toString())\r\n        //\treturn;\r\n        this._other = this._other.make();\r\n        SaveBase.save(this, SaveBase.TYPE_FONT, this._other, false);\r\n        //_other.font === FontInContext.EMPTY ? (_other.font = new FontInContext(str)) : (_other.font.setFont(str));\r\n    }\r\n\r\n    fillText(txt: string | WordText, x: number, y: number, fontStr: string, color: string, align: string, lineWidth: number = 0, borderColor: string = \"\"): void {\r\n        Context._textRender!.filltext(this, txt, x, y, fontStr, color, borderColor, lineWidth, align);\r\n    }\r\n    // 与fillText的区别是没有border信息\r\n    drawText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, color, null, 0, textAlign);\r\n    }\r\n    strokeWord(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, text, x, y, font, null, color, lineWidth, textAlign);\r\n    }\r\n    fillBorderText(txt: string | WordText, x: number, y: number, font: string, color: string, borderColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, txt, x, y, font, color, borderColor, lineWidth, textAlign);\r\n    }\r\n\r\n    /**@internal */\r\n    _fast_filltext(data: string | WordText, x: number, y: number, fontObj: FontInfo, color: string, strokeColor: string | null, lineWidth: number, textAlign: number): void {\r\n        Context._textRender!._fast_filltext(this, data, x, y, fontObj, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    filltext11(data: string | WordText, x: number, y: number, fontStr: string, color: string, strokeColor: string, lineWidth: number, textAlign: string): void {\r\n        Context._textRender!.filltext(this, data, x, y, fontStr, color, strokeColor, lineWidth, textAlign);\r\n    }\r\n\r\n    private _fillRect(x: number, y: number, width: number, height: number, rgba: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = submit && (submit._key.submitType === SubmitBase.KEY_DRAWTEXTURE && submit._key.blendShader === this._nBlendType);\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        //clipinfo\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n        this.transformQuad(x, y, width, height, 0, this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, Texture.NO_UV, rgba, false);\r\n            //if (GlUtils.fillRectImgVb(_mesh._vb, _clipRect, x, y, width, height, Texture.DEF_UV, _curMat, rgba,this)){\r\n            if (!sameKey) {\r\n                submit = this._curSubmit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                this._submits[this._submits._length++] = submit;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n                if (!this._lastTex || this._lastTex.destroyed) {\r\n                    submit.shaderValue.textureHost = this.defTexture;\r\n                } else {\r\n                    submit.shaderValue.textureHost = this._lastTex;\r\n                }\r\n                //这里有一个问题。例如 clip1, drawTex(tex1), clip2, fillRect, drawTex(tex2)\t会被分成3个submit，\r\n                //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, (_lastTex && _lastTex.bitmap)?_lastTex.bitmap.id: -1);\r\n                submit._key.other = (this._lastTex && this._lastTex.bitmap) ? (this._lastTex.bitmap as Texture2D).id : -1\r\n                submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            }\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    fillRect(x: number, y: number, width: number, height: number, fillStyle: any): void {\r\n        var drawstyle: DrawStyle = fillStyle ? DrawStyle.create(fillStyle) : this._shader2D.fillStyle;\r\n        //var rgb = drawstyle.toInt() ;\r\n        //由于显卡的格式是 rgba，所以需要处理一下\r\n        //var rgba:uint = ((rgb & 0xff0000) >> 16) | (rgb & 0x00ff00) | ((rgb & 0xff) << 16) | (_shader2D.ALPHA * 255) << 24;\r\n        var rgba: number = this.mixRGBandAlpha(drawstyle.toInt());\r\n        this._fillRect(x, y, width, height, rgba);\r\n    }\r\n\r\n    //TODO:coverage\r\n    fillTexture(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: number): void {\r\n        //test\r\n        /*\r\n        var aa = 95 / 274, bb = 136 / 341, cc = (95 + 41) / 274, dd = (136 + 48) / 341;\r\n        texture.uv = [aa,bb, cc,bb, cc,dd, aa,dd];\r\n        texture.width = 41;\r\n        texture.height = 48;\r\n        */\r\n        //test\r\n\r\n        if (!texture._getSource()) {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n        this._fillTexture(texture, texture.width, texture.height, texture.uvrect, x, y, width, height, type, offset.x, offset.y, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _fillTexture(texture: Texture, texw: number, texh: number, texuvRect: any[], x: number, y: number, width: number, height: number, type: string, offsetx: number, offsety: number, color: number): void {\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = false;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);\r\n            this.meshlist.push(this._mesh);\r\n            sameKey = false;\r\n        }\r\n\r\n        //filltexture相关逻辑。计算rect大小以及对应的uv\r\n        var repeatx: boolean = true;\r\n        var repeaty: boolean = true;\r\n        switch (type) {\r\n            case \"repeat\": break;\r\n            case \"repeat-x\": repeaty = false; break;\r\n            case \"repeat-y\": repeatx = false; break;\r\n            case \"no-repeat\": repeatx = repeaty = false; break;\r\n            default: break;\r\n        }\r\n        //用 _temp4Points 来存计算出来的顶点的uv。这里的uv用0到1表示纹理的uv区域。这样便于计算，直到shader中才真的转成了实际uv\r\n        var uv: any[] = this._temp4Points;\r\n        var stu: number = 0; //uv起点\r\n        var stv: number = 0;\r\n        var stx: number = 0, sty: number = 0, edx: number = 0, edy: number = 0;\r\n        if (offsetx < 0) {\r\n            stx = x;\r\n            stu = (-offsetx % texw) / texw;//有偏移的情况下的u不是从头开始\r\n        } else {\r\n            stx = x + offsetx;\r\n        }\r\n        if (offsety < 0) {\r\n            sty = y;\r\n            stv = (-offsety % texh) / texh;//有偏移的情况下的v不是从头开始\r\n        } else {\r\n            sty = y + offsety;\r\n        }\r\n\r\n        edx = x + width;\r\n        edy = y + height;\r\n        (!repeatx) && (edx = Math.min(edx, x + offsetx + texw));//x不重复的话，最多只画一个\r\n        (!repeaty) && (edy = Math.min(edy, y + offsety + texh));//y不重复的话，最多只画一个\r\n        if (edx < x || edy < y)\r\n            return;\r\n        if (stx > edx || sty > edy)\r\n            return;\r\n\r\n        //计算最大uv\r\n        var edu: number = (edx - x - offsetx) / texw;\r\n        var edv: number = (edy - y - offsety) / texh;\r\n\r\n        this.transformQuad(stx, sty, edx - stx, edy - sty, 0, this._curMat, this._transedPoints);\r\n        //四个点对应的uv。必须在transformQuad后面，因为共用了_temp4Points\r\n        uv[0] = stu; uv[1] = stv; uv[2] = edu; uv[3] = stv; uv[4] = edu; uv[5] = edv; uv[6] = stu; uv[7] = edv;\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            //不依赖于wrapmode了，都走filltexture流程，自己修改纹理坐标\r\n            //tex2d.wrapModeU = BaseTexture.WRAPMODE_REPEAT;\t//这里会有重复判断\r\n            //tex2d.wrapModeV = BaseTexture.WRAPMODE_REPEAT;\r\n            //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n            //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n            var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n\r\n            this._mesh.addQuad(this._transedPoints, uv, rgba, true);\r\n\r\n            var sv: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n            //这个优化先不要了，因为没太弄明白wrapmode的设置，总是不起作用。\r\n            //if(texture.uvrect[2]<1.0||texture.uvrect[3]<1.0)//这表示是大图集中的一部分，只有这时候才用特殊shader\r\n            sv.defines.add(ShaderDefines2D.FILLTEXTURE);\r\n            ((<any>sv)).u_TexRange = texuvRect.concat();\r\n            submit = this._curSubmit = SubmitTexture.create(this, this._mesh, sv);\r\n            this._submits[this._submits._length++] = submit;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            submit.shaderValue.textureHost = texture;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n        this.breakNextMerge();\t//暂不合并\r\n    }\r\n\r\n\r\n    /**\r\n     * 反正只支持一种filter，就不要叫setFilter了，直接叫setColorFilter\r\n     * @param\tvalue\r\n     */\r\n    setColorFilter(filter: ColorFilter): void {\r\n        SaveBase.save(this, SaveBase.TYPE_COLORFILTER, this, true);\r\n        //_shader2D.filters = value;\r\n        this._colorFiler = filter;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n        //_reCalculateBlendShader();\r\n    }\r\n\r\n    drawTexture(tex: Texture, x: number, y: number, width: number, height: number, color: number = 0xffffffff): void {\r\n        this._drawTextureM(tex, x, y, width, height, null, 1, null, color);\r\n    }\r\n\r\n    drawTextures(tex: Texture, pos: ArrayLike<number>, tx: number, ty: number, colors: number[]): void {\r\n        if (!tex._getSource()) //source内调用tex.active();\r\n        {\r\n            this.sprite && ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            return;\r\n        }\r\n\r\n        //TODO 还没实现\r\n        var n: number = pos.length / 2;\r\n        var ipos: number = 0;\r\n        var bmpid: number = (tex.bitmap as Texture2D).id;\r\n        for (var i: number = 0; i < n; i++) {\r\n            const color = typeof colors[i] === 'number' ? colors[i] : 0xffffffff;\r\n            this._inner_drawTexture(tex, bmpid, pos[ipos++] + tx, pos[ipos++] + ty, 0, 0, null, null, 1.0, false, color);\r\n        }\r\n\r\n        /*\r\n        var pre:Rectangle = _clipRect;\r\n        _clipRect = MAXCLIPRECT;\r\n        if (!_drawTextureM(tex, pos[0], pos[1], tex.width, tex.height,null, 1)) {\r\n            throw \"drawTextures err\";\r\n            return;\r\n        }\r\n        _clipRect = pre;\r\n        \r\n        Stat.drawCall++;//= pos.length / 2;\r\n        \r\n        if (pos.length < 4)\r\n            return;\r\n        \r\n        var finalVB:VertexBuffer2D = _curSubmit._vb || _vb;\r\n        var sx:Number = _curMat.a, sy:Number = _curMat.d;\r\n        var vpos:int = finalVB._byteLength >> 2;// + Context._RECTVBSIZE;\r\n        finalVB.byteLength = finalVB._byteLength + (pos.length / 2 - 1) * Context._RECTVBSIZEBYTE;\r\n        var vbdata:Float32Array = finalVB.getFloat32Array();\r\n        for (var i:int = 2, sz:int = pos.length; i < sz; i += 2) {\r\n            GlUtils.copyPreImgVb(finalVB,vpos, (pos[i] - pos[i - 2]) * sx, (pos[i + 1] - pos[i - 1]) * sy,vbdata);\r\n            _curSubmit._numEle += 6;\r\n            vpos += Context._RECTVBSIZE;\r\n        }\r\n        */\r\n    }\r\n\r\n    /**\r\n     * 为drawTexture添加一个新的submit。类型是 SubmitTexture\r\n     * @param\tvbSize\r\n     * @param\talpha\r\n     * @param\twebGLImg\r\n     * @param\ttex\r\n     */\r\n    //TODO:coverage\r\n    private _drawTextureAddSubmit(imgid: number, tex: Texture): void {\r\n        //var alphaBack:Number = shader.ALPHA;\r\n        //shader.ALPHA *= alpha;\r\n\r\n        var submit: SubmitTexture = null;\r\n        submit = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        this._submits[this._submits._length++] = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        //submit._key.copyFrom2(_submitKey, SubmitBase.KEY_DRAWTEXTURE, imgid);\r\n        submit._key.other = imgid;\r\n        //submit._key.alpha = shader.ALPHA;\r\n        submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n        this._curSubmit = submit;\r\n\r\n        //shader.ALPHA = alphaBack;\r\n    }\r\n\r\n    /**@internal */\r\n    _drawTextureM(tex: Texture, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[] | null, color: number): boolean {\r\n        // 注意sprite要保存，因为后面会被冲掉\r\n        var cs = this.sprite;\r\n        if (!tex._getSource(function (): void {\r\n            if (cs) {\r\n                cs.repaint();\t// 原来是calllater，callater对于cacheas normal是没有机会执行的\r\n            }\r\n        })) { //source内调用tex.active();\r\n            return false;\r\n        }\r\n        return this._inner_drawTexture(tex, (tex.bitmap as Texture2D).id, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    /**@internal */\r\n    _drawRenderTexture(tex: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, alpha: number, uv: any[], color: number = 0xffffffff): boolean {\r\n        return this._inner_drawTexture((<Texture>(tex as any)), -1, x, y, width, height, m, uv, alpha, false, color);\r\n    }\r\n\r\n    //TODO:coverage\r\n    submitDebugger(): void {\r\n        this._submits[this._submits._length++] = SubmitCMD.create([], function (): void { debugger; }, this);\r\n    }\r\n\r\n    /*\r\n    private function copyClipInfo(submit:Submit, clipInfo:Array):void {\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        cd[0] = clipInfo[2]; cd[1] = clipInfo[3]; cd[2] = clipInfo[4]; cd[3] = clipInfo[5];\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        cp[0] = clipInfo[0]; cp[1] = clipInfo[1];\r\n        submit.clipInfoID = this._clipInfoID;\r\n    }\r\n    */\r\n    /**@internal */\r\n    _copyClipInfo(submit: SubmitBase, clipInfo: Matrix): void {\r\n        var cm: any[] = submit.shaderValue.clipMatDir;\r\n        cm[0] = clipInfo.a; cm[1] = clipInfo.b; cm[2] = clipInfo.c; cm[3] = clipInfo.d;\r\n        var cmp: any[] = submit.shaderValue.clipMatPos;\r\n        cmp[0] = clipInfo.tx; cmp[1] = clipInfo.ty;\r\n        submit.clipInfoID = this._clipInfoID;\r\n\r\n        if (this._clipInCache) {\r\n            submit.shaderValue.clipOff[0] = 1;\r\n        }\r\n    }\r\n\r\n\r\n    private isSameClipInfo(submit: SubmitBase): boolean {\r\n        return (submit.clipInfoID === this._clipInfoID);\r\n        /*\r\n        var cd:Array = submit.shaderValue.clipDir;\r\n        var cp:Array = submit.shaderValue.clipRect;\r\n        \r\n        if (clipInfo[0] != cp[0] || clipInfo[1] != cp[1] || clipInfo[2] != cd[0] || clipInfo[3] != cd[1] || clipInfo[4] != cd[2] || clipInfo[5] != cd[3] ) \r\n            return false;\r\n        return true;\r\n        */\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 这个还是会检查是否合并\r\n     * @param\ttex\r\n     * @param\tminVertNum\r\n     */\r\n    _useNewTex2DSubmit(tex: Texture, minVertNum: number): void {\r\n        //var sameKey:Boolean = tex.bitmap.id >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === tex.bitmap.id ;\r\n\r\n        if (this._mesh.vertNum + minVertNum > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n            //sameKey = false;\r\n        }\r\n\r\n        var submit: SubmitTexture = SubmitTexture.create(this, this._mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        this._submits[this._submits._length++] = this._curSubmit = submit;\r\n        submit.shaderValue.textureHost = tex;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 使用上面的设置（texture，submit，alpha，clip），画一个rect\r\n     */\r\n    _drawTexRect(x: number, y: number, w: number, h: number, uv: any[]): void {\r\n        this.transformQuad(x, y, w, h, this._italicDeg, this._curMat, this._transedPoints);\r\n        //这个是给文字用的，为了清晰，必须要按照屏幕像素对齐，并且四舍五入。\r\n        var ops: any[] = this._transedPoints;\r\n        ops[0] = (ops[0] + 0.5) | 0;\r\n        ops[1] = (ops[1] + 0.5) | 0;\r\n        ops[2] = (ops[2] + 0.5) | 0;\r\n        ops[3] = (ops[3] + 0.5) | 0;\r\n        ops[4] = (ops[4] + 0.5) | 0;\r\n        ops[5] = (ops[5] + 0.5) | 0;\r\n        ops[6] = (ops[6] + 0.5) | 0;\r\n        ops[7] = (ops[7] + 0.5) | 0;\r\n\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv, this._fillColor, true);\r\n            this._curSubmit._numEle += 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n        }\r\n    }\r\n\r\n    drawCallOptimize(enable: boolean): boolean {\r\n        this._charSubmitCache.enable(enable, this);\r\n        return enable;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param\ttex {Texture | RenderTexture }\r\n     * @param  imgid 图片id用来比较合并的\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tm\r\n     * @param\talpha\r\n     * @param\tuv\r\n     * @return\r\n     */\r\n    _inner_drawTexture(tex: Texture, imgid: number, x: number, y: number, width: number, height: number, m: Matrix, uv: ArrayLike<number> | null, alpha: number, lastRender: boolean, color: number): boolean {\r\n        if (width <= 0 || height <= 0) {\r\n            return false;\r\n        }\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        uv = uv || tex._uv\r\n        //为了优化，如果上次是画三角形，并且贴图相同，会认为他们是一组的，把这个也转成三角形，以便合并。\r\n        //因为好多动画是drawTexture和drawTriangle混用的\r\n        if (preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === imgid) {\r\n            var tv: Float32Array = this._drawTexToDrawTri_Vert;\r\n            tv[0] = x; tv[1] = y; tv[2] = x + width, tv[3] = y, tv[4] = x + width, tv[5] = y + height, tv[6] = x, tv[7] = y + height;\r\n            this._drawTriUseAbsMatrix = true;\r\n            var tuv: Float32Array = this._tempUV;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3]; tuv[4] = uv[4]; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this.drawTriangles(tex, 0, 0, tv, tuv, this._drawTexToDrawTri_Index, m || this._curMat, alpha, null, null);//用tuv而不是uv会提高效率\r\n            this._drawTriUseAbsMatrix = false;\r\n            return true;\r\n        }\r\n\r\n        var mesh = this._mesh;\r\n        var submit: SubmitTexture = this._curSubmit;\r\n        var ops: any[] = lastRender ? this._charSubmitCache.getPos() : this._transedPoints;\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width || tex.width, height || tex.height, this._italicDeg, m || this._curMat, ops);\r\n\r\n        if (this.drawTexAlign) {\r\n            var round: Function = Math.round;\r\n            ops[0] = round(ops[0]);//  (ops[0] + 0.5) | 0;\t// 这么计算负的时候会有问题\r\n            ops[1] = round(ops[1]);\r\n            ops[2] = round(ops[2]);\r\n            ops[3] = round(ops[3]);\r\n            ops[4] = round(ops[4]);\r\n            ops[5] = round(ops[5]);\r\n            ops[6] = round(ops[6]);\r\n            ops[7] = round(ops[7]);\r\n            this.drawTexAlign = false;\t//一次性的\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(color, this._shader2D.ALPHA * alpha);\r\n\r\n        //lastRender = false;\r\n        if (lastRender) {\r\n            this._charSubmitCache.add(this, tex, imgid, ops, uv, rgba);\r\n            return true;\r\n        }\r\n\r\n        this._drawCount++;\r\n\r\n        var sameKey: boolean = imgid >= 0 && preKey.submitType === SubmitBase.KEY_DRAWTEXTURE && preKey.other === imgid;\r\n\r\n        //clipinfo\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n        this._lastTex = tex;\r\n\r\n        if (mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            mesh = this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(mesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n\r\n        {\r\n            mesh.addQuad(ops, uv, rgba, true);\r\n            if (!sameKey) {\r\n                this._submits[this._submits._length++] = this._curSubmit = submit = SubmitTexture.create(this, mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n                submit.shaderValue.textureHost = tex;\r\n                submit._key.other = imgid;\r\n                this._copyClipInfo(submit, this._globalClipMatrix);\r\n            }\r\n            submit._numEle += 6;\r\n            mesh.indexNum += 6;\r\n            mesh.vertNum += 4;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 转换4个顶点。为了效率这个不做任何检查。需要调用者的配合。\r\n     * @param\ta\t\t输入。8个元素表示4个点\r\n     * @param\tout\t\t输出\r\n     */\r\n    transform4Points(a: any[], m: Matrix, out: any[]): void {\r\n        /*\r\n            out[0] = 846;\r\n            out[1] = 656;\r\n            out[2] = 881;\r\n            out[3] = 657;\r\n            out[4] = 880;\r\n            out[5] = 732;\r\n            out[6] = 844;\r\n            out[7] = 731;\r\n            return ;\r\n        */\r\n        //var m:Matrix = _curMat;\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = a[0];\r\n        var a1: number = a[1];\r\n        var a2: number = a[2];\r\n        var a3: number = a[3];\r\n        var a4: number = a[4];\r\n        var a5: number = a[5];\r\n        var a6: number = a[6];\r\n        var a7: number = a[7];\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * pt所描述的多边形完全在clip外边，整个被裁掉了\r\n     * @param\tpt\r\n     * @return\r\n     */\r\n    clipedOff(pt: any[]): boolean {\r\n        //TODO\r\n        if (this._clipRect.width <= 0 || this._clipRect.height <= 0)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 应用当前矩阵。把转换后的位置放到输出数组中。 \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     * @param\th\r\n     * @param   italicDeg 倾斜角度，单位是度。0度无，目前是下面不动。以后要做成可调的\r\n     */\r\n    transformQuad(x: number, y: number, w: number, h: number, italicDeg: number, m: Matrix, out: any[]): void {\r\n        /*\r\n        out[0] = 100.1; out[1] = 100.1;\r\n        out[2] = 101.1; out[3] = 100.1;\r\n        out[4] = 101.1; out[5] = 101.1;\r\n        out[6] = 100.1; out[7] = 101.1;\r\n        return;\r\n        */\r\n        var xoff: number = 0;\r\n        if (italicDeg != 0) {\r\n            xoff = Math.tan(italicDeg * Math.PI / 180) * h;\r\n        }\r\n        var maxx: number = x + w; var maxy: number = y + h;\r\n\r\n        var tx: number = m.tx;\r\n        var ty: number = m.ty;\r\n        var ma: number = m.a;\r\n        var mb: number = m.b;\r\n        var mc: number = m.c;\r\n        var md: number = m.d;\r\n        var a0: number = x + xoff;\r\n        var a1: number = y;\r\n        var a2: number = maxx + xoff;\r\n        var a3: number = y;\r\n        var a4: number = maxx;\r\n        var a5: number = maxy;\r\n        var a6: number = x;\r\n        var a7: number = maxy;\r\n        if (m._bTransform) {\r\n            out[0] = a0 * ma + a1 * mc + tx; out[1] = a0 * mb + a1 * md + ty;\r\n            out[2] = a2 * ma + a3 * mc + tx; out[3] = a2 * mb + a3 * md + ty;\r\n            out[4] = a4 * ma + a5 * mc + tx; out[5] = a4 * mb + a5 * md + ty;\r\n            out[6] = a6 * ma + a7 * mc + tx; out[7] = a6 * mb + a7 * md + ty;\r\n            /* 旋转的情况下这个是错的。TODO\r\n            let dx = out[2] - out[0];\r\n            let minw = 1;\t// 限制最小宽度为1，防止细线在缩小的情况下消失。\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[2] += dx;\r\n            }\r\n            dx = out[4] - out[6];\r\n            if (dx < minw) {\r\n                dx = minw - dx;\r\n                out[4] += dx;\r\n            }\r\n            */\r\n        } else {\r\n            out[0] = a0 + tx; out[1] = a1 + ty;\r\n            out[2] = a2 + tx; out[3] = a3 + ty;\r\n            out[4] = a4 + tx; out[5] = a5 + ty;\r\n            out[6] = a6 + tx; out[7] = a7 + ty;\r\n        }\r\n    }\r\n\r\n    pushRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.pushRT, this));\r\n    }\r\n    popRT(): void {\r\n        this.addRenderObject(SubmitCMD.create(null, RenderTexture2D.popRT, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    //TODO:coverage\r\n    useRT(rt: RenderTexture2D): void {\r\n        //这里并没有做cliprect的保存恢复。因为认为调用这个函数的话，就是完全不走context流程了，完全自己控制。\r\n        function _use(rt: RenderTexture2D): void {\r\n            if (!rt) {\r\n                throw 'error useRT'\r\n            } else {\r\n                rt.start();\r\n                rt.clear(0, 0, 0, 0);\r\n            }\r\n        }\r\n\r\n        this.addRenderObject(SubmitCMD.create([rt], _use, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 异步执行rt的restore函数\r\n     * @param\trt\r\n     */\r\n    //TODO:coverage\r\n    RTRestore(rt: RenderTexture2D): void {\r\n        function _restore(rt: RenderTexture2D): void {\r\n            rt.restore();\r\n        }\r\n        this.addRenderObject(SubmitCMD.create([rt], _restore, this));\r\n        this.breakNextMerge();\r\n    }\r\n\r\n    /**\r\n     * 强制拒绝submit合并\r\n     * 例如切换rt的时候\r\n     */\r\n    breakNextMerge(): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n    }\r\n\r\n    //TODO:coverage\r\n    private _repaintSprite(): void {\r\n        this.sprite && this.sprite.repaint();\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\ttex\r\n     * @param\tx\t\t\t\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\ttransform\t图片本身希望的矩阵\r\n     * @param\ttx\t\t\t节点的位置\r\n     * @param\tty\r\n     * @param\talpha\r\n     */\r\n    drawTextureWithTransform(tex: Texture, x: number, y: number, width: number, height: number, transform: Matrix | null, tx: number, ty: number, alpha: number, blendMode: string | null, uv?: number[], color = 0xffffffff): void {\r\n        var oldcomp: string;\r\n        var curMat: Matrix = this._curMat;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n\r\n        if (!transform) {\r\n            this._drawTextureM(tex, x + tx, y + ty, width, height, curMat, alpha, uv, color);\r\n            if (blendMode) {\r\n                this.globalCompositeOperation = oldcomp;\r\n            }\r\n            return;\r\n        }\r\n        var tmpMat: Matrix = this._tmpMatrix;\r\n        //克隆transform,因为要应用tx，ty，这里不能修改原始的transform\r\n        tmpMat.a = transform.a; tmpMat.b = transform.b; tmpMat.c = transform.c; tmpMat.d = transform.d; tmpMat.tx = transform.tx + tx; tmpMat.ty = transform.ty + ty;\r\n        tmpMat._bTransform = transform._bTransform;\r\n\r\n        if (transform && curMat._bTransform) {\r\n            // 如果当前矩阵不是只有平移，则只能用mul的方式\r\n            Matrix.mul(tmpMat, curMat, tmpMat);\r\n            transform = tmpMat;\r\n            transform._bTransform = true;\r\n        } else {\r\n            //如果curmat没有旋转。\r\n            tmpMat.tx += curMat.tx;\r\n            tmpMat.ty += curMat.ty;\r\n            transform = tmpMat;\r\n        }\r\n        this._drawTextureM(tex, x, y, width, height, transform, alpha, uv, color);\r\n        if (blendMode)\r\n            this.globalCompositeOperation = oldcomp;\r\n    }\r\n\r\n    /**\r\n     * * 把ctx中的submits提交。结果渲染到target上\r\n     * @param\tctx\r\n     * @param\ttarget\r\n     */\r\n    private _flushToTarget(context: Context, target: RenderTexture2D): void {\r\n        //if (target._destroy) return;\r\n        //var preworldClipRect:Rectangle = RenderState2D.worldClipRect;\r\n        //裁剪不用考虑，现在是在context内部自己维护，不会乱窜\r\n        RenderState2D.worldScissorTest = false;\r\n        LayaGL.renderEngine.scissorTest(false);\r\n\r\n        var preAlpha: number = RenderState2D.worldAlpha;\r\n        var preMatrix4: any[] = RenderState2D.worldMatrix4;\r\n        var preMatrix: Matrix = RenderState2D.worldMatrix;\r\n\r\n        var preShaderDefines: ShaderDefines2D = RenderState2D.worldShaderDefines;\r\n\r\n        RenderState2D.worldMatrix = Matrix.EMPTY;\r\n\r\n        RenderState2D.restoreTempArray();\r\n        RenderState2D.worldMatrix4 = RenderState2D.TEMPMAT4_ARRAY;\r\n        RenderState2D.worldAlpha = 1;\r\n        //RenderState2D.worldFilters = null;\r\n        //RenderState2D.worldShaderDefines = null;\r\n        BaseShader.activeShader = null;\r\n\r\n        target.start();\r\n        // 如果没有命令就不要clear。这么改是因为嵌套cacheas出问题了\r\n        // 如果一个sprite cacheas normal ，他的子节点有cacheas bitmap的（包括mask等）就会不断的执行 _flushToTarget和drawCamvase,从而把target上的内容清掉\r\n        // 由于cacheas normal 导致 RenderSprite没有机会执行 _cacheStyle.canvas 存在的分支。在\r\n        if (context._submits._length > 0)\r\n            target.clear(0, 0, 0, 0);\r\n\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        context.flush();\r\n        context.clear();\r\n        target.restore();\r\n        context._curSubmit = SubmitBase.RENDERBASE;\r\n        //context._canvas\r\n        BaseShader.activeShader = null;\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix = preMatrix;\r\n        //RenderState2D.worldFilters = preFilters;\r\n        //RenderState2D.worldShaderDefines = preShaderDefines;\r\n    }\r\n\r\n    drawCanvas(canvas: HTMLCanvas, x: number, y: number, width: number, height: number): void {\r\n        if (!canvas) return;\r\n        var src: Context = canvas.context as Context;\r\n        var submit: ISubmit;\r\n        if (src._targets) {\r\n            //生成渲染结果到src._targets上\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //画出src._targets\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            */\r\n            //应用并清空canvas中的指令。如果内容需要重画，RenderSprite会给他重新加入submit\r\n            if (src._submits._length > 0) {\r\n                submit = SubmitCMD.create([src, src._targets], this._flushToTarget, this);\r\n                this._submits[this._submits._length++] = submit;\r\n            }\r\n            //在这之前就已经渲染出结果了。\r\n            this._drawRenderTexture(src._targets, x, y, width, height, null, 1.0, RenderTexture2D.flipyuv);\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n            /*\r\n            this._submits[this._submits._length++] = SubmitCanvas.create(src, 0, null);\r\n            //src._targets.flush(src);\r\n            _curSubmit = SubmitBase.RENDERBASE;\r\n            //src._targets.drawTo(this, x, y, width, height);\r\n            //drawTexture(src._targets.target.getTexture(), x, y, width, height, 0, 0);\r\n            _drawRenderTexture(src._targets, x, y, width, height,null,1.0, RenderTexture.flipyuv);\r\n            */\r\n        } else {\r\n            var canv: WebGLCacheAsNormalCanvas = (<WebGLCacheAsNormalCanvas>(canvas as any));\r\n            if (canv.touches) {\r\n                ((<any[]>canv.touches)).forEach(function (v: CharRenderInfo): void { v.touch(); });\r\n            }\r\n\r\n            submit = SubmitCanvas.create(canvas, this._shader2D.ALPHA, this._shader2D.filters);\r\n            this._submits[this._submits._length++] = submit;\r\n            ((<SubmitCanvas>submit))._key.clear();\r\n            //var sx:Number = width / canvas.width;\r\n            //var sy:Number = height / canvas.height;\r\n            var mat: Matrix = ((<SubmitCanvas>submit))._matrix;\r\n            this._curMat.copyTo(mat);\r\n            //sx != 1 && sy != 1 && mat.scale(sx, sy);\r\n            // 先加上位置，最后再乘逆\r\n            var tx: number = mat.tx, ty: number = mat.ty;\r\n            mat.tx = mat.ty = 0;\r\n            mat.transformPoint(Point.TEMP.setTo(x, y));\t// 用当前矩阵变换 (x,y)\r\n            mat.translate(Point.TEMP.x + tx, Point.TEMP.y + ty);\t// 加上原来的 (tx,ty)\r\n\r\n            Matrix.mul(canv.invMat, mat, mat);\r\n\r\n            this._curSubmit = SubmitBase.RENDERBASE;\r\n        }\r\n    }\r\n\r\n    drawTarget(rt: RenderTexture2D, x: number, y: number, width: number, height: number, m: Matrix, shaderValue: Value2D, uv: ArrayLike<number> | null = null, blend: number = -1, color: number = 0xffffffff): boolean {\r\n        this._drawCount++;\r\n        if (this._mesh.vertNum + 4 > Context._MAXVERTNUM) {\r\n            this._mesh = MeshQuadTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(this._mesh);\r\n        }\r\n\r\n        //凡是这个都是在_mesh上操作，不用考虑samekey\r\n        this.transformQuad(x, y, width, height, 0, m || this._curMat, this._transedPoints);\r\n        if (!this.clipedOff(this._transedPoints)) {\r\n            this._mesh.addQuad(this._transedPoints, uv || Texture.DEF_UV, color, true);\r\n            //if (GlUtils.fillRectImgVb( _mesh._vb, _clipRect, x, y, width , height , uv || Texture.DEF_UV, m || _curMat, rgba, this)) {\r\n            var submit: SubmitTarget = this._curSubmit = SubmitTarget.create(this, this._mesh, shaderValue, rt);\r\n            submit.blendType = (blend == -1) ? this._nBlendType : blend;\r\n            this._copyClipInfo((<SubmitBase>(submit as any)), this._globalClipMatrix);\r\n            submit._numEle = 6;\r\n            this._mesh.indexNum += 6;\r\n            this._mesh.vertNum += 4;\r\n            this._submits[this._submits._length++] = submit;\r\n            //暂时drawTarget不合并\r\n            this._curSubmit = SubmitBase.RENDERBASE\r\n            return true;\r\n        }\r\n        //暂时drawTarget不合并\r\n        this._curSubmit = SubmitBase.RENDERBASE\r\n        return false;\r\n    }\r\n\r\n    drawTriangles(tex: Texture,\r\n        x: number, y: number,\r\n        vertices: Float32Array,\r\n        uvs: Float32Array,\r\n        indices: Uint16Array,\r\n        matrix: Matrix, alpha: number, blendMode: string, colorNum: number = 0xffffffff): void {\r\n\r\n        if (!tex._getSource()) { //source内调用tex.active();\r\n            if (this.sprite) {\r\n                ILaya.systemTimer.callLater(this, this._repaintSprite);\r\n            }\r\n            return;\r\n        }\r\n        var oldcomp: string | null = null;\r\n        if (blendMode) {\r\n            oldcomp = this.globalCompositeOperation;\r\n            this.globalCompositeOperation = blendMode;\r\n        }\r\n        this._drawCount++;\r\n\r\n        // 为了提高效率，把一些变量放到这里\r\n        var tmpMat = this._tmpMatrix;\r\n        var triMesh = this._triangleMesh!;\r\n\r\n        var webGLImg = tex.bitmap;\r\n        var preKey: SubmitKey = this._curSubmit._key;\r\n        var sameKey: boolean = preKey.submitType === SubmitBase.KEY_TRIANGLES && preKey.other === webGLImg.id && preKey.blendShader == this._nBlendType;\r\n\r\n        //var rgba:int = mixRGBandAlpha(0xffffffff);\r\n        //rgba = _mixRGBandAlpha(rgba, alpha);\t这个函数有问题，不能连续调用，输出作为输入\r\n        if (triMesh.vertNum + vertices.length / 2 > Context._MAXVERTNUM) {\r\n            triMesh = this._triangleMesh = MeshTexture.getAMesh(this.isMain);//创建新的mesh  TODO 如果_mesh不是常见格式，这里就不能这么做了。以后把_mesh单独表示成常用模式 \r\n            this.meshlist.push(triMesh);\r\n            sameKey = false;\t//新的mesh不能算samekey了\r\n        }\r\n        if (!sameKey) {\r\n            //添加一个新的submit\r\n            var submit: SubmitTexture = this._curSubmit = SubmitTexture.create(this, triMesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n            submit.shaderValue.textureHost = tex;\r\n            submit._renderType = SubmitBase.TYPE_TEXTURE;\r\n            submit._key.submitType = SubmitBase.KEY_TRIANGLES;\r\n            submit._key.other = webGLImg.id;\r\n            this._copyClipInfo(submit, this._globalClipMatrix);\r\n            this._submits[this._submits._length++] = submit;\r\n        }\r\n\r\n        var rgba: number = this._mixRGBandAlpha(colorNum, this._shader2D.ALPHA * alpha);\r\n        if (!this._drawTriUseAbsMatrix) {\r\n            if (!matrix) {\r\n                tmpMat.a = 1; tmpMat.b = 0; tmpMat.c = 0; tmpMat.d = 1; tmpMat.tx = x; tmpMat.ty = y;\r\n            } else {\r\n                tmpMat.a = matrix.a; tmpMat.b = matrix.b; tmpMat.c = matrix.c; tmpMat.d = matrix.d; tmpMat.tx = matrix.tx + x; tmpMat.ty = matrix.ty + y;\r\n            }\r\n            Matrix.mul(tmpMat, this._curMat, tmpMat);\r\n            triMesh.addData(vertices, uvs, indices, tmpMat || this._curMat, rgba);\r\n        } else {\r\n            // 这种情况是drawtexture转成的drawTriangle，直接使用matrix就行，传入的xy都是0\r\n            triMesh.addData(vertices, uvs, indices, matrix, rgba);\r\n        }\r\n        this._curSubmit._numEle += indices.length;\r\n\r\n        if (blendMode) {\r\n            this.globalCompositeOperation = oldcomp!;\r\n        }\r\n        //return true;\r\n    }\r\n\r\n    transform(a: number, b: number, c: number, d: number, tx: number, ty: number): void {\r\n        SaveTransform.save(this);\r\n        Matrix.mul(Matrix.TEMP.setTo(a, b, c, d, tx, ty), this._curMat, this._curMat);\t//TODO 这里会有效率问题。一堆的set\r\n        this._curMat._checkTransform();\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**@internal */\r\n    _transformByMatrix(matrix: Matrix, tx: number, ty: number): void {\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, this._curMat, this._curMat);\r\n        matrix.setTranslate(0, 0);\r\n        this._curMat._bTransform = true;\r\n    }\r\n\r\n    //TODO:coverage\r\n    setTransformByMatrix(value: Matrix): void {\r\n        value.copyTo(this._curMat);\r\n    }\r\n\r\n    rotate(angle: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.rotateEx(angle);\r\n    }\r\n\r\n    scale(scaleX: number, scaleY: number): void {\r\n        SaveTransform.save(this);\r\n        this._curMat.scaleEx(scaleX, scaleY);\r\n    }\r\n\r\n    clipRect(x: number, y: number, width: number, height: number, escape?: boolean): void {\r\n        SaveClipRect.save(this);\r\n        if (this._clipRect == Context.MAXCLIPRECT) {\r\n            this._clipRect = new Rectangle(x, y, width, height);\r\n        } else {\r\n            this._clipRect.width = width;\r\n            this._clipRect.height = height;\r\n\r\n            //把xy转换到当前矩阵空间。宽高不用转换，这样在shader中计算的时候就不用把方向normalize了\r\n            this._clipRect.x = x;\r\n            this._clipRect.y = y;\r\n        }\r\n        this._clipID_Gen++;\r\n        this._clipID_Gen %= 10000;\r\n        this._clipInfoID = this._clipID_Gen;\r\n\r\n        if (escape) {\r\n            defaultClipMatrix.copyTo(this._globalClipMatrix);\r\n            return;\r\n        }\r\n\r\n        var cm: Matrix = this._globalClipMatrix;\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转，翻转\r\n        var minx: number = cm.tx;\r\n        var miny: number = cm.ty;\r\n        var maxx: number = minx + cm.a;\r\n        var maxy: number = miny + cm.d;\r\n        //TEMP end\r\n\r\n        if (this._clipRect.width >= Const.MAX_CLIP_SIZE) {\r\n            cm.a = cm.d = Const.MAX_CLIP_SIZE;\r\n            cm.b = cm.c = cm.tx = cm.ty = 0;\r\n        } else {\r\n            //其实就是矩阵相乘\r\n            if (this._curMat._bTransform) {\r\n                cm.tx = this._clipRect.x * this._curMat.a + this._clipRect.y * this._curMat.c + this._curMat.tx;\r\n                cm.ty = this._clipRect.x * this._curMat.b + this._clipRect.y * this._curMat.d + this._curMat.ty;\r\n                cm.a = this._clipRect.width * this._curMat.a;\r\n                cm.b = this._clipRect.width * this._curMat.b;\r\n                cm.c = this._clipRect.height * this._curMat.c;\r\n                cm.d = this._clipRect.height * this._curMat.d;\r\n            } else {\r\n                cm.tx = this._clipRect.x + this._curMat.tx;\r\n                cm.ty = this._clipRect.y + this._curMat.ty;\r\n                cm.a = this._clipRect.width;\r\n                cm.b = cm.c = 0;\r\n                cm.d = this._clipRect.height;\r\n            }\r\n            if (this._incache) {\r\n                this._clipInCache = true;\r\n            }\r\n        }\r\n\r\n        //TEMP 处理clip交集问题，这里有点问题，无法处理旋转,翻转\r\n        if (cm.a > 0 && cm.d > 0) {\r\n            var cmaxx: number = cm.tx + cm.a;\r\n            var cmaxy: number = cm.ty + cm.d;\r\n            if (cmaxx <= minx || cmaxy <= miny || cm.tx >= maxx || cm.ty >= maxy) {\r\n                //超出范围了\r\n                cm.a = -0.1; cm.d = -0.1;\r\n            } else {\r\n                if (cm.tx < minx) {\r\n                    cm.a -= (minx - cm.tx);\r\n                    cm.tx = minx;\r\n                }\r\n                if (cmaxx > maxx) {\r\n                    cm.a -= (cmaxx - maxx);\r\n                }\r\n                if (cm.ty < miny) {\r\n                    cm.d -= (miny - cm.ty);\r\n                    cm.ty = miny;\r\n                }\r\n                if (cmaxy > maxy) {\r\n                    cm.d -= (cmaxy - maxy);\r\n                }\r\n                if (cm.a <= 0) cm.a = -0.1;\r\n                if (cm.d <= 0) cm.d = -0.1;\r\n            }\r\n        }\r\n        //TEMP end\r\n    }\r\n\r\n    addRenderObject(o: ISubmit): void {\r\n        this._submits[this._submits._length++] = o;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tstart\r\n     * @param\tend\r\n     */\r\n    submitElement(start: number, end: number): number {\r\n        var mainCtx: boolean = this.isMain;\r\n        var renderList: any[] = this._submits;\r\n        var ret: number = ((<any>renderList))._length;\r\n        end < 0 && (end = ((<any>renderList))._length);\r\n        var submit: Submit = SubmitBase.RENDERBASE;\r\n        while (start < end) {\r\n            this._renderNextSubmitIndex = start + 1;\r\n            if (renderList[start] === SubmitBase.RENDERBASE) {\r\n                start++;\r\n                continue;\r\n            }\r\n            SubmitBase.preRender = submit;\r\n            submit = renderList[start];\r\n            //只有submitscissor才会返回多个\r\n            start += submit.renderSubmit();\r\n            //本来做了个优化，如果是主画布，用完立即releaseRender. 但是实际没有什么效果，且由于submit需要用来对比，即使用完也不能修改，所以这个优化又去掉了\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    flush(): number {\r\n        this._clipID_Gen = 0;\r\n        var ret: number = this.submitElement(0, this._submits._length);\r\n        this._path && this._path.reset();\r\n        SkinMeshBuffer.instance && SkinMeshBuffer.getInstance().reset();\r\n\r\n        //Stat.mesh2DNum += meshlist.length;\r\n        this._curSubmit = SubmitBase.RENDERBASE;\r\n\r\n        for (var i: number = 0, sz: number = this.meshlist.length; i < sz; i++) {\r\n            var curm: Mesh2D = this.meshlist[i];\r\n            curm.canReuse ? (curm.releaseMesh()) : (curm.destroy());\r\n        }\r\n        this.meshlist.length = 0;\r\n\r\n        this._mesh = MeshQuadTexture.getAMesh(this.isMain);\t//TODO 不要这样。\r\n        this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n        this._triangleMesh = MeshTexture.getAMesh(this.isMain);\r\n        this.meshlist.push(this._mesh, this._pathMesh, this._triangleMesh);\r\n\r\n        this._flushCnt++;\r\n        //charbook gc\r\n        if (this._flushCnt % 60 == 0 && this.isMain) {\r\n            if (TextRender.textRenderInst) {\r\n                TextRender.textRenderInst.GC();\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*******************************************start矢量绘制***************************************************/\r\n\r\n    beginPath(convex: boolean = false): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.beginPath(convex);\r\n    }\r\n\r\n    closePath(): void {\r\n        //_path.closePath = true;\r\n        this._path.closePath();\r\n    }\r\n\r\n    /**\r\n     * 添加一个path。\r\n     * @param\tpoints [x,y,x,y....]\t这个会被保存下来，所以调用者需要注意复制。\r\n     * @param\tclose\t是否闭合\r\n     * @param   convex 是否是凸多边形。convex的优先级是这个最大。fill的时候的次之。其实fill的时候不应该指定convex，因为可以多个path\r\n     * @param\tdx  需要添加的平移。这个需要在应用矩阵之前应用。\r\n     * @param\tdy\r\n     */\r\n    addPath(points: any[], close: boolean, convex: boolean, dx: number, dy: number): void {\r\n        let sz = points.length;\r\n        for (let i = 0; i < sz - 1; i += 2) {\r\n            points[i] += dx;\r\n            points[i + 1] += dy;\r\n        }\r\n        if (close && sz > 5 && (points[sz - 2] != points[0] || points[sz - 1] != points[1])) {\r\n            points.push(points[0], points[1]);\r\n        }\r\n        this._getPath().push(points, convex);\r\n    }\r\n\r\n    fill(): void {\r\n        var m: Matrix = this._curMat;\r\n        var tPath: Path = this._getPath();\r\n        var submit: Submit = this._curSubmit;\r\n        var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n        sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n        if (!sameKey) {\r\n            this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n        }\r\n        var rgba: number = this.mixRGBandAlpha(this.fillStyle.toInt());\r\n        var curEleNum: number = 0;\r\n        var idx: any[];\r\n        //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n        for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n            var p: any = tPath.paths[i];\r\n            var vertNum: number = p.path.length / 2;\r\n            if (vertNum < 3 || (vertNum == 3 && !p.convex))\r\n                continue;\r\n            var cpath: any[] = p.path.concat();\r\n            // 应用矩阵转换顶点\r\n            var pi: number = 0;\r\n            var xp: number, yp: number;\r\n            var _x: number, _y: number;\r\n            if (m._bTransform) {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n\r\n                    cpath[xp] = m.a * _x + m.c * _y + m.tx;\r\n                    cpath[yp] = m.b * _x + m.d * _y + m.ty;\r\n                }\r\n            } else {\r\n                for (pi = 0; pi < vertNum; pi++) {\r\n                    xp = pi << 1;\r\n                    yp = xp + 1;\r\n                    _x = cpath[xp];\r\n                    _y = cpath[yp];\r\n                    cpath[xp] = _x + m.tx;\r\n                    cpath[yp] = _y + m.ty;\r\n                }\r\n            }\r\n\r\n            if (this._pathMesh.vertNum + vertNum > Context._MAXVERTNUM) {\r\n                //;\r\n                //顶点数超了，要先提交一次\r\n                this._curSubmit._numEle += curEleNum;\r\n                curEleNum = 0;\r\n                //然后用新的mesh，和新的submit。\r\n                this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n\r\n            var curvert: number = this._pathMesh.vertNum;\r\n            //生成 ib\r\n            if (p.convex) { //convex的ib比较容易\r\n                var faceNum: number = vertNum - 2;\r\n                idx = new Array(faceNum * 3);\r\n                var idxpos: number = 0;\r\n                for (var fi: number = 0; fi < faceNum; fi++) {\r\n                    idx[idxpos++] = curvert;\r\n                    idx[idxpos++] = fi + 1 + curvert;\r\n                    idx[idxpos++] = fi + 2 + curvert;\r\n                }\r\n            }\r\n            else {\r\n                idx = Earcut.earcut(cpath, null, 2);\t//返回索引\r\n                if (curvert > 0) {\r\n                    //修改ib\r\n                    for (var ii: number = 0; ii < idx.length; ii++) {\r\n                        idx[ii] += curvert;\r\n                    }\r\n                }\r\n            }\r\n            //填充mesh\r\n            this._pathMesh.addVertAndIBToMesh(this, cpath, rgba, idx);\r\n            curEleNum += idx.length;\r\n        }\r\n        this._curSubmit._numEle += curEleNum;\r\n    }\r\n\r\n    private addVGSubmit(mesh: Mesh2D): Submit {\r\n        //elenum设为0，后面再加\r\n        var submit: Submit = Submit.createShape(this, mesh, 0, Value2D.create(ShaderDefines2D.PRIMITIVE, 0));\r\n        //submit._key.clear();\r\n        //submit._key.blendShader = _submitKey.blendShader;\t//TODO 这个在哪里赋值的啊\r\n        submit._key.submitType = SubmitBase.KEY_VG;\r\n        this._submits[this._submits._length++] = submit;\r\n        this._copyClipInfo(submit, this._globalClipMatrix);\r\n        return submit;\r\n    }\r\n\r\n    stroke(): void {\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var tPath: Path = this._getPath();\r\n            var submit: Submit = this._curSubmit;\r\n            var sameKey: boolean = (submit._key.submitType === SubmitBase.KEY_VG && submit._key.blendShader === this._nBlendType);\r\n            sameKey && (sameKey = sameKey && this.isSameClipInfo(submit));\r\n\r\n            if (!sameKey) {\r\n                this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n            }\r\n            var curEleNum: number = 0;\r\n            //如果有多个path的话，要一起填充mesh，使用相同的颜色和alpha\r\n            for (var i: number = 0, sz: number = tPath.paths.length; i < sz; i++) {\r\n                var p: any = tPath.paths[i];\r\n                if (p.path.length <= 0)\r\n                    continue;\r\n                var idx: any[] = [];\r\n                var vertex: any[] = [];//x,y\r\n                //p.path.loop;\r\n                //填充vbib\r\n                var maxVertexNum: number = p.path.length * 2;\t//最大可能产生的顶点数。这个需要考虑考虑\r\n                if (maxVertexNum < 2)\r\n                    continue;\r\n                if (this._pathMesh.vertNum + maxVertexNum > Context._MAXVERTNUM) {\r\n                    //;\r\n                    //顶点数超了，要先提交一次\r\n                    this._curSubmit._numEle += curEleNum;\r\n                    curEleNum = 0;\r\n                    //然后用新的mesh，和新的submit。\r\n                    this._pathMesh = MeshVG.getAMesh(this.isMain);\r\n                    this.meshlist.push(this._pathMesh);\r\n                    this._curSubmit = this.addVGSubmit(this._pathMesh);\r\n                }\r\n                //这个需要放在创建新的mesh的后面，因为需要mesh.vertNum,否则如果先调用这个，再创建mesh，那么ib就不对了\r\n                BasePoly.createLine2(p.path, idx, this.lineWidth, this._pathMesh.vertNum, vertex, p.loop);\t//_pathMesh.vertNum 是要加到生成的ib上的\r\n                // 变换所有的点\r\n                var ptnum: number = vertex.length / 2;\r\n                var m: Matrix = this._curMat;\r\n                var pi: number = 0;\r\n                var xp: number, yp: number;\r\n                var _x: number, _y: number;\r\n                if (m._bTransform) {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n\r\n                        vertex[xp] = m.a * _x + m.c * _y + m.tx;\r\n                        vertex[yp] = m.b * _x + m.d * _y + m.ty;\r\n                    }\r\n                } else {\r\n                    for (pi = 0; pi < ptnum; pi++) {\r\n                        xp = pi << 1;\r\n                        yp = xp + 1;\r\n                        _x = vertex[xp];\r\n                        _y = vertex[yp];\r\n                        vertex[xp] = _x + m.tx;\r\n                        vertex[yp] = _y + m.ty;\r\n                    }\r\n                }\r\n\r\n                //this.drawPoly(0, 0, p.path, fillStyle._color.numColor, 0, 0, p.convex);\r\n                //填充mesh\r\n                this._pathMesh.addVertAndIBToMesh(this, vertex, rgba, idx);\r\n                curEleNum += idx.length;\r\n            }\r\n            this._curSubmit._numEle += curEleNum;\r\n        }\r\n    }\r\n\r\n    moveTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        tPath.newPath();\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tb 是否应用矩阵\r\n     */\r\n    lineTo(x: number, y: number): void {\r\n        var tPath: Path = this._getPath();\r\n        if (Math.abs(x - tPath._lastOriX) < 1e-3 && Math.abs(y - tPath._lastOriY) < 1e-3)//不判断的话，下面的画线算法受不了\r\n            return;\r\n        tPath._lastOriX = x;\r\n        tPath._lastOriY = y;\r\n        tPath.addPoint(x, y);\r\n    }\r\n    /*\r\n    public function drawCurves(x:Number, y:Number,points:Array, lineColor:*, lineWidth:Number = 1):void {\r\n        //setPathId(-1);\r\n        beginPath();\r\n        strokeStyle = lineColor;\r\n        this.lineWidth = lineWidth;\r\n        var points:Array = points;\r\n        //movePath(x, y); TODO 这个被去掉了\r\n        moveTo(points[0], points[1]);\r\n        var i:int = 2, n:int = points.length;\r\n        while (i < n) {\r\n            quadraticCurveTo(points[i++], points[i++], points[i++], points[i++]);\r\n        }\r\n        stroke();\r\n    }\r\n    */\r\n\r\n    arcTo(x1: number, y1: number, x2: number, y2: number, r: number): void {\r\n        /*\r\n        if (mId != -1) {\r\n            if (mHaveKey) {\r\n                return;\r\n            }\r\n        }\r\n        */\r\n        var i: number = 0;\r\n        var x: number = 0, y: number = 0;\r\n        var dx: number = this._path._lastOriX - x1;\r\n        var dy: number = this._path._lastOriY - y1;\r\n        var len1: number = Math.sqrt(dx * dx + dy * dy);\r\n        if (len1 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx: number = dx / len1;\r\n        var ndy: number = dy / len1;\r\n        var dx2: number = x2 - x1;\r\n        var dy2: number = y2 - y1;\r\n        var len22: number = dx2 * dx2 + dy2 * dy2;\r\n        var len2: number = Math.sqrt(len22);\r\n        if (len2 <= 0.000001) {\r\n            return;\r\n        }\r\n        var ndx2: number = dx2 / len2;\r\n        var ndy2: number = dy2 / len2;\r\n        var odx: number = ndx + ndx2;\r\n        var ody: number = ndy + ndy2;\r\n        var olen: number = Math.sqrt(odx * odx + ody * ody);\r\n        if (olen <= 0.000001) {\r\n            return;\r\n        }\r\n\r\n        var nOdx: number = odx / olen;\r\n        var nOdy: number = ody / olen;\r\n\r\n        var alpha: number = Math.acos(nOdx * ndx + nOdy * ndy);\r\n        var halfAng: number = Math.PI / 2 - alpha;\r\n\r\n        len1 = r / Math.tan(halfAng);\r\n        var ptx1: number = len1 * ndx + x1;\r\n        var pty1: number = len1 * ndy + y1;\r\n\r\n        var orilen: number = Math.sqrt(len1 * len1 + r * r);\r\n        //圆心\r\n        var orix: number = x1 + nOdx * orilen;\r\n        var oriy: number = y1 + nOdy * orilen;\r\n\r\n        var ptx2: number = len1 * ndx2 + x1;\r\n        var pty2: number = len1 * ndy2 + y1;\r\n\r\n        var dir: number = ndx * ndy2 - ndy * ndx2;\r\n\r\n        var fChgAng: number = 0;\r\n        var sinx: number = 0.0;\r\n        var cosx: number = 0.0;\r\n        if (dir >= 0) {\r\n            fChgAng = halfAng * 2;\r\n            var fda: number = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n        else {\r\n            fChgAng = -halfAng * 2;\r\n            fda = fChgAng / Context.SEGNUM;\r\n            sinx = Math.sin(fda);\r\n            cosx = Math.cos(fda);\r\n        }\r\n\r\n        //x = _curMat.a * ptx1 + _curMat.c * pty1 /*+ _curMat.tx*/;\r\n        //y = _curMat.b * ptx1 + _curMat.d * pty1 /*+ _curMat.ty*/;\r\n        var lastx: number = this._path._lastOriX, lasty: number = this._path._lastOriY;\t//没有矩阵转换的上一个点\r\n        var _x1: number = ptx1, _y1: number = pty1;\r\n        if (Math.abs(_x1 - this._path._lastOriX) > 0.1 || Math.abs(_y1 - this._path._lastOriY) > 0.1) {\r\n            x = _x1;// _curMat.a * _x1 + _curMat.c * _y1 + _curMat.tx;\r\n            y = _y1;//_curMat.b * _x1 + _curMat.d * _y1 + _curMat.ty;\r\n            lastx = _x1;\r\n            lasty = _y1;\r\n            this._path._lastOriX = x;\r\n            this._path._lastOriY = y;\r\n            this._path.addPoint(x, y);\r\n        }\r\n        var cvx: number = ptx1 - orix;\r\n        var cvy: number = pty1 - oriy;\r\n        var tx: number = 0.0;\r\n        var ty: number = 0.0;\r\n        for (i = 0; i < Context.SEGNUM; i++) {\r\n            var cx: number = cvx * cosx + cvy * sinx;\r\n            var cy: number = -cvx * sinx + cvy * cosx;\r\n            x = cx + orix;\r\n            y = cy + oriy;\r\n\r\n            //x1 = _curMat.a * x + _curMat.c * y /*+ _curMat.tx*/;\r\n            //y1 = _curMat.b * x + _curMat.d * y /*+ _curMat.ty*/;\r\n            //x = x1;\r\n            //y = y1;\r\n            if (Math.abs(lastx - x) > 0.1 || Math.abs(lasty - y) > 0.1) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                this._path._lastOriX = x;\r\n                this._path._lastOriY = y;\r\n                this._path.addPoint(x, y);\r\n                lastx = x;\r\n                lasty = y;\r\n            }\r\n            cvx = cx;\r\n            cvy = cy;\r\n        }\r\n    }\r\n\r\n    arc(cx: number, cy: number, r: number, startAngle: number, endAngle: number, counterclockwise: boolean = false, b: boolean = true): void {\r\n        /* TODO 缓存还没想好\r\n        if (mId != -1) {\r\n            var tShape:IShape = VectorGraphManager.getInstance().shapeDic[this.mId];\r\n            if (tShape) {\r\n                if (mHaveKey && !tShape.needUpdate(_curMat))\r\n                    return;\r\n            }\r\n            cx = 0;\r\n            cy = 0;\r\n        }\r\n        */\r\n        var a: number = 0, da: number = 0, hda: number = 0, kappa: number = 0;\r\n        var dx: number = 0, dy: number = 0, x: number = 0, y: number = 0, tanx: number = 0, tany: number = 0;\r\n        var px: number = 0, py: number = 0, ptanx: number = 0, ptany: number = 0;\r\n        var i: number, ndivs: number, nvals: number;\r\n\r\n        // Clamp angles\r\n        da = endAngle - startAngle;\r\n        if (!counterclockwise) {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = Math.PI * 2;\r\n            } else {\r\n                while (da < 0.0) {\r\n                    da += Math.PI * 2;\r\n                }\r\n            }\r\n        } else {\r\n            if (Math.abs(da) >= Math.PI * 2) {\r\n                da = -Math.PI * 2;\r\n            } else {\r\n                while (da > 0.0) {\r\n                    da -= Math.PI * 2;\r\n                }\r\n            }\r\n        }\r\n        var sx: number = this.getMatScaleX();\r\n        var sy: number = this.getMatScaleY();\r\n        var sr: number = r * (sx > sy ? sx : sy);\r\n        var cl: number = 2 * Math.PI * sr;\r\n        ndivs = (Math.max(cl / 10, 10)) | 0;\r\n\r\n        hda = (da / ndivs) / 2.0;\r\n        kappa = Math.abs(4 / 3 * (1 - Math.cos(hda)) / Math.sin(hda));\r\n        if (counterclockwise)\r\n            kappa = -kappa;\r\n\r\n        nvals = 0;\r\n        var tPath: Path = this._getPath();\r\n        var _x1: number, _y1: number;\r\n        for (i = 0; i <= ndivs; i++) {\r\n            a = startAngle + da * (i / ndivs);\r\n            dx = Math.cos(a);\r\n            dy = Math.sin(a);\r\n            x = cx + dx * r;\r\n            y = cy + dy * r;\r\n            if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n                //var _tx1:Number = x, _ty1:Number = y;\r\n                //x = _curMat.a * _tx1 + _curMat.c * _ty1 + _curMat.tx;\r\n                //y = _curMat.b * _tx1 + _curMat.d * _ty1 + _curMat.ty;\r\n                tPath.addPoint(x, y);\r\n            }\r\n        }\r\n        dx = Math.cos(endAngle);\r\n        dy = Math.sin(endAngle);\r\n        x = cx + dx * r;\r\n        y = cy + dy * r;\r\n        if (x != this._path._lastOriX || y != this._path._lastOriY) {\r\n            //var _x2:Number = x, _y2:Number = y;\r\n            //x = _curMat.a * _x2 + _curMat.c * _y2 + _curMat.tx;\r\n            //y = _curMat.b * _x2 + _curMat.d * _y2 + _curMat.ty;\r\n            tPath.addPoint(x, y);\r\n        }\r\n    }\r\n\r\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void {\r\n        var tBezier: Bezier = Bezier.I;\r\n        var tResultArray: any[] = [];\r\n        //var _x1:Number = x, _y1:Number = y;\r\n        //x = _curMat.a * _x1 + _curMat.c * _y1 ;// + _curMat.tx;\r\n        //y = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        //_x1 = cpx, _y1 = cpy;\r\n        //cpx = _curMat.a * _x1 + _curMat.c * _y1;// + _curMat.tx;\r\n        //cpy = _curMat.b * _x1 + _curMat.d * _y1;// + _curMat.ty;\r\n        var tArray: any[] = tBezier.getBezierPoints([this._path._lastOriX, this._path._lastOriY, cpx, cpy, x, y], 30, 2);\r\n        for (var i: number = 0, n: number = tArray.length / 2; i < n; i++) {\r\n            this.lineTo(tArray[i * 2], tArray[i * 2 + 1]);\r\n        }\r\n        this.lineTo(x, y);\r\n    }\r\n\r\n\r\n    /**\r\n     * 把颜色跟当前设置的alpha混合\r\n     * @return\r\n     */\r\n    mixRGBandAlpha(color: number): number {\r\n        return this._mixRGBandAlpha(color, this._shader2D.ALPHA);\r\n    }\r\n    /**@internal */\r\n    _mixRGBandAlpha(color: number, alpha: number): number {\r\n        if (alpha >= 1) {\r\n            return color;\r\n        }\r\n        var a: number = ((color & 0xff000000) >>> 24);\r\n        //TODO 这里容易出问题，例如颜色的alpha部分虽然为0，但是他的意义就是0，不能假设是没有设置alpha。例如级联多个alpha就会生成这种结果\r\n        if (a != 0) {\r\n            a *= alpha;\r\n        } else {\r\n            a = alpha * 255;\r\n        }\r\n        return (color & 0x00ffffff) | (a << 24);\r\n    }\r\n\r\n    strokeRect(x: number, y: number, width: number, height: number, parameterLineWidth: number): void {\r\n        var tW: number = parameterLineWidth * 0.5;\r\n        //line(x - tW, y, x + width + tW, y, parameterLineWidth, _curMat);\r\n        //line(x + width, y, x + width, y + height, parameterLineWidth, _curMat);\r\n        //line(x, y, x, y + height, parameterLineWidth, _curMat);\r\n        //line(x - tW, y + height, x + width + tW, y + height, parameterLineWidth, _curMat);\r\n        /**\r\n         * p1-------------------------------p2\r\n         * |  x,y                      x+w,y|\r\n         * |     p4--------------------p3   |\r\n         * |     |                     |    |\r\n         * |     p6--------------------p7   |\r\n         * |  x,y+h                  x+w,y+h|\r\n         * p5-------------------------------p8\r\n         * \r\n         * 不用了\r\n         * 这个其实用4个fillrect拼起来更好，能与fillrect合并。虽然多了几个点。\r\n         */\r\n        //TODO 这里能不能与下面的stroke合并一下\r\n        if (this.lineWidth > 0) {\r\n            var rgba: number = this.mixRGBandAlpha(this.strokeStyle._color.numColor);\r\n            var hw: number = this.lineWidth / 2;\r\n            this._fillRect(x - hw, y - hw, width + this.lineWidth, this.lineWidth, rgba);\t\t\t\t//上\r\n            this._fillRect(x - hw, y - hw + height, width + this.lineWidth, this.lineWidth, rgba);\t\t//下\r\n            this._fillRect(x - hw, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t\t\t//左\r\n            this._fillRect(x - hw + width, y + hw, this.lineWidth, height - this.lineWidth, rgba);\t\t\t//右\r\n        }\r\n    }\r\n\r\n    clip(): void {\r\n    }\r\n\r\n    /*******************************************end矢量绘制***************************************************/\r\n    //TODO:coverage\r\n    drawParticle(x: number, y: number, pt: any): void {\r\n        pt.x = x;\r\n        pt.y = y;\r\n        this._submits[this._submits._length++] = pt;\r\n    }\r\n\r\n    private _getPath(): Path {\r\n        return this._path || (this._path = new Path());\r\n    }\r\n\r\n    /**获取canvas*/\r\n    //注意这个是对外接口\r\n    get canvas(): HTMLCanvas {\r\n        return this._canvas;\r\n    }\r\n    //=============新增==================\t\r\n    /* 下面的方式是有bug的。canvas是直接save，restore，现在是为了优化，但是有bug，所以先不重载了\r\n    public function saveTransform(matrix:Matrix):void {\r\n        this._curMat.copyTo(matrix);\r\n    }\r\n    \r\n    public function restoreTransform(matrix:Matrix):void {\r\n        matrix.copyTo(this._curMat);\r\n    }\r\n    \r\n    public function transformByMatrix(matrix:Matrix,tx:Number,ty:Number):void {\r\n        var mat:Matrix = _curMat;\r\n        matrix.setTranslate(tx, ty);\r\n        Matrix.mul(matrix, mat, mat);\r\n        matrix.setTranslate(0, 0);\r\n        mat._bTransform = true;\r\n    }\r\n    */\r\n\r\n    /* 下面的是错误的。位置没有被缩放\r\n    public function transformByMatrix(matrix:Matrix, tx:Number, ty:Number):void {\r\n        SaveTransform.save(this);\t\t\t\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n            \r\n    public function transformByMatrixNoSave(matrix:Matrix, tx:Number, ty:Number):void {\r\n        Matrix.mul(matrix, _curMat, _curMat);\t\r\n        _curMat.tx += tx;\r\n        _curMat.ty += ty;\r\n        _curMat._checkTransform();\r\n    }\r\n    */\r\n\r\n    private static tmpuv1: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    /**\r\n     * 专用函数。通过循环创建来水平填充\r\n     * @param\ttex\r\n     * @param\tbmpid\r\n     * @param\tuv\t\t希望循环的部分的uv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\tw\r\n     */\r\n    private _fillTexture_h(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, w: number, color: number): void {\r\n        if (oriw <= 0)\r\n            console.error('_fillTexture_h error: oriw must>0');\r\n\r\n        var stx: number = x;\r\n        var num: number = Math.floor(w / oriw);\r\n        var left: number = w % oriw;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, stx, y, oriw, orih, this._curMat, uv, 1, false, color);\r\n            stx += oriw;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var du: number = uv[2] - uv[0];\r\n            var uvr: number = uv[0] + du * (left / oriw);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uvr; tuv[3] = uv[3];\r\n            tuv[4] = uvr; tuv[5] = uv[5]; tuv[6] = uv[6]; tuv[7] = uv[7];\r\n            this._inner_drawTexture(tex, imgid, stx, y, left, orih, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 专用函数。通过循环创建来垂直填充\r\n     * @param\ttex\r\n     * @param\timgid\r\n     * @param\tuv\r\n     * @param\toriw\r\n     * @param\torih\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\th\r\n     */\r\n    private _fillTexture_v(tex: Texture, imgid: number, uv: ArrayLike<number>, oriw: number, orih: number, x: number, y: number, h: number, color: number): void {\r\n        if (orih <= 0)\r\n            console.error('_fillTexture_v error: orih must>0');\r\n        var sty: number = y;\r\n        var num: number = Math.floor(h / orih);\r\n        var left: number = h % orih;\r\n        for (var i: number = 0; i < num; i++) {\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, orih, this._curMat, uv, 1, false, color);\r\n            sty += orih;\r\n        }\r\n        // 最后剩下的\r\n        if (left > 0) {\r\n            var dv: number = uv[7] - uv[1];\r\n            var uvb: number = uv[1] + dv * (left / orih);\r\n            var tuv: any[] = Context.tmpuv1;\r\n            tuv[0] = uv[0]; tuv[1] = uv[1]; tuv[2] = uv[2]; tuv[3] = uv[3];\r\n            tuv[4] = uv[4]; tuv[5] = uvb; tuv[6] = uv[6]; tuv[7] = uvb;\r\n            this._inner_drawTexture(tex, imgid, x, sty, oriw, left, this._curMat, tuv, 1, false, color);\r\n        }\r\n    }\r\n\r\n    private static tmpUV: any[] = [0, 0, 0, 0, 0, 0, 0, 0];\r\n    private static tmpUVRect: any[] = [0, 0, 0, 0];\r\n    drawTextureWithSizeGrid(tex: Texture, tx: number, ty: number, width: number, height: number, sizeGrid: any[], gx: number, gy: number, color: number): void {\r\n        if (!tex._getSource())\r\n            return;\r\n        tx += gx;\r\n        ty += gy;\r\n\r\n        var uv = tex.uv, w: number = tex.bitmap.width, h: number = tex.bitmap.height;\r\n\r\n        var top: number = sizeGrid[0];\r\n        var left: number = sizeGrid[3];\r\n        var right: number = sizeGrid[1];\r\n        var bottom: number = sizeGrid[2];\r\n        var repeat: boolean = sizeGrid[4];\r\n        var needClip: boolean = false;\r\n\r\n        if (width == tex.width) {\r\n            left = right = 0;\r\n        }\r\n        if (height == tex.height) {\r\n            top = bottom = 0;\r\n        }\r\n\r\n        var d_top: number = top / h;\r\n        var d_left: number = left / w;\r\n        var d_right: number = right / w;\r\n        var d_bottom: number = bottom / h;\r\n\r\n        //处理进度条不好看的问题\r\n        // if (left + right > width) {\r\n        // \tvar clipWidth: number = width;\r\n        // \tneedClip = true;\r\n        // \twidth = left + right;\r\n        // \tthis.save();\r\n        // \tthis.clipRect(0 + tx, 0 + ty, clipWidth, height);\r\n        // }\r\n\r\n        var imgid: number = (tex.bitmap as Texture2D).id;\r\n        var mat: Matrix = this._curMat;\r\n        var tuv = this._tempUV;\r\n\r\n        //解决九宫格设置left+right或top+bottom的累加值超过宽或高导致九宫格显示错乱的bug\r\n        var scale_x = 1;\r\n        var scale_y = 1;\r\n        if (left + right > width) scale_x = width / (left + right);\r\n        if (top + bottom > height) scale_y = height / (top + bottom);\r\n        left *= scale_x;\r\n        right *= scale_x;\r\n        top *= scale_y;\r\n        bottom *= scale_y;\r\n\r\n        // 整图的uv\r\n        // 一定是方的，所以uv只要左上右下就行\r\n        var uvl = uv[0];\r\n        var uvt = uv[1];\r\n        var uvr = uv[4];\r\n        var uvb = uv[5];\r\n\r\n        // 小图的uv\r\n        var uvl_ = uvl;\r\n        var uvt_ = uvt;\r\n        var uvr_ = uvr;\r\n        var uvb_ = uvb;\r\n\r\n        //绘制四个角\r\n        // 构造uv\r\n        if (left && top) {\r\n            uvr_ = uvl + d_left;\r\n            uvb_ = uvt + d_top;\r\n            tuv[0] = uvl, tuv[1] = uvt, tuv[2] = uvr_, tuv[3] = uvt,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, tx, ty, left, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && top) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt;\r\n            uvr_ = uvr; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, 0 + ty, right, top, mat, tuv, 1, false, color);\r\n        }\r\n        if (left && bottom) {\r\n            uvl_ = uvl; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvl + d_left; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, 0 + tx, height - bottom + ty, left, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        if (right && bottom) {\r\n            uvl_ = uvr - d_right; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            this._inner_drawTexture(tex, imgid, width - right + tx, height - bottom + ty, right, bottom, mat, tuv, 1, false, color);\r\n        }\r\n        //绘制上下两个边\r\n        if (top) {\r\n            uvl_ = uvl + d_left; uvt_ = uvt;\r\n            uvr_ = uvr - d_right; uvb_ = uvt + d_top;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, top, left + tx, ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, ty, width - left - right, top, mat, tuv, 1, false, color);\r\n            }\r\n\r\n        }\r\n        if (bottom) {\r\n            uvl_ = uvl + d_left; uvt_ = uvb - d_bottom;\r\n            uvr_ = uvr - d_right; uvb_ = uvb;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_h(tex, imgid, tuv, tex.width - left - right, bottom, left + tx, height - bottom + ty, width - left - right, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, left + tx, height - bottom + ty, width - left - right, bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制左右两边\r\n        if (left) {\r\n            uvl_ = uvl; uvt_ = uvt + d_top;\r\n            uvr_ = uvl + d_left; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, left, tex.height - top - bottom, tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, tx, top + ty, left, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        if (right) {\r\n            uvl_ = uvr - d_right; uvt_ = uvt + d_top;\r\n            uvr_ = uvr; uvb_ = uvb - d_bottom;\r\n            tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n                tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n            if (repeat) {\r\n                this._fillTexture_v(tex, imgid, tuv, right, tex.height - top - bottom, width - right + tx, top + ty, height - top - bottom, color);\r\n            } else {\r\n                this._inner_drawTexture(tex, imgid, width - right + tx, top + ty, right, height - top - bottom, mat, tuv, 1, false, color);\r\n            }\r\n        }\r\n        //绘制中间\r\n        uvl_ = uvl + d_left; uvt_ = uvt + d_top;\r\n        uvr_ = uvr - d_right; uvb_ = uvb - d_bottom;\r\n        tuv[0] = uvl_, tuv[1] = uvt_, tuv[2] = uvr_, tuv[3] = uvt_,\r\n            tuv[4] = uvr_, tuv[5] = uvb_, tuv[6] = uvl_, tuv[7] = uvb_;\r\n        if (repeat) {\r\n            var tuvr: any[] = Context.tmpUVRect;\r\n            tuvr[0] = uvl_; tuvr[1] = uvt_;\r\n            tuvr[2] = uvr_ - uvl_; tuvr[3] = uvb_ - uvt_;\r\n            // 这个如果用重复的可能比较多，所以采用filltexture的方法，注意这样会打断合并\r\n            this._fillTexture(tex, tex.width - left - right, tex.height - top - bottom, tuvr, left + tx, top + ty, width - left - right, height - top - bottom, 'repeat', 0, 0, color);\r\n        } else {\r\n            this._inner_drawTexture(tex, imgid, left + tx, top + ty, width - left - right, height - top - bottom, mat, tuv, 1, false, color);\r\n        }\r\n\r\n        if (needClip) this.restore();\r\n    }\r\n    addRenderObject3D(scene3D: ISubmit): void {\r\n        this._curSubmit = SubmitBase.RENDERBASE;//打断2D合并的renderKey\r\n        this.addRenderObject(scene3D);\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass ContextParams {\r\n    static DEFAULT: ContextParams;\r\n\r\n    lineWidth: number = 1;\r\n    textAlign: string;\r\n    textBaseline: string;\r\n\r\n    clear(): void {\r\n        this.lineWidth = 1;\r\n        this.textAlign = this.textBaseline = null;\r\n    }\r\n\r\n    make(): ContextParams {\r\n        return this === ContextParams.DEFAULT ? new ContextParams() : this;\r\n    }\r\n}\r\n// native\r\nif ((window as any).conch && !(window as any).conchConfig.conchWebGL) {\r\n    //@ts-ignore\r\n    Context = NativeContext;\r\n}\r\n","import { Texture } from \"./Texture\";\r\nimport { Texture2D } from \"./Texture2D\";\r\nimport { Context } from \"./Context\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { RenderTexture2D } from \"./RenderTexture2D\";\r\nimport { Resource } from \"./Resource\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>HTMLCanvas</code> 是 Html Canvas 的代理类，封装了 Canvas 的属性和方法。\r\n */\r\nexport class HTMLCanvas extends Resource {\r\n\r\n    private _ctx: any;\r\n    /**@internal */\r\n    _source: HTMLCanvasElement;\r\n    /**@internal */\r\n    _texture: Texture | RenderTexture2D;\r\n    /**@private */\r\n    protected _width: number;\r\n    /**@private */\r\n    protected _height: number;\r\n\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * 获取宽度。\r\n     */\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(width: number) {\r\n        this._width = width;\r\n    }\r\n\r\n    /***\r\n     * 获取高度。\r\n     */\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(height: number) {\r\n        this._height = height;\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _getSource() {\r\n        return this._source;\r\n    }\r\n    /**\r\n     * 根据指定的类型，创建一个 <code>HTMLCanvas</code> 实例。\r\n     */\r\n    constructor(createCanvas: boolean = false) {\r\n        super();\r\n        if (createCanvas)\t//webgl模式下不建立。除非强制指，例如绘制文字部分\r\n            this._source = Browser.createElement(\"canvas\");\r\n        else {\r\n            this._source = this as unknown as HTMLCanvasElement;\r\n        }\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * 清空画布内容。\r\n     */\r\n    clear(): void {\r\n        if (this._ctx) {\r\n            if (this._ctx.clear) {\r\n                this._ctx.clear();\r\n            } else {\r\n                this._ctx.clearRect(0, 0, this._width, this._height);\r\n            }\r\n        }\r\n        if (this._texture) {\r\n            this._texture.destroy();\r\n            this._texture = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁。\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        super.destroy();\r\n        this._setCPUMemory(0);\r\n        this._ctx && this._ctx.destroy && this._ctx.destroy();\r\n        this._ctx = null;\r\n    }\r\n\r\n    /**\r\n     * 释放。\r\n     */\r\n    release(): void {\r\n    }\r\n\r\n    /**\r\n     * Canvas 渲染上下文。\r\n     */\r\n    get context(): Context {\r\n        if (this._ctx) return this._ctx;\r\n        //@ts-ignore\r\n        if (this._source == this) {\t//是webgl并且不是真的画布。如果是真的画布，可能真的想要2d context\r\n            // @ts-ignore\r\n            this._ctx = new Context();\r\n        } else {\r\n            //@ts-ignore\r\n            this._ctx = this._source.getContext(LayaEnv.isConch ? 'layagl' : '2d');\r\n        }\r\n        this._ctx._canvas = this;\r\n        return this._ctx;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 设置 Canvas 渲染上下文。是webgl用来替换_ctx用的\r\n     * @param\tcontext Canvas 渲染上下文。\r\n     */\r\n    _setContext(context: Context): void {\r\n        this._ctx = context;\r\n    }\r\n\r\n    /**\r\n     * 获取 Canvas 渲染上下文。\r\n     * @param\tcontextID 上下文ID.\r\n     * @param\tother\r\n     * @return  Canvas 渲染上下文 Context 对象。\r\n     */\r\n    getContext(contextID: string, other: any = null): Context {\r\n        return this.context;\r\n    }\r\n\r\n\r\n    /**\r\n     * 获取内存大小。\r\n     * @return 内存大小。\r\n     */\r\n    //TODO:coverage\r\n    getMemSize(): number {\r\n        return 0;//TODO:待调整\r\n    }\r\n\r\n    /**\r\n     * 设置宽高。\r\n     * @param\tw 宽度。\r\n     * @param\th 高度。\r\n     */\r\n    size(w: number, h: number): void {\r\n        if (this._width != w || this._height != h || (this._source && (this._source.width != w || this._source.height != h))) {\r\n            this._width = w;\r\n            this._height = h;\r\n            this._setCPUMemory(w * h * 4);\r\n            this._ctx && this._ctx.size && this._ctx.size(w, h);\r\n            if (this._source) {// && this._source instanceof HTMLCanvasElement){\r\n                this._source.height = h;\r\n                this._source.width = w;\r\n            }\r\n            if (this._texture) {\r\n                this._texture.destroy();\r\n                this._texture = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取texture实例\r\n     */\r\n    getTexture(): Texture | null | RenderTexture2D {\r\n        if (!this._texture) {\r\n            var bitmap: Texture2D = new Texture2D(this.source.width, this.source.height, TextureFormat.R8G8B8A8, true, false, false);\r\n            bitmap.setImageData(this.source, false, false);\r\n            this._texture = new Texture(bitmap);\r\n        }\r\n        return this._texture;\r\n    }\r\n\r\n    /**\r\n     * 把图片转换为base64信息\r\n     * @param\ttype \"image/png\"\r\n     * @param\tencoderOptions\t质量参数，取值范围为0-1\r\n     */\r\n    toBase64(type: string, encoderOptions: number): string | null {\r\n        if (this._source) {\r\n            if (LayaEnv.isConch) {\r\n                var win: any = window as any;\r\n                var width: number = this._ctx._targets.sourceWidth;\r\n                var height: number = this._ctx._targets.sourceHeight;\r\n                var data: any = this._ctx._targets.getData(0, 0, width, height);\r\n                return win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            }\r\n            else {\r\n                return (this._source as HTMLCanvasElement).toDataURL(type, encoderOptions);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * native多线程转图片\r\n     * @param type \r\n     * @param encoderOptions \r\n     * @param callBack \r\n     */\r\n    toBase64Async(type: string, encoderOptions: number, callBack: Function): void {\r\n        var width: number = this._ctx._targets.sourceWidth;\r\n        var height: number = this._ctx._targets.sourceHeight;\r\n        this._ctx._targets.getDataAsync(0, 0, width, height, function (data: Uint8Array): void {\r\n            let win = window as any;\r\n            var base64 = win.conchToBase64FlipY ? win.conchToBase64FlipY(type, encoderOptions, data.buffer, width, height) : win.conchToBase64(type, encoderOptions, data.buffer, width, height);\r\n            callBack(base64);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * Graphic bounds数据类\r\n */\r\nexport class BoundsStyle {\r\n    /**@private */\r\n    bounds: Rectangle|null;\r\n    /**用户设的bounds*/\r\n    userBounds: Rectangle|null;\r\n    /**缓存的bounds顶点,sprite计算bounds用*/\r\n    temBM: any[]|null;\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): BoundsStyle {\r\n        if (this.bounds) this.bounds.recover();\r\n        if (this.userBounds) this.userBounds.recover();\r\n        this.bounds = null;\r\n        this.userBounds = null;\r\n        this.temBM = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"BoundsStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): BoundsStyle {\r\n        return Pool.getItemByClass(\"BoundsStyle\", BoundsStyle);\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../Sprite\"\r\nimport { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { HTMLCanvas } from \"../../resource/HTMLCanvas\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * @internal\r\n * 存储cache相关\r\n */\r\nexport class CacheStyle {\r\n\r\n    static EMPTY: CacheStyle = new CacheStyle();\r\n    /**当前实际的cache状态*/\r\n    cacheAs: string;\r\n    /**是否开启canvas渲染*/\r\n    enableCanvasRender: boolean;\r\n    /**用户设的cacheAs类型*/\r\n    userSetCache: string;\r\n    /**是否需要为滤镜cache*/\r\n    cacheForFilters: boolean;\r\n    /**是否为静态缓存*/\r\n    staticCache: boolean;\r\n    /**是否需要刷新缓存*/\r\n    reCache: boolean;\r\n    /**mask对象*/\r\n    mask: Sprite;\r\n    /**作为mask时的父对象*/\r\n    maskParent: Sprite;\r\n    /**滤镜数据*/\r\n    filters: any[];\r\n    /**当前缓存区域*/\r\n    cacheRect: Rectangle;\r\n    /**当前使用的canvas*/\r\n    canvas: HTMLCanvas;\r\n    //TODO:webgl是否还需要\r\n    /**滤镜数据*/\r\n    filterCache: any;\r\n    //TODO:webgl是否还需要\r\n    /**是否有发光滤镜*/\r\n    hasGlowFilter: boolean;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 是否需要Bitmap缓存\r\n     * @return\r\n     */\r\n    needBitmapCache(): boolean {\r\n        return this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 是否需要开启canvas渲染\r\n     */\r\n    needEnableCanvasRender(): boolean {\r\n        return this.userSetCache != \"none\" || this.cacheForFilters || !!this.mask;\r\n    }\r\n\r\n    /**\r\n     * 释放cache的资源\r\n     */\r\n    releaseContext(): void {\r\n        if (this.canvas && ((<any>this.canvas)).size) {\r\n            Pool.recover(\"CacheCanvas\", this.canvas);\r\n            this.canvas.size(0, 0);\r\n            // 微信在iphone8和mate20上个bug，size存在但是不起作用，可能是canvas对象不是我们的。\r\n            // 为了避免canvas不消失，再强制设置宽高为0 TODO 没有测试\r\n            try {\r\n                ((<any>this.canvas)).width = 0;\r\n                ((<any>this.canvas)).height = 0;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n        this.canvas = null;\r\n    }\r\n\r\n    createContext(): void {\r\n        if (!this.canvas) {\r\n            this.canvas = Pool.getItem(\"CacheCanvas\") || new HTMLCanvas(false);\r\n            var tx: Context = this.canvas.context as Context;\r\n            if (!tx) {\r\n                tx = this.canvas.getContext('2d') as Context;\t//如果是webGL的话，这个会返回WebGLContext2D\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 释放滤镜资源\r\n     */\r\n    releaseFilterCache(): void {\r\n        var fc: any = this.filterCache;\r\n        if (fc) {\r\n            fc.destroy();\r\n            fc.recycle();\r\n            this.filterCache = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === CacheStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteCache\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 重置\r\n     */\r\n    reset(): CacheStyle {\r\n        this.releaseContext();\r\n        this.releaseFilterCache();\r\n        this.cacheAs = \"none\";\r\n        this.enableCanvasRender = false;\r\n        this.userSetCache = \"none\";\r\n        this.cacheForFilters = false;\r\n        this.staticCache = false;\r\n        this.reCache = true;\r\n        this.mask = null;\r\n        this.maskParent = null;\r\n        this.filterCache = null;\r\n        this.filters = null;\r\n        this.hasGlowFilter = false;\r\n        if (this.cacheRect) this.cacheRect.recover();\r\n        this.cacheRect = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 创建一个SpriteCache\r\n     */\r\n    static create(): CacheStyle {\r\n        return Pool.getItemByClass(\"SpriteCache\", CacheStyle);\r\n    }\r\n\r\n    private static _scaleInfo: Point = new Point();\r\n    static CANVAS_EXTEND_EDGE: number = 16;\r\n    /**\r\n    * @internal\r\n    */\r\n    _calculateCacheRect(sprite: Sprite, tCacheType: string, x: number, y: number): Point {\r\n        var _cacheStyle: CacheStyle = sprite._cacheStyle;\r\n        if (!_cacheStyle.cacheRect)\r\n            _cacheStyle.cacheRect = Rectangle.create();\r\n        var tRec: Rectangle;\r\n\r\n        //计算显示对象的绘图区域\r\n        if (tCacheType === \"bitmap\") {\r\n            tRec = sprite.getSelfBounds();\r\n            tRec.width = tRec.width + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.height = tRec.height + CacheStyle.CANVAS_EXTEND_EDGE * 2;\r\n            tRec.x = tRec.x - sprite.pivotX;\r\n            tRec.y = tRec.y - sprite.pivotY;\r\n            tRec.x = tRec.x - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.y = tRec.y - CacheStyle.CANVAS_EXTEND_EDGE;\r\n            tRec.x = Math.floor(tRec.x + x) - x;\r\n            tRec.y = Math.floor(tRec.y + y) - y;\r\n            tRec.width = Math.floor(tRec.width);\r\n            tRec.height = Math.floor(tRec.height);\r\n            _cacheStyle.cacheRect.copyFrom(tRec);\r\n        } else {\r\n            _cacheStyle.cacheRect.setTo(-sprite._style.pivotX, -sprite._style.pivotY, 1, 1);\r\n        }\r\n        tRec = _cacheStyle.cacheRect;\r\n\r\n\r\n        //处理显示对象的scrollRect偏移\r\n        if (sprite._style.scrollRect) {\r\n            var scrollRect: Rectangle = sprite._style.scrollRect;\r\n            tRec.x -= scrollRect.x;\r\n            tRec.y -= scrollRect.y;\r\n        }\r\n        CacheStyle._scaleInfo.setTo(1, 1);\r\n\r\n        return CacheStyle._scaleInfo;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\"\r\nimport { Dragging } from \"../../utils/Dragging\"\r\nimport { IHitArea } from \"../../utils/IHitArea\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 元素样式\r\n */\r\nexport class SpriteStyle {\r\n\r\n    static readonly EMPTY: Readonly<SpriteStyle> = new SpriteStyle();\r\n\r\n    /**水平缩放 */\r\n    scaleX: number;\r\n    /**垂直缩放 */\r\n    scaleY: number;\r\n    /**水平倾斜角度 */\r\n    skewX: number;\r\n    /**垂直倾斜角度 */\r\n    skewY: number;\r\n    /**X轴心点 */\r\n    pivotX: number;\r\n    /**Y轴心点 */\r\n    pivotY: number;\r\n    /**旋转角度 */\r\n    rotation: number;\r\n    /**透明度 */\r\n    alpha: number;\r\n    /**滚动区域 */\r\n    scrollRect: Rectangle;\r\n    /**视口 */\r\n    viewport: Rectangle;\r\n    /**点击区域 */\r\n    hitArea: IHitArea;\r\n    /**滑动 */\r\n    dragging: Dragging;\r\n    /**混合模式 */\r\n    blendMode: string;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    /**\r\n     * 重置，方便下次复用\r\n     */\r\n    reset(): SpriteStyle {\r\n        this.scaleX = this.scaleY = 1;\r\n        this.skewX = this.skewY = 0;\r\n        this.pivotX = this.pivotY = this.rotation = 0;\r\n        this.alpha = 1;\r\n        if (this.scrollRect) this.scrollRect.recover();\r\n        this.scrollRect = null;\r\n        if (this.viewport) this.viewport.recover();\r\n        this.viewport = null;\r\n        this.hitArea = null;\r\n        this.dragging = null;\r\n        this.blendMode = null;\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * 回收\r\n     */\r\n    recover(): void {\r\n        if (this === SpriteStyle.EMPTY) return;\r\n        Pool.recover(\"SpriteStyle\", this.reset());\r\n    }\r\n\r\n    /**\r\n     * 从对象池中创建\r\n     */\r\n    static create(): SpriteStyle {\r\n        return Pool.getItemByClass(\"SpriteStyle\", SpriteStyle);\r\n    }\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 透明命令\r\n */\r\nexport class AlphaCmd {\r\n    static ID: string = \"Alpha\";\r\n\r\n    /**\r\n     * 透明度\r\n     */\r\n    alpha: number;\r\n\r\n    /**@private */\r\n    static create(alpha: number): AlphaCmd {\r\n        var cmd: AlphaCmd = Pool.getItemByClass(\"AlphaCmd\", AlphaCmd);\r\n        cmd.alpha = alpha;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"AlphaCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.alpha(this.alpha);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return AlphaCmd.ID;\r\n    }\r\n}\r\n\r\n","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制圆形\r\n */\r\nexport class DrawCircleCmd {\r\n    static ID: string = \"DrawCircle\";\r\n\r\n    /**\r\n     * 圆点X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 圆点Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 半径。\r\n     */\r\n    radius: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, fillColor: any, lineColor: any, lineWidth: number): DrawCircleCmd {\r\n        var cmd: DrawCircleCmd = Pool.getItemByClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCircleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawCircle(this.x * w + gx, this.y * h + gy, this.radius * Math.min(w, h) - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawCircle(this.x + gx, this.y + gy, this.radius - offset, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCircleCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x - this.radius, this.y - this.radius, this.radius + this.radius, this.radius + this.radius, this.percent ? sp : null);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCircleCmd\", DrawCircleCmd);\r\n","import { Bezier } from \"../../maths/Bezier\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制曲线\r\n */\r\nexport class DrawCurvesCmd {\r\n    static ID: string = \"DrawCurves\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawCurvesCmd {\r\n        var cmd: DrawCurvesCmd = Pool.getItemByClass(\"DrawCurvesCmd\", DrawCurvesCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawCurvesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.points)\r\n            context.drawCurves(this.x + gx, this.y + gy, this.points, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawCurvesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Bezier.I.getBezierPoints(this.points);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawCurvesCmd\", DrawCurvesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制图片\r\n */\r\nexport class DrawImageCmd {\r\n    static ID: string = \"DrawImage\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, color: string): DrawImageCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawImageCmd = Pool.getItemByClass(\"DrawImageCmd\", DrawImageCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        Pool.recover(\"DrawImageCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            context.drawTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawImageCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制单条曲线\r\n */\r\nexport class DrawLineCmd {\r\n    static ID: string = \"DrawLine\";\r\n\r\n    /**\r\n     * X轴开始位置。\r\n     */\r\n    fromX: number;\r\n    /**\r\n     * Y轴开始位置。\r\n     */\r\n    fromY: number;\r\n    /**\r\n     * X轴结束位置。\r\n     */\r\n    toX: number;\r\n    /**\r\n     * Y轴结束位置。\r\n     */\r\n    toY: number;\r\n    /**\r\n     * 颜色。\r\n     */\r\n    lineColor: string;\r\n    /**\r\n     * （可选）线条宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number): DrawLineCmd {\r\n        var cmd: DrawLineCmd = Pool.getItemByClass(\"DrawLineCmd\", DrawLineCmd);\r\n        cmd.fromX = fromX;\r\n        cmd.fromY = fromY;\r\n        cmd.toX = toX;\r\n        cmd.toY = toY;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"DrawLineCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context._drawLine(gx, gy, this.fromX * w + offset, this.fromY * h + offset, this.toX * w + offset, this.toY * h + offset, this.lineColor, this.lineWidth, 0);\r\n        }\r\n        else\r\n            context._drawLine(gx, gy, this.fromX + offset, this.fromY + offset, this.toX + offset, this.toY + offset, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLineCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        _tempPoints.length = 0;\r\n        let lineWidth: number;\r\n        lineWidth = this.lineWidth * 0.5;\r\n\r\n        let fromX = this.fromX, fromY = this.fromY, toX = this.toX, toY = this.toY;\r\n        if (this.percent) {\r\n            fromX *= sp.width;\r\n            fromY *= sp.height;\r\n            toX *= sp.width;\r\n            toY *= sp.height;\r\n        }\r\n\r\n        if (fromX == toX) {\r\n            _tempPoints.push(fromX + lineWidth, fromY, toX + lineWidth, toY, fromX - lineWidth, fromY, toX - lineWidth, toY);\r\n        } else if (fromY == toY) {\r\n            _tempPoints.push(fromX, fromY + lineWidth, toX, toY + lineWidth, fromX, fromY - lineWidth, toX, toY - lineWidth);\r\n        } else {\r\n            _tempPoints.push(fromX, fromY, toX, toY);\r\n        }\r\n\r\n        return _tempPoints;\r\n    }\r\n}\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawLineCmd\", DrawLineCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制连续曲线\r\n */\r\nexport class DrawLinesCmd {\r\n    static ID: string = \"DrawLines\";\r\n\r\n    /**\r\n     * 开始绘制的X轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的Y轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 线段颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）线段宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], lineColor: any, lineWidth: number): DrawLinesCmd {\r\n        var cmd: DrawLinesCmd = Pool.getItemByClass(\"DrawLinesCmd\", DrawLinesCmd);\r\n        //TODO 线段需要缓存\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawLinesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth < 1 || this.lineWidth % 2 === 0) ? 0 : 0.5;\r\n        this.points && context._drawLines(this.x + offset + gx, this.y + offset + gy, this.points, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawLinesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\nClassUtils.regClass(\"DrawLinesCmd\", DrawLinesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据路径绘制矢量图形\r\n */\r\nexport class DrawPathCmd {\r\n    static ID: string = \"DrawPath\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     */\r\n    paths: any[] | null;\r\n    /**\r\n     * （可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     */\r\n    brush: any;\r\n    /**\r\n     * （可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    pen: any;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, paths: any[], brush: any, pen: any): DrawPathCmd {\r\n        var cmd: DrawPathCmd = Pool.getItemByClass(\"DrawPathCmd\", DrawPathCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.paths = paths;\r\n        cmd.brush = brush;\r\n        cmd.pen = pen;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.paths = null;\r\n        this.brush = null;\r\n        this.pen = null;\r\n        Pool.recover(\"DrawPathCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.paths && context._drawPath(this.x + gx, this.y + gy, this.paths, this.brush, this.pen);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPathCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        rst.length = 0;\r\n        let paths = this.paths;\r\n        let len = paths.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let tCMD = paths[i];\r\n            if (tCMD.length > 1) {\r\n                rst.push(tCMD[1], tCMD[2]);\r\n                if (tCMD.length > 3) {\r\n                    rst.push(tCMD[3], tCMD[4]);\r\n                }\r\n            }\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPathCmd\", DrawPathCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制扇形\r\n */\r\nexport class DrawPieCmd {\r\n    static ID: string = \"DrawPie\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 扇形半径。\r\n     */\r\n    radius: number = 0;\r\n\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    private _startAngle: number;\r\n    private _endAngle: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any, lineWidth: number): DrawPieCmd {\r\n        var cmd: DrawPieCmd = Pool.getItemByClass(\"DrawPieCmd\", DrawPieCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.radius = radius;\r\n        cmd._startAngle = startAngle;\r\n        cmd._endAngle = endAngle;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPieCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        context._drawPie(this.x + offset + gx, this.y + offset + gy, this.radius - lineOffset, this._startAngle, this._endAngle, this.fillColor, this.lineColor, this.lineWidth, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPieCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 开始角度。\r\n     */\r\n    get startAngle(): number {\r\n        return this._startAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set startAngle(value: number) {\r\n        this._startAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * 结束角度。\r\n     */\r\n    get endAngle(): number {\r\n        return this._endAngle * 180 / Math.PI;\r\n    }\r\n\r\n    set endAngle(value: number) {\r\n        this._endAngle = value * Math.PI / 180;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let rst: any[] = _tempPoints;\r\n        _tempPoints.length = 0;\r\n        let k: number = Math.PI / 180;\r\n        let d1: number = this.endAngle - this.startAngle;\r\n        let x = this.x, y = this.y, radius = this.radius;\r\n        if (d1 >= 360 || d1 <= -360) {\r\n            // 如果满了一圈了\r\n            rst.push(x - radius, y - radius);\r\n            rst.push(x + radius, y - radius);\r\n            rst.push(x + radius, y + radius);\r\n            rst.push(x - radius, y + radius);\r\n            return rst;\r\n        }\r\n        // \r\n        rst.push(x, y);\t// 中心\r\n\r\n        var delta: number = d1 % 360;\r\n        if (delta < 0) delta += 360;\r\n\r\n        // 一定增加，且在360以内的end\r\n        var end1: number = this.startAngle + delta;\r\n\r\n        // 转成弧度\r\n        var st: number = this.startAngle * k;\r\n        var ed: number = end1 * k;\r\n\r\n        // 起点\r\n        rst.push(x + radius * Math.cos(st), y + radius * Math.sin(st));\r\n        // 终点\r\n        rst.push(x + radius * Math.cos(ed), y + radius * Math.sin(ed));\r\n\r\n        // 圆形的四个边界点\r\n        // 按照90度对齐，看看会经历几个90度\r\n        var s1: number = Math.ceil(this.startAngle / 90) * 90;\t//开始的。start的下一个90度\r\n        var s2: number = Math.floor(end1 / 90) * 90;\t\t//结束。end的上一个90度\r\n        for (var cs: number = s1; cs <= s2; cs += 90) {\r\n            var csr: number = cs * k;\r\n            rst.push(x + radius * Math.cos(csr), y + radius * Math.sin(csr));\r\n        }\r\n        return rst;\r\n    }\r\n}\r\n\r\nconst _tempPoints: any[] = [];\r\n\r\nClassUtils.regClass(\"DrawPieCmd\", DrawPieCmd);","import { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制多边形\r\n */\r\nexport class DrawPolyCmd {\r\n    static ID: string = \"DrawPoly\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 多边形的点集合。\r\n     */\r\n    points: number[] | null;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * 可选）边框宽度。\r\n     */\r\n    lineWidth: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, points: any[], fillColor: any, lineColor: any, lineWidth: number): DrawPolyCmd {\r\n        var cmd: DrawPolyCmd = Pool.getItemByClass(\"DrawPolyCmd\", DrawPolyCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.points = points;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.points = null;\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawPolyCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let isConvexPolygon = this.points.length <= 6;\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? (this.lineWidth % 2 === 0 ? 0 : 0.5) : 0;\r\n        this.points && context._drawPoly(this.x + offset + gx, this.y + offset + gy, this.points, this.fillColor, this.lineColor, this.lineWidth, isConvexPolygon, 0);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawPolyCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawPolyCmd\", DrawPolyCmd);","import { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制矩形\r\n */\r\nexport class DrawRectCmd {\r\n    static ID: string = \"DrawRect\";\r\n\r\n    /**\r\n     * 开始绘制的 X 轴位置。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制的 Y 轴位置。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 矩形宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 矩形高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * 填充颜色，或者填充绘图的渐变对象。\r\n     */\r\n    fillColor: any;\r\n    /**\r\n     * （可选）边框颜色，或者填充绘图的渐变对象。\r\n     */\r\n    lineColor: any;\r\n    /**\r\n     * （可选）边框宽度。\r\n     */\r\n    lineWidth: number = 0;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any, lineWidth: number, percent?: boolean): DrawRectCmd {\r\n        var cmd: DrawRectCmd = Pool.getItemByClass(\"DrawRectCmd\", DrawRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.fillColor = fillColor;\r\n        cmd.lineColor = lineColor;\r\n        cmd.lineWidth = lineWidth;\r\n        cmd.percent = percent;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.fillColor = null;\r\n        this.lineColor = null;\r\n        Pool.recover(\"DrawRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        let offset = (this.lineWidth >= 1 && this.lineColor) ? this.lineWidth / 2 : 0;\r\n        let lineOffset = this.lineColor ? this.lineWidth : 0;\r\n        if (this.percent && context.sprite) {\r\n            let w = context.sprite.width;\r\n            let h = context.sprite.height;\r\n            context.drawRect(this.x * w + offset + gx, this.y * h + offset + gy, this.width * w - lineOffset, this.height * h - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n        }\r\n        else\r\n            context.drawRect(this.x + offset + gx, this.y + offset + gy, this.width - lineOffset, this.height - lineOffset, this.fillColor, this.lineColor, this.lineWidth);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawRectCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null)\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawRectCmd\", DrawRectCmd);\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from '../../utils/ColorUtils';\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 绘制单个贴图\r\n */\r\nexport class DrawTextureCmd {\r\n    static ID: string = \"DrawTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）矩阵信息。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * （可选）透明度。\r\n     */\r\n    alpha: number;\r\n    /**\r\n     * （可选）颜色滤镜。\r\n     */\r\n    color: number = 0xffffffff;\r\n    /**\r\n     * （可选）混合模式。\r\n     */\r\n    blendMode: string | null;\r\n\r\n    uv: number[] | null = null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, matrix: Matrix | null, alpha: number, color: string | null, blendMode: string | null, uv?: number[]): DrawTextureCmd {\r\n        if (width == null) width = texture.sourceWidth;\r\n        if (height == null) height = texture.sourceHeight;\r\n\r\n        let wRate = width / texture.sourceWidth;\r\n        let hRate = height / texture.sourceHeight;\r\n        width = texture.width * wRate;\r\n        height = texture.height * hRate;\r\n\r\n        x += texture.offsetX * wRate;\r\n        y += texture.offsetY * hRate;\r\n\r\n        var cmd: DrawTextureCmd = Pool.getItemByClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.blendMode = blendMode;\r\n        cmd.uv = uv || null;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture && this.texture._removeReference();\r\n        this.texture = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        this.texture && context.drawTextureWithTransform(this.texture, this.x, this.y, this.width, this.height, this.matrix, gx, gy, this.alpha, this.blendMode, this.uv, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTextureCmd.ID;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTextureCmd\", DrawTextureCmd);\r\n","import { Point } from \"../../maths/Point\"\r\nimport { Rectangle } from \"../../maths/Rectangle\";\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\n\r\n/**\r\n * 填充贴图\r\n */\r\nexport class FillTextureCmd {\r\n    static ID: string = \"FillTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n    /**\r\n     * （可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     */\r\n    type?: string;\r\n    /**\r\n     * （可选）贴图纹理偏移\r\n     */\r\n    offset?: Point;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /** （可选）绘图颜色 */\r\n    color: number = 0xffffffff;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, type: string, offset: Point, color: string): FillTextureCmd {\r\n        var cmd: FillTextureCmd = Pool.getItemByClass(\"FillTextureCmd\", FillTextureCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.type = type;\r\n        cmd.offset = offset;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.offset = null;\r\n        Pool.recover(\"FillTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.fillTexture(this.texture, this.x * w + gx, this.y * h + gy, this.width * w, this.height * h, this.type, this.offset || Point.EMPTY, this.color);\r\n            }\r\n            else\r\n                context.fillTexture(this.texture, this.x + gx, this.y + gy, this.width, this.height, this.type, this.offset || Point.EMPTY, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        if (this.width && this.height)\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.width, this.height, this.percent ? sp : null);\r\n        else\r\n            return Rectangle._getBoundPointS(this.x, this.y, this.texture.width, this.texture.height);\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextureCmd\", FillTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 恢复命令，和save配套使用\r\n */\r\nexport class RestoreCmd {\r\n    static ID: string = \"Restore\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): RestoreCmd {\r\n        var cmd: RestoreCmd = Pool.getItemByClass(\"RestoreCmd\", RestoreCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RestoreCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.restore();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RestoreCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 旋转命令\r\n */\r\nexport class RotateCmd {\r\n    static ID: string = \"Rotate\";\r\n\r\n    /**\r\n     * 旋转角度，以弧度计。\r\n     */\r\n    angle: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(angle: number, pivotX: number, pivotY: number): RotateCmd {\r\n        var cmd: RotateCmd = Pool.getItemByClass(\"RotateCmd\", RotateCmd);\r\n        cmd.angle = angle;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"RotateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._rotate(this.angle, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return RotateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 缩放命令\r\n */\r\nexport class ScaleCmd {\r\n    static ID: string = \"Scale\";\r\n\r\n    /**\r\n     * 水平方向缩放值。\r\n     */\r\n    scaleX: number;\r\n    /**\r\n     * 垂直方向缩放值。\r\n     */\r\n    scaleY: number;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(scaleX: number, scaleY: number, pivotX: number, pivotY: number): ScaleCmd {\r\n        var cmd: ScaleCmd = Pool.getItemByClass(\"ScaleCmd\", ScaleCmd);\r\n        cmd.scaleX = scaleX;\r\n        cmd.scaleY = scaleY;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ScaleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._scale(this.scaleX, this.scaleY, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ScaleCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 矩阵命令\r\n */\r\nexport class TransformCmd {\r\n    static ID: string = \"Transform\";\r\n\r\n    /**\r\n     * 矩阵。\r\n     */\r\n    matrix: Matrix;\r\n    /**\r\n     * （可选）水平方向轴心点坐标。\r\n     */\r\n    pivotX: number;\r\n    /**\r\n     * （可选）垂直方向轴心点坐标。\r\n     */\r\n    pivotY: number;\r\n\r\n    /**@private */\r\n    static create(matrix: Matrix, pivotX: number, pivotY: number): TransformCmd {\r\n        var cmd: TransformCmd = Pool.getItemByClass(\"TransformCmd\", TransformCmd);\r\n        cmd.matrix = matrix;\r\n        cmd.pivotX = pivotX;\r\n        cmd.pivotY = pivotY;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.matrix = null;\r\n        Pool.recover(\"TransformCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context._transform(this.matrix, this.pivotX + gx, this.pivotY + gy);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TransformCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n/**\r\n * 位移命令\r\n */\r\nexport class TranslateCmd {\r\n    static ID: string = \"Translate\";\r\n\r\n    /**\r\n     * 添加到水平坐标（x）上的值。\r\n     */\r\n    tx: number;\r\n    /**\r\n     * 添加到垂直坐标（y）上的值。\r\n     */\r\n    ty: number;\r\n\r\n    /**@private */\r\n    static create(tx: number, ty: number): TranslateCmd {\r\n        var cmd: TranslateCmd = Pool.getItemByClass(\"TranslateCmd\", TranslateCmd);\r\n        cmd.tx = tx;\r\n        cmd.ty = ty;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"TranslateCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.translate(this.tx, this.ty);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return TranslateCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { ColorFilter } from \"../../filters/ColorFilter\"\r\nimport { Matrix } from \"../../maths/Matrix\"\r\nimport { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\"\r\nimport { ColorUtils } from \"../../utils/ColorUtils\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制三角形命令\r\n */\r\nexport class DrawTrianglesCmd {\r\n    static ID: string = \"DrawTriangles\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture | null;\r\n    /**\r\n     * X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 顶点数组。\r\n     */\r\n    vertices: Float32Array;\r\n    /**\r\n     * UV数据。\r\n     */\r\n    uvs: Float32Array;\r\n    /**\r\n     * 顶点索引。\r\n     */\r\n    indices: Uint16Array;\r\n    /**\r\n     * 缩放矩阵。\r\n     */\r\n    matrix: Matrix | null;\r\n    /**\r\n     * alpha\r\n     */\r\n    alpha: number;\r\n    //public var color:String;\r\n    /**\r\n     * blend模式\r\n     */\r\n    blendMode: string | null;\r\n    /**\r\n     * 颜色变换\r\n     */\r\n    color: number | null;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array,\r\n        matrix: Matrix | null, alpha: number, color: string | number, blendMode: string | null): DrawTrianglesCmd {\r\n        var cmd: DrawTrianglesCmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        cmd.blendMode = blendMode;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.blendMode, this.color);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let vert = this.vertices;\r\n        var vnum = vert.length;\r\n        if (vnum < 2) return [];\r\n        var minx = vert[0];\r\n        var miny = vert[1];\r\n        var maxx = minx;\r\n        var maxy = miny;\r\n        for (var i = 2; i < vnum;) {\r\n            var cx = vert[i++];\r\n            var cy = vert[i++];\r\n            if (minx > cx) minx = cx;\r\n            if (miny > cy) miny = cy;\r\n            if (maxx < cx) maxx = cx;\r\n            if (maxy < cy) maxy = cy;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制带九宫格信息的图片\r\n * @internal\r\n */\r\nexport class Draw9GridTextureCmd {\r\n    static ID: string = \"Draw9GridTexture\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * （可选）X轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * （可选）Y轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * （可选）宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * （可选）高度。\r\n     */\r\n    height: number;\r\n\r\n    sizeGrid: number[];\r\n\r\n    color: number = 0xffffffff;\r\n\r\n    /**\r\n     * 位置和大小是否是百分比\r\n     */\r\n    percent: boolean;\r\n\r\n    /**@private */\r\n    static create(texture: Texture, x: number, y: number, width: number, height: number, sizeGrid: number[], percent: boolean = false, color: string | null = null): Draw9GridTextureCmd {\r\n        let cmd: Draw9GridTextureCmd = Pool.getItemByClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        cmd.sizeGrid = sizeGrid;\r\n        cmd.percent = percent;\r\n        cmd.color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        Pool.recover(\"Draw9GridTextureCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (this.texture) {\r\n            let sizeGrid = this.sizeGrid || this.texture._sizeGrid || EMPTY_SIZE_GRID;\r\n            if (this.percent && context.sprite) {\r\n                let w = context.sprite.width;\r\n                let h = context.sprite.height;\r\n                context.drawTextureWithSizeGrid(this.texture, this.x * w, this.y * h, this.width * w, this.height * h, sizeGrid, gx, gy, this.color);\r\n            }\r\n            else\r\n                context.drawTextureWithSizeGrid(this.texture, this.x, this.y, this.width, this.height, sizeGrid, gx, gy, this.color);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return Draw9GridTextureCmd.ID;\r\n    }\r\n\r\n    getBoundPoints(sp?: { width: number, height?: number }): number[] {\r\n        let minx = this.x;\r\n        let miny = this.y;\r\n        let maxx = this.width;\r\n        let maxy = this.height;\r\n        if (this.percent) {\r\n            minx *= sp.width;\r\n            miny *= sp.height;\r\n            maxx *= sp.width;\r\n            maxy *= sp.height;\r\n        }\r\n\r\n        return [minx, miny, maxx, miny, maxx, maxy, minx, maxy];\r\n    }\r\n}\r\n\r\nconst EMPTY_SIZE_GRID = [0, 0, 0, 0, 0];\r\nClassUtils.regClass(\"Draw9GridTextureCmd\", Draw9GridTextureCmd);\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 存储命令，和restore配套使用\r\n */\r\nexport class SaveCmd {\r\n    static ID: string = \"Save\";\r\n\r\n\r\n\r\n    /**@private */\r\n    static create(): SaveCmd {\r\n        var cmd: SaveCmd = Pool.getItemByClass(\"SaveCmd\", SaveCmd);\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"SaveCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.save();\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return SaveCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { GrahamScan } from \"../maths/GrahamScan\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { Graphics } from \"./Graphics\";\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\";\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\";\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\n\r\nconst _tempMatrix: Matrix = new Matrix();\r\nconst _initMatrix: Matrix = new Matrix();\r\nconst _tempMatrixArrays: any[] = [];\r\n\r\n/**\r\n * @private\r\n * Graphic bounds数据类\r\n */\r\nexport class GraphicsBounds {\r\n    /**@private */\r\n    private _temp: number[];\r\n    /**@private */\r\n    private _bounds: Rectangle;\r\n    /**@private */\r\n    private _rstBoundPoints: number[];\r\n    /**@private */\r\n    private _cacheBoundsType: boolean = false;\r\n    /**@internal */\r\n    _graphics: Graphics;\r\n    /**@internal */\r\n    _affectBySize: boolean;\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy(): void {\r\n        this._graphics = null;\r\n        this._cacheBoundsType = false;\r\n        if (this._temp) this._temp.length = 0;\r\n        if (this._rstBoundPoints) this._rstBoundPoints.length = 0;\r\n        if (this._bounds) this._bounds.recover();\r\n        this._bounds = null;\r\n        Pool.recover(\"GraphicsBounds\", this);\r\n    }\r\n\r\n    /**\r\n     * 创建\r\n     */\r\n    static create(): GraphicsBounds {\r\n        return Pool.getItemByClass(\"GraphicsBounds\", GraphicsBounds);\r\n    }\r\n\r\n    /**\r\n     * 重置数据\r\n     */\r\n    reset(): void {\r\n        this._temp && (this._temp.length = 0);\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._bounds || !this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType) {\r\n            this._bounds = Rectangle._getWrapRec(this.getBoundPoints(realSize), this._bounds)\r\n        }\r\n        this._cacheBoundsType = realSize;\r\n        return this._bounds;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        if (!this._temp || this._temp.length < 1 || realSize != this._cacheBoundsType)\r\n            this._temp = this._getCmdPoints(realSize);\r\n        this._cacheBoundsType = realSize;\r\n        return this._rstBoundPoints = Utils.copyArray(this._rstBoundPoints, this._temp);\r\n    }\r\n\r\n    private _getCmdPoints(realSize: boolean = false): any[] {\r\n        let cmds = this._graphics.cmds;\r\n        let sp = this._graphics._sp;\r\n        this._affectBySize = false;\r\n\r\n        let rst = this._temp || (this._temp = []);\r\n        rst.length = 0;\r\n        if (cmds.length == 0) return rst;\r\n\r\n        let matrixs: any[] = _tempMatrixArrays;\r\n        matrixs.length = 0;\r\n        let tMatrix: Matrix = _initMatrix;\r\n        tMatrix.identity();\r\n        let tempMatrix: Matrix = _tempMatrix;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            let cmd = cmds[i];\r\n            if (cmd.percent)\r\n                this._affectBySize = true;\r\n            switch (cmd.cmdID) {\r\n                case AlphaCmd.ID:\r\n                case SaveCmd.ID:\r\n                    matrixs.push(tMatrix);\r\n                    tMatrix = tMatrix.clone();\r\n                    break;\r\n                case RestoreCmd.ID: //restore\r\n                    tMatrix = matrixs.pop();\r\n                    break;\r\n                case ScaleCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.scale(cmd.scaleX, cmd.scaleY);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case RotateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.rotate(cmd.angle);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TranslateCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(cmd.tx, cmd.ty);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case TransformCmd.ID:\r\n                    tempMatrix.identity();\r\n                    tempMatrix.translate(-cmd.pivotX, -cmd.pivotY);\r\n                    tempMatrix.concat(cmd.matrix);\r\n                    tempMatrix.translate(cmd.pivotX, cmd.pivotY);\r\n\r\n                    this._switchMatrix(tMatrix, tempMatrix);\r\n                    break;\r\n                case DrawImageCmd.ID:\r\n                case FillTextureCmd.ID:\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tMatrix);\r\n                    break;\r\n                case DrawTextureCmd.ID:\r\n                    tMatrix.copyTo(tempMatrix);\r\n                    if (cmd.matrix)\r\n                        tempMatrix.concat(cmd.matrix);\r\n                    addPointArrToRst(rst, Rectangle._getBoundPointS(cmd.x, cmd.y, cmd.width, cmd.height), tempMatrix);\r\n                    break;\r\n                case DrawRectCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawRectCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCircleCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCircleCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawLineCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawLineCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawCurvesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawCurvesCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawLinesCmd.ID:\r\n                case DrawPolyCmd.ID:\r\n                    addPointArrToRst(rst, cmd.points, tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPathCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPathCmd>cmd).getBoundPoints(sp), tMatrix, cmd.x, cmd.y);\r\n                    break;\r\n                case DrawPieCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawPieCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case DrawTrianglesCmd.ID:\r\n                    addPointArrToRst(rst, (<DrawTrianglesCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n                case Draw9GridTextureCmd.ID:\r\n                    addPointArrToRst(rst, (<Draw9GridTextureCmd>cmd).getBoundPoints(sp), tMatrix);\r\n                    break;\r\n            }\r\n        }\r\n        if (rst.length > 200) {\r\n            rst = Utils.copyArray(rst, Rectangle._getWrapRec(rst)._getBoundPoints());\r\n        } else if (rst.length > 8)\r\n            rst = GrahamScan.scanPList(rst);\r\n        return rst;\r\n    }\r\n\r\n    private _switchMatrix(tMatix: Matrix, tempMatrix: Matrix): void {\r\n        tempMatrix.concat(tMatix);\r\n        tempMatrix.copyTo(tMatix);\r\n    }\r\n}\r\n\r\nfunction addPointArrToRst(rst: any[], points: any[], matrix: Matrix, dx: number = 0, dy: number = 0): void {\r\n    let len = points.length;\r\n    for (let i = 0; i < len; i += 2) {\r\n        addPointToRst(rst, points[i] + dx, points[i + 1] + dy, matrix);\r\n    }\r\n}\r\n\r\nfunction addPointToRst(rst: any[], x: number, y: number, matrix: Matrix): void {\r\n    var _tempPoint: Point = Point.TEMP;\r\n    _tempPoint.setTo(x ? x : 0, y ? y : 0);\r\n    matrix.transformPoint(_tempPoint);\r\n    rst.push(_tempPoint.x, _tempPoint.y);\r\n}","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 裁剪命令\r\n */\r\nexport class ClipRectCmd {\r\n    static ID: string = \"ClipRect\";\r\n\r\n\r\n    /**\r\n     * X 轴偏移量。\r\n     */\r\n    x: number;\r\n    /**\r\n     * Y 轴偏移量。\r\n     */\r\n    y: number;\r\n    /**\r\n     * 宽度。\r\n     */\r\n    width: number;\r\n    /**\r\n     * 高度。\r\n     */\r\n    height: number;\r\n\r\n    /**@private */\r\n    static create(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        var cmd: ClipRectCmd = Pool.getItemByClass(\"ClipRectCmd\", ClipRectCmd);\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.width = width;\r\n        cmd.height = height;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n\r\n        Pool.recover(\"ClipRectCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.clipRect(this.x + gx, this.y + gy, this.width, this.height);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return ClipRectCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Texture } from \"../../resource/Texture\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 根据坐标集合绘制多个贴图\r\n */\r\nexport class DrawTexturesCmd {\r\n    static ID: string = \"DrawTextures\";\r\n\r\n    /**\r\n     * 纹理。\r\n     */\r\n    texture: Texture;\r\n    /**\r\n     * 绘制次数和坐标。\r\n     */\r\n    pos: ArrayLike<number>;\r\n\r\n    /** 附加顶点色 */\r\n    colors: number[];\r\n\r\n    /**@private */\r\n    static create(texture: Texture, pos: any[], colors: number[]): DrawTexturesCmd {\r\n        var cmd: DrawTexturesCmd = Pool.getItemByClass(\"DrawTexturesCmd\", DrawTexturesCmd);\r\n        cmd.texture = texture;\r\n        texture._addReference();\r\n        cmd.pos = pos;\r\n        cmd.colors = colors || [];\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this.texture._removeReference();\r\n        this.texture = null;\r\n        this.pos = null;\r\n        Pool.recover(\"DrawTexturesCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        context.drawTextures(this.texture, this.pos, gx, gy, this.colors);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawTexturesCmd.ID;\r\n    }\r\n\r\n}\r\n\r\n","import { Context } from \"../../resource/Context\";\r\nimport { FontInfo } from \"../../utils/FontInfo\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { WordText } from \"../../utils/WordText\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Const } from \"../../Const\";\r\nimport { ClassUtils } from \"../../utils/ClassUtils\";\r\nimport { Config } from \"../../../Config\";\r\n\r\n/**\r\n * 绘制文字\r\n */\r\nexport class FillTextCmd {\r\n    static ID: string = \"FillText\";\r\n\r\n    /**\r\n     * 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     */\r\n    x: number;\r\n    /**\r\n     * 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     */\r\n    y: number;\r\n\r\n    private _text: string;\r\n    private _wordText: WordText;\r\n    private _font: string;\r\n    private _color: string;\r\n    private _borderColor: string | null;\r\n    private _lineWidth: number;\r\n    private _textAlign: number;\r\n    private _fontObj: FontInfo;\r\n\r\n    static create(text: string | WordText | null, x: number, y: number, font: string, color: string | null, textAlign: string, lineWidth: number, borderColor: string | null): FillTextCmd {\r\n        var cmd: FillTextCmd = Pool.getItemByClass(\"FillTextCmd\", FillTextCmd);\r\n        cmd._text = null;\r\n        cmd._wordText = null;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.font = font;\r\n        cmd.color = color;\r\n        cmd._lineWidth = lineWidth;\r\n        cmd._borderColor = borderColor;\r\n\r\n        switch (textAlign) {\r\n            case 'center':\r\n                cmd._textAlign = Const.ENUM_TEXTALIGN_CENTER;\r\n                break;\r\n            case 'right':\r\n                cmd._textAlign = Const.ENUM_TEXTALIGN_RIGHT;\r\n                break;\r\n            default:\r\n                cmd._textAlign = Const.ENUM_TEXTALIGN_DEFAULT;\r\n        }\r\n\r\n        if (text instanceof WordText) {\r\n            cmd._wordText = text;\r\n            text.cleanCache();\r\n        }\r\n        else\r\n            cmd._text = text;\r\n\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        Pool.recover(\"FillTextCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        if (ILaya.stage.isGlobalRepaint()) {\r\n            this._wordText && this._wordText.cleanCache();\r\n        }\r\n\r\n        context._fast_filltext(this._wordText || this._text, this.x + gx, this.y + gy, this._fontObj, this._color, this._borderColor, this._lineWidth, this._textAlign);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return FillTextCmd.ID;\r\n    }\r\n\r\n    /**\r\n     * 定义字号和字体，比如\"20px Arial\"。\r\n     */\r\n    get font(): string {\r\n        return this._font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._font = value;\r\n        if (!value)\r\n            value = Config.defaultFontSize + \"px \" + Config.defaultFont;\r\n        this._fontObj = FontInfo.parse(value);\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n\r\n    /**\r\n     * 定义文本颜色，比如\"#ff0000\"。\r\n     */\r\n    get color(): string {\r\n        return this._color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this._color = value;\r\n        this._wordText && this._wordText.cleanCache();\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"FillTextCmd\", FillTextCmd);","import { ILaya } from \"./../../ILaya\";\r\n/**\r\n * @private\r\n * 对象缓存统一管理类\r\n */\r\nexport class CacheManger {\r\n    //TODO:\r\n    /**\r\n     * 单次清理检测允许执行的时间，单位ms。\r\n     */\r\n    static loopTimeLimit: number = 2;\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheList: any[] = [];\r\n    /**\r\n     * @private\r\n     * 当前检测的索引\r\n     */\r\n    private static _index: number = 0;\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     * 注册cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static regCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        CacheManger.unRegCacheByFunction(disposeFunction, getCacheListFunction);\r\n        var cache: any;\r\n        cache = { tryDispose: disposeFunction, getCacheList: getCacheListFunction };\r\n        CacheManger._cacheList.push(cache);\r\n    }\r\n\r\n    /**\r\n     * 移除cache管理函数\r\n     * @param disposeFunction 释放函数 fun(force:Boolean)\r\n     * @param getCacheListFunction 获取cache列表函数fun():Array\r\n     *\r\n     */\r\n    static unRegCacheByFunction(disposeFunction: Function, getCacheListFunction: Function): void {\r\n        var i: number, len: number;\r\n        len = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            if (CacheManger._cacheList[i].tryDispose == disposeFunction && CacheManger._cacheList[i].getCacheList == getCacheListFunction) {\r\n                CacheManger._cacheList.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 强制清理所有管理器\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static forceDispose(): void {\r\n        var i: number, len: number = CacheManger._cacheList.length;\r\n        for (i = 0; i < len; i++) {\r\n            CacheManger._cacheList[i].tryDispose(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 开始检测循环\r\n     * @param waitTime 检测间隔时间\r\n     *\r\n     */\r\n    static beginCheck(waitTime: number = 15000): void {\r\n        ILaya.systemTimer.loop(waitTime, null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * 停止检测循环\r\n     *\r\n     */\r\n    //TODO:coverage\r\n    static stopCheck(): void {\r\n        ILaya.systemTimer.clear(null, CacheManger._checkLoop);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 检测函数\r\n     */\r\n    private static _checkLoop(): void {\r\n        var cacheList: any[] = CacheManger._cacheList;\r\n        if (cacheList.length < 1) return;\r\n        var tTime: number = ILaya.Browser.now();\r\n        var count: number;\r\n        var len: number;\r\n        len = count = cacheList.length;\r\n        while (count > 0) {\r\n            CacheManger._index++;\r\n            CacheManger._index = CacheManger._index % len;\r\n            cacheList[CacheManger._index].tryDispose(false);\r\n            if (ILaya.Browser.now() - tTime > CacheManger.loopTimeLimit) break;\r\n            count--;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { CacheManger } from \"./CacheManger\"\r\n\r\n/**\r\n * @private\r\n * TODO:\r\n */\r\nexport class VectorGraphManager {\r\n    //TODO:\r\n    static instance: VectorGraphManager;\r\n\r\n    useDic: any = {};\r\n    shapeDic: any = {};\r\n    shapeLineDic: any = {};\r\n\r\n    private _id: number = 0;\r\n    private _checkKey: boolean = false;\r\n    private _freeIdArray: any[] = [];\r\n\r\n    constructor() {\r\n        CacheManger.regCacheByFunction(this.startDispose.bind(this), this.getCacheList.bind(this));\r\n    }\r\n\r\n    static getInstance(): VectorGraphManager {\r\n        return VectorGraphManager.instance = VectorGraphManager.instance || new VectorGraphManager();\r\n    }\r\n\r\n    /**\r\n     * 得到个空闲的ID\r\n     * @return\r\n     */\r\n    getId(): number {\r\n        //if (_freeIdArray.length > 0) {\r\n        //return _freeIdArray.pop();\r\n        //}\r\n        return this._id++;\r\n    }\r\n\r\n    /**\r\n     * 添加一个图形到列表中\r\n     * @param\tid\r\n     * @param\tshape\r\n     */\r\n    addShape(id: number, shape: any): void {\r\n        this.shapeDic[id] = shape;\r\n        if (!this.useDic[id]) {\r\n            this.useDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加一个线图形到列表中\r\n     * @param\tid\r\n     * @param\tLine\r\n     */\r\n    addLine(id: number, Line: any): void {\r\n        this.shapeLineDic[id] = Line;\r\n        if (!this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 检测一个对象是否在使用中\r\n     * @param\tid\r\n     */\r\n    getShape(id: number): void {\r\n        if (this._checkKey) {\r\n            if (this.useDic[id] != null) {\r\n                this.useDic[id] = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个图形对象\r\n     * @param\tid\r\n     */\r\n    deleteShape(id: number): void {\r\n        if (this.shapeDic[id]) {\r\n            this.shapeDic[id] = null;\r\n            delete this.shapeDic[id];\r\n        }\r\n        if (this.shapeLineDic[id]) {\r\n            this.shapeLineDic[id] = null;\r\n            delete this.shapeLineDic[id];\r\n        }\r\n        if (this.useDic[id] != null) {\r\n            delete this.useDic[id];\r\n        }\r\n        //_freeIdArray.push(id);\r\n    }\r\n\r\n    /**\r\n     * 得到缓存列表\r\n     * @return\r\n     */\r\n    getCacheList(): any[] {\r\n        var str: any;\r\n        var list: any[] = [];\r\n        for (str in this.shapeDic) {\r\n            list.push(this.shapeDic[str]);\r\n        }\r\n        for (str in this.shapeLineDic) {\r\n            list.push(this.shapeLineDic[str]);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 开始清理状态，准备销毁\r\n     */\r\n    startDispose(key: boolean): void {\r\n        var str: any;\r\n        for (str in this.useDic) {\r\n            this.useDic[str] = false;\r\n        }\r\n        this._checkKey = true;\r\n    }\r\n\r\n    /**\r\n     * 确认销毁\r\n     */\r\n    endDispose(): void {\r\n        if (this._checkKey) {\r\n            var str: any;\r\n            for (str in this.useDic) {\r\n                if (!this.useDic[str]) {\r\n                    this.deleteShape(str);\r\n                }\r\n            }\r\n            this._checkKey = false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Sprite } from \"./Sprite\";\r\nimport { GraphicsBounds } from \"./GraphicsBounds\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { AlphaCmd } from \"./cmd/AlphaCmd\"\r\nimport { ClipRectCmd } from \"./cmd/ClipRectCmd\"\r\nimport { Draw9GridTextureCmd } from \"./cmd/Draw9GridTextureCmd\"\r\nimport { DrawCircleCmd } from \"./cmd/DrawCircleCmd\"\r\nimport { DrawCurvesCmd } from \"./cmd/DrawCurvesCmd\"\r\nimport { DrawImageCmd } from \"./cmd/DrawImageCmd\"\r\nimport { DrawLineCmd } from \"./cmd/DrawLineCmd\"\r\nimport { DrawLinesCmd } from \"./cmd/DrawLinesCmd\"\r\nimport { DrawPathCmd } from \"./cmd/DrawPathCmd\"\r\nimport { DrawPieCmd } from \"./cmd/DrawPieCmd\"\r\nimport { DrawPolyCmd } from \"./cmd/DrawPolyCmd\"\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\"\r\nimport { DrawTextureCmd } from \"./cmd/DrawTextureCmd\"\r\nimport { DrawTexturesCmd } from \"./cmd/DrawTexturesCmd\"\r\nimport { DrawTrianglesCmd } from \"./cmd/DrawTrianglesCmd\"\r\nimport { FillTextCmd } from \"./cmd/FillTextCmd\"\r\nimport { FillTextureCmd } from \"./cmd/FillTextureCmd\"\r\nimport { RestoreCmd } from \"./cmd/RestoreCmd\"\r\nimport { RotateCmd } from \"./cmd/RotateCmd\"\r\nimport { SaveCmd } from \"./cmd/SaveCmd\"\r\nimport { ScaleCmd } from \"./cmd/ScaleCmd\"\r\nimport { TransformCmd } from \"./cmd/TransformCmd\"\r\nimport { TranslateCmd } from \"./cmd/TranslateCmd\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { Texture } from \"../resource/Texture\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { WordText } from \"../utils/WordText\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\";\r\n\r\n/**\r\n * <code>Graphics</code> 类用于创建绘图显示对象。Graphics可以同时绘制多个位图或者矢量图，还可以结合save，restore，transform，scale，rotate，translate，alpha等指令对绘图效果进行变化。\r\n * Graphics以命令流方式存储，可以通过cmds属性访问所有命令流。Graphics是比Sprite更轻量级的对象，合理使用能提高应用性能(比如把大量的节点绘图改为一个节点的Graphics命令集合，能减少大量节点创建消耗)。\r\n * @see laya.display.Sprite#graphics\r\n */\r\nexport class Graphics {\r\n    /**@internal */\r\n    _sp: Sprite | null = null;\r\n    /**@internal */\r\n    _render: (sprite: Sprite, context: Context, x: number, y: number) => void = this._renderEmpty;\r\n    /**@private */\r\n    private _cmds: any[] = [];\r\n    /**@private */\r\n    protected _vectorgraphArray: any[] | null = null;\r\n    /**@private */\r\n    private _graphicBounds: GraphicsBounds | null = null;\r\n\r\n    constructor() {\r\n        this._createData();\r\n    }\r\n\r\n    /**@internal */\r\n    _createData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _clearData(): void {\r\n\r\n    }\r\n\r\n    /**@internal */\r\n    _destroyData(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。</p>\r\n     */\r\n    destroy(): void {\r\n        this.clear(true);\r\n        if (this._graphicBounds) this._graphicBounds.destroy();\r\n        this._graphicBounds = null;\r\n        this._vectorgraphArray = null;\r\n        if (this._sp) {\r\n            this._sp._renderType = 0;\r\n            this._sp = null;\r\n        }\r\n        this._destroyData();\r\n    }\r\n\r\n    /**\r\n     * <p>清空绘制命令。</p>\r\n     * @param recoverCmds 是否回收绘图指令数组，设置为true，则对指令数组进行回收以节省内存开销，建议设置为true进行回收，但如果手动引用了数组，不建议回收\r\n     */\r\n    clear(recoverCmds: boolean = true): void {\r\n        //TODO:内存回收all\r\n        if (recoverCmds) {\r\n            for (let i = 0, len = this._cmds.length; i < len; i++) {\r\n                this._cmds[i].recover();\r\n            }\r\n        }\r\n\r\n        this._cmds.length = 0;\r\n        this._render = this._renderEmpty;\r\n        this._clearData();\r\n        if (this._sp) {\r\n            this._sp._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this._repaint();\r\n        if (this._vectorgraphArray) {\r\n            for (let i = 0, len = this._vectorgraphArray.length; i < len; i++) {\r\n                VectorGraphManager.getInstance().deleteShape(this._vectorgraphArray[i]);\r\n            }\r\n            this._vectorgraphArray.length = 0;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    _clearBoundsCache(onSizeChanged?: boolean): void {\r\n        if (this._graphicBounds) {\r\n            if (!onSizeChanged || this._graphicBounds._affectBySize)\r\n                this._graphicBounds.reset();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _initGraphicBounds(): void {\r\n        if (!this._graphicBounds) {\r\n            this._graphicBounds = GraphicsBounds.create();\r\n            this._graphicBounds._graphics = this;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 重绘此对象。\r\n     */\r\n    _repaint(): void {\r\n        this._clearBoundsCache();\r\n        this._sp && this._sp.repaint();\r\n    }\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _isOnlyOne(): boolean {\r\n        return this._cmds.length === 1;\r\n    }\r\n\r\n    /**\r\n     * 命令流。存储了所有绘制命令。\r\n     */\r\n    get cmds() {\r\n        return this._cmds;\r\n    }\r\n\r\n    set cmds(value) {\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n\r\n        this._cmds = value;\r\n\r\n        let len = value.length;\r\n        this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n        this._repaint();\r\n    }\r\n\r\n    /**\r\n     * 保存到命令流。\r\n     */\r\n    addCmd(cmd: any): any {\r\n        if (cmd == null) {\r\n            console.warn(\"null cmd\");\r\n            return;\r\n        }\r\n\r\n        if (this._sp) {\r\n            this._sp._renderType |= SpriteConst.GRAPHICS;\r\n        }\r\n        this._cmds.push(cmd);\r\n        this._render = this._cmds.length === 1 ? this._renderOne : this._renderAll;\r\n        this._repaint();\r\n        return cmd;\r\n    }\r\n\r\n    removeCmd(cmd: any) {\r\n        let i = this.cmds.indexOf(cmd);\r\n        if (i != -1) {\r\n            this._cmds.splice(i, 1);\r\n\r\n            let len = this._cmds.length;\r\n            this._render = len === 0 ? this._renderEmpty : (len === 1 ? this._renderOne : this._renderAll);\r\n            this._repaint();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取位置及宽高信息矩阵(比较耗CPU，频繁使用会造成卡顿，尽量少用)。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 位置与宽高组成的 一个 Rectangle 对象。\r\n     */\r\n    getBounds(realSize: boolean = false): Rectangle {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * 获取端点列表。\r\n     */\r\n    getBoundPoints(realSize: boolean = false): any[] {\r\n        this._initGraphicBounds();\r\n        return this._graphicBounds!.getBoundPoints(realSize);\r\n    }\r\n\r\n    /**\r\n     * 绘制单独图片\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param color\t \t （可选）颜色\r\n     */\r\n    drawImage(texture: Texture, x: number = 0, y: number = 0, width: number = null, height: number = null, color: string = null): DrawImageCmd | null {\r\n        if (!texture) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawImageCmd.create(texture, x, y, width, height, color));\r\n    }\r\n\r\n    /**\r\n     * 绘制纹理，相比drawImage功能更强大，性能会差一些\r\n     * @param texture\t\t纹理。\r\n     * @param x \t\t（可选）X轴偏移量。\r\n     * @param y \t\t（可选）Y轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param matrix\t（可选）矩阵信息。\r\n     * @param alpha\t\t（可选）透明度。\r\n     * @param color\t\t（可选）颜色滤镜。\r\n     * @param blendMode （可选）混合模式。\r\n     */\r\n    drawTexture(texture: Texture | null, x: number = 0, y: number = 0, width: number = null, height: number = null, matrix: Matrix | null = null, alpha: number = 1, color: string | null = null, blendMode: string | null = null, uv?: number[]): DrawTextureCmd | null {\r\n        if (!texture || alpha < 0.01) return null;\r\n        if (!texture.bitmap) return null;\r\n        return this.addCmd(DrawTextureCmd.create(texture, x, y, width, height, matrix, alpha, color, blendMode, uv));\r\n    }\r\n\r\n    /**\r\n     * 批量绘制同样纹理。\r\n     * @param texture 纹理。\r\n     * @param pos 绘制次数和坐标。\r\n     * @param colors 图片颜色数组。\r\n     */\r\n    drawTextures(texture: Texture, pos: any[], colors?: number[]): DrawTexturesCmd | null {\r\n        if (!texture) return null;\r\n        return this.addCmd(DrawTexturesCmd.create(texture, pos, colors));\r\n    }\r\n\r\n    /**\r\n     * 绘制一组三角形\r\n     * @param texture\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param vertices  顶点数组。\r\n     * @param indices\t顶点索引。\r\n     * @param uvData\tUV数据。\r\n     * @param matrix\t缩放矩阵。\r\n     * @param alpha\t\talpha\r\n     * @param color\t\t颜色变换\r\n     * @param blendMode\tblend模式\r\n     */\r\n    drawTriangles(texture: Texture, x: number, y: number, vertices: Float32Array, uvs: Float32Array, indices: Uint16Array, matrix: Matrix | null = null,\r\n        alpha: number = 1, color: string | number = null, blendMode: string | null = null): DrawTrianglesCmd {\r\n        return this.addCmd(DrawTrianglesCmd.create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode));\r\n    }\r\n\r\n    /**\r\n     * 用 texture 填充。\r\n     * @param texture\t\t纹理。\r\n     * @param x\t\t\tX轴偏移量。\r\n     * @param y\t\t\tY轴偏移量。\r\n     * @param width\t\t（可选）宽度。\r\n     * @param height\t（可选）高度。\r\n     * @param type\t\t（可选）填充类型 repeat|repeat-x|repeat-y|no-repeat\r\n     * @param offset\t（可选）贴图纹理偏移\r\n     * @param color\t \t （可选）颜色\r\n     *\r\n     */\r\n    fillTexture(texture: Texture, x: number, y: number, width: number = 0, height: number = 0, type: string = \"repeat\", offset: Point | null = null, color: string = null): FillTextureCmd | null {\r\n        if (texture && texture.bitmap)\r\n            return this.addCmd(FillTextureCmd.create(texture, x, y, width, height, type, offset || Point.EMPTY, color));\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * 设置剪裁区域，超出剪裁区域的坐标不显示。\r\n     * @param x X 轴偏移量。\r\n     * @param y Y 轴偏移量。\r\n     * @param width 宽度。\r\n     * @param height 高度。\r\n     */\r\n    clipRect(x: number, y: number, width: number, height: number): ClipRectCmd {\r\n        return this.addCmd(ClipRectCmd.create(x, y, width, height));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本。\r\n     * @param text 在画布上输出的文本。\r\n     * @param x 开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y 开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font 定义字号和字体，比如\"20px Arial\"。\r\n     * @param color 定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign 文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    fillText(text: string | WordText, x: number, y: number, font: string, color: string, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, color, textAlign, 0, \"\"));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制“被填充且镶边的”文本。\r\n     * @param text\t\t\t在画布上输出的文本。\r\n     * @param x\t\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param fillColor\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param textAlign\t\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     * @param lineWidth\t\t镶边线条宽度。\r\n     * @param borderColor\t定义镶边文本颜色。\r\n     */\r\n    fillBorderText(text: string | WordText, x: number, y: number, font: string, fillColor: string, textAlign: string, lineWidth: number, borderColor: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, fillColor, textAlign, lineWidth, borderColor));\r\n    }\r\n\r\n    /**\r\n     * 在画布上绘制文本（没有填色）。文本的默认颜色是黑色。\r\n     * @param text\t\t在画布上输出的文本。\r\n     * @param x\t\t\t开始绘制文本的 x 坐标位置（相对于画布）。\r\n     * @param y\t\t\t开始绘制文本的 y 坐标位置（相对于画布）。\r\n     * @param font\t\t定义字体和字号，比如\"20px Arial\"。\r\n     * @param color\t\t定义文本颜色，比如\"#ff0000\"。\r\n     * @param lineWidth\t线条宽度。\r\n     * @param textAlign\t文本对齐方式，可选值：\"left\"，\"center\"，\"right\"。\r\n     */\r\n    strokeText(text: string | WordText, x: number, y: number, font: string, color: string, lineWidth: number, textAlign: string): FillTextCmd {\r\n        return this.addCmd(FillTextCmd.create(text, x, y, font, null, textAlign, lineWidth, color));\r\n    }\r\n\r\n    /**\r\n     * 设置透明度。\r\n     * @param value 透明度。\r\n     */\r\n    alpha(alpha: number): AlphaCmd {\r\n        return this.addCmd(AlphaCmd.create(alpha));\r\n    }\r\n\r\n    /**\r\n     * 替换绘图的当前转换矩阵。\r\n     * @param mat 矩阵。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    transform(matrix: Matrix, pivotX: number = 0, pivotY: number = 0): TransformCmd {\r\n        return this.addCmd(TransformCmd.create(matrix, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 旋转当前绘图。(推荐使用transform，性能更高)\r\n     * @param angle\t\t旋转角度，以弧度计。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    rotate(angle: number, pivotX: number = 0, pivotY: number = 0): RotateCmd {\r\n        return this.addCmd(RotateCmd.create(angle, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 缩放当前绘图至更大或更小。(推荐使用transform，性能更高)\r\n     * @param scaleX\t水平方向缩放值。\r\n     * @param scaleY\t垂直方向缩放值。\r\n     * @param pivotX\t（可选）水平方向轴心点坐标。\r\n     * @param pivotY\t（可选）垂直方向轴心点坐标。\r\n     */\r\n    scale(scaleX: number, scaleY: number, pivotX: number = 0, pivotY: number = 0): ScaleCmd {\r\n        return this.addCmd(ScaleCmd.create(scaleX, scaleY, pivotX, pivotY));\r\n    }\r\n\r\n    /**\r\n     * 重新映射画布上的 (0,0) 位置。\r\n     * @param x 添加到水平坐标（x）上的值。\r\n     * @param y 添加到垂直坐标（y）上的值。\r\n     */\r\n    translate(tx: number, ty: number): TranslateCmd {\r\n        return this.addCmd(TranslateCmd.create(tx, ty));\r\n    }\r\n\r\n    /**\r\n     * 保存当前环境的状态。\r\n     */\r\n    save(): SaveCmd {\r\n        return this.addCmd(SaveCmd.create());\r\n    }\r\n\r\n    /**\r\n     * 返回之前保存过的路径状态和属性。\r\n     */\r\n    restore(): RestoreCmd {\r\n        return this.addCmd(RestoreCmd.create());\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 替换文本颜色。\r\n     * @param color 颜色。\r\n     */\r\n    replaceTextColor(color: string): void {\r\n        this._repaint();\r\n        let cmds = this._cmds;\r\n        for (let i = cmds.length - 1; i > -1; i--) {\r\n            let cmd = cmds[i];\r\n            var cmdID: string = cmd.cmdID;\r\n            switch (cmdID) {\r\n                case FillTextCmd.ID:\r\n                    (cmd as FillTextCmd).color = color;\r\n                    break;\r\n                case DrawImageCmd.ID: //bitmap font\r\n                    (cmd as DrawImageCmd).color = color != null ? ColorUtils.create(color).numColor : 0xffffffff;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载并显示一个图片。\r\n     * @param url\t\t图片地址。\r\n     * @param x\t\t\t（可选）显示图片的x位置。\r\n     * @param y\t\t\t（可选）显示图片的y位置。\r\n     * @param width\t\t（可选）显示图片的宽度，设置为0表示使用图片默认宽度。\r\n     * @param height\t（可选）显示图片的高度，设置为0表示使用图片默认高度。\r\n     * @param complete\t（可选）加载完成回调。\r\n     */\r\n    loadImage(url: string, x: number = 0, y: number = 0, width: number = null, height: number = null, complete: Function | null = null): void {\r\n        let tex: Texture = ILaya.loader.getRes(url);\r\n        if (tex) {\r\n            this.drawImage(tex, x, y, width, height);\r\n            complete && complete.call(this._sp);\r\n        }\r\n        else {\r\n            ILaya.loader.load(url).then((tex: Texture) => {\r\n                this.drawImage(tex, x, y, width, height);\r\n                complete && complete.call(this._sp);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderEmpty(sprite: Sprite, context: Context, x: number, y: number): void {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderAll(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        var cmds = this._cmds!;\r\n        for (let i = 0, n = cmds.length; i < n; i++) {\r\n            cmds[i].run(context, x, y);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _renderOne(sprite: Sprite, context: Context, x: number, y: number): void {\r\n        context.sprite = sprite;\r\n        this._cmds[0].run(context, x, y);\r\n    }\r\n\r\n    /**\r\n     * 绘制一条线。\r\n     * @param fromX\t\tX轴开始位置。\r\n     * @param fromY\t\tY轴开始位置。\r\n     * @param toX\t\tX轴结束位置。\r\n     * @param toY\t\tY轴结束位置。\r\n     * @param lineColor\t颜色。\r\n     * @param lineWidth\t（可选）线条宽度。\r\n     */\r\n    drawLine(fromX: number, fromY: number, toX: number, toY: number, lineColor: string, lineWidth: number = 1): DrawLineCmd {\r\n        return this.addCmd(DrawLineCmd.create(fromX, fromY, toX, toY, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列线段。\r\n     * @param x\t\t\t开始绘制的X轴位置。\r\n     * @param y\t\t\t开始绘制的Y轴位置。\r\n     * @param points\t线段的点集合。格式:[x1,y1,x2,y2,x3,y3...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawLines(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawLinesCmd | null {\r\n        if (!points || points.length < 4) return null;\r\n        return this.addCmd(DrawLinesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制一系列曲线。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t线段的点集合，格式[controlX, controlY, anchorX, anchorY...]。\r\n     * @param lineColor\t线段颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）线段宽度。\r\n     */\r\n    drawCurves(x: number, y: number, points: any[], lineColor: any, lineWidth: number = 1): DrawCurvesCmd {\r\n        return this.addCmd(DrawCurvesCmd.create(x, y, points, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制矩形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param width\t\t矩形宽度。\r\n     * @param height\t矩形高度。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     * @param percent 位置和大小是否是百分比值。\r\n     */\r\n    drawRect(x: number, y: number, width: number, height: number, fillColor: any, lineColor: any = null, lineWidth: number = 1, percent?: boolean): DrawRectCmd {\r\n        return this.addCmd(DrawRectCmd.create(x, y, width, height, fillColor, lineColor, lineWidth, percent));\r\n    }\r\n\r\n    /**\r\n     * 绘制圆形。\r\n     * @param x\t\t\t圆点X 轴位置。\r\n     * @param y\t\t\t圆点Y 轴位置。\r\n     * @param radius\t半径。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawCircle(x: number, y: number, radius: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawCircleCmd {\r\n        return this.addCmd(DrawCircleCmd.create(x, y, radius, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制扇形。\r\n     * @param x\t\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t\t开始绘制的 Y 轴位置。\r\n     * @param radius\t\t扇形半径。\r\n     * @param startAngle\t开始角度。\r\n     * @param endAngle\t\t结束角度。\r\n     * @param fillColor\t\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t\t（可选）边框宽度。\r\n     */\r\n    drawPie(x: number, y: number, radius: number, startAngle: number, endAngle: number, fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPieCmd {\r\n        return this.addCmd(DrawPieCmd.create(x, y, radius, Utils.toRadian(startAngle), Utils.toRadian(endAngle), fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制多边形。\r\n     * @param x\t\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t\t开始绘制的 Y 轴位置。\r\n     * @param points\t多边形的点集合。\r\n     * @param fillColor\t填充颜色，或者填充绘图的渐变对象。\r\n     * @param lineColor\t（可选）边框颜色，或者填充绘图的渐变对象。\r\n     * @param lineWidth\t（可选）边框宽度。\r\n     */\r\n    drawPoly(x: number, y: number, points: any[], fillColor: any, lineColor: any = null, lineWidth: number = 1): DrawPolyCmd {\r\n        return this.addCmd(DrawPolyCmd.create(x, y, points, fillColor, lineColor, lineWidth));\r\n    }\r\n\r\n    /**\r\n     * 绘制路径。\r\n     * @param x\t\t开始绘制的 X 轴位置。\r\n     * @param y\t\t开始绘制的 Y 轴位置。\r\n     * @param paths\t路径集合，路径支持以下格式：[[\"moveTo\",x,y],[\"lineTo\",x,y],[\"arcTo\",x1,y1,x2,y2,r],[\"closePath\"]]。\r\n     * @param brush\t（可选）刷子定义，支持以下设置{fillStyle:\"#FF0000\"}。\r\n     * @param pen\t（可选）画笔定义，支持以下设置{strokeStyle,lineWidth,lineJoin:\"bevel|round|miter\",lineCap:\"butt|round|square\",miterLimit}。\r\n     */\r\n    drawPath(x: number, y: number, paths: any[], brush: any = null, pen: any = null): DrawPathCmd {\r\n        return this.addCmd(DrawPathCmd.create(x, y, paths, brush, pen));\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 绘制带九宫格的图片\r\n     * @param\ttexture\r\n     * @param\tx\r\n     * @param\ty\r\n     * @param\twidth\r\n     * @param\theight\r\n     * @param\tsizeGrid\r\n     * @param\tcolor\r\n     */\r\n    draw9Grid(texture: Texture, x: number = 0, y: number = 0, width: number = 0, height: number = 0, sizeGrid: any[], color?: string): void {\r\n        this.addCmd(Draw9GridTextureCmd.create(texture, x, y, width, height, sizeGrid, false, color));\r\n    }\r\n}\r\n","import { NodeFlags } from \"../Const\"\r\nimport { Component } from \"../components/Component\"\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Pool } from \"../utils/Pool\"\r\nimport { Stat } from \"../utils/Stat\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\n\r\nconst ARRAY_EMPTY: any[] = [];\r\n\r\n/**\r\n * 添加到父对象后调度。\r\n * @eventType Event.ADDED\r\n */\r\n/*[Event(name = \"added\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 被父对象移除后调度。\r\n * @eventType Event.REMOVED\r\n */\r\n/*[Event(name = \"removed\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 加入节点树时调度。\r\n * @eventType Event.DISPLAY\r\n */\r\n/*[Event(name = \"display\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 从节点树移除时调度。\r\n * @eventType Event.UNDISPLAY\r\n */\r\n/*[Event(name = \"undisplay\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n *  <code>Node</code> 类是可放在显示列表中的所有对象的基类。该显示列表管理 Laya 运行时中显示的所有对象。使用 Node 类排列显示列表中的显示对象。Node 对象可以有子显示对象。\r\n */\r\nexport class Node extends EventDispatcher {\r\n    /**@private */\r\n    private _bits: number = 0;\r\n    /**@private */\r\n    private _hideFlags: number = 0;\r\n\r\n    /**@internal 子对象集合，请不要直接修改此对象。*/\r\n    _children: Node[] = ARRAY_EMPTY;\r\n    /**@internal 父节点对象*/\r\n    _parent: Node = null;\r\n    /**@internal */\r\n    _destroyed: boolean = false;\r\n    /**@internal */\r\n    _conchData: any;\r\n    /**@internal */\r\n    _componentDriver?: ComponentDriver;\r\n    /**@internal */\r\n    _is3D?: boolean;\r\n    _url?: string;\r\n    _extra?: INodeExtra;\r\n\r\n    /**节点名称。*/\r\n    name: string = \"\";\r\n\r\n    /** 节点标签 */\r\n    tag?: string;\r\n\r\n    /**\r\n     * 如果节点从资源中创建，这里记录是他的url\r\n     */\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /**\r\n     * 设置资源的URL\r\n     */\r\n    set url(path: string) {\r\n        this._url = path;\r\n    }\r\n\r\n    get hideFlags(): number {\r\n        return this._hideFlags;\r\n    }\r\n\r\n    set hideFlags(value: number) {\r\n        this._hideFlags = value;\r\n    }\r\n\r\n    /** 是否3D节点，即Scene3D和Sprite3D及其衍生类 */\r\n    get is3D(): boolean {\r\n        return this._is3D;\r\n    }\r\n\r\n    /** 是否已经销毁。对象销毁后不能再使用。*/\r\n    get destroyed(): boolean {\r\n        return this._destroyed;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._initialize();\r\n    }\r\n\r\n    //@internal\r\n    _initialize(): void {\r\n        this._extra = {};\r\n    }\r\n\r\n    /**@internal */\r\n    _setBit(type: number, value: boolean): void {\r\n        if (type === NodeFlags.DISPLAY) {\r\n            var preValue: boolean = this._getBit(type);\r\n            if (preValue != value) this._updateDisplayedInstage();\r\n        }\r\n        if (value) this._bits |= type;\r\n        else this._bits &= ~type;\r\n    }\r\n\r\n    /**@internal */\r\n    _getBit(type: number): boolean {\r\n        return (this._bits & type) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setUpNoticeChain(): void {\r\n        if (this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**@internal */\r\n    _setBitUp(type: number): void {\r\n        var ele: Node = this;\r\n        ele._setBit(type, true);\r\n        ele = ele._parent;\r\n        while (ele) {\r\n            if (ele._getBit(type)) return;\r\n            ele._setBit(type, true);\r\n            ele = ele._parent;\r\n        }\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        if (type === Event.DISPLAY || type === Event.UNDISPLAY) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n        }\r\n    }\r\n\r\n    bubbleEvent(type: string, data?: any) {\r\n        let arr: Array<Node> = _bubbleChainPool.length > 0 ? _bubbleChainPool.pop() : [];\r\n        arr.length = 0;\r\n\r\n        let obj: Node = this;\r\n        while (obj) {\r\n            if (obj.activeInHierarchy)\r\n                arr.push(obj);\r\n            obj = obj.parent;\r\n        }\r\n\r\n        if (data instanceof Event) {\r\n            data._stopped = false;\r\n            for (let obj of arr) {\r\n                data.setTo(type, obj, this);\r\n                obj.event(type, data);\r\n                if (data._stopped)\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            for (let obj of arr)\r\n                obj.event(type, data);\r\n        }\r\n\r\n        _bubbleChainPool.push(arr);\r\n    }\r\n\r\n    hasHideFlag(flag: number): boolean {\r\n        return (this._hideFlags & flag) != 0;\r\n    }\r\n\r\n    /**\r\n     * <p>销毁此对象。destroy对象默认会把自己从父节点移除，并且清理自身引用关系，等待js自动垃圾回收机制回收。destroy后不能再使用。</p>\r\n     * <p>destroy时会移除自身的事情监听，自身的timer监听，移除子对象及从父节点移除自己。</p>\r\n     * @param destroyChild\t（可选）是否同时销毁子节点，若值为true,则销毁子节点，否则不销毁子节点。\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this._destroyed = true;\r\n        this.destroyAllComponent();\r\n        this._parent && this._parent.removeChild(this);\r\n\r\n        //销毁子节点\r\n        if (this._children) {\r\n            if (destroyChild) this.destroyChildren();\r\n            else this.removeChildren();\r\n        }\r\n        this.onDestroy();\r\n\r\n        this._children = null;\r\n\r\n        //移除所有事件监听\r\n        this.offAll();\r\n    }\r\n\r\n    /**\r\n     * 销毁时执行\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDestroy(): void {\r\n        //trace(\"onDestroy node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * 销毁所有子对象，不销毁自己本身。\r\n     */\r\n    destroyChildren(): void {\r\n        //销毁子节点\r\n        if (this._children) {\r\n            //为了保持销毁顺序，所以需要正序销毁\r\n            for (let i = 0, n = this._children.length; i < n; i++) {\r\n                this._children[0] && this._children[0].destroy(true);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加子节点。\r\n     * @param\tnode 节点对象\r\n     * @return\t返回添加的节点\r\n     */\r\n    addChild<T extends Node>(node: T): T {\r\n        if (!node || this._destroyed || node as any === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (node._parent === this) {\r\n            var index: number = this.getChildIndex(node);\r\n            if (index !== this._children.length - 1) {\r\n                this._children.splice(index, 1);\r\n                this._children.push(node);\r\n                this._childChanged();\r\n            }\r\n        } else {\r\n            node._parent && node._parent.removeChild(node);\r\n            this._children === ARRAY_EMPTY && (this._children = []);\r\n            this._children.push(node);\r\n            node._setParent(this);\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 批量增加子节点\r\n     * @param\t...args 无数子节点。\r\n     */\r\n    addChildren(...args: any[]): void {\r\n        var i: number = 0, n: number = args.length;\r\n        while (i < n) {\r\n            this.addChild(args[i++]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加子节点到指定的索引位置。\r\n     * @param\tnode 节点对象。\r\n     * @param\tindex 索引位置。\r\n     * @return\t返回添加的节点。\r\n     */\r\n    addChildAt(node: Node, index: number): Node {\r\n        if (!node || this._destroyed || node === this) return node;\r\n        if ((<any>node)._zOrder) this._setBit(NodeFlags.HAS_ZORDER, true);\r\n        if (index >= 0 && index <= this._children.length) {\r\n            if (node._parent === this) {\r\n                var oldIndex: number = this.getChildIndex(node);\r\n                this._children.splice(oldIndex, 1);\r\n                this._children.splice(index, 0, node);\r\n                this._childChanged();\r\n            } else {\r\n                node._parent && node._parent.removeChild(node);\r\n                this._children === ARRAY_EMPTY && (this._children = []);\r\n                this._children.splice(index, 0, node);\r\n                node._setParent(this);\r\n            }\r\n            return node;\r\n        } else {\r\n            throw new Error(\"appendChildAt:The index is out of bounds\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据子节点对象，获取子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @return\t子节点所在的索引位置。\r\n     */\r\n    getChildIndex(node: Node): number {\r\n        return this._children.indexOf(node);\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的名字，获取子节点对象。\r\n     * @param\tname 子节点的名字。\r\n     * @return\t节点对象。\r\n     */\r\n    getChildByName(name: string): Node {\r\n        for (let child of this._children) {\r\n            if (child && child.name === name)\r\n                return child;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点的索引位置，获取子节点对象。\r\n     * @param\tindex 索引位置\r\n     * @return\t子节点\r\n     */\r\n    getChildAt(index: number): Node {\r\n        return this._children[index] || null;\r\n    }\r\n\r\n    /**\r\n     * 设置子节点的索引位置。\r\n     * @param\tnode 子节点。\r\n     * @param\tindex 新的索引。\r\n     * @return\t返回子节点本身。\r\n     */\r\n    setChildIndex(node: Node, index: number): Node {\r\n        var childs: any[] = this._children;\r\n        if (index < 0 || index >= childs.length) {\r\n            throw new Error(\"setChildIndex:The index is out of bounds.\");\r\n        }\r\n\r\n        var oldIndex: number = this.getChildIndex(node);\r\n        if (oldIndex < 0) throw new Error(\"setChildIndex:node is must child of this object.\");\r\n        childs.splice(oldIndex, 1);\r\n        childs.splice(index, 0, node);\r\n        this._childChanged();\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 子节点发生改变。\r\n     * @private\r\n     * @param\tchild 子节点。\r\n     */\r\n    protected _childChanged(child: Node = null): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 删除子节点。\r\n     * @param\tnode 子节点\r\n     * @return\t被删除的节点\r\n     */\r\n    removeChild(node: Node): Node {\r\n        if (!this._children) return node;\r\n        var index: number = this._children.indexOf(node);\r\n        return this.removeChildAt(index);\r\n    }\r\n\r\n    /**\r\n     * 从父容器删除自己，如已经被删除不会抛出异常。\r\n     * @return 当前节点（ Node ）对象。\r\n     */\r\n    removeSelf(): Node {\r\n        this._parent && this._parent.removeChild(this);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点名字删除对应的子节点对象，如果找不到不会抛出异常。\r\n     * @param\tname 对象名字。\r\n     * @return 查找到的节点（ Node ）对象。\r\n     */\r\n    removeChildByName(name: string): Node {\r\n        var node: Node = this.getChildByName(name);\r\n        node && this.removeChild(node);\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 根据子节点索引位置，删除对应的子节点对象。\r\n     * @param\tindex 节点索引位置。\r\n     * @return\t被删除的节点。\r\n     */\r\n    removeChildAt(index: number): Node {\r\n        var node: Node = this.getChildAt(index);\r\n        if (node) {\r\n            this._children.splice(index, 1);\r\n            node._setParent(null);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * 删除指定索引区间的所有子对象。\r\n     * @param\tbeginIndex 开始索引。\r\n     * @param\tendIndex 结束索引。\r\n     * @return 当前节点对象。\r\n     */\r\n    removeChildren(beginIndex: number = 0, endIndex: number = 0x7fffffff): Node {\r\n        if (this._children && this._children.length > 0) {\r\n            var childs: any[] = this._children;\r\n            if (beginIndex === 0 && endIndex >= childs.length - 1) {\r\n                var arr: any[] = childs;\r\n                this._children = ARRAY_EMPTY;\r\n            } else {\r\n                arr = childs.splice(beginIndex, endIndex - beginIndex + 1);\r\n            }\r\n            for (var i: number = 0, n: number = arr.length; i < n; i++) {\r\n                arr[i]._setParent(null);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 替换子节点。\r\n     * 将传入的新节点对象替换到已有子节点索引位置处。\r\n     * @param\tnewNode 新节点。\r\n     * @param\toldNode 老节点。\r\n     * @return\t返回新节点。\r\n     */\r\n    replaceChild(newNode: Node, oldNode: Node): Node {\r\n        var index: number = this._children.indexOf(oldNode);\r\n        if (index > -1) {\r\n            this._children.splice(index, 1, newNode);\r\n            oldNode._setParent(null);\r\n            newNode._setParent(this);\r\n            return newNode;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 子对象数量。\r\n     */\r\n    get numChildren(): number {\r\n        return this._children ? this._children.length : 0;\r\n    }\r\n\r\n    /**父节点。*/\r\n    get parent(): Node {\r\n        return this._parent;\r\n    }\r\n\r\n    /**检查本节点是否是某个节点的上层节点\r\n     * @param node\r\n     * @return\r\n     */\r\n    isAncestorOf(node: Node): boolean {\r\n        let p = node.parent;\r\n        while (p) {\r\n            if (p == this)\r\n                return true;\r\n\r\n            p = p.parent;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**@private */\r\n    protected _setParent(value: Node): void {\r\n        if (this._parent !== value) {\r\n            if (value) {\r\n                this._parent = value;\r\n                //如果父对象可见，则设置子对象可见\r\n                this._onAdded();\r\n                this.event(Event.ADDED);\r\n                if (this._getBit(NodeFlags.DISPLAY)) {\r\n                    this._setUpNoticeChain();\r\n                    value.displayedInStage && this._displayChild(this, true);\r\n                }\r\n                value._childChanged(this);\r\n            } else {\r\n                //设置子对象不可见\r\n                this._onRemoved();\r\n                this.event(Event.REMOVED);\r\n                let p = this._parent;\r\n                if (this._getBit(NodeFlags.DISPLAY)) this._displayChild(this, false);\r\n                this._parent = value;\r\n                p._childChanged(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示是否在显示列表中显示。*/\r\n    get displayedInStage(): boolean {\r\n        if (this._getBit(NodeFlags.DISPLAY)) return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n        return this._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n    }\r\n\r\n    /**@private */\r\n    private _updateDisplayedInstage(): void {\r\n        var ele: Node;\r\n        ele = this;\r\n        var stage: Node = ILaya.stage;\r\n        var displayedInStage: boolean = false;\r\n        while (ele) {\r\n            if (ele._getBit(NodeFlags.DISPLAY)) {\r\n                displayedInStage = ele._getBit(NodeFlags.DISPLAYED_INSTAGE);\r\n                break;\r\n            }\r\n            if (ele === stage || ele._getBit(NodeFlags.DISPLAYED_INSTAGE)) {\r\n                displayedInStage = true;\r\n                break;\r\n            }\r\n            ele = ele._parent;\r\n        }\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, displayedInStage);\r\n    }\r\n\r\n    /**@internal */\r\n    _setDisplay(value: boolean): void {\r\n        if (this._getBit(NodeFlags.DISPLAYED_INSTAGE) !== value) {\r\n            this._setBit(NodeFlags.DISPLAYED_INSTAGE, value);\r\n            if (value) this.event(Event.DISPLAY);\r\n            else this.event(Event.UNDISPLAY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置指定节点对象是否可见(是否在渲染列表中)。\r\n     * @private\r\n     * @param\tnode 节点。\r\n     * @param\tdisplay 是否可见。\r\n     */\r\n    private _displayChild(node: Node, display: boolean): void {\r\n        var childs: any[] = node._children;\r\n        if (childs) {\r\n            for (var i: number = 0, n: number = childs.length; i < n; i++) {\r\n                var child: Node = childs[i];\r\n                if (!child) continue;\r\n                if (!child._getBit(NodeFlags.DISPLAY)) continue;\r\n                if (child._children.length > 0) {\r\n                    this._displayChild(child, display);\r\n                } else {\r\n                    child._setDisplay(display);\r\n                }\r\n            }\r\n        }\r\n        node._setDisplay(display);\r\n    }\r\n\r\n    /**\r\n     * 当前容器是否包含指定的 <code>Node</code> 节点对象 。\r\n     * @param\tnode  指定的 <code>Node</code> 节点对象 。\r\n     * @return\t一个布尔值表示是否包含指定的 <code>Node</code> 节点对象 。\r\n     */\r\n    contains(node: Node): boolean {\r\n        if (node === this) return true;\r\n        while (node) {\r\n            if (node._parent === this) return true;\r\n            node = node._parent;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数。功能同Laya.timer.timerLoop()。\r\n     * @param\tdelay\t\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    timerLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        this.timer.loop(delay, caller, method, args, coverBefore, jumpFrame);\r\n    }\r\n\r\n    /**\r\n     * 定时执行某函数一次。功能同Laya.timer.timerOnce()。\r\n     * @param\tdelay\t\t延迟时间(单位毫秒)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    timerOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行某函数(基于帧率)。功能同Laya.timer.frameLoop()。\r\n     * @param\tdelay\t\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)。\r\n     * @param\tmethod\t\t结束时的回调方法。\r\n     * @param\targs\t\t（可选）回调参数。\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次某函数(基于帧率)。功能同Laya.timer.frameOnce()。\r\n     * @param\tdelay\t\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t\t执行域(this)\r\n     * @param\tmethod\t\t结束时的回调方法\r\n     * @param\targs\t\t（可选）回调参数\r\n     * @param\tcoverBefore\t（可选）是否覆盖之前的延迟执行，默认为true\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this.timer._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。功能同Laya.timer.clearTimer()。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 结束时的回调方法。\r\n     */\r\n    clearTimer(caller: any, method: Function): void {\r\n        this.timer.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * <p>延迟运行指定的函数。</p>\r\n     * <p>在控件被显示在屏幕之前调用，一般用于延迟计算数据。</p>\r\n     * @param method 要执行的函数的名称。例如，functionName。\r\n     * @param args 传递给 <code>method</code> 函数的可选参数列表。\r\n     *\r\n     * @see #runCallLater()\r\n     */\r\n    callLater(method: Function, args: any[] = null): void {\r\n        this.timer.callLater(this, method, args);\r\n    }\r\n\r\n    /**\r\n     * <p>如果有需要延迟调用的函数（通过 <code>callLater</code> 函数设置），则立即执行延迟调用函数。</p>\r\n     * @param method 要执行的函数名称。例如，functionName。\r\n     * @see #callLater()\r\n     */\r\n    runCallLater(method: Function): void {\r\n        this.timer.runCallLater(this, method);\r\n    }\r\n\r\n    //============================组件化支持==============================\r\n    /** @private */\r\n    protected _components: Component[];\r\n    /**@private */\r\n    private _activeChangeScripts: Component[];\r\n\r\n\r\n    _scene: Node;\r\n\r\n    /**\r\n     * 获得所属场景。\r\n     * @return\t场景。\r\n     */\r\n    get scene(): any {\r\n        return this._scene;\r\n    }\r\n\r\n    /**\r\n     * 获取自身是否激活。\r\n     *   @return\t自身是否激活。\r\n     */\r\n    get active(): boolean {\r\n        return !this._getBit(NodeFlags.NOT_READY) && !this._getBit(NodeFlags.NOT_ACTIVE);\r\n    }\r\n\r\n    /**\r\n     * 设置是否激活。\r\n     * @param\tvalue 是否激活。\r\n     */\r\n    set active(value: boolean) {\r\n        value = !!value;\r\n        if (!this._getBit(NodeFlags.NOT_ACTIVE) !== value) {\r\n            if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n                if (value)\r\n                    throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n                else\r\n                    throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n            } else {\r\n                this._setBit(NodeFlags.NOT_ACTIVE, !value);\r\n                if (this._parent) {\r\n                    if (this._parent.activeInHierarchy) {\r\n                        this._processActive(value, true);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取在场景中是否激活。\r\n     *   @return\t在场景中是否激活。\r\n     */\r\n    get activeInHierarchy(): boolean {\r\n        return this._getBit(NodeFlags.ACTIVE_INHIERARCHY);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActive(): void {\r\n        Stat.spriteCount++;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActive(): void {\r\n        Stat.spriteCount--;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onActiveInScene(): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onInActiveInScene(): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n    * 组件被激活后执行，此时所有节点和组件均已创建完毕，次方法只执行一次\r\n    * 此方法为虚方法，使用时重写覆盖即可\r\n    */\r\n    onAwake(): void {\r\n        //this.name  && trace(\"onAwake node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被启用后执行，比如节点被添加到舞台后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onEnable(): void {\r\n        //this.name  && trace(\"onEnable node \", this.name);\r\n    }\r\n\r\n    /**\r\n     * 组件被禁用时执行，比如从节点从舞台移除后\r\n     * 此方法为虚方法，使用时重写覆盖即可\r\n     */\r\n    onDisable(): void {\r\n        //trace(\"onDisable node\", this.name);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _parse(data: any, spriteMap: any): void {\r\n        //override it.\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setBelongScene(scene: Node): void {\r\n        if (!this._scene || this.scene != scene) {\r\n            this._scene = scene;\r\n            this._onActiveInScene();\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setBelongScene(scene);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _setUnBelongScene(): void {\r\n        if (this._scene !== this) {//移除节点本身是scene不继续派发\r\n            this._onInActiveInScene();\r\n            this._scene = null;\r\n            for (let i = 0, n = this._children.length; i < n; i++)\r\n                this._children[i]._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    _processActive(active: boolean, fromSetter?: boolean) {\r\n        (this._activeChangeScripts) || (this._activeChangeScripts = []);\r\n        let arr = this._activeChangeScripts;\r\n\r\n        if (active)\r\n            this._activeHierarchy(arr, fromSetter);\r\n        else\r\n            this._inActiveHierarchy(arr, fromSetter);\r\n\r\n        for (let i = 0, n = arr.length; i < n; i++) {\r\n            let comp = arr[i];\r\n            comp.owner && comp._setActive(active);\r\n        }\r\n\r\n        arr.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _activeHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    (comp._enabled) && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(true);\r\n            }\r\n        }\r\n\r\n        this._onActive();\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (!child._getBit(NodeFlags.NOT_ACTIVE) && !child._getBit(NodeFlags.NOT_READY)) && (child._activeHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        if (!this._getBit(NodeFlags.AWAKED)) {\r\n            this._setBit(NodeFlags.AWAKED, true);\r\n            this.onAwake();\r\n        }\r\n        this.onEnable();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _inActiveHierarchy(activeChangeScripts: any[], fromSetter?: boolean): void {\r\n        this._onInActive();\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp._isScript())\r\n                    comp._enabled && (activeChangeScripts.push(comp));\r\n                else\r\n                    comp._setActive(false);\r\n            }\r\n        }\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, false);\r\n\r\n        for (let i = 0, n = this._children.length; i < n; i++) {\r\n            let child = this._children[i];\r\n            (child && !child._getBit(NodeFlags.NOT_ACTIVE)) && (child._inActiveHierarchy(activeChangeScripts, fromSetter));\r\n        }\r\n        this.onDisable();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onAdded(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main inActive node active in hierarchy,if the operate is in main inActive node or it's children script's onDisable Event.\";\r\n        } else {\r\n            let parentScene = this._parent.scene;\r\n            parentScene && this._setBelongScene(parentScene);\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected _onRemoved(): void {\r\n        if (this._activeChangeScripts && this._activeChangeScripts.length !== 0) {\r\n            throw \"Node: can't set the main active node inActive in hierarchy,if the operate is in main active node or it's children script's onEnable Event.\";\r\n        } else {\r\n            (this._parent.activeInHierarchy && this.active) && this._processActive(false);\r\n            this._parent.scene && this._setUnBelongScene();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addComponentInstance(comp: Component): void {\r\n        if (!this._components)\r\n            this._components = [];\r\n        this._components.push(comp);\r\n\r\n        comp._setOwner(this);\r\n        if (this.activeInHierarchy)\r\n            comp._setActive(true);\r\n        this._componentsChanged?.(comp, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _destroyComponent(comp: Component) {\r\n        if (!this._components)\r\n            return;\r\n\r\n        let i = this._components.indexOf(comp);\r\n        if (i != -1) {\r\n            this._components.splice(i, 1);\r\n            comp._destroy();\r\n            this._componentsChanged?.(comp, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private destroyAllComponent(): void {\r\n        if (!this._components)\r\n            return;\r\n\r\n        for (let i = 0, n = this._components.length; i < n; i++) {\r\n            let item = this._components[i];\r\n            item && !item.destroyed && item._destroy();\r\n        }\r\n        this._components.length = 0;\r\n        this._componentsChanged?.(null, 2);\r\n    }\r\n\r\n    /**\r\n     * 组件列表发生改变。\r\n     * @private\r\n     */\r\n    protected _componentsChanged?(comp: Component, action: 0 | 1 | 2): void;\r\n\r\n    /**\r\n     * @internal 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    _cloneTo(destObject: any, srcRoot: Node, dstRoot: Node): void {\r\n        var destNode: Node = (<Node>destObject);\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                var destComponent = destNode.addComponent((this._components[i] as any).constructor);\r\n                this._components[i]._cloneTo(destComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加组件实例。\r\n     * @param\tcomponent 组建实例。\r\n     * @return\t组件。\r\n     */\r\n    addComponentInstance(component: Component): Component {\r\n        if (component.owner)\r\n            throw \"Node:the component has belong to other node.\";\r\n        if (component._singleton && this.getComponent(((<any>component)).constructor))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", component);\r\n        else\r\n            this._addComponentInstance(component);\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 添加组件。\r\n     * @param\tcomponentType 组件类型。\r\n     * @return\t组件。\r\n     */\r\n    addComponent<T extends Component>(componentType: new () => T): T {\r\n        let comp: T = Pool.createByClass(componentType);\r\n        if (!comp) {\r\n            throw \"missing \" + componentType.toString();\r\n        }\r\n\r\n        if (comp._singleton && this.getComponent(componentType))\r\n            console.warn(\"Node:the component is singleton, can't add the second one.\", comp);\r\n        else\r\n            this._addComponentInstance(comp);\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组建类型\r\n     * @return\t返回组件\r\n     */\r\n    getComponent<T extends Component>(componentType: new () => T): T {\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType)\r\n                    return comp;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 返回所有组件实例。\r\n     * @return 返回组件实例数组。\r\n     */\r\n    get components(): ReadonlyArray<Component> {\r\n        return this._components || ARRAY_EMPTY;\r\n    }\r\n\r\n    /**\r\n     * 获得组件实例，如果没有则返回为null\r\n     * @param\tcomponentType 组件类型\r\n     * @return\t返回组件数组\r\n     */\r\n    getComponents(componentType: typeof Component): Component[] {\r\n        var arr: any[];\r\n        if (this._components) {\r\n            for (let i = 0, n = this._components.length; i < n; i++) {\r\n                let comp = this._components[i];\r\n                if (comp instanceof componentType) {\r\n                    arr = arr || [];\r\n                    arr.push(comp);\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * 获取timer\r\n     */\r\n    get timer(): Timer {\r\n        return this._scene ? this._scene.timer : ILaya.timer;\r\n    }\r\n\r\n    /**\r\n     * 反序列化后会调用\r\n     */\r\n    onAfterDeserialize() { }\r\n}\r\n\r\nconst _bubbleChainPool: Array<Array<Node>> = [];\r\n\r\nexport interface INodeExtra { }\r\n","\r\nconst HALF_PI = Math.PI * 0.5;\r\nconst PI2 = Math.PI * 2;\r\n\r\n/**\r\n* <code>Ease</code> 类定义了缓动函数，以便实现 <code>Tween</code> 动画的缓动效果。\r\n*/\r\nexport class Ease {\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearIn(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearInOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 定义无加速持续运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static linearOut(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceIn(t: number, b: number, c: number, d: number): number {\r\n        return c - Ease.bounceOut(d - t, 0, c, d) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t < d * 0.5) return Ease.bounceIn(t * 2, 0, c, d) * .5 + b;\r\n        else return Ease.bounceOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 它的运动是类似一个球落向地板又弹起后，几次逐渐减小的回弹运动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static bounceOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d) < (1 / 2.75)) return c * (7.5625 * t * t) + b;\r\n        else if (t < (2 / 2.75)) return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n        else if (t < (2.5 / 2.75)) return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n        else return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始时往后运动，然后反向朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backIn(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是向后跟踪，再倒转方向并朝目标移动，稍微过冲目标，然后再次倒转方向，回来朝目标移动。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backInOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n        return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时是朝目标移动，稍微过冲，再倒转方向回来朝着目标。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ts 指定过冲量，此处数值越大，过冲越大。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static backOut(t: number, b: number, c: number, d: number, s: number = 1.70158): number {\r\n        return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticIn(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticInOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d * 0.5) == 2) return b + c;\r\n        if (!p) p = d * (.3 * 1.5);\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p)) + b;\r\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * PI2 / p) * .5 + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中的运动由按照指数方式衰减的正弦波来定义。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @param\ta 指定正弦波的幅度。\r\n     * @param\tp 指定正弦波的周期。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static elasticOut(t: number, b: number, c: number, d: number, a: number = 0, p: number = 0): number {\r\n\r\n        var s: number;\r\n        if (t == 0) return b;\r\n        if ((t /= d) == 1) return b + c;\r\n        if (!p) p = d * .3;\r\n        if (!a || (c > 0 && a < c) || (c < 0 && a < -c)) {\r\n            a = c;\r\n            s = p / 4;\r\n        } else s = p / PI2 * Math.asin(c / a);\r\n        return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * PI2 / p) + c + b);\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static strongOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineInOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * 0.5 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * Math.cos(t / d * HALF_PI) + c + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Sine 缓动方程中的运动加速度小于 Quad 方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static sineOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sin(t / d * HALF_PI) + b;\r\n    }\r\n\r\n    /**\r\n     * 以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quint 缓动方程的运动加速大于 Quart 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quintOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t * t + b;\r\n        return -c * 0.5 * ((t -= 2) * t * t * t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quart 缓动方程的运动加速大于 Cubic 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quartOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t * t + b;\r\n        return c * 0.5 * ((t -= 2) * t * t + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Cubic 缓动方程的运动加速大于 Quad 缓动方程。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static cubicOut(t: number, b: number, c: number, d: number): number {\r\n        return c * ((t = t / d - 1) * t * t + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadIn(t: number, b: number, c: number, d: number): number {\r\n        return c * (t /= d) * t + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * t * t + b;\r\n        return -c * 0.5 * ((--t) * (t - 2) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * Quad 缓动方程中的运动加速度等于 100% 缓动的时间轴补间的运动加速度，并且显著小于 Cubic 缓动方程中的运动加速度。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static quadOut(t: number, b: number, c: number, d: number): number {\r\n        return -c * (t /= d) * (t - 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoIn(t: number, b: number, c: number, d: number): number {\r\n        return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b - c * 0.001;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoInOut(t: number, b: number, c: number, d: number): number {\r\n        if (t == 0) return b;\r\n        if (t == d) return b + c;\r\n        if ((t /= d * 0.5) < 1) return c * 0.5 * Math.pow(2, 10 * (t - 1)) + b;\r\n        return c * 0.5 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 其中每个时间间隔是剩余距离减去一个固定比例部分。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static expoOut(t: number, b: number, c: number, d: number): number {\r\n        return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 方法以零速率开始运动，然后在执行时加快运动速度。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circIn(t: number, b: number, c: number, d: number): number {\r\n        return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 开始运动时速率为零，先对运动进行加速，再减速直到速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circInOut(t: number, b: number, c: number, d: number): number {\r\n        if ((t /= d * 0.5) < 1) return -c * 0.5 * (Math.sqrt(1 - t * t) - 1) + b;\r\n        return c * 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n    }\r\n\r\n    /**\r\n     * 以较快速度开始运动，然后在执行时减慢运动速度，直至速率为零。\r\n     * 缓动方程的运动加速会产生突然的速率变化。\r\n     * @param\tt 指定当前时间，介于 0 和持续时间之间（包括二者）。\r\n     * @param\tb 指定动画属性的初始值。\r\n     * @param\tc 指定动画属性的更改总计。\r\n     * @param\td 指定运动的持续时间。\r\n     * @return 指定时间的插补属性的值。\r\n     */\r\n    static circOut(t: number, b: number, c: number, d: number): number {\r\n        return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n    }\r\n\r\n}\r\n\r\n","/**\r\n * <p><code>Handler</code> 是事件处理器类。</p>\r\n * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>\r\n * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>\r\n */\r\nexport class Handler {\r\n\r\n    /**@private handler对象池*/\r\n    protected static _pool: Handler[] = [];\r\n    /**@private */\r\n    private static _gid: number = 1;\r\n\r\n    /** 执行域(this)。*/\r\n    caller: Object | null;\r\n    /** 处理方法。*/\r\n    method: Function | null;\r\n    /** 参数。*/\r\n    args: any[] | null;\r\n    /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/\r\n    once = false;\r\n\r\n    /**@private */\r\n    protected _id = 0;\r\n\r\n    /**\r\n     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。\r\n     * @param\tcaller 执行域。\r\n     * @param\tmethod 处理函数。\r\n     * @param\targs 函数参数。\r\n     * @param\tonce 是否只执行一次。\r\n     */\r\n    constructor(caller: Object | null = null, method: Function | null = null, args: any[] | null = null, once: boolean = false) {\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n\r\n    /**\r\n     * 设置此对象的指定属性值。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，执行后执行recover()进行回收。\r\n     * @return  返回 handler 本身。\r\n     */\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once = false): Handler {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器。\r\n     */\r\n    run(): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        var result: any = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 执行处理器，并携带额外数据。\r\n     * @param\tdata 附加的回调数据，可以是单数据或者Array(作为多参)。\r\n     */\r\n    runWith(data: any): any {\r\n        if (this.method == null) return null;\r\n        var id: number = this._id;\r\n        if (data == null)\r\n            var result: any = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift) result = this.method.call(this.caller, data);\r\n        else if (this.args) result = this.method.apply(this.caller, this.args.concat(data));\r\n        else result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * 清理对象引用。\r\n     */\r\n    clear(): Handler {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 清理并回收到 Handler 对象池内。\r\n     */\r\n    recover(): void {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 回调方法。\r\n     * @param\targs 携带的参数。\r\n     * @param\tonce 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。\r\n     * @return  返回创建的handler实例。\r\n     */\r\n    static create(caller: any, method: Function | null, args: any[] | null = null, once: boolean = true): Handler {\r\n        if (Handler._pool.length)\r\n            return (Handler._pool.pop() as Handler).setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\n\r\n","import { Handler } from \"./Handler\";\r\nimport { Pool } from \"./Pool\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Utils } from \"./Utils\";\r\nimport { ILaya } from \"./../../ILaya\";\r\n\r\n/**\r\n * <code>Tween</code>  是一个缓动类。使用此类能够实现对目标对象属性的渐变。\r\n */\r\nexport class Tween {\r\n    /**@private */\r\n    private static tweenMap: any[] = [];\r\n    /**@private */\r\n    private _complete: Handler;\r\n    /**@private */\r\n    private _target: any;\r\n    /**@private */\r\n    private _ease: Function;\r\n    /**@private */\r\n    private _props: any[];\r\n    /**@private */\r\n    private _duration: number;\r\n    /**@private */\r\n    private _delay: number;\r\n    /**@private */\r\n    private _startTimer: number;\r\n    /**@private */\r\n    private _usedTimer: number;\r\n    /**@private */\r\n    private _usedPool: boolean;\r\n    /**@private */\r\n    private _delayParam: any[];\r\n    /**@private 唯一标识，TimeLintLite用到*/\r\n    gid: number = 0;\r\n    /**更新回调，缓动数值发生变化时，回调变化的值*/\r\n    update: Handler;\r\n    /**重播次数，如果repeat=0，则表示无限循环播放*/\r\n    repeat: number = 1;\r\n    /**当前播放次数*/\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, true, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @param\tautoRecover 是否自动回收，默认为true，缓动结束之后自动回收到对象池。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false, autoRecover: boolean = true): Tween {\r\n        return Pool.getItemByClass(\"tween\", Tween)._create(target, props, duration, ease, complete, delay, coverBefore, false, autoRecover, true);\r\n    }\r\n\r\n    /**\r\n     * 缓动对象的props属性到目标值。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, complete: Handler = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, true, false, true);\r\n    }\r\n\r\n    /**\r\n     * 从props属性，缓动到当前状态。\r\n     * @param\ttarget 目标对象(即将更改属性值的对象)。\r\n     * @param\tprops 变化的属性列表，比如{x:100,y:20,ease:Ease.backOut,complete:Handler.create(this,onComplete),update:new Handler(this,onComplete)}。\r\n     * @param\tduration 花费的时间，单位毫秒。\r\n     * @param\tease 缓动类型，默认为匀速运动。\r\n     * @param\tcomplete 结束回调函数。\r\n     * @param\tdelay 延迟执行时间。\r\n     * @param\tcoverBefore 是否覆盖之前的缓动。\r\n     * @return\t返回Tween对象。\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function|null = null, complete: Handler|null = null, delay: number = 0, coverBefore: boolean = false): Tween {\r\n        return this._create(target, props, duration, ease, complete, delay, coverBefore, false, false, true);\r\n    }\r\n\r\n    /** @internal */\r\n    _create(target: any, props: any, duration: number, ease: Function|null, complete: Handler|null, delay: number, coverBefore: boolean, isTo: boolean, usePool: boolean, runNow: boolean): Tween {\r\n        if (!target) throw new Error(\"Tween:target is null\");\r\n        this._target = target;\r\n        this._duration = duration;\r\n        this._ease = ease || props.ease || Tween.easeNone;\r\n        this._complete = complete || props.complete;\r\n        this._delay = delay;\r\n        this._props = [];\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        this._usedPool = usePool;\r\n        this._delayParam = null;\r\n        this.update = props.update;\r\n\r\n        //判断是否覆盖\t\t\t\r\n        var gid: number = (target.$_GID || (target.$_GID = Utils.getGID()));\r\n        if (!Tween.tweenMap[gid]) {\r\n            Tween.tweenMap[gid] = [this];\r\n        } else {\r\n            if (coverBefore) Tween.clearTween(target);\r\n            Tween.tweenMap[gid].push(this);\r\n        }\r\n\r\n        if (runNow) {\r\n            if (delay <= 0) this.firstStart(target, props, isTo);\r\n            else {\r\n                this._delayParam = [target, props, isTo];\r\n                ILaya.timer.once(delay, this, this.firstStart, this._delayParam);\r\n            }\r\n        } else {\r\n            this._initProps(target, props, isTo);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private firstStart(target: any, props: any, isTo: boolean): void {\r\n        this._delayParam = null;\r\n        if (target.destroyed) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        this._initProps(target, props, isTo);\r\n        this._beginLoop();\r\n    }\r\n\r\n    private _initProps(target: any, props: any, isTo: boolean): void {\r\n        //初始化属性\r\n        for (var p in props) {\r\n            if (typeof (target[p]) == 'number') {\r\n                var start: number = isTo ? target[p] : props[p];\r\n                var end: number = isTo ? props[p] : target[p];\r\n                this._props.push([p, start, end - start]);\r\n                if (!isTo) target[p] = start;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _beginLoop(): void {\r\n        ILaya.timer.frameLoop(1, this, this._doEase);\r\n    }\r\n\r\n    /**执行缓动**/\r\n    private _doEase(): void {\r\n        this._updateEase(Browser.now());\r\n    }\r\n\r\n    /**@internal */\r\n    _updateEase(time: number): void {\r\n        var target: any = this._target;\r\n        if (!target) return;\r\n\r\n        //如果对象被销毁，则立即停止缓动\r\n        if (target.destroyed) return Tween.clearTween(target);\r\n\r\n        var usedTimer: number = this._usedTimer = time - this._startTimer - this._delay;\r\n        if (usedTimer < 0) return;\r\n        if (usedTimer >= this._duration) return this.complete();\r\n\r\n        var ratio: number = usedTimer > 0 ? this._ease(usedTimer, 0, 1, this._duration) : 0;\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + (ratio * prop[2]);\r\n        }\r\n        if (this.update) this.update.run();\r\n    }\r\n\r\n    /**设置当前执行比例**/\r\n    set progress(v: number) {\r\n        var uTime: number = v * this._duration;\r\n        this._startTimer = Browser.now() - this._delay - uTime;\r\n    }\r\n\r\n    /**\r\n     * 立即结束缓动并到终点。\r\n     */\r\n    complete(): void {\r\n        if (!this._target) return;\r\n\r\n        //立即执行初始化\r\n        ILaya.timer.runTimer(this, this.firstStart);\r\n\r\n        //缓存当前属性\r\n        var target: any = this._target;\r\n        var props: any = this._props;\r\n        var handler: Handler = this._complete;\r\n        //设置终点属性\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            target[prop[0]] = prop[1] + prop[2];\r\n        }\r\n        if (this.update) this.update.run();\r\n\r\n        this._count++;\r\n        if (this.repeat != 0 && this._count >= this.repeat) {\r\n            //清理\r\n            this.clear();\r\n            //回调\r\n            handler && handler.run();\r\n        } else {\r\n            this.restart();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停缓动，可以通过resume或restart重新开始。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._beginLoop);\r\n        ILaya.timer.clear(this, this._doEase);\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        var time: number = Browser.now();\r\n        var dTime: number;\r\n        dTime = time - this._startTimer - this._delay;\r\n        if (dTime < 0) {\r\n            this._usedTimer = dTime;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置开始时间。\r\n     * @param\tstartTime 开始时间。\r\n     */\r\n    setStartTime(startTime: number): void {\r\n        this._startTimer = startTime;\r\n    }\r\n\r\n    /**\r\n     * 清理指定目标对象上的所有缓动。\r\n     * @param\ttarget 目标对象。\r\n     */\r\n    static clearAll(target: any): void {\r\n        if (!target || !target.$_GID) return;\r\n        var tweens: any[] = Tween.tweenMap[target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                tweens[i]._clear();\r\n            }\r\n            tweens.length = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理某个缓动。\r\n     * @param\ttween 缓动对象。\r\n     */\r\n    static clear(tween: Tween): void {\r\n        tween.clear();\r\n    }\r\n\r\n    /**@private 同clearAll，废弃掉，尽量别用。*/\r\n    static clearTween(target: any): void {\r\n        Tween.clearAll(target);\r\n    }\r\n\r\n    /**\r\n     * 停止并清理当前缓动。\r\n     */\r\n    clear(): void {\r\n        if (this._target) {\r\n            this._remove();\r\n            this._clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clear(): void {\r\n        this.pause();\r\n        ILaya.timer.clear(this, this.firstStart);\r\n        this._complete = null;\r\n        this._target = null;\r\n        this._ease = null;\r\n        this._props = null;\r\n        this._delayParam = null;\r\n    this.repeat = 1;\r\n\r\n        if (this._usedPool) {\r\n            this.update = null;\r\n            Pool.recover(\"tween\", this);\r\n        }\r\n    }\r\n\r\n    /** 回收到对象池。*/\r\n    recover(): void {\r\n        this._usedPool = true;\r\n        this._clear();\r\n    }\r\n\r\n    private _remove(): void {\r\n        var tweens: any[] = Tween.tweenMap[this._target.$_GID];\r\n        if (tweens) {\r\n            for (var i: number = 0, n: number = tweens.length; i < n; i++) {\r\n                if (tweens[i] === this) {\r\n                    tweens.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重新开始暂停的缓动。\r\n     */\r\n    restart(): void {\r\n        this.pause();\r\n        this._usedTimer = 0;\r\n        this._startTimer = Browser.now();\r\n        if (this._delayParam) {\r\n            ILaya.timer.once(this._delay, this, this.firstStart, this._delayParam);\r\n            return;\r\n        }\r\n        var props: any[] = this._props;\r\n        for (var i: number = 0, n: number = props.length; i < n; i++) {\r\n            var prop: any[] = props[i];\r\n            this._target[prop[0]] = prop[1];\r\n        }\r\n        ILaya.timer.once(this._delay, this, this._beginLoop);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停的缓动。\r\n     */\r\n    resume(): void {\r\n        if (this._usedTimer >= this._duration) return;\r\n        this._startTimer = Browser.now() - this._usedTimer - this._delay;\r\n        if (this._delayParam) {\r\n            if (this._usedTimer < 0) {\r\n                ILaya.timer.once(-this._usedTimer, this, this.firstStart, this._delayParam);\r\n            } else {\r\n                this.firstStart.apply(this, <any>this._delayParam);\r\n            }\r\n        } else {\r\n            this._beginLoop();\r\n        }\r\n    }\r\n\r\n    private static easeNone(t: number, b: number, c: number, d: number): number {\r\n        return c * t / d + b;\r\n    }\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { Ease } from \"./Ease\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Tween } from \"./Tween\";\r\n\r\n/**\r\n * @private\r\n * <code>Dragging</code> 类是触摸滑动控件。\r\n */\r\nexport class Dragging {\r\n    /** 被拖动的对象。*/\r\n    target: Sprite;\r\n    /** 缓动衰减系数。*/\r\n    ratio: number = 0.92;\r\n    /** 单帧最大偏移量。*/\r\n    maxOffset: number = 60;\r\n    /** 滑动范围。*/\r\n    area: Rectangle;\r\n    /** 表示拖动是否有惯性。*/\r\n    hasInertia: boolean;\r\n    /** 橡皮筋最大值。*/\r\n    elasticDistance: number;\r\n    /** 橡皮筋回弹时间，单位为毫秒。*/\r\n    elasticBackTime: number;\r\n    /** 事件携带数据。*/\r\n    data: any;\r\n\r\n    private _dragging: boolean = false;\r\n    private _clickOnly: boolean = true;\r\n    private _elasticRateX: number;\r\n    private _elasticRateY: number;\r\n    private _lastX: number;\r\n    private _lastY: number;\r\n    private _offsetX: number;\r\n    private _offsetY: number;\r\n    private _offsets: any[];\r\n    private _tween: Tween;\r\n    private _parent: Sprite;\r\n\r\n    /**\r\n     * 开始拖拽。\r\n     * @param\ttarget 待拖拽的 <code>Sprite</code> 对象。\r\n     * @param\tarea 滑动范围。\r\n     * @param\thasInertia 拖动是否有惯性。\r\n     * @param\telasticDistance 橡皮筋最大值。\r\n     * @param\telasticBackTime 橡皮筋回弹时间，单位为毫秒。\r\n     * @param\tdata 事件携带数据。\r\n     * @param\tratio 惯性阻尼系数\r\n     */\r\n    start(target: Sprite, area: Rectangle, hasInertia: boolean, elasticDistance: number, elasticBackTime: number, data: any, ratio: number = 0.92): void {\r\n        this.clearTimer();\r\n\r\n        this.target = target;\r\n        this.area = area;\r\n        this.hasInertia = hasInertia;\r\n        this.elasticDistance = area ? elasticDistance : 0;\r\n        this.elasticBackTime = elasticBackTime;\r\n        this.data = data;\r\n        this.ratio = ratio;\r\n\r\n        this._parent = (target.parent as Sprite);\r\n\r\n        this._clickOnly = true;\r\n        this._dragging = true;\r\n        this._elasticRateX = this._elasticRateY = 1;\r\n        this._lastX = this._parent.mouseX;\r\n        this._lastY = this._parent.mouseY;\r\n\r\n        ILaya.stage.on(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.on(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.on(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.frameLoop(1, this, this.loop);\r\n    }\r\n\r\n    /**\r\n     * 清除计时器。\r\n     */\r\n    private clearTimer(): void {\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n        ILaya.systemTimer.clear(this, this.tweenMove);\r\n        if (this._tween) {\r\n            this._tween.recover();\r\n            this._tween = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止拖拽。\r\n     */\r\n    stop(): void {\r\n        if (this._dragging) {\r\n            ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n            ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n            this._dragging = false;\r\n            this.target && this.area && this.backToArea();\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 拖拽的循环处理函数。\r\n     */\r\n    private loop(): void {\r\n        var point: Point = this._parent.getMousePoint();\r\n        var mouseX: number = point.x;\r\n        var mouseY: number = point.y;\r\n        var offsetX: number = mouseX - this._lastX;\r\n        var offsetY: number = mouseY - this._lastY;\r\n\r\n        if (this._clickOnly) {\r\n            if (Math.abs(offsetX * ILaya.stage._canvasTransform.getScaleX()) > 1 || Math.abs(offsetY * ILaya.stage._canvasTransform.getScaleY()) > 1) {\r\n                this._clickOnly = false;\r\n                this._offsets || (this._offsets = []);\r\n                this._offsets.length = 0;\r\n                this.target.event(Event.DRAG_START, this.data);\r\n                //TODO:\r\n                //target._set$P(\"$_MOUSEDOWN\", false);\r\n            } else return;\r\n        } else {\r\n            this._offsets.push(offsetX, offsetY);\r\n        }\r\n        if (offsetX === 0 && offsetY === 0) return;\r\n\r\n        this._lastX = mouseX;\r\n        this._lastY = mouseY;\r\n        this.target.x += offsetX * this._elasticRateX;\r\n        this.target.y += offsetY * this._elasticRateY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n    }\r\n\r\n    /**\r\n     * 拖拽区域检测。\r\n     */\r\n    private checkArea(): void {\r\n        if (this.elasticDistance <= 0) {\r\n            this.backToArea();\r\n        } else {\r\n            if (this.target._x < this.area.x) {\r\n                var offsetX: number = this.area.x - this.target._x;\r\n            } else if (this.target._x > this.area.x + this.area.width) {\r\n                offsetX = this.target._x - this.area.x - this.area.width;\r\n            } else {\r\n                offsetX = 0;\r\n            }\r\n            this._elasticRateX = Math.max(0, 1 - (offsetX / this.elasticDistance));\r\n\r\n            if (this.target._y < this.area.y) {\r\n                var offsetY: number = this.area.y - this.target.y;\r\n            } else if (this.target._y > this.area.y + this.area.height) {\r\n                offsetY = this.target._y - this.area.y - this.area.height;\r\n            } else {\r\n                offsetY = 0;\r\n            }\r\n            this._elasticRateY = Math.max(0, 1 - (offsetY / this.elasticDistance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动至设定的拖拽区域。\r\n     */\r\n    private backToArea(): void {\r\n        this.target.x = Math.min(Math.max(this.target._x, this.area.x), this.area.x + this.area.width);\r\n        this.target.y = Math.min(Math.max(this.target._y, this.area.y), this.area.y + this.area.height);\r\n    }\r\n\r\n    /**\r\n     * 舞台的抬起事件侦听函数。\r\n     * @param\te Event 对象。\r\n     */\r\n    private onStageMouseUp(e: Event): void {\r\n        ILaya.stage.off(Event.MOUSE_UP, this, this.onStageMouseUp);\r\n        ILaya.stage.off(Event.MOUSE_OUT, this, this.onStageMouseUp);\r\n        //Laya.stage.off(Event.MOUSE_MOVE, this, onStageMouseMove);\r\n        ILaya.systemTimer.clear(this, this.loop);\r\n\r\n        if (this._clickOnly || !this.target) return;\r\n        //target.mouseEnabled = true;\r\n\r\n        if (this.hasInertia) {\r\n            //计算平均值\r\n            if (this._offsets.length < 1) {\r\n                this._offsets.push(this._parent.mouseX - this._lastX, this._parent.mouseY - this._lastY);\r\n            }\r\n\r\n            this._offsetX = this._offsetY = 0;\r\n            var len: number = this._offsets.length;\r\n            var n: number = Math.min(len, 6);\r\n            var m: number = this._offsets.length - n;\r\n            for (var i: number = len - 1; i > m; i--) {\r\n                this._offsetY += this._offsets[i--];\r\n                this._offsetX += this._offsets[i];\r\n            }\r\n\r\n            this._offsetX = this._offsetX / n * 2;\r\n            this._offsetY = this._offsetY / n * 2;\r\n\r\n            if (Math.abs(this._offsetX) > this.maxOffset) this._offsetX = this._offsetX > 0 ? this.maxOffset : -this.maxOffset;\r\n            if (Math.abs(this._offsetY) > this.maxOffset) this._offsetY = this._offsetY > 0 ? this.maxOffset : -this.maxOffset;\r\n            ILaya.systemTimer.frameLoop(1, this, this.tweenMove);\r\n        } else if (this.elasticDistance > 0) {\r\n            this.checkElastic();\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 橡皮筋效果检测。\r\n     */\r\n    private checkElastic(): void {\r\n        var tx: number = NaN;\r\n        var ty: number = NaN;\r\n        if (this.target.x < this.area.x) tx = this.area.x;\r\n        else if (this.target._x > this.area.x + this.area.width) tx = this.area.x + this.area.width;\r\n\r\n        if (this.target.y < this.area.y) ty = this.area.y;\r\n        else if (this.target._y > this.area.y + this.area.height) ty = this.area.y + this.area.height;\r\n\r\n        if (!isNaN(tx) || !isNaN(ty)) {\r\n            var obj: any = {};\r\n            if (!isNaN(tx)) obj.x = tx;\r\n            if (!isNaN(ty)) obj.y = ty;\r\n            this._tween = Tween.to(this.target, obj, this.elasticBackTime, Ease.sineOut, Handler.create(this, this.clear), 0, false, false);\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移动。\r\n     */\r\n    private tweenMove(): void {\r\n        this._offsetX *= this.ratio * this._elasticRateX;\r\n        this._offsetY *= this.ratio * this._elasticRateY;\r\n\r\n        this.target.x += this._offsetX;\r\n        this.target.y += this._offsetY;\r\n\r\n        this.area && this.checkArea();\r\n\r\n        this.target.event(Event.DRAG_MOVE, this.data);\r\n\r\n        if ((Math.abs(this._offsetX) < 1 && Math.abs(this._offsetY) < 1) || this._elasticRateX < 0.5 || this._elasticRateY < 0.5) {\r\n            ILaya.systemTimer.clear(this, this.tweenMove);\r\n            if (this.elasticDistance > 0) this.checkElastic();\r\n            else this.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 结束拖拽。\r\n     */\r\n    private clear(): void {\r\n        if (this.target) {\r\n            this.clearTimer();\r\n            var sp = this.target;\r\n            this.target = null;\r\n            this._parent = null;\r\n            sp.event(Event.DRAG_END, this.data);\r\n        }\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Utils } from \"./Utils\";\r\n\r\nexport class SpriteUtils {\r\n    /**\r\n     * @private\r\n     * 根据传入的显示对象 <code>Sprite</code> 和此显示对象上的 两个点，返回此对象上的两个点在舞台坐标系上组成的最小的矩形区域对象。\r\n     * @param\tsprite 显示对象 <code>Sprite</code>。\r\n     * @param\tx0\t点一的 X 轴坐标点。\r\n     * @param\ty0\t点一的 Y 轴坐标点。\r\n     * @param\tx1\t点二的 X 轴坐标点。\r\n     * @param\ty1\t点二的 Y 轴坐标点。\r\n     * @return 两个点在舞台坐标系组成的矩形对象 <code>Rectangle</code>。\r\n     */\r\n    static getGlobalRecByPoints(sprite: Sprite, x0: number, y0: number, x1: number, y1: number): Rectangle {\r\n        var newLTPoint: Point;\r\n        newLTPoint = Point.create().setTo(x0, y0);\r\n        newLTPoint = sprite.localToGlobal(newLTPoint);\r\n        var newRBPoint: Point;\r\n        newRBPoint = Point.create().setTo(x1, y1);\r\n        newRBPoint = sprite.localToGlobal(newRBPoint);\r\n        var rst: Rectangle = Rectangle._getWrapRec([newLTPoint.x, newLTPoint.y, newRBPoint.x, newRBPoint.y]);\r\n        newLTPoint.recover();\r\n        newRBPoint.recover();\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * 计算传入的显示对象 <code>Sprite</code> 的全局坐标系的坐标和缩放值，返回 <code>Rectangle</code> 对象存放计算出的坐标X值、Y值、ScaleX值、ScaleY值。\r\n     * @param\tsprite <code>Sprite</code> 对象。\r\n     * @return  矩形对象 <code>Rectangle</code>\r\n     */\r\n    static getGlobalPosAndScale(sprite: Sprite): Rectangle {\r\n        return SpriteUtils.getGlobalRecByPoints(sprite, 0, 0, 1, 1);\r\n    }\r\n\r\n    /**\r\n    * 获取指定区域内相对于窗口左上角的transform。\r\n    * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n    * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n    * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n    * @return\r\n    */\r\n    static getTransformRelativeToWindow(coordinateSpace: Sprite, x: number, y: number): any {\r\n        var stage = ILaya.stage;\r\n\r\n        // coordinateSpace的全局缩放、坐标\r\n        var globalTransform: Rectangle = SpriteUtils.getGlobalPosAndScale(coordinateSpace);\r\n        // canvas的transform矩阵\r\n        var canvasMatrix: Matrix = stage._canvasTransform.clone();\r\n        // 在矩阵变化前前记录的canvas的坐标\r\n        var canvasLeft: number = canvasMatrix.tx;\r\n        var canvasTop: number = canvasMatrix.ty;\r\n\r\n        // 把矩阵转回0度，得到正确的画布缩放比\r\n        canvasMatrix.rotate(-Math.PI / 180 * stage.canvasDegree);\r\n        // 组合画布缩放和舞台适配缩放\r\n        canvasMatrix.scale(stage.clientScaleX, stage.clientScaleY);\r\n        // 画布是否处于正常角度的垂直角度，-90或90度\r\n        var perpendicular: boolean = (stage.canvasDegree % 180 != 0);\r\n        var tx: number, ty: number;\r\n\r\n        if (perpendicular) {\r\n            // 在舞台上的坐标\r\n            tx = y + globalTransform.y;\r\n            ty = x + globalTransform.x;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.d;\r\n            ty *= canvasMatrix.a;\r\n\r\n            // 设置了screenMode = horizontal\r\n            if (stage.canvasDegree == 90) {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的right，画布的left是视觉上的top\r\n                tx = canvasLeft - tx;\r\n                ty += canvasTop;\r\n            }\r\n            // screenMode = vertical并且设备在横屏状态，画布旋转-90度\r\n            else {\r\n                // 在浏览器窗口上的坐标\r\n                // 此时画布的left是视觉上的left，画布的top是视觉上的bottom\r\n                tx += canvasLeft;\r\n                ty = canvasTop - ty;\r\n            }\r\n        }\r\n        // 没有canvas旋转\r\n        else {\r\n            // 在舞台上的坐标\r\n            tx = x + globalTransform.x;\r\n            ty = y + globalTransform.y;\r\n\r\n            // 在画布上的坐标\r\n            tx *= canvasMatrix.a;\r\n            ty *= canvasMatrix.d;\r\n\r\n            // 在浏览器窗口上的坐标\r\n            tx += canvasLeft;\r\n            ty += canvasTop;\r\n        }\r\n\r\n        // Safari兼容\r\n        ty += stage['_safariOffsetY'];\r\n\r\n        // 组合画布缩放和舞台适配缩放以及显示对象缩放，得到DOM原因的缩放因子\r\n        var domScaleX: number, domScaleY: number;\r\n        if (perpendicular) {\r\n            domScaleX = canvasMatrix.d * globalTransform.height;\r\n            domScaleY = canvasMatrix.a * globalTransform.width;\r\n        } else {\r\n            domScaleX = canvasMatrix.a * globalTransform.width;\r\n            domScaleY = canvasMatrix.d * globalTransform.height;\r\n        }\r\n\r\n        return { x: tx, y: ty, scaleX: domScaleX, scaleY: domScaleY };\r\n    }\r\n\r\n    /**\r\n     * 使DOM元素使用舞台内的某块区域内。\r\n     * @param\tdom\t\t\t\tDOM元素引用\r\n     * @param\tcoordinateSpace\t坐标空间，不能是Stage引用\r\n     * @param\tx\t\t\t\t相对于coordinateSpace的x坐标\r\n     * @param\ty\t\t\t\t相对于coordinateSpace的y坐标\r\n     * @param\twidth\t\t\t宽度\r\n     * @param\theight\t\t\t高度\r\n     */\r\n    static fitDOMElementInArea(dom: any, coordinateSpace: Sprite, x: number, y: number, width: number, height: number): void {\r\n        if (!dom._fitLayaAirInitialized) {\r\n            dom._fitLayaAirInitialized = true;\r\n            dom.style.transformOrigin = dom.style.webKittransformOrigin = \"left top\";\r\n            dom.style.position = \"absolute\"\r\n        }\r\n\r\n        var transform: any = SpriteUtils.getTransformRelativeToWindow(coordinateSpace, x, y);\r\n\r\n        // 设置dom样式\r\n        dom.style.transform = dom.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n        dom.style.width = width + 'px';\r\n        dom.style.height = height + 'px';\r\n        dom.style.left = transform.x + 'px';\r\n        dom.style.top = transform.y + 'px';\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 对传入的数组列表，根据子项的属性 Z 值进行重新排序。返回是否已重新排序的 Boolean 值。\r\n     * @param\tarray 子对象数组。\r\n     * @return\tBoolean 值，表示是否已重新排序。\r\n     */\r\n    static updateOrder(array: any[]): boolean {\r\n        if (!array || array.length < 2) return false;\r\n        var i: number = 1, j: number, len: number = array.length, key: number, c: Sprite;\r\n        while (i < len) {\r\n            j = i;\r\n            c = array[j];\r\n            key = array[j]._zOrder;\r\n            while (--j > -1) {\r\n                if (array[j]._zOrder > key) array[j + 1] = array[j];\r\n                else break;\r\n            }\r\n            array[j + 1] = c;\r\n            i++;\r\n        }\r\n        return true;\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { ColorFilter } from \"../filters/ColorFilter\";\r\nimport { Filter } from \"../filters/Filter\";\r\nimport { GrahamScan } from \"../maths/GrahamScan\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { RenderSprite } from \"../renders/RenderSprite\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { BoundsStyle } from \"./css/BoundsStyle\";\r\nimport { CacheStyle } from \"./css/CacheStyle\";\r\nimport { SpriteStyle } from \"./css/SpriteStyle\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Node } from \"./Node\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { Stage } from \"./Stage\";\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Dragging } from \"../utils/Dragging\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Scene } from \"./Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\n\r\n/**在显示对象上按下后调度。\r\n * @eventType Event.MOUSE_DOWN\r\n * */\r\n/*[Event(name = \"mousedown\", type = \"laya.events.Event\")]*/\r\n/**在显示对象抬起后调度。\r\n * @eventType Event.MOUSE_UP\r\n * */\r\n/*[Event(name = \"mouseup\", type = \"laya.events.Event\")]*/\r\n/**鼠标在对象身上进行移动后调度\r\n * @eventType Event.MOUSE_MOVE\r\n * */\r\n/*[Event(name = \"mousemove\", type = \"laya.events.Event\")]*/\r\n/**鼠标经过对象后调度。\r\n * @eventType Event.MOUSE_OVER\r\n * */\r\n/*[Event(name = \"mouseover\", type = \"laya.events.Event\")]*/\r\n/**鼠标离开对象后调度。\r\n * @eventType Event.MOUSE_OUT\r\n * */\r\n/*[Event(name = \"mouseout\", type = \"laya.events.Event\")]*/\r\n/**鼠标点击对象后调度。\r\n * @eventType Event.CLICK\r\n * */\r\n/*[Event(name = \"click\", type = \"laya.events.Event\")]*/\r\n/**开始拖动后调度。\r\n * @eventType Event.DRAG_START\r\n * */\r\n/*[Event(name = \"dragstart\", type = \"laya.events.Event\")]*/\r\n/**拖动中调度。\r\n * @eventType Event.DRAG_MOVE\r\n * */\r\n/*[Event(name = \"dragmove\", type = \"laya.events.Event\")]*/\r\n/**拖动结束后调度。\r\n * @eventType Event.DRAG_END\r\n * */\r\n/*[Event(name = \"dragend\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Sprite</code> 是基本的显示图形的显示列表节点。 <code>Sprite</code> 默认没有宽高，默认不接受鼠标事件。通过 <code>graphics</code> 可以绘制图片或者矢量图，支持旋转，缩放，位移等操作。<code>Sprite</code>同时也是容器类，可用来添加多个子节点。</p>\r\n * <p>注意： <code>Sprite</code> 默认没有宽高，可以通过<code>getBounds</code>函数获取；也可手动设置宽高；还可以设置<code>autoSize=true</code>，然后再获取宽高。<code>Sprite</code>的宽高一般用于进行碰撞检测和排版，并不影响显示图像大小，如果需要更改显示图像大小，请使用 <code>scaleX</code> ， <code>scaleY</code> ， <code>scale</code>。</p>\r\n * <p> <code>Sprite</code> 默认不接受鼠标事件，即<code>mouseEnabled=false</code>，但是只要对其监听任意鼠标事件，会自动打开自己以及所有父对象的<code>mouseEnabled=true</code>。所以一般也无需手动设置<code>mouseEnabled</code>。</p>\r\n * <p>LayaAir引擎API设计精简巧妙。核心显示类只有一个<code>Sprite</code>。<code>Sprite</code>针对不同的情况做了渲染优化，所以保证一个类实现丰富功能的同时，又达到高性能。</p>\r\n *\r\n * @example <caption>创建了一个 <code>Sprite</code> 实例。</caption>\r\n * package\r\n * {\r\n * \timport laya.display.Sprite;\r\n * \timport laya.events.Event;\r\n *\r\n * \tpublic class Sprite_Example\r\n * \t{\r\n * \t\tprivate var sprite:Sprite;\r\n * \t\tprivate var shape:Sprite\r\n * \t\tpublic function Sprite_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tonInit();\r\n * \t\t}\r\n * \t\tprivate function onInit():void\r\n * \t\t{\r\n * \t\t\tsprite = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n * \t\t\tsprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\r\n * \t\t\tsprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\r\n * \t\t\tsprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\r\n * \t\t\tsprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\r\n * \t\t\tsprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\r\n * \t\t\tLaya.stage.addChild(sprite);//将此 sprite 对象添加到显示列表。\r\n * \t\t\tsprite.on(Event.CLICK, this, onClickSprite);//给 sprite 对象添加点击事件侦听。\r\n\t\r\n * \t\t\tshape = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n * \t\t\tshape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\r\n * \t\t\tshape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\r\n * \t\t\tshape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\r\n * \t\t\tshape.width = 100;//设置 shape 对象的宽度。\r\n * \t\t\tshape.height = 100;//设置 shape 对象的高度。\r\n * \t\t\tshape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\r\n * \t\t\tshape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\r\n * \t\t\tLaya.stage.addChild(shape);//将此 shape 对象添加到显示列表。\r\n * \t\t\tshape.on(Event.CLICK, this, onClickShape);//给 shape 对象添加点击事件侦听。\r\n * \t\t}\r\n * \t\tprivate function onClickSprite():void\r\n * \t\t{\r\n * \t\t\ttrace(\"点击 sprite 对象。\");\r\n * \t\t\tsprite.rotation += 5;//旋转 sprite 对象。\r\n * \t\t}\r\n * \t\tprivate function onClickShape():void\r\n * \t\t{\r\n * \t\t\ttrace(\"点击 shape 对象。\");\r\n * \t\t\tshape.rotation += 5;//旋转 shape 对象。\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @example\r\n * var sprite;\r\n * var shape;\r\n * Sprite_Example();\r\n * function Sprite_Example()\r\n * {\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     onInit();\r\n * }\r\n * function onInit()\r\n * {\r\n *     sprite = new laya.display.Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n *     sprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\r\n *     sprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\r\n *     sprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\r\n *     sprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\r\n *     sprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\r\n *     Laya.stage.addChild(sprite);//将此 sprite 对象添加到显示列表。\r\n *     sprite.on(Event.CLICK, this, onClickSprite);//给 sprite 对象添加点击事件侦听。\r\n\t\r\n *     shape = new laya.display.Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n *     shape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\r\n *     shape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\r\n *     shape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\r\n *     shape.width = 100;//设置 shape 对象的宽度。\r\n *     shape.height = 100;//设置 shape 对象的高度。\r\n *     shape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\r\n *     shape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\r\n *     Laya.stage.addChild(shape);//将此 shape 对象添加到显示列表。\r\n *     shape.on(laya.events.Event.CLICK, this, onClickShape);//给 shape 对象添加点击事件侦听。\r\n * }\r\n * function onClickSprite()\r\n * {\r\n *     console.log(\"点击 sprite 对象。\");\r\n *     sprite.rotation += 5;//旋转 sprite 对象。\r\n * }\r\n * function onClickShape()\r\n * {\r\n *     console.log(\"点击 shape 对象。\");\r\n *     shape.rotation += 5;//旋转 shape 对象。\r\n * }\r\n *\r\n * @example\r\n * import Sprite = laya.display.Sprite;\r\n * class Sprite_Example {\r\n *     private sprite: Sprite;\r\n *     private shape: Sprite\r\n *     public Sprite_Example() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         this.sprite = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n *         this.sprite.loadImage(\"resource/ui/bg.png\");//加载并显示图片。\r\n *         this.sprite.x = 200;//设置 sprite 对象相对于父容器的水平方向坐标值。\r\n *         this.sprite.y = 200;//设置 sprite 对象相对于父容器的垂直方向坐标值。\r\n *         this.sprite.pivotX = 0;//设置 sprite 对象的水平方法轴心点坐标。\r\n *         this.sprite.pivotY = 0;//设置 sprite 对象的垂直方法轴心点坐标。\r\n *         Laya.stage.addChild(this.sprite);//将此 sprite 对象添加到显示列表。\r\n *         this.sprite.on(laya.events.Event.CLICK, this, this.onClickSprite);//给 sprite 对象添加点击事件侦听。\r\n\t\r\n *         this.shape = new Sprite();//创建一个 Sprite 类的实例对象 sprite 。\r\n *         this.shape.graphics.drawRect(0, 0, 100, 100, \"#ccff00\", \"#ff0000\", 2);//绘制一个有边框的填充矩形。\r\n *         this.shape.x = 400;//设置 shape 对象相对于父容器的水平方向坐标值。\r\n *         this.shape.y = 200;//设置 shape 对象相对于父容器的垂直方向坐标值。\r\n *         this.shape.width = 100;//设置 shape 对象的宽度。\r\n *         this.shape.height = 100;//设置 shape 对象的高度。\r\n *         this.shape.pivotX = 50;//设置 shape 对象的水平方法轴心点坐标。\r\n *         this.shape.pivotY = 50;//设置 shape 对象的垂直方法轴心点坐标。\r\n *         Laya.stage.addChild(this.shape);//将此 shape 对象添加到显示列表。\r\n *         this.shape.on(laya.events.Event.CLICK, this, this.onClickShape);//给 shape 对象添加点击事件侦听。\r\n *     }\r\n *     private onClickSprite(): void {\r\n *         console.log(\"点击 sprite 对象。\");\r\n *         this.sprite.rotation += 5;//旋转 sprite 对象。\r\n *     }\r\n *     private onClickShape(): void {\r\n *         console.log(\"点击 shape 对象。\");\r\n *         this.shape.rotation += 5;//旋转 shape 对象。\r\n *     }\r\n * }\r\n */\r\nexport class Sprite extends Node {\r\n    /**@internal */\r\n    _x: number = 0;\r\n    /**@internal */\r\n    _y: number = 0;\r\n    /**@internal */\r\n    _width: number = 0;\r\n    /**@internal */\r\n    _height: number = 0;\r\n    /***@internal X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    _anchorX: number = 0;\r\n    /***@internal Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    _anchorY: number = 0;\r\n    /**@internal */\r\n    _visible: boolean = true;\r\n    /**@internal 鼠标状态，0:auto,1:mouseEnabled=false,2:mouseEnabled=true。*/\r\n    _mouseState: number = 0;\r\n    /**@internal z排序，数值越大越靠前。*/\r\n    _zOrder: number = 0;\r\n    /**@internal */\r\n    _renderType: number = 0;\r\n    /**@internal */\r\n    _transform: Matrix | null = null;\r\n    /**@internal */\r\n    protected _tfChanged: boolean = false;\r\n    /**@internal */\r\n    protected _repaint: number = SpriteConst.REPAINT_NONE;\r\n    /**@internal */\r\n    private _texture: Texture | null = null;\r\n    /**@internal */\r\n    private _sizeFlag: number = 0;\r\n\r\n    //以下变量为系统调用，请不要直接使用\r\n    /**@internal */\r\n    _style: SpriteStyle = SpriteStyle.EMPTY;\r\n    /**@internal */\r\n    _cacheStyle: CacheStyle = CacheStyle.EMPTY;\r\n    /**@internal */\r\n    _boundStyle: BoundsStyle | null = null;\r\n    /**@internal */\r\n    _graphics: Graphics | null = null;\r\n\r\n    _ownGraphics: boolean = false;\r\n\r\n    /**\r\n     * <p>鼠标事件与此对象的碰撞检测是否可穿透。碰撞检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>穿透表示鼠标事件发生的位置处于本对象绘图区域内时，才算命中，而与对象宽高和值为Rectangle对象的hitArea属性无关。如果sprite.hitArea值是HitArea对象，表示显式声明了此对象的鼠标事件响应区域，而忽略对象的宽高、mouseThrough属性。</p>\r\n     * <p>影响对象鼠标事件响应区域的属性为：width、height、hitArea，优先级顺序为：hitArea(type:HitArea)>hitArea(type:Rectangle)>width/height。</p>\r\n     * @default false\t不可穿透，此对象的鼠标响应区域由width、height、hitArea属性决定。</p>\r\n     */\r\n    mouseThrough: boolean = false;\r\n    /**\r\n     * <p>指定是否自动计算宽高数据。默认值为 false 。</p>\r\n     * <p>Sprite宽高默认为0，并且不会随着绘制内容的变化而变化，如果想根据绘制内容获取宽高，可以设置本属性为true，或者通过getBounds方法获取。设置为true，对性能有一定影响。</p>\r\n     */\r\n    autoSize: boolean = false;\r\n    /**\r\n     * <p>指定鼠标事件检测是优先检测自身，还是优先检测其子对象。鼠标事件检测发生在鼠标事件的捕获阶段，此阶段引擎会从stage开始递归检测stage及其子对象，直到找到命中的目标对象或者未命中任何对象。</p>\r\n     * <p>如果为false，优先检测子对象，当有子对象被命中时，中断检测，获得命中目标。如果未命中任何子对象，最后再检测此对象；如果为true，则优先检测本对象，如果本对象没有被命中，直接中断检测，表示没有命中目标；如果本对象被命中，则进一步递归检测其子对象，以确认最终的命中目标。</p>\r\n     * <p>合理使用本属性，能减少鼠标事件检测的节点，提高性能。可以设置为true的情况：开发者并不关心此节点的子节点的鼠标事件检测结果，也就是以此节点作为其子节点的鼠标事件检测依据。</p>\r\n     * <p>Stage对象和UI的View组件默认为true。</p>\r\n     * @default false\t优先检测此对象的子对象，当递归检测完所有子对象后，仍然没有找到目标对象，最后再检测此对象。\r\n     */\r\n    hitTestPrior: boolean = false;\r\n\r\n    /** 如果节点需要加载相关的皮肤，但放在不同域，这里可以设置 **/\r\n    _skinBaseUrl: string;\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        this._style && this._style.recover();\r\n        this._cacheStyle && this._cacheStyle.recover();\r\n        this._boundStyle && this._boundStyle.recover();\r\n        this._transform && this._transform.recover();\r\n        this._style = null;\r\n        this._cacheStyle = null;\r\n        this._boundStyle = null;\r\n        this._transform = null;\r\n        this._texture && this._texture._removeReference();\r\n        this._texture = null;\r\n        this._graphics && this._ownGraphics && this._graphics.destroy();\r\n        this._graphics = null;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    get scene(): Scene {\r\n        return <Scene>this._scene;\r\n    }\r\n\r\n    /**根据zOrder进行重新排序。*/\r\n    updateZOrder(): void {\r\n        SpriteUtils.updateOrder(this._children) && this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _getBoundsStyle(): BoundsStyle {\r\n        if (!this._boundStyle) this._boundStyle = BoundsStyle.create();\r\n        return this._boundStyle;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCustomRender(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置是否开启自定义渲染，只有开启自定义渲染，才能使用customRender函数渲染。\r\n     */\r\n    set customRenderEnable(b: boolean) {\r\n        if (b) {\r\n            this._renderType |= SpriteConst.CUSTOM;\r\n            this._setCustomRender();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定显示对象是否缓存为静态图像，cacheAs时，子对象发生变化，会自动重新缓存，同时也可以手动调用reCache方法更新缓存。\r\n     * 建议把不经常变化的“复杂内容”缓存为静态图像，能极大提高渲染性能。cacheAs有\"none\"，\"normal\"和\"bitmap\"三个值可选。\r\n     * 默认为\"none\"，不做任何缓存。\r\n     * 当值为\"normal\"时，canvas模式下进行画布缓存，webgl模式下进行命令缓存。\r\n     * 当值为\"bitmap\"时，canvas模式下进行依然是画布缓存，webgl模式下使用renderTarget缓存。\r\n     * webgl下renderTarget缓存模式缺点：会额外创建renderTarget对象，增加内存开销，缓存面积有最大2048限制，不断重绘时会增加CPU开销。优点：大幅减少drawcall，渲染性能最高。\r\n     * webgl下命令缓存模式缺点：只会减少节点遍历及命令组织，不会减少drawcall数，性能中等。优点：没有额外内存开销，无需renderTarget支持。\r\n     */\r\n    get cacheAs(): string {\r\n        return this._cacheStyle.userSetCache;\r\n    }\r\n\r\n    /**@internal */\r\n    _setCacheAs(value: string): void {\r\n        //_dataf32[SpriteConst.POSCACHE] = value == \"bitmap\"?2:(value == \"normal\"?1:0);\r\n    }\r\n\r\n    set cacheAs(value: string) {\r\n        if (value === this._cacheStyle.userSetCache) return;\r\n        if ('bitmap' == value && !(this._cacheStyle.canvas instanceof HTMLCanvas)) {\r\n            this._cacheStyle.canvas = null;\r\n        }\r\n\r\n        this._getCacheStyle().userSetCache = value;\r\n\r\n        if (this.mask && value === 'normal') return;\r\n        this._setCacheAs(value);\r\n        this._checkCanvasEnable();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 更新_cnavas相关的状态\r\n     */\r\n    private _checkCanvasEnable(): void {\r\n        var tEnable: boolean = this._cacheStyle.needEnableCanvasRender();\r\n        this._getCacheStyle().enableCanvasRender = tEnable;\r\n        if (tEnable) {\r\n            if (this._cacheStyle.needBitmapCache()) {\r\n                this._cacheStyle.cacheAs = \"bitmap\";\r\n            } else {\r\n                this._cacheStyle.cacheAs = this._cacheStyle.userSetCache;\r\n            }\r\n            this._cacheStyle.reCache = true;\r\n            this._renderType |= SpriteConst.CANVAS;\r\n        } else {\r\n            this._cacheStyle.cacheAs = \"none\";\r\n            this._cacheStyle.releaseContext();\r\n            this._renderType &= ~SpriteConst.CANVAS;\r\n        }\r\n        this._setCacheAs(this._cacheStyle.cacheAs);\r\n    }\r\n\r\n    /**设置cacheAs为非空时此值才有效，staticCache=true时，子对象变化时不会自动更新缓存，只能通过调用reCache方法手动刷新。*/\r\n    get staticCache(): boolean {\r\n        return this._cacheStyle.staticCache;\r\n    }\r\n\r\n    set staticCache(value: boolean) {\r\n        this._getCacheStyle().staticCache = value;\r\n        if (!value) this.reCache();\r\n    }\r\n\r\n    /**在设置cacheAs的情况下，调用此方法会重新刷新缓存。*/\r\n    reCache(): void {\r\n        this._cacheStyle.reCache = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n    }\r\n\r\n    getRepaint(): number {\r\n        return this._repaint;\r\n    }\r\n\r\n    /**@internal */\r\n    _setX(value: number): void {\r\n        this._x = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setY(value: number): void {\r\n        this._y = value;\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的水平方向坐标值。*/\r\n    get x(): number {\r\n        return this._x;\r\n    }\r\n\r\n    set x(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._x !== value) {\r\n            this._setX(value);\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**表示显示对象相对于父容器的垂直方向坐标值。*/\r\n    get y(): number {\r\n        return this._y;\r\n    }\r\n\r\n    set y(value: number) {\r\n        if (this._destroyed) return;\r\n        if (this._y !== value) {\r\n            this._setY(value);\r\n            //_setTranformChange();\r\n            this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n            var p: Sprite = this._cacheStyle.maskParent;\r\n            if (p) {\r\n                p.repaint(SpriteConst.REPAINT_CACHE);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的宽度，单位为像素，默认为0。</p>\r\n     * <p>此宽度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际宽度。</p>\r\n     */\r\n    get width(): number {\r\n        return this.get_width();\r\n    }\r\n\r\n    set width(value: number) {\r\n        this.set_width(value);\r\n    }\r\n\r\n    set_width(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~1;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 1;\r\n        else\r\n            this._sizeFlag &= ~1;\r\n        if (this._width !== value || flag != this._sizeFlag) {\r\n            this._width = value;\r\n            this._setWidth(value);\r\n            this._setPivotX(this._anchorX * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n\r\n    get_width(): number {\r\n        if (!this.autoSize) return (this._width == 0 && (this._sizeFlag & 1) == 0 && this.texture) ? this.texture.width : this._width;\r\n        if (this.texture) return this.texture.width;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().width;\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的高度，单位为像素，默认为0。</p>\r\n     * <p>此高度用于鼠标碰撞检测，并不影响显示对象图像大小。需要对显示对象的图像进行缩放，请使用scale、scaleX、scaleY。</p>\r\n     * <p>可以通过getbounds获取显示对象图像的实际高度。</p>\r\n     */\r\n    get height(): number {\r\n        return this.get_height();\r\n    }\r\n\r\n    set height(value: number) {\r\n        this.set_height(value);\r\n    }\r\n\r\n    // for ts\r\n    set_height(value: number): void {\r\n        let flag = this._sizeFlag;\r\n        if (value == null) {\r\n            value = 0;\r\n            this._sizeFlag &= ~2;\r\n        }\r\n        else if (value == 0)\r\n            this._sizeFlag |= 2;\r\n        else\r\n            this._sizeFlag &= ~2;\r\n        if (this._height !== value || flag != this._sizeFlag) {\r\n            this._height = value;\r\n            this._setHeight(value);\r\n            this._setPivotY(this._anchorY * value);\r\n            if (this._graphics) this._graphics._clearBoundsCache(true);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_height(): number {\r\n        if (!this.autoSize) return (this._height == 0 && (this._sizeFlag & 2) == 0 && this.texture) ? this.texture.height : this._height;\r\n        if (this.texture) return this.texture.height;\r\n        if (!this._graphics && this._children.length === 0) return 0;\r\n        return this.getSelfBounds().height;\r\n    }\r\n\r\n    get _isWidthSet() {\r\n        return this._width != 0 || (this._sizeFlag & 1) != 0;\r\n    }\r\n\r\n    get _isHeightSet() {\r\n        return this._height != 0 || (this._sizeFlag & 2) != 0;\r\n    }\r\n\r\n    /**@internal */\r\n    _setWidth(value: number): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _setHeight(value: number): void {\r\n    }\r\n\r\n    protected _shouldRefreshLayout() {\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示宽度（以像素为单位）。</p>\r\n     */\r\n    get displayWidth(): number {\r\n        return this.width * this.scaleX;\r\n    }\r\n\r\n    /**\r\n     * <p>对象的显示高度（以像素为单位）。</p>\r\n     */\r\n    get displayHeight(): number {\r\n        return this.height * this.scaleY;\r\n    }\r\n\r\n    /**\r\n     * 设置对象bounds大小，如果有设置，则不再通过getBounds计算，合理使用能提高性能。\r\n     * @param\tbound bounds矩形区域\r\n     */\r\n    setSelfBounds(bound: Rectangle): void {\r\n        this._getBoundsStyle().userBounds = bound;\r\n    }\r\n\r\n    /**\r\n     * <p>获取本对象在父容器坐标系的矩形显示区域。</p>\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getBounds(): Rectangle {\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._boundPointsToParent());\r\n    }\r\n\r\n    /**\r\n     * 获取本对象在自己坐标系的矩形显示区域。\r\n     * <p><b>注意：</b>计算量较大，尽量少用。</p>\r\n     * @return 矩形区域。\r\n     */\r\n    getSelfBounds(): Rectangle {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds;\r\n        if (!this._graphics && this._children.length === 0 && !this._texture)\r\n            return Rectangle.TEMP.setTo(0, 0, this.width, this.height); // 如果没有graphics则取对象指定的大小。原来是0000\r\n        return this._getBoundsStyle().bounds = Rectangle._getWrapRec(this._getBoundPointsM(false));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取本对象在父容器坐标系的显示区域多边形顶点列表。\r\n     * 当显示对象链中有旋转时，返回多边形顶点列表，无旋转时返回矩形的四个顶点。\r\n     * @param ifRotate\t（可选）之前的对象链中是否有旋转。\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _boundPointsToParent(ifRotate: boolean = false): any[] {\r\n        let pX: number = 0, pY: number = 0;\r\n        if (this._style) {\r\n            pX = this.pivotX;\r\n            pY = this.pivotY;\r\n            ifRotate = ifRotate || (this._style.rotation !== 0);\r\n            if (this._style.scrollRect) {\r\n                pX += this._style.scrollRect.x;\r\n                pY += this._style.scrollRect.y;\r\n            }\r\n        }\r\n        let pList: any[] = this._getBoundPointsM(ifRotate);\r\n        if (!pList || pList.length < 1) return pList;\r\n\r\n        if (pList.length != 8) {\r\n            pList = ifRotate ? GrahamScan.scanPList(pList) : Rectangle._getWrapRec(pList, Rectangle.TEMP)._getBoundPoints();\r\n        }\r\n\r\n        if (!this.transform) {\r\n            Utils.transPointList(pList, this._x - pX, this._y - pY);\r\n            return pList;\r\n        }\r\n        let tPoint = Point.TEMP;\r\n        let len = pList.length;\r\n        for (let i = 0; i < len; i += 2) {\r\n            tPoint.x = pList[i];\r\n            tPoint.y = pList[i + 1];\r\n            this.toParentPoint(tPoint);\r\n            pList[i] = tPoint.x;\r\n            pList[i + 1] = tPoint.y;\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * 返回此实例中的绘图对象（ <code>Graphics</code> ）的显示区域，不包括子对象。\r\n     * @param realSize\t（可选）使用图片的真实大小，默认为false\r\n     * @return 一个 Rectangle 对象，表示获取到的显示区域。\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        if (!this._graphics) return Rectangle.TEMP.setTo(0, 0, 0, 0);\r\n        return this._graphics.getBounds(realSize);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取自己坐标系的显示区域多边形顶点列表\r\n     * @param ifRotate\t（可选）当前的显示对象链是否由旋转\r\n     * @return 顶点列表。结构：[x1,y1,x2,y2,x3,y3,...]。\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        if (this._boundStyle && this._boundStyle.userBounds) return this._boundStyle.userBounds._getBoundPoints();\r\n        if (!this._boundStyle) this._getBoundsStyle();\r\n        let rst = this._boundStyle.temBM;\r\n        if (!rst) rst = this._boundStyle.temBM = [];\r\n        if (this._style.scrollRect) {\r\n            rst.length = 0;\r\n            var rec: Rectangle = Rectangle.TEMP;\r\n            rec.copyFrom(this._style.scrollRect);\r\n            rst.push(...rec._getBoundPoints());\r\n            return rst;\r\n        }\r\n        let pList: any[];\r\n        if (this._graphics) {\r\n            pList = this._graphics.getBoundPoints();\r\n        } else {\r\n            rst.length = 0;\r\n            pList = rst;\r\n        }\r\n        if (this._texture) {\r\n            rec = Rectangle.TEMP;\r\n            rec.setTo(0, 0, this.width || this._texture.width, this.height || this._texture.height);\r\n            pList.push(...rec._getBoundPoints());\r\n        }\r\n        //处理子对象区域\r\n        let chidren = this._children;\r\n        for (let i = 0, n = chidren.length; i < n; i++) {\r\n            let child = <Sprite>chidren[i]; //_visible===true隐含了是Sprite\r\n            if (child._visible === true && child._cacheStyle.maskParent != this) {\r\n                let cList = child._boundPointsToParent(ifRotate);\r\n                if (cList) {\r\n                    if (pList)\r\n                        pList.push(...cList);\r\n                    else\r\n                        pList = cList;\r\n                }\r\n            }\r\n        }\r\n        return pList;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 获取cache数据。\r\n     * @return  cache数据 CacheStyle 。\r\n     */\r\n    _getCacheStyle(): CacheStyle {\r\n        this._cacheStyle === CacheStyle.EMPTY && (this._cacheStyle = CacheStyle.create());\r\n        return this._cacheStyle;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 获取样式。\r\n     * @return  样式 Style 。\r\n     */\r\n    getStyle(): SpriteStyle {\r\n        this._style === SpriteStyle.EMPTY && (this._style = SpriteStyle.create());\r\n        return this._style;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置样式。\r\n     * @param\tvalue 样式。\r\n     */\r\n    setStyle(value: SpriteStyle): void {\r\n        this._style = value;\r\n    }\r\n\r\n    /**X轴缩放值，默认值为1。设置为负数，可以实现水平反转效果，比如scaleX=-1。*/\r\n    get scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set scaleX(value: number) {\r\n        this.set_scaleX(value);\r\n    }\r\n\r\n    /**Y轴缩放值，默认值为1。设置为负数，可以实现垂直反转效果，比如scaleX=-1。*/\r\n    get scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n    set scaleY(value: number) {\r\n        this.set_scaleY(value);\r\n    }\r\n\r\n    set_scaleX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX !== value) {\r\n            this._setScaleX(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleX(): number {\r\n        return this._style.scaleX;\r\n    }\r\n\r\n    set_scaleY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleY !== value) {\r\n            this._setScaleY(value);\r\n            this._setTranformChange();\r\n            this._shouldRefreshLayout();\r\n        }\r\n    }\r\n    get_scaleY(): number {\r\n        return this._style.scaleY;\r\n    }\r\n\r\n\r\n    /**@internal */\r\n    _setScaleX(value: number): void {\r\n        this._style.scaleX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setScaleY(value: number): void {\r\n        this._style.scaleY = value;\r\n    }\r\n\r\n    /**旋转角度，默认值为0。以角度为单位。*/\r\n    get rotation(): number {\r\n        return this._style.rotation;\r\n    }\r\n\r\n    set rotation(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.rotation !== value) {\r\n            this._setRotation(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setRotation(value: number): void {\r\n        this._style.rotation = value;\r\n    }\r\n\r\n    /**水平倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewX(): number {\r\n        return this._style.skewX;\r\n    }\r\n\r\n    set skewX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewX !== value) {\r\n            this._setSkewX(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewX(value: number): void {\r\n        this._style.skewX = value;\r\n    }\r\n\r\n    /**垂直倾斜角度，默认值为0。以角度为单位。*/\r\n    get skewY(): number {\r\n        return this._style.skewY;\r\n    }\r\n\r\n    set skewY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.skewY !== value) {\r\n            this._setSkewY(value);\r\n            this._setTranformChange();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setSkewY(value: number): void {\r\n        this._style.skewY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _createTransform(): Matrix {\r\n        return Matrix.create();\r\n    }\r\n\r\n    /**@private */\r\n    protected _adjustTransform(): Matrix {\r\n        this._tfChanged = false;\r\n        var style: SpriteStyle = this._style;\r\n        var sx: number = style.scaleX, sy: number = style.scaleY;\r\n        var sskx: number = style.skewX;\r\n        var ssky: number = style.skewY;\r\n        var rot: number = style.rotation;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        if (rot || sx !== 1 || sy !== 1 || sskx !== 0 || ssky !== 0) {\r\n            m._bTransform = true;\r\n            var skx: number = (rot - sskx) * 0.0174532922222222;//laya.CONST.PI180;\r\n            var sky: number = (rot + ssky) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            m.a = sx * cx;\r\n            m.b = sx * ssx;\r\n            m.c = -sy * cy;\r\n            m.d = sy * ssy;\r\n            m.tx = m.ty = 0;\r\n        } else {\r\n            m.identity();\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        return m;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTransform(value: Matrix): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>对象的矩阵信息。通过设置矩阵可以实现节点旋转，缩放，位移效果。</p>\r\n     * <p>矩阵更多信息请参考 <code>Matrix</code></p>\r\n     */\r\n    get transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set transform(value: Matrix) {\r\n        this.set_transform(value);\r\n    }\r\n\r\n    get_transform(): Matrix {\r\n        return this._tfChanged ? this._adjustTransform() : this._transform;\r\n    }\r\n\r\n    set_transform(value: Matrix): void {\r\n        this._tfChanged = false;\r\n        var m: Matrix = this._transform || (this._transform = this._createTransform());\r\n        value.copyTo(m);\r\n        this._setTransform(m);\r\n        //设置transform时重置x,y\r\n        if (value) {\r\n            this._x = m.tx;\r\n            this._y = m.ty;\r\n            m.tx = m.ty = 0;\r\n        }\r\n        if (value) this._renderType |= SpriteConst.TRANSFORM;\r\n        else {\r\n            this._renderType &= ~SpriteConst.TRANSFORM;\r\n        }\r\n        this.parentRepaint();\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotX(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotX = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotX(): number {\r\n        return this._style.pivotX;\r\n    }\r\n\r\n    /**@internal */\r\n    _setPivotY(value: number): void {\r\n        var style: SpriteStyle = this.getStyle();\r\n        style.pivotY = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _getPivotY(): number {\r\n        return this._style.pivotY;\r\n    }\r\n\r\n    /**X轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotX(): number {\r\n        return this._getPivotX();\r\n    }\r\n\r\n    set pivotX(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotX != value) {\r\n            this._setPivotX(value);\r\n            let t = this.width;\r\n            if (t != 0) this._anchorX = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**Y轴 轴心点的位置，单位为像素，默认为0。轴心点会影响对象位置，缩放中心，旋转中心。*/\r\n    get pivotY(): number {\r\n        return this._getPivotY();\r\n    }\r\n\r\n    set pivotY(value: number) {\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.pivotY != value) {\r\n            this._setPivotY(value);\r\n            let t = this.height;\r\n            if (t != 0) this._anchorY = value / t;\r\n            this._shouldRefreshLayout();\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n    /**X锚点，值为0-1，设置anchorX值最终通过pivotX值来改变节点轴心点。*/\r\n    get anchorX(): number {\r\n        return this.get_anchorX();\r\n    }\r\n\r\n    get_anchorX(): number {\r\n        return this._anchorX;\r\n    }\r\n\r\n    set anchorX(value: number) {\r\n        this.set_anchorX(value);\r\n    }\r\n\r\n    set_anchorX(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            if (value != null) {\r\n                this._setPivotX(value * this.width);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**Y锚点，值为0-1，设置anchorY值最终通过pivotY值来改变节点轴心点。*/\r\n    get anchorY(): number {\r\n        return this.get_anchorY();\r\n    }\r\n\r\n    get_anchorY(): number {\r\n        return this._anchorY;\r\n    }\r\n\r\n    set anchorY(value: number) {\r\n        this.set_anchorY(value);\r\n    }\r\n\r\n    set_anchorY(value: number) {\r\n        if (isNaN(value))\r\n            value = null;\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            if (value != null) {\r\n                this._setPivotY(value * this.height);\r\n                this._shouldRefreshLayout();\r\n                this.repaint();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _setAlpha(value: number): void {\r\n        if (this._style.alpha !== value) {\r\n            var style: SpriteStyle = this.getStyle();\r\n            style.alpha = value;\r\n            if (value !== 1) this._renderType |= SpriteConst.ALPHA;\r\n            else this._renderType &= ~SpriteConst.ALPHA;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    _getAlpha(): number {\r\n        return this._style.alpha;\r\n    }\r\n\r\n    /**透明度，值为0-1，默认值为1，表示不透明。更改alpha值会影响drawcall。*/\r\n    get alpha(): number {\r\n        return this._getAlpha();\r\n    }\r\n\r\n    set alpha(value: number) {\r\n        value = value < 0 ? 0 : (value > 1 ? 1 : value);\r\n        this._setAlpha(value);\r\n    }\r\n\r\n    /**表示是否可见，默认为true。如果设置不可见，节点将不被渲染。*/\r\n    get visible(): boolean {\r\n        return this.get_visible();\r\n    }\r\n\r\n    set visible(value: boolean) {\r\n        this.set_visible(value);\r\n    }\r\n\r\n    get_visible(): boolean {\r\n        return this._visible;\r\n    }\r\n\r\n    set_visible(value: boolean): void {\r\n        if (this._visible !== value) {\r\n            this._visible = value;\r\n            this.parentRepaint(SpriteConst.REPAINT_ALL);\r\n        }\r\n    }\r\n\r\n    /**指定要使用的混合模式。目前只支持\"lighter\"。*/\r\n    get blendMode(): string {\r\n        return this._style.blendMode;\r\n    }\r\n\r\n    set blendMode(value: string) {\r\n        if (this.getStyle().blendMode != value) {\r\n            this.getStyle().blendMode = value;\r\n            if (value && value != \"source-over\")\r\n                this._renderType |= SpriteConst.BLEND;\r\n            else\r\n                this._renderType &= ~SpriteConst.BLEND;\r\n            this.parentRepaint();\r\n        }\r\n    }\r\n\r\n    /**绘图对象。封装了绘制位图和矢量图的接口，Sprite所有的绘图操作都通过Graphics来实现的。*/\r\n    get graphics(): Graphics {\r\n        if (!this._graphics) {\r\n            this.graphics = new Graphics();\r\n            this._ownGraphics = true;\r\n        }\r\n        return this._graphics;\r\n    }\r\n\r\n    set graphics(value: Graphics) {\r\n        this.setGraphics(value, false);\r\n    }\r\n\r\n    setGraphics(value: Graphics, transferOwnership: boolean) {\r\n        if (this._graphics) {\r\n            this._graphics._sp = null;\r\n            if (this._ownGraphics)\r\n                this._graphics.destroy();\r\n        }\r\n        this._ownGraphics = transferOwnership;\r\n        this._graphics = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.GRAPHICS;\r\n            value._sp = this;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.GRAPHICS;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * <p>显示对象的滚动矩形范围，具有裁剪效果(如果只想限制子对象渲染区域，请使用viewport)</p>\r\n     * <p> srollRect和viewport的区别：<br/>\r\n     * 1.srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2.设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     */\r\n    get scrollRect(): Rectangle {\r\n        return this._style.scrollRect;\r\n    }\r\n\r\n    set scrollRect(value: Rectangle) {\r\n        if (this.getStyle().scrollRect == null && value == null)\r\n            return;\r\n\r\n        this.getStyle().scrollRect = value;\r\n        //viewport = value;\r\n        if (value) {\r\n            this._renderType |= SpriteConst.CLIP;\r\n        } else {\r\n            this._renderType &= ~SpriteConst.CLIP;\r\n        }\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * <p>设置坐标位置。相当于分别设置x和y属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pos(...).scale(...);</p>\r\n     * @param\tx\t\t\tX轴坐标。\r\n     * @param\ty\t\t\tY轴坐标。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.x=value进行赋值，极速模式直接调用内部函数处理，如果未重写x,y属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pos(x: number, y: number, speedMode: boolean = false): Sprite {\r\n        if (this._x !== x || this._y !== y) {\r\n            if (this._destroyed) return this;\r\n            if (speedMode) {\r\n                this._setX(x);\r\n                this._setY(y);\r\n                this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n                var p: Sprite = this._cacheStyle.maskParent;\r\n                if (p) {\r\n                    p.repaint(SpriteConst.REPAINT_CACHE);\r\n                }\r\n            } else {\r\n                this.x = x;\r\n                this.y = y;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置轴心点。相当于分别设置pivotX和pivotY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.pivot(...).pos(50, 100);</p>\r\n     * @param\tx X轴心点。\r\n     * @param\ty Y轴心点。\r\n     * @return\t返回对象本身。\r\n     */\r\n    pivot(x: number, y: number): Sprite {\r\n        this.pivotX = x;\r\n        this.pivotY = y;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置宽高。相当于分别设置width和height属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.size(...).pos(50, 100);</p>\r\n     * @param\twidth 宽度值。\r\n     * @param\thegiht 高度值。\r\n     * @return\t返回对象本身。\r\n     */\r\n    size(width: number, height: number): Sprite {\r\n        this.width = width;\r\n        this.height = height;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置缩放。相当于分别设置scaleX和scaleY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.scale(...).pos(50, 100);</p>\r\n     * @param\tscaleX\t\tX轴缩放比例。\r\n     * @param\tscaleY\t\tY轴缩放比例。\r\n     * @param \tspeedMode\t（可选）是否极速模式，正常是调用this.scaleX=value进行赋值，极速模式直接调用内部函数处理，如果未重写scaleX,scaleY属性，建议设置为急速模式性能更高。\r\n     * @return\t返回对象本身。\r\n     */\r\n    scale(scaleX: number, scaleY: number, speedMode?: boolean): Sprite {\r\n        if (this._destroyed) return this;\r\n        var style: SpriteStyle = this.getStyle();\r\n        if (style.scaleX != scaleX || style.scaleY != scaleY) {\r\n            if (speedMode) {\r\n                this._setScaleX(scaleX);\r\n                this._setScaleY(scaleY);\r\n                this._setTranformChange();\r\n                this._shouldRefreshLayout();\r\n            } else {\r\n                this.scaleX = scaleX;\r\n                this.scaleY = scaleY;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>设置倾斜角度。相当于分别设置skewX和skewY属性。</p>\r\n     * <p>因为返回值为Sprite对象本身，所以可以使用如下语法：spr.skew(...).pos(50, 100);</p>\r\n     * @param\tskewX 水平倾斜角度。\r\n     * @param\tskewY 垂直倾斜角度。\r\n     * @return\t返回对象本身\r\n     */\r\n    skew(skewX: number, skewY: number): Sprite {\r\n        this.skewX = skewX;\r\n        this.skewY = skewY;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    render(ctx: Context, x: number, y: number): void {\r\n        RenderSprite.renders[this._renderType]._fun(this, ctx, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    /**\r\n     * <p>绘制 当前<code>Sprite</code> 到 <code>Canvas</code> 上，并返回一个HtmlCanvas。</p>\r\n     * <p>绘制的结果可以当作图片源，再次绘制到其他Sprite里面，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * var sp:Sprite = new Sprite();//创建精灵\r\n     * sp.graphics.drawTexture(htmlCanvas.getTexture());//把截图绘制到精灵上\r\n     * Laya.stage.addChild(sp);//把精灵显示到舞台\r\n     *\r\n     * <p>也可以获取原始图片数据，分享到网上，从而实现截图效果，示例：</p>\r\n     *\r\n     * var htmlCanvas:HTMLCanvas = sprite.drawToCanvas(100, 100, 0, 0);//把精灵绘制到canvas上面\r\n     * htmlCanvas.toBase64(\"image/png\",0.9);//打印图片base64信息，可以发给服务器或者保存为图片\r\n     *\r\n     * @param\tcanvasWidth 画布宽度。\r\n     * @param\tcanvasHeight 画布高度。\r\n     * @param\tx 绘制的 X 轴偏移量。\r\n     * @param\ty 绘制的 Y 轴偏移量。\r\n     * @return  HTMLCanvas 对象。\r\n     */\r\n    drawToCanvas(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        //console.log('drawToCanvas is deprecated, please use drawToTexture');\r\n        return Sprite.drawToCanvas(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY);\r\n    }\r\n\r\n    /**\r\n     * 绘制到一个Texture对象\r\n     * @param canvasWidth \r\n     * @param canvasHeight \r\n     * @param offsetX \r\n     * @param offsetY \r\n     */\r\n    drawToTexture(canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        let res = Sprite.drawToTexture(this, this._renderType, canvasWidth, canvasHeight, offsetX, offsetY, rt);\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 把当前对象渲染到指定的贴图上。贴图由外部指定，避免每次都创建。\r\n     * @param offx \r\n     * @param offy \r\n     * @param tex 输出渲染结果\r\n     */\r\n    drawToTexture3D(offx: number, offy: number, tex: Texture2D) {\r\n        throw 'not implement'\r\n    }\r\n\r\n\r\n    /**\r\n     * @private\r\n     * 绘制到画布。\r\n     */\r\n    static drawToCanvas(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): HTMLCanvas {\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx: Context = new Context();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        ctx.asBitmap = true;\r\n        ctx._targets.start();\r\n        ctx._targets.clear(0, 0, 0, 0);\r\n        RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n        ctx.flush();\r\n        ctx._targets.end();\r\n        ctx._targets.restore();\r\n        var dt: Uint8Array = ctx._targets.getData(0, 0, canvasWidth, canvasHeight) as Uint8Array;\r\n        ctx.destroy();\r\n        var imgdata: any = new ImageData(canvasWidth, canvasHeight);;\t//创建空的imagedata。因为下面要翻转，所以不直接设置内容\r\n        //翻转getData的结果。\r\n        var lineLen: number = canvasWidth * 4;\r\n        var temp: Uint8Array = new Uint8Array(lineLen);\r\n        var dst: Uint8Array = imgdata.data;\r\n        var y: number = canvasHeight - 1;\r\n        var off: number = y * lineLen;\r\n        var srcoff: number = 0;\r\n        for (; y >= 0; y--) {\r\n            dst.set(dt.subarray(srcoff, srcoff + lineLen), off);\r\n            off -= lineLen;\r\n            srcoff += lineLen;\r\n        }\r\n        //imgdata.data.set(dt);\r\n        //画到2d画布上\r\n        var canv: HTMLCanvas = new HTMLCanvas(true);\r\n        canv.size(canvasWidth, canvasHeight);\r\n        var ctx2d: CanvasRenderingContext2D = <CanvasRenderingContext2D>(canv.getContext('2d') as any);\r\n        ctx2d.putImageData(imgdata, 0, 0);;\r\n        return canv;\r\n    }\r\n\r\n    static drawtocanvCtx: Context;\r\n    /**\r\n     * @private \r\n     * \r\n     */\r\n    static drawToTexture(sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number, rt: RenderTexture2D | null = null): Texture | RenderTexture2D {\r\n        if (!Sprite.drawtocanvCtx) {\r\n            Sprite.drawtocanvCtx = new Context();\r\n        }\r\n        offsetX -= sprite.x;\r\n        offsetY -= sprite.y;\r\n        offsetX |= 0;\r\n        offsetY |= 0;\r\n        canvasWidth |= 0;\r\n        canvasHeight |= 0;\r\n        var ctx = rt ? Sprite.drawtocanvCtx : new Context();\r\n        ctx.clear();\r\n        ctx.size(canvasWidth, canvasHeight);\r\n        if (rt) {\r\n            ctx._targets = rt;\r\n        } else {\r\n            ctx.asBitmap = true;\r\n        }\r\n        let texRT;\r\n        if (ctx._targets) {\r\n            ctx._targets.start();\r\n            let color = RenderTexture2D._clearColor;\r\n            ctx._targets.clear(color.r, color.g, color.b, color.a);\r\n            ctx._drawingToTexture = true;\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx._drawingToTexture = false;\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            if (!rt)\r\n                texRT = ctx._targets;\r\n            ctx._targets = null;//IDE闪\r\n        }\r\n        if (!rt) {\r\n            var rtex: Texture = new Texture(((<Texture2D>(ctx._targets as any))) ? ((<Texture2D>(ctx._targets as any))) : texRT, Texture.INV_UV);\r\n            ctx.destroy(true);// 保留 _targets\r\n            return rtex;\r\n        }\r\n        sprite._repaint = 0;\r\n        return rt;\r\n    }\r\n\r\n    /**\r\n     * <p>自定义更新、呈现显示对象。一般用来扩展渲染模式，请合理使用，可能会导致在加速器上无法渲染。</p>\r\n     * <p><b>注意</b>不要在此函数内增加或删除树节点，否则会对树节点遍历造成影响。</p>\r\n     * @param\tcontext  渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    customRender(context: Context, x: number, y: number): void {\r\n        //_renderType |= SpriteConst.CUSTOM;\r\n        this._repaint = SpriteConst.REPAINT_ALL;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 应用滤镜。\r\n     */\r\n    _applyFilters(): void {\r\n        // canvas 模式不支持\r\n    }\r\n\r\n    /**滤镜集合。可以设置多个滤镜组合。*/\r\n    get filters(): any[] {\r\n        return this._cacheStyle.filters;\r\n    }\r\n\r\n    set filters(value: any[]) {\r\n        value && value.length === 0 && (value = null);\r\n        this._getCacheStyle().filters = value ? value.slice() : null;\r\n        if (value)\r\n            this._renderType |= SpriteConst.FILTERS;\r\n        else\r\n            this._renderType &= ~SpriteConst.FILTERS;\r\n\r\n        if (value && value.length > 0) {\r\n            if (!this._getBit(NodeFlags.DISPLAY)) this._setBitUp(NodeFlags.DISPLAY);\r\n            if (!(value.length == 1 && (value[0] instanceof ColorFilter))) {\r\n                this._getCacheStyle().cacheForFilters = true;\r\n                this._checkCanvasEnable();\r\n            }\r\n        } else {\r\n            if (this._cacheStyle.cacheForFilters) {\r\n                this._cacheStyle.cacheForFilters = false;\r\n                this._checkCanvasEnable();\r\n            }\r\n        }\r\n        this._getCacheStyle().hasGlowFilter = this._isHaveGlowFilter();\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 查看当前原件中是否包含发光滤镜。\r\n     * @return 一个 Boolean 值，表示当前原件中是否包含发光滤镜。\r\n     */\r\n    _isHaveGlowFilter(): boolean {\r\n        var i: number, len: number;\r\n        if (this.filters) {\r\n            for (i = 0; i < this.filters.length; i++) {\r\n                if (this.filters[i].type == Filter.GLOW) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, len = this._children.length; i < len; i++) {\r\n            if ((<Sprite>this._children[i])._isHaveGlowFilter()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 把本地坐标转换为相对stage的全局坐标。\r\n     * @param point\t\t\t\t本地坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    localToGlobal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint === true) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            point = ele.toParentPoint(point);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 把stage的全局坐标转换为本地坐标。\r\n     * @param point\t\t\t\t全局坐标点。\r\n     * @param createNewPoint\t（可选）是否创建一个新的Point对象作为返回值，默认为false，使用输入的point对象返回，减少对象创建开销。\r\n     * @param globalNode\t\tglobal节点，默认为Laya.stage\r\n     * @return 转换后的坐标的点。\r\n     */\r\n    globalToLocal(point: Point, createNewPoint: boolean = false, globalNode: Sprite | null = null): Point {\r\n        //if (!_displayedInStage || !point) return point;\r\n        if (createNewPoint) {\r\n            point = new Point(point.x, point.y);\r\n        }\r\n        var ele: Sprite = this;\r\n        var list: any[] = [];\r\n        globalNode = globalNode || ILaya.stage;\r\n        while (ele && !ele._destroyed) {\r\n            if (ele == globalNode) break;\r\n            list.push(ele);\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        var i: number = list.length - 1;\r\n        while (i >= 0) {\r\n            ele = list[i];\r\n            point = ele.fromParentPoint(point);\r\n            i--;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将本地坐标系坐标转转换到父容器坐标系。\r\n     * @param point 本地坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    toParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this.pivotX;\r\n        point.y -= this.pivotY;\r\n        if (this.transform) {\r\n            this._transform.transformPoint(point);\r\n        }\r\n        point.x += this._x;\r\n        point.y += this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x -= scroll.x;\r\n            point.y -= scroll.y;\r\n        }\r\n        return point;\r\n    }\r\n\r\n    /**\r\n     * 将父容器坐标系坐标转换到本地坐标系。\r\n     * @param point 父容器坐标点。\r\n     * @return  转换后的点。\r\n     */\r\n    fromParentPoint(point: Point): Point {\r\n        if (!point) return point;\r\n        point.x -= this._x;\r\n        point.y -= this._y;\r\n        var scroll: Rectangle = this._style.scrollRect;\r\n        if (scroll) {\r\n            point.x += scroll.x;\r\n            point.y += scroll.y;\r\n        }\r\n        if (this.transform) {\r\n            //_transform.setTranslate(0,0);\r\n            this._transform.invertTransformPoint(point);\r\n        }\r\n        point.x += this.pivotX;\r\n        point.y += this.pivotY;\r\n        return point;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string) {\r\n        super.onStartListeningToType(type);\r\n\r\n        //如果是鼠标事件，则设置自己和父对象为可接受鼠标交互事件\r\n        if (this._mouseState !== 1 && Event.isMouseEvent(type)) {\r\n            this.mouseEnabled = true;\r\n            this._setBit(NodeFlags.HAS_MOUSE, true);\r\n            if (this._parent) {\r\n                this._onDisplay();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    protected _onDisplay(v?: boolean): void {\r\n        if (this._mouseState !== 1) {\r\n            var ele: Sprite = this;\r\n            ele = (<Sprite>ele.parent);\r\n            while (ele && ele._mouseState !== 1) {\r\n                if (ele._getBit(NodeFlags.HAS_MOUSE)) break;\r\n                ele.mouseEnabled = true;\r\n                ele._setBit(NodeFlags.HAS_MOUSE, true);\r\n                ele = (<Sprite>ele.parent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _setParent(value: Node): void {\r\n        super._setParent(value);\r\n        if (value && this._getBit(NodeFlags.HAS_MOUSE)) {\r\n            this._onDisplay();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>加载并显示一个图片。相当于加载图片后，设置texture属性</p>\r\n     * <p>注意：2.0改动：多次调用，只会显示一个图片（1.0会显示多个图片）,x,y,width,height参数取消。</p>\r\n     * @param url\t\t图片地址。\r\n     * @param complete\t（可选）加载完成回调。\r\n     * @return\t返回精灵对象本身。\r\n     */\r\n    loadImage(url: string, complete: Handler = null): Sprite {\r\n        if (!url) {\r\n            this.texture = null;\r\n            this.repaint(SpriteConst.REPAINT_ALL);\r\n            complete && complete.run();\r\n        } else {\r\n            let tex = ILaya.loader.getRes(url);\r\n            if (tex) {\r\n                this.texture = tex;\r\n                this.repaint(SpriteConst.REPAINT_ALL);\r\n                complete && complete.run();\r\n            }\r\n            else {\r\n                if (this._skinBaseUrl)\r\n                    url = URL.formatURL(url, this._skinBaseUrl);\r\n                ILaya.loader.load(url).then((tex: Texture) => {\r\n                    this.texture = tex;\r\n                    this.repaint(SpriteConst.REPAINT_ALL);\r\n                    complete && complete.run();\r\n                });\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 根据图片地址创建一个新的 <code>Sprite</code> 对象用于加载并显示此图片。\r\n     * @param\turl 图片地址。\r\n     * @return\t返回新的 <code>Sprite</code> 对象。\r\n     */\r\n    static fromImage(url: string): Sprite {\r\n        return new Sprite().loadImage(url);\r\n    }\r\n\r\n    /**cacheAs后，设置自己和父对象缓存失效。*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        if (!(this._repaint & type)) {\r\n            this._repaint |= type;\r\n            this.parentRepaint(type);\r\n        }\r\n        if (this._cacheStyle && this._cacheStyle.maskParent) {\r\n            this._cacheStyle.maskParent.repaint(type);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 获取是否重新缓存。\r\n     * @return 如果重新缓存值为 true，否则值为 false。\r\n     */\r\n    _needRepaint(): boolean {\r\n        return (this._repaint & SpriteConst.REPAINT_CACHE) && this._cacheStyle.enableCanvasRender && this._cacheStyle.reCache;\r\n    }\r\n\r\n    /**@private\t\r\n     * @override\r\n    */\r\n    protected _childChanged(child: Node = null): void {\r\n        super._childChanged(child);\r\n\r\n        if (this._children.length) this._renderType |= SpriteConst.CHILDS;\r\n        else this._renderType &= ~SpriteConst.CHILDS;\r\n        if (child && this._getBit(NodeFlags.HAS_ZORDER)) ILaya.systemTimer.callLater(this, this.updateZOrder);\r\n        this.repaint(SpriteConst.REPAINT_ALL);\r\n    }\r\n\r\n    /**cacheAs时，设置所有父对象缓存失效。 */\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        var p: Sprite = (<Sprite>this._parent);\r\n        if (p && !(p._repaint & type)) {\r\n            p._repaint |= type;\r\n            p.parentRepaint(type);\r\n        }\r\n    }\r\n\r\n    /**对舞台 <code>stage</code> 的引用。*/\r\n    get stage(): Stage {\r\n        return ILaya.stage;\r\n    }\r\n\r\n    /**\r\n     * <p>可以设置一个Rectangle区域作为点击区域，或者设置一个<code>HitArea</code>实例作为点击区域，HitArea内可以设置可点击和不可点击区域。</p>\r\n     * <p>如果不设置hitArea，则根据宽高形成的区域进行碰撞。</p>\r\n     */\r\n    get hitArea(): IHitArea {\r\n        return this._style.hitArea;\r\n    }\r\n\r\n    set hitArea(value: IHitArea) {\r\n        this.getStyle().hitArea = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setMask(value: Sprite): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * <p>遮罩，可以设置一个对象(支持位图和矢量图)，根据对象形状进行遮罩显示。</p>\r\n     * <p>【注意】遮罩对象坐标系是相对遮罩对象本身的，和Flash机制不同</p>\r\n     */\r\n    get mask(): Sprite {\r\n        return this._cacheStyle.mask;\r\n    }\r\n\r\n    set mask(value: Sprite) {\r\n        if (value && this.mask == value && value._cacheStyle.maskParent == this)\r\n            return;\r\n\r\n        if (this.mask)\r\n            this.mask._getCacheStyle().maskParent = null;\r\n\r\n        this._getCacheStyle().mask = value;\r\n        this._setMask(value);\r\n        this._checkCanvasEnable();\r\n\r\n        if (value) {\r\n            value._getCacheStyle().maskParent = this;\r\n            this._renderType |= SpriteConst.MASK;\r\n        }\r\n        else\r\n            this._renderType &= ~SpriteConst.MASK;\r\n        this.repaint();\r\n    }\r\n\r\n    /**\r\n     * 是否接受鼠标事件。\r\n     * 默认为false，如果监听鼠标事件，则会自动设置本对象及父节点的属性 mouseEnable 的值都为 true（如果父节点手动设置为false，则不会更改）。\r\n     * */\r\n    get mouseEnabled(): boolean {\r\n        return this._mouseState > 1;\r\n    }\r\n\r\n    set mouseEnabled(value: boolean) {\r\n        this._mouseState = value ? 2 : 1;\r\n    }\r\n\r\n    /**\r\n     * 开始拖动此对象。\r\n     * @param area\t\t\t\t（可选）拖动区域，此区域为当前对象注册点活动区域（不包括对象宽高），可选。\r\n     * @param hasInertia\t\t（可选）鼠标松开后，是否还惯性滑动，默认为false，可选。\r\n     * @param elasticDistance\t（可选）橡皮筋效果的距离值，0为无橡皮筋效果，默认为0，可选。\r\n     * @param elasticBackTime\t（可选）橡皮筋回弹时间，单位为毫秒，默认为300毫秒，可选。\r\n     * @param data\t\t\t\t（可选）拖动事件携带的数据，可选。\r\n     * @param ratio\t\t\t\t（可选）惯性阻尼系数，影响惯性力度和时长。\r\n     */\r\n    startDrag(area: Rectangle = null, hasInertia: boolean = false, elasticDistance: number = 0, elasticBackTime: number = 300, data: any = null, ratio: number = 0.92): void {\r\n        this._style.dragging || (this.getStyle().dragging = new Dragging());\r\n        this._style.dragging.start(this, area, hasInertia, elasticDistance, elasticBackTime, data, ratio);\r\n    }\r\n\r\n    /**停止拖动此对象。*/\r\n    stopDrag(): void {\r\n        this._style.dragging && this._style.dragging.stop();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        if (!value) {\r\n            if (this._cacheStyle) {\r\n                this._cacheStyle.releaseContext();\r\n                this._cacheStyle.releaseFilterCache();\r\n                if (this._cacheStyle.hasGlowFilter) {\r\n                    this._cacheStyle.hasGlowFilter = false;\r\n                }\r\n            }\r\n        }\r\n        super._setDisplay(value);\r\n    }\r\n\r\n    /**\r\n     * 检测某个点是否在此对象内。\r\n     * @param\tx 全局x坐标。\r\n     * @param\ty 全局y坐标。\r\n     * @return  表示是否在对象内。\r\n     */\r\n    hitTestPoint(x: number, y: number): boolean {\r\n        var point: Point = this.globalToLocal(Point.TEMP.setTo(x, y));\r\n        x = point.x;\r\n        y = point.y;\r\n        var rect: IHitArea = this._style.hitArea ? this._style.hitArea : (this._isWidthSet && this._isHeightSet) ? Rectangle.TEMP.setTo(0, 0, this._width, this._height) : this.getSelfBounds();\r\n        return rect.contains(x, y);\r\n    }\r\n\r\n    /**获得相对于本对象上的鼠标坐标信息。*/\r\n    getMousePoint(): Point {\r\n        return this.globalToLocal(Point.TEMP.setTo(ILaya.stage.mouseX, ILaya.stage.mouseY));\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局X轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleX(): number {\r\n        var scale: number = 1;\r\n        var ele: Sprite = this;\r\n        while (ele) {\r\n            if (ele === ILaya.stage) break;\r\n            scale *= ele.scaleX;\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局旋转值（会叠加父亲节点的旋转值）。\r\n     */\r\n    get globalRotation(): number {\r\n        var angle: number = 0;\r\n        var ele: Sprite = this;\r\n        while (ele) {\r\n            if (ele === ILaya.stage) break;\r\n            angle += ele.rotation;\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    /**\r\n     * 获得相对于stage的全局Y轴缩放值（会叠加父亲节点的缩放值）。\r\n     */\r\n    get globalScaleY(): number {\r\n        var scale: number = 1;\r\n        var ele: Sprite = this;\r\n        while (ele) {\r\n            if (ele === ILaya.stage) break;\r\n            scale *= ele.scaleY;\r\n            ele = (<Sprite>ele.parent);\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 X 轴坐标信息。\r\n     */\r\n    get mouseX(): number {\r\n        return this.getMousePoint().x;\r\n    }\r\n\r\n    /**\r\n     * 返回鼠标在此对象坐标系上的 Y 轴坐标信息。\r\n     */\r\n    get mouseY(): number {\r\n        return this.getMousePoint().y;\r\n    }\r\n\r\n    /**z排序，更改此值，则会按照值的大小对同一容器的所有对象重新排序。值越大，越靠上。默认为0，则根据添加顺序排序。*/\r\n    get zOrder(): number {\r\n        return this._zOrder;\r\n    }\r\n\r\n    set zOrder(value: number) {\r\n        if (this._zOrder != value) {\r\n            this._zOrder = value;\r\n            if (this._parent) {\r\n                value && this._parent._setBit(NodeFlags.HAS_ZORDER, true);\r\n                ILaya.systemTimer.callLater(this._parent, this.updateZOrder);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置一个Texture实例，并显示此图片（如果之前有其他绘制，则会被清除掉）。\r\n     * 等同于graphics.clear();graphics.drawImage()，但性能更高\r\n     * 还可以赋值一个图片地址，则会自动加载图片，然后显示\r\n     */\r\n    get texture(): Texture {\r\n        return this._texture;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTexture(value: Texture | string): void {\r\n\r\n    }\r\n\r\n    set texture(value: Texture) {\r\n        if (typeof (value) == 'string') {\r\n            this.loadImage((<string>((<any>value))));\r\n        } else if (this._texture != value) {\r\n            this._texture && this._texture._removeReference();\r\n            this._texture = value;\r\n            value && value._addReference();\r\n            this._setTexture(value);\r\n            this._setWidth(this.width);\r\n            this._setHeight(this.height);\r\n            if (value) this._renderType |= SpriteConst.TEXTURE;\r\n            else this._renderType &= ~SpriteConst.TEXTURE;\r\n            this.repaint();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * <p>视口大小，视口外的子对象，将不被渲染(如果想实现裁剪效果，请使用srollRect)，合理使用能提高渲染性能。比如由一个个小图片拼成的地图块，viewport外面的小图片将不渲染</p>\r\n     * <p>srollRect和viewport的区别：<br/>\r\n     * 1. srollRect自带裁剪效果，viewport只影响子对象渲染是否渲染，不具有裁剪效果（性能更高）。<br/>\r\n     * 2. 设置rect的x,y属性均能实现区域滚动效果，但scrollRect会保持0,0点位置不变。</p>\r\n     * @default null\r\n     */\r\n    get viewport(): Rectangle {\r\n        return this._style.viewport;\r\n    }\r\n\r\n    set viewport(value: Rectangle) {\r\n        if (typeof (value) == 'string') {\r\n            let recArr = (<any>value).split(\",\");\r\n            if (recArr.length > 3) {\r\n                value = new Rectangle(parseFloat(recArr[0]), parseFloat(recArr[1]), parseFloat(recArr[2]), parseFloat(recArr[3]));\r\n            }\r\n        }\r\n        this.getStyle().viewport = value;\r\n    }\r\n\r\n    /**@internal */\r\n    _setTranformChange(): void {\r\n        this._tfChanged = true;\r\n        this._renderType |= SpriteConst.TRANSFORM;\r\n        this.parentRepaint(SpriteConst.REPAINT_CACHE);\r\n    }\r\n\r\n    set drawCallOptimize(value: boolean) {\r\n        this._setBit(NodeFlags.DRAWCALL_OPTIMIZE, value);\r\n    }\r\n\r\n    get drawCallOptimize(): boolean {\r\n        return this._getBit(NodeFlags.DRAWCALL_OPTIMIZE);\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        super.onAfterDeserialize();\r\n\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._gcmds) {\r\n                this.graphics.cmds = (<any>this)._gcmds;\r\n                delete (<any>this)._gcmds;\r\n            }\r\n\r\n            if ((<any>this)._filters) {\r\n                this.filters = (<any>this)._filters;\r\n                delete (<any>this)._filters;\r\n            }\r\n        }\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Config } from \"./../../Config\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p>动画基类，提供了基础的动画播放控制方法和帧标签事件相关功能。</p>\r\n * <p>可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。</p>\r\n */\r\nexport class AnimationBase extends Sprite {\r\n    /**动画播放顺序类型：正序播放。 */\r\n    static WRAP_POSITIVE: number = 0;\r\n    /**动画播放顺序类型：逆序播放。 */\r\n    static WRAP_REVERSE: number = 1;\r\n    /**动画播放顺序类型：pingpong播放(当按指定顺序播放完结尾后，如果继续播放，则会改变播放顺序)。 */\r\n    static WRAP_PINGPONG: number = 2;\r\n\r\n    /**是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。*/\r\n    loop: boolean;\r\n    /**播放顺序类型：AnimationBase.WRAP_POSITIVE为正序播放(默认值)，AnimationBase.WRAP_REVERSE为倒序播放，AnimationBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。*/\r\n    wrapMode: number = 0;\r\n    /**@private 播放间隔(单位：毫秒)。*/\r\n    protected _interval: number = Config.animationInterval;\r\n    /**@private */\r\n    protected _index: number;\r\n    /**@private */\r\n    protected _count: number;\r\n    /**@private */\r\n    protected _isPlaying: boolean;\r\n    /**@private */\r\n    protected _labels: any;\r\n    /**是否是逆序播放*/\r\n    protected _isReverse: boolean = false;\r\n    /**@private */\r\n    protected _frameRateChanged: boolean = false;\r\n    /**@private */\r\n    protected _actionName: string;\r\n    /**@private */\r\n    private _controlNode: Sprite;\r\n\r\n    /**\r\n     * 可以继承此类，但不要直接实例化此类，因为有些方法需要由子类实现。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setBitUp(NodeFlags.DISPLAY);\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画名称。\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        this._isPlaying = true;\r\n        this._actionName = name;\r\n        this.index = (typeof (start) == 'string') ? this._getFrameByLabel(<string>start) : start;\r\n        this.loop = loop;\r\n        this._isReverse = this.wrapMode === AnimationBase.WRAP_REVERSE;\r\n        if (this.index == 0 && this._isReverse) {\r\n            this.index = this.count - 1;\r\n        }\r\n        if (this.interval > 0) this.timerLoop(this.interval, this, this._frameLoop, null, true, true);\r\n    }\r\n\r\n    /**\r\n     * <p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>\r\n     * <p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>\r\n     */\r\n    get interval(): number {\r\n        return this._interval;\r\n    }\r\n\r\n    set interval(value: number) {\r\n        if (this._interval != value) {\r\n            this._frameRateChanged = true;\r\n            this._interval = value;\r\n            if (this._isPlaying && value > 0) {\r\n                this.timerLoop(value, this, this._frameLoop, null, true, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _getFrameByLabel(label: string): number {\r\n        for (var i: number = 0; i < this._count; i++) {\r\n            var item: any = this._labels[i];\r\n            if (item && ((<any[]>item)).indexOf(label) > -1) return i;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**@private */\r\n    protected _frameLoop(): void {\r\n        if (!this._controlNode || this._controlNode._destroyed) {\r\n            this.clearTimer(this, this._frameLoop);\r\n            return;\r\n        }\r\n        if (this._isReverse) {\r\n            this._index--;\r\n            if (this._index < 0) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count > 0 ? 1 : 0;\r\n                        this._isReverse = false;\r\n                    } else {\r\n                        this._index = this._count - 1;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index = 0;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        } else {\r\n            this._index++;\r\n            if (this._index >= this._count) {\r\n                if (this.loop) {\r\n                    if (this.wrapMode == AnimationBase.WRAP_PINGPONG) {\r\n                        this._index = this._count - 2 >= 0 ? this._count - 2 : 0;\r\n                        this._isReverse = true;\r\n                    } else {\r\n                        this._index = 0;\r\n                    }\r\n                    this.event(Event.COMPLETE);\r\n                } else {\r\n                    this._index--;\r\n                    this.stop();\r\n                    this.event(Event.COMPLETE);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        this.index = this._index;\r\n    }\r\n\r\n    /**@internal */\r\n    _setControlNode(node: Sprite): void {\r\n        if (this._controlNode) {\r\n            this._controlNode.off(Event.DISPLAY, this, this._resumePlay);\r\n            this._controlNode.off(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n        this._controlNode = node;\r\n        if (node && node != this) {\r\n            node.on(Event.DISPLAY, this, this._resumePlay);\r\n            node.on(Event.UNDISPLAY, this, this._resumePlay);\r\n        }\r\n    }\r\n\r\n    /**@internal \r\n     * @override\r\n    */\r\n    _setDisplay(value: boolean): void {\r\n        super._setDisplay(value);\r\n        this._resumePlay();\r\n    }\r\n\r\n    /**@private */\r\n    protected _resumePlay(): void {\r\n        if (this._isPlaying) {\r\n            if (this._controlNode.displayedInStage) this.play(this._index, this.loop, this._actionName);\r\n            else this.clearTimer(this, this._frameLoop);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放。\r\n     */\r\n    stop(): void {\r\n        this._isPlaying = false;\r\n        this.clearTimer(this, this._frameLoop);\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中。\r\n     */\r\n    get isPlaying(): boolean {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * 增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。\r\n     * @param\tlabel\t帧标签名称\r\n     * @param\tindex\t帧索引\r\n     */\r\n    addLabel(label: string, index: number): void {\r\n        if (!this._labels) this._labels = {};\r\n        if (!this._labels[index]) this._labels[index] = [];\r\n        this._labels[index].push(label);\r\n    }\r\n\r\n    /**\r\n     * 删除指定的帧标签。\r\n     * @param\tlabel 帧标签名称。注意：如果为空，则删除所有帧标签！\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (!label) this._labels = null;\r\n        else if (this._labels) {\r\n            for (var name in this._labels) {\r\n                this._removeLabelFromList(this._labels[name], label);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _removeLabelFromList(list: any[], label: string): void {\r\n        if (!list) return;\r\n        for (var i: number = list.length - 1; i >= 0; i--) {\r\n            if (list[i] == label) {\r\n                list.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 将动画切换到指定帧并停在那里。\r\n     * @param\tposition 帧索引或帧标签\r\n     */\r\n    gotoAndStop(position: any): void {\r\n        this.index = (typeof (position) == 'string') ? this._getFrameByLabel(<string>position) : position;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 动画当前帧的索引。\r\n     */\r\n    get index(): number {\r\n        return this._index;\r\n    }\r\n\r\n    set index(value: number) {\r\n        this._index = value;\r\n        this._displayToIndex(value);\r\n        if (this._labels && this._labels[value]) {\r\n            var tArr: any[] = this._labels[value];\r\n            for (var i: number = 0, len: number = tArr.length; i < len; i++) {\r\n                this.event(Event.LABEL, tArr[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 显示到某帧\r\n     * @param value 帧索引\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n    }\r\n\r\n    /**\r\n     * 当前动画中帧的总数。\r\n     */\r\n    get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @return 返回对象本身\r\n     */\r\n    clear(): AnimationBase {\r\n        this.stop();\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n}","import { Handler } from \"../utils/Handler\";\r\nimport { ILaya } from \"./../../ILaya\";\r\nimport { URL } from \"./URL\";\r\n\r\n/**\r\n * 自动图集管理类\r\n * @private\r\n */\r\nexport class AtlasInfoManager {\r\n\r\n    static _fileLoadDic: Record<string, { url: string, baseUrl?: string }> = {};\r\n\r\n    static enable(infoFile: string, callback: Handler | null = null): void {\r\n        ILaya.loader.fetch(infoFile, \"json\").then(data => {\r\n            if (!data)\r\n                return;\r\n\r\n            AtlasInfoManager.addAtlases(data);\r\n            callback && callback.run();\r\n        });\r\n    }\r\n\r\n    static addAtlases(data: Record<string, [string, string[]]>) {\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        for (let key in data) {\r\n            let arr = data[key];\r\n            let prefix = URL.formatURL(arr[0]);\r\n            let frames = arr[1];\r\n            let len = frames.length;\r\n            let entry = { url: key };\r\n            for (let i = 0; i < len; i++) {\r\n                dic[prefix + frames[i]] = entry;\r\n            }\r\n        }\r\n    }\r\n\r\n    static addAtlas(atlasUrl: string, prefix: string, frames: Array<string>) {\r\n        prefix = URL.formatURL(prefix);\r\n        let dic = AtlasInfoManager._fileLoadDic;\r\n        let entry = { url: atlasUrl };\r\n        for (let i of frames) {\r\n            dic[prefix + i] = entry;\r\n        }\r\n    }\r\n\r\n    static getFileLoadPath(file: string): { url: string, baseUrl?: string } {\r\n        return AtlasInfoManager._fileLoadDic[file];\r\n    }\r\n}\r\n\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * Worker Image加载器\r\n */\r\nexport class WorkerLoader {\r\n\r\n    /**worker.js的路径 */\r\n    static workerPath: string = \"libs/laya.workerloader.js\";\r\n\r\n    private static _worker: Worker;\r\n    private static _dispatcher: EventDispatcher;\r\n    private static _enable: boolean = false;\r\n\r\n    /**\r\n     * 是否支持worker\r\n     * @return 是否支持worker\r\n     */\r\n    static workerSupported(): boolean {\r\n        return Worker ? true : false;\r\n    }\r\n\r\n    /**\r\n     * 是否启用。\r\n     */\r\n    static set enable(value: boolean) {\r\n        if (WorkerLoader._enable != value) {\r\n            if (value) {\r\n                if (!Worker)\r\n                    return;\r\n\r\n                if (!WorkerLoader._worker) {\r\n                    WorkerLoader._worker = new Worker(WorkerLoader.workerPath);\r\n                    WorkerLoader._worker.onmessage = WorkerLoader.workerMessage;\r\n                    WorkerLoader._dispatcher = new EventDispatcher();\r\n                }\r\n            }\r\n            WorkerLoader._enable = value;\r\n        }\r\n    }\r\n\r\n    static get enable(): boolean {\r\n        return WorkerLoader._enable;\r\n    }\r\n\r\n    static load(url: string, options: any): Promise<any> {\r\n        return new Promise(resolve => {\r\n            WorkerLoader._worker.postMessage({ url, options });\r\n            WorkerLoader._dispatcher.once(url, resolve);\r\n        });\r\n    }\r\n\r\n    private static workerMessage(evt: any): void {\r\n        let data = evt.data;\r\n        if (data) {\r\n            switch (data.type) {\r\n                case \"Image\":\r\n                    WorkerLoader._dispatcher.event(data.url, data.imageBitmap);\r\n                    break;\r\n                case \"Disable\":\r\n                    WorkerLoader.enable = false;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\nimport { Texture } from \"./Texture\";\r\n/**\r\n * 大图合集资源\r\n */\r\nexport class AtlasResource extends Resource {\r\n    readonly dir: string;\r\n    readonly textures: Array<Texture>;\r\n    readonly frames: Array<Texture>;\r\n\r\n    /**\r\n     * 实例化体格大图合集资源\r\n     * @param dir \r\n     * @param textures \r\n     * @param frames \r\n     */\r\n    constructor(dir: string, textures: Array<Texture>, frames: Array<Texture>) {\r\n        super();\r\n\r\n        this.dir = dir;\r\n        this.textures = textures;\r\n        this.frames = frames;\r\n        this.lock = true;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _disposeResource(): void {\r\n        for (let tex of this.textures) {\r\n            if (tex)\r\n                tex.destroy();\r\n        }\r\n\r\n        for (let tex of this.frames)\r\n            tex.destroy();\r\n\r\n        this.frames.length = 0;\r\n        this.textures.length = 0;\r\n    }\r\n}","export type ProgressCallback = (progress: number) => void;\r\n\r\nexport interface IBatchProgress {\r\n    readonly itemCount: number;\r\n    createCallback(weight?: number): ProgressCallback;\r\n    update(index: number, progress: number): void;\r\n}\r\n\r\nexport class BatchProgress implements IBatchProgress {\r\n    private _callback: ProgressCallback;\r\n    private _items: Array<number>;\r\n    private _weights: Array<number>;\r\n    private _progress: number;\r\n\r\n    constructor(callback: ProgressCallback) {\r\n        this._callback = callback;\r\n        this._items = [];\r\n        this._weights = [];\r\n        this._progress = 0;\r\n    }\r\n\r\n    get itemCount() {\r\n        return this._items.length;\r\n    }\r\n\r\n    reset() {\r\n        this._items.length = 0;\r\n        this._weights.length = 0;\r\n        this._progress = 0;\r\n    }\r\n\r\n    createCallback(weight?: number): ProgressCallback {\r\n        let index = this._items.length;\r\n        this._items.push(0);\r\n        if (weight == null)\r\n            this._weights.push(null);\r\n        else\r\n            this._weights.push(Math.max(0, Math.min(weight, 1)));\r\n\r\n        return (progress: number) => this.update(index, progress);\r\n    }\r\n\r\n    update(index: number, value: number) {\r\n        if (index != -1) {\r\n            this._items[index] = Math.max(0, Math.min(value, 1));\r\n\r\n            let np = 0;\r\n            let col = this._items;\r\n            let ws = this._weights;\r\n            let perc = 1 / col.length;\r\n            for (let i = 0; i < col.length; i++) {\r\n                let p = col[i];\r\n                let w = ws[i];\r\n                if (p != null)\r\n                    np += p * (w != null ? w : perc);\r\n            }\r\n            value = np;\r\n            if (value > 1) value = 1;\r\n        }\r\n\r\n        if (value > this._progress) {\r\n            this._progress = value;\r\n            this._callback(value);\r\n        }\r\n    }\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n* 图片二进制处理类\r\n* @ author:xs\r\n* @ data: 2021-11-03 10:54\r\n*/\r\nexport class ImgUtils {\r\n\r\n    /**存储数据池*/\r\n    static data: any = {};\r\n    /**是否保存使用的数据*/\r\n    static isSavaData: boolean = false;\r\n\r\n    /**\r\n     * 比较版本内容\r\n     * @param curVersion 当前版本\r\n     * @param needVersion 要求的版本\r\n     * @returns \r\n     */\r\n    private static compareVersion(curVersion: string, needVersion: string) {\r\n        let curVersionArr = curVersion.split('.');\r\n        let needVersionArr = needVersion.split('.');\r\n        const len = Math.max(curVersionArr.length, needVersionArr.length);\r\n        while (curVersionArr.length < len) {\r\n            curVersionArr.push('0');\r\n        }\r\n        while (needVersionArr.length < len) {\r\n            needVersionArr.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(curVersionArr[i]);\r\n            const num2 = parseInt(needVersionArr[i]);\r\n            if (num1 > num2) {\r\n                return true;\r\n            } else if (num1 < num2) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 是否支持数据预处理\r\n     */\r\n    static get isSupport(): boolean {\r\n        if (Browser._isMiniGame) {\r\n            var version: string = Browser.window.wx.getSystemInfoSync().SDKVersion;\r\n            return ImgUtils.compareVersion(version, '2.14.0');\r\n        }\r\n        else if (Browser.onLayaRuntime) {\r\n            return true;\r\n        } else if (Browser.window.Blob)\r\n            return Browser.window.Blob ? true : false;\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过二进制获取URL对象\r\n     * @param url \r\n     * @param arrayBuffer \r\n     * @returns \r\n     */\r\n    static arrayBufferToURL(url: string, arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return url;\r\n        if (ImgUtils.data[url])\r\n            return ImgUtils.data[url];\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        if (ImgUtils.isSavaData)\r\n            ImgUtils.data[url] = newurl;\r\n        return newurl;\r\n    }\r\n\r\n    static _arrayBufferToURL(arrayBuffer: ArrayBuffer) {\r\n        if (!ImgUtils.isSupport) return null;\r\n        var newurl: string = \"\";\r\n        if (Browser._isMiniGame || Browser.onLayaRuntime) {\r\n            newurl = Browser.window.wx.createBufferURL(arrayBuffer);//是一个字符串内存地址\r\n        } else if (Browser.window.Blob) {\r\n            let blob = new Blob([arrayBuffer], { type: 'application/octet-binary' });\r\n            newurl = Browser.window.URL.createObjectURL(blob);\r\n        }\r\n        return newurl;\r\n    }\r\n\r\n    /**\r\n     * 销毁指定URL的二进制内存数据\r\n     * @param url \r\n     */\r\n    static destroy(url: string) {\r\n        if (!ImgUtils.isSupport) return;\r\n        var newurl: string = ImgUtils.data[url];\r\n        if (newurl) {\r\n            if (Browser._isMiniGame || Browser.onLayaRuntime)\r\n                Browser.window.wx.revokeBufferURL(newurl);\r\n            else if (Browser.window.Blob)\r\n                Browser.window.URL.revokeObjectURL(newurl);\r\n            delete ImgUtils.data[url];\r\n        }\r\n    }\r\n}","export class XMLUtils {\r\n    public static decodeString(aSource: string): string {\r\n        let len = aSource.length;\r\n        let sb: string = \"\";\r\n        let pos1 = 0, pos2 = 0;\r\n\r\n        while (true) {\r\n            pos2 = aSource.indexOf('&', pos1);\r\n            if (pos2 == -1) {\r\n                sb += aSource.substring(pos1);\r\n                break;\r\n            }\r\n            sb += aSource.substring(pos1, pos2);\r\n\r\n            pos1 = pos2 + 1;\r\n            pos2 = pos1;\r\n            let end = Math.min(len, pos2 + 10);\r\n            for (; pos2 < end; pos2++) {\r\n                if (aSource[pos2] == ';')\r\n                    break;\r\n            }\r\n            if (pos2 < end && pos2 > pos1) {\r\n                let entity: string = aSource.substring(pos1, pos2);\r\n                let u = 0;\r\n                if (entity[0] == '#') {\r\n                    if (entity.length > 1) {\r\n                        if (entity[1] == 'x')\r\n                            u = parseInt(entity.substring(2), 16);\r\n                        else\r\n                            u = parseInt(entity.substring(1));\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n                else {\r\n                    switch (entity) {\r\n                        case \"amp\":\r\n                            u = 38;\r\n                            break;\r\n\r\n                        case \"apos\":\r\n                            u = 39;\r\n                            break;\r\n\r\n                        case \"gt\":\r\n                            u = 62;\r\n                            break;\r\n\r\n                        case \"lt\":\r\n                            u = 60;\r\n                            break;\r\n\r\n                        case \"nbsp\":\r\n                            u = 32;\r\n                            break;\r\n\r\n                        case \"quot\":\r\n                            u = 34;\r\n                            break;\r\n                    }\r\n                    if (u > 0) {\r\n                        sb += String.fromCharCode(u);\r\n                        pos1 = pos2 + 1;\r\n                    }\r\n                    else\r\n                        sb += '&';\r\n                }\r\n            }\r\n            else {\r\n                sb += '&';\r\n            }\r\n        }\r\n\r\n        return sb;\r\n    }\r\n\r\n    public static encodeString(str: string): string {\r\n        return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\")\r\n            .replace(/>/g, \"&gt;\").replace(/'/g, \"&apos;\").replace(/\"/g, \"&quot;\");\r\n    }\r\n\r\n    public static getString(attrs: any, attrName: string, defValue?: string): string {\r\n        if (attrs == null)\r\n            return defValue == null ? null : defValue;\r\n\r\n        let ret = attrs[attrName];\r\n        if (ret != null)\r\n            return \"\" + ret;\r\n        else\r\n            return defValue == null ? null : defValue;\r\n    }\r\n\r\n    public static getInt(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value != null && value.length > 0) {\r\n            if (value[value.length - 1] == '%') {\r\n                let ret = parseInt(value.substring(0, value.length - 1));\r\n                if (!isNaN(ret))\r\n                    return Math.ceil(ret / 100.0 * defValue);\r\n            }\r\n            else {\r\n                let ret = parseInt(value);\r\n                if (!isNaN(ret))\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        return defValue == null ? 0 : defValue;\r\n    }\r\n\r\n    public static getFloat(attrs: any, attrName: string, defValue?: number): number {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? 0 : defValue;\r\n\r\n        let ret = parseFloat(value);\r\n        if (isNaN(ret))\r\n            return defValue == null ? 0 : defValue;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    public static getBool(attrs: any, attrName: string, defValue?: boolean): boolean {\r\n        let value: string = this.getString(attrs, attrName);\r\n        if (value == null || value.length == 0)\r\n            return defValue == null ? false : defValue;\r\n\r\n        if (value == \"true\" || value == \"1\")\r\n            return true;\r\n        else if (value == \"false\" || value == \"0\")\r\n            return false;\r\n        else\r\n            return defValue == null ? false : defValue;\r\n    }\r\n}","import { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport enum XMLTagType {\r\n    Start,\r\n    End,\r\n    Void,\r\n    CDATA,\r\n    Comment,\r\n    Instruction\r\n};\r\n\r\nconst CDATA_START = \"<![CDATA[\";\r\nconst CDATA_END = \"]]>\";\r\nconst COMMENT_START = \"<!--\";\r\nconst COMMENT_END = \"-->\";\r\n\r\nexport class XMLIterator {\r\n    public static tagName: string;\r\n    public static tagType: XMLTagType;\r\n    public static lastTagName: string;\r\n\r\n    static source: string;\r\n    static sourceLen: number;\r\n    static parsePos: number;\r\n    static tagPos: number;\r\n    static tagLength: number;\r\n    static lastTagEnd: number;\r\n    static attrParsed: boolean;\r\n    static lowerCaseName: boolean;\r\n\r\n    private static _attrs: any = {};\r\n\r\n    public static begin(source: string, lowerCaseName?: boolean) {\r\n        XMLIterator.source = source;\r\n        XMLIterator.lowerCaseName = lowerCaseName;\r\n        this.sourceLen = source.length;\r\n        this.parsePos = 0;\r\n        this.lastTagEnd = 0;\r\n        this.tagPos = 0;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n    }\r\n\r\n    public static nextTag(): boolean {\r\n        let pos: number;\r\n        let c: string;\r\n        let buffer = \"\";\r\n\r\n        this.tagType = XMLTagType.Start;\r\n        this.lastTagEnd = this.parsePos;\r\n        this.attrParsed = false;\r\n        this.lastTagName = this.tagName;\r\n\r\n        while ((pos = this.source.indexOf('<', this.parsePos)) != -1) {\r\n            this.parsePos = pos;\r\n            pos++;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            c = this.source[pos];\r\n            if (c == '!') {\r\n                if (this.sourceLen > pos + 7 && this.source.substring(pos - 1, pos + 8) == CDATA_START) {\r\n                    pos = this.source.indexOf(CDATA_END, pos);\r\n                    this.tagType = XMLTagType.CDATA;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else if (this.sourceLen > pos + 2 && this.source.substring(pos - 1, pos + 3) == COMMENT_START) {\r\n                    pos = this.source.indexOf(COMMENT_END, pos);\r\n                    this.tagType = XMLTagType.Comment;\r\n                    this.tagName = \"\";\r\n                    this.tagPos = this.parsePos;\r\n                    if (pos == -1)\r\n                        this.tagLength = this.sourceLen - this.parsePos;\r\n                    else\r\n                        this.tagLength = pos + 3 - this.parsePos;\r\n                    this.parsePos += this.tagLength;\r\n                    return true;\r\n                }\r\n                else {\r\n                    pos++;\r\n                    this.tagType = XMLTagType.Instruction;\r\n                }\r\n            }\r\n            else if (c == '/') {\r\n                pos++;\r\n                this.tagType = XMLTagType.End;\r\n            }\r\n            else if (c == '?') {\r\n                pos++;\r\n                this.tagType = XMLTagType.Instruction;\r\n            }\r\n\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            buffer += this.source.substring(this.parsePos + 1, pos);\r\n            if (buffer.length > 0 && buffer[0] == '/')\r\n                buffer = buffer.substring(1);\r\n\r\n            let singleQuoted: boolean = false, doubleQuoted: boolean = false;\r\n            let possibleEnd: number = -1;\r\n            for (; pos < this.sourceLen; pos++) {\r\n                c = this.source[pos];\r\n                if (c == '\"') {\r\n                    if (!singleQuoted)\r\n                        doubleQuoted = !doubleQuoted;\r\n                }\r\n                else if (c == '\\'') {\r\n                    if (!doubleQuoted)\r\n                        singleQuoted = !singleQuoted;\r\n                }\r\n\r\n                if (c == '>') {\r\n                    if (!(singleQuoted || doubleQuoted)) {\r\n                        possibleEnd = -1;\r\n                        break;\r\n                    }\r\n\r\n                    possibleEnd = pos;\r\n                }\r\n                else if (c == '<')\r\n                    break;\r\n            }\r\n            if (possibleEnd != -1)\r\n                pos = possibleEnd;\r\n\r\n            if (pos == this.sourceLen)\r\n                break;\r\n\r\n            if (this.source[pos - 1] == '/')\r\n                this.tagType = XMLTagType.Void;\r\n\r\n            this.tagName = buffer;\r\n            if (this.lowerCaseName)\r\n                this.tagName = this.tagName.toLowerCase();\r\n            this.tagPos = this.parsePos;\r\n            this.tagLength = pos + 1 - this.parsePos;\r\n            this.parsePos += this.tagLength;\r\n\r\n            return true;\r\n        }\r\n\r\n        this.tagPos = this.sourceLen;\r\n        this.tagLength = 0;\r\n        this.tagName = null;\r\n        return false;\r\n    }\r\n\r\n    public static getTagSource(): string {\r\n        return this.source.substring(this.tagPos, this.tagPos + this.tagLength);\r\n    }\r\n\r\n    public static getRawText(trim?: boolean) {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return this.source.substring(i, this.tagPos).trim();\r\n        }\r\n        else\r\n            return this.source.substring(this.lastTagEnd, this.tagPos);\r\n    }\r\n\r\n    public static getText(trim?: boolean): string {\r\n        if (this.lastTagEnd == this.tagPos)\r\n            return \"\";\r\n        else if (trim) {\r\n            let i = this.lastTagEnd;\r\n            for (; i < this.tagPos; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) == -1)\r\n                    break;\r\n            }\r\n\r\n            if (i == this.tagPos)\r\n                return \"\";\r\n            else\r\n                return XMLUtils.decodeString(this.source.substring(i, this.tagPos)).trimEnd();\r\n        }\r\n        else\r\n            return XMLUtils.decodeString(this.source.substring(this.lastTagEnd, this.tagPos));\r\n    }\r\n\r\n    public static get attributes() {\r\n        if (!this.attrParsed) {\r\n            for (let key in this._attrs) {\r\n                delete this._attrs[key];\r\n            }\r\n            this.parseAttributes(this._attrs);\r\n            this.attrParsed = true;\r\n        }\r\n\r\n        return this._attrs;\r\n    }\r\n\r\n    public static getAttribute(attrName: string): string {\r\n        return this.attributes[attrName];\r\n    }\r\n\r\n    static parseAttributes(attrs: any) {\r\n        let attrName: string;\r\n        let valueStart: number = 0;\r\n        let valueEnd: number = 0;\r\n        let waitValue: boolean = false;\r\n        let quoted: number = 0;\r\n        let buffer: string = \"\";\r\n        let i = this.tagPos;\r\n        let attrEnd = this.tagPos + this.tagLength;\r\n\r\n        if (i < attrEnd && this.source[i] == '<') {\r\n            for (; i < attrEnd; i++) {\r\n                let c = this.source[i];\r\n                if (' \\t\\n\\r\\v'.indexOf(c) != -1 || c == '>' || c == '/')\r\n                    break;\r\n            }\r\n        }\r\n\r\n        for (; i < attrEnd; i++) {\r\n            let c: string = this.source[i];\r\n            if (c == '=') {\r\n                valueStart = -1;\r\n                valueEnd = -1;\r\n                quoted = 0;\r\n                for (let j = i + 1; j < attrEnd; j++) {\r\n                    let c2 = this.source[j];\r\n                    if (' \\t\\n\\r\\v'.indexOf(c2) != -1) {\r\n                        if (valueStart != -1 && quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '>') {\r\n                        if (quoted == 0) {\r\n                            valueEnd = j - 1;\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\"') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 1) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 2;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (c2 == '\\'') {\r\n                        if (valueStart != -1) {\r\n                            if (quoted != 2) {\r\n                                valueEnd = j - 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                        else {\r\n                            quoted = 1;\r\n                            valueStart = j + 1;\r\n                        }\r\n                    }\r\n                    else if (valueStart == -1) {\r\n                        valueStart = j;\r\n                    }\r\n                }\r\n\r\n                if (valueStart != -1 && valueEnd != -1) {\r\n                    attrName = buffer;\r\n                    if (this.lowerCaseName)\r\n                        attrName = attrName.toLowerCase();\r\n                    buffer = \"\";\r\n                    attrs[attrName] = XMLUtils.decodeString(this.source.substring(valueStart, valueEnd + 1));\r\n                    i = valueEnd + 1;\r\n                }\r\n                else\r\n                    break;\r\n            }\r\n            else if (' \\t\\n\\r\\v'.indexOf(c) == -1) {\r\n                if (waitValue || c == '/' || c == '>') {\r\n                    if (buffer.length > 0) {\r\n                        attrName = buffer;\r\n                        if (this.lowerCaseName)\r\n                            attrName = attrName.toLowerCase();\r\n                        attrs[attrName] = \"\";\r\n                        buffer = \"\";\r\n                    }\r\n\r\n                    waitValue = false;\r\n                }\r\n\r\n                if (c != '/' && c != '>')\r\n                    buffer += c;\r\n            }\r\n            else {\r\n                if (buffer.length > 0)\r\n                    waitValue = true;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nif (!String.prototype.trimEnd) {\r\n    String.prototype.trimEnd = function (this: string) {\r\n        return this.replace(/\\s+$/g, \"\");\r\n    }\r\n}","import { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nexport class XML {\r\n    public name: string;\r\n    public text: string;\r\n\r\n    private _attrs: Record<string, string>;\r\n    private _children: Array<XML>;\r\n\r\n    public constructor(XmlString?: string) {\r\n        if (XmlString)\r\n            this.parse(XmlString);\r\n    }\r\n\r\n    public get attributes(): Record<string, string> {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n        return this._attrs;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public setAttribute(attrName: string, attrValue: string) {\r\n        if (!this._attrs)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getNode(selector: string): XML {\r\n        if (!this._children)\r\n            return null;\r\n        else\r\n            return this._children.find(value => {\r\n                return value.name == selector;\r\n            });\r\n    }\r\n\r\n    public elements(selector?: string): Array<XML> {\r\n        if (!this._children)\r\n            this._children = new Array<XML>();\r\n        if (selector)\r\n            return this._children.filter(value => {\r\n                return value.name == selector;\r\n            });\r\n        else\r\n            return this._children;\r\n    }\r\n\r\n    public parse(aSource: string) {\r\n        this.reset();\r\n\r\n        let lastOpenNode: XML;\r\n        let nodeStack: Array<XML> = new Array<XML>();\r\n\r\n        XMLIterator.begin(aSource);\r\n        while (XMLIterator.nextTag()) {\r\n            if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                let childNode: XML;\r\n                if (lastOpenNode)\r\n                    childNode = new XML();\r\n                else {\r\n                    if (this.name != null) {\r\n                        this.reset();\r\n                        throw new Error(\"Invalid xml format - no root node.\");\r\n                    }\r\n                    childNode = this;\r\n                }\r\n\r\n                childNode.name = XMLIterator.tagName;\r\n                childNode._attrs = Object.assign({}, XMLIterator.attributes);\r\n\r\n                if (lastOpenNode) {\r\n                    if (XMLIterator.tagType != XMLTagType.Void)\r\n                        nodeStack.push(lastOpenNode);\r\n                    if (lastOpenNode._children == null)\r\n                        lastOpenNode._children = new Array<XML>();\r\n                    lastOpenNode._children.push(childNode);\r\n                }\r\n                if (XMLIterator.tagType != XMLTagType.Void)\r\n                    lastOpenNode = childNode;\r\n            }\r\n            else if (XMLIterator.tagType == XMLTagType.End) {\r\n                if (lastOpenNode == null || lastOpenNode.name != XMLIterator.tagName) {\r\n                    this.reset();\r\n                    throw new Error(\"Invalid xml format - <\" + XMLIterator.tagName + \"> dismatched.\");\r\n                }\r\n\r\n                if (lastOpenNode._children == null || lastOpenNode._children.length == 0) {\r\n                    lastOpenNode.text = XMLIterator.getText();\r\n                }\r\n\r\n                if (nodeStack.length > 0)\r\n                    lastOpenNode = nodeStack.pop();\r\n                else\r\n                    lastOpenNode = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset() {\r\n        this._attrs = null;\r\n        if (this._children != null)\r\n            this._children.length == 0;\r\n        this.text = null;\r\n    }\r\n}","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * 请求进度改变时调度。\r\n * @eventType Event.PROGRESS\r\n * */\r\n/*[Event(name = \"progress\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求结束后调度。\r\n * @eventType Event.COMPLETE\r\n * */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 请求出错时调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>HttpRequest</code> 通过封装 HTML <code>XMLHttpRequest</code> 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。 <code>HttpRequest</code> 只提供以异步的形式返回 Web 服务器的响应，并且能够以文本或者二进制的形式返回内容。</p>\r\n * <p><b>注意：</b>建议每次请求都使用新的 <code>HttpRequest</code> 对象，因为每次调用该对象的send方法时，都会清空之前设置的数据，并重置 HTTP 请求的状态，这会导致之前还未返回响应的请求被重置，从而得不到之前请求的响应结果。</p>\r\n */\r\nexport class HttpRequest extends EventDispatcher {\r\n    /**@private */\r\n    protected _http = new XMLHttpRequest();\r\n    /**@private */\r\n    private static _urlEncode: Function = encodeURI;\r\n    /**@private */\r\n    protected _responseType: string;\r\n    /**@private */\r\n    protected _data: any;\r\n    /**@private */\r\n    protected _url: string;\r\n\r\n    /**\r\n     * 发送 HTTP 请求。\r\n     * @param\turl\t\t\t\t请求的地址。大多数浏览器实施了一个同源安全策略，并且要求这个 URL 与包含脚本的文本具有相同的主机名和端口。\r\n     * @param\tdata\t\t\t(default = null)发送的数据。\r\n     * @param\tmethod\t\t\t(default = \"get\")用于请求的 HTTP 方法。值包括 \"get\"、\"post\"、\"head\"。\r\n     * @param\tresponseType\t(default = \"text\")Web 服务器的响应类型，可设置为 \"text\"、\"json\"、\"xml\"、\"arraybuffer\"。\r\n     * @param\theaders\t\t\t(default = null) HTTP 请求的头部信息。参数形如key-value数组：key是头部的名称，不应该包括空白、冒号或换行；value是头部的值，不应该包括换行。比如[\"Content-Type\", \"application/json\"]。\r\n     */\r\n    send(url: string, data: any = null,\r\n        method: \"get\" | \"post\" | \"head\" = \"get\",\r\n        responseType: \"text\" | \"json\" | \"xml\" | \"arraybuffer\" = \"text\",\r\n        headers?: string[]): void {\r\n        this._responseType = responseType;\r\n        this._data = null;\r\n\r\n        if (Browser.onVVMiniGame || Browser.onQGMiniGame || Browser.onQQMiniGame || Browser.onAlipayMiniGame || Browser.onBLMiniGame || Browser.onHWMiniGame || Browser.onTTMiniGame || Browser.onTBMiniGame) {\r\n            url = HttpRequest._urlEncode(url);\r\n        }\r\n        this._url = url;\r\n\r\n        let http = this._http;\r\n        http.open(method, url, true);\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                http.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            }\r\n            else {\r\n                http.setRequestHeader(\"Content-Type\", \"application/json\");\r\n                if (!(data instanceof ArrayBuffer))\r\n                    data = JSON.stringify(data);\r\n            }\r\n        }\r\n        else if (Browser.onBLMiniGame && Browser.onAndroid)\r\n            data = {};\r\n\r\n        if (headers) {\r\n            for (let i = 0; i < headers.length; i++) {\r\n                http.setRequestHeader(headers[i++], headers[i]);\r\n            }\r\n        }\r\n\r\n        let restype: XMLHttpRequestResponseType = responseType !== \"arraybuffer\" ? \"text\" : \"arraybuffer\";\r\n        http.responseType = restype;\r\n        if ((http as any).dataType) {//for Ali\r\n            (http as any).dataType = restype;\r\n        }\r\n        http.onerror = (e: any) => {\r\n            this._onError(e);\r\n        }\r\n        http.onabort = (e: any) => {\r\n            this._onAbort(e);\r\n        }\r\n        http.onprogress = (e: any) => {\r\n            this._onProgress(e);\r\n        }\r\n        http.onload = (e: any) => {\r\n            this._onLoad(e);\r\n        }\r\n\r\n        http.send(data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求进度的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onProgress(e: any): void {\r\n        if (e && e.lengthComputable) this.event(Event.PROGRESS, e.loaded / e.total);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求中断的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onAbort(e: any): void {\r\n        this.error(\"Request was aborted by user\");\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求出错侦的听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.error(\"Request failed Status:\" + this._http.status + \" text:\" + this._http.statusText);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求消息返回的侦听处理函数。\r\n     * @param\te 事件对象。\r\n     */\r\n    protected _onLoad(e: any): void {\r\n        var http: any = this._http;\r\n        var status: number = http.status !== undefined ? http.status : 200;\r\n\r\n        if (status === 200 || status === 204 || status === 0) {\r\n            this.complete();\r\n        } else {\r\n            this.error(\"[\" + http.status + \"]\" + http.statusText + \":\" + http.responseURL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求错误的处理函数。\r\n     * @param\tmessage 错误信息。\r\n     */\r\n    protected error(message: string): void {\r\n        this.clear();\r\n        //console.warn(this.url, message);\r\n        this.event(Event.ERROR, message);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 请求成功完成的处理函数。\r\n     */\r\n    protected complete(): void {\r\n        this.clear();\r\n        var flag: boolean = true;\r\n        try {\r\n            if (this._responseType === \"json\") {\r\n                this._data = JSON.parse(this._http.responseText);\r\n            } else if (this._responseType === \"xml\") {\r\n                this._data = new XML(this._http.responseText);\r\n            } else {\r\n                this._data = this._http.response || this._http.responseText;\r\n            }\r\n        } catch (e: any) {\r\n            flag = false;\r\n            this.error(e.message);\r\n        }\r\n        flag && this.event(Event.COMPLETE, this._data instanceof Array ? [this._data] : this._data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 清除当前请求。\r\n     */\r\n    protected clear(): void {\r\n        var http: any = this._http;\r\n        http.onerror = http.onabort = http.onprogress = http.onload = null;\r\n    }\r\n\r\n    /** 请求的地址。*/\r\n    get url(): string {\r\n        return this._url;\r\n    }\r\n\r\n    /** 返回的数据。*/\r\n    get data(): any {\r\n        return this._data;\r\n    }\r\n\r\n    /**\r\n     * 本对象所封装的原生 XMLHttpRequest 引用。\r\n     */\r\n    get http(): any {\r\n        return this._http;\r\n    }\r\n\r\n    reset() {\r\n        this.offAll();\r\n        this._data = null;\r\n    }\r\n}\r\n\r\n","import { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { ImgUtils } from \"../utils/ImgUtils\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\n\r\nexport class Downloader {\r\n    common(owner: any, url: string, originalUrl: string, contentType: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let http = this.getRequestInst();\r\n        http.on(Event.COMPLETE, () => {\r\n            let data = http.data;\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(data);\r\n        });\r\n        http.on(Event.ERROR, null, (error: string) => {\r\n            this.returnRequestInst(http);\r\n\r\n            onComplete(null, error);\r\n        });\r\n        if (onProgress)\r\n            http.on(Event.PROGRESS, onProgress);\r\n        http.send(url, null, \"get\", <any>contentType);\r\n        owner.$ref = http; //保持引用避免gc掉\r\n    }\r\n\r\n    image(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let image: HTMLImageElement = new Browser.window.Image();\r\n        image.crossOrigin = \"\";\r\n        image.onload = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(image);\r\n        };\r\n        image.onerror = () => {\r\n            image.onload = null;\r\n            image.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        image.src = url;\r\n        owner.$ref = image; //保持引用避免gc掉\r\n    }\r\n\r\n    imageWithBlob(owner: any, blob: ArrayBuffer, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        let url = ImgUtils.arrayBufferToURL(originalUrl, blob);\r\n        this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    imageWithWorker(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void): void {\r\n        WorkerLoader.enable = true;\r\n        if (WorkerLoader.enable) {\r\n            WorkerLoader.load(url, owner.workerLoaderOptions).then(ret => {\r\n                if (ret)\r\n                    onComplete(ret);\r\n                else\r\n                    onComplete(null, \"workerloader failed!\");\r\n            });\r\n        }\r\n        else\r\n            this.image(owner, url, originalUrl, onProgress, onComplete);\r\n    }\r\n\r\n    audio(owner: any, url: string, originalUrl: string, onProgress: (progress: number) => void, onComplete: (data: any, error?: string) => void) {\r\n        let audio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        audio.crossOrigin = \"\";\r\n        audio.oncanplaythrough = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(audio);\r\n        };\r\n        audio.onerror = () => {\r\n            audio.oncanplaythrough = null;\r\n            audio.onerror = null;\r\n            onComplete(null, \"\");\r\n        };\r\n        audio.src = url;\r\n        owner.$ref = audio; //保持引用避免gc掉\r\n    }\r\n\r\n    httpRequestPool: Array<HttpRequest> = [];\r\n    protected getRequestInst() {\r\n        if (this.httpRequestPool.length == 0\r\n            || Browser.onVVMiniGame || Browser.onHWMiniGame /*临时修复vivo复用xmlhttprequest的bug*/) {\r\n            return new HttpRequest();\r\n        } else {\r\n            return this.httpRequestPool.pop();\r\n        }\r\n    }\r\n\r\n    protected returnRequestInst(inst: HttpRequest) {\r\n        inst.reset();\r\n        if (this.httpRequestPool.length < 10)\r\n            this.httpRequestPool.push(inst);\r\n    }\r\n}\r\n\r\n","import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Delegate } from \"../utils/Delegate\";\r\nimport { AtlasInfoManager } from \"./AtlasInfoManager\";\r\nimport { WorkerLoader } from \"./WorkerLoader\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { IBatchProgress, ProgressCallback, BatchProgress } from \"./BatchProgress\";\r\nimport { Handler } from \"../utils/Handler\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Downloader } from \"./Downloader\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { XML } from \"../html/XML\";\r\n\r\nexport interface ILoadTask {\r\n    readonly type: string;\r\n    readonly url: string;\r\n    readonly uuid: string;\r\n    readonly ext: string;\r\n    readonly loader: Loader;\r\n    readonly obsoluteInst: Resource;\r\n    readonly options: Readonly<ILoadOptions>;\r\n    readonly progress: IBatchProgress;\r\n}\r\n\r\nexport interface IResourceLoader {\r\n    load(task: ILoadTask): Promise<any>;\r\n}\r\n\r\nexport interface ILoadOptions {\r\n    type?: string;\r\n    priority?: number;\r\n    group?: string;\r\n    cache?: boolean;\r\n    noRetry?: boolean;\r\n    silent?: boolean;\r\n    useWorkerLoader?: boolean;\r\n    constructParams?: TextureConstructParams;\r\n    propertyParams?: TexturePropertyParams;\r\n    blob?: ArrayBuffer;\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface ILoadURL extends ILoadOptions {\r\n    url: string;\r\n}\r\n\r\ninterface ContentTypeMap {\r\n    \"text\": string,\r\n    \"json\": any,\r\n    \"xml\": XML,\r\n    \"arraybuffer\": ArrayBuffer,\r\n    \"image\": HTMLImageElement | ImageBitmap,\r\n    \"sound\": HTMLAudioElement\r\n}\r\n\r\nvar typeIdCounter = 0;\r\ntype TypeMapEntry = { typeId: number, loaderType: new () => IResourceLoader };\r\n\r\ninterface URLInfo {\r\n    ext: string,\r\n    typeId: number,\r\n    main: boolean,\r\n    loaderType: new () => IResourceLoader,\r\n}\r\nconst NullURLInfo: Readonly<URLInfo> = { ext: null, typeId: null, main: false, loaderType: null };\r\n\r\n/**\r\n * <code>Loader</code> 类可用来加载文本、JSON、XML、二进制、图像等资源。\r\n */\r\nexport class Loader extends EventDispatcher {\r\n    /**文本类型，加载完成后返回包含string的TextResource对象。*/\r\n    static TEXT = \"text\";\r\n    /**JSON 类型，加载完成后返回包含json数据的TextResource对象。*/\r\n    static JSON = \"json\";\r\n    /**XML 类型，加载完成后返回包含domXML的TextResource对象。*/\r\n    static XML = \"xml\";\r\n    /**二进制类型，加载完成后返回包含arraybuffer的TextResource对象。*/\r\n    static BUFFER = \"arraybuffer\";\r\n    /**纹理类型，加载完成后返回Texture。*/\r\n    static IMAGE = \"image\";\r\n    /**声音类型，加载完成后返回Sound。*/\r\n    static SOUND = \"sound\";\r\n    /**视频类型，加载完成后返回VideoTexture。*/\r\n    static VIDEO = \"video\";\r\n    /**图集类型，加载完成后返回图集json信息(并创建图集内小图Texture)。*/\r\n    static ATLAS = \"atlas\";\r\n    /**位图字体类型，加载完成后返回BitmapFont，加载后，会根据文件名自动注册为位图字体。*/\r\n    static FONT = \"font\";\r\n    /** TTF字体类型，加载完成后返回一个对象。*/\r\n    static TTF = \"ttf\";\r\n    /**Hierarchy资源。*/\r\n    static HIERARCHY = \"HIERARCHY\";\r\n    /**Mesh资源。*/\r\n    static MESH = \"MESH\";\r\n    /**Material资源。*/\r\n    static MATERIAL = \"MATERIAL\";\r\n    /**Texture2D资源。*/\r\n    static TEXTURE2D = \"TEXTURE2D\"; //这里是为了兼容，实际应该是BaseTexture\r\n    /**TextureCube资源。*/\r\n    static TEXTURECUBE = \"TEXTURE2D\"; //兼容处理，现在TEXTURE2D类型可以载入Texture或者TextureCube\r\n    /**AnimationClip资源。*/\r\n    static ANIMATIONCLIP = \"ANIMATIONCLIP\";\r\n    /**Terrain资源。*/\r\n    static TERRAINHEIGHTDATA = \"TERRAINHEIGHTDATA\";\r\n    /**Terrain资源。*/\r\n    static TERRAINRES = \"TERRAIN\";\r\n    /** Spine 资源 */\r\n    static SPINE = \"SPINE\";\r\n\r\n    /** 加载出错后的重试次数，默认重试一次*/\r\n    retryNum: number = 1;\r\n    /** 延迟时间多久再进行错误重试，默认立即重试*/\r\n    retryDelay: number = 0;\r\n    /** 最大下载线程，默认为5个*/\r\n    maxLoader: number = 5;\r\n\r\n    static readonly extMap: { [ext: string]: Array<TypeMapEntry> } = {};\r\n    static readonly typeMap: { [type: string]: TypeMapEntry } = {};\r\n\r\n    static downloader = new Downloader();\r\n\r\n    /**\r\n     * 注册一种资源装载器。\r\n     * @param exts 扩展名\r\n     * @param cls\r\n     * @param type 类型标识。如果这种资源需要支持识别没有扩展名的情况，或者一个扩展名对应了多种资源类型的情况，那么指定type参数是个最优实践。\r\n     */\r\n    static registerLoader(exts: string[], cls: new () => IResourceLoader, type?: string) {\r\n        let typeEntry: TypeMapEntry;\r\n        if (type) {\r\n            typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                Loader.typeMap[type] = typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n            else if (typeEntry.loaderType != cls)\r\n                typeEntry = { typeId: typeEntry.typeId, loaderType: cls };\r\n        }\r\n        else\r\n            typeEntry = { typeId: typeIdCounter++, loaderType: cls };\r\n\r\n        for (let ext of exts) {\r\n            let entry = Loader.extMap[ext];\r\n            if (entry && type) { //这个扩展名已经被注册为其他资源类型\r\n                let i = entry.findIndex(e => e.typeId == typeEntry.typeId);\r\n                if (i == -1) //注册为次类型\r\n                    entry.push(typeEntry);\r\n                else //覆盖旧的设置\r\n                    entry[i].loaderType = cls;\r\n            }\r\n            else {\r\n                Loader.extMap[ext] = [typeEntry];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**资源分组对应表。*/\r\n    static groupMap: { [name: string]: Set<string> } = {};\r\n    /**已加载的资源池。*/\r\n    static loadedMap: { [url: string]: Array<any> } = {};\r\n    /** 预加载的数据文件。如果一个url在这里有记录，则请求时直接使用这里的数据，放弃网络加载。*/\r\n    static preLoadedMap: { [url: string]: any } = {};\r\n\r\n    /**@private */\r\n    private _loadings: Map<string, LoadTask>;\r\n    /**@private */\r\n    private _queue: Array<DownloadItem>;\r\n    /**@private */\r\n    private _downloadings: Set<DownloadItem>;\r\n\r\n    /**\r\n     * <p>创建一个新的 <code>Loader</code> 实例。</p>\r\n     * <p><b>注意：</b>请使用Laya.loader加载资源，这是一个单例，不要手动实例化此类，否则会导致不可预料的问题。</p>\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._loadings = new Map();\r\n        this._queue = [];\r\n        this._downloadings = new Set();\r\n    }\r\n\r\n    /**\r\n     * 是否有任何的加载任务在进行\r\n     */\r\n    public get loading(): boolean {\r\n        return this._loadings.size > 0;\r\n    }\r\n\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param type 资源类型。比如：Loader.IMAGE。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], type?: string, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>加载资源。</p>\r\n     * @param url 要加载的资源地址或资源地址数组。\r\n     * @param options 加载选项。\r\n     * @param onProgress 进度回调函数。\r\n     * @return 根据url类型不同分为2种情况：1. url为String或ILoadURL类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], options?: Readonly<ILoadOptions>, onProgress?: ProgressCallback): Promise<any>;\r\n    /**\r\n     * <p>这是兼容2.0引擎的加载接口</p>\r\n     * <p>加载资源。</p>\r\n     * @param url\t\t要加载的单个资源地址或资源信息数组。比如：简单数组：[\"a.png\",\"b.png\"]；复杂数组[{url:\"a.png\",type:Loader.IMAGE,size:100,priority:1},{url:\"b.json\",type:Loader.JSON,size:50,priority:1}]。\r\n     * @param complete\t加载结束回调。根据url类型不同分为2种情况：1. url为String类型，也就是单个资源地址，如果加载成功，则回调参数值为加载完成的资源，否则为null；2. url为数组类型，则返回一个数组，数组每个元素为加载完成的资源或null。\r\n     * @param progress\t加载进度回调。回调参数值为当前资源的加载进度信息(0-1)。\r\n     * @param type\t\t资源类型。比如：Loader.IMAGE。\r\n     * @param priority\t(default = 0)加载的优先级，数字越大优先级越高，优先级高的优先加载。\r\n     * @param cache\t\t是否缓存。\r\n     * @param group\t\t分组，方便对资源进行管理。\r\n     * @param ignoreCache\t参数已废弃。\r\n     * @param useWorkerLoader(default = false)是否使用worker加载（只针对IMAGE类型和ATLAS类型，并且浏览器支持的情况下生效）\r\n     * @return Promise对象\r\n     */\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], complete?: Handler, progress?: Handler, type?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any>;\r\n    load(url: string | ILoadURL | (string | Readonly<ILoadURL>)[], arg1?: string | Readonly<ILoadOptions> | Handler, arg2?: ProgressCallback | Handler, arg3?: string, priority?: number, cache?: boolean, group?: string, ignoreCache?: boolean, useWorkerLoader?: boolean): Promise<any> {\r\n        let complete: Handler;\r\n        let type: string;\r\n        let options: ILoadOptions = dummyOptions;\r\n        if (arg1 instanceof Handler) {\r\n            complete = arg1;\r\n            type = arg3;\r\n        }\r\n        else if (typeof (arg1) === \"string\")\r\n            type = arg1;\r\n        else if (arg1 != null) {\r\n            type = arg1.type;\r\n            options = arg1;\r\n        }\r\n\r\n        if (priority != null || cache != null || group != null || useWorkerLoader != null) {\r\n            if (options === dummyOptions)\r\n                options = { priority, cache, group, useWorkerLoader };\r\n            else\r\n                options = Object.assign(options, { priority, cache, group, useWorkerLoader });\r\n        }\r\n\r\n        let onProgress: ProgressCallback;\r\n        if (arg2 instanceof Handler)\r\n            onProgress = (value: number) => arg2.runWith(value);\r\n        else\r\n            onProgress = arg2;\r\n\r\n        let promise: Promise<any>;\r\n        if (Array.isArray(url)) {\r\n            let pd: BatchProgress;\r\n            if (onProgress)\r\n                pd = new BatchProgress(onProgress);\r\n\r\n            let promises: Array<Promise<any>> = [];\r\n            for (let i = 0; i < url.length; i++) {\r\n                let url2 = url[i];\r\n                if (!url2)\r\n                    continue;\r\n\r\n                if (typeof (url2) === \"string\") {\r\n                    promises.push(this._load1(url2, type, options, pd?.createCallback()));\r\n                }\r\n                else {\r\n                    promises.push(this._load1(url2.url, url2.type || type,\r\n                        options !== dummyOptions ? Object.assign({}, options, url2) : url2, pd?.createCallback()));\r\n                }\r\n            }\r\n\r\n            promise = Promise.all(promises);\r\n        }\r\n        else if (typeof (url) === \"string\")\r\n            promise = this._load1(url, type, options, onProgress);\r\n        else\r\n            promise = this._load1(url.url, url.type || type,\r\n                options !== dummyOptions ? Object.assign({}, options, url) : url, onProgress);\r\n\r\n        if (complete)\r\n            return promise.then(result => {\r\n                complete.runWith(result);\r\n                return result;\r\n            });\r\n        else\r\n            return promise;\r\n    }\r\n\r\n    private _load1(url: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        if (LayaEnv.isPreview) {\r\n            if (url.startsWith(\"res://\")) {\r\n                let uuid = url.substring(6);\r\n                return AssetDb.inst.UUID_to_URL_async(uuid).then(url2 => {\r\n                    if (url2)\r\n                        return this._load2(url2, uuid, type, options, onProgress);\r\n                    else {\r\n                        !options.silent && Loader.warnFailed(url);\r\n                        return Promise.resolve(null);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                return AssetDb.inst.URL_to_UUID_async(url).then(uuid => {\r\n                    return this._load2(url, uuid, type, options, onProgress);\r\n                });\r\n            }\r\n        }\r\n        else\r\n            return this._load2(url, null, type, options, onProgress);\r\n    }\r\n\r\n    private _load2(url: string, uuid: string, type: string, options: ILoadOptions, onProgress: ProgressCallback): Promise<any> {\r\n        let { ext, typeId, main, loaderType } = Loader.getURLInfo(url, type);\r\n        if (!loaderType) {\r\n            !options.silent && Loader.warnFailed(url);\r\n            return Promise.resolve(null);\r\n        }\r\n        let formattedUrl = URL.formatURL(url);\r\n\r\n        if (options.group) {\r\n            let set = Loader.groupMap[options.group];\r\n            if (!set)\r\n                set = Loader.groupMap[options.group] = new Set();\r\n            set.add(formattedUrl);\r\n        }\r\n\r\n        let obsoluteRes: Resource;\r\n        if (options.cache == null || options.cache) {\r\n            let cacheRes = Loader._getRes(formattedUrl, type);\r\n            if (cacheRes !== undefined) {\r\n                if (cacheRes == null)\r\n                    return Promise.resolve(null);\r\n                else {\r\n                    if (!(cacheRes instanceof Resource))\r\n                        return Promise.resolve(cacheRes);\r\n\r\n                    if (cacheRes.obsolute)\r\n                        obsoluteRes = cacheRes;\r\n\r\n                    if (!obsoluteRes && (!cacheRes.uuid || !uuid || uuid == cacheRes.uuid))\r\n                        return Promise.resolve(cacheRes);\r\n                }\r\n            }\r\n        }\r\n\r\n        let loadingKey = formattedUrl;\r\n        if (!main)\r\n            loadingKey += \"@\" + typeId;\r\n        let task = this._loadings.get(loadingKey);\r\n        if (task) {\r\n            if (onProgress)\r\n                task.onProgress.add(onProgress);\r\n            return new Promise((resolve) => task.onComplete.add(resolve));\r\n        }\r\n\r\n        //判断是否在自动图集里\r\n        let atlasInfo = AtlasInfoManager.getFileLoadPath(formattedUrl);\r\n        if (atlasInfo) {\r\n            return this.load(atlasInfo.url, { type: Loader.ATLAS, baseUrl: atlasInfo.baseUrl }).then(() => {\r\n                return Loader.getRes(url, type);\r\n            });\r\n        }\r\n\r\n        if (loadTaskPool.length > 0)\r\n            task = loadTaskPool.pop();\r\n        else\r\n            task = new LoadTask();\r\n        task.type = type;\r\n        task.url = url;\r\n        task.uuid = uuid;\r\n        task.ext = ext;\r\n        options = Object.assign(task.options, options);\r\n        delete options.type;\r\n        if (options.priority == null)\r\n            options.priority = 0;\r\n        if (options.useWorkerLoader == null)\r\n            options.useWorkerLoader = WorkerLoader.enable;\r\n        if (onProgress)\r\n            task.onProgress.add(onProgress);\r\n        task.loader = this;\r\n        task.obsoluteInst = obsoluteRes;\r\n\r\n        let assetLoader = new loaderType();\r\n        this._loadings.set(loadingKey, task);\r\n\r\n        let promise: Promise<any>;\r\n        try {\r\n            promise = assetLoader.load(task);\r\n        }\r\n        catch (err: any) {\r\n            !options.silent && Loader.warnFailed(url, err);\r\n\r\n            promise = Promise.resolve(null);\r\n        }\r\n\r\n        return promise.then(content => {\r\n            if (content instanceof Resource) {\r\n                content._setCreateURL(url, uuid);\r\n            }\r\n\r\n            if (task.options.cache == null || task.options.cache)\r\n                Loader._cacheRes(formattedUrl, content, typeId, main);\r\n\r\n            task.progress.update(-1, 1);\r\n\r\n            //console.log(\"Loaded \" + url);\r\n            task.onComplete.invoke(content);\r\n            return content;\r\n        }).catch(error => {\r\n            !options.silent && Loader.warnFailed(url, error);\r\n\r\n            if (task.options.cache == null || task.options.cache)\r\n                Loader._cacheRes(formattedUrl, null, typeId, main);\r\n\r\n            task.onComplete.invoke(null);\r\n            return null;\r\n        }).then((result: any) => {\r\n            this._loadings.delete(loadingKey);\r\n            task.reset();\r\n            loadTaskPool.push(task);\r\n            if (this._loadings.size == 0)\r\n                this.event(Event.COMPLETE);\r\n            return result;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 从指定URL下载。这是较为底层的下载资源的方法，它和load方法不同，不对返回的数据进行解析，也不会缓存下载的内容。\r\n     * 成功则返回下载的数据，失败返回null。\r\n     */\r\n    fetch<K extends keyof ContentTypeMap>(url: string, contentType: K, onProgress?: ProgressCallback, options?: Readonly<ILoadOptions>): Promise<ContentTypeMap[K]> {\r\n        options = options || dummyOptions;\r\n        let task: DownloadItem = {\r\n            originalUrl: url,\r\n            url: url,\r\n            contentType: contentType,\r\n            priority: options.priority ?? 1,\r\n            retryCnt: 0,\r\n            onProgress: onProgress,\r\n            onComplete: null,\r\n        };\r\n        if (options.useWorkerLoader) {\r\n            task.useWorkerLoader = true;\r\n            task.workerLoaderOptions = options.workerLoaderOptions;\r\n        }\r\n        if (options.blob)\r\n            task.blob = options.blob;\r\n        if (options.noRetry)\r\n            task.retryCnt = -1;\r\n        if (options.silent)\r\n            task.silent = true;\r\n\r\n        return AssetDb.inst.resolveURL(url).then(url => {\r\n            return new Promise((resolve) => {\r\n                task.url = URL.formatURL(url);\r\n                task.onComplete = resolve;\r\n                this.queueToDownload(task);\r\n            });\r\n        });\r\n    }\r\n\r\n    private queueToDownload(item: DownloadItem) {\r\n        if (this._downloadings.size < this.maxLoader) {\r\n            this.download(item);\r\n            return;\r\n        }\r\n\r\n        let priority = item.priority;\r\n        if (priority == 0)\r\n            this._queue.push(item);\r\n        else {\r\n            let i = this._queue.findIndex(e => e.priority < priority);\r\n            if (i != -1)\r\n                this._queue.splice(i, 0, item);\r\n            else\r\n                this._queue.push(item);\r\n        }\r\n    }\r\n\r\n    private download(item: DownloadItem) {\r\n        this._downloadings.add(item);\r\n        let url = URL.postFormatURL(item.url);\r\n\r\n        if (item.contentType == \"image\") {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                if (!(preloadedContent instanceof ArrayBuffer)) {\r\n                    this.completeItem(item, preloadedContent);\r\n                    return;\r\n                }\r\n\r\n                //cache as arraybuffer\r\n                item.blob = preloadedContent;\r\n            }\r\n\r\n            if (item.blob) {\r\n                Loader.downloader.imageWithBlob(item, item.blob, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.retryCnt = -1; //失败无需重试\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else if (item.useWorkerLoader) {\r\n                Loader.downloader.imageWithWorker(item, url, item.originalUrl, item.onProgress, (data: any, error: string) => {\r\n                    if (!data)\r\n                        item.useWorkerLoader = false; //重试不用worker\r\n                    this.completeItem(item, data, error);\r\n                });\r\n            }\r\n            else {\r\n                Loader.downloader.image(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                    this.completeItem(item, data, error));\r\n            }\r\n        }\r\n        else if (item.contentType == \"sound\") {\r\n            Loader.downloader.audio(item, url, item.originalUrl, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n        else {\r\n            let preloadedContent = Loader.preLoadedMap[item.url];\r\n            if (preloadedContent) {\r\n                this.completeItem(item, preloadedContent);\r\n                return;\r\n            }\r\n\r\n            Loader.downloader.common(item, url, item.originalUrl, item.contentType, item.onProgress, (data: any, error: string) =>\r\n                this.completeItem(item, data, error));\r\n        }\r\n    }\r\n\r\n    private completeItem(item: DownloadItem, content: any, error?: string) {\r\n        this._downloadings.delete(item);\r\n        if (content) {\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            item.onComplete(content);\r\n        }\r\n        else if (item.retryCnt != -1 && item.retryCnt < this.retryNum) {\r\n            item.retryCnt++;\r\n            if (!item.silent)\r\n                console.debug(`Retry to load ${item.url} (${item.retryCnt})`);\r\n            ILaya.systemTimer.once(this.retryDelay, this, this.queueToDownload, [item], false);\r\n        }\r\n        else {\r\n            !item.silent && Loader.warnFailed(item.url);\r\n            if (item.onProgress)\r\n                item.onProgress(1);\r\n\r\n            if (this._downloadings.size < this.maxLoader && this._queue.length > 0)\r\n                this.download(this._queue.shift());\r\n\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    private static getURLInfo(url: string, type?: string): URLInfo {\r\n        //先根据扩展名获得注册信息A\r\n        let ext = url.startsWith(\"data:\") ? \"png\" : Utils.getFileExtension(url);\r\n        let extEntry: Array<TypeMapEntry>;\r\n        if (ext.length > 0)\r\n            extEntry = Loader.extMap[ext];\r\n\r\n        let typeId: number;\r\n        let main: boolean;\r\n        let loaderType: new () => IResourceLoader;\r\n\r\n        if (type) { //指定了类型\r\n            let typeEntry = Loader.typeMap[type];\r\n            if (!typeEntry) {\r\n                Loader.warn(`not recognize type: '${type}'`);\r\n                return NullURLInfo;\r\n            }\r\n            typeId = typeEntry.typeId;\r\n\r\n            let i: number = 0;\r\n            if (extEntry) {\r\n                if (extEntry[0].typeId === typeId //优化，大部分情况均为如此\r\n                    || (i = extEntry.findIndex(e => e.typeId === typeId)) != -1) {\r\n                    main = i == 0;\r\n                    loaderType = extEntry[i].loaderType;\r\n                }\r\n                else {\r\n                    //未与扩展名匹配的情况，例如a.lh试图以Loader.JSON类型加载，这种组合没有注册，但仍然允许加载为副资源\r\n                    main = false;\r\n                    loaderType = typeEntry.loaderType;\r\n                }\r\n            }\r\n            else { //扩展名没有注册的情况\r\n                main = type != Loader.TEXTURE2D;\r\n                loaderType = typeEntry.loaderType;\r\n            }\r\n        }\r\n        else {\r\n            if (!extEntry) {\r\n                Loader.warn(`not recognize the resource suffix: '${url}'`);\r\n                return NullURLInfo;\r\n            }\r\n\r\n            //没有自定类型，则认为是主资源\r\n            main = true;\r\n            typeId = extEntry[0].typeId;\r\n            loaderType = extEntry[0].loaderType;\r\n        }\r\n\r\n        return { ext, main, typeId, loaderType };\r\n    }\r\n\r\n    private static warnFailed(url: string, err?: any) {\r\n        this.warn(`Failed to load ${url}`, err);\r\n    }\r\n\r\n    public static warn(msg: string, err?: any) {\r\n        let errMsg = err ? (err.stack ? err.stack : err) : \"\";\r\n        if (errMsg)\r\n            errMsg = \": \" + errMsg;\r\n        console.warn(msg + errMsg);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的资源。\r\n     * @param url 资源地址。\r\n     * @return 返回资源。\r\n     */\r\n    static getRes(url: string, type?: string): any {\r\n        url = URL.formatURL(url);\r\n        let ret = Loader._getRes(url, type);\r\n        return ret || null;\r\n    }\r\n\r\n    private static _getRes(url: string, type?: string): any {\r\n        let resArr = Loader.loadedMap[url];\r\n        if (!resArr)\r\n            return undefined;\r\n\r\n        let ret: any;\r\n        if (type) {\r\n            let typeEntry = <TypeMapEntry>Loader.typeMap[type];\r\n            if (!typeEntry)\r\n                return undefined;\r\n\r\n            if (resArr.length == 2) { //优化，大部分情况都是只有主资源，也就是两个元素\r\n                if (resArr[0] == typeEntry.typeId)\r\n                    ret = resArr[1];\r\n            }\r\n            else {\r\n                let i = resArr.indexOf(typeEntry.typeId);\r\n                if (i != -1)\r\n                    ret = resArr[i + 1];\r\n            }\r\n        }\r\n        else\r\n            ret = resArr[1]; //主资源\r\n\r\n        if ((ret instanceof Resource) && ret.destroyed)\r\n            return undefined;\r\n        else\r\n            return ret;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getTexture2D(url: string): Texture2D {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    static getBaseTexture<T extends BaseTexture>(url: string): T {\r\n        return Loader.getRes(url, Loader.TEXTURE2D);\r\n    }\r\n\r\n    /**\r\n     * 获取指定资源地址的图集地址列表。\r\n     * @param url 图集地址。\r\n     * @return 返回地址集合。\r\n     */\r\n    static getAtlas(url: string): AtlasResource {\r\n        return Loader.getRes(url, Loader.ATLAS);\r\n    }\r\n\r\n    getRes(url: string, type?: string): any {\r\n        return Loader.getRes(url, type);\r\n    }\r\n\r\n    static createNodes<T extends Node>(url: string): T {\r\n        return <T>(<Prefab>Loader.getRes(url))?.create();\r\n    }\r\n\r\n    /**\r\n     * 缓存资源。\r\n     * @param url 资源地址。\r\n     * @param data 要缓存的内容。\r\n     */\r\n    static cacheRes(url: string, data: any, type?: string): void {\r\n        url = URL.formatURL(url);\r\n        let urlInfo = Loader.getURLInfo(url, type);\r\n        if (urlInfo.typeId != null)\r\n            Loader._cacheRes(url, data, urlInfo.typeId, urlInfo.main);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _cacheRes(url: string, data: any, typeId: number, main: boolean) {\r\n        let entry: Array<any> = Loader.loadedMap[url];\r\n        if (main) {\r\n            if (entry) {\r\n                entry[0] = typeId;\r\n                entry[1] = data;\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [typeId, data];\r\n        }\r\n        else {\r\n            if (entry) {\r\n                let i = entry.findIndex(e => e === typeId);\r\n                if (i != -1)\r\n                    entry[i + 1] = data;\r\n                else\r\n                    entry.push(typeId, data);\r\n            }\r\n            else\r\n                entry = Loader.loadedMap[url] = [null, undefined, typeId, data];\r\n        }\r\n    }\r\n\r\n    cacheRes(url: string, data: any, type?: string): void {\r\n        Loader.cacheRes(url, data, type);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    static clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * 清理指定资源地址缓存。\r\n     * @param url 资源地址。\r\n     * @param checkObj 如果缓存中的对象是这个，才清除，否则不清除\r\n     */\r\n    clearRes(url: string, checkObj?: any): void {\r\n        url = URL.formatURL(url);\r\n        Loader._clearRes(url, checkObj);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _clearRes(url: string, checkObj?: any) {\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n\r\n        if (checkObj) {\r\n            if (entry[1] == checkObj) {\r\n                if (entry.length == 2)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry[1] = undefined;\r\n            }\r\n            else {\r\n                let i = entry.indexOf(checkObj);\r\n                if (i == -1)\r\n                    return;\r\n\r\n                if (entry.length == 4 && entry[0] == null)\r\n                    delete Loader.loadedMap[url];\r\n                else\r\n                    entry.splice(i - 1, 2);\r\n            }\r\n\r\n            if ((checkObj instanceof Resource) && !checkObj.destroyed) {\r\n                checkObj.destroy();\r\n            }\r\n        }\r\n        else {\r\n            delete Loader.loadedMap[url];\r\n\r\n            if (entry.length > 2) {\r\n                for (let i = 1; i < entry.length; i += 2) {\r\n                    let obj = entry[i];\r\n                    if ((obj instanceof Resource) && !obj.destroyed) {\r\n                        obj.destroy();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                let obj = entry[1];\r\n                if ((obj instanceof Resource) && !obj.destroyed) {\r\n                    obj.destroy();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁Texture使用的图片资源，保留texture壳，如果下次渲染的时候，发现texture使用的图片资源不存在，则会自动恢复\r\n     * 相比clearRes，clearTextureRes只是清理texture里面使用的图片资源，并不销毁texture，再次使用到的时候会自动恢复图片资源\r\n     * 而clearRes会彻底销毁texture，导致不能再使用；clearTextureRes能确保立即销毁图片资源，并且不用担心销毁错误\r\n     * @param url 图集地址或者texture地址，比如 \"res/atlas/comp.atlas\"或\"hall/bg.jpg\"\r\n     */\r\n    clearTextureRes(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let entry = Loader.loadedMap[url];\r\n        if (!entry)\r\n            return;\r\n        let res = entry[1];\r\n        if (res instanceof Texture) {\r\n            res.disposeBitmap();\r\n        }\r\n        else if (res instanceof AtlasResource) {\r\n            for (let tex of res.textures)\r\n                tex.disposeBitmap();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置资源分组。\r\n     * @param url 资源地址。\r\n     * @param group 分组名。\r\n     */\r\n    static setGroup(url: string, group: string): void {\r\n        url = URL.formatURL(url);\r\n        let set = Loader.groupMap[group];\r\n        if (!set)\r\n            set = Loader.groupMap[group] = new Set();\r\n        set.add(url);\r\n    }\r\n\r\n    /**\r\n     * 根据分组清理资源。\r\n     * @param group 分组名\r\n     */\r\n    static clearResByGroup(group: string): void {\r\n        let set = Loader.groupMap[group];\r\n        if (set) {\r\n            for (let k of set)\r\n                Loader._clearRes(k);\r\n        }\r\n    }\r\n\r\n    /** 清理当前未完成的加载，所有未加载的内容全部停止加载。*/\r\n    clearUnLoaded(): void {\r\n        if (this._queue.length == 0)\r\n            return;\r\n\r\n        let arr = this._queue.concat();\r\n        this._queue.length = 0;\r\n        for (let item of arr)\r\n            item.onComplete(null);\r\n    }\r\n\r\n    /**\r\n     * 根据地址集合清理掉未加载的内容\r\n     * @param urls 资源地址集合\r\n     */\r\n    cancelLoadByUrls(urls: any[]): void {\r\n        if (!urls) return;\r\n        for (var i: number = 0, n: number = urls.length; i < n; i++) {\r\n            this.cancelLoadByUrl(urls[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址清理掉未加载的内容\r\n     * @param url 资源地址\r\n     */\r\n    cancelLoadByUrl(url: string): void {\r\n        url = URL.formatURL(url);\r\n        let i = this._queue.findIndex(item => item.url == url);\r\n        if (i != -1) {\r\n            let item = this._queue[i];\r\n            this._queue.splice(i, 1);\r\n            item.onComplete(null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 载入一个分包\r\n     * @path 小游戏的分包路径\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, onProgress?: ProgressCallback): Promise<void>;\r\n    /**\r\n     * 载入一个分包。\r\n     * @path 分包路径\r\n     * @remoteUrl 如果分包是一个远程包，那需要提供远程资源服务器的地址，例如\"http://cdn.com/\"\r\n     * @onProgress 加载进度回调\r\n     */\r\n    loadPackage(path: string, remoteUrl?: string, onProgress?: ProgressCallback): Promise<void>;\r\n    loadPackage(path: string, arg2?: string | ProgressCallback, arg3?: ProgressCallback): Promise<void> {\r\n        let progress: ProgressCallback;\r\n        let remoteUrl: string;\r\n\r\n        if (typeof (arg2) === \"string\") {\r\n            remoteUrl = arg2;\r\n            progress = arg3;\r\n        } else {\r\n            progress = arg2;\r\n        }\r\n\r\n        if (remoteUrl) {\r\n            if (!remoteUrl.endsWith(\"/\"))\r\n                remoteUrl += \"/\";\r\n            let tmpPath: string = path + \"/\";\r\n            URL.basePaths[tmpPath] = remoteUrl;\r\n            return this._loadSubFileConfig(path, progress);\r\n        } else {\r\n            if (LayaEnv.isPreview)\r\n                return Promise.resolve();\r\n            let plat: any = null;\r\n            if (ILaya.Browser.onMiniGame) {\r\n                // wechat\r\n                plat = ILaya.Browser.window.wx;\r\n            } else if (ILaya.Browser.onTTMiniGame) {\r\n                // bytedance\r\n                plat = ILaya.Browser.window.tt;\r\n            } else if (ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onQGMiniGame) {\r\n                // mi/vivo/oppo\r\n                plat = ILaya.Browser.window.qg;\r\n            } else if (ILaya.Browser.onAlipayMiniGame) {\r\n                // alipay\r\n                plat = ILaya.Browser.window.my;\r\n            } else {\r\n                return this._loadSubFileConfig(path, progress);\r\n            }\r\n\r\n            return this._loadMiniPackage(plat, path, progress).then(() =>\r\n                this._loadSubFileConfig(path, progress)\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    private _loadMiniPackage(mini: any, packName: string, progress?: ProgressCallback): Promise<any> {\r\n        if (!(packName.length > 0)) return Promise.resolve();\r\n        return new Promise((resolve: (value: any) => void, reject: (reason?: any) => void) => {\r\n            let loadTask: any = mini.loadSubpackage({\r\n                name: packName,\r\n                success: (res: any) => {\r\n                    resolve(res);\r\n                },\r\n                fail: (res: any) => {\r\n                    resolve(res);\r\n                }\r\n            });\r\n\r\n            loadTask.onProgressUpdate((res: any) => {\r\n                progress && progress(res);\r\n            });\r\n        })\r\n    }\r\n\r\n\r\n    private _loadSubFileConfig(path: string, onProgress: ProgressCallback): Promise<any> {\r\n        if (path.length > 0)\r\n            path += \"/\";\r\n\r\n        return this.fetch(path + \"fileconfig.json\", \"json\", onProgress).then(fileConfig => {\r\n            let files: Array<string> = [];\r\n            let col = fileConfig.files;\r\n            for (let k in col) {\r\n                if (k.length > 0) {\r\n                    for (let file of col[k])\r\n                        files.push(k + \"/\" + file);\r\n                }\r\n                else {\r\n                    for (let file of col[k])\r\n                        files.push(file);\r\n                }\r\n            }\r\n\r\n            if (fileConfig.hash) {\r\n                let i = 0;\r\n                for (let k of fileConfig.hash) {\r\n                    if (k != null)\r\n                        URL.version[files[i]] = k;\r\n                    i++;\r\n                }\r\n            }\r\n\r\n            for (let c of fileConfig.config) {\r\n                let file = files[c.i];\r\n                switch (c.t) {\r\n                    case 0: //图片\r\n                        AssetDb.inst.metaMap[file] = c;\r\n                        break;\r\n                    case 1: //自动图集\r\n                        AtlasInfoManager.addAtlas(file, c.prefix, c.frames);\r\n                        break;\r\n                    case 2: //Shader\r\n                        AssetDb.inst.shaderNameMap[c.shaderName] = file;\r\n                        break;\r\n                    case 3: //render texture\r\n                        Loader.preLoadedMap[URL.formatURL(file)] = c;\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass LoadTask implements ILoadTask {\r\n    type: string;\r\n    url: string;\r\n    uuid: string;\r\n    ext: string;\r\n    options: ILoadOptions;\r\n    loader: Loader;\r\n    progress: BatchProgress;\r\n    obsoluteInst: Resource;\r\n\r\n    onProgress: Delegate;\r\n    onComplete: Delegate;\r\n\r\n    constructor() {\r\n        this.options = {};\r\n        this.onProgress = new Delegate();\r\n        this.onComplete = new Delegate();\r\n        this.progress = new BatchProgress((progress: number) => this.onProgress.invoke(progress));\r\n    }\r\n\r\n    public reset() {\r\n        for (let k in this.options)\r\n            delete this.options[k];\r\n        this.onProgress.clear();\r\n        this.onComplete.clear();\r\n        this.progress.reset();\r\n        this.obsoluteInst = null;\r\n    }\r\n}\r\n\r\nconst loadTaskPool: Array<LoadTask> = [];\r\nconst dummyOptions: ILoadOptions = {};\r\n\r\ninterface DownloadItem {\r\n    url: string;\r\n    originalUrl: string;\r\n    contentType: string;\r\n    priority: number;\r\n    useWorkerLoader?: boolean;\r\n    workerLoaderOptions?: Record<string, any>;\r\n    blob?: ArrayBuffer;\r\n    retryCnt?: number;\r\n    silent?: boolean;\r\n    onComplete: (content: any) => void;\r\n    onProgress: ProgressCallback;\r\n}","/**\r\n\t * @private\r\n\t * <code>MathUtil</code> 是一个数据处理工具类。\r\n\t */\r\nexport class MathUtil {\r\n\r\n    static subtractVector3(l: Float32Array, r: Float32Array, o: Float32Array): void {\r\n        o[0] = l[0] - r[0];\r\n        o[1] = l[1] - r[1];\r\n        o[2] = l[2] - r[2];\r\n    }\r\n\r\n    static lerp(left: number, right: number, amount: number): number {\r\n        return left * (1 - amount) + right * amount;\r\n    }\r\n\r\n    static scaleVector3(f: Float32Array, b: number, e: Float32Array): void {\r\n        e[0] = f[0] * b;\r\n        e[1] = f[1] * b;\r\n        e[2] = f[2] * b;\r\n    }\r\n\r\n    static lerpVector3(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n    }\r\n\r\n    static lerpVector4(l: Float32Array, r: Float32Array, t: number, o: Float32Array): void {\r\n        var ax: number = l[0], ay: number = l[1], az: number = l[2], aw: number = l[3];\r\n        o[0] = ax + t * (r[0] - ax);\r\n        o[1] = ay + t * (r[1] - ay);\r\n        o[2] = az + t * (r[2] - az);\r\n        o[3] = aw + t * (r[3] - aw);\r\n    }\r\n\r\n    static slerpQuaternionArray(a: Float32Array, Offset1: number, b: Float32Array, Offset2: number, t: number, out: Float32Array, Offset3: number): Float32Array {\r\n\r\n        var ax: number = a[Offset1 + 0], ay: number = a[Offset1 + 1], az: number = a[Offset1 + 2], aw: number = a[Offset1 + 3], bx: number = b[Offset2 + 0], by: number = b[Offset2 + 1], bz: number = b[Offset2 + 2], bw: number = b[Offset2 + 3];\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out[Offset3 + 0] = scale0 * ax + scale1 * bx;\r\n        out[Offset3 + 1] = scale0 * ay + scale1 * by;\r\n        out[Offset3 + 2] = scale0 * az + scale1 * bz;\r\n        out[Offset3 + 3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取指定的两个点组成的线段的角度值。\r\n     * @param\tx0 点一的 X 轴坐标值。\r\n     * @param\ty0 点一的 Y 轴坐标值。\r\n     * @param\tx1 点二的 X 轴坐标值。\r\n     * @param\ty1 点二的 Y 轴坐标值。\r\n     * @return 角度值。\r\n     */\r\n    static getRotation(x0: number, y0: number, x1: number, y1: number): number {\r\n        return Math.atan2(y1 - y0, x1 - x0) / Math.PI * 180;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为1；如果b<则值为-1。\r\n     */\r\n    static sortBigFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? 1 : -1;\r\n    }\r\n\r\n    /**\r\n     * 一个用来确定数组元素排序顺序的比较函数。\r\n     * @param\ta 待比较数字。\r\n     * @param\tb 待比较数字。\r\n     * @return 如果a等于b 则值为0；如果b>a则值为-1；如果b<则值为1。\r\n     */\r\n    static sortSmallFirst(a: number, b: number): number {\r\n        if (a == b) return 0;\r\n        return b > a ? -1 : 1;\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return b、a转化成数字的差值 (b-a)。\r\n     */\r\n    static sortNumBigFirst(a: any, b: any): number {\r\n        return parseFloat(b) - parseFloat(a);\r\n    }\r\n\r\n    /**\r\n     * 将指定的元素转为数字进行比较。\r\n     * @param\ta 待比较元素。\r\n     * @param\tb 待比较元素。\r\n     * @return a、b转化成数字的差值 (a-b)。\r\n     */\r\n    static sortNumSmallFirst(a: any, b: any): number {\r\n        return parseFloat(a) - parseFloat(b);\r\n    }\r\n\r\n    /**\r\n     * 返回根据对象指定的属性进行排序的比较函数。\r\n     * @param\tkey 排序要依据的元素属性名。\r\n     * @param\tbigFirst 如果值为true，则按照由大到小的顺序进行排序，否则按照由小到大的顺序进行排序。\r\n     * @param\tforceNum 如果值为true，则将排序的元素转为数字进行比较。\r\n     * @return 排序函数。\r\n     */\r\n    static sortByKey(key: string, bigFirst: boolean = false, forceNum: boolean = true): (a: any, b: any) => number {\r\n        var _sortFun: Function;\r\n        if (bigFirst) {\r\n            _sortFun = forceNum ? MathUtil.sortNumBigFirst : MathUtil.sortBigFirst;\r\n        } else {\r\n            _sortFun = forceNum ? MathUtil.sortNumSmallFirst : MathUtil.sortSmallFirst;\r\n        }\r\n        return function (a: any, b: any): number {\r\n            return _sortFun(a[key], b[key]);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { MathUtil } from \"../maths/MathUtil\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 节点关键帧动画播放类。解析播放IDE内制作的节点动画。\r\n */\r\nexport class FrameAnimation extends AnimationBase {\r\n\r\n    /**@private */\r\n    private static _sortIndexFun(objpre: any, objnext: any) {\r\n        return objpre.index - objnext.index\r\n    }\r\n\r\n    /**@internal id对象表*/\r\n    _targetDic: any;\r\n    /**@internal 动画数据*/\r\n    _animationData: any;\r\n    /**@private */\r\n    protected _usedFrames: any[];\r\n\r\n    constructor() {\r\n        super();\r\n        if (FrameAnimation._sortIndexFun === undefined) {\r\n            FrameAnimation._sortIndexFun = MathUtil.sortByKey(\"index\", false, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 初始化动画数据\r\n     * @param targetDic 节点ID索引\r\n     * @param animationData 动画数据\r\n     */\r\n    _setUp(targetDic: any, animationData: any): void {\r\n        this._targetDic = targetDic;\r\n        this._animationData = animationData;\r\n        this.interval = 1000 / animationData.frameRate;\r\n        if (animationData.parsed) {\r\n            this._count = animationData.count;\r\n            this._labels = animationData.labels;\r\n            this._usedFrames = animationData.animationNewFrames;\r\n        } else {\r\n            this._usedFrames = [];\r\n            this._calculateDatas();\r\n\r\n            animationData.parsed = true;\r\n            animationData.labels = this._labels;\r\n            animationData.count = this._count;\r\n            animationData.animationNewFrames = this._usedFrames;\r\n        }\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this._targetDic = null;\r\n        this._animationData = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 将节点设置到某一帧的状态\r\n     * @param node 节点ID\r\n     * @param frame\r\n     * @param targetDic 节点表\r\n     */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!targetDic) targetDic = this._targetDic;\r\n        var target: any = targetDic[node.target];\r\n        if (!target) {\r\n            //trace(\"loseTarget:\",node.target);\r\n            return;\r\n        }\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            if (propFrames.length > frame) {\r\n                value = propFrames[frame];\r\n            } else {\r\n                value = propFrames[propFrames.length - 1];\r\n            }\r\n            target[key] = value;\r\n        }\r\n        var funkeys: any[] = node.funkeys;\r\n        len = funkeys.length;\r\n        var funFrames: any;\r\n        if (len == 0) return;\r\n        for (i = 0; i < len; i++) {\r\n            key = funkeys[i];\r\n            funFrames = frames[key];\r\n            if (funFrames[frame] !== undefined) {\r\n                target[key] && target[key].apply(target, funFrames[frame]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算帧数据\r\n     */\r\n    private _calculateDatas(): void {\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length, tNode: any;\r\n        this._count = 0;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            this._calculateKeyFrames(tNode);\r\n        }\r\n        this._count += 1;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算某个节点的帧数据\r\n     */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n        if (!node.frames) node.frames = {};\r\n        if (!node.keys) node.keys = [];\r\n        else node.keys.length = 0;\r\n\r\n        if (!node.funkeys) node.funkeys = [];\r\n        else node.funkeys.length = 0;\r\n\r\n        if (!node.initValues) node.initValues = {};\r\n        for (key in keyFrames) {\r\n            var isFun: boolean = key.indexOf(\"()\") != -1;\r\n            tKeyFrames = keyFrames[key];\r\n            if (isFun) key = key.substr(0, key.length - 2);\r\n            if (!node.frames[key]) {\r\n                node.frames[key] = [];\r\n            }\r\n            if (!isFun) {\r\n                if (this._targetDic && this._targetDic[target]) {\r\n                    node.initValues[key] = this._targetDic[target][key];\r\n                }\r\n\r\n                tKeyFrames.sort(FrameAnimation._sortIndexFun);\r\n                node.keys.push(key);\r\n                this._calculateNodePropFrames(tKeyFrames, node.frames[key], key, target);\r\n            }\r\n            else {\r\n                node.funkeys.push(key);\r\n                var map: any[] = node.frames[key];\r\n                for (var i: number = 0; i < tKeyFrames.length; i++) {\r\n                    var temp: any = tKeyFrames[i];\r\n                    map[temp.index] = temp.value;\r\n                    if (temp.index > this._count) this._count = temp.index;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 重置节点，使节点恢复到动画之前的状态，方便其他动画控制\r\n     */\r\n    resetNodes(): void {\r\n        if (!this._targetDic) return;\r\n        if (!this._animationData) return;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        var tNode: any;\r\n        var initValues: any;\r\n        for (i = 0; i < len; i++) {\r\n            tNode = nodes[i];\r\n            initValues = tNode.initValues;\r\n            if (!initValues) continue;\r\n            var target: any = this._targetDic[tNode.target];\r\n            if (!target) continue;\r\n            var key: string;\r\n            for (key in initValues) {\r\n                target[key] = initValues[key];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算节点某个属性的帧数据\r\n     */\r\n    private _calculateNodePropFrames(keyframes: any[], frames: any[], key: string, target: number): void {\r\n        var i: number, len: number = keyframes.length - 1;\r\n        frames.length = keyframes[len].index + 1;\r\n        for (i = 0; i < len; i++) {\r\n            this._dealKeyFrame(keyframes[i]);\r\n            this._calculateFrameValues(keyframes[i], keyframes[i + 1], frames);\r\n        }\r\n        if (len == 0) {\r\n            frames[0] = keyframes[0].value;\r\n            if (this._usedFrames) this._usedFrames[keyframes[0].index] = true;\r\n        }\r\n        this._dealKeyFrame(keyframes[i]);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private _dealKeyFrame(keyFrame: any): void {\r\n        if (keyFrame.label && keyFrame.label != \"\") this.addLabel(keyFrame.label, keyFrame.index);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 计算两个关键帧直接的帧数据\r\n     */\r\n    private _calculateFrameValues(startFrame: any, endFrame: any, result: any[]): void {\r\n        var i: number, easeFun: Function;\r\n        var start: number = startFrame.index, end: number = endFrame.index;\r\n        var startValue: number = startFrame.value;\r\n        var dValue: number = endFrame.value - startFrame.value;\r\n        var dLen: number = end - start;\r\n        var frames: any[] = this._usedFrames;\r\n        if (end > this._count) this._count = end;\r\n        if (startFrame.tween) {\r\n            easeFun = (Ease as any)[startFrame.tweenMethod];\r\n            if (easeFun == null) easeFun = Ease.linearNone;\r\n            for (i = start; i < end; i++) {\r\n                result[i] = easeFun(i - start, startValue, dValue, dLen);\r\n                if (frames) frames[i] = true;\r\n            }\r\n        } else {\r\n            for (i = start; i < end; i++) {\r\n                result[i] = startValue;\r\n            }\r\n        }\r\n        if (frames) {\r\n            frames[startFrame.index] = true;\r\n            frames[endFrame.index] = true;\r\n        }\r\n        result[endFrame.index] = endFrame.value;\r\n    }\r\n}\r\n","import { FrameAnimation } from \"./FrameAnimation\"\r\nimport { Graphics } from \"./Graphics\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Loader } from \"../net/Loader\"\r\nimport { Texture } from \"../resource/Texture\"\r\n\r\n/**\r\n * Graphics动画解析器\r\n * @private\r\n */\r\nexport class GraphicAnimation extends FrameAnimation {\r\n    /**@private */\r\n    animationList: any[];\r\n    /**@private */\r\n    animationDic: any;\r\n    /**@private */\r\n    protected _nodeList: any[];\r\n    /**@private */\r\n    protected _nodeDefaultProps: any;\r\n    /**@private */\r\n    protected _gList: any[];\r\n    /**@private */\r\n    protected _nodeIDAniDic: any = {};\r\n\r\n    /**@private */\r\n    protected static _drawTextureCmd: any[] = [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", -1], [\"height\", -1], [\"pivotX\", 0], [\"pivotY\", 0], [\"scaleX\", 1], [\"scaleY\", 1], [\"rotation\", 0], [\"alpha\", 1], [\"skewX\", 0], [\"skewY\", 0], [\"anchorX\", 0], [\"anchorY\", 0]];\r\n    /**@private */\r\n    protected static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _I: GraphicAnimation;\r\n    /**@private */\r\n    private static _rootMatrix: Matrix;\r\n    /**@private */\r\n    private _rootNode: any;\r\n    /**@private */\r\n    protected _nodeGDic: any;\r\n\r\n    /**@private */\r\n    private _parseNodeList(uiView: any): void {\r\n        if (!this._nodeList) this._nodeList = [];\r\n        this._nodeDefaultProps[uiView.compId] = uiView.props;\r\n        if (uiView.compId) this._nodeList.push(uiView.compId);\r\n        var childs: any[] = uiView.child;\r\n        if (childs) {\r\n            var i: number, len: number = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._parseNodeList(childs[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _calGraphicData(aniData: any): void {\r\n        this._setUp(null, aniData);\r\n        this._createGraphicData();\r\n        if (this._nodeIDAniDic) {\r\n            var key: string;\r\n            for (key in this._nodeIDAniDic) {\r\n                this._nodeIDAniDic[key] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _createGraphicData(): void {\r\n        var gList: any[] = [];\r\n        var i: number, len: number = this.count;\r\n        var animationDataNew: any[] = this._usedFrames;\r\n        if (!animationDataNew) animationDataNew = [];\r\n        var preGraphic: Graphics;\r\n        for (i = 0; i < len; i++) {\r\n            if (animationDataNew[i] || !preGraphic) {\r\n                preGraphic = this._createFrameGraphic(i);\r\n            }\r\n            gList.push(preGraphic);\r\n        }\r\n        this._gList = gList;\r\n    }\r\n\r\n    /**@private */\r\n    protected _createFrameGraphic(frame: number): any {\r\n        var g: Graphics = new Graphics();\r\n        if (!GraphicAnimation._rootMatrix) GraphicAnimation._rootMatrix = new Matrix();\r\n        this._updateNodeGraphic(this._rootNode, frame, GraphicAnimation._rootMatrix, g);\r\n        //_updateNodeGraphic2(_rootNode, frame, g);\r\n        return g;\r\n    }\r\n\r\n    protected _updateNodeGraphic(node: any, frame: number, parentTransfrom: Matrix, g: Graphics, alpha: number = 1): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!tNodeG.resultTransform)\r\n            tNodeG.resultTransform = new Matrix();\r\n        var tResultTransform: Matrix;\r\n        tResultTransform = tNodeG.resultTransform;\r\n        Matrix.mul(tNodeG.transform, parentTransfrom, tResultTransform);\r\n        var tTex: Texture;\r\n        var tGraphicAlpha: number = tNodeG.alpha * alpha;\r\n        if (tGraphicAlpha < 0.01) return;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                if (tResultTransform._checkTransform()) {\r\n                    g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tResultTransform, tGraphicAlpha);\r\n                    tNodeG.resultTransform = null;\r\n                } else {\r\n                    g.drawTexture(tTex, tResultTransform.tx, tResultTransform.ty, tNodeG.width, tNodeG.height, null, tGraphicAlpha);\r\n                }\r\n            }\r\n        }\r\n        var childs: any[] = node.child;\r\n        if (!childs) return;\r\n        var i: number, len: number;\r\n        len = childs.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._updateNodeGraphic(childs[i], frame, tResultTransform, g, tGraphicAlpha);\r\n        }\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param tNodeG \r\n     * @param g \r\n     */\r\n    protected _updateNoChilds(tNodeG: GraphicNode, g: Graphics): void {\r\n        if (!tNodeG.skin) return;\r\n        var tTex: Texture = this._getTextureByUrl(tNodeG.skin);\r\n        if (!tTex) return;\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        if (!onlyTranslate) {\r\n            g.drawTexture(tTex, 0, 0, tNodeG.width, tNodeG.height, tTransform.clone(), tNodeG.alpha);\r\n        } else {\r\n            g.drawTexture(tTex, tTransform.tx, tTransform.ty, tNodeG.width, tNodeG.height, null, tNodeG.alpha);\r\n        }\r\n    }\r\n\r\n    protected _updateNodeGraphic2(node: any, frame: number, g: Graphics): void {\r\n        var tNodeG: GraphicNode;\r\n        tNodeG = this._nodeGDic[node.compId] = this._getNodeGraphicData(node.compId, frame, this._nodeGDic[node.compId]);\r\n        if (!node.child) {\r\n            this._updateNoChilds(tNodeG, g);\r\n            return;\r\n        }\r\n        var tTransform: Matrix = tNodeG.transform;\r\n        tTransform._checkTransform();\r\n        var onlyTranslate: boolean;\r\n        onlyTranslate = !tTransform._bTransform;\r\n        var hasTrans: boolean;\r\n        hasTrans = onlyTranslate && (tTransform.tx != 0 || tTransform.ty != 0);\r\n        var ifSave: boolean;\r\n        ifSave = (tTransform._bTransform) || tNodeG.alpha != 1;\r\n        if (ifSave) g.save();\r\n        if (tNodeG.alpha != 1) g.alpha(tNodeG.alpha);\r\n        if (!onlyTranslate) g.transform(tTransform.clone());\r\n        else if (hasTrans) g.translate(tTransform.tx, tTransform.ty);\r\n\r\n        var childs: any[] = node.child;\r\n        var tTex: Texture;\r\n        if (tNodeG.skin) {\r\n            tTex = this._getTextureByUrl(tNodeG.skin);\r\n            if (tTex) {\r\n                g.drawImage(tTex, 0, 0, tNodeG.width, tNodeG.height);\r\n            }\r\n        }\r\n\r\n        if (childs) {\r\n            var i: number, len: number;\r\n            len = childs.length;\r\n            for (i = 0; i < len; i++) {\r\n                this._updateNodeGraphic2(childs[i], frame, g);\r\n            }\r\n        }\r\n\r\n        if (ifSave) {\r\n            g.restore();\r\n        } else {\r\n            if (!onlyTranslate) {\r\n                g.transform(tTransform.clone().invert());\r\n            } else if (hasTrans) {\r\n                g.translate(-tTransform.tx, -tTransform.ty);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        this._nodeIDAniDic[node.target] = node;\r\n    }\r\n\r\n    /**@private */\r\n    protected getNodeDataByID(nodeID: number): any {\r\n        return this._nodeIDAniDic[nodeID];\r\n    }\r\n\r\n    /**@private */\r\n    protected _getParams(obj: any, params: any[], frame: number, obj2: any): any[] {\r\n        var rst: any[] = GraphicAnimation._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], frame, params[i][1], obj2);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private */\r\n    private _getObjVar(obj: any, key: string, frame: number, noValue: any, obj2: any): any {\r\n        if (key in obj) {\r\n            var vArr: any[] = obj[key];\r\n            if (frame >= vArr.length) frame = vArr.length - 1;\r\n            return obj[key][frame];\r\n        }\r\n        if (key in obj2) {\r\n            return obj2[key];\r\n        }\r\n        return noValue;\r\n    }\r\n    /**\r\n     * @internal\r\n     * @param nodeID \r\n     * @param frame \r\n     * @param rst \r\n     */\r\n    protected _getNodeGraphicData(nodeID: number, frame: number, rst: GraphicNode): GraphicNode {\r\n        if (!rst)\r\n            rst = new GraphicNode();\r\n        if (!rst.transform) {\r\n            rst.transform = new Matrix();\r\n        } else {\r\n            rst.transform.identity();\r\n        }\r\n\r\n        var node: any = this.getNodeDataByID(nodeID);\r\n        if (!node) return rst;\r\n        var frameData: any = node.frames;\r\n        var params: any[] = this._getParams(frameData, GraphicAnimation._drawTextureCmd, frame, this._nodeDefaultProps[nodeID]);\r\n        var url: string = params[0];\r\n        var width: number, height: number;\r\n        var px: number = params[5], py: number = params[6];\r\n        var aX: number = params[13], aY: number = params[14];\r\n        var sx: number = params[7], sy: number = params[8];\r\n        var rotate: number = params[9];\r\n        var skewX: number = params[11], skewY: number = params[12]\r\n        width = params[3];\r\n        height = params[4];\r\n        if (width == 0 || height == 0) url = null;\r\n        if (width == -1) width = 0;\r\n        if (height == -1) height = 0;\r\n        var tex: Texture;\r\n        rst.skin = url;\r\n        rst.width = width;\r\n        rst.height = height;\r\n        if (url) {\r\n            tex = this._getTextureByUrl(url);\r\n            if (tex) {\r\n                if (!width)\r\n                    width = tex.sourceWidth;\r\n                if (!height)\r\n                    height = tex.sourceHeight;\r\n            } else {\r\n                console.warn(\"lost skin:\", url, \",you may load pics first\");\r\n            }\r\n        }\r\n\r\n        rst.alpha = params[10];\r\n\r\n        var m: Matrix = rst.transform;\r\n        if (aX != 0) {\r\n            px = aX * width;\r\n        }\r\n        if (aY != 0) {\r\n            py = aY * height;\r\n        }\r\n        if (px != 0 || py != 0) {\r\n            m.translate(-px, -py);\r\n        }\r\n        var tm: Matrix = null;\r\n        if (rotate || sx !== 1 || sy !== 1 || skewX || skewY) {\r\n            tm = GraphicAnimation._tempMt;\r\n            tm.identity();\r\n            tm._bTransform = true;\r\n            var skx: number = (rotate - skewX) * 0.0174532922222222; //laya.CONST.PI180;\r\n            var sky: number = (rotate + skewY) * 0.0174532922222222;\r\n            var cx: number = Math.cos(sky);\r\n            var ssx: number = Math.sin(sky);\r\n            var cy: number = Math.sin(skx);\r\n            var ssy: number = Math.cos(skx);\r\n            tm.a = sx * cx;\r\n            tm.b = sx * ssx;\r\n            tm.c = -sy * cy;\r\n            tm.d = sy * ssy;\r\n            tm.tx = tm.ty = 0;\r\n        }\r\n        if (tm) {\r\n            m = Matrix.mul(m, tm, m);\r\n        }\r\n\r\n        m.translate(params[1], params[2]);\r\n\r\n        return rst;\r\n    }\r\n    private static _tempMt: Matrix = new Matrix();\r\n\r\n    /**@private */\r\n    protected _getTextureByUrl(url: string): any {\r\n        return Loader.getRes(url);\r\n    }\r\n\r\n    /**@private */\r\n    setAniData(uiView: any, aniName: string = null): void {\r\n        if (uiView.animations) {\r\n            this._nodeDefaultProps = {};\r\n            this._nodeGDic = {};\r\n            if (this._nodeList) this._nodeList.length = 0;\r\n            this._rootNode = uiView;\r\n            this._parseNodeList(uiView);\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                this._labels = null;\r\n                if (aniName && aniName != tAniO.name) {\r\n                    continue;\r\n                }\r\n                if (!tAniO)\r\n                    continue;\r\n                try {\r\n                    this._calGraphicData(tAniO);\r\n                } catch (e) {\r\n                    console.warn(\"parse animation fail:\" + tAniO.name + \",empty animation created\");\r\n                    this._gList = [];\r\n                }\r\n                var frameO: any = {};\r\n                frameO.interval = 1000 / tAniO[\"frameRate\"];\r\n                frameO.frames = this._gList;\r\n                frameO.labels = this._labels;\r\n                frameO.name = tAniO.name;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n        GraphicAnimation._temParam.length = 0;\r\n\r\n    }\r\n\r\n    parseByData(aniData: any): any {\r\n        var rootNode: any, aniO: any;\r\n        rootNode = aniData.nodeRoot;\r\n        aniO = aniData.aniO;\r\n        delete aniData.nodeRoot;\r\n        delete aniData.aniO;\r\n        this._nodeDefaultProps = {};\r\n        this._nodeGDic = {};\r\n        if (this._nodeList) this._nodeList.length = 0;\r\n        this._rootNode = rootNode;\r\n        this._parseNodeList(rootNode);\r\n        this._labels = null;\r\n        try {\r\n            this._calGraphicData(aniO);\r\n        } catch (e) {\r\n            console.warn(\"parse animation fail:\" + aniO.name + \",empty animation created\");\r\n            this._gList = [];\r\n        }\r\n        var frameO: any = aniData;\r\n        frameO.interval = 1000 / aniO[\"frameRate\"];\r\n        frameO.frames = this._gList;\r\n        frameO.labels = this._labels;\r\n        frameO.name = aniO.name;\r\n        return frameO;\r\n    }\r\n\r\n    /**@private */\r\n    setUpAniData(uiView: any): void {\r\n        if (uiView.animations) {\r\n            var aniDic: any = {};\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAniO = animations[i];\r\n                if (!tAniO) continue;\r\n                var frameO: any = {};\r\n                frameO.name = tAniO.name;\r\n                frameO.aniO = tAniO;\r\n                frameO.nodeRoot = uiView;\r\n                anilist.push(frameO);\r\n                aniDic[tAniO.name] = frameO;\r\n            }\r\n            this.animationList = anilist;\r\n            this.animationDic = aniDic;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    protected _clear(): void {\r\n        this.animationList = null;\r\n        this.animationDic = null;\r\n        this._gList = null;\r\n        this._nodeGDic = null;\r\n    }\r\n\r\n    static parseAnimationByData(animationObject: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        var rst: any;\r\n        rst = GraphicAnimation._I.parseByData(animationObject);\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n\r\n    static parseAnimationData(aniData: any): any {\r\n        if (!GraphicAnimation._I) GraphicAnimation._I = new GraphicAnimation();\r\n        GraphicAnimation._I.setUpAniData(aniData);\r\n        var rst: any;\r\n        rst = {};\r\n        rst.animationList = GraphicAnimation._I.animationList;\r\n        rst.animationDic = GraphicAnimation._I.animationDic;\r\n        GraphicAnimation._I._clear();\r\n        return rst;\r\n    }\r\n}\r\n\r\n\r\n/**@internal */\r\nclass GraphicNode {\r\n    skin: string;\r\n    transform: Matrix;\r\n    resultTransform: Matrix;\r\n    width: number;\r\n    height: number;\r\n    alpha: number = 1;\r\n}\r\n","import { AnimationBase } from \"./AnimationBase\";\r\nimport { Graphics } from \"./Graphics\";\r\nimport { Loader } from \"../net/Loader\"\r\nimport { GraphicAnimation } from \"./GraphicAnimation\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Utils } from \"../utils/Utils\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\n\r\n/**\r\n * 动画播放完毕后调度。\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * 播放到某标签后调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Animation</code> 是Graphics动画类。实现了基于Graphics的动画创建、播放、控制接口。</p>\r\n * <p>本类使用了动画模版缓存池，它以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n * <p>使用set source、loadImages(...)、loadAtlas(...)、loadAnimation(...)方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n * @example <caption>以下示例代码，创建了一个 <code>Text</code> 实例。</caption>\r\n * package\r\n * {\r\n * \timport laya.display.Animation;\r\n * \timport laya.net.Loader;\r\n * \timport laya.utils.Handler;\r\n * \tpublic class Animation_Example\r\n * \t{\r\n * \t\tpublic function Animation_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tinit();//初始化\r\n * \t\t}\r\n * \t\tprivate function init():void\r\n * \t\t{\r\n * \t\t\tvar animation:Animation = new Animation();//创建一个 Animation 类的实例对象 animation 。\r\n * \t\t\tanimation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n * \t\t\tanimation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n * \t\t\tanimation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n * \t\t\tanimation.play();//播放动画。\r\n * \t\t\tLaya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n *\r\n * @example\r\n * Animation_Example();\r\n * function Animation_Example(){\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     init();//初始化\r\n * }\r\n * function init()\r\n * {\r\n *     var animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *     animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *     animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *     animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *     animation.play();//播放动画。\r\n *     Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n * }\r\n *\r\n * @example\r\n * import Animation = laya.display.Animation;\r\n * class Animation_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.init();\r\n *     }\r\n *     private init(): void {\r\n *         var animation:Animation = new Laya.Animation();//创建一个 Animation 类的实例对象 animation 。\r\n *         animation.loadAtlas(\"resource/ani/fighter.json\");//加载图集并播放\r\n *         animation.x = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.y = 200;//设置 animation 对象的属性 x 的值，用于控制 animation 对象的显示位置。\r\n *         animation.interval = 50;//设置 animation 对象的动画播放间隔时间，单位：毫秒。\r\n *         animation.play();//播放动画。\r\n *         Laya.stage.addChild(animation);//将 animation 对象添加到显示列表。\r\n *     }\r\n * }\r\n * new Animation_Example();\r\n */\r\nexport class Animation extends AnimationBase {\r\n    /**\r\n     * <p>动画模版缓存池，以key-value键值对存储，key可以自定义，也可以从指定的配置文件中读取，value为对应的动画模版，是一个Graphics对象数组，每个Graphics对象对应一个帧图像，动画的播放实质就是定时切换Graphics对象。</p>\r\n     * <p>使用loadImages(...)、loadAtlas(...)、loadAnimation(...)、set source方法可以创建动画模版。使用play(...)可以播放指定动画。</p>\r\n     */\r\n    static framesMap: any = {};\r\n    /**@private */\r\n    protected _frames: any[];\r\n\r\n    private _source: string;\r\n\r\n    private _autoPlay = false;\r\n\r\n\r\n    /**\r\n     * 创建一个新的 <code>Animation</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._setControlNode(this);\r\n    }\r\n\r\n    /** @inheritDoc\r\n     *  @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        this.stop();\r\n        super.destroy(destroyChild);\r\n        this._frames = null;\r\n        this._labels = null;\r\n    }\r\n\r\n    /**\r\n     * <p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>\r\n     * <p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>\r\n     * <p>配合wrapMode属性，可设置动画播放顺序类型。</p>\r\n     * @param\tstart\t（可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。\r\n     * @param\tloop\t（可选）是否循环播放。\r\n     * @param\tname\t（可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。\r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (name) this._setFramesFromCache(name, true);\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    protected _setFramesFromCache(name: string, showWarn: boolean = false): boolean {\r\n        if (this._url) name = this._url + \"#\" + name;\r\n        if (name && Animation.framesMap[name]) {\r\n            var tAniO: any = Animation.framesMap[name];\r\n            if (tAniO instanceof Array) {\r\n                this._frames = Animation.framesMap[name];\r\n                this._count = this._frames.length;\r\n            } else {\r\n                if (tAniO.nodeRoot) {\r\n                    //如果动画数据未解析过,则先进行解析\r\n                    Animation.framesMap[name] = GraphicAnimation.parseAnimationByData(tAniO);\r\n                    tAniO = Animation.framesMap[name];\r\n                }\r\n                this._frames = tAniO.frames;\r\n                this._count = this._frames.length;\r\n                //如果读取的是动画配置信息，帧率按照动画设置的帧率播放\r\n                if (!this._frameRateChanged) this._interval = tAniO.interval;\r\n                this._labels = this._copyLabels(tAniO.labels);\r\n            }\r\n            return true;\r\n        } else {\r\n            if (showWarn) console.log(\"ani not found:\", name);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**@private */\r\n    private _copyLabels(labels: any): any {\r\n        if (!labels) return null;\r\n        var rst: any;\r\n        rst = {};\r\n        var key: string;\r\n        for (key in labels) {\r\n            rst[key] = Utils.copyArray([], labels[key]);\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**@private \r\n    *  @override\r\n    */\r\n    protected _frameLoop(): void {\r\n        if (this._visible && this._style.alpha > 0.01 && this._frames) {\r\n            super._frameLoop();\r\n        }\r\n    }\r\n\r\n    /**@private \r\n     * @override\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (this._frames) this.graphics = this._frames[value];\r\n    }\r\n\r\n    /**\r\n     * 当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。\r\n     */\r\n    get frames(): any[] {\r\n        return this._frames;\r\n    }\r\n\r\n    set frames(value: any[]) {\r\n        this._frames = value;\r\n        if (value) {\r\n            this._count = value.length;\r\n            //if (_isPlaying) play(_index, loop, _actionName);\r\n            if (this._actionName) this._setFramesFromCache(this._actionName, true);\r\n            this.index = this._index;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>动画数据源。</p>\r\n     * <p>类型如下：<br/>\r\n     * 1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>\r\n     * 2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>\r\n     * 3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>\r\n     * @param value\t数据源。比如：图集：\"xx/a1.atlas\"；图片集合：\"a1.png,a2.png,a3.png\"；LayaAir IDE动画\"xx/a1.ani\"。\r\n     */\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n\r\n        if (!value)\r\n            this.clear();\r\n        else if (value.indexOf(\".ani\") > -1)\r\n            this.loadAnimation(value);\r\n        else if (value.startsWith(\"res://\") || value.indexOf(\".json\") > -1 || value.indexOf(\"als\") > -1 || value.indexOf(\"atlas\") > -1)\r\n            this.loadAtlas(value);\r\n        else\r\n            this.loadImages(value.split(\",\"));\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。\r\n     */\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value)\r\n            this.play();\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    /**\r\n     * 停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。\r\n     * @override\r\n     */\r\n    clear(): AnimationBase {\r\n        super.clear();\r\n        this.stop();\r\n        this.graphics = null;\r\n        this._frames = null;\r\n        this._labels = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadImages(...).loadImages(...).play(...);。</p>\r\n     * @param\turls\t\t图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回Animation对象本身。\r\n     */\r\n    loadImages(urls: any[], cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(urls, cacheName);\r\n        }\r\n        if (!this._isPlaying && this._autoPlay)\r\n            this.play();\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>\r\n     * <p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAtlas(...).loadAtlas(...).play(...);。</p>\r\n     * @param\turl\t\t\t图集路径。需要创建动画模版时，会以此为数据源。\r\n     * @param\tloaded\t\t（可选）使用指定图集初始化动画完毕的回调。\r\n     * @param\tcacheName\t（可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。\r\n     * @return \t返回动画本身。\r\n     */\r\n    loadAtlas(url: string, loaded: Handler = null, cacheName: string = \"\"): Animation {\r\n        this._url = \"\";\r\n        if (!this._setFramesFromCache(cacheName)) {\r\n            let onLoaded = (loadUrl: string) => {\r\n                if (url === loadUrl) {\r\n                    this.frames = Animation.framesMap[cacheName] ? Animation.framesMap[cacheName] : Animation.createFrames(url, cacheName);\r\n                    if (!this._isPlaying && this._autoPlay)\r\n                        this.play();\r\n                    if (loaded) loaded.run();\r\n                }\r\n            }\r\n            if (Loader.getAtlas(url)) onLoaded(url);\r\n            else ILaya.loader.load(url, Handler.create(null, onLoaded, [url]), null, Loader.ATLAS);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * <p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key \"url#动画名称\" 对应相应动画名称的动画模板，key \"url#\" 对应动画模版集合的默认动画模版。</p>\r\n     * <p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>\r\n     * <p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>\r\n     * <p>因为返回值为Animation对象本身，所以可以使用如下语法：loadAnimation(...).loadAnimation(...).play(...);。</p>\r\n     * @param\turl \t动画文件路径。可由LayaAir IDE创建并发布。\r\n     * @param\tloaded\t（可选）使用指定动画资源初始化动画完毕的回调。\r\n     * @param\tatlas\t（可选）动画用到的图集地址（可选）。\r\n     * @return \t返回动画本身。\r\n     * @deprecated\r\n     */\r\n    loadAnimation(url: string, loaded: Handler = null, atlas: string = null): Animation {\r\n        this._url = url;\r\n        var _this: Animation = this;\r\n        if (!this._actionName) this._actionName = \"\";\r\n        if (!_this._setFramesFromCache(this._actionName)) {\r\n            if (!atlas || Loader.getAtlas(atlas)) {\r\n                this._loadAnimationData(url, loaded, atlas);\r\n            } else {\r\n                ILaya.loader.load(atlas, Handler.create(this, this._loadAnimationData, [url, loaded, atlas]), null, Loader.ATLAS)\r\n            }\r\n        } else {\r\n            _this._setFramesFromCache(this._actionName, true);\r\n            this.index = 0;\r\n            if (loaded) loaded.run();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**@private */\r\n    private _loadAnimationData(url: string, loaded: Handler = null, atlas: string = null): void {\r\n        if (atlas && !Loader.getAtlas(atlas)) {\r\n            console.warn(\"atlas load fail:\" + atlas);\r\n            return;\r\n        }\r\n\r\n        ILaya.loader.fetch(url, \"json\").then(data => {\r\n            if (this._url !== url)\r\n                return;\r\n\r\n            if (!data) {\r\n                // 如果getRes失败了，有可能是相同的文件已经被删掉了，因为下面在用完后会立即删除\r\n                // 这时候可以取frameMap中去找，如果找到了，走正常流程。--王伟\r\n                if (Animation.framesMap[url + \"#\"]) {\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                    this._resumePlay();\r\n                    if (loaded) loaded.run();\r\n                }\r\n                return;\r\n            }\r\n\r\n            let tAniO: any;\r\n            if (!Animation.framesMap[url + \"#\"]) {\r\n                //此次解析仅返回动画数据，并不真正解析动画graphic数据\r\n                let aniData: any = GraphicAnimation.parseAnimationData(data);\r\n                if (!aniData) return;\r\n                //缓存动画数据\r\n                let aniList: any[] = aniData.animationList;\r\n                let len: number = aniList.length;\r\n                let defaultO: any;\r\n                for (let i = 0; i < len; i++) {\r\n                    tAniO = aniList[i];\r\n                    Animation.framesMap[url + \"#\" + tAniO.name] = tAniO;\r\n                    if (!defaultO) defaultO = tAniO;\r\n                }\r\n                if (defaultO) {\r\n                    Animation.framesMap[url + \"#\"] = defaultO;\r\n                    this._setFramesFromCache(this._actionName, true);\r\n                    this.index = 0;\r\n                }\r\n                this._resumePlay();\r\n            } else {\r\n                this._setFramesFromCache(this._actionName, true);\r\n                this.index = 0;\r\n                this._resumePlay();\r\n            }\r\n            if (loaded) loaded.run();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * <p>创建动画模板，多个动画可共享同一份动画模板，而不必每次都创建一份新的，从而节省创建Graphics集合的开销。</p>\r\n     * @param\turl\t\t\t图集路径或者图片路径数组。如果是图集路径，需要相应图集已经被预加载，如果没有预加载，会导致创建失败。\r\n     * @param\tname\t\t动画模板在动画模版缓存池中的key。如果不为空，则以此为key缓存动画模板，否则不缓存。\r\n     * @return\t动画模板。\r\n     */\r\n    static createFrames(url: string | string[], name: string): any[] {\r\n        var arr: any[];\r\n        if (typeof (url) == 'string') {\r\n            var atlas: AtlasResource = Loader.getAtlas(<string>url);\r\n            if (atlas && atlas.frames.length) {\r\n                let frames = atlas.frames;\r\n                arr = [];\r\n                for (var i: number = 0, n: number = frames.length; i < n; i++) {\r\n                    var g: Graphics = new Graphics();\r\n                    g.drawImage(frames[i], 0, 0);\r\n                    arr.push(g);\r\n                }\r\n            }\r\n        } else if (url instanceof Array) {\r\n            arr = [];\r\n            for (i = 0, n = url.length; i < n; i++) {\r\n                g = new Graphics();\r\n                g.loadImage(url[i], 0, 0);\r\n                arr.push(g);\r\n            }\r\n        }\r\n        if (name) Animation.framesMap[name] = arr;\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * <p>从动画模版缓存池中清除指定key值的动画数据。</p>\r\n     * <p>开发者在调用创建动画模版函数时，可以手动指定此值。而如果是由LayaAir IDE创建的动画集，解析后的key格式为：\"url#\"：表示动画集的默认动画模版，如果以此值为参数，会清除整个动画集数据；\"url#aniName\"：表示相应名称的动画模版。</p>\r\n     * @param key 动画模板在动画模版缓存池中的key。\r\n     */\r\n    static clearCache(key: string): void {\r\n        var cache: any = Animation.framesMap;\r\n        var val: string;\r\n        var key2: string = key + \"#\";\r\n        for (val in cache) {\r\n            if (val === key || val.indexOf(key2) === 0) {\r\n                delete Animation.framesMap[val];\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    onAfterDeserialize(): void {\r\n        super.onAfterDeserialize();\r\n\r\n        if ((<any>this).images) {\r\n            if (!this._source)\r\n                this.loadImages((<any>this).images);\r\n            delete (<any>this).images;\r\n        }\r\n    }\r\n}\r\n\r\n","import { Texture } from \"../resource/Texture\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { XML } from \"../html/XML\";\r\n\r\n/**\r\n * <code>BitmapFont</code> 是位图字体类，用于定义位图字体信息。\r\n * 字体制作及使用方法，请参考文章\r\n * @see http://ldc2.layabox.com/doc/?nav=ch-js-1-2-5\r\n */\r\nexport class BitmapFont extends Resource {\r\n    texture: Texture;\r\n    dict: Record<string, BMGlyph> = {};\r\n\r\n    padding: any[];\r\n\r\n    /**当前位图字体字号，使用时，如果字号和设置不同，并且autoScaleSize=true，则按照设置字号比率进行缩放显示。*/\r\n    fontSize: number = 12;\r\n    /**表示是否根据实际使用的字体大小缩放位图字体大小。*/\r\n    autoScaleSize: boolean = false;\r\n    tint: boolean = true;\r\n    maxWidth: number = 0;\r\n    lineHeight: number = 12;\r\n    letterSpacing = 0;\r\n\r\n    /**\r\n     * 通过指定位图字体文件路径，加载位图字体文件，加载完成后会自动解析。\r\n     * @param\tpath\t\t位图字体文件的路径。\r\n     * @param\tcomplete\t加载并解析完成的回调。\r\n     */\r\n    static loadFont(path: string, complete: Handler): void {\r\n        ILaya.loader.load(path, Loader.FONT).then(font => {\r\n            complete && complete.runWith(font);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super(false);\r\n    }\r\n\r\n    /**\r\n     * 解析字体文件。\r\n     * @param\txml\t\t\t字体文件XML。\r\n     * @param\ttexture\t\t字体的纹理。\r\n     */\r\n    parseFont(xml: XML, texture: Texture): void {\r\n        if (xml == null || texture == null) return;\r\n        this.texture = texture;\r\n        texture._addReference();\r\n\r\n        let scale: number = 1;\r\n        let info = xml.getNode(\"info\");\r\n        this.fontSize = info.getAttrInt(\"size\", 12);\r\n        this.autoScaleSize = info.getAttrBool(\"autoScaleSize\");\r\n        this.lineHeight = info.getAttrInt(\"lineHeight\", this.fontSize);\r\n        if (this.lineHeight == 0)\r\n            this.lineHeight = this.fontSize;\r\n\r\n        let padding: string = info.getAttrString(\"padding\", \"\");\r\n        let paddingArray: any[] = padding.split(\",\");\r\n        this.padding = [parseInt(paddingArray[0]), parseInt(paddingArray[1]), parseInt(paddingArray[2]), parseInt(paddingArray[3])];\r\n\r\n        let chars = xml.getNode(\"chars\")?.elements(\"char\") || [];\r\n        let maxWidth = 0;\r\n        let dict = this.dict;\r\n        for (let i = 0, n = chars.length; i < n; i++) {\r\n            let ct = chars[i];\r\n            let id = ct.getAttrInt(\"id\");\r\n\r\n            let xOffset = ct.getAttrInt(\"xoffset\") / scale;\r\n            let yOffset = ct.getAttrInt(\"yoffset\") / scale;\r\n            let advance = ct.getAttrInt(\"xadvance\") / scale;\r\n\r\n            let x = ct.getAttrInt(\"x\");\r\n            let y = ct.getAttrInt(\"y\");\r\n            let width = ct.getAttrInt(\"width\");\r\n            let height = ct.getAttrInt(\"height\");\r\n\r\n            let tex = Texture.create(texture, x, y, width, height, xOffset, yOffset);\r\n\r\n            if (advance == 0)\r\n                advance = width;\r\n            advance += this.letterSpacing;\r\n            maxWidth = Math.max(maxWidth, advance);\r\n\r\n            dict[id] = { x: 0, y: 0, width, height, advance, texture: tex };\r\n        }\r\n\r\n        if (maxWidth > 0)\r\n            this.maxWidth = maxWidth;\r\n        else\r\n            this.maxWidth = this.fontSize;\r\n\r\n        if (!dict[32]) //space\r\n            dict[32] = { x: 0, y: 0, advance: Math.floor(this.fontSize * 0.5) + this.letterSpacing };\r\n    }\r\n\r\n    /**\r\n     * 销毁位图字体，调用Text.unregisterBitmapFont 时，默认会销毁。\r\n     */\r\n    protected _disposeResource(): void {\r\n        if (this.texture) {\r\n            for (let k in this.dict) {\r\n                this.dict[k].texture?.destroy();\r\n            }\r\n            this.texture._removeReference();\r\n            this.dict = null;\r\n            this.texture = null;\r\n            this.padding = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取指定文本内容的宽度。\r\n     * @param\ttext 文本内容。\r\n     * @return  宽度。\r\n     */\r\n    getTextWidth(text: string, fontSize?: number): number {\r\n        let w = 0;\r\n        for (let i = 0, n = text.length; i < n; i++) {\r\n            let g = this.dict[text.charCodeAt(i)];\r\n            if (g) {\r\n                let scale = this.autoScaleSize ? (fontSize / this.fontSize) : 1;\r\n                w += Math.round(g.advance * scale);\r\n            }\r\n        }\r\n        return w;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符宽度。\r\n     */\r\n    getMaxWidth(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.maxWidth * (fontSize / this.fontSize));\r\n        else\r\n            return this.maxWidth;\r\n    }\r\n\r\n    /**\r\n     * 获取最大字符高度。\r\n     */\r\n    getMaxHeight(fontSize?: number): number {\r\n        if (fontSize != null && this.autoScaleSize)\r\n            return Math.round(this.lineHeight * (fontSize / this.fontSize));\r\n        else\r\n            return this.lineHeight;\r\n    }\r\n}\r\n\r\nexport interface BMGlyph {\r\n    x?: number;\r\n    y?: number;\r\n    width?: number;\r\n    height?: number;\r\n    advance?: number;\r\n    texture?: Texture;\r\n}","import { FrameAnimation } from \"./FrameAnimation\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\"\r\nimport { Ease } from \"../utils/Ease\"\r\n\r\n/**\r\n * <p> 动效模板。用于为指定目标对象添加动画效果。每个动效有唯一的目标对象，而同一个对象可以添加多个动效。 当一个动效开始播放时，其他动效会自动停止播放。</p>\r\n * <p> 可以通过LayaAir IDE创建。 </p>\r\n */\r\nexport class EffectAnimation extends FrameAnimation {\r\n    /**\r\n     * @private\r\n     * 动效开始事件。\r\n     */\r\n    private static EFFECT_BEGIN: string = \"effectbegin\";\r\n\r\n    /**@internal */\r\n    private _target: any;\r\n    /**@internal */\r\n    private _playEvent: string;\r\n    /**@internal */\r\n    private _initData: any = {};\r\n    /**@internal */\r\n    private _aniKeys: any[];\r\n    /**@internal */\r\n    private _effectClass: new () => any;\r\n\r\n    /**\r\n     * 本实例的目标对象。通过本实例控制目标对象的属性变化。\r\n     * @param v 指定的目标对象。\r\n     */\r\n    set target(v: any) {\r\n        if (this._target) this._target.off(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._target = v;\r\n        if (this._target) this._target.on(EffectAnimation.EFFECT_BEGIN, this, this._onOtherBegin);\r\n        this._addEvent();\r\n    }\r\n\r\n    get target(): any {\r\n        return this._target;\r\n    }\r\n\r\n    /**@private */\r\n    private _onOtherBegin(effect: any): void {\r\n        if (effect === this) return;\r\n        this.stop();\r\n    }\r\n\r\n    /**\r\n     * 设置开始播放的事件。本实例会侦听目标对象的指定事件，触发后播放相应动画效果。\r\n     * @param event\r\n     */\r\n    set playEvent(event: string) {\r\n        this._playEvent = event;\r\n        if (!event) return;\r\n        this._addEvent();\r\n    }\r\n\r\n    /**@internal */\r\n    private _addEvent(): void {\r\n        if (!this._target || !this._playEvent) return;\r\n        this._setControlNode(this._target);\r\n        this._target.on(this._playEvent, this, this._onPlayAction);\r\n    }\r\n\r\n    /**@internal */\r\n    private _onPlayAction(): void {\r\n        this.play(0, false);\r\n    }\r\n    /**\r\n     * @param start \r\n     * @param loop \r\n     * @param name \r\n     * @override\r\n     */\r\n    play(start: any = 0, loop: boolean = true, name: string = \"\"): void {\r\n        if (!this._target)\r\n            return;\r\n        this._target.event(EffectAnimation.EFFECT_BEGIN, [this]);\r\n        this._recordInitData();\r\n        super.play(start, loop, name);\r\n    }\r\n\r\n    /**@private */\r\n    private _recordInitData(): void {\r\n        if (!this._aniKeys) return;\r\n        var i: number, len: number;\r\n        len = this._aniKeys.length;\r\n        var key: string;\r\n        for (i = 0; i < len; i++) {\r\n            key = this._aniKeys[i];\r\n            this._initData[key] = this._target[key];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置提供数据的类。\r\n     * @param classStr 类路径\r\n     */\r\n    set effectClass(classStr: string) {\r\n        this._effectClass = ClassUtils.getClass(classStr);\r\n        if (this._effectClass) {\r\n            var uiData: any = (this._effectClass as any)[\"uiView\"];\r\n            if (uiData) {\r\n                var aniData: any[] = uiData[\"animations\"];\r\n                if (aniData && aniData[0]) {\r\n                    var data: any = aniData[0];\r\n                    this._setUp({}, data);\r\n                    if (data.nodes && data.nodes[0]) {\r\n                        this._aniKeys = data.nodes[0].keys;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置动画数据。\r\n     * @param uiData\r\n     */\r\n    set effectData(uiData: any) {\r\n        if (uiData) {\r\n            var aniData: any[] = uiData[\"animations\"];\r\n            if (aniData && aniData[0]) {\r\n                var data: any = aniData[0];\r\n                this._setUp({}, data);\r\n                if (data.nodes && data.nodes[0]) {\r\n                    this._aniKeys = data.nodes[0].keys;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _displayToIndex(value: number): void {\r\n        if (!this._animationData) return;\r\n        if (value < 0) value = 0;\r\n        if (value > this._count) value = this._count;\r\n        var nodes: any[] = this._animationData.nodes, i: number, len: number = nodes.length;\r\n        len = len > 1 ? 1 : len;\r\n        for (i = 0; i < len; i++) {\r\n            this._displayNodeToFrame(nodes[i], value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n    */\r\n    protected _displayNodeToFrame(node: any, frame: number, targetDic: any = null): void {\r\n        if (!this._target) return;\r\n        var target: any = this._target;\r\n        var frames: any = node.frames, key: string, propFrames: any[], value: any;\r\n        var keys: any[] = node.keys, i: number, len: number = keys.length;\r\n        var secondFrames: any = node.secondFrames;\r\n        var tSecondFrame: number;\r\n        var easeFun: Function;\r\n        var tKeyFrames: any[];\r\n        var startFrame: any;\r\n        var endFrame: any;\r\n        for (i = 0; i < len; i++) {\r\n            key = keys[i];\r\n            propFrames = frames[key];\r\n            tSecondFrame = secondFrames[key];\r\n            if (tSecondFrame == -1) {\r\n                value = this._initData[key];\r\n            } else {\r\n                if (frame < tSecondFrame) {\r\n                    tKeyFrames = node.keyframes[key];\r\n                    startFrame = tKeyFrames[0];\r\n                    if (startFrame.tween) {\r\n                        easeFun = (Ease as any)[startFrame.tweenMethod];\r\n                        if (easeFun == null) easeFun = Ease.linearNone;\r\n                        endFrame = tKeyFrames[1];\r\n                        value = easeFun(frame, this._initData[key], endFrame.value - this._initData[key], endFrame.index);\r\n                    } else {\r\n                        value = this._initData[key];\r\n                    }\r\n\r\n                } else {\r\n                    if (propFrames.length > frame) value = propFrames[frame];\r\n                    else value = propFrames[propFrames.length - 1];\r\n                }\r\n            }\r\n            target[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n    */\r\n    protected _calculateKeyFrames(node: any): void {\r\n        super._calculateKeyFrames(node);\r\n        var keyFrames: any = node.keyframes, key: string, tKeyFrames: any[], target: number = node.target;\r\n\r\n        var secondFrames: any = {};\r\n        node.secondFrames = secondFrames;\r\n        for (key in keyFrames) {\r\n            tKeyFrames = keyFrames[key];\r\n            if (tKeyFrames.length <= 1) secondFrames[key] = -1;\r\n            else secondFrames[key] = tKeyFrames[1].index;\r\n        }\r\n    }\r\n}","/**\r\n * 文本的样式类\r\n */\r\nexport class TextStyle {\r\n    /**字体*/\r\n    font: string;\r\n    /**字号*/\r\n    fontSize: number;\r\n    /**文字颜色*/\r\n    color: string;\r\n    /**是否为粗体*/\r\n    bold: boolean;\r\n    /**\r\n     * 表示使用此文本格式的文本是否为斜体。\r\n     * @default false\r\n     */\r\n    italic: boolean;\r\n\r\n    /**是否显示下划线*/\r\n    underline: boolean;\r\n    /**下划线颜色*/\r\n    underlineColor: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的水平对齐方式。</p>\r\n     * @default  \"left\"\r\n     */\r\n    align: string;\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本段落的垂直对齐方式。</p>\r\n     * @default  \"top\"\r\n     */\r\n    valign: string;\r\n\r\n    /**\r\n     * <p>垂直行间距（以像素为单位）</p>\r\n     */\r\n    leading: number;\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * 默认值0，表示不描边。\r\n     * @default 0\r\n     */\r\n    stroke: number;\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * @default \"#000000\";\r\n     */\r\n    strokeColor: string;\r\n\r\n    strikethrough: boolean;\r\n\r\n    constructor() {\r\n        this.font = \"\";\r\n        this.fontSize = 12;\r\n        this.color = \"#000000\";\r\n        this.bold = false;\r\n        this.italic = false;\r\n        this.underline = false;\r\n        this.underlineColor = null;\r\n        this.align = \"left\";\r\n        this.valign = \"top\";\r\n        this.leading = 2;\r\n        this.stroke = 0;\r\n        this.strokeColor = \"#000000\";\r\n    }\r\n}\r\n\r\n","import { XMLIterator } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { TextStyle } from \"../display/css/TextStyle\";\r\nimport { Pool } from \"../utils/Pool\";\r\n\r\nexport enum HtmlElementType {\r\n    Text,\r\n    Link,\r\n    Image,\r\n    Input,\r\n    Select,\r\n    Object,\r\n\r\n    //internal\r\n    LinkEnd,\r\n}\r\n\r\nexport class HtmlElement {\r\n    public type: HtmlElementType;\r\n    public name: string;\r\n    public text: string;\r\n    public style: TextStyle;\r\n\r\n    public obj: IHtmlObject;\r\n    public space: number;\r\n\r\n    public _attrs: Record<string, any>;\r\n\r\n    public constructor() {\r\n        this.style = new TextStyle();\r\n    }\r\n\r\n    public getAttr(attrName: string): any {\r\n        if (this._attrs == null)\r\n            return null;\r\n\r\n        return this._attrs[attrName];\r\n    }\r\n\r\n    public setAttr(attrName: string, attrValue: any) {\r\n        if (this._attrs == null)\r\n            this._attrs = {};\r\n\r\n        this._attrs[attrName] = attrValue;\r\n    }\r\n\r\n    public getAttrString(attrName: string, defValue?: string) {\r\n        return XMLUtils.getString(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrInt(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getInt(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrFloat(attrName: string, defValue?: number): number {\r\n        return XMLUtils.getFloat(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public getAttrBool(attrName: string, defValue?: boolean): boolean {\r\n        return XMLUtils.getBool(this._attrs, attrName, defValue);\r\n    }\r\n\r\n    public fetchAttributes() {\r\n        this._attrs = Object.assign({}, XMLIterator.attributes);\r\n    }\r\n\r\n    public reset() {\r\n        this.name = null;\r\n        this.text = null;\r\n        if (this.obj) {\r\n            this.obj.release();\r\n            Pool.recoverByClass(this.obj);\r\n            this.obj = null;\r\n        }\r\n        this._attrs = null;\r\n    }\r\n\r\n    static pool: Array<HtmlElement> = [];\r\n    static getFromPool(type: HtmlElementType): HtmlElement {\r\n        let ele: HtmlElement;\r\n        if (this.pool.length > 0)\r\n            ele = this.pool.pop();\r\n        else\r\n            ele = new HtmlElement();\r\n        ele.type = type;\r\n        if (ele.type != HtmlElementType.Text && !ele._attrs)\r\n            ele._attrs = {};\r\n        return ele;\r\n    }\r\n\r\n    static returnToPool(ele: HtmlElement | Array<HtmlElement>) {\r\n        if (Array.isArray(ele)) {\r\n            for (let e of ele)\r\n                e.reset();\r\n            this.pool.push(...ele);\r\n            ele.length = 0;\r\n        }\r\n        else {\r\n            ele.reset();\r\n            this.pool.push(ele);\r\n        }\r\n    }\r\n}","import { ILaya } from \"../../ILaya\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlImage implements IHtmlObject {\r\n    public readonly obj: Sprite;\r\n\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n\r\n    public constructor() {\r\n        this.obj = new Sprite();\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return this.obj.width;\r\n    }\r\n\r\n    public get height(): number {\r\n        return this.obj.height;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this.obj);\r\n\r\n        let src = this._element.getAttrString(\"src\");\r\n        this.loadTexture(src);\r\n    }\r\n\r\n    protected loadTexture(src: string) {\r\n        let width = this._element.getAttrInt(\"width\", -1);\r\n        let height = this._element.getAttrInt(\"height\", -1);\r\n        if (width != -1)\r\n            this.obj.width = width;\r\n        if (height != -1)\r\n            this.obj.height = height;\r\n\r\n        let tex = Loader.getRes(src);\r\n        if (tex) {\r\n            this.obj.texture = tex;\r\n            if (width == -1)\r\n                this.obj.width = tex.sourceWidth;\r\n            if (height == -1)\r\n                this.obj.height = tex.sourceHeight;\r\n        }\r\n        else {\r\n            ILaya.loader.load(src, { silent: true }).then(tex => {\r\n                let w = this.obj.width;\r\n                let h = this.obj.height;\r\n                this.obj.texture = tex;\r\n                if (width == -1)\r\n                    this.obj.width = tex ? tex.sourceWidth : 0;\r\n                if (height == -1)\r\n                    this.obj.height = tex ? tex.sourceHeight : 0;\r\n                if (this._owner && (w != this.obj.width || h != this.obj.height))\r\n                    this._owner.refreshLayout();\r\n            });\r\n        }\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n        this.obj.pos(x, y);\r\n    }\r\n\r\n    public release(): void {\r\n        this.obj.removeSelf();\r\n        this.obj.offAll();\r\n        this.obj.texture = null;\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.obj.destroy();\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Text } from \"../display/Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { IHitArea } from \"../utils/IHitArea\";\r\nimport { HtmlElement } from \"./HtmlElement\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\n\r\nexport class HtmlLink implements IHtmlObject, IHitArea {\r\n    private _owner: Text;\r\n    private _element: HtmlElement;\r\n    private _shape: Sprite;\r\n    private _rects: Array<Rectangle>;\r\n    private _rectCnt: number;\r\n\r\n    public constructor() {\r\n        this._shape = new Sprite();\r\n        this._shape.hitArea = this;\r\n        this._shape.on(Event.CLICK, () => {\r\n            this._owner.bubbleEvent(Event.LINK, this._element.getAttrString(\"href\"));\r\n        });\r\n\r\n        this._rects = [];\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public get element(): HtmlElement {\r\n        return this._element;\r\n    }\r\n\r\n    public get width(): number {\r\n        return 0;\r\n    }\r\n\r\n    public get height(): number {\r\n        return 0;\r\n    }\r\n\r\n    public create(owner: Text, element: HtmlElement): void {\r\n        this._owner = owner;\r\n        this._element = element;\r\n        this._owner.objContainer.addChild(this._shape);\r\n    }\r\n\r\n    public resetArea() {\r\n        this._rectCnt = 0;\r\n    }\r\n\r\n    public addRect(x: number, y: number, width: number, height: number) {\r\n        let rect = this._rects[this._rectCnt];\r\n        if (!rect)\r\n            rect = this._rects[this._rectCnt] = new Rectangle();\r\n        this._rectCnt++;\r\n        rect.setTo(x, y, width, height);\r\n    }\r\n\r\n    public contains(x: number, y: number): boolean {\r\n        for (let i = 0; i < this._rectCnt; i++) {\r\n            if (this._rects[i].contains(x, y))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public pos(x: number, y: number): void {\r\n    }\r\n\r\n    public release(): void {\r\n        this._shape.removeSelf();\r\n        this._owner = null;\r\n        this._element = null;\r\n    }\r\n\r\n    public destroy(): void {\r\n        this._shape.destroy();\r\n    }\r\n}","import { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport class HtmlParseOptions {\r\n    public linkUnderline: boolean;\r\n    public linkColor: string;\r\n    public ignoreWhiteSpace: boolean;\r\n\r\n    public static defaultLinkUnderline: boolean = true;\r\n    public static defaultLinkColor: string = null;\r\n\r\n    public constructor() {\r\n        this.linkUnderline = HtmlParseOptions.defaultLinkUnderline;\r\n        this.linkColor = HtmlParseOptions.defaultLinkColor;\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HtmlParseOptions\", HtmlParseOptions);","import { TextStyle } from \"../display/css/TextStyle\";\r\nimport { HtmlElement, HtmlElementType } from \"./HtmlElement\";\r\nimport { HtmlImage } from \"./HtmlImage\";\r\nimport { HtmlLink } from \"./HtmlLink\";\r\nimport { HtmlParseOptions } from \"./HtmlParseOptions\";\r\nimport { IHtmlObject } from \"./IHtmlObject\";\r\nimport { XMLIterator, XMLTagType } from \"./XMLIterator\";\r\nimport { XMLUtils } from \"./XMLUtils\";\r\n\r\nconst s_list1 = new Array<string>();\r\nconst s_list2 = new Array<string>();\r\n\r\nexport class HtmlParser {\r\n    static defaultParser: HtmlParser = new HtmlParser();\r\n\r\n    static classMap: Record<number, new () => IHtmlObject> = {\r\n        [HtmlElementType.Image]: HtmlImage,\r\n        [HtmlElementType.Link]: HtmlLink\r\n    };\r\n\r\n    protected _styleStack: Array<TextStyle>;\r\n    protected _styleStackTop: number;\r\n    protected _style: TextStyle;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _options: HtmlParseOptions;\r\n\r\n    public constructor() {\r\n        this._styleStack = new Array<TextStyle>();\r\n        this._style = new TextStyle();\r\n        this._options = new HtmlParseOptions();\r\n    }\r\n\r\n    public parse(aSource: string, style: TextStyle, out: Array<HtmlElement>, options?: HtmlParseOptions): void {\r\n        if (options == null)\r\n            options = this._options;\r\n\r\n        this._elements = out;\r\n        this._styleStackTop = 0;\r\n        Object.assign(this._style, style);\r\n        (<any>this._style).colorChanged = false;\r\n        let skipText: number = 0;\r\n        let ignoreWhiteSpace: boolean = options.ignoreWhiteSpace;\r\n        let skipNextCR: boolean = false;\r\n        let text: string\r\n\r\n        XMLIterator.begin(aSource, true);\r\n        while (XMLIterator.nextTag()) {\r\n            if (skipText == 0) {\r\n                text = XMLIterator.getText(ignoreWhiteSpace);\r\n                if (text.length > 0) {\r\n                    if (skipNextCR && text[0] == '\\n')\r\n                        text = text.substring(1);\r\n                    this.appendText(text);\r\n                }\r\n            }\r\n\r\n            skipNextCR = false;\r\n            switch (XMLIterator.tagName) {\r\n                case \"b\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.bold = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"i\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.italic = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"u\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.underline = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"strike\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.strikethrough = true;\r\n                    }\r\n                    else\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                // case \"sub\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Subscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                // case \"sup\":\r\n                //     {\r\n                //         if (XMLIterator.tagType == XMLTagType.Start) {\r\n                //             this.pushTextFormat();\r\n                //             this._format.specialStyle = TextFormat.SpecialStyle.Superscript;\r\n                //         }\r\n                //         else\r\n                //             this.popTextFormat();\r\n                //     }\r\n                //     break;\r\n\r\n                case \"font\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.fontSize = XMLUtils.getInt(XMLIterator.attributes, \"size\", this._style.fontSize);\r\n                        let color: string = XMLIterator.getAttribute(\"color\");\r\n                        if (color != null) {\r\n                            this._style.color = color;\r\n                            (<any>this._style).colorChanged = true;\r\n                        }\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        this.popStyle();\r\n                    break;\r\n\r\n                case \"br\":\r\n                    this.appendText(\"\\n\");\r\n                    break;\r\n\r\n                case \"img\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                        let element: HtmlElement = HtmlElement.getFromPool(HtmlElementType.Image);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        element.style.underline = this._style.underline;\r\n                        element.style.underlineColor = this._style.underlineColor;\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"a\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n\r\n                        this._style.underline = this._style.underline || options.linkUnderline;\r\n                        if (!(<any>this._style).colorChanged && options.linkColor != null)\r\n                            this._style.color = options.linkColor;\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Link);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        element.style.align = this._style.align;\r\n                        this._elements.push(element);\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.popStyle();\r\n\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.LinkEnd);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"input\":\r\n                    {\r\n                        let element = HtmlElement.getFromPool(HtmlElementType.Input);\r\n                        element.fetchAttributes();\r\n                        element.name = element.getAttrString(\"name\");\r\n                        Object.assign(element.style, this._style);\r\n                        this._elements.push(element);\r\n                    }\r\n                    break;\r\n\r\n                case \"select\":\r\n                    {\r\n                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void) {\r\n                            let element = HtmlElement.getFromPool(HtmlElementType.Select);\r\n                            element.fetchAttributes();\r\n                            if (XMLIterator.tagType == XMLTagType.Start) {\r\n                                s_list1.length = 0;\r\n                                s_list2.length = 0;\r\n                                while (XMLIterator.nextTag()) {\r\n                                    if (XMLIterator.tagName == \"select\")\r\n                                        break;\r\n\r\n                                    if (XMLIterator.tagName == \"option\") {\r\n                                        if (XMLIterator.tagType == XMLTagType.Start || XMLIterator.tagType == XMLTagType.Void)\r\n                                            s_list2.push(XMLUtils.getString(XMLIterator.attributes, \"value\", \"\"));\r\n                                        else\r\n                                            s_list1.push(XMLIterator.getText());\r\n                                    }\r\n                                }\r\n                                element.setAttr(\"items\", s_list1.slice());\r\n                                element.setAttr(\"values\", s_list2.slice());\r\n                            }\r\n                            element.name = element.getAttrString(\"name\");\r\n                            Object.assign(element.style, this._style);\r\n                            this._elements.push(element);\r\n                        }\r\n                    }\r\n                    break;\r\n\r\n                case \"p\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        this.pushStyle();\r\n                        this._style.align = XMLIterator.getAttribute(\"align\");\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else if (XMLIterator.tagType == XMLTagType.End) {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n\r\n                        this.popStyle();\r\n                    }\r\n                    break;\r\n\r\n                case \"ui\":\r\n                case \"div\":\r\n                case \"li\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start) {\r\n                        if (!this.isNewLine())\r\n                            this.appendText(\"\\n\");\r\n                    }\r\n                    else {\r\n                        this.appendText(\"\\n\");\r\n                        skipNextCR = true;\r\n                    }\r\n                    break;\r\n\r\n                case \"html\":\r\n                case \"body\":\r\n                    //full html\r\n                    ignoreWhiteSpace = true;\r\n                    break;\r\n\r\n                case \"head\":\r\n                case \"style\":\r\n                case \"script\":\r\n                case \"form\":\r\n                    if (XMLIterator.tagType == XMLTagType.Start)\r\n                        skipText++;\r\n                    else if (XMLIterator.tagType == XMLTagType.End)\r\n                        skipText--;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        if (skipText == 0) {\r\n            text = XMLIterator.getText(ignoreWhiteSpace);\r\n            if (text.length > 0) {\r\n                if (skipNextCR && text[0] == '\\n')\r\n                    text = text.substring(1);\r\n                this.appendText(text);\r\n            }\r\n        }\r\n\r\n        this._elements = null;\r\n    }\r\n\r\n    protected pushStyle() {\r\n        let tf: TextStyle;\r\n        if (this._styleStack.length <= this._styleStackTop) {\r\n            tf = new TextStyle();\r\n            this._styleStack.push(tf);\r\n        }\r\n        else\r\n            tf = this._styleStack[this._styleStackTop];\r\n        Object.assign(tf, this._style);\r\n        this._styleStackTop++;\r\n    }\r\n\r\n    protected popStyle() {\r\n        if (this._styleStackTop > 0) {\r\n            let tf = this._styleStack[this._styleStackTop - 1];\r\n            Object.assign(this._style, tf);\r\n            this._styleStackTop--;\r\n        }\r\n    }\r\n\r\n    protected isNewLine(): boolean {\r\n        if (this._elements.length > 0) {\r\n            let element: HtmlElement = this._elements[this._elements.length - 1];\r\n            if (element && element.type == HtmlElementType.Text)\r\n                return element.text.endsWith(\"\\n\");\r\n            else\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    protected appendText(text: string) {\r\n        let element: HtmlElement;\r\n        if (this._elements.length > 0) {\r\n            element = this._elements[this._elements.length - 1];\r\n            if (element.type == HtmlElementType.Text && equalStyle(element.style, this._style)) {\r\n                element.text += text;\r\n                return;\r\n            }\r\n        }\r\n\r\n        element = HtmlElement.getFromPool(HtmlElementType.Text);\r\n        element.text = text;\r\n        Object.assign(element.style, this._style);\r\n        this._elements.push(element);\r\n    }\r\n}\r\n\r\nfunction equalStyle(s1: TextStyle, s2: TextStyle) {\r\n    for (let k in s1) {\r\n        if (!k.startsWith(\"_\") && (<any>s1)[k] != (<any>s2)[k])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n","export interface ITagHandler {\r\n    (tagName: string, end: boolean, attr: string): string;\r\n}\r\n\r\nexport class UBBParser {\r\n    static defaultParser: UBBParser = new UBBParser();\r\n\r\n    private _text: string;\r\n    private _readPos: number = 0;\r\n\r\n    protected _handlers: Record<string, ITagHandler>;\r\n\r\n    public defaultImgWidth: number = 0;\r\n    public defaultImgHeight: number = 0;\r\n    public lastColor: string;\r\n    public lastSize: string;\r\n\r\n    constructor() {\r\n        this._handlers = {};\r\n        this._handlers[\"url\"] = this.onTag_URL;\r\n        this._handlers[\"img\"] = this.onTag_IMG;\r\n        this._handlers[\"b\"] = this.onTag_B;\r\n        this._handlers[\"i\"] = this.onTag_I;\r\n        this._handlers[\"u\"] = this.onTag_U;\r\n        this._handlers[\"sup\"] = this.onTag_Simple;\r\n        this._handlers[\"sub\"] = this.onTag_Simple;\r\n        this._handlers[\"color\"] = this.onTag_COLOR;\r\n        this._handlers[\"font\"] = this.onTag_FONT;\r\n        this._handlers[\"size\"] = this.onTag_SIZE;\r\n    }\r\n\r\n    protected onTag_URL(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            if (attr != null)\r\n                return \"<a href=\\\"\" + attr + \"\\\">\";\r\n            else {\r\n                var href: string = this.getTagText();\r\n                return \"<a href=\\\"\" + href + \"\\\">\";\r\n            }\r\n        }\r\n        else\r\n            return \"</a>\";\r\n    }\r\n\r\n    protected onTag_IMG(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            var src: string = this.getTagText(true);\r\n            if (!src)\r\n                return null;\r\n\r\n            if (this.defaultImgWidth)\r\n                return \"<img src=\\\"\" + src + \"\\\" width=\\\"\" + this.defaultImgWidth + \"\\\" height=\\\"\" + this.defaultImgHeight + \"\\\"/>\";\r\n            else\r\n                return \"<img src=\\\"\" + src + \"\\\"/>\";\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    protected onTag_B(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</b>\") : (\"<b>\");\r\n    }\r\n\r\n    protected onTag_I(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</i>\") : (\"<i>\");\r\n    }\r\n\r\n    protected onTag_U(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</u>\") : (\"<u>\");\r\n    }\r\n\r\n    protected onTag_Simple(tagName: string, end: boolean, attr: string): string {\r\n        return end ? (\"</\" + tagName + \">\") : (\"<\" + tagName + \">\");\r\n    }\r\n\r\n    protected onTag_COLOR(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastColor = attr;\r\n            return \"<font color=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_FONT(tagName: string, end: boolean, attr: string): string {\r\n        if (!end)\r\n            return \"<font face=\\\"\" + attr + \"\\\">\";\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected onTag_SIZE(tagName: string, end: boolean, attr: string): string {\r\n        if (!end) {\r\n            this.lastSize = attr;\r\n            return \"<font size=\\\"\" + attr + \"\\\">\";\r\n        }\r\n        else\r\n            return \"</font>\";\r\n    }\r\n\r\n    protected getTagText(remove?: boolean): string {\r\n        var pos1: number = this._readPos;\r\n        var pos2: number;\r\n        var result: string = \"\";\r\n        while ((pos2 = this._text.indexOf(\"[\", pos1)) != -1) {\r\n            if (this._text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += this._text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n            }\r\n            else {\r\n                result += this._text.substring(pos1, pos2);\r\n                break;\r\n            }\r\n        }\r\n        if (pos2 == -1)\r\n            return null;\r\n\r\n        if (remove)\r\n            this._readPos = pos2;\r\n\r\n        return result;\r\n    }\r\n\r\n    public parse(text: string, remove?: boolean): string {\r\n        this._text = text;\r\n        this.lastColor = null;\r\n        this.lastSize = null;\r\n\r\n        var pos1: number = 0, pos2: number, pos3: number;\r\n        var end: boolean;\r\n        var tag: string, attr: string;\r\n        var repl: string;\r\n        var func: Function;\r\n        var result: string = \"\";\r\n        while ((pos2 = text.indexOf(\"[\", pos1)) != -1) {\r\n            if (pos2 > 0 && text.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += text.substring(pos1, pos2 - 1);\r\n                result += \"[\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += text.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = text.indexOf(\"]\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            end = text.charAt(pos1 + 1) == '/';\r\n            tag = text.substring(end ? pos1 + 2 : pos1 + 1, pos2);\r\n            this._readPos = pos2 + 1;\r\n            attr = null;\r\n            repl = null;\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                attr = tag.substring(pos3 + 1);\r\n                tag = tag.substring(0, pos3);\r\n            }\r\n            tag = tag.toLowerCase();\r\n            func = this._handlers[tag];\r\n            if (func != null) {\r\n                if (!remove) {\r\n                    repl = func.call(this, tag, end, attr);\r\n                    if (repl != null)\r\n                        result += repl;\r\n                }\r\n            }\r\n            else\r\n                result += text.substring(pos1, this._readPos);\r\n            pos1 = this._readPos;\r\n        }\r\n\r\n        if (pos1 < text.length)\r\n            result += text.substring(pos1);\r\n\r\n        this._text = null;\r\n\r\n        return result;\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { BitmapFont } from \"./BitmapFont\";\r\nimport { TextStyle } from \"./css/TextStyle\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { WordText } from \"../utils/WordText\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Config } from \"../../Config\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { DrawRectCmd } from \"./cmd/DrawRectCmd\";\r\nimport { HtmlElement, HtmlElementType } from \"../html/HtmlElement\";\r\nimport { HtmlLink } from \"../html/HtmlLink\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { IHtmlObject } from \"../html/IHtmlObject\";\r\nimport { HideFlags } from \"../Const\";\r\nimport { HtmlParser } from \"../html/HtmlParser\";\r\nimport { UBBParser } from \"../html/UBBParser\";\r\nimport { HtmlParseOptions } from \"../html/HtmlParseOptions\";\r\n\r\n/**\r\n * 文本内容发生改变后调度。\r\n * @eventType Event.CHANGE\r\n */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Text</code> 类用于创建显示对象以显示文本。</p>\r\n * <p>\r\n * 注意：如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。\r\n * </p>\r\n * @example\r\n * package\r\n * {\r\n * \timport laya.display.Text;\r\n * \tpublic class Text_Example\r\n * \t{\r\n * \t\tpublic function Text_Example()\r\n * \t\t{\r\n * \t\t\tLaya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n * \t\t\tLaya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n * \t\t\tonInit();\r\n * \t\t}\r\n * \t\tprivate function onInit():void\r\n * \t\t{\r\n * \t\t\tvar text:Text = new Text();//创建一个 Text 类的实例对象 text 。\r\n * \t\t\ttext.text = \"这个是一个 Text 文本示例。\";\r\n * \t\t\ttext.color = \"#008fff\";//设置 text 的文本颜色。\r\n * \t\t\ttext.font = \"Arial\";//设置 text 的文本字体。\r\n * \t\t\ttext.bold = true;//设置 text 的文本显示为粗体。\r\n * \t\t\ttext.fontSize = 30;//设置 text 的字体大小。\r\n * \t\t\ttext.wordWrap = true;//设置 text 的文本自动换行。\r\n * \t\t\ttext.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n * \t\t\ttext.width = 300;//设置 text 的宽度。\r\n * \t\t\ttext.height = 200;//设置 text 的高度。\r\n * \t\t\ttext.italic = true;//设置 text 的文本显示为斜体。\r\n * \t\t\ttext.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n * \t\t\tLaya.stage.addChild(text);//将 text 添加到显示列表。\r\n * \t\t}\r\n * \t}\r\n * }\r\n * @example\r\n * Text_Example();\r\n * function Text_Example()\r\n * {\r\n *     Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *     Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *     onInit();\r\n * }\r\n * function onInit()\r\n * {\r\n *     var text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *     text.text = \"这个是一个 Text 文本示例。\";\r\n *     text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *     text.font = \"Arial\";//设置 text 的文本字体。\r\n *     text.bold = true;//设置 text 的文本显示为粗体。\r\n *     text.fontSize = 30;//设置 text 的字体大小。\r\n *     text.wordWrap = true;//设置 text 的文本自动换行。\r\n *     text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *     text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *     text.width = 300;//设置 text 的宽度。\r\n *     text.height = 200;//设置 text 的高度。\r\n *     text.italic = true;//设置 text 的文本显示为斜体。\r\n *     text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *     Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n * }\r\n * @example\r\n * class Text_Example {\r\n *     constructor() {\r\n *         Laya.init(640, 800);//设置游戏画布宽高、渲染模式。\r\n *         Laya.stage.bgColor = \"#efefef\";//设置画布的背景颜色。\r\n *         this.onInit();\r\n *     }\r\n *     private onInit(): void {\r\n *         var text: laya.display.Text = new laya.display.Text();//创建一个 Text 类的实例对象 text 。\r\n *         text.text = \"这个是一个 Text 文本示例。\";\r\n *         text.color = \"#008fff\";//设置 text 的文本颜色。\r\n *         text.font = \"Arial\";//设置 text 的文本字体。\r\n *         text.bold = true;//设置 text 的文本显示为粗体。\r\n *         text.fontSize = 30;//设置 text 的字体大小。\r\n *         text.wordWrap = true;//设置 text 的文本自动换行。\r\n *         text.x = 100;//设置 text 对象的属性 x 的值，用于控制 text 对象的显示位置。\r\n *         text.y = 100;//设置 text 对象的属性 y 的值，用于控制 text 对象的显示位置。\r\n *         text.width = 300;//设置 text 的宽度。\r\n *         text.height = 200;//设置 text 的高度。\r\n *         text.italic = true;//设置 text 的文本显示为斜体。\r\n *         text.borderColor = \"#fff000\";//设置 text 的文本边框颜色。\r\n *         Laya.stage.addChild(text);//将 text 添加到显示列表。\r\n *     }\r\n * }\r\n */\r\nexport class Text extends Sprite {\r\n\r\n    /**visible不进行任何裁切。*/\r\n    static VISIBLE: string = \"visible\";\r\n    /**scroll 不显示文本域外的字符像素，并且支持 scroll 接口。*/\r\n    static SCROLL: string = \"scroll\";\r\n    /**hidden 不显示超出文本域的字符。*/\r\n    static HIDDEN: string = \"hidden\";\r\n    /**shrink 超出文本域时，文本整体缩小以适应文本框。*/\r\n    static SHRINK: string = \"shrink\";\r\n    /**ellipsis 超出文本域时，文本被截断，并且文本最后显示省略号。*/\r\n    static ELLIPSIS: string = \"ellipsis\";\r\n\r\n    /**语言包，是一个包含key:value的集合，用key索引，替换为目标value语言*/\r\n    static langPacks: Record<string, string>;\r\n    /**是否是从右向左的显示顺序*/\r\n    static RightToLeft: boolean = false;\r\n\r\n    /**@internal 预测长度的文字，用来提升计算效率，不同语言找一个最大的字符即可*/\r\n    static _testWord: string = \"游\";\r\n    static _passwordChar = \"●\";\r\n\r\n    /**@private 位图字体字典。*/\r\n    private static _bitmapFonts: Record<string, BitmapFont> = {};\r\n\r\n    /** 标记此文本是否忽略语言包 */\r\n    ignoreLang: boolean;\r\n\r\n    /**表示文本内容字符串。*/\r\n    protected _text: string;\r\n    protected _overflow: string = Text.VISIBLE;\r\n    protected _singleCharRender: boolean = false;\t// 拆分渲染\r\n    protected _textStyle: TextStyle;\r\n    protected _prompt: string = '';\r\n    /**输入提示符颜色。*/\r\n    protected _promptColor: string;\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    protected _bgColor: string;\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    protected _borderColor: string;\r\n    /**\r\n     * <p>默认边距信息</p>\r\n     * <p>[上边距，右边距，下边距，左边距]（边距以像素为单位）</p>\r\n     */\r\n    protected _padding: number[];\r\n    /**\r\n     * <p>表示使用此文本格式的文本字段是否自动换行。</p>\r\n     * 如果 wordWrap 的值为 true，则该文本字段自动换行；如果值为 false，则该文本字段不自动换行。\r\n     * @default false。\r\n     */\r\n    protected _wordWrap: boolean;\r\n\r\n    /**\r\n     * <p>指定文本字段是否是密码文本字段。</p>\r\n     * 如果此属性的值为 true，则文本字段被视为密码文本字段，并使用星号而不是实际字符来隐藏输入的字符。如果为 false，则不会将文本字段视为密码文本字段。\r\n     */\r\n    protected _asPassword: boolean;\r\n\r\n    protected _htmlParseOptions: HtmlParseOptions;\r\n\r\n    protected _templateVars: Record<string, string>;\r\n\r\n    /**表示文本内容是否发生改变。*/\r\n    protected _isChanged: boolean;\r\n    /**表示文本的宽度，以像素为单位。*/\r\n    protected _textWidth: number = 0;\r\n    /**表示文本的高度，以像素为单位。*/\r\n    protected _textHeight: number = 0;\r\n    protected _realFont: string;\r\n    protected _bitmapFont: BitmapFont;\r\n    protected _scrollPos: Point | null;\r\n    protected _bgDrawCmd: DrawRectCmd;\r\n    protected _html: boolean;\r\n    protected _ubb: boolean;\r\n    protected _lines: Array<ITextLine>;\r\n    protected _elements: Array<HtmlElement>;\r\n    protected _objContainer: Sprite;\r\n    protected _maxWidth: number;\r\n    protected _hideText: boolean;\r\n\r\n    private _updatingLayout: boolean;\r\n    private _fontSizeScale: number;\r\n\r\n    /**是否将字符串中的\\n,\\t转换为实际功能的字符 */\r\n    _parseEscapeChars: boolean;\r\n    _onPostLayout: () => void;\r\n\r\n    /**\r\n     * 创建一个新的 <code>Text</code> 实例。\r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._textStyle = new TextStyle();\r\n        this._textStyle.fontSize = Config.defaultFontSize;\r\n        this._text = \"\";\r\n        this.font = \"\";\r\n        this._elements = [];\r\n        this._lines = [];\r\n        this._padding = [0, 0, 0, 0];\r\n        this._fontSizeScale = 1;\r\n    }\r\n\r\n    /**\r\n     * 注册位图字体。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tbitmapFont\t位图字体文件。\r\n     */\r\n    static registerBitmapFont(name: string, bitmapFont: BitmapFont): void {\r\n        bitmapFont._addReference();\r\n        Text._bitmapFonts[name] = bitmapFont;\r\n    }\r\n\r\n    /**\r\n     * 移除注册的位图字体文件。\r\n     * @param\tname\t\t位图字体的名称。\r\n     * @param\tdestroy\t\t是否销毁指定的字体文件。\r\n     */\r\n    static unregisterBitmapFont(name: string, destroy: boolean = true): void {\r\n        let font = Text._bitmapFonts[name];\r\n        if (font) {\r\n            font._removeReference();\r\n            if (destroy) font.destroy();\r\n            delete Text._bitmapFonts[name];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n    */\r\n    destroy(destroyChild: boolean = true): void {\r\n        recoverLines(this._lines);\r\n        HtmlElement.returnToPool(this._elements);\r\n\r\n        super.destroy(destroyChild);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    _getBoundPointsM(ifRotate: boolean = false): any[] {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec._getBoundPoints();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    getGraphicBounds(realSize: boolean = false): Rectangle {\r\n        var rec: Rectangle = Rectangle.TEMP;\r\n        rec.setTo(0, 0, this.width, this.height);\r\n        return rec;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        return this.textWidth;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setWidth(value: number) {\r\n        super._setWidth(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        return this.textHeight;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    _setHeight(value: number) {\r\n        super._setHeight(value);\r\n        if (!this._updatingLayout)\r\n            this.markChanged();\r\n        else\r\n            this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 表示文本的宽度，以像素为单位。\r\n     */\r\n    get textWidth(): number {\r\n        this.typeset();\r\n        return this._textWidth;\r\n    }\r\n\r\n    /**\r\n     * 表示文本的高度，以像素为单位。\r\n     */\r\n    get textHeight(): number {\r\n        this.typeset();\r\n        return this._textHeight;\r\n    }\r\n\r\n    /** 当前文本的内容字符串。*/\r\n    get text(): string {\r\n        return this._text;\r\n    }\r\n\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (!this.ignoreLang && Text.langPacks)\r\n            value = Text.langPacks[value] || value;\r\n\r\n        if (this._text != value) {\r\n            this._text = value;\r\n            this.markChanged();\r\n            this.event(Event.CHANGE);\r\n        }\r\n    }\r\n\r\n    /** @deprecated **/\r\n    changeText(text: string): void {\r\n        this.text = text;\r\n    }\r\n\r\n    /**\r\n     * <p>文本的字体名称，以字符串形式表示。</p>\r\n     * <p>默认值为：\"Arial\"，可以通过Config.defaultFont设置默认字体。</p>\r\n     * <p>如果运行时系统找不到设定的字体，则用系统默认的字体渲染文字，从而导致显示异常。(通常电脑上显示正常，在一些移动端因缺少设置的字体而显示异常)。</p>\r\n     */\r\n    get font(): string {\r\n        return this._textStyle.font;\r\n    }\r\n\r\n    set font(value: string) {\r\n        this._textStyle.font = value;\r\n        if (!value) {\r\n            value = Config.defaultFont;\r\n            if (!value)\r\n                value = \"Arial\";\r\n        }\r\n\r\n        this._realFont = value;\r\n        this._bitmapFont = Text._bitmapFonts[value];\r\n\r\n        if (this._bitmapFont) {\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n        else if (value && (Utils.getFileExtension(value) || value.startsWith(\"res://\"))) {\r\n            let t = value;\r\n            ILaya.loader.load(value).then(fontObj => {\r\n                if (!fontObj || this._realFont != t)\r\n                    return;\r\n\r\n                if (fontObj instanceof BitmapFont)\r\n                    this._bitmapFont = fontObj;\r\n                else\r\n                    this._realFont = fontObj.family;\r\n                if (this._text)\r\n                    this.markChanged();\r\n            });\r\n        }\r\n        else {\r\n            this._realFont = (ILaya.Browser.onIPhone ? (Config.fontFamilyMap[value] || value) : value);\r\n            if (this._text)\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本的字体大小（以像素为单位）。</p>\r\n     * <p>默认为20像素，可以通过 <code>Config.defaultFontSize</code> 设置默认大小。</p>\r\n     */\r\n    get fontSize(): number {\r\n        return this._textStyle.fontSize;\r\n    }\r\n\r\n    set fontSize(value: number) {\r\n        if (this._textStyle.fontSize != value) {\r\n            this._textStyle.fontSize = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的颜色值。可以通过 <code>Text.defaultColor</code> 设置默认颜色。</p>\r\n     * <p>默认值为黑色。</p>\r\n     */\r\n    get color(): string {\r\n        return this._textStyle.color;\r\n    }\r\n\r\n    set color(value: string) {\r\n        this.set_color(value);\r\n    }\r\n\r\n    set_color(value: string): void {\r\n        if (this._textStyle.color != value) {\r\n            this._textStyle.color = value;\r\n            //如果仅仅更新颜色，无需重新排版\r\n            if (!this._isChanged && this._graphics && this._elements.length == 0)\r\n                this._graphics.replaceTextColor(this._textStyle.color);\r\n            else\r\n                this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>指定文本是否为粗体字。</p>\r\n     * <p>默认值为 false，这意味着不使用粗体字。如果值为 true，则文本为粗体字。</p>\r\n     */\r\n    get bold(): boolean {\r\n        return this._textStyle.bold;\r\n    }\r\n\r\n    set bold(value: boolean) {\r\n        if (this._textStyle.bold != value) {\r\n            this._textStyle.bold = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示使用此文本格式的文本是否为斜体。</p>\r\n     * <p>默认值为 false，这意味着不使用斜体。如果值为 true，则文本为斜体。</p>\r\n     */\r\n    get italic(): boolean {\r\n        return this._textStyle.italic;\r\n    }\r\n\r\n    set italic(value: boolean) {\r\n        if (this._textStyle.italic != value) {\r\n            this._textStyle.italic = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的水平显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"left\"： 居左对齐显示。</li>\r\n     * <li>\"center\"： 居中对齐显示。</li>\r\n     * <li>\"right\"： 居右对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get align(): string {\r\n        return this._textStyle.align;\r\n    }\r\n\r\n    set align(value: string) {\r\n        if (this._textStyle.align != value) {\r\n            this._textStyle.align = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本的垂直显示方式。</p>\r\n     * <p><b>取值：</b>\r\n     * <li>\"top\"： 居顶部对齐显示。</li>\r\n     * <li>\"middle\"： 居中对齐显示。</li>\r\n     * <li>\"bottom\"： 居底部对齐显示。</li>\r\n     * </p>\r\n     */\r\n    get valign(): string {\r\n        return this._textStyle.valign;\r\n    }\r\n\r\n    set valign(value: string) {\r\n        if (this._textStyle.valign != value) {\r\n            this._textStyle.valign = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>表示文本是否自动换行，默认为false。</p>\r\n     * <p>若值为true，则自动换行；否则不自动换行。</p>\r\n     */\r\n    get wordWrap(): boolean {\r\n        return this._wordWrap;\r\n    }\r\n\r\n    set wordWrap(value: boolean) {\r\n        if (this._wordWrap != value) {\r\n            this._wordWrap = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 垂直行间距（以像素为单位）。\r\n     */\r\n    get leading(): number {\r\n        return this._textStyle.leading;\r\n    }\r\n\r\n    set leading(value: number) {\r\n        if (this._textStyle.leading != value) {\r\n            this._textStyle.leading = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>边距信息。</p>\r\n     * <p>数据格式：[上边距，右边距，下边距，左边距]（边距以像素为单位）。</p>\r\n     */\r\n    get padding(): number[] {\r\n        return this._padding;\r\n    }\r\n\r\n    set padding(value: number[] | string) {\r\n        if (typeof (value) == 'string') {\r\n            let arr = value.split(\",\");\r\n            this._padding.length = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let v = parseFloat(arr[i]);\r\n                if (isNaN(v))\r\n                    v = 0;\r\n                this._padding.push(v);\r\n            }\r\n        }\r\n        else\r\n            this._padding = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    /**\r\n     * 文本背景颜色，以字符串表示。\r\n     */\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * 文本边框背景颜色，以字符串表示。\r\n     */\r\n    get borderColor(): string {\r\n        return this._borderColor;\r\n    }\r\n\r\n    set borderColor(value: string) {\r\n        this._borderColor = value;\r\n        this.drawBg();\r\n    }\r\n\r\n    /**\r\n     * <p>描边宽度（以像素为单位）。</p>\r\n     * <p>默认值0，表示不描边。</p>\r\n     */\r\n    get stroke(): number {\r\n        return this._textStyle.stroke;\r\n    }\r\n\r\n    set stroke(value: number) {\r\n        if (this._textStyle.stroke != value) {\r\n            this._textStyle.stroke = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>描边颜色，以字符串表示。</p>\r\n     * <p>默认值为 \"#000000\"（黑色）;</p>\r\n     */\r\n    get strokeColor(): string {\r\n        return this._textStyle.strokeColor;\r\n    }\r\n\r\n    set strokeColor(value: string) {\r\n        if (this._textStyle.strokeColor != value) {\r\n            this._textStyle.strokeColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 指定文本超出文本域后的行为\r\n     * @tips: <p>值为:可见visible、隐藏hidden、滚动:scroll、自动收缩shrink、显示省略号ellipsis。</p>\r\n     * @tips: <p>作用：可见，表示文本不受文本宽高约束全部可见；隐藏，超过文本宽高就会被裁切掉，性能最好；\r\n     * 滚动，表示超出宽高的部分被隐藏，可以通过划动控制显示在宽高内区域；自动收缩，表示文本会跟随宽高的大小而自动调整文本的大小，始终全部显示在文本宽高内。\r\n     * 显示省略号，表示当文本超出宽高后，未尾的几位字符会替换为省略号，表示当前文本还有未显示的内容</p>\r\n     */\r\n    get overflow(): string {\r\n        return this._overflow;\r\n    }\r\n\r\n    set overflow(value: string) {\r\n        if (this._overflow != value) {\r\n            this._overflow = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**是否显示下划线。*/\r\n    get underline(): boolean {\r\n        return this._textStyle.underline;\r\n    }\r\n\r\n    set underline(value: boolean) {\r\n        if (this._textStyle.underline != value) {\r\n            this._textStyle.underline = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**下划线的颜色，为null则使用字体颜色。*/\r\n    get underlineColor(): string {\r\n        return this._textStyle.underlineColor;\r\n    }\r\n\r\n    set underlineColor(value: string) {\r\n        if (this._textStyle.underlineColor != value) {\r\n            this._textStyle.underlineColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get singleCharRender(): boolean {\r\n        return this._singleCharRender;\r\n    }\r\n\r\n    /** 设置是否单个字符渲染，如果Textd的内容一直改变，例如是一个增加的数字，就设置这个，防止无效占用缓存 */\r\n    set singleCharRender(value: boolean) {\r\n        this._singleCharRender = value;\r\n    }\r\n\r\n    get html(): boolean {\r\n        return this._html;\r\n    }\r\n\r\n    /** 设置是否富文本，支持html语法 */\r\n    set html(value: boolean) {\r\n        if (this._html != value) {\r\n            this._html = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get ubb(): boolean {\r\n        return this._ubb;\r\n    }\r\n\r\n    /** 设置是否使用UBB语法解析文本 */\r\n    set ubb(value: boolean) {\r\n        if (this._ubb != value) {\r\n            this._ubb = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get maxWidth(): number {\r\n        return this._maxWidth;\r\n    }\r\n\r\n    /** 设置当文本达到最大允许的宽度时，自定换行，设置为0则此限制不生效。*/\r\n    set maxWidth(value: number) {\r\n        if (this._maxWidth != value) {\r\n            this._maxWidth = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    get htmlParseOptions(): HtmlParseOptions {\r\n        return this._htmlParseOptions;\r\n    }\r\n\r\n    set htmlParseOptions(value: HtmlParseOptions) {\r\n        this._htmlParseOptions = value;\r\n    }\r\n\r\n    protected parseTemplate(template: string): string {\r\n        let pos1: number = 0, pos2: number, pos3: number;\r\n        let tag: string;\r\n        let value: string;\r\n        let result: string = \"\";\r\n        while ((pos2 = template.indexOf(\"{\", pos1)) != -1) {\r\n            if (pos2 > 0 && template.charCodeAt(pos2 - 1) == 92)//\\\r\n            {\r\n                result += template.substring(pos1, pos2 - 1);\r\n                result += \"{\";\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            result += template.substring(pos1, pos2);\r\n            pos1 = pos2;\r\n            pos2 = template.indexOf(\"}\", pos1);\r\n            if (pos2 == -1)\r\n                break;\r\n\r\n            if (pos2 == pos1 + 1) {\r\n                result += template.substring(pos1, pos1 + 2);\r\n                pos1 = pos2 + 1;\r\n                continue;\r\n            }\r\n\r\n            tag = template.substring(pos1 + 1, pos2);\r\n            pos3 = tag.indexOf(\"=\");\r\n            if (pos3 != -1) {\r\n                value = this._templateVars[tag.substring(0, pos3)];\r\n                if (value == null)\r\n                    result += tag.substring(pos3 + 1);\r\n                else\r\n                    result += value;\r\n            }\r\n            else {\r\n                value = this._templateVars[tag];\r\n                if (value != null)\r\n                    result += value;\r\n            }\r\n            pos1 = pos2 + 1;\r\n        }\r\n\r\n        if (pos1 < template.length)\r\n            result += template.substring(pos1);\r\n\r\n        return result;\r\n    }\r\n\r\n    public get templateVars(): Record<string, any> {\r\n        return this._templateVars;\r\n    }\r\n\r\n    public set templateVars(value: Record<string, any> | boolean) {\r\n        if (!this._templateVars && !value)\r\n            return;\r\n\r\n        if (value === true)\r\n            this._templateVars = {};\r\n        else if (value === false)\r\n            this._templateVars = null;\r\n        else\r\n            this._templateVars = value;\r\n        this.markChanged();\r\n    }\r\n\r\n    public setVar(name: string, value: any): Text {\r\n        if (!this._templateVars)\r\n            this._templateVars = {};\r\n        this._templateVars[name] = value;\r\n        this.markChanged();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n    * <p>设置横向滚动量。</p>\r\n    * <p>即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。</p>\r\n    */\r\n    set scrollX(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollX = this.maxScrollX;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollX ? maxScrollX : value;\r\n\r\n        this._scrollPos.x = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取横向滚动量。\r\n     */\r\n    get scrollX(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.x;\r\n    }\r\n\r\n    /**\r\n     * 设置纵向滚动量（px)。即使设置超出滚动范围的值，也会被自动限制在可能的最大值处。\r\n     */\r\n    set scrollY(value: number) {\r\n        this.typeset();\r\n        if (!this._scrollPos) return;\r\n\r\n        let maxScrollY = this.maxScrollY;\r\n        value = value < 0 ? 0 : value;\r\n        value = value > maxScrollY ? maxScrollY : value;\r\n\r\n        this._scrollPos.y = value;\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n     * 获取纵向滚动量。\r\n     */\r\n    get scrollY(): number {\r\n        if (!this._scrollPos) return 0;\r\n        return this._scrollPos.y;\r\n    }\r\n\r\n    /**\r\n     * 获取横向可滚动最大值。\r\n     */\r\n    get maxScrollX(): number {\r\n        let r = this.textWidth - this._width;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**\r\n     * 获取纵向可滚动最大值。\r\n     */\r\n    get maxScrollY(): number {\r\n        let r = this.textHeight - this._height;\r\n        return r < 0 ? 0 : r;\r\n    }\r\n\r\n    /**返回文字行信息*/\r\n    get lines(): ReadonlyArray<ITextLine> {\r\n        this.typeset();\r\n        return this._lines;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    protected markChanged() {\r\n        if (!this._isChanged) {\r\n            this._isChanged = true;\r\n            ILaya.systemTimer.callLater(this, this._typeset);\r\n        }\r\n    }\r\n\r\n    typeset() {\r\n        this._isChanged && ILaya.systemTimer.runCallLater(this, this._typeset);\r\n    }\r\n\r\n    refreshLayout() {\r\n        ILaya.systemTimer.callLater(this, this.doLayout);\r\n    }\r\n\r\n    get objContainer(): Sprite {\r\n        if (!this._objContainer) {\r\n            this._objContainer = new Sprite();\r\n            this._objContainer.hideFlags |= HideFlags.HideAndDontSave;\r\n            this.addChild(this._objContainer);\r\n        }\r\n        return this._objContainer;\r\n    }\r\n\r\n    /**\r\n     * <p>排版文本。</p>\r\n     * <p>进行宽高计算，渲染、重绘文本。</p>\r\n     */\r\n    protected _typeset(): void {\r\n        this._isChanged = false;\r\n        if (this._hideText || this._destroyed)\r\n            return;\r\n\r\n        HtmlElement.returnToPool(this._elements);\r\n        if (this._objContainer)\r\n            this._objContainer.removeChildren();\r\n\r\n        let text = this._text;\r\n        let isPrompt: boolean;\r\n        if (!text && this._prompt) {\r\n            text = this._prompt;\r\n            isPrompt = true;\r\n        }\r\n\r\n        if (!text) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n\r\n            this._textWidth = this._textHeight = 0;\r\n            this._scrollPos = null;\r\n            if (this._onPostLayout) {\r\n                this._updatingLayout = true;\r\n                this._onPostLayout();\r\n                this._updatingLayout = false;\r\n            }\r\n            return;\r\n        }\r\n\r\n        let html = this._html;\r\n        text = text.replace(normalizeCR, \"\\n\");\r\n        if (this._parseEscapeChars)\r\n            text = text.replace(escapeCharsPattern, getReplaceStr);\r\n        if (!isPrompt && this._templateVars)\r\n            text = this.parseTemplate(text);\r\n\r\n        if (this._ubb) {\r\n            text = UBBParser.defaultParser.parse(text);\r\n            html = true;\r\n        }\r\n        if (!isPrompt && this._asPassword)\r\n            text = Text._passwordChar.repeat(text.length);\r\n\r\n        let saveColor: string;\r\n        if (isPrompt) {\r\n            saveColor = this._textStyle.color;\r\n            this._textStyle.color = this._promptColor;\r\n        }\r\n        if (html)\r\n            HtmlParser.defaultParser.parse(text, this._textStyle, this._elements, this._htmlParseOptions);\r\n        else {\r\n            let ele = HtmlElement.getFromPool(HtmlElementType.Text);\r\n            Object.assign(ele.style, this._textStyle);\r\n            ele.text = text;\r\n            this._elements.push(ele);\r\n        }\r\n        if (isPrompt)\r\n            this._textStyle.color = saveColor;\r\n\r\n        this.doLayout();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 分析文本换行。\r\n     */\r\n    protected doLayout(): void {\r\n        if (this._destroyed)\r\n            return;\r\n\r\n        this._updatingLayout = true;\r\n        this._fontSizeScale = 1;\r\n\r\n        let wordWrap = this._wordWrap || this._overflow == Text.ELLIPSIS;\r\n        let padding = this._padding;\r\n        let rectWidth: number;\r\n        if (this._isWidthSet)\r\n            rectWidth = this._width - padding[3] - padding[1];\r\n        else\r\n            rectWidth = Number.MAX_VALUE;\r\n        if (this._maxWidth > 0) {\r\n            let m = this._maxWidth - padding[3] - padding[1];\r\n            if (!wordWrap || m < rectWidth)\r\n                rectWidth = m;\r\n            wordWrap = true;\r\n        }\r\n        let rectHeight = this._isHeightSet ? (this._height - padding[0] - padding[2]) : Number.MAX_VALUE;\r\n        let bfont = this._bitmapFont;\r\n\r\n        let lineX: number, lineY: number;\r\n        let curLine: ITextLine;\r\n        let lastCmd: ITextCmd;\r\n        let charWidth: number, charHeight: number;\r\n        let fontSize: number;\r\n\r\n        let getTextWidth = (text: string) => {\r\n            if (bfont)\r\n                return bfont.getTextWidth(text, fontSize);\r\n            else {\r\n                if (LayaEnv.isConch)\r\n                    return (window as any).conchTextCanvas.measureText(text).width;\r\n                else {\r\n                    let ret = ILaya.Browser.context.measureText(text);\r\n                    return ret ? ret.width : 100;\r\n                }\r\n            }\r\n        };\r\n\r\n        let buildLines = (text: string, style: TextStyle) => {\r\n            if (bfont) {\r\n                charWidth = bfont.getMaxWidth(fontSize);\r\n                charHeight = bfont.getMaxHeight(fontSize);\r\n            } else {\r\n                let ctxFont = (style.italic ? \"italic \" : \"\") + (style.bold ? \"bold \" : \"\") + fontSize + \"px \" + this._realFont;\r\n                (<any>style)._ctxFont = ctxFont; //缓存起来，避免renderText里又拼一次\r\n\r\n                let mr: any;\r\n                if (LayaEnv.isConch) {\r\n                    (window as any).conchTextCanvas.font = ctxFont;\r\n                    mr = (window as any).conchTextCanvas.measureText(Text._testWord);\r\n                }\r\n                else {\r\n                    ILaya.Browser.context.font = ctxFont;\r\n                    mr = ILaya.Browser.context.measureText(Text._testWord);\r\n                }\r\n\r\n                if (mr) {\r\n                    charWidth = mr.width;\r\n                    charHeight = Math.ceil(mr.height || fontSize);\r\n                }\r\n                else {\r\n                    charWidth = 100;\r\n                    charHeight = fontSize;\r\n                }\r\n            }\r\n\r\n            let lines = text.split(\"\\n\");\r\n            if (wordWrap) {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        wrapText(line, style);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                for (let i = 0, n = lines.length; i < n; i++) {\r\n                    let line = lines[i];\r\n                    if (line.length > 0)\r\n                        addCmd(line, style, null);\r\n                    if (i != n - 1) {\r\n                        endLine();\r\n                        startLine();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        let addCmd = (target: string | IHtmlObject, style: TextStyle, width?: number) => {\r\n            let cmd: ITextCmd = cmdPool.length > 0 ? cmdPool.pop() : <any>{};\r\n            cmd.x = lineX;\r\n            cmd.y = lineY;\r\n            if (typeof (target) === \"string\") {\r\n                if (!width)\r\n                    width = getTextWidth(target);\r\n                if (!cmd.wt)\r\n                    cmd.wt = new WordText();\r\n                cmd.wt.setText(target);\r\n                cmd.wt.width = width;\r\n                cmd.wt.splitRender = this._singleCharRender;\r\n                cmd.width = width;\r\n                cmd.height = charHeight;\r\n            }\r\n            else {\r\n                cmd.obj = target;\r\n                cmd.x++;\r\n                cmd.width = target.width + 2;\r\n                cmd.height = target.height;\r\n            }\r\n            cmd.style = style;\r\n            cmd.linkEnd = false;\r\n            cmd.next = null;\r\n            lineX += Math.round(cmd.width);\r\n\r\n            if (!curLine.cmd)\r\n                curLine.cmd = cmd;\r\n            else\r\n                lastCmd.next = cmd;\r\n            lastCmd = cmd;\r\n        };\r\n\r\n        let endLine = () => {\r\n            //计算行高\r\n            let lineHeight = 0;\r\n            let cmd = curLine.cmd;\r\n            while (cmd) {\r\n                if (cmd.height > lineHeight) lineHeight = cmd.height;\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            //调整元素y位置\r\n            cmd = curLine.cmd;\r\n            while (cmd) {\r\n                cmd.y = Math.floor((lineHeight - cmd.height) * 0.5);\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (lineHeight == 0)\r\n                lineHeight = charHeight;\r\n            lineHeight++; //预览一个像素用来放下划线\r\n\r\n            curLine.height = lineHeight;\r\n            curLine.width = lineX;\r\n        };\r\n\r\n        let startLine = () => {\r\n            lineX = 0;\r\n            if (curLine)\r\n                lineY += curLine.height + Math.floor(this._textStyle.leading * this._fontSizeScale);\r\n\r\n            curLine = linePool.length > 0 ? linePool.pop() : <any>{ cmds: [] };\r\n            curLine.x = 0;\r\n            curLine.y = lineY;\r\n            this._lines.push(curLine);\r\n\r\n            return curLine;\r\n        };\r\n\r\n        let wrapText = (text: string, style: TextStyle) => {\r\n            let remainWidth = Math.max(0, rectWidth - lineX);\r\n\r\n            let tw = getTextWidth(text);\r\n            //优化1，如果一行小于宽度，则直接跳过遍历\r\n            if (tw <= remainWidth) {\r\n                addCmd(text, style, tw);\r\n                return;\r\n            }\r\n\r\n            let maybeIndex = 0;\r\n            let wordWidth = 0;\r\n            let startIndex = 0;\r\n\r\n            let isEmoji = testEmoji(text);\r\n            if (!bfont && !isEmoji) {\r\n                //优化2，预算第几个字符会超出，减少遍历及字符宽度度量\r\n                maybeIndex = Math.floor(remainWidth / charWidth);\r\n                (maybeIndex == 0) && (maybeIndex = 1);\r\n                wordWidth = getTextWidth(text.substring(0, maybeIndex));\r\n                if (remainWidth < wordWidth && lineX != 0) {\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                }\r\n            }\r\n\r\n            let len = text.length;\r\n            for (let j = maybeIndex; j < len; j++) {\r\n                // 逐字符测量后加入到总宽度中，在某些情况下自动换行不准确。\r\n                // 目前已知在全是字符1的自动换行就会出现这种情况。\r\n                // 考虑性能，保留这种非方式。\r\n                tw = getTextWidth(text.charAt(j));\r\n                wordWidth += tw;\r\n                let isEmojiChar = false;\r\n                if (isEmoji && j + 1 < len && testEmoji(text.charAt(j) + text.charAt(j + 1))) {\r\n                    wordWidth += tw >> 1;\r\n                    j++;\r\n                    isEmojiChar = true;\r\n                }\r\n\r\n                // 如果j的位置已经超出范围，要从startIndex到j找到一个能拆分的地方\r\n                if (wordWidth > remainWidth) {\r\n                    if (isEmojiChar) {\r\n                        if (wordWidth == tw + (tw >> 1)) {\r\n                            //这里是代表第一个就是emoji表情的逻辑\r\n                            j++;\r\n                        } else {\r\n                            j--;\r\n                        }\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        if (lineX > 0) {\r\n                            endLine();\r\n                            startLine();\r\n                            remainWidth = rectWidth;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    //截断换行单词\r\n                    let newLine = text.substring(startIndex, j);\r\n                    wordWidth -= tw;\r\n\r\n                    // 如果最后一个是中文则直接截断，否则找空格或者-来拆分\r\n                    let ccode = newLine.charCodeAt(newLine.length - 1);\r\n                    if (isEnglishChar(ccode)) {\r\n                        //按照英文单词字边界截取 因此将会无视中文\r\n                        let execResult = wordBoundaryTest.exec(newLine);// 找不是 空格和标点符号的\r\n                        if (execResult) {\r\n                            j = execResult.index + startIndex;\r\n                            //此行只够容纳这一个单词 强制换行\r\n                            if (execResult.index == 0)\r\n                                j += newLine.length;\r\n                            //此行有多个单词 按单词分行\r\n                            else {\r\n                                wordWidth = null;\r\n                                newLine = text.substring(startIndex, j);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    //如果自动换行，则另起一行\r\n                    addCmd(newLine, style, wordWidth);\r\n                    endLine();\r\n                    startLine();\r\n                    remainWidth = rectWidth;\r\n                    //如果非自动换行，则只截取字符串\r\n\r\n                    startIndex = j;\r\n                    if (j + maybeIndex < len) {\r\n                        if (maybeIndex != 0)\r\n                            j += maybeIndex - 1;\r\n                        wordWidth = getTextWidth(text.substring(startIndex, j + 1));\r\n                    } else {\r\n                        //此处执行将不会在循环结束后再push一次\r\n                        addCmd(text.substring(startIndex, len), style);\r\n                        startIndex = -1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (startIndex != -1)\r\n                addCmd(text.substring(startIndex, len), style);\r\n        };\r\n\r\n        let calcTextSize = () => {\r\n            let nw: number = 0, nh: number = 0;\r\n            for (let line of this._lines) {\r\n                if (line.width > nw)\r\n                    nw = line.width;\r\n            }\r\n            if (nw > 0)\r\n                nw += padding[1] + padding[3];\r\n            this._textWidth = nw;\r\n\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            if (lastLine)\r\n                nh = lastLine.y + lastLine.height;\r\n            if (nh > 0)\r\n                nh += padding[0] + padding[2];\r\n            this._textHeight = nh;\r\n        };\r\n\r\n        let run = () => {\r\n            lineX = lineY = charWidth = charHeight = 0;\r\n            curLine = null;\r\n            lastCmd = null;\r\n\r\n            recoverLines(this._lines);\r\n            startLine();\r\n\r\n            let elements = this._elements;\r\n            for (let i = 0, n = elements.length; i < n; i++) {\r\n                let ele = elements[i];\r\n                if (ele.type == HtmlElementType.Text) {\r\n                    fontSize = Math.floor(ele.style.fontSize * this._fontSizeScale);\r\n                    if (fontSize == 0)\r\n                        fontSize = 1;\r\n                    buildLines(ele.text, ele.style);\r\n                }\r\n                else if (ele.type == HtmlElementType.LinkEnd) {\r\n                    if (lastCmd)\r\n                        lastCmd.linkEnd = true;\r\n                }\r\n                else {\r\n                    let htmlObj = ele.obj;\r\n                    if (!htmlObj) {\r\n                        let cls = HtmlParser.classMap[ele.type];\r\n                        if (cls) {\r\n                            htmlObj = Pool.createByClass(cls);\r\n                            htmlObj.create(this, ele);\r\n                            ele.obj = htmlObj;\r\n                        }\r\n                    }\r\n\r\n                    if (htmlObj) {\r\n                        if (wordWrap) {\r\n                            let remainWidth = rectWidth - lineX;\r\n                            if (remainWidth < htmlObj.width + 1) {\r\n                                if (lineX > 0) { //如果已经是开始位置了，就算放不下也不换行\r\n                                    endLine();\r\n                                    startLine();\r\n                                }\r\n                            }\r\n                        }\r\n                        addCmd(htmlObj, ele.style);\r\n                    }\r\n                }\r\n            }\r\n\r\n            endLine();\r\n            calcTextSize();\r\n        };\r\n\r\n        run();\r\n\r\n        if (this._overflow == Text.SHRINK) {\r\n            if (this._lines.length > 1 && this._textHeight > rectHeight) {\r\n                //多行的情况，涉及到自动换行，得用二分法查找最合适的比例，会消耗多一点计算资源\r\n                let low = 0;\r\n                let high = this._textStyle.fontSize;\r\n\r\n                //先尝试猜测一个比例\r\n                this._fontSizeScale = Math.sqrt(rectHeight / this._textHeight);\r\n                let cur = Math.floor(this._fontSizeScale * this._textStyle.fontSize);\r\n\r\n                while (true) {\r\n                    run();\r\n\r\n                    if (this._textWidth > rectWidth || this._textHeight > rectHeight)\r\n                        high = cur;\r\n                    else\r\n                        low = cur;\r\n                    if (high - low > 1 || high != low && cur == high) {\r\n                        cur = low + (high - low) / 2;\r\n                        this._fontSizeScale = cur / this._textStyle.fontSize;\r\n                    }\r\n                    else\r\n                        break;\r\n                }\r\n            }\r\n            else if (this._textWidth > rectWidth) {\r\n                this._fontSizeScale = rectWidth / this._textWidth;\r\n\r\n                run();\r\n\r\n                if (this._textWidth > rectWidth) //如果还超出，缩小一点再来一次\r\n                {\r\n                    let size = Math.floor(this._textStyle.fontSize * this._fontSizeScale);\r\n                    size--;\r\n                    this._fontSizeScale = size / this._textStyle.fontSize;\r\n\r\n                    run();\r\n                }\r\n            }\r\n        }\r\n        else if (this._overflow == Text.ELLIPSIS && (this._textWidth > rectWidth || this._textHeight > rectHeight)) {\r\n            //删掉超出的行\r\n            let i = this._lines.findIndex(line => line.y + line.height > rectHeight);\r\n            if (i == 0) i = 1;\r\n            let linesDeleted = false;\r\n            if (i != -1 && this._lines.length > i) {\r\n                recoverLines(this._lines.splice(i, this._lines.length - i));\r\n                linesDeleted = true;\r\n            }\r\n\r\n            //在最后一行加省略号\r\n            let lastLine = this._lines[this._lines.length - 1];\r\n            let cmd = lastLine.cmd;\r\n            let next: ITextCmd;\r\n            let done = false;\r\n            while (cmd) {\r\n                next = cmd.next;\r\n\r\n                if (done) {\r\n                    if (cmd.obj)\r\n                        cmd.obj = null;\r\n                    else if (cmd.wt)\r\n                        cmd.wt.cleanCache();\r\n                    cmdPool.push(cmd);\r\n                }\r\n                else if ((!next && linesDeleted) || cmd.x + cmd.width > rectWidth) {\r\n                    if (cmd.obj) //如果最后是个图片，那就删除图片，换成省略号\r\n                        cmd.obj = null;\r\n                    if (!cmd.wt)\r\n                        cmd.wt = new WordText();\r\n\r\n                    cmd.wt.setText(cmd.wt.text.substring(0, Math.max(0, cmd.wt.text.length - 2)) + ellipsisStr);\r\n                    fontSize = cmd.style.fontSize;\r\n                    cmd.width = cmd.wt.width = getTextWidth(cmd.wt.text);\r\n                    cmd.wt.splitRender = this._singleCharRender;\r\n                    cmd.next = null;\r\n                    done = true;\r\n                }\r\n\r\n                cmd = next;\r\n            }\r\n\r\n            if (done)\r\n                calcTextSize();\r\n        }\r\n\r\n        if (this._onPostLayout)\r\n            this._onPostLayout();\r\n\r\n        //处理水平对齐\r\n        let align = this._textStyle.align == \"center\" ? 1 : (this._textStyle.align == \"right\" ? 2 : 0);\r\n        if (align != 0 && this._isWidthSet) {\r\n            let rectWidth = this._width - padding[3] - padding[1];\r\n            for (let line of this._lines) {\r\n                let offsetX = 0;\r\n                if (align == 1)\r\n                    offsetX = Math.floor((rectWidth - line.width) * 0.5);\r\n                else if (align == 2)\r\n                    offsetX = rectWidth - line.width;\r\n\r\n                if (offsetX > 0)\r\n                    line.x = offsetX;\r\n            }\r\n        }\r\n\r\n        //处理垂直对齐\r\n        if (this._isHeightSet && this._textHeight < this._height) {\r\n            let offsetY = 0;\r\n            if (this._textStyle.valign === \"middle\")\r\n                offsetY = Math.floor((this._height - this._textHeight) * 0.5);\r\n            else if (this._textStyle.valign === \"bottom\")\r\n                offsetY = this._height - this._textHeight;\r\n\r\n            if (offsetY > 0) {\r\n                for (let line of this._lines) {\r\n                    line.y += offsetY;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this._overflow == Text.SCROLL\r\n            && (this._isWidthSet && this._textWidth > this._width || this._isHeightSet && this._textHeight > this._height)) {\r\n            if (!this._scrollPos)\r\n                this._scrollPos = new Point(0, 0);\r\n            else {\r\n                let maxScrollX = this.maxScrollX;\r\n                let maxScrollY = this.maxScrollY;\r\n                if (this._scrollPos.x > maxScrollX)\r\n                    this._scrollPos.x = maxScrollX;\r\n                if (this._scrollPos.y > maxScrollY)\r\n                    this._scrollPos.y = maxScrollY;\r\n            }\r\n        }\r\n        else\r\n            this._scrollPos = null;\r\n\r\n        if (this._objContainer) {\r\n            this._objContainer.size(this._width, this._height);\r\n\r\n            if (this._scrollPos || this._overflow == Text.HIDDEN && this._objContainer.numChildren > 0) {\r\n                if (!this._objContainer.scrollRect)\r\n                    this._objContainer.scrollRect = new Rectangle();\r\n                this._objContainer.scrollRect.setTo(0, 0, this._width, this._height);\r\n            }\r\n            else\r\n                this._objContainer.scrollRect = null;\r\n        }\r\n\r\n        this._updatingLayout = false;\r\n\r\n        this.renderText();\r\n    }\r\n\r\n    /**\r\n    * @private\r\n    * 渲染文字。\r\n    * @param\tbegin 开始渲染的行索引。\r\n    * @param\tvisibleLineCount 渲染的行数。\r\n    */\r\n    protected renderText(): void {\r\n        let graphics = this.graphics;\r\n        graphics.clear(true);\r\n        this.drawBg();\r\n\r\n        let padding = this._padding;\r\n        let paddingLeft = padding[3];\r\n        let paddingTop = padding[0];\r\n        let bfont = this._bitmapFont;\r\n        let scrollPos = this._scrollPos;\r\n        let rectWidth = this._isWidthSet ? this._width : this._textWidth;\r\n        let rectHeight = this._isHeightSet ? this._height : this._textHeight;\r\n        let bottom = rectHeight - padding[2];\r\n        let clipped = this._overflow == Text.HIDDEN || this._overflow == Text.SCROLL;\r\n\r\n        if (clipped) {\r\n            graphics.save();\r\n            graphics.clipRect(0, 0, rectWidth, rectHeight);\r\n            this.repaint();\r\n        }\r\n\r\n        rectWidth -= (padding[3] + padding[1]);\r\n        rectHeight -= (padding[0] + padding[2]);\r\n\r\n        let x = 0, y = 0;\r\n        let lines = this._lines;\r\n        let lineCnt = lines.length;\r\n        let curLink: HtmlLink;\r\n        let linkStartX: number;\r\n        for (let i = 0; i < lineCnt; i++) {\r\n            let line = lines[i];\r\n            x = paddingLeft + line.x;\r\n            y = paddingTop + line.y;\r\n            if (scrollPos) {\r\n                x -= scrollPos.x;\r\n                y -= scrollPos.y;\r\n            }\r\n            let lineClipped = clipped && ((y + line.height) <= paddingTop || y >= bottom);\r\n\r\n            let cmd = line.cmd;\r\n            while (cmd) {\r\n                if (cmd.linkEnd) {\r\n                    if (curLink) {\r\n                        curLink.addRect(linkStartX, y, x + cmd.x + cmd.width - linkStartX, line.height);\r\n                        curLink = null;\r\n                    }\r\n                }\r\n\r\n                if (cmd.obj) {\r\n                    cmd.obj.pos(x + cmd.x, y + cmd.y);\r\n\r\n                    if (cmd.obj.element.type == HtmlElementType.Link) {\r\n                        curLink = <HtmlLink>cmd.obj;\r\n                        curLink.resetArea();\r\n                        linkStartX = x + cmd.x;\r\n                    }\r\n                }\r\n                else if (!lineClipped) {\r\n                    if (bfont) {\r\n                        let tx: number = 0;\r\n                        let str = cmd.wt.text;\r\n                        let color = bfont.tint ? cmd.style.color : \"#FFFFFF\";\r\n                        let scale = Math.floor((bfont.autoScaleSize ? cmd.style.fontSize : bfont.fontSize) * this._fontSizeScale) / bfont.fontSize;\r\n                        for (let i = 0, n = str.length; i < n; i++) {\r\n                            let c = str.charCodeAt(i);\r\n                            let g = bfont.dict[c];\r\n                            if (g) {\r\n                                if (g.texture)\r\n                                    graphics.drawImage(g.texture, x + cmd.x + tx + g.x * scale, y + cmd.y + g.y * scale, g.width * scale, g.height * scale, color);\r\n                                tx += Math.round(g.advance * scale);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        let ctxFont = (<any>cmd.style)._ctxFont;\r\n                        if (cmd.style.stroke)\r\n                            graphics.fillBorderText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null, cmd.style.stroke, cmd.style.strokeColor);\r\n                        else\r\n                            graphics.fillText(cmd.wt, x + cmd.x, y + cmd.y, ctxFont, cmd.style.color, null);\r\n                    }\r\n                }\r\n\r\n                if (!lineClipped && cmd.style.underline) {\r\n                    let thickness = Math.max(1, cmd.style.fontSize * this._fontSizeScale / 16);\r\n                    graphics.drawLine(x + cmd.x, y + line.height - thickness, x + cmd.x + cmd.width, y + line.height - thickness, cmd.style.underlineColor || cmd.style.color, thickness);\r\n                }\r\n\r\n                cmd = cmd.next;\r\n            }\r\n\r\n            if (curLink) {\r\n                curLink.addRect(linkStartX, y, rectWidth - linkStartX + paddingLeft, line.height);\r\n                linkStartX = paddingLeft;\r\n            }\r\n        }\r\n\r\n        if (clipped)\r\n            graphics.restore();\r\n    }\r\n\r\n    protected drawBg() {\r\n        let cmd = this._bgDrawCmd;\r\n        if (this._bgColor || this._borderColor) {\r\n            if (!cmd) {\r\n                cmd = new DrawRectCmd();\r\n                cmd.x = cmd.y = 0;\r\n                cmd.width = cmd.height = 1;\r\n                cmd.percent = true;\r\n                this._bgDrawCmd = cmd;\r\n            }\r\n            cmd.fillColor = this._bgColor;\r\n            cmd.lineColor = this._borderColor;\r\n            cmd.lineWidth = this._borderColor ? 1 : 0;\r\n\r\n            let cmds = this.graphics.cmds;\r\n            let i = cmds.indexOf(cmd);\r\n            if (i != 0) {\r\n                if (i != -1)\r\n                    cmds.splice(i, 1);\r\n                cmds.unshift(cmd);\r\n                this.graphics.cmds = cmds;\r\n            }\r\n        }\r\n        else if (cmd) {\r\n            this.graphics.removeCmd(cmd);\r\n        }\r\n    }\r\n}\r\nexport interface ITextCmd {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    style: TextStyle;\r\n    wt: WordText;\r\n    obj: IHtmlObject;\r\n    linkEnd: boolean;\r\n    next: ITextCmd;\r\n}\r\n\r\nexport interface ITextLine {\r\n    x: number;\r\n    y: number;\r\n    height: number;\r\n    width: number;\r\n    cmd: ITextCmd;\r\n}\r\n\r\nconst cmdPool: Array<ITextCmd> = [];\r\nconst linePool: Array<ITextLine> = [];\r\n\r\nfunction recoverLines(lines: Array<ITextLine>) {\r\n    for (let line of lines) {\r\n        let cmd = line.cmd;\r\n        while (cmd) {\r\n            if (cmd.obj)\r\n                cmd.obj = null;\r\n            else if (cmd.wt)\r\n                cmd.wt.cleanCache();\r\n            cmdPool.push(cmd);\r\n            cmd = cmd.next;\r\n        }\r\n        line.cmd = null;\r\n    }\r\n\r\n    linePool.push(...lines);\r\n    lines.length = 0;\r\n}\r\n\r\nconst emojiTest = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\r\nfunction testEmoji(str: string) {\r\n    if (null == str) return false;\r\n    return emojiTest.test(str);\r\n}\r\nfunction isEnglishChar(unicode:number):boolean {\r\n    return (unicode >= 65 && unicode <= 90) ||  // A-Z\r\n           (unicode >= 97 && unicode <= 122) || // a-z\r\n           unicode === 39; // 单引号\r\n  }\r\n  \r\n\r\nconst wordBoundaryTest = /(?:[^\\s\\!-\\/])+$/;\r\nconst normalizeCR = /\\r\\n/g;\r\nconst escapeCharsPattern = /\\\\(\\w)/g;\r\nconst escapeSequence: any = { \"\\\\n\": \"\\n\", \"\\\\t\": \"\\t\" };\r\nconst ellipsisStr = \"…\";\r\n\r\nfunction getReplaceStr(word: string): string {\r\n    return escapeSequence[word];\r\n}","import { HideFlags, NodeFlags } from \"../Const\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Stage } from \"../display/Stage\";\r\nimport { Point } from \"../maths/Point\";\r\nimport { Rectangle } from \"../maths/Rectangle\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Event, ITouchInfo } from \"./Event\";\r\n\r\nvar _isFirstTouch = true;\r\nconst _tempPoint = new Point();\r\nconst _tempRect = new Rectangle();\r\nconst _rollOverChain: Array<Node> = [];\r\nconst _rollOutChain: Array<Node> = [];\r\nvar _inst: InputManager;\r\n\r\nexport class InputManager {\r\n\r\n    /**是否开启多点触控*/\r\n    static multiTouchEnabled: boolean = true;\r\n    /**是否开启鼠标/触摸事件，默认为true*/\r\n    static mouseEventsEnabled: boolean = true;\r\n    /**是否开启键盘事件，默认为true*/\r\n    static keyEventsEnabled: boolean = true;\r\n    /**如果鼠标按下的位置和弹起的位置距离超过这个阀值，则不视为一次点击*/\r\n    static clickTestThreshold = 10;\r\n\r\n    /** canvas 上的鼠标X坐标。*/\r\n    static mouseX: number = 0;\r\n    /** canvas 上的鼠标Y坐标。*/\r\n    static mouseY: number = 0;\r\n    /** 当前是否正在输入文字 */\r\n    static isTextInputting = false;\r\n    static isiOSWKwebView: boolean = false;\r\n    protected _stage: Stage;\r\n    protected _mouseTouch: TouchInfo;\r\n    protected _touches: TouchInfo[];\r\n    protected _touchPool: TouchInfo[];\r\n    protected _touchTarget: Node;\r\n\r\n    //用于IDE处理\r\n    protected _eventType: number;\r\n    protected _nativeEvent: MouseEvent | WheelEvent | TouchEvent;\r\n\r\n    protected _pressKeys: Set<string | number>;\r\n    protected _keyEvent: Event;\r\n\r\n    private _touchInput: boolean;\r\n\r\n    constructor() {\r\n        this._touches = [];\r\n        this._touchPool = [];\r\n        this._mouseTouch = new TouchInfo(this._touches);\r\n        this._pressKeys = new Set();\r\n        this._keyEvent = new Event();\r\n        this._keyEvent._touches = this._touches;\r\n    }\r\n\r\n    static get inst() {\r\n        return _inst;\r\n    }\r\n\r\n    static getTouchPos(touchId?: number): Readonly<Point> {\r\n        if (touchId == null)\r\n            return _inst._touches[0]?.pos || Point.EMPTY;\r\n        else\r\n            return _inst.getTouch(touchId)?.pos || Point.EMPTY;\r\n    }\r\n\r\n    static get touchTarget(): Node {\r\n        return _inst._touchTarget;\r\n    }\r\n\r\n    static get touches(): ReadonlyArray<Readonly<ITouchInfo>> {\r\n        return _inst._touches;\r\n    }\r\n\r\n    static get touchCount(): number {\r\n        return _inst._touches.length;\r\n    }\r\n\r\n    static cancelClick(touchId?: number): void {\r\n        let touch = touchId == null ? _inst._touches[0] : _inst.getTouch(touchId);\r\n        if (touch)\r\n            touch.clickCancelled = true;\r\n    }\r\n\r\n    /**\r\n     * 返回指定键是否被按下。\r\n     * @param\tkey 键值。参考：https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\r\n     * @return 是否被按下。\r\n     */\r\n    static hasKeyDown(key: string | number): boolean {\r\n        return _inst._pressKeys.has(key);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 初始化。\r\n     */\r\n    static __init__(stage: Stage, canvas: HTMLCanvasElement): void {\r\n        let inst = _inst = new InputManager();\r\n        inst._stage = stage;\r\n\r\n        canvas.oncontextmenu = () => {\r\n            return false;\r\n        };\r\n        canvas.addEventListener(\"mousedown\", ev => {\r\n            if (!Browser.onIE)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseup\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mousemove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"mouseout\", ev => {\r\n            if (!inst._touchInput)\r\n                inst.handleMouse(ev, 3);\r\n        }, { passive: false });\r\n        // canvas.addEventListener(\"mouseover\", ev => {\r\n        // });\r\n\r\n        canvas.addEventListener(\"touchstart\", ev => {\r\n            inst._touchInput = true;\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 0);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchend\", ev => {\r\n            if (!_isFirstTouch && !InputManager.isTextInputting)\r\n                (ev.cancelable) && (ev.preventDefault());\r\n            _isFirstTouch = false;\r\n            inst.handleTouch(ev, 1);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchmove\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 2);\r\n        }, { passive: false });\r\n        canvas.addEventListener(\"touchcancel\", ev => {\r\n            (ev.cancelable) && (ev.preventDefault());\r\n            inst.handleTouch(ev, 3);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"wheel\", ev => {\r\n            inst.handleMouse(ev, 4);\r\n        }, { passive: false });\r\n\r\n        canvas.addEventListener(\"pointerdown\", ev => {\r\n            canvas.setPointerCapture(ev.pointerId);\r\n        });\r\n        canvas.addEventListener(\"pointerup\", ev => {\r\n            canvas.releasePointerCapture(ev.pointerId);\r\n        }, true);\r\n\r\n        let document = <Document>Browser.document;\r\n        document.addEventListener(\"keydown\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keypress\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n        document.addEventListener(\"keyup\", ev => {\r\n            inst.handleKeys(ev);\r\n        }, true);\r\n    }\r\n\r\n    handleMouse(ev: MouseEvent | WheelEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        //console.log(\"handleMouse\", type);\r\n        let touch: TouchInfo = this._mouseTouch;\r\n\r\n        _tempPoint.setTo(ev.pageX || ev.clientX, ev.pageY || ev.clientY);\r\n        if (this._stage._canvasTransform)\r\n            this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n        InputManager.mouseX = _tempPoint.x;\r\n        InputManager.mouseY = _tempPoint.y;\r\n        let x = _tempPoint.x / this._stage.clientScaleX;\r\n        let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n        touch.event.nativeEvent = ev;\r\n        if (type == 3 || !InputManager.mouseEventsEnabled)\r\n            touch.target = this._touchTarget = null;\r\n        else {\r\n            touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n\r\n            let ix = Math.round(x);\r\n            let iy = Math.round(y);\r\n\r\n            if (ix != touch.pos.x || iy != touch.pos.y) {\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                touch.pos.setTo(ix, iy);\r\n                touch.move();\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                    for (let t of touch.downTargets)\r\n                        t.event(Event.MOUSE_DRAG, touch.event);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (touch.lastRollOver != touch.target)\r\n            this.handleRollOver(touch);\r\n\r\n        if (type == 0) {\r\n            if (!touch.began) {\r\n                touch.begin();\r\n                this._touches[0] = touch;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    this.handleFocus();\r\n\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_DOWN, touch.event);\r\n                }\r\n            }\r\n        }\r\n        else if (type == 1) {\r\n            if (touch.began) {\r\n                touch.end();\r\n                this._touches.length = 0;\r\n                touch.event.button = ev.button;\r\n\r\n                if (InputManager.mouseEventsEnabled) {\r\n                    if (ev.button == 0)\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n                    else\r\n                        touch.target?.bubbleEvent(Event.RIGHT_MOUSE_UP, touch.event);\r\n\r\n                    if (touch.moved) {\r\n                        for (let t of touch.downTargets)\r\n                            t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                    }\r\n\r\n                    let clickTarget = touch.clickTest();\r\n                    if (clickTarget) {\r\n                        if (ev.button == 0) {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                            clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                            if (touch.clickCount == 2)\r\n                                clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                        else {\r\n                            touch.event.isDblClick = touch.clickCount == 2;\r\n                            clickTarget.bubbleEvent(Event.RIGHT_CLICK, touch.event);\r\n                            touch.event.isDblClick = false;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                touch.event.button = 0;\r\n            }\r\n        }\r\n        else if (type == 4) {\r\n            if (InputManager.mouseEventsEnabled) {\r\n                touch.event.delta = (<WheelEvent>ev).deltaY * 0.025;\r\n                touch.target?.bubbleEvent(Event.MOUSE_WHEEL, touch.event);\r\n                touch.event.delta = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTouch(ev: TouchEvent, type: number) {\r\n        this._eventType = type;\r\n        this._nativeEvent = ev;\r\n\r\n        let touches = ev.changedTouches;\r\n        for (let i = 0; i < touches.length; ++i) {\r\n            let uTouch: Touch = touches[i];\r\n\r\n            if (!InputManager.multiTouchEnabled\r\n                && this._touches.length > 0\r\n                && this._touches[0].touchId != uTouch.identifier)\r\n                continue;\r\n\r\n            _tempPoint.setTo(uTouch.pageX, uTouch.pageY);\r\n            if (this._stage._canvasTransform)\r\n                this._stage._canvasTransform.invertTransformPoint(_tempPoint);\r\n            InputManager.mouseX = _tempPoint.x;\r\n            InputManager.mouseY = _tempPoint.y;\r\n            let x = _tempPoint.x / this._stage.clientScaleX;\r\n            let y = _tempPoint.y / this._stage.clientScaleY;\r\n\r\n            let touch = this.getTouch(uTouch.identifier, type == 0);\r\n            if (!touch)\r\n                continue;\r\n\r\n            touch.event.nativeEvent = ev;\r\n            touch.event.touchId = touch.touchId;\r\n            if (type == 3 || !InputManager.mouseEventsEnabled)\r\n                touch.target = this._touchTarget = null;\r\n            else {\r\n                touch.target = this._touchTarget = this.getNodeUnderPoint(x, y);\r\n                this._stage._mouseMoveTime = Browser.now();\r\n\r\n                let ix = Math.round(x);\r\n                let iy = Math.round(y);\r\n\r\n                if (Math.abs(ix - touch.pos.x) > 1.5 || Math.abs(iy - touch.pos.y) > 1.5) {\r\n                    touch.pos.setTo(ix, iy);\r\n\r\n                    if (type == 2) {\r\n                        touch.move();\r\n\r\n                        if (InputManager.mouseEventsEnabled) {\r\n\r\n                            touch.target.bubbleEvent(Event.MOUSE_MOVE, touch.event);\r\n\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG, touch.event);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (touch.lastRollOver != touch.target)\r\n                this.handleRollOver(touch);\r\n\r\n            if (type == 0) {\r\n                if (!touch.began) {\r\n                    touch.begin();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        this.handleFocus();\r\n                        touch.target?.bubbleEvent(Event.MOUSE_DOWN, touch.event);\r\n                    }\r\n                }\r\n            }\r\n            else if (type == 1 || type == 3) {\r\n                if (touch.began) {\r\n                    touch.end();\r\n\r\n                    if (InputManager.mouseEventsEnabled) {\r\n                        touch.target?.bubbleEvent(Event.MOUSE_UP, touch.event);\r\n\r\n                        if (touch.moved) {\r\n                            for (let t of touch.downTargets)\r\n                                t.event(Event.MOUSE_DRAG_END, touch.event);\r\n                        }\r\n\r\n                        if (type != 3) {\r\n                            let clickTarget = touch.clickTest();\r\n                            if (clickTarget != null) {\r\n                                touch.event.isDblClick = touch.clickCount == 2;\r\n\r\n                                clickTarget.bubbleEvent(Event.CLICK, touch.event);\r\n\r\n                                if (touch.clickCount == 2)\r\n                                    clickTarget.bubbleEvent(Event.DOUBLE_CLICK, touch.event);\r\n\r\n                                touch.event.isDblClick = false;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    touch.target = null;\r\n                    this.handleRollOver(touch);\r\n\r\n                    touch.reset();\r\n                    this._touches.splice(this._touches.indexOf(touch), 1);\r\n                    this._touchPool.push(touch);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getTouch(touchId: number, shouldCreate?: boolean): TouchInfo {\r\n        let touch = this._touches.find(e => e.touchId == touchId);\r\n        if (touch || !shouldCreate)\r\n            return touch;\r\n\r\n        touch = this._touchPool.length > 0 ? this._touchPool.pop() : new TouchInfo(this._touches);\r\n        touch.touchId = touchId;\r\n        this._touches.push(touch);\r\n\r\n        return touch;\r\n    }\r\n\r\n    private handleFocus() {\r\n        if (InputManager.isTextInputting\r\n            && this._stage.focus && (<any>this._stage.focus)[\"focus\"]\r\n            && !this._stage.focus.contains(this._touchTarget)) {\r\n            // 从UI Input组件中取得Input引用\r\n            // _tf 是TextInput的属性\r\n            let pre_input: any = (<any>this._stage.focus)['_tf'] || this._stage.focus;\r\n            let new_input = (<any>this._touchTarget)['_tf'] || this._touchTarget;\r\n\r\n            // 新的焦点是Input的情况下，不需要blur；\r\n            // 不过如果是Input和TextArea之间的切换，还是需要重新弹出输入法；\r\n            if (new_input.nativeInput && new_input.multiline == pre_input.multiline)\r\n                pre_input['_focusOut']();\r\n            else\r\n                pre_input.focus = false;\r\n        }\r\n    }\r\n\r\n    handleKeys(ev: KeyboardEvent): void {\r\n        let type = ev.type;\r\n        let keyCode = ev.keyCode;\r\n        //判断同时按下的键\r\n        if (type === \"keydown\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.add(keyCode);\r\n            this._pressKeys.add(ev.key);\r\n        }\r\n        else if (type === \"keyup\") {\r\n            if (keyCode != 0)\r\n                this._pressKeys.delete(keyCode);\r\n            this._pressKeys.delete(ev.key);\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = ev;\r\n\r\n        if (InputManager.keyEventsEnabled) {\r\n            let target = (this._stage.focus && (this._stage.focus.event != null) && this._stage.focus.displayedInStage) ? this._stage.focus : this._stage;\r\n            let ct = target;\r\n            while (ct) {\r\n                ct.event(type, this._keyEvent.setTo(type, ct, target));\r\n                ct = ct.parent;\r\n            }\r\n        }\r\n\r\n        this._keyEvent.nativeEvent = null;\r\n    }\r\n\r\n    getNodeUnderPoint(x: number, y: number): Node {\r\n        let target: Node = this.getSpriteUnderPoint(this._stage, x, y);\r\n        if (!target)\r\n            target = this.getSprite3DUnderPoint(x, y);\r\n        return target || this._stage;\r\n    }\r\n\r\n    /**\r\n     * 获取指定坐标下的sprite。x/y值是sp的本地坐标\r\n     * @param sp\r\n     * @param x\r\n     * @param y\r\n     */\r\n    getSpriteUnderPoint(sp: Sprite, x: number, y: number): Sprite {\r\n        //如果有裁剪，则先判断是否在裁剪范围内\r\n        let scrollRect = sp._style.scrollRect;\r\n        if (scrollRect && !sp._getBit(NodeFlags.DISABLE_INNER_CLIPPING)) {\r\n            _tempRect.setTo(scrollRect.x, scrollRect.y, scrollRect.width, scrollRect.height);\r\n            if (!_tempRect.contains(x, y))\r\n                return null;\r\n        }\r\n\r\n        let editing = sp._getBit(NodeFlags.EDITING_NODE);\r\n\r\n        if (!editing && sp.hitTestPrior && !sp.mouseThrough && sp != this._stage && !this.hitTest(sp, x, y))\r\n            return null;\r\n\r\n        for (let i = sp._children.length - 1; i > -1; i--) {\r\n            let child = <Sprite>sp._children[i];\r\n            let childEditing = editing || child._getBit(NodeFlags.EDITING_NODE);\r\n            //只有接受交互事件的，才进行处理\r\n            if (!child._destroyed\r\n                && (childEditing ? ((!child.hasHideFlag(HideFlags.HideInHierarchy) || child.mouseThrough) && !child._getBit(NodeFlags.HIDE_BY_EDITOR)) : child._mouseState > 1)\r\n                && (child._visible || child._getBit(NodeFlags.DISABLE_VISIBILITY))) {\r\n                _tempPoint.setTo(x, y);\r\n                child.fromParentPoint(_tempPoint);\r\n                let ret = this.getSpriteUnderPoint(child, _tempPoint.x, _tempPoint.y);\r\n                if (ret)\r\n                    return ret;\r\n            }\r\n        }\r\n\r\n        if (editing) {\r\n            if (!sp._getBit(NodeFlags.LOCK_BY_EDITOR)\r\n                && !sp.hasHideFlag(HideFlags.HideInHierarchy)\r\n                && this.hitTest(sp, x, y, editing))\r\n                return sp;\r\n        }\r\n        else if (sp != this._stage) {\r\n            if (sp.hitTestPrior && !sp.mouseThrough || this.hitTest(sp, x, y))\r\n                return sp;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSprite3DUnderPoint(x: number, y: number): Node {\r\n        return null;\r\n    }\r\n\r\n    hitTest(sp: Sprite, x: number, y: number, editing?: boolean): boolean {\r\n        let isHit: boolean = false;\r\n        if (sp.scrollRect) {\r\n            x -= sp._style.scrollRect.x;\r\n            y -= sp._style.scrollRect.y;\r\n        }\r\n        let hitArea = sp._style.hitArea;\r\n        let mouseThrough = sp.mouseThrough;\r\n        if (editing) {\r\n            hitArea = null;\r\n            mouseThrough = false;\r\n        }\r\n\r\n        if (hitArea) {\r\n            return hitArea.contains(x, y, sp);\r\n        }\r\n\r\n        if (sp.width > 0 && sp.height > 0 || mouseThrough || hitArea) {\r\n            //判断是否在矩形区域内\r\n            if (!mouseThrough)\r\n                isHit = (hitArea ? hitArea : _tempRect.setTo(0, 0, sp.width, sp.height)).contains(x, y);\r\n            else //如果可穿透，则根据子对象实际大小进行碰撞\r\n                isHit = sp.getGraphicBounds().contains(x, y);\r\n        }\r\n        return isHit;\r\n    }\r\n\r\n    private handleRollOver(touch: TouchInfo) {\r\n        if (!InputManager.mouseEventsEnabled) {\r\n            touch.lastRollOver = touch.target;\r\n            return;\r\n        }\r\n\r\n        _rollOverChain.length = 0;\r\n        _rollOutChain.length = 0;\r\n\r\n        let ele = touch.lastRollOver;\r\n        while (ele) {\r\n            _rollOutChain.push(ele);\r\n            ele = ele.parent;\r\n        }\r\n        touch.lastRollOver = touch.target;\r\n\r\n        ele = touch.target;\r\n        while (ele) {\r\n            let i = _rollOutChain.indexOf(ele);\r\n            if (i != -1) {\r\n                _rollOutChain.splice(i, _rollOutChain.length - i);\r\n                break;\r\n            }\r\n\r\n            _rollOverChain.push(ele);\r\n\r\n            ele = ele.parent;\r\n        }\r\n\r\n        let cnt = _rollOutChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOutChain[i];\r\n                if (!ele._destroyed)\r\n                    ele.event(Event.MOUSE_OUT, touch.event.setTo(Event.MOUSE_OUT, ele, ele));\r\n            }\r\n            _rollOutChain.length = 0;\r\n        }\r\n\r\n        cnt = _rollOverChain.length;\r\n        if (cnt > 0) {\r\n            for (let i = 0; i < cnt; i++) {\r\n                ele = _rollOverChain[i];\r\n                if (ele.activeInHierarchy)\r\n                    ele.event(Event.MOUSE_OVER, touch.event.setTo(Event.MOUSE_OVER, ele, ele));\r\n            }\r\n            _rollOverChain.length = 0;\r\n        };\r\n    }\r\n}\r\n\r\nconst clickTrack: Record<number, { pos: Point, time: number, button: number }> = {};\r\n\r\nclass TouchInfo implements ITouchInfo {\r\n    readonly event: Event;\r\n    readonly pos: Point;\r\n    touchId: number;\r\n    clickCount: number;\r\n    began: boolean;\r\n    target: Node;\r\n    lastRollOver: Node;\r\n    clickCancelled: boolean;\r\n    moved: boolean;\r\n    readonly downTargets: Node[];\r\n\r\n    private downPos: Point;\r\n\r\n    constructor(touches: Array<TouchInfo>) {\r\n        this.downPos = new Point();\r\n        this.downTargets = [];\r\n        this.event = new Event();\r\n        this.event._touches = touches;\r\n        this.pos = this.event.touchPos;\r\n        this.reset();\r\n    }\r\n\r\n    begin() {\r\n        this.began = true;\r\n        this.clickCancelled = false;\r\n        this.moved = false;\r\n        this.downPos.copy(this.pos);\r\n\r\n        this.downTargets.length = 0;\r\n        if (this.target) {\r\n            let ele = this.target;\r\n            while (ele) {\r\n                this.downTargets.push(ele);\r\n                ele = ele.parent;\r\n            }\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.moved = true;\r\n\r\n        if (Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold)\r\n            this.clickCancelled = true;\r\n    }\r\n\r\n    end() {\r\n        this.began = false;\r\n        let now = performance.now();\r\n\r\n        let lastClick = clickTrack[this.touchId];\r\n        if (!lastClick) {\r\n            lastClick = { pos: new Point(), time: 0, button: 0 };\r\n            clickTrack[this.touchId] = lastClick;\r\n        }\r\n\r\n        if (this.downTargets.length == 0\r\n            || this.clickCancelled\r\n            || Math.abs(this.pos.x - this.downPos.x) > InputManager.clickTestThreshold\r\n            || Math.abs(this.pos.y - this.downPos.y) > InputManager.clickTestThreshold) {\r\n            this.clickCancelled = true;\r\n            lastClick.time = 0;\r\n            this.clickCount = 1;\r\n        }\r\n        else {\r\n            if (now - lastClick.time < 350\r\n                && Math.abs(this.pos.x - lastClick.pos.x) < InputManager.clickTestThreshold\r\n                && Math.abs(this.pos.y - lastClick.pos.y) < InputManager.clickTestThreshold\r\n                && lastClick.button == this.event.button) {\r\n                this.clickCount = 2;\r\n            }\r\n            else\r\n                this.clickCount = 1;\r\n            lastClick.time = now;\r\n            lastClick.pos.copy(this.pos);\r\n            lastClick.button = this.event.button;\r\n        }\r\n    }\r\n\r\n    clickTest(): Node {\r\n        if (this.clickCancelled) {\r\n            this.downTargets.length = 0;\r\n            return null;\r\n        }\r\n\r\n        let obj = this.downTargets[0];\r\n        if (obj.activeInHierarchy) {\r\n            this.downTargets.length = 0;\r\n            return obj;\r\n        }\r\n\r\n        obj = this.target;\r\n        while (obj) {\r\n            let i = this.downTargets.indexOf(obj);\r\n            if (i != -1 && obj.activeInHierarchy)\r\n                break;\r\n\r\n            obj = obj.parent;\r\n        }\r\n\r\n        this.downTargets.length = 0;\r\n\r\n        return obj;\r\n    }\r\n\r\n    reset() {\r\n        this.pos.setTo(0, 0);\r\n        this.touchId = 0;\r\n        this.clickCount = 0;\r\n        this.began = false;\r\n        this.moved = false;\r\n        this.target = null;\r\n        this.downTargets.length = 0;\r\n        this.lastRollOver = null;\r\n        this.clickCancelled = false;\r\n    }\r\n}\r\n","/**\r\n * WebGL mode.\r\n */\r\n export enum WebGLMode {\r\n    /** Auto, use WebGL2.0 if support, or will fallback to WebGL1.0. */\r\n    Auto = 0,\r\n    /** WebGL2.0. */\r\n    WebGL2 = 1,\r\n    /** WebGL1.0, */\r\n    WebGL1 = 2\r\n}","export enum WebGLExtension{\r\n    OES_vertex_array_object,\r\n    ANGLE_instanced_arrays,\r\n    OES_texture_half_float,\r\n    OES_texture_half_float_linear,\r\n    OES_texture_float,\r\n    OES_element_index_uint,\r\n    OES_texture_float_linear,//allows linear filtering with floating-point pixel types for textures.\r\n    EXT_color_buffer_half_float,//Render BufferHalf float color\r\n    EXT_shader_texture_lod,\r\n    WEBGL_depth_texture,\r\n    EXT_sRGB,\r\n    EXT_color_buffer_float,\r\n    EXT_texture_filter_anisotropic,\r\n    WEBGL_compressed_texture_s3tc,\r\n    WEBGL_compressed_texture_s3tc_srgb,\r\n    WEBGL_compressed_texture_pvrtc,\r\n    WEBGL_compressed_texture_etc1,\r\n    WEBGL_compressed_texture_etc,\r\n    WEBGL_compressed_texture_astc,\r\n    OES_standard_derivatives,\r\n}","export enum TextureCompareMode {\r\n    None,\r\n    LEQUAL,\r\n    GEQUAL,\r\n    LESS,\r\n    GREATER,\r\n    EQUAL,\r\n    NOTEQUAL,\r\n    ALWAYS,\r\n    NEVER\r\n}","export enum DrawType {\r\n    DrawArray,\r\n    DrawArrayInstance,\r\n    DrawElement,\r\n    DrawElementInstance\r\n}","export enum BlendType{\r\n    /**混合枚举_禁用。*/\r\n\tBLEND_DISABLE = 0,\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tBLEND_ENABLE_ALL = 1,\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tBLEND_ENABLE_SEPERATE = 2\r\n}","export enum CompareFunction {\r\n    /** never pass. */\r\n    Never,\r\n    /** pass if the incoming value is less than the depth/stencil buffer value. */\r\n    Less,\r\n    /** pass if the incoming value equals the depth/stencil buffer value. */\r\n    Equal,\r\n    /** pass if the incoming value is less than or equal to the depth/stencil buffer value. */\r\n    LessEqual,\r\n    /** pass if the incoming value is greater than the depth/stencil buffer value. */\r\n    Greater,\r\n    /** pass if the incoming value is not equal to the depth/stencil buffer value. */\r\n    NotEqual,\r\n    /** pass if the incoming value is greater than or equal to the depth/stencil buffer value. */\r\n    GreaterEqual,\r\n    /** always pass. */\r\n    Always\r\n  }\r\n  ","export enum StencilOperation {\r\n    /** Keeps the current value. */\r\n    Keep,\r\n    /** Sets the stencil buffer value to 0. */\r\n    Zero,\r\n    /** Sets the stencil buffer value to the reference value. */\r\n    Replace,\r\n    /** Increments the current stencil buffer value. Clamps to the maximum representable unsigned value. */\r\n    IncrementSaturate,\r\n    /** Decrements the current stencil buffer value. Clamps to 0. */\r\n    DecrementSaturate,\r\n    /** Inverts the current stencil buffer value bitwise. */\r\n    Invert,\r\n    /** Increments the current stencil buffer value. Wraps stencil buffer value to zero when incrementing the maximum representable unsigned value. */\r\n    IncrementWrap,\r\n    /** Decrements the current stencil buffer value. Wraps stencil buffer value to the maximum representable unsigned value when decrementing a stencil buffer value of 0. */\r\n    DecrementWrap\r\n  }\r\n  ","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { DDSTextureInfo } from \"../RenderEngine/DDSTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\nexport enum TextureCubeFace {\r\n    /**+x */\r\n    PositiveX,\r\n    /**-x */\r\n    NegativeX,\r\n    /**+y */\r\n    PositiveY,\r\n    /**-y */\r\n    NegativeY,\r\n    /**+z */\r\n    PositiveZ,\r\n    /**-z */\r\n    NegativeZ\r\n}\r\n\r\nconst DEFAULT_PIXELS: Uint8Array = new Uint8Array(3);\r\n\r\n/**\r\n * <code>TextureCube</code> 类用于生成立方体纹理。\r\n */\r\nexport class TextureCube extends BaseTexture {\r\n\r\n    /**@private*/\r\n    private static _blackTexture: TextureCube;\r\n    /**@private*/\r\n    private static _grayTexture: TextureCube;\r\n    /**@private*/\r\n    private static _whiteTexture: TextureCube;\r\n\r\n    private static _errorTexture: TextureCube;\r\n\r\n    /**\r\n     * 黑色纯色纹理。\r\n     */\r\n    static get blackTexture() {\r\n        return TextureCube._blackTexture;\r\n    }\r\n\r\n    /**\r\n     * 灰色纯色纹理。\r\n     */\r\n    static get grayTexture() {\r\n        return TextureCube._grayTexture;\r\n    }\r\n\r\n    /**\r\n     * 白色纯色纹理。\r\n     */\r\n    static get whiteTexture() {\r\n        return TextureCube._whiteTexture;\r\n    }\r\n\r\n    static get errorTexture() {\r\n        return TextureCube._errorTexture;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static __init__(): void {\r\n        var blackTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8, false);\r\n        var grayTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8, false);\r\n        var writeTexture: TextureCube = new TextureCube(1, TextureFormat.R8G8B8, false);\r\n        var pixels = DEFAULT_PIXELS;\r\n        pixels[0] = 0, pixels[1] = 0, pixels[2] = 0;\r\n        blackTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        blackTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 128, pixels[1] = 128, pixels[2] = 128;\r\n        grayTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        grayTexture.lock = true;//锁住资源防止被资源管理释放\r\n        pixels[0] = 255, pixels[1] = 255, pixels[2] = 255;\r\n        writeTexture.setPixelsData([pixels, pixels, pixels, pixels, pixels, pixels], false, false);\r\n        writeTexture.lock = true;\r\n        TextureCube._grayTexture = grayTexture;\r\n        TextureCube._blackTexture = blackTexture;\r\n        TextureCube._whiteTexture = writeTexture;\r\n        TextureCube._errorTexture = writeTexture;\r\n    }\r\n\r\n    constructor(size: number, format: TextureFormat, mipmap: boolean = true, sRGB: boolean = false, premultiplyAlpha: boolean = false) {\r\n        super(size, size, format);\r\n\r\n        this._dimension = TextureDimension.Cube;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, size, size, format, mipmap, sRGB, premultiplyAlpha);\r\n        return;\r\n    }\r\n\r\n    // todo source数组 改为 CubeInfo 结构体?\r\n    setImageData(source: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let error = false;\r\n        let k = source.findIndex(s => s != null);\r\n        if (k != -1) {\r\n            let img = source[k];\r\n            if (!source.every(s => s != null && s.width == img.width && s.height == img.height)) //必须满足所有元素不为null且大小相等\r\n                error = true;\r\n        }\r\n        else\r\n            error = true;\r\n\r\n        let texture = this._texture;\r\n        if (!error)\r\n            LayaGL.textureContext.setCubeImageData(texture, source, premultiplyAlpha, invertY);\r\n        else {\r\n            let pixels = DEFAULT_PIXELS;\r\n            LayaGL.textureContext.setCubePixelsData(texture, [pixels, pixels, pixels, pixels, pixels, pixels], premultiplyAlpha, invertY);\r\n        }\r\n    }\r\n\r\n    setPixelsData(source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    updateSubPixelsData(source: ArrayBufferView[], xOffset: number, yOffset: number, width: number, height: number, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setDDSData(ddsInfo: DDSTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeDDSData(texture, ddsInfo);\r\n    }\r\n\r\n    setKTXData(ktxInfo: KTXTextureInfo) {\r\n        let texture = this._texture;\r\n        LayaGL.textureContext.setCubeKTXData(texture, ktxInfo);\r\n    }\r\n\r\n    get defaultTexture(): BaseTexture {\r\n        return TextureCube.grayTexture;\r\n    }\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderStateType } from \"./RenderEnum/RenderStateType\";\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class RenderStateCommand{\r\n    cmdArray:Map<RenderStateType,any> = new Map();\r\n    constructor(){\r\n\r\n    }\r\n    addCMD(renderstate:RenderStateType,value:number|boolean|Array<number>){\r\n        this.cmdArray.set(renderstate,value);\r\n    }\r\n\r\n    applyCMD(){\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear(){\r\n        this.cmdArray.clear();\r\n    }\r\n}","import { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class GLObject{\r\n    protected _engine:WebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n    /**\r\n     * destroy\r\n     * @override\r\n     * @returns \r\n     */\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","import { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { WrapMode } from \"../../RenderEnum/WrapMode\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class WebGLInternalTex extends GLObject implements InternalTexture {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    readonly resource: WebGLTexture;\r\n    _resourceTarget: number;\r\n\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly isPotSize: boolean;\r\n\r\n    private _mipmap: boolean;\r\n    /**\r\n     * 是否存在 mipmap 数据\r\n     */\r\n    get mipmap(): boolean {\r\n        return this._mipmap;\r\n    }\r\n\r\n    private _mipmapCount: number;\r\n    public get mipmapCount(): number {\r\n        return this._mipmapCount;\r\n    }\r\n\r\n    readonly useSRGBLoad: boolean;\r\n    readonly gammaCorrection: number;\r\n\r\n    // webgl param\r\n    readonly target: number;\r\n    internalFormat: number;\r\n    format: number;\r\n    type: number;\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, this._gpuMemory);\r\n    }\r\n\r\n    constructor(engine: WebGLEngine, target: number, width: number, height: number, dimension: TextureDimension, mipmap: boolean, useSRGBLoader: boolean, gammaCorrection: number) {\r\n        super(engine);\r\n\r\n        this.resource = this._gl.createTexture();\r\n\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const isPot = (value: number): boolean => {\r\n            return (value & (value - 1)) === 0;\r\n        }\r\n\r\n        this.isPotSize = isPot(width) && isPot(height);\r\n\r\n        this._mipmap = mipmap && this.isPotSize;\r\n        this._mipmapCount = this._mipmap ? Math.max(Math.ceil(Math.log2(width)) + 1, Math.ceil(Math.log2(height)) + 1) : 1;\r\n        this._maxMipmapLevel = this._mipmapCount - 1;\r\n        this._baseMipmapLevel = 0;\r\n\r\n        this.useSRGBLoad = useSRGBLoader;\r\n        this.gammaCorrection = gammaCorrection;\r\n\r\n        this.target = target;\r\n\r\n        // default value\r\n        // this._filterMode = FilterMode.Bilinear;\r\n        // this._warpU = WrapMode.Repeat;\r\n        // this._warpV = WrapMode.Repeat;\r\n        // this._warpW = WrapMode.Repeat;\r\n        // this._anisoLevel = 4;\r\n\r\n        this.filterMode = FilterMode.Bilinear;\r\n        this.wrapU = WrapMode.Repeat;\r\n        this.wrapV = WrapMode.Repeat;\r\n        this.wrapW = WrapMode.Repeat;\r\n        this.anisoLevel = 4;\r\n\r\n        this.compareMode = TextureCompareMode.None;\r\n    }\r\n\r\n    private _filterMode: FilterMode;\r\n    public get filterMode(): FilterMode {\r\n        return this._filterMode;\r\n    }\r\n    public set filterMode(value: FilterMode) {\r\n        if (this._filterMode != value && this.resource) {\r\n            let gl = this._gl;\r\n            let mipmap = this.mipmap;\r\n            let min = this.getFilteMinrParam(value, mipmap);\r\n            this._setTexParameteri(gl.TEXTURE_MIN_FILTER, min);\r\n            let mag = this.getFilterMagParam(value);\r\n            this._setTexParameteri(gl.TEXTURE_MAG_FILTER, mag);\r\n\r\n            this._filterMode = value;\r\n        }\r\n    }\r\n\r\n    private _warpU: WrapMode;\r\n    public get wrapU(): WrapMode {\r\n        return this._warpU;\r\n    }\r\n    public set wrapU(value: WrapMode) {\r\n        if (this._warpU != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_S, warpParam);\r\n            this._warpU = value;\r\n        }\r\n    }\r\n\r\n    private _warpV: WrapMode;\r\n\r\n    public get wrapV(): WrapMode {\r\n        return this._warpV;\r\n    }\r\n\r\n    public set wrapV(value: WrapMode) {\r\n        if (this._warpV != value && this.resource) {\r\n            let gl = this._gl;\r\n            let warpParam = this.getWrapParam(value);\r\n            this._setWrapMode(gl.TEXTURE_WRAP_T, warpParam);\r\n            this._warpV = value;\r\n        }\r\n    }\r\n\r\n    private _warpW: WrapMode;\r\n    public get wrapW(): WrapMode {\r\n        return this._warpW;\r\n    }\r\n    public set wrapW(value: WrapMode) {\r\n        if (this._warpW != value && this.resource) {\r\n            if (this._engine.getCapable(RenderCapable.Texture3D)) {\r\n                let gl = <WebGL2RenderingContext>this._gl;\r\n                let warpParam = this.getWrapParam(value);\r\n                this._setWrapMode(gl.TEXTURE_WRAP_R, warpParam);\r\n            }\r\n            this._warpW = value;\r\n        }\r\n    }\r\n\r\n    private _anisoLevel: number;\r\n    public get anisoLevel(): number {\r\n        return this._anisoLevel;\r\n    }\r\n    public set anisoLevel(value: number) {\r\n        let anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n        if (anisoExt) {\r\n            let gl = this._gl;\r\n            //let maxAnisoLevel = gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n            let maxAnisoLevel = this._engine.getParams(RenderParams.Max_AnisoLevel_Count);\r\n\r\n            let level = Math.max(1, Math.min(maxAnisoLevel, value));\r\n            this._setTexParametexf(anisoExt.TEXTURE_MAX_ANISOTROPY_EXT, level);\r\n            this._anisoLevel = level;\r\n        }\r\n        else {\r\n            this._anisoLevel = 1;\r\n        }\r\n    }\r\n\r\n    private _baseMipmapLevel: number = 0;\r\n\r\n    public set baseMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_BASE_LEVEL, value);\r\n        }\r\n        this._baseMipmapLevel = value;\r\n    }\r\n\r\n    public get baseMipmapLevel() {\r\n        return this._baseMipmapLevel;\r\n    }\r\n\r\n    private _maxMipmapLevel: number = 0;\r\n\r\n    public set maxMipmapLevel(value: number) {\r\n        if (this._engine.isWebGL2) {\r\n            this._setTexParameteri((<WebGL2RenderingContext>this._gl).TEXTURE_MAX_LEVEL, value);\r\n        }\r\n        this._maxMipmapLevel = value;\r\n    }\r\n\r\n    public get maxMipmapLevel() {\r\n        return this._maxMipmapLevel;\r\n    }\r\n\r\n\r\n    private _compareMode: TextureCompareMode;\r\n    public get compareMode(): TextureCompareMode {\r\n        return this._compareMode;\r\n    }\r\n    public set compareMode(value: TextureCompareMode) {\r\n        this._compareMode = value;\r\n    }\r\n\r\n    // todo 设置参数函数 放在 context 里面? \r\n    public _setTexParameteri(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameteri(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    public _setTexParametexf(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        let target = this.target\r\n        this._engine._bindTexture(target, this.resource);\r\n        gl.texParameterf(target, pname, param);\r\n        this._engine._bindTexture(target, null);\r\n    }\r\n\r\n    protected getFilteMinrParam(filterMode: FilterMode, mipmap: boolean) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return mipmap ? gl.NEAREST_MIPMAP_NEAREST : gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return mipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR;\r\n            default:\r\n                return mipmap ? gl.LINEAR_MIPMAP_NEAREST : gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getFilterMagParam(filterMode: FilterMode) {\r\n        let gl = this._gl;\r\n        switch (filterMode) {\r\n            case FilterMode.Point:\r\n                return gl.NEAREST;\r\n            case FilterMode.Bilinear:\r\n                return gl.LINEAR;\r\n            case FilterMode.Trilinear:\r\n                return gl.LINEAR;\r\n            default:\r\n                return gl.LINEAR;\r\n        }\r\n    }\r\n\r\n    protected getWrapParam(wrapMode: WrapMode) {\r\n        let gl = this._gl;\r\n        switch (wrapMode) {\r\n            case WrapMode.Repeat:\r\n                return gl.REPEAT;\r\n            case WrapMode.Clamp:\r\n                return gl.CLAMP_TO_EDGE;\r\n            case WrapMode.Mirrored:\r\n                return gl.MIRRORED_REPEAT;\r\n            default:\r\n                return gl.REPEAT;\r\n        }\r\n    }\r\n\r\n    protected _setWrapMode(pname: number, param: number) {\r\n        let gl = this._gl;\r\n        if (!this.isPotSize) {\r\n            param = gl.CLAMP_TO_EDGE;\r\n        }\r\n        this._setTexParameteri(pname, param);\r\n    }\r\n\r\n    dispose(): void {\r\n        let gl = this._gl;\r\n        gl.deleteTexture(this.resource);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, -this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.TextureMemeory, -this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","import { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class WebGLInternalRT extends GLObject implements InternalRenderTarget {\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    _framebuffer: WebGLFramebuffer;\r\n\r\n    _depthbuffer: WebGLRenderbuffer;\r\n\r\n    _msaaFramebuffer: WebGLFramebuffer;\r\n    _msaaRenderbuffer: WebGLRenderbuffer;\r\n\r\n    _isCube: boolean;\r\n    _samples: number;\r\n\r\n    _generateMipmap: boolean;\r\n\r\n    _textures: InternalTexture[];\r\n    _depthTexture: InternalTexture;\r\n\r\n    colorFormat: RenderTargetFormat;\r\n    depthStencilFormat: RenderTargetFormat;\r\n\r\n    /**bytelength */\r\n    _gpuMemory: number = 0;\r\n\r\n    get gpuMemory(): number {\r\n        return this._gpuMemory;\r\n    }\r\n    set gpuMemory(value: number) {\r\n\r\n        this._gpuMemory = value;\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory, this._gpuMemory);\r\n    }\r\n\r\n\r\n    constructor(engine: WebGLEngine, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, isCube: boolean, generateMipmap: boolean, samples: number) {\r\n        super(engine);\r\n\r\n        this.colorFormat = colorFormat;\r\n        this.depthStencilFormat = depthStencilFormat;\r\n        this._isCube = isCube;\r\n        this._generateMipmap = generateMipmap;\r\n        this._samples = samples;\r\n\r\n        this._textures = [];\r\n        this._depthTexture = null;\r\n\r\n        this._framebuffer = this._gl.createFramebuffer();\r\n        if (samples > 1) {\r\n            this._msaaFramebuffer = this._gl.createFramebuffer();\r\n        }\r\n    }\r\n\r\n\r\n    dispose(): void {\r\n        this._textures.forEach(tex => {\r\n            tex && tex.dispose();\r\n        });\r\n        this._textures = null;\r\n        this._depthTexture && this._depthTexture.dispose();\r\n        this._depthTexture = null;\r\n        this._framebuffer && this._gl.deleteFramebuffer(this._framebuffer);\r\n        this._framebuffer = null;\r\n        this._depthbuffer && this._gl.deleteRenderbuffer(this._depthbuffer);\r\n        this._depthbuffer = null;\r\n\r\n        this._msaaFramebuffer && this._gl.deleteFramebuffer(this._msaaFramebuffer);\r\n        this._msaaFramebuffer = null;\r\n        this._msaaRenderbuffer && this._gl.deleteRenderbuffer(this._msaaRenderbuffer);\r\n        this._msaaRenderbuffer = null;\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory,-this._gpuMemory);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.RenderTextureMemory,-this._gpuMemory);\r\n        this._gpuMemory = 0;\r\n    }\r\n}","\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\n\r\nexport class GLTextureContext extends GLObject implements ITextureContext {\r\n    protected _sRGB: any;\r\n    protected _oesTextureHalfFloat: any;\r\n    protected _compressdTextureS3tc_srgb: any;\r\n    protected _compressedTextureEtc1: any;\r\n    protected _compressedTextureS3tc: any;\r\n    protected _compressedTextureETC: any;\r\n    protected _compressedTextureASTC: any;\r\n    protected _webgl_depth_texture: any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        this._sRGB = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_sRGB)\r\n        this._oesTextureHalfFloat = this._engine._supportCapatable.getExtension(WebGLExtension.OES_texture_half_float)\r\n        this._compressdTextureS3tc_srgb = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb)\r\n        this._compressedTextureEtc1 = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1)\r\n        this._compressedTextureS3tc = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc)\r\n        this._compressedTextureETC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_etc)\r\n        this._compressedTextureASTC = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_compressed_texture_astc)\r\n        this._webgl_depth_texture = this._engine._supportCapatable.getExtension(WebGLExtension.WEBGL_depth_texture);\r\n    }\r\n\r\n    _glParam: {\r\n        internalFormat: number,\r\n        format: number,\r\n        type: number,\r\n    } = {\r\n            internalFormat: 0,\r\n            format: 0,\r\n            type: 0,\r\n        };\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    // todo srgb ?\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? this._sRGB.SRGB_EXT : gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._oesTextureHalfFloat.HALF_FLOAT_OES;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_SHORT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH_STENCIL;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = this._webgl_depth_texture.UNSIGNED_INT_24_8_WEBGL;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n            default:\r\n                throw \"render texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\r\n        // todo\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTargetAttachment(format: RenderTargetFormat) {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return gl.DEPTH_STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return gl.DEPTH_ATTACHMENT;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return gl.STENCIL_ATTACHMENT;\r\n            case RenderTargetFormat.R8G8B8:\r\n            case RenderTargetFormat.R8G8B8A8:\r\n            case RenderTargetFormat.R16G16B16:\r\n            case RenderTargetFormat.R16G16B16A16:\r\n            case RenderTargetFormat.R32G32B32:\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return gl.COLOR_ATTACHMENT0;\r\n            default:\r\n                throw \"render format.\"\r\n        }\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let gl = this._gl;\r\n        switch (dimension) {\r\n            case TextureDimension.Tex2D:\r\n                return gl.TEXTURE_2D;\r\n            case TextureDimension.Cube:\r\n                return gl.TEXTURE_CUBE_MAP;\r\n            default:\r\n                throw \"texture dimension wrong in WebGL1.\"\r\n        }\r\n    }\r\n\r\n    public getFormatPixelsParams(format: TextureFormat) {\r\n\r\n        let formatParams: { channels: number, bytesPerPixel: number, dataTypedCons: any, typedSize: number } = {\r\n            channels: 0,\r\n            bytesPerPixel: 0,\r\n            dataTypedCons: Uint8Array,\r\n            typedSize: 1\r\n        }\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8A8:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 4;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R8G8B8:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 3;\r\n                formatParams.dataTypedCons = Uint8Array\r\n                formatParams.typedSize = 1;\r\n                return formatParams;\r\n            case TextureFormat.R5G6B5:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 2;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 6;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R16G16B16A16:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 8;\r\n                formatParams.dataTypedCons = Uint16Array\r\n                formatParams.typedSize = 2;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32:\r\n                formatParams.channels = 3;\r\n                formatParams.bytesPerPixel = 12;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            case TextureFormat.R32G32B32A32:\r\n                formatParams.channels = 4;\r\n                formatParams.bytesPerPixel = 16;\r\n                formatParams.dataTypedCons = Float32Array\r\n                formatParams.typedSize = 4;\r\n                return formatParams;\r\n            default:\r\n                return formatParams;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * caculate texture memory\r\n     * @param tex \r\n     * @returns \r\n     */\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n\r\n        let srgb = this._sRGB ? this._sRGB.SRGB_EXT : gl.RGB;\r\n        let srgb_alpha = this._sRGB ? this._sRGB.SRGB_ALPHA_EXT : gl.RGBA;\r\n\r\n        switch (tex.internalFormat) {\r\n            case srgb:\r\n            case gl.RGB:\r\n                channels = 3;\r\n                break;\r\n            case srgb_alpha:\r\n            case gl.RGBA:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case this._oesTextureHalfFloat.HALF_FLOAT_OES:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n\r\n        return bytelength;\r\n    }\r\n\r\n    getGLRTTexMemory(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number, cube: boolean) {\r\n        let getpixelbyte = (rtFormat: RenderTargetFormat) => {\r\n            let pixelByte = 0;\r\n            switch (rtFormat) {\r\n                case RenderTargetFormat.R8G8B8:\r\n                    pixelByte = 3;\r\n                    break;\r\n                case RenderTargetFormat.R8G8B8A8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16A16:\r\n                    pixelByte = 8;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32:\r\n                    pixelByte = 12;\r\n                    break;\r\n                case RenderTargetFormat.R32G32B32A32:\r\n                    pixelByte = 16;\r\n                    break;\r\n                case RenderTargetFormat.R16G16B16:\r\n                    pixelByte = 6;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_16:\r\n                    pixelByte = 2;\r\n                    break;\r\n                case RenderTargetFormat.STENCIL_8:\r\n                    pixelByte = 1;\r\n                    break;\r\n                case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                    pixelByte = 4;\r\n                    break;\r\n                case RenderTargetFormat.DEPTH_32:\r\n                    pixelByte = 4;\r\n                    break;\r\n            }\r\n            return pixelByte;\r\n        }\r\n        let colorPixelbyte = getpixelbyte(colorFormat);\r\n        let depthPixelbyte = getpixelbyte(depthStencilFormat);\r\n        if (multiSamples > 1)//多重采样\r\n            colorPixelbyte *= 2;\r\n        if (cube)//box\r\n            colorPixelbyte *= 6;\r\n        if (generateMipmap)//mipmap\r\n            colorPixelbyte *= 1.333;\r\n        let colorMemory = colorPixelbyte * width * height;\r\n        let depthMemory = depthPixelbyte * width * height;\r\n        return colorMemory + depthMemory;\r\n    }\r\n\r\n    // protected getRenderTargetDepthFormat(format: RenderTargetDepthFormat): { internalFormat: number, attachment: number } {\r\n    //     let gl = this.gl;\r\n    //     switch (format) {\r\n    //         case RenderTargetDepthFormat.DEPTH_16:\r\n    //             return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_24_8:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTH_32:\r\n    //             return { internalFormat: gl.DEPTH_STENCIL, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.STENCIL_8:\r\n    //             return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n    //         case RenderTargetDepthFormat.DEPTHSTENCIL_NONE:\r\n    //             return null;\r\n    //         default:\r\n    //             throw \"RenderTargetDepthFormat wrong.\"\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 根据 format 判断是否支持 SRGBload\r\n     * @param format \r\n     * @returns \r\n     */\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    supportGenerateMipmap(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n            case RenderTargetFormat.DEPTH_32:\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return false;\r\n            default:\r\n                return true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断 纹理格式 本身是否是 SRGB格式\r\n     * @param format \r\n     * @returns \r\n     */\r\n    isSRGBFormat(format: TextureFormat | RenderTargetFormat) {\r\n        switch (format) {\r\n            case TextureFormat.ETC2SRGB:\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n            case TextureFormat.ASTC4x4SRGB:\r\n            case TextureFormat.ASTC6x6SRGB:\r\n            case TextureFormat.ASTC8x8SRGB:\r\n            case TextureFormat.ASTC10x10SRGB:\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean, premultipliedAlpha: boolean): InternalTexture {\r\n\r\n        // todo  一些format 不支持自动生成mipmap\r\n\r\n        // todo  这个判断, 若纹理本身格式不支持？\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n        if(premultipliedAlpha){//预乘法和SRGB同时开启，会有颜色白边问题\r\n            useSRGBExt = false;\r\n        }\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        //Resource:\r\n        //internalTex.gpuMemory = this.getGLtexMemory(format, width, height, dimension, generateMipmap);\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = source.width;\r\n        let height = source.height;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage2D(target, 0, x, y, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        //texture.\r\n        // gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, null);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        //resource TODO\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n\r\n    initVideoTextureData(texture: WebGLInternalTex) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let gl = texture._gl;\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texImage2D(target, 0, texture.internalFormat, width, height, 0, format, type, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        // gl.texImage2D(target, 0, internalFormat, format, type, source);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, format, type, source);\r\n        // gl.texSubImage2D(target, 0, 0, 0, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        // todo check pixels size\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let memory = 0;\r\n        for (let index = 0; index < mipmapCount; index++) {\r\n\r\n            // todo  size 计算 方式\r\n            let dataLength = (((Math.max(4, mipmapWidth) / 4) * Math.max(4, mipmapHeight)) / 4) * blockBytes;\r\n            let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n            gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n            memory += sourceData.length;\r\n            dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n            mipmapWidth *= 0.5;\r\n            mipmapHeight *= 0.5;\r\n            mipmapWidth = Math.max(1.0, mipmapWidth);\r\n            mipmapHeight = Math.max(1.0, mipmapHeight);\r\n        }\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData: ArrayBufferView = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n            if (compressed) {\r\n                // todo\r\n            }\r\n            else {\r\n                gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        texture.gpuMemory = memory;//TODO 不太准\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let hdrPixelData = hdrInfo.readScanLine();\r\n        this.setTexturePixelsData(texture, hdrPixelData, false, false);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        else {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                // gl.texImage2D(t, 0, internalFormat, format, type, sources[index]);\r\n                gl.texImage2D(t, 0, internalFormat, width, height, 0, format, type, null);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeSubPixelData(texture: WebGLInternalTex, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texSubImage2D(target, mipmapLevel, xOffset, yOffset, width, height, format, type, source[index]);\r\n        }\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: WebGLInternalTex, ddsInfo: DDSTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        let source = ddsInfo.source;\r\n        let dataOffset = ddsInfo.dataOffset;\r\n        let bpp = ddsInfo.bpp;\r\n        let blockBytes = ddsInfo.blockBytes;\r\n        let mipmapCount = ddsInfo.mipmapCount;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        fourSize = true;\r\n        let gl = texture._gl;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        let formatParams = this.getFormatPixelsParams(ddsInfo.format);\r\n        let channelsByte = formatParams.bytesPerPixel / formatParams.channels;\r\n\r\n        let dataTypeConstur = ddsInfo.format == TextureFormat.R32G32B32A32 ? Float32Array : Uint16Array;\r\n        let memory = 0;\r\n        if (!ddsInfo.compressed) {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = mipmapWidth * mipmapHeight * formatParams.channels;\r\n                    let sourceData = new dataTypeConstur(source, dataOffset, dataLength);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += dataLength * channelsByte;\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                let mipmapWidth = width;\r\n                let mipmapHeight = height;\r\n                for (let index = 0; index < mipmapCount; index++) {\r\n                    let dataLength = Math.max(4, mipmapWidth) / 4 * Math.max(4, mipmapHeight) / 4 * blockBytes;\r\n\r\n                    let sourceData = new Uint8Array(source, dataOffset, dataLength);\r\n\r\n                    (texture.mipmap || index == 0) && gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                    dataOffset += bpp ? (mipmapWidth * mipmapHeight * (bpp / 8)) : dataLength;\r\n\r\n                    mipmapWidth *= 0.5;\r\n                    mipmapHeight *= 0.5;\r\n                    mipmapWidth = Math.max(1.0, mipmapWidth);\r\n                    mipmapHeight = Math.max(1.0, mipmapHeight);\r\n                }\r\n            }\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        // let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = ktxInfo.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = texture._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n            // todo  cube 在一起？\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        for (let index = ktxInfo.mipmapCount; index < texture.mipmapCount; index++) {\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let target = cubeFace[face];\r\n                if (compressed) {\r\n                    // todo\r\n                }\r\n                else {\r\n                    gl.texImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, format, type, null);\r\n                }\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return TextureCompareMode.None;\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        if (renderTarget._isCube) {\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        let gl = this._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = renderTarget._gl;\r\n\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            // todo \r\n            // gammaCorrection = 2.2;\r\n        }\r\n\r\n        // let dimension = TextureDimension.Tex2D;\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texImage2D(target, 0, internalFormat, width, height, 0, glFormat, type, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        let useSRGBExt = false;\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = internalTex._gl;\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let target = cubeFace[index];\r\n            gl.texImage2D(target, 0, internalFormat, size, size, 0, glFormat, type, null);\r\n        }\r\n        this._engine._bindTexture(internalTex.target, null);\r\n        //internalTex.gpuMemory = this.getGLtexMemory(internalTex);\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        // color\r\n        let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n        // depth\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        multiSamples = 1;\r\n\r\n        // let texture = this.createRenderTextureInternal(dimension, size, size, colorFormat, generateMipmap, sRGB);\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n        if (depthBufferParam) {\r\n            let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n            renderTarget._depthbuffer = depthbuffer;\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number) {\r\n\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: WebGLInternalRT, texture: WebGLInternalTex) {\r\n        let gl = renderTarget._gl;\r\n\r\n        renderTarget._depthTexture = texture;\r\n\r\n        let depthbuffer = renderTarget._depthbuffer;\r\n        depthbuffer && gl.deleteRenderbuffer(depthbuffer);\r\n        renderTarget._depthbuffer = null;\r\n        let attachment = this.glRenderTargetAttachment(renderTarget.depthStencilFormat);\r\n\r\n        let framebuffer = renderTarget._framebuffer;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n\r\n    readRenderTargetPixelData(renderTarget: WebGLInternalRT, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n\r\n        let gl = renderTarget._gl;\r\n\r\n        this.bindRenderTarget(renderTarget);\r\n\r\n        let frameState = gl.checkFramebufferStatus(gl.FRAMEBUFFER) == gl.FRAMEBUFFER_COMPLETE;\r\n\r\n        if (!frameState) {\r\n            this.unbindRenderTarget(renderTarget);\r\n            return null;\r\n        }\r\n        switch (renderTarget.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.UNSIGNED_BYTE, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGB, gl.FLOAT, out);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                gl.readPixels(xOffset, yOffset, width, height, gl.RGBA, gl.FLOAT, out);\r\n                break;\r\n        }\r\n        this.unbindRenderTarget(renderTarget);\r\n        return out;\r\n    }\r\n\r\n    updateVideoTexture(texture: WebGLInternalTex, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n\r\n        let gl = texture._gl;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        // todo 用 sub 会慢\r\n        //gl.texSubImage2D(target, 0, 0, 0, format, type, video);\r\n        gl.texImage2D(target, 0, internalFormat, format, type, video);\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: WebGLInternalRT, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        if (internalTex.colorFormat == RenderTargetFormat.None)\r\n            return null;\r\n        let gl = internalTex._gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, internalTex._framebuffer);\r\n        var canRead: boolean = (gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE);\r\n        if (!canRead) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n            return null;\r\n        }\r\n        let size = width * height;\r\n        let format, type;\r\n        var pixels;\r\n        switch (internalTex.colorFormat) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_BYTE;\r\n                pixels = new Uint8Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                format = gl.RGB;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                format = gl.RGBA;\r\n                type = gl.UNSIGNED_SHORT_4_4_4_4;\r\n                pixels = new Uint16Array(size * 4);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                format = gl.RGB;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 3);\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                format = gl.RGBA;\r\n                type = gl.FLOAT;\r\n                pixels = new Float32Array(size * 4);\r\n                break;\r\n            default:\r\n                return null;\r\n        }\r\n        gl.readPixels(x, y, width, height, format, type, pixels);\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        return pixels;\r\n    }\r\n\r\n}","import { GLTextureContext } from \"./GLTextureContext\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\nimport { WebGLInternalTex } from \"./WebGLInternalTex\";\r\nimport { WebGLInternalRT } from \"./WebGLInternalRT\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { ITexture3DContext } from \"../../RenderInterface/ITextureContext\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class GL2TextureContext extends GLTextureContext implements ITexture3DContext {\r\n\r\n    declare protected _gl: WebGL2RenderingContext;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    protected getTarget(dimension: TextureDimension): number {\r\n        let target: number = -1;\r\n        switch (dimension) {\r\n            case TextureDimension.Cube:\r\n                target = this._gl.TEXTURE_CUBE_MAP;\r\n                break;\r\n            case TextureDimension.Tex2D:\r\n                target = this._gl.TEXTURE_2D;\r\n                break;\r\n            case TextureDimension.Texture2DArray:\r\n                target = this._gl.TEXTURE_2D_ARRAY;\r\n                break;\r\n            case TextureDimension.Tex3D:\r\n                target = this._gl.TEXTURE_3D;\r\n                break;\r\n            default:\r\n                throw \"Unknow Texture Target\";\r\n        }\r\n        return target;\r\n    }\r\n\r\n    glTextureParam(format: TextureFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.R5G6B5:\r\n                this._glParam.internalFormat = gl.RGB565;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_SHORT_5_6_5;\r\n                break;\r\n            case TextureFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case TextureFormat.DXT1:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n                // this._glParam.format = gl.RGBA;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT3:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.DXT5:\r\n                this._glParam.internalFormat = useSRGB ? this._compressdTextureS3tc_srgb.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT : this._compressedTextureS3tc.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC1RGB:\r\n                this._glParam.internalFormat = this._compressedTextureEtc1.COMPRESSED_RGB_ETC1_WEBGL;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGBA:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2RGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_RGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ETC2;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ETC2SRGB_Alpha8:\r\n                this._glParam.internalFormat = this._compressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC4x4:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC8x8:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC10x10:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC12x12:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_RGBA_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break\r\n            case TextureFormat.ASTC4x4SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC6x6SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC8x8SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC10x10SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case TextureFormat.ASTC12x12SRGB:\r\n                this._glParam.internalFormat = this._compressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR;\r\n                // this._glParam.format = this._glParam.internalFormat;\r\n                // this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            default:\r\n                throw \"Unknown Texture Format.\";\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    glRenderBufferParam(format: RenderTargetFormat, useSRGB: boolean): { internalFormat: number; attachment: number; } {\r\n        let gl = this._gl;\r\n        switch (format) {\r\n            case RenderTargetFormat.DEPTH_16:\r\n                return { internalFormat: gl.DEPTH_COMPONENT16, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                return { internalFormat: gl.DEPTH24_STENCIL8, attachment: gl.DEPTH_STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.DEPTH_32:\r\n                return { internalFormat: gl.DEPTH_COMPONENT32F, attachment: gl.DEPTH_ATTACHMENT };\r\n            case RenderTargetFormat.STENCIL_8:\r\n                return { internalFormat: gl.STENCIL_INDEX8, attachment: gl.STENCIL_ATTACHMENT };\r\n            case RenderTargetFormat.R8G8B8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8 : gl.RGB8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                return { internalFormat: useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16:\r\n                return { internalFormat: gl.RGB16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                return { internalFormat: gl.RGBA16F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32:\r\n                return { internalFormat: gl.RGB32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                return { internalFormat: gl.RGBA32F, attachment: gl.COLOR_ATTACHMENT0 };\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    glRenderTextureParam(format: RenderTargetFormat, useSRGB: boolean) {\r\n        let gl = this._gl;\r\n        this._glParam.internalFormat = null;\r\n        this._glParam.format = null;\r\n        this._glParam.type = null;\r\n\r\n        switch (format) {\r\n            case RenderTargetFormat.R8G8B8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8 : gl.RGB8;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R8G8B8A8:\r\n                this._glParam.internalFormat = useSRGB ? gl.SRGB8_ALPHA8 : gl.RGBA8;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.UNSIGNED_BYTE;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16:\r\n                this._glParam.internalFormat = gl.RGB16F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R16G16B16A16:\r\n                this._glParam.internalFormat = gl.RGBA16F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.HALF_FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32:\r\n                this._glParam.internalFormat = gl.RGB32F;\r\n                this._glParam.format = gl.RGB;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.R32G32B32A32:\r\n                this._glParam.internalFormat = gl.RGBA32F;\r\n                this._glParam.format = gl.RGBA;\r\n                this._glParam.type = gl.FLOAT;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_16:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT16;\r\n                this._glParam.format = gl.DEPTH_COMPONENT;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.DEPTHSTENCIL_24_8:\r\n                this._glParam.internalFormat = gl.DEPTH24_STENCIL8;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT_24_8;\r\n                break;\r\n            case RenderTargetFormat.DEPTH_32:\r\n                this._glParam.internalFormat = gl.DEPTH_COMPONENT32F;\r\n                this._glParam.format = this._glParam.internalFormat;\r\n                this._glParam.type = gl.UNSIGNED_INT;\r\n                break;\r\n            case RenderTargetFormat.STENCIL_8:\r\n                break;\r\n            default:\r\n                throw \"depth texture format wrong.\"\r\n        }\r\n\r\n        return this._glParam;\r\n    }\r\n\r\n    getGLtexMemory(tex: WebGLInternalTex, depth: number = 1): number {\r\n        let gl = this._gl;\r\n        let channels = 0;\r\n        let singlebyte = 0;\r\n        let bytelength = 0;\r\n        switch (tex.internalFormat) {\r\n            case gl.SRGB8:\r\n            case gl.RGB8:\r\n            case gl.RGB565:\r\n            case gl.RGB32F:\r\n            case gl.RGB16F:\r\n                channels = 3;\r\n                break;\r\n            case gl.SRGB8_ALPHA8:\r\n            case gl.RGBA8:\r\n            case gl.RGBA32F:\r\n            case gl.RGBA16F:\r\n                channels = 4;\r\n                break;\r\n            default:\r\n                channels = 0;\r\n                break;\r\n        }\r\n        switch (tex.type) {\r\n            case gl.UNSIGNED_BYTE:\r\n                singlebyte = 1;\r\n                break;\r\n            case gl.UNSIGNED_SHORT_5_6_5:\r\n                singlebyte = 2 / 3;\r\n                break;\r\n            case gl.FLOAT:\r\n                singlebyte = 4;\r\n                break;\r\n            case gl.HALF_FLOAT:\r\n                singlebyte = 2;\r\n                break;\r\n            default:\r\n                singlebyte = 0;\r\n                break;\r\n        }\r\n        bytelength = channels * singlebyte * tex.width * tex.height;\r\n        if (tex.mipmap) {\r\n            bytelength *= 1.333;\r\n        }\r\n        if (tex.target == gl.TEXTURE_CUBE_MAP)\r\n            bytelength *= 6;\r\n        else if (tex.target == gl.TEXTURE_2D)\r\n            bytelength *= 1;\r\n        else if (tex.target == gl.TEXTURE_2D_ARRAY)\r\n            bytelength *= depth;\r\n        return bytelength;\r\n    }\r\n\r\n    // todo webgl2 srgb 判断\r\n    supportSRGB(format: TextureFormat | RenderTargetFormat, mipmap: boolean): boolean {\r\n        switch (format) {\r\n            case TextureFormat.R8G8B8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB) && !mipmap;\r\n            case TextureFormat.R8G8B8A8:\r\n                return this._engine.getCapable(RenderCapable.Texture_SRGB);\r\n            case TextureFormat.DXT1:\r\n            case TextureFormat.DXT3:\r\n            case TextureFormat.DXT5:\r\n                // todo  验证 srgb format 和 mipmap webgl1 兼容问题\r\n                return this._engine.getCapable(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB) && !mipmap;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    setTextureImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        if (texture.width != source.width || texture.height != source.height) {\r\n            // todo ?\r\n            console.warn(\"setTextureImageData: size not match\");\r\n        }\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTextureSubImageData(texture: WebGLInternalTex, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        //gl.texStorage2D(target, mipmapCount, internalFormat, source.width, source.height);\r\n        gl.texSubImage2D(target, 0, x, y, source.width, source.height, format, type, source);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexturePixelsData(texture: WebGLInternalTex, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (source) {\r\n            gl.texSubImage2D(target, 0, 0, 0, width, height, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTexture3DImageData(texture: WebGLInternalTex, sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        for (let index = 0; index < depth; index++) {\r\n            gl.texSubImage3D(target, 0, 0, 0, index, width, height, 1, format, type, sources[index]);\r\n        }\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setTexture3DPixlesData(texture: WebGLInternalTex, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage3D(target, mipmapCount, internalFormat, width, height, depth);\r\n        texture.gpuMemory = this.getGLtexMemory(texture, depth);\r\n        if (source) {\r\n            gl.texSubImage3D(target, 0, 0, 0, 0, width, height, depth, format, type, source);\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: WebGLInternalTex, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean) {\r\n        generateMipmap = generateMipmap && mipmapLevel == 0;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texSubImage3D(target, mipmapLevel, xOffset, yOffset, zOffset, width, height, depth, format, type, source);\r\n\r\n        if (texture.mipmap && generateMipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureHDRData(texture: WebGLInternalTex, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n\r\n    setTextureKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size \r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        let gl = this._gl;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            if (compressed) {\r\n                let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                gl.compressedTexImage2D(target, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n            else {\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(target, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.length;\r\n            }\r\n\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        }\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = memory;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeImageData(texture: WebGLInternalTex, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ]\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        for (let index = 0; index < cubeFace.length; index++) {\r\n            let t = cubeFace[index];\r\n            // gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n            gl.texSubImage2D(t, 0, 0, 0, format, type, sources[index]);\r\n        }\r\n\r\n        if (texture.mipmap) {\r\n            gl.generateMipmap(texture.target);\r\n        }\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n    }\r\n\r\n    setCubePixelsData(texture: WebGLInternalTex, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        let gl = this._gl;\r\n\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n        ];\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n        let mipmapCount = texture.mipmapCount;\r\n\r\n        let fourSize = width % 4 == 0;\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n        gl.texStorage2D(target, mipmapCount, internalFormat, width, height);\r\n        if (source) {\r\n            for (let index = 0; index < cubeFace.length; index++) {\r\n                let t = cubeFace[index];\r\n                gl.texSubImage2D(t, 0, 0, 0, width, height, format, type, source[index]);\r\n            }\r\n            if (texture.mipmap) {\r\n                gl.generateMipmap(texture.target);\r\n            }\r\n        }\r\n\r\n\r\n        this._engine._bindTexture(texture.target, null);\r\n        texture.gpuMemory = this.getGLtexMemory(texture);\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setCubeKTXData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo): void {\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = ktxInfo.mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n\r\n                if (compressed) {\r\n                    let sourceData = new Uint8Array(source, dataOffset, imageSize);\r\n                    gl.compressedTexImage2D(t, index, internalFormat, mipmapWidth, mipmapHeight, 0, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                else {\r\n                    let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                    let typedSize = imageSize / pixelParams.typedSize;\r\n                    let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                    gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                    memory += sourceData.byteLength;\r\n                }\r\n                dataOffset += imageSize;\r\n                dataOffset += 3 - ((imageSize + 3) % 4);\r\n            }\r\n\r\n            mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n            mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n        }\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n\r\n    }\r\n\r\n\r\n    //TODO miner\r\n    getCubeKTXRGBMData(texture: WebGLInternalTex, ktxInfo: KTXTextureInfo) {\r\n        let rightFaceData = [];\r\n        let leftFaceData = [];\r\n        let upFaceData = [];\r\n        let downFaceData = [];\r\n        let backFaceData = [];\r\n        let frontFaceData = [];\r\n        //todo?\r\n        let premultiplyAlpha = false;\r\n        let invertY = false;\r\n\r\n        let gl = this._gl;\r\n\r\n        // ktx 标准顺序\r\n        const cubeFace = [\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, // right\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, // left\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, // up\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, // down\r\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, // back\r\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, // front\r\n        ]\r\n\r\n\r\n\r\n        let target = texture.target;\r\n        let internalFormat = texture.internalFormat;\r\n        let format = texture.format;\r\n        let type = texture.type;\r\n        let mipmapCount = texture.mipmapCount;\r\n        // todo texture size 与 ddsInfo size\r\n        let width = texture.width;\r\n        let height = texture.height;\r\n\r\n        texture.maxMipmapLevel = mipmapCount - 1;\r\n\r\n        let source = ktxInfo.source;\r\n        let compressed = ktxInfo.compress;\r\n\r\n        let mipmapWidth = width;\r\n        let mipmapHeight = height;\r\n        let dataOffset = ktxInfo.headerOffset + ktxInfo.bytesOfKeyValueData;\r\n\r\n        let fourSize = width % 4 == 0 && height % 4 == 0;\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        this._engine._bindTexture(texture.target, texture.resource);\r\n\r\n        if (!compressed) {\r\n            gl.texStorage2D(target, ktxInfo.mipmapCount, internalFormat, width, height);\r\n        }\r\n        let memory = 0;\r\n        for (let index = 0; index < ktxInfo.mipmapCount; index++) {\r\n\r\n            let imageSize = new Int32Array(source, dataOffset, 1)[0];\r\n\r\n            dataOffset += 4;\r\n\r\n            for (let face = 0; face < 6; face++) {\r\n                let t = cubeFace[face];\r\n                let pixelParams = this.getFormatPixelsParams(ktxInfo.format);\r\n                let typedSize = imageSize / pixelParams.typedSize;\r\n                let sourceData = new pixelParams.dataTypedCons(source, dataOffset, typedSize);\r\n                gl.texSubImage2D(t, index, 0, 0, mipmapWidth, mipmapHeight, format, type, sourceData);\r\n                memory += sourceData.byteLength;\r\n            }\r\n            dataOffset += imageSize;\r\n            dataOffset += 3 - ((imageSize + 3) % 4);\r\n        }\r\n\r\n        mipmapWidth = Math.max(1, mipmapWidth * 0.5);\r\n        mipmapHeight = Math.max(1, mipmapHeight * 0.5);\r\n\r\n        texture.gpuMemory = memory;\r\n        this._engine._bindTexture(texture.target, null);\r\n\r\n        premultiplyAlpha && gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n        invertY && gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n        fourSize || gl.pixelStorei(gl.UNPACK_ALIGNMENT, 4);\r\n    }\r\n\r\n    setTextureCompareMode(texture: WebGLInternalTex, compareMode: TextureCompareMode): TextureCompareMode {\r\n        let gl = this._gl;\r\n        switch (compareMode) {\r\n            case TextureCompareMode.LEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.LESS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LESS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.GREATER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.GREATER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.EQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.EQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NOTEQUAL:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NOTEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.ALWAYS:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.ALWAYS);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.NEVER:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.NEVER);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\r\n                break;\r\n            case TextureCompareMode.None:\r\n            default:\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_FUNC, gl.LEQUAL);\r\n                texture._setTexParameteri(gl.TEXTURE_COMPARE_MODE, gl.NONE);\r\n                break;\r\n        }\r\n        return compareMode;\r\n\r\n    }\r\n\r\n    createRenderbuffer(width: number, height: number, internalFormat: number, samples: number): WebGLRenderbuffer {\r\n        // todo  多个 gl\r\n        let gl = this._gl;\r\n\r\n        let renderbuffer = gl.createRenderbuffer();\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\r\n\r\n        if (samples > 1) {\r\n            gl.renderbufferStorageMultisample(gl.RENDERBUFFER, samples, internalFormat, width, height);\r\n        }\r\n        else {\r\n            gl.renderbufferStorage(gl.RENDERBUFFER, internalFormat, width, height);\r\n        }\r\n\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n\r\n        return renderbuffer;\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, width, height, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, width, height);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        if (format == RenderTargetFormat.DEPTH_16 || format == RenderTargetFormat.DEPTH_32 || format == RenderTargetFormat.DEPTHSTENCIL_24_8) {\r\n            internalTex.filterMode = FilterMode.Point;\r\n        }\r\n\r\n        return internalTex;\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureInternal(TextureDimension.Tex2D, width, height, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, false, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(width, height, colorFormat, depthStencilFormat, generateMipmap, multiSamples, false);\r\n        renderTarget._textures.push(texture);\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, sRGB);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(width, height, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            // color\r\n            let colorAttachment = this.glRenderTargetAttachment(colorFormat);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, colorAttachment, gl.TEXTURE_2D, texture.resource, 0);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(width, height, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n        return renderTarget;\r\n\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): WebGLInternalRT {\r\n        let texture = this.createRenderTextureCubeInternal(TextureDimension.Cube, size, colorFormat, generateMipmap, sRGB);\r\n\r\n        let renderTarget = new WebGLInternalRT(this._engine, colorFormat, depthStencilFormat, true, texture.mipmap, multiSamples);\r\n        renderTarget.gpuMemory = this.getGLRTTexMemory(size, size, colorFormat, depthStencilFormat, generateMipmap, multiSamples, true);\r\n        renderTarget.colorFormat = colorFormat;\r\n        renderTarget.depthStencilFormat = depthStencilFormat;\r\n        renderTarget._textures.push(texture);\r\n\r\n        let gl = <WebGLRenderingContext>renderTarget._gl;\r\n\r\n        if (renderTarget._samples > 1) {\r\n            let msaaFramebuffer = renderTarget._msaaFramebuffer;\r\n            let renderbufferParam = this.glRenderBufferParam(colorFormat, false);\r\n            let msaaRenderbuffer = renderTarget._msaaRenderbuffer = this.createRenderbuffer(size, size, renderbufferParam.internalFormat, renderTarget._samples);\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, msaaFramebuffer);\r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, renderbufferParam.attachment, gl.RENDERBUFFER, msaaRenderbuffer);\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n\r\n            // depth\r\n            let depthBufferParam = this.glRenderBufferParam(depthStencilFormat, false);\r\n            if (depthBufferParam) {\r\n                let depthbuffer = this.createRenderbuffer(size, size, depthBufferParam.internalFormat, renderTarget._samples);\r\n                renderTarget._depthbuffer = depthbuffer;\r\n                gl.framebufferRenderbuffer(gl.FRAMEBUFFER, depthBufferParam.attachment, gl.RENDERBUFFER, depthbuffer);\r\n            }\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        }\r\n\r\n\r\n        return renderTarget;\r\n    }\r\n\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): WebGLInternalTex {\r\n        generateMipmap = generateMipmap && this.supportGenerateMipmap(format);\r\n\r\n        let useSRGBExt = this.isSRGBFormat(format) || (sRGB && this.supportSRGB(format, generateMipmap));\r\n\r\n        let gammaCorrection = 1.0;\r\n        if (!useSRGBExt && sRGB) {\r\n            gammaCorrection = 2.2;\r\n        }\r\n\r\n        let target = this.getTarget(dimension);\r\n        let internalTex = new WebGLInternalTex(this._engine, target, size, size, dimension, generateMipmap, useSRGBExt, gammaCorrection);\r\n\r\n        let glParam = this.glRenderTextureParam(format, useSRGBExt);\r\n\r\n        internalTex.internalFormat = glParam.internalFormat;\r\n        internalTex.format = glParam.format;\r\n        internalTex.type = glParam.type;\r\n\r\n\r\n        let internalFormat = internalTex.internalFormat;\r\n        let glFormat = internalTex.format;\r\n        let type = internalTex.type;\r\n\r\n        let gl = this._gl;\r\n\r\n        this._engine._bindTexture(internalTex.target, internalTex.resource);\r\n\r\n        gl.texStorage2D(target, internalTex.mipmapCount, internalFormat, size, size);\r\n\r\n        this._engine._bindTexture(internalTex.target, null);\r\n\r\n        return internalTex;\r\n\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: WebGLInternalRT, faceIndex: number = 0): void {\r\n        let gl = this._gl;\r\n\r\n        if (renderTarget._isCube) {\r\n            let framebuffer = renderTarget._framebuffer;\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n            let texture = <WebGLInternalTex>renderTarget._textures[0];\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, texture.resource, 0);\r\n        }\r\n\r\n        if (renderTarget._samples > 1) {\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n        }\r\n        else {\r\n            let framebuffer = renderTarget._framebuffer;\r\n\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\r\n        }\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: WebGLInternalRT): void {\r\n        let gl = this._gl;\r\n        if (renderTarget._samples > 1) {\r\n\r\n            gl.bindFramebuffer(gl.READ_FRAMEBUFFER, renderTarget._msaaFramebuffer);\r\n            gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, renderTarget._framebuffer);\r\n\r\n            let texture = renderTarget._textures[0];\r\n\r\n            // todo 不用clear ?\r\n            // gl.clearBufferfv(gl.COLOR, 0, [0, 0, 0, 0]);\r\n            // gl.clearBufferfi(gl.DEPTH_STENCIL, 0, 1.0, 0);\r\n\r\n            // todo  blit mask\r\n            let biltMask = gl.COLOR_BUFFER_BIT;\r\n            if (renderTarget._depthTexture) {\r\n                biltMask |= gl.DEPTH_BUFFER_BIT;\r\n            }\r\n\r\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, biltMask, gl.NEAREST);\r\n        }\r\n        if (renderTarget._generateMipmap) {\r\n            renderTarget._textures.forEach(tex => {\r\n                let target = (<WebGLInternalTex>tex).target;\r\n                this._engine._bindTexture(target, tex.resource);\r\n                gl.generateMipmap(target);\r\n                this._engine._bindTexture(target, null);\r\n            });\r\n        }\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n    }\r\n}","import { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLBuffer extends GLObject implements IRenderBuffer {\r\n    //GLParams\r\n    _glBuffer: WebGLBuffer;\r\n    _glTarget: number;\r\n    _glUsage: number;\r\n    //Common Enum\r\n    _glTargetType: BufferTargetType;\r\n    _glBufferUsageType: BufferUsage;\r\n    //size\r\n    _byteLength: number = 0;\r\n\r\n    constructor(engine: WebGLEngine, targetType: BufferTargetType, bufferUsageType: BufferUsage) {\r\n        super(engine)\r\n        this._glTargetType = targetType;\r\n        this._glBufferUsageType = bufferUsageType;\r\n        this._getGLTarget(this._glTargetType);\r\n        this._getGLUsage(this._glBufferUsageType);\r\n        this._glBuffer = this._gl.createBuffer();\r\n    }\r\n\r\n    private _getGLUsage(usage: BufferUsage) {\r\n        switch (usage) {\r\n            case BufferUsage.Static:\r\n                this._glUsage = this._gl.STATIC_DRAW;\r\n                break;\r\n            case BufferUsage.Dynamic:\r\n                this._glUsage = this._gl.DYNAMIC_DRAW;\r\n                break;\r\n            case BufferUsage.Stream:\r\n                this._glUsage = this._gl.STREAM_DRAW;\r\n                break;\r\n            default:\r\n                console.error(\"usage is not standard\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _getGLTarget(target: BufferTargetType) {\r\n        switch (target) {\r\n            case BufferTargetType.ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ARRAY_BUFFER\r\n                break;\r\n            case BufferTargetType.UNIFORM_BUFFER:\r\n                this._glTarget = (<WebGL2RenderingContext>this._gl).UNIFORM_BUFFER;\r\n                break;\r\n            case BufferTargetType.ELEMENT_ARRAY_BUFFER:\r\n                this._glTarget = this._gl.ELEMENT_ARRAY_BUFFER\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private _memorychange(bytelength: number) {\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.BufferMemory, bytelength);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.GPUMemory, bytelength);\r\n    }\r\n\r\n    bindBuffer(): boolean {\r\n        if (this._engine._getbindBuffer(this._glTargetType) != this) {\r\n            this._gl.bindBuffer(this._glTarget, this._glBuffer);\r\n            this._engine._setbindBuffer(this._glTargetType, this);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    unbindBuffer() {\r\n        if (this._engine._getbindBuffer(this._glTargetType) == this) {\r\n            this._gl.bindBuffer(this._glTarget, null);\r\n            this._engine._setbindBuffer(this._glTargetType, null);\r\n        }\r\n    }\r\n\r\n    orphanStorage() {\r\n        this.bindBuffer();\r\n        this.setDataLength(this._byteLength);\r\n    }\r\n\r\n    setDataLength(srcData: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = srcData;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n        this.unbindBuffer();\r\n        this._memorychange(this._byteLength);\r\n    }\r\n\r\n\r\n\r\n\r\n    setData(srcData: ArrayBuffer | ArrayBufferView, offset: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n        this.unbindBuffer();\r\n    }\r\n    setDataEx(srcData: ArrayBuffer | ArrayBufferView, offset: number, length: number): void {\r\n        let gl = this._gl;\r\n        this.bindBuffer();\r\n        gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n        this.unbindBuffer();\r\n    }\r\n    // setData(srcData: ArrayBuffer | ArrayBufferView | number, offset?: number, length?: number): void {\r\n    //     let gl = this._gl;\r\n    //     this.bindBuffer();\r\n    //     if (typeof srcData == \"number\") {\r\n    //         this._byteLength = srcData as number;\r\n    //         gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    //     }\r\n    //     if (offset != undefined && length == undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, <ArrayBufferView>srcData);\r\n    //     }\r\n    //     if(offset != undefined && length != undefined) {\r\n    //         gl.bufferSubData(this._glTarget, offset, srcData as ArrayBufferView, 0, length);\r\n    //     }\r\n    //     this.unbindBuffer();\r\n    // }\r\n\r\n\r\n    //TODO:\r\n    bindBufferBase(glPointer: number) {\r\n        if (this._engine._getBindUBOBuffer(glPointer) != this) {\r\n            const gl = <WebGL2RenderingContext>this._gl;\r\n            gl.bindBufferBase(this._glTarget, glPointer, this._glBuffer);\r\n            this._engine._setBindUBOBuffer(glPointer, this);\r\n        }\r\n    }\r\n\r\n    //TODO:\r\n    bindBufferRange(glPointer: number, offset: number, byteCount: number) {\r\n        const gl = <WebGL2RenderingContext>this._gl;\r\n        gl.bindBufferRange(this._glTarget, glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    resizeBuffer(dataLength: number) {\r\n        this.bindBuffer();\r\n        const gl = this._gl;\r\n        this._byteLength = dataLength;\r\n        gl.bufferData(this._glTarget, this._byteLength, this._glUsage);\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteBuffer(this._glBuffer);\r\n        this._memorychange(-this._byteLength);\r\n        this._byteLength = 0;\r\n        this._engine = null;\r\n        this._glBuffer = null;\r\n        this._glTarget = null;\r\n        this._glUsage = null;\r\n        this._gl = null;\r\n\r\n    }\r\n}","// @ts-nocheck\r\nexport class VertexArrayObject {\r\n    constructor() {\r\n    }\r\n}\r\n\r\n\r\n(function () {\r\n    \"use strict\";\r\n\r\n    var glErrorShadow = {};\r\n\r\n    function error(msg) {\r\n        if (window.console && window.console.error) {\r\n            window.console.error(msg);\r\n        }\r\n    }\r\n\r\n    function log(msg) {\r\n        if (window.console && window.console.log) {\r\n            window.console.log(msg);\r\n        }\r\n    }\r\n\r\n    function synthesizeGLError(err, opt_msg) {\r\n        glErrorShadow[err] = true;\r\n        if (opt_msg !== undefined) {\r\n            error(opt_msg)\r\n        }\r\n    }\r\n\r\n    function wrapGLError(gl) {\r\n        var f = gl.getError;\r\n        gl.getError = function () {\r\n            var err;\r\n            do {\r\n                err = f.apply(gl);\r\n                if (err != gl.NO_ERROR) {\r\n                    glErrorShadow[err] = true;\r\n                }\r\n            } while (err != gl.NO_ERROR);\r\n\r\n            for (var err1 in glErrorShadow) {\r\n                if (glErrorShadow[err1]) {\r\n                    delete glErrorShadow[err1];\r\n                    return parseInt(err1);\r\n                }\r\n            }\r\n            return gl.NO_ERROR;\r\n        };\r\n    }\r\n\r\n    var WebGLVertexArrayObjectOES = function WebGLVertexArrayObjectOES(ext) {\r\n        var gl = ext.gl;\r\n\r\n        this.ext = ext;\r\n        this.isAlive = true;\r\n        this.hasBeenBound = false;\r\n\r\n        this.elementArrayBuffer = null;\r\n        this.attribs = new Array(ext.maxVertexAttribs);\r\n        for (var n = 0; n < this.attribs.length; n++) {\r\n            var attrib = new (WebGLVertexArrayObjectOES as any).VertexAttrib(gl);\r\n            this.attribs[n] = attrib;\r\n        }\r\n\r\n        this.maxAttrib = 0;\r\n    };\r\n\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib = function VertexAttrib(gl) {\r\n        this.enabled = false;\r\n        this.buffer = null;\r\n        this.size = 4;\r\n        this.type = gl.FLOAT;\r\n        this.normalized = false;\r\n        this.stride = 16;\r\n        this.offset = 0;\r\n\r\n        this.cached = \"\";\r\n        this.recache();\r\n    };\r\n    (WebGLVertexArrayObjectOES as any).VertexAttrib.prototype.recache = function recache() {\r\n        this.cached = [this.size, this.type, this.normalized, this.stride, this.offset].join(\":\");\r\n    };\r\n\r\n    var OESVertexArrayObject = function OESVertexArrayObject(gl) {\r\n        var self = this;\r\n        this.gl = gl;\r\n\r\n        wrapGLError(gl);\r\n\r\n        var original = this.original = {\r\n            getParameter: gl.getParameter,\r\n            enableVertexAttribArray: gl.enableVertexAttribArray,\r\n            disableVertexAttribArray: gl.disableVertexAttribArray,\r\n            bindBuffer: gl.bindBuffer,\r\n            getVertexAttrib: gl.getVertexAttrib,\r\n            vertexAttribPointer: gl.vertexAttribPointer\r\n        };\r\n\r\n        gl.getParameter = function getParameter(pname) {\r\n            if (pname == self.VERTEX_ARRAY_BINDING_OES) {\r\n                if (self.currentVertexArrayObject == self.defaultVertexArrayObject) {\r\n                    return null;\r\n                } else {\r\n                    return self.currentVertexArrayObject;\r\n                }\r\n            }\r\n            return original.getParameter.apply(this, arguments);\r\n        };\r\n\r\n        gl.enableVertexAttribArray = function enableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = true;\r\n            return original.enableVertexAttribArray.apply(this, arguments);\r\n        };\r\n        gl.disableVertexAttribArray = function disableVertexAttribArray(index) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, index);\r\n            var attrib = vao.attribs[index];\r\n            attrib.enabled = false;\r\n            return original.disableVertexAttribArray.apply(this, arguments);\r\n        };\r\n\r\n        gl.bindBuffer = function bindBuffer(target, buffer) {\r\n            switch (target) {\r\n                case gl.ARRAY_BUFFER:\r\n                    self.currentArrayBuffer = buffer;\r\n                    break;\r\n                case gl.ELEMENT_ARRAY_BUFFER:\r\n                    self.currentVertexArrayObject.elementArrayBuffer = buffer;\r\n                    break;\r\n            }\r\n            return original.bindBuffer.apply(this, arguments);\r\n        };\r\n\r\n        gl.getVertexAttrib = function getVertexAttrib(index, pname) {\r\n            var vao = self.currentVertexArrayObject;\r\n            var attrib = vao.attribs[index];\r\n            switch (pname) {\r\n                case gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:\r\n                    return attrib.buffer;\r\n                case gl.VERTEX_ATTRIB_ARRAY_ENABLED:\r\n                    return attrib.enabled;\r\n                case gl.VERTEX_ATTRIB_ARRAY_SIZE:\r\n                    return attrib.size;\r\n                case gl.VERTEX_ATTRIB_ARRAY_STRIDE:\r\n                    return attrib.stride;\r\n                case gl.VERTEX_ATTRIB_ARRAY_TYPE:\r\n                    return attrib.type;\r\n                case gl.VERTEX_ATTRIB_ARRAY_NORMALIZED:\r\n                    return attrib.normalized;\r\n                default:\r\n                    return original.getVertexAttrib.apply(this, arguments);\r\n            }\r\n        };\r\n\r\n        gl.vertexAttribPointer = function vertexAttribPointer(indx, size, type, normalized, stride, offset) {\r\n            var vao = self.currentVertexArrayObject;\r\n            vao.maxAttrib = Math.max(vao.maxAttrib, indx);\r\n            var attrib = vao.attribs[indx];\r\n            attrib.buffer = self.currentArrayBuffer;\r\n            attrib.size = size;\r\n            attrib.type = type;\r\n            attrib.normalized = normalized;\r\n            attrib.stride = stride;\r\n            attrib.offset = offset;\r\n            attrib.recache();\r\n            return original.vertexAttribPointer.apply(this, arguments);\r\n        };\r\n\r\n        if (gl.instrumentExtension) {\r\n            gl.instrumentExtension(this, \"OES_vertex_array_object\");\r\n        }\r\n\r\n        gl.canvas.addEventListener('webglcontextrestored', function () {\r\n            log(\"OESVertexArrayObject emulation library context restored\");\r\n            self.reset_();\r\n        }, true);\r\n\r\n        this.reset_();\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.VERTEX_ARRAY_BINDING_OES = 0x85B5;\r\n\r\n    OESVertexArrayObject.prototype.reset_ = function reset_() {\r\n        var contextWasLost = this.vertexArrayObjects !== undefined;\r\n        if (contextWasLost) {\r\n            for (var ii = 0; ii < this.vertexArrayObjects.length; ++ii) {\r\n                this.vertexArrayObjects.isAlive = false;\r\n            }\r\n        }\r\n        var gl = this.gl;\r\n        this.maxVertexAttribs = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n        this.defaultVertexArrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.currentVertexArrayObject = null;\r\n        this.currentArrayBuffer = null;\r\n        this.vertexArrayObjects = [this.defaultVertexArrayObject];\r\n\r\n        this.bindVertexArrayOES(null);\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.createVertexArrayOES = function createVertexArrayOES() {\r\n        var arrayObject = new WebGLVertexArrayObjectOES(this);\r\n        this.vertexArrayObjects.push(arrayObject);\r\n        return arrayObject;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.deleteVertexArrayOES = function deleteVertexArrayOES(arrayObject) {\r\n        arrayObject.isAlive = false;\r\n        this.vertexArrayObjects.splice(this.vertexArrayObjects.indexOf(arrayObject), 1);\r\n        if (this.currentVertexArrayObject == arrayObject) {\r\n            this.bindVertexArrayOES(null);\r\n        }\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.isVertexArrayOES = function isVertexArrayOES(arrayObject) {\r\n        if (arrayObject && arrayObject instanceof WebGLVertexArrayObjectOES) {\r\n            if ((arrayObject as any).hasBeenBound && (arrayObject as any).ext == this) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    OESVertexArrayObject.prototype.bindVertexArrayOES = function bindVertexArrayOES(arrayObject) {\r\n        var gl = this.gl;\r\n        if (arrayObject && !arrayObject.isAlive) {\r\n            synthesizeGLError(gl.INVALID_OPERATION, \"bindVertexArrayOES: attempt to bind deleted arrayObject\");\r\n            return;\r\n        }\r\n        var original = this.original;\r\n\r\n        var oldVAO = this.currentVertexArrayObject;\r\n        this.currentVertexArrayObject = arrayObject || this.defaultVertexArrayObject;\r\n        this.currentVertexArrayObject.hasBeenBound = true;\r\n        var newVAO = this.currentVertexArrayObject;\r\n\r\n        if (oldVAO == newVAO) {\r\n            return;\r\n        }\r\n\r\n        if (!oldVAO || newVAO.elementArrayBuffer != oldVAO.elementArrayBuffer) {\r\n            original.bindBuffer.call(gl, gl.ELEMENT_ARRAY_BUFFER, newVAO.elementArrayBuffer);\r\n        }\r\n\r\n        var currentBinding = this.currentArrayBuffer;\r\n        var maxAttrib = Math.max(oldVAO ? oldVAO.maxAttrib : 0, newVAO.maxAttrib);\r\n        for (var n = 0; n <= maxAttrib; n++) {\r\n            var attrib = newVAO.attribs[n];\r\n            var oldAttrib = oldVAO ? oldVAO.attribs[n] : null;\r\n\r\n            if (!oldVAO || attrib.enabled != oldAttrib.enabled) {\r\n                if (attrib.enabled) {\r\n                    original.enableVertexAttribArray.call(gl, n);\r\n                } else {\r\n                    original.disableVertexAttribArray.call(gl, n);\r\n                }\r\n            }\r\n\r\n            if (attrib.enabled) {\r\n                var bufferChanged = false;\r\n                if (!oldVAO || attrib.buffer != oldAttrib.buffer) {\r\n                    if (currentBinding != attrib.buffer) {\r\n                        original.bindBuffer.call(gl, gl.ARRAY_BUFFER, attrib.buffer);\r\n                        currentBinding = attrib.buffer;\r\n                    }\r\n                    bufferChanged = true;\r\n                }\r\n\r\n                if (bufferChanged || attrib.cached != oldAttrib.cached) {\r\n                    original.vertexAttribPointer.call(gl, n, attrib.size, attrib.type, attrib.normalized, attrib.stride, attrib.offset);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.currentArrayBuffer != currentBinding) {\r\n            original.bindBuffer.call(gl, gl.ARRAY_BUFFER, this.currentArrayBuffer);\r\n        }\r\n    };\r\n\r\n    (window as any)._setupVertexArrayObject = function (gl) {\r\n        var original_getSupportedExtensions = gl.getSupportedExtensions;\r\n        gl.getSupportedExtensions = function getSupportedExtensions() {\r\n            var list = original_getSupportedExtensions.call(this) || [];\r\n            if (list.indexOf(\"OES_vertex_array_object\") < 0) {\r\n                list.push(\"OES_vertex_array_object\");\r\n            }\r\n            return list;\r\n        };\r\n\r\n        var original_getExtension = gl.getExtension;\r\n\r\n        gl.getExtension = function getExtension(name) {\r\n            var ext = original_getExtension.call(this, name);\r\n            if (ext) {\r\n                return ext;\r\n            }\r\n            if (name !== \"OES_vertex_array_object\") {\r\n                return null;\r\n            }\r\n\r\n            if (!this.__OESVertexArrayObject) {\r\n                console.log(\"Setup OES_vertex_array_object polyfill\");\r\n                this.__OESVertexArrayObject = new OESVertexArrayObject(this);\r\n            }\r\n            return this.__OESVertexArrayObject;\r\n        };\r\n    };\r\n}());\r\n","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { VertexArrayObject } from \"./VertexArrayObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GlCapable {\r\n    /**@internal */\r\n    private _extentionVendorPrefixes: string[] = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n    /**@internal */\r\n    private _gl: any;\r\n    /**@internal */\r\n    private _extensionMap: Map<WebGLExtension, any>;\r\n    /**@internal */\r\n    private _capabilityMap: Map<RenderCapable, boolean>;\r\n\r\n\r\n    constructor(glEngine: WebGLEngine) {\r\n        this._gl = glEngine.gl;\r\n        this.initExtension(glEngine.isWebGL2);\r\n        this.initCapable(glEngine.isWebGL2);\r\n    }\r\n\r\n    private initCapable(isWebgl2: boolean) {\r\n        this._capabilityMap = new Map();\r\n        //Index Uint32\r\n        let value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_element_index_uint));\r\n        this._capabilityMap.set(RenderCapable.Element_Index_Uint32, value);\r\n        //FLoat32Texture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R32G32B32A32, value);\r\n        //halfFloatTexture\r\n        value = isWebgl2 || !!(this.getExtension(WebGLExtension.OES_texture_half_float));\r\n        this._capabilityMap.set(RenderCapable.TextureFormat_R16G16B16A16, value);\r\n        //anistropic\r\n        value = !!(this.getExtension(WebGLExtension.EXT_texture_filter_anisotropic));\r\n        this._capabilityMap.set(RenderCapable.Texture_anisotropic, value);\r\n\r\n        // half float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) || !!this.getExtension(WebGLExtension.EXT_color_buffer_half_float);\r\n        }\r\n        else {\r\n            value = ((!!this.getExtension(WebGLExtension.OES_texture_half_float)) || (!!this.getExtension(WebGLExtension.EXT_color_buffer_half_float))) && (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R16G16B16A16, value);\r\n\r\n        // float renderable\r\n        if (isWebgl2) {\r\n            value = !!this.getExtension(WebGLExtension.EXT_color_buffer_float) && !!this.getExtension(WebGLExtension.OES_texture_float_linear);\r\n        }\r\n        else {\r\n            // OES_texture_float implicitly enables the WEBGL_color_buffer_float extension (if supported)\r\n            value = (!!this.getExtension(WebGLExtension.OES_texture_float)) && (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        }\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_R32G32B32A32, value);\r\n\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.WEBGL_depth_texture));\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_Depth, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.RenderTextureFormat_ShadowMap, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_vertex_array_object));\r\n        this._capabilityMap.set(RenderCapable.Vertex_VAO, value);\r\n        value = (isWebgl2 || (!!this.getExtension(WebGLExtension.ANGLE_instanced_arrays)));\r\n        this._capabilityMap.set(RenderCapable.DrawElement_Instance, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_shader_texture_lod));\r\n        this._capabilityMap.set(RenderCapable.Shader_TextureLod, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_S3TC_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_pvrtc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_PVRTC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc1));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC1, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_etc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ETC, value);\r\n        value = (!!this.getExtension(WebGLExtension.WEBGL_compressed_texture_astc));\r\n        this._capabilityMap.set(RenderCapable.COMPRESS_TEXTURE_ASTC, value);\r\n        value = (isWebgl2) || (!!this.getExtension(WebGLExtension.EXT_sRGB))\r\n        this._capabilityMap.set(RenderCapable.Texture_SRGB, value);\r\n        value = (!!this.getExtension(WebGLExtension.OES_texture_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_FloatLinearFiltering, value);\r\n        value = isWebgl2 || (!!this.getExtension(WebGLExtension.OES_texture_half_float_linear));\r\n        this._capabilityMap.set(RenderCapable.Texture_HalfFloatLinearFiltering, value);\r\n        value = isWebgl2;\r\n        this._capabilityMap.set(RenderCapable.MSAA, value);\r\n        this._capabilityMap.set(RenderCapable.UnifromBufferObject, value);\r\n        this._capabilityMap.set(RenderCapable.GRAPHICS_API_GLES3, value);\r\n        this._capabilityMap.set(RenderCapable.Texture3D, value);\r\n    }\r\n\r\n    private initExtension(isWebgl2: boolean) {\r\n        this._extensionMap = new Map();\r\n        const setExtensionMap = (extension: WebGLExtension, value: any, map: Map<WebGLExtension, any>) => {\r\n            value && map.set(extension, value);\r\n        }\r\n        const _extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        setExtensionMap(WebGLExtension.EXT_texture_filter_anisotropic, _extTextureFilterAnisotropic, this._extensionMap);\r\n        const _compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc, _compressedTextureS3tc, this._extensionMap);\r\n        const _compressdTextureS3tc_srgb = this._getExtension(\"WEBGL_compressed_texture_s3tc_srgb\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_s3tc_srgb, _compressdTextureS3tc_srgb, this._extensionMap);\r\n        const _compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_pvrtc, _compressedTexturePvrtc, this._extensionMap);\r\n        const _compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc1, _compressedTextureEtc1, this._extensionMap);\r\n        const _compressedTextureETC = this._getExtension(\"WEBGL_compressed_texture_etc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_etc, _compressedTextureETC, this._extensionMap);\r\n        const _compressedTextureASTC = this._getExtension(\"WEBGL_compressed_texture_astc\");\r\n        setExtensionMap(WebGLExtension.WEBGL_compressed_texture_astc, _compressedTextureASTC, this._extensionMap);\r\n        const _oesTextureFloatLinear = this._getExtension(\"OES_texture_float_linear\");\r\n        setExtensionMap(WebGLExtension.OES_texture_float_linear, _oesTextureFloatLinear, this._extensionMap);\r\n        const _extColorBufferHalfFloat = this._getExtension(\"EXT_color_buffer_half_float\");\r\n        setExtensionMap(WebGLExtension.EXT_color_buffer_half_float, _extColorBufferHalfFloat, this._extensionMap);\r\n        if (isWebgl2) {\r\n            const _extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\r\n            setExtensionMap(WebGLExtension.EXT_color_buffer_float, _extColorBufferFloat, this._extensionMap);\r\n        } else {\r\n            VertexArrayObject;//强制引用\r\n            if ((window as any)._setupVertexArrayObject) //兼容VAO\r\n                (window as any)._setupVertexArrayObject(this._gl);\r\n            const _vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            setExtensionMap(WebGLExtension.OES_vertex_array_object, _vaoExt, this._extensionMap);\r\n            const _angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            setExtensionMap(WebGLExtension.ANGLE_instanced_arrays, _angleInstancedArrays, this._extensionMap);\r\n            const _oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float, _oesTextureHalfFloat, this._extensionMap);\r\n            const _oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            setExtensionMap(WebGLExtension.OES_texture_half_float_linear, _oesTextureHalfFloatLinear, this._extensionMap);\r\n            const _oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            setExtensionMap(WebGLExtension.OES_texture_float, _oesTextureFloat, this._extensionMap);\r\n\r\n            const _oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            setExtensionMap(WebGLExtension.OES_element_index_uint, _oes_element_index_uint, this._extensionMap);\r\n            const _extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            setExtensionMap(WebGLExtension.EXT_shader_texture_lod, _extShaderTextureLod, this._extensionMap);\r\n            const _webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            setExtensionMap(WebGLExtension.WEBGL_depth_texture, _webgl_depth_texture, this._extensionMap);\r\n            const _sRGB = this._getExtension(\"EXT_sRGB\");\r\n            setExtensionMap(WebGLExtension.EXT_sRGB, _sRGB, this._extensionMap);\r\n\r\n            const OES_standard_derivatives = this._getExtension(\"OES_standard_derivatives\");\r\n            setExtensionMap(WebGLExtension.OES_standard_derivatives, OES_standard_derivatives, this._extensionMap);\r\n        }\r\n    }\r\n\r\n    getCapable(type: RenderCapable): boolean {\r\n        return this._capabilityMap.get(type);\r\n    }\r\n\r\n    getExtension(type: WebGLExtension): any {\r\n        if (this._extensionMap.has(type))\r\n            return this._extensionMap.get(type);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getExtension(name: string) {\r\n        const prefixes: string[] = this._extentionVendorPrefixes;\r\n        for (const k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n}","import { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n/**\r\n * \r\n */\r\nexport class GLParams{\r\n    _engine: WebGLEngine;\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    _glParamsData:Map<RenderParams,number>;\r\n    constructor(engine: WebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initParams();\r\n    }\r\n\r\n    private _initParams(){\r\n        const gl = this._gl;\r\n        this._glParamsData = new Map();\r\n        this._glParamsData.set(RenderParams.Max_Active_Texture_Count,gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS));\r\n        const maxVertexUniform:number = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n        const maxFragUniform:number = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n        this._glParamsData.set(RenderParams.Max_Uniform_Count,Math.min(maxVertexUniform,maxFragUniform));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Size,gl.getParameter(gl.MAX_TEXTURE_SIZE));\r\n        this._glParamsData.set(RenderParams.MAX_Texture_Image_Uint,gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS));\r\n        if(this._engine.getCapable(RenderCapable.Texture_anisotropic)){\r\n            const anisoExt = this._engine._supportCapatable.getExtension(WebGLExtension.EXT_texture_filter_anisotropic);\r\n            this._glParamsData.set(RenderParams.Max_AnisoLevel_Count,gl.getParameter(anisoExt.MAX_TEXTURE_MAX_ANISOTROPY_EXT));\r\n        }\r\n        if(this._engine.isWebGL2)\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,35);\r\n        else\r\n            this._glParamsData.set(RenderParams.SHADER_CAPAILITY_LEVEL,30);\r\n        this._glParamsData.set(RenderParams.FLOAT,gl.FLOAT);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_BYTE,gl.UNSIGNED_BYTE);\r\n        this._glParamsData.set(RenderParams.UNSIGNED_SHORT,gl.UNSIGNED_SHORT);\r\n        this._glParamsData.set(RenderParams.BYTE,gl.BYTE);\r\n\r\n    }\r\n\r\n    getParams(params:RenderParams):number{\r\n        return this._glParamsData.get(params);\r\n    }\r\n}","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLRender2DContext extends GLObject implements IRender2DContext {\r\n    private shaderInstance:GLShaderInstance;\r\n    private cacheShaderProgram:any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        //this.shaderInstance = new GLShaderInstance(engine, null, null, null);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            this._gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n        this._engine._bindTexture(target, texture);\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        if(this.cacheShaderProgram==webglProgram)\r\n            return false;\r\n        this._gl.useProgram(webglProgram);\r\n        this._engine._glUseProgram = null;;\r\n        return true;\r\n    }\r\n\r\n}","import { RenderGeometryElementOBJ } from \"../../../d3/RenderObjs/RenderObj/RenderGeometryElementOBJ\";\r\nimport { DrawType } from \"../../RenderEnum/DrawType\";\r\nimport { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\"\r\n\r\n//TODO\r\nexport class GLRenderDrawContext extends GLObject implements IRenderDrawContext {\r\n    /**@internal */\r\n    private _angleInstancedArrays: any;\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!this._engine.isWebGL2) {\r\n            this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @returns \r\n     */\r\n    getMeshTopology(mode: MeshTopology): number {\r\n        switch (mode) {\r\n            case MeshTopology.Points:\r\n                return this._gl.POINTS;\r\n            case MeshTopology.Lines:\r\n                return this._gl.LINES;\r\n            case MeshTopology.LineLoop:\r\n                return this._gl.LINE_LOOP;\r\n            case MeshTopology.LineStrip:\r\n                return this._gl.LINE_STRIP;\r\n            case MeshTopology.Triangles:\r\n                return this._gl.TRIANGLES;\r\n            case MeshTopology.TriangleStrip:\r\n                return this._gl.TRIANGLE_STRIP;\r\n            case MeshTopology.TriangleFan:\r\n                return this._gl.TRIANGLE_FAN;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param type \r\n     * @returns \r\n     */\r\n    getIndexType(type: IndexFormat): number {\r\n        switch (type) {\r\n            case IndexFormat.UInt8:\r\n                return this._gl.UNSIGNED_BYTE;\r\n            case IndexFormat.UInt16:\r\n                return this._gl.UNSIGNED_SHORT;\r\n            case IndexFormat.UInt32:\r\n                return this._gl.UNSIGNED_INT;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: number, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3 * instanceCount);\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.InstanceDrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2) * instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param first \r\n     * @param count \r\n     */\r\n    drawArrays(mode: number, first: number, count: number): void {\r\n        this._gl.drawArrays(mode, first, count);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, (count - 2));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements(mode: number, count: number, type: IndexFormat, offset: number): void {\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param mode \r\n     * @param count \r\n     * @param type \r\n     * @param offset \r\n     */\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        mode = this.getMeshTopology(mode);\r\n        type = this.getIndexType(type);\r\n        this._gl.drawElements(mode, count, type, offset);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.DrawCall, 1);\r\n        this._engine._addStatisticsInfo(RenderStatisticsInfo.Triangle, count / 3);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param geometryElement \r\n     */\r\n    drawGeometryElement(geometryElement: RenderGeometryElementOBJ): void {\r\n        geometryElement.bufferState.bind();\r\n        let element = geometryElement.drawParams.elements;\r\n        let length = geometryElement.drawParams.length;\r\n        switch (geometryElement.drawType) {\r\n            case DrawType.DrawArray:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArrays(geometryElement._glmode, element[i], element[i + 1]);\r\n                }\r\n                break;\r\n            case DrawType.DrawElement:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElements(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i]);\r\n                }\r\n                break;\r\n            case DrawType.DrawArrayInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawArraysInstanced(geometryElement._glmode, element[i], element[i + 1], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            case DrawType.DrawElementInstance:\r\n                for (let i = 0; i < length; i += 2) {\r\n                    this.drawElementsInstanced(geometryElement._glmode, element[i + 1], geometryElement._glindexFormat, element[i], geometryElement.instanceCount);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}","import { BlendEquationSeparate } from \"../../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../../RenderEnum/CullMode\";\r\nimport { RenderStateType } from \"../../RenderEnum/RenderStateType\";\r\nimport { StencilOperation } from \"../../RenderEnum/StencilOperation\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\nexport class GLRenderState {\r\n    //Depth\r\n    /**@internal */\r\n    private _depthTest: boolean = true;\r\n    /**@internal */\r\n    private _depthMask: boolean = true;\r\n    /**@internal */\r\n    private _depthFunc: number;\r\n    //stencil\r\n    /**@internal */\r\n    private _stencilTest: boolean = false;\r\n    /**@internal */\r\n    private _stencilFunc: number;\r\n    /**@internal */\r\n    private _stencilMask: boolean;\r\n    /**@internal */\r\n    private _stencilRef: number\r\n    /**@internal */\r\n    private _stencilOp_fail: number;\r\n    /**@internal */\r\n    private _stencilOp_zfail: number;\r\n    /**@internal */\r\n    private _stencilOp_zpass: number;\r\n    //blender\r\n    /**@internal */\r\n    private _blend: boolean = false;\r\n    /**@internal */\r\n    private _blendEquation: number;\r\n    /**@internal */\r\n    private _blendEquationRGB: number;\r\n    /**@internal */\r\n    private _blendEquationAlpha: number;\r\n    /**@internal */\r\n    private _sFactor: number;\r\n    /**@internal */\r\n    private _dFactor: number;\r\n    /**@internal */\r\n    private _sFactorRGB: number;\r\n    /**@internal */\r\n    private _dFactorRGB: number;\r\n    /**@internal */\r\n    private _sFactorAlpha: number;\r\n    /**@internal */\r\n    private _dFactorAlpha: number;\r\n    //cull\r\n    /**@internal */\r\n    private _cullFace: boolean = false;\r\n    /**@internal */\r\n    private _frontFace: number;\r\n\r\n    /**@internal */\r\n    _engine: WebGLEngine;\r\n    /**@internal */\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**\r\n     * intance glRenderState\r\n     * @param engine \r\n     */\r\n    constructor(engine: WebGLEngine) {\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._initState();\r\n    }\r\n\r\n    /**\r\n     * init\r\n     */\r\n    private _initState() {\r\n        //TODO:并不完全\r\n        const gl = this._gl;\r\n        this.setDepthFunc(CompareFunction.Less);\r\n        this.setBlendEquationSeparate(BlendEquationSeparate.ADD, BlendEquationSeparate.ADD);\r\n        this._blendEquation =BlendEquationSeparate.ADD;\r\n        this._sFactor = BlendFactor.One;\r\n        this._dFactor = BlendFactor.Zero;\r\n        this._sFactorAlpha = BlendFactor.One;\r\n        this._dFactorAlpha = BlendFactor.One;\r\n    }\r\n\r\n    /**\r\n     * get gl blend factor\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendFactor(factor: BlendFactor) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendFactor.Zero:\r\n                return gl.ZERO;\r\n            case BlendFactor.One:\r\n                return gl.ONE;\r\n            case BlendFactor.SourceColor:\r\n                return gl.SRC_COLOR;\r\n            case BlendFactor.OneMinusSourceColor:\r\n                return gl.ONE_MINUS_SRC_COLOR;\r\n            case BlendFactor.DestinationColor:\r\n                return gl.DST_COLOR;\r\n            case BlendFactor.OneMinusDestinationColor:\r\n                return gl.ONE_MINUS_DST_COLOR;\r\n            case BlendFactor.SourceAlpha:\r\n                return gl.SRC_ALPHA;\r\n            case BlendFactor.OneMinusSourceAlpha:\r\n                return gl.ONE_MINUS_SRC_ALPHA;\r\n            case BlendFactor.DestinationAlpha:\r\n                return gl.DST_ALPHA;\r\n            case BlendFactor.OneMinusDestinationAlpha:\r\n                return gl.ONE_MINUS_DST_ALPHA;\r\n            case BlendFactor.SourceAlphaSaturate:\r\n                return gl.SRC_ALPHA_SATURATE;\r\n            case BlendFactor.BlendColor:\r\n                return gl.CONSTANT_COLOR;\r\n            case BlendFactor.OneMinusBlendColor:\r\n                return gl.ONE_MINUS_CONSTANT_COLOR;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl blend operation\r\n     * @param factor \r\n     * @returns \r\n     */\r\n    _getBlendOperation(factor: BlendEquationSeparate) {\r\n        const gl = this._gl;\r\n        switch (factor) {\r\n            case BlendEquationSeparate.ADD:\r\n                return gl.FUNC_ADD;\r\n            case BlendEquationSeparate.SUBTRACT:\r\n                return gl.FUNC_SUBTRACT;\r\n            case BlendEquationSeparate.REVERSE_SUBTRACT:\r\n                return gl.FUNC_REVERSE_SUBTRACT;\r\n            // case BlendEquationSeparate.MIN:\r\n            //     return -1;\r\n            // case BlendEquationSeparate.MAX:\r\n            //     return -1;\r\n            default:\r\n                throw \"Unknow type\"\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl compare fun factor\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLCompareFunction(compareFunction: CompareFunction): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case CompareFunction.Never:\r\n                return gl.NEVER;\r\n            case CompareFunction.Less:\r\n                return gl.LESS;\r\n            case CompareFunction.Equal:\r\n                return gl.EQUAL;\r\n            case CompareFunction.LessEqual:\r\n                return gl.LEQUAL;\r\n            case CompareFunction.Greater:\r\n                return gl.GREATER;\r\n            case CompareFunction.NotEqual:\r\n                return gl.NOTEQUAL;\r\n            case CompareFunction.GreaterEqual:\r\n                return gl.GEQUAL;\r\n            case CompareFunction.Always:\r\n                return gl.ALWAYS;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl stencil operation\r\n     * @param compareFunction \r\n     * @returns \r\n     */\r\n    _getGLStencilOperation(compareFunction: StencilOperation): number {\r\n        const gl = this._gl;\r\n        switch (compareFunction) {\r\n            case StencilOperation.Keep:\r\n                return gl.KEEP;\r\n            case StencilOperation.Zero:\r\n                return gl.ZERO;\r\n            case StencilOperation.Replace:\r\n                return gl.REPLACE;\r\n            case StencilOperation.IncrementSaturate:\r\n                return gl.INCR;\r\n            case StencilOperation.DecrementSaturate:\r\n                return gl.DECR;\r\n            case StencilOperation.Invert:\r\n                return gl.INVERT;\r\n            case StencilOperation.IncrementWrap:\r\n                return gl.INCR_WRAP;\r\n            case StencilOperation.DecrementWrap:\r\n                return gl.DECR_WRAP;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get gl frontface factor\r\n     * @param cullmode \r\n     * @returns \r\n     */\r\n    _getGLFrontfaceFactor(cullmode: CullMode) {\r\n        if (cullmode == CullMode.Front)\r\n            return this._gl.CCW;\r\n        else\r\n            return this._gl.CW;\r\n    }\r\n\r\n    //Depth\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthTest(value: boolean): void {\r\n        value !== this._depthTest && (this._depthTest = value, value ? this._gl.enable(this._gl.DEPTH_TEST) : this._gl.disable(this._gl.DEPTH_TEST));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setDepthMask(value: boolean): void {\r\n        value !== this._depthMask && (this._depthMask = value, this._gl.depthMask(value));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * value {CompareType}\r\n     */\r\n    setDepthFunc(value: number): void {\r\n        value !== this._depthFunc && (this._depthFunc = value, this._gl.depthFunc(this._getGLCompareFunction(value)));\r\n    }\r\n\r\n\r\n    //stencil\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilTest(value: boolean): void {\r\n        value !== this._stencilTest && (this._stencilTest = value, value ? this._gl.enable(this._gl.STENCIL_TEST) : this._gl.disable(this._gl.STENCIL_TEST));\r\n    }\r\n\r\n    /**\r\n     * 模板写入开关\r\n     * @param value \r\n     */\r\n    setStencilMask(value: boolean): void {\r\n        value !== this._stencilMask && (this._stencilMask = value, value ? this._gl.stencilMask(0xff) : this._gl.stencilMask(0x00));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setStencilFunc(fun: number, ref: number): void {\r\n        if (fun != this._stencilFunc || ref != this._stencilRef) {\r\n            this._stencilFunc = fun;\r\n            this._stencilRef = ref;\r\n            this._gl.stencilFunc(this._getGLCompareFunction(fun), ref, 0xff);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    setstencilOp(fail: number, zfail: number, zpass: number) {\r\n        if (this._stencilOp_fail != fail || this._stencilOp_zfail != zfail || this._stencilOp_zpass != zpass) {\r\n            this._stencilOp_fail = fail;\r\n            this._stencilOp_zfail = zfail;\r\n            this._stencilOp_zpass = zpass;\r\n            this._gl.stencilOp(this._getGLStencilOperation(fail), this._getGLStencilOperation(zfail), this._getGLStencilOperation(zpass));\r\n        }\r\n    }\r\n\r\n    //blend()\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlend(value: boolean): void {\r\n        value !== this._blend && (this._blend = value, value ? this._gl.enable(this._gl.BLEND) : this._gl.disable(this._gl.BLEND));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquation(blendEquation: number): void {\r\n        if (blendEquation !== this._blendEquation) {\r\n            this._blendEquation = blendEquation;\r\n            this._blendEquationRGB = this._blendEquationAlpha = null;\r\n            this._gl.blendEquation(this._getBlendOperation(blendEquation));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendEquationSeparate(blendEquationRGB: number, blendEquationAlpha: number): void {\r\n        if (blendEquationRGB !== this._blendEquationRGB || blendEquationAlpha !== this._blendEquationAlpha) {\r\n            this._blendEquationRGB = blendEquationRGB;\r\n            this._blendEquationAlpha = blendEquationAlpha;\r\n            this._blendEquation = null;\r\n            this._gl.blendEquationSeparate(this._getBlendOperation(blendEquationRGB), this._getBlendOperation(blendEquationAlpha));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFunc(sFactor: number, dFactor: number, force: boolean = false): void {\r\n        // 有个iOS的bug，用原来的写法有时候会出错\r\n        if (force || sFactor !== this._sFactor || dFactor !== this._dFactor) {\r\n            this._sFactor = sFactor;\r\n            this._dFactor = dFactor;\r\n            this._sFactorRGB = null;\r\n            this._dFactorRGB = null;\r\n            this._sFactorAlpha = null;\r\n            this._dFactorAlpha = null;\r\n            this._gl.blendFunc(this._getBlendFactor(sFactor), this._getBlendFactor(dFactor));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setBlendFuncSeperate(srcRGB: number, dstRGB: number, srcAlpha: number, dstAlpha: number): void {\r\n        if (srcRGB !== this._sFactorRGB || dstRGB !== this._dFactorRGB || srcAlpha !== this._sFactorAlpha || dstAlpha !== this._dFactorAlpha) {\r\n            this._sFactorRGB = srcRGB;\r\n            this._dFactorRGB = dstRGB;\r\n            this._sFactorAlpha = srcAlpha;\r\n            this._dFactorAlpha = dstAlpha;\r\n            this._sFactor = null;\r\n            this._dFactor = null;\r\n            this._gl.blendFuncSeparate(this._getBlendFactor(srcRGB), this._getBlendFactor(dstRGB), this._getBlendFactor(srcAlpha), this._getBlendFactor(dstAlpha));\r\n        }\r\n    }\r\n\r\n    //cull\r\n    /**\r\n     * @internal\r\n     */\r\n    setCullFace(value: boolean): void {\r\n        value !== this._cullFace && (this._cullFace = value, value ? this._gl.enable(this._gl.CULL_FACE) : this._gl.disable(this._gl.CULL_FACE));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    setFrontFace(value: number): void {\r\n        value !== this._frontFace && (this._frontFace = value, this._gl.frontFace(this._getGLFrontfaceFactor(value)));\r\n    }\r\n\r\n    /**\r\n     * apply RenderState list\r\n     * @param cmd \r\n     */\r\n    applyRenderStateCommand(cmd: RenderStateCommand) {\r\n        let cmdArray = cmd.cmdArray;\r\n        cmdArray.forEach((value, key) => {\r\n            switch (key) {\r\n                case RenderStateType.DepthTest:\r\n                    this.setDepthTest(value);\r\n                    break;\r\n                case RenderStateType.DepthMask:\r\n                    this.setDepthMask(value);\r\n                    break;\r\n                case RenderStateType.DepthFunc:\r\n                    this.setDepthFunc(value);\r\n                    break;\r\n                case RenderStateType.StencilTest:\r\n                    this.setStencilTest(value);\r\n                    break;\r\n                case RenderStateType.StencilMask:\r\n                    this.setStencilMask(value);\r\n                    break;\r\n                case RenderStateType.StencilFunc:\r\n                    this.setStencilFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.StencilOp:\r\n                    this.setstencilOp(value[0], value[1], value[2]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendType:\r\n                    this.setBlend(value != BlendType.BLEND_DISABLE);\r\n                    break;\r\n                case RenderStateType.BlendEquation:\r\n                    this.setBlendEquation(value);\r\n                    break;\r\n                case RenderStateType.BlendEquationSeparate:\r\n                    this.setBlendEquationSeparate(value[0], value[1]);//TODO\r\n                    break;\r\n                case RenderStateType.BlendFunc:\r\n                    this.setBlendFunc(value[0], value[1]);\r\n                    break;\r\n                case RenderStateType.BlendFuncSeperate:\r\n                    this.setBlendFuncSeperate(value[0], value[1], value[2], value[3]);\r\n                    break;\r\n                case RenderStateType.CullFace:\r\n                    this.setCullFace(value);\r\n                    break;\r\n                case RenderStateType.FrontFace:\r\n                    this.setFrontFace(value);\r\n                    break;\r\n                default:\r\n                    throw \"unknow type of renderStateType\";\r\n                    break;\r\n            }\r\n        })\r\n    }\r\n}","/**\r\n *  <code>shaderVariable</code> 类用于保存shader变量上传相关信息。\r\n */\r\nexport class ShaderVariable {\r\n\t/**@internal */\r\n\tname: string;\r\n\t/**@internal */\r\n\ttype: number;\r\n\t/**@internal */\r\n\tlocation: WebGLUniformLocation;\r\n\t/**@internal */\r\n\tisArray: boolean;\r\n\t/**@internal */\r\n\ttextureID: number;\r\n\t/**@internal */\r\n\tdataOffset: number;\r\n\r\n\t/**@internal */\r\n\tcaller: any;\r\n\t/**@internal */\r\n\tfun: any;\r\n\t/**@internal */\r\n\tuploadedValue: any[];\r\n\r\n\t/**\r\n\t * 创建一个 <code>shaderVariable</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\tthis.textureID = -1;\r\n\t}\r\n\r\n}\r\n\r\n\r\n","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { TextureCube } from \"../../../resource/TextureCube\";\r\nimport { Matrix4x4 } from \"../../../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../../../maths/Vector2\";\r\nimport { Vector3 } from \"../../../maths/Vector3\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { Texture2D } from \"../../../resource/Texture2D\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { UniformBufferObject } from \"../../UniformBufferObject\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLShaderInstance extends GLObject implements IRenderShaderInstance {\r\n\r\n    _engine: WebGLEngine;\r\n\r\n    _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    /**@internal */\r\n    private _vs: string;\r\n    /**@internal */\r\n    private _ps: string;\r\n    /**@internal TextureId*/\r\n    private _curActTexIndex: number;\r\n    /**@internal */\r\n    private _vshader: WebGLShader;\r\n    /**@internal */\r\n    private _pshader: WebGLShader;\r\n    /**@internal */\r\n    private _program: WebGLProgram;\r\n    /**@internal */\r\n    private _attributeMap: { [name: string]: [number, ShaderDataType] };\r\n    /**@internal */\r\n    private _uniformMap: ShaderVariable[];\r\n    /**@internal */\r\n    // todo 没用到\r\n    private _uniformObjectMap: { [key: string]: ShaderVariable };\r\n    /**@internal */\r\n    _complete: boolean = true;\r\n\r\n    constructor(engine: WebGLEngine, vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n        super(engine);\r\n        this._vs = vs;\r\n        this._ps = ps;\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = [];\r\n        this._create();\r\n    }\r\n\r\n    private _create(): void {\r\n        const gl: WebGLRenderingContext = this._gl;\r\n        this._program = gl.createProgram();\r\n        this._vshader = this._createShader(gl, this._vs, gl.VERTEX_SHADER);\r\n        this._pshader = this._createShader(gl, this._ps, gl.FRAGMENT_SHADER);\r\n        gl.attachShader(this._program, this._vshader);\r\n        gl.attachShader(this._program, this._pshader);\r\n        for (var k in this._attributeMap)//根据声明调整location,便于VAO使用\r\n            gl.bindAttribLocation(this._program, this._attributeMap[k][0], k);\r\n        gl.linkProgram(this._program);\r\n        const bo = gl.getProgramParameter(this._program, gl.LINK_STATUS);\r\n        if (!bo) {\r\n            var info = gl.getProgramInfoLog(this._program);\r\n            console.error(new Error('Could not compile WebGL program. \\n\\n' + info));\r\n            this._complete = false;\r\n            return;\r\n        }\r\n        //Uniform\r\n        //Unifrom Objcet\r\n        const nUniformNum: number = gl.getProgramParameter(this._program, gl.ACTIVE_UNIFORMS);\r\n\r\n        this.useProgram();\r\n        this._curActTexIndex = 0;\r\n        let one: ShaderVariable, i: number;\r\n        for (i = 0; i < nUniformNum; i++) {\r\n            var uniformData: WebGLActiveInfo = gl.getActiveUniform(this._program, i);\r\n            var uniName: string = uniformData.name;\r\n            let location: WebGLUniformLocation = gl.getUniformLocation(this._program, uniName);\r\n            if (!location && location != 0)\r\n                continue;\r\n            one = new ShaderVariable();\r\n            one.location = location as number;\r\n            if (uniName.indexOf('[0]') > 0) {\r\n                one.name = uniName = uniName.substr(0, uniName.length - 3);\r\n                one.isArray = true;\r\n            } else {\r\n                one.name = uniName;\r\n                one.isArray = false;\r\n            }\r\n            one.type = uniformData.type;\r\n            this._addShaderUnifiormFun(one);\r\n            this._uniformMap.push(one);\r\n            one.dataOffset = this._engine.propertyNameToID(uniName);\r\n        }\r\n        if (this._engine.isWebGL2) {\r\n            this._uniformObjectMap = {};\r\n            var nUniformBlock: number = gl.getProgramParameter(this._program, (gl as WebGL2RenderingContext).ACTIVE_UNIFORM_BLOCKS);\r\n            for (i = 0; i < nUniformBlock; i++) {\r\n                let gl2 = (gl as WebGL2RenderingContext);\r\n                var uniformBlockName: string = gl2.getActiveUniformBlockName(this._program, i);\r\n                one = new ShaderVariable();\r\n                one.name = uniformBlockName;\r\n                one.isArray = false;\r\n                one.type = (gl as WebGL2RenderingContext).UNIFORM_BUFFER;\r\n                one.dataOffset = this._engine.propertyNameToID(uniformBlockName);\r\n                let location = one.location = gl2.getUniformBlockIndex(this._program, uniformBlockName);\r\n                gl2.uniformBlockBinding(this._program, location, this._engine.getUBOPointer(uniformBlockName));\r\n                this._uniformObjectMap[one.name] = one;\r\n                this._uniformMap.push(one);\r\n                this._addShaderUnifiormFun(one);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _legalUBObyteLength(bytelength: number): number {\r\n        return Math.ceil(bytelength / 16) * 16;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    private _createShader(gl: WebGLRenderingContext, str: string, type: number): any {\r\n        var shader: WebGLShader = gl.createShader(type);\r\n        gl.shaderSource(shader, str);\r\n        gl.compileShader(shader);\r\n        if (this._engine._isShaderDebugMode && !gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            if (!LayaEnv.isPlaying) {\r\n                console.warn(gl.getShaderInfoLog(shader));\r\n            } else {\r\n                console.error(gl.getShaderInfoLog(shader));\r\n            }\r\n        }\r\n        return shader;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _addShaderUnifiormFun(one: ShaderVariable): void {\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        one.caller = this;\r\n        var isArray: boolean = one.isArray;\r\n        switch (one.type) {\r\n            case gl.BOOL:\r\n                one.fun = this._uniform1i;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.INT:\r\n                one.fun = isArray ? this._uniform1iv : this._uniform1i;//TODO:优化\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT:\r\n                one.fun = isArray ? this._uniform1fv : this._uniform1f;\r\n                one.uploadedValue = new Array(1);\r\n                break;\r\n            case gl.FLOAT_VEC2:\r\n                one.fun = isArray ? this._uniform_vec2v : this._uniform_vec2;\r\n                one.uploadedValue = new Array(2);\r\n                break;\r\n            case gl.FLOAT_VEC3:\r\n                one.fun = isArray ? this._uniform_vec3v : this._uniform_vec3;\r\n                one.uploadedValue = new Array(3);\r\n                break;\r\n            case gl.FLOAT_VEC4:\r\n                one.fun = isArray ? this._uniform_vec4v : this._uniform_vec4;\r\n                one.uploadedValue = new Array(4);\r\n                break;\r\n            case gl.FLOAT_MAT2:\r\n                one.fun = this._uniformMatrix2fv;\r\n                break;\r\n            case gl.FLOAT_MAT3:\r\n                one.fun = this._uniformMatrix3fv;\r\n                break;\r\n            case gl.FLOAT_MAT4:\r\n                one.fun = isArray ? this._uniformMatrix4fv : this._uniformMatrix4f;\r\n                break;\r\n            case gl.SAMPLER_2D:\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_SHADOW:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2D;\r\n                break;\r\n            case (<WebGL2RenderingContext>gl).SAMPLER_2D_ARRAY:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler2DArray;\r\n                break;\r\n            case 0x8b5f://sampler3D\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_sampler3D;\r\n                break;\r\n            case gl.SAMPLER_CUBE:\r\n                gl.uniform1i(one.location, this._curActTexIndex);\r\n                one.textureID = this._engine._glTextureIDParams[this._curActTexIndex++];\r\n                one.fun = this._uniform_samplerCube;\r\n                break;\r\n            case (gl as WebGL2RenderingContext).UNIFORM_BUFFER:\r\n                one.fun = this._uniform_UniformBuffer;\r\n                break;\r\n            default:\r\n                throw new Error(\"compile shader err!\");\r\n        }\r\n    }\r\n\r\n\r\n    getUniformMap(): ShaderVariable[] {\r\n        return this._uniformMap;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    bind(): boolean {\r\n        return this.useProgram();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    useProgram(): boolean {\r\n        if (this._engine._glUseProgram === this)\r\n            return false;\r\n        this._gl.useProgram(this._program);\r\n        this._engine._glUseProgram = this;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1f(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1f(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n    * @internal\r\n    */\r\n    _uniform1fv(one: any, value: any): number {\r\n        if (value.length < 4) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform1fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform1fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2(one: any, v: Vector2): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y) {\r\n            this._gl.uniform2f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec2v(one: any, value: Float32Array): number {\r\n        if (value.length < 2) {\r\n            var uploadedValue: any[] = one.uploadedValue;\r\n            if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n                this._gl.uniform2fv(one.location, value);\r\n                uploadedValue[0] = value[0];\r\n                uploadedValue[1] = value[1];\r\n                uploadedValue[2] = value[2];\r\n                uploadedValue[3] = value[3];\r\n                return 1;\r\n            }\r\n            return 0;\r\n        } else {\r\n            this._gl.uniform2fv(one.location, value);\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3(one: any, v: Vector3): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z) {\r\n            this._gl.uniform3f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3v(one: any, v: Float32Array): number {\r\n        this._gl.uniform3fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4(one: any, v: Vector4): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== v.x || uploadedValue[1] !== v.y || uploadedValue[2] !== v.z || uploadedValue[3] !== v.w) {\r\n            this._gl.uniform4f(one.location, uploadedValue[0] = v.x, uploadedValue[1] = v.y, uploadedValue[2] = v.z, uploadedValue[3] = v.w);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4v(one: any, v: Float32Array): number {\r\n        this._gl.uniform4fv(one.location, v);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix2fv(one: any, value: any): number {\r\n        this._gl.uniformMatrix2fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix3fv(one: any, value: any): number {\r\n        this._gl.uniformMatrix3fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4f(one: any, m: Matrix4x4): number {\r\n        var value: Float32Array = m.elements;\r\n        this._gl.uniformMatrix4fv(one.location, false, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniformMatrix4fv(one: any, m: Float32Array): number {\r\n        this._gl.uniformMatrix4fv(one.location, false, m);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value) {\r\n            this._gl.uniform1i(one.location, uploadedValue[0] = value);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform1iv(one: any, value: any): number {\r\n        this._gl.uniform1iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1]) {\r\n            this._gl.uniform2i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_ivec2v(one: any, value: any): number {\r\n        this._gl.uniform2iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2]) {\r\n            this._gl.uniform3i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec3vi(one: any, value: any): number {\r\n        this._gl.uniform3iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4i(one: any, value: any): number {\r\n        var uploadedValue: any[] = one.uploadedValue;\r\n        if (uploadedValue[0] !== value[0] || uploadedValue[1] !== value[1] || uploadedValue[2] !== value[2] || uploadedValue[3] !== value[3]) {\r\n            this._gl.uniform4i(one.location, uploadedValue[0] = value[0], uploadedValue[1] = value[1], uploadedValue[2] = value[2], uploadedValue[3] = value[3]);\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_vec4vi(one: any, value: any): number {\r\n        this._gl.uniform4iv(one.location, value);\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_sampler2D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler2DArray(one: any, texture: BaseTexture): number {\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_2D_ARRAY, value);\r\n        return 0;\r\n    }\r\n\r\n    _uniform_sampler3D(one: any, texture: BaseTexture): number {//TODO:TEXTURTE ARRAY\r\n        var value: any = texture ? texture._getSource() : Texture2D.errorTexture._getSource();\r\n        var gl: WebGL2RenderingContext = this._gl as WebGL2RenderingContext;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_3D, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _uniform_samplerCube(one: any, texture: BaseTexture): number {//TODO:TEXTURTECUBE ARRAY\r\n        var value: any = texture ? texture._getSource() : TextureCube.errorTexture._getSource();\r\n        var gl: WebGLRenderingContext = this._gl;\r\n        this._bindTexture(one.textureID, gl.TEXTURE_CUBE_MAP, value);\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param one \r\n     * @param value \r\n     * @returns \r\n     */\r\n    _uniform_UniformBuffer(one: any, value: UniformBufferObject) {\r\n        value._bindUniformBufferBase();\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _bindTexture(textureID: number, target: number, texture: WebGLTexture): void {\r\n        const gl = this._gl;\r\n        if (this._engine._activedTextureID !== textureID) {\r\n            gl.activeTexture(textureID);\r\n            this._engine._activedTextureID = textureID;\r\n        }\r\n        const texID = this._engine._activedTextureID - this._gl.TEXTURE0;\r\n        if (this._engine._activeTextures[texID] !== texture) {\r\n            gl.bindTexture(target, texture);\r\n            this._engine._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        gl.deleteShader(this._vshader);\r\n        gl.deleteShader(this._pshader);\r\n        gl.deleteProgram(this._program);\r\n        this._vshader = null;\r\n        this._pshader = null;\r\n        this._program = null;\r\n        this._attributeMap = null;\r\n        this._uniformMap = null;\r\n        this._uniformObjectMap = null;\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { GLObject } from \"./GLObject\";\r\nimport { WebGLEngine } from \"./WebGLEngine\";\r\n\r\n\r\nexport class GLVertexState extends GLObject implements IRenderVertexState {\r\n    private _angleInstancedArrays: any;\r\n    private _vaoExt: any | null;\r\n    private _vao: WebGLVertexArrayObject | WebGLVertexArrayObjectOES;\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n\r\n    constructor(engine: WebGLEngine) {\r\n        super(engine);\r\n        if (!engine.isWebGL2)\r\n            this._vaoExt = engine._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object);\r\n        this._vao = this.createVertexArray();\r\n        this._angleInstancedArrays = this._engine._supportCapatable.getExtension(WebGLExtension.ANGLE_instanced_arrays);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private createVertexArray(): any {\r\n        if (this._engine.isWebGL2)\r\n            return (<WebGL2RenderingContext>this._gl).createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private deleteVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).deleteVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(this._vao);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    bindVertexArray(): void {\r\n        if (this._engine._GLBindVertexArray == this)\r\n            return;\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(this._vao);\r\n        this._engine._GLBindVertexArray = this;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    unbindVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).bindVertexArray(null);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(null);\r\n        this._engine._GLBindVertexArray = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    isVertexArray(): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).isVertexArray(this._vao);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(this._vao);\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        //Clear front VAO\r\n        this.clearVAO();\r\n        this._vertexBuffers = vertexBuffer;\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            this._vertexDeclaration.length = vertexBuffer.length;\r\n            var i = 0;\r\n            vertexBuffer.forEach(element => {\r\n                var verDec: VertexDeclaration = element.vertexDeclaration;\r\n                this._vertexDeclaration[i++] = element.vertexDeclaration;\r\n                var valueData: any = verDec._shaderValues;\r\n                element.bind();\r\n                for (var k in valueData) {\r\n                    var loc: number = parseInt(k);\r\n                    var attribute: any[] = valueData[k];\r\n                    this._gl.enableVertexAttribArray(loc);\r\n                    this._gl.vertexAttribPointer(loc, attribute[0], attribute[1], !!attribute[2], attribute[3], attribute[4]);\r\n                    if (element.instanceBuffer)\r\n                        this.vertexAttribDivisor(loc, 1);\r\n                }\r\n            });\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n\r\n    }\r\n\r\n    //绑定之前需要先处理了前面的\r\n    clearVAO(){\r\n        for(let i = 0,n=this._vertexDeclaration.length;i<n;i++){\r\n            var verDec: VertexDeclaration = this._vertexDeclaration[i];\r\n            var valueData: any = verDec._shaderValues;\r\n            for (var k in valueData) {\r\n                var loc: number = parseInt(k);\r\n                this._gl.disableVertexAttribArray(loc);\r\n            }\r\n        }\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer | null): void {\r\n        //需要强制更新IndexBuffer\r\n\r\n        if (indexBuffer == null) {\r\n            return;\r\n        }\r\n        if (this._engine._GLBindVertexArray == this) {\r\n            if (this._bindedIndexBuffer !== indexBuffer) {\r\n                indexBuffer.bind();//TODO:可和vao合并bind\r\n                this._bindedIndexBuffer = indexBuffer;\r\n            }\r\n        } else {\r\n            throw \"BufferState: must call bind() function first.\";\r\n        }\r\n    }\r\n\r\n    /**\r\n         * @internal\r\n         */\r\n    vertexAttribDivisor(index: number, divisor: number): void {\r\n        if (this._engine.isWebGL2)\r\n            (<WebGL2RenderingContext>this._gl).vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        super.destroy();\r\n        const gl = this._gl;\r\n        this.deleteVertexArray();\r\n        this._gl = null;\r\n        this._engine = null;\r\n    }\r\n} ","import { LayaEnv } from \"../../../../LayaEnv\";\r\nimport { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { Vector4 } from \"../../../maths/Vector4\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderOBJCreate } from \"../../RenderInterface/IRenderOBJCreate\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { ShaderVariable } from \"../../RenderShader/ShaderVariable\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { GL2TextureContext } from \"./GL2TextureContext\";\r\nimport { GLBuffer } from \"./GLBuffer\";\r\nimport { GlCapable } from \"./GlCapable\";\r\nimport { WebGLExtension } from \"./GLEnum/WebGLExtension\";\r\nimport { WebGLMode } from \"./GLEnum/WebGLMode\";\r\nimport { GLParams } from \"./GLParams\";\r\nimport { GLRender2DContext } from \"./GLRender2DContext\";\r\nimport { GLRenderDrawContext } from \"./GLRenderDrawContext\";\r\nimport { GLRenderState } from \"./GLRenderState\";\r\nimport { GLShaderInstance } from \"./GLShaderInstance\";\r\nimport { GLTextureContext } from \"./GLTextureContext\";\r\nimport { GLVertexState } from \"./GLVertexState\";\r\nimport { WebGlConfig } from \"./WebGLConfig\";\r\n\r\n/**\r\n * 封装Webgl\r\n */\r\nexport class WebGLEngine implements IRenderEngine {\r\n\r\n    _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n    private _config: WebGlConfig;\r\n\r\n    private _isWebGL2: boolean;\r\n\r\n    private _webglMode: WebGLMode;\r\n\r\n    /**@internal */\r\n    private _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    _renderOBJCreateContext: IRenderOBJCreate;\r\n\r\n    /**@internal */\r\n    _IDCounter: number = 0;\r\n\r\n    /**@internal ShaderDebugMode*/\r\n    _isShaderDebugMode: boolean = true;\r\n\r\n    /**@internal gl.TextureID*/\r\n    _glTextureIDParams: Array<number>;\r\n\r\n\r\n\r\n    /**@internal bind active Texture*/\r\n    _activedTextureID: number;\r\n\r\n    /**@internal bindTexture */\r\n    //RenderTexture TODO\r\n    _activeTextures: WebGLTexture[];\r\n\r\n    /**\r\n    * @internal\r\n    * bind GLVertexArray\r\n    */\r\n    _GLBindVertexArray: GLVertexState;\r\n\r\n    /**\r\n    * @internal\r\n    * 支持功能\r\n    */\r\n    _supportCapatable: GlCapable;\r\n\r\n    /**\r\n     * @internal\r\n     * bind Program\r\n     */\r\n    _glUseProgram: GLShaderInstance;\r\n\r\n    //bind glBuffer by glBuffer target\r\n    //key BufferTargetType\r\n    private _GLBufferBindMap: { [key: number]: GLBuffer | null };\r\n\r\n    private _curUBOPointer: number = 0;\r\n    //记录绑定UBO的glPointer\r\n    private _GLUBOPointerMap: Map<string, number> = new Map();\r\n    //记录绑定Pointer的UBO\r\n    private _GLBindPointerUBOMap: Map<number, GLBuffer> = new Map();\r\n    //bind viewport\r\n    private _lastViewport: Vector4;\r\n    private _lastScissor: Vector4;\r\n\r\n    //bind clearColor\r\n    private _lastClearColor: Color = new Color;\r\n    private _lastClearDepth: number = 1;\r\n\r\n    //GL参数\r\n    private _GLParams: GLParams;\r\n\r\n    //GL纹理生成\r\n    private _GLTextureContext: GLTextureContext | GL2TextureContext;\r\n    //Gl Draw\r\n    private _GLRenderDrawContext: GLRenderDrawContext;\r\n\r\n    private _GL2DRenderContext: GLRender2DContext;\r\n\r\n    //GLRenderState\r\n    _GLRenderState: GLRenderState;\r\n\r\n    // //TODO:管理Buffer\r\n    // private _bufferResourcePool: any;\r\n    // //TODO:管理Texture\r\n    // private _textureResourcePool: any;\r\n    // //TODO:管理FrameBuffer\r\n    // private _RenderBufferResource: any;\r\n\r\n    //GPU统计数据\r\n    private _GLStatisticsInfo: Map<RenderStatisticsInfo, number> = new Map();\r\n\r\n    constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n        this._config = config;\r\n        this._isWebGL2 = false;\r\n        //init data\r\n        this._lastViewport = new Vector4(0, 0, 0, 0);\r\n        this._lastClearColor = new Color(0, 0, 0, 0);\r\n        this._lastScissor = new Vector4(0, 0, 0, 0);\r\n        this._webglMode = webglMode;\r\n        this._initStatisticsInfo();\r\n    }\r\n\r\n    /**\r\n     * GL Context\r\n     * @member {WebGLRenderingContext}\r\n     */\r\n    get gl() {\r\n        return this._context;\r\n    }\r\n\r\n    get isWebGL2() {\r\n        return this._isWebGL2;\r\n    }\r\n\r\n    get webglConfig() {\r\n        return this._config;\r\n    }\r\n\r\n    private _initStatisticsInfo() {\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.DrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.InstanceDrawCall, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.Triangle, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.UniformUpload, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.TextureMemeory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.GPUMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.RenderTextureMemory, 0);\r\n        this._GLStatisticsInfo.set(RenderStatisticsInfo.BufferMemory, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @param value \r\n     */\r\n    _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n        this._GLStatisticsInfo.set(info, this._GLStatisticsInfo.get(info) + value);\r\n    }\r\n\r\n    /**\r\n     * 清除\r\n     * @internal\r\n     * @param info \r\n     */\r\n    clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n        this._GLStatisticsInfo.set(info, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param info \r\n     * @returns \r\n     */\r\n    getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n        return this._GLStatisticsInfo.get(info);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @returns \r\n     */\r\n    _getBindUBOBuffer(glPointer: number): GLBuffer {\r\n        return this._GLBindPointerUBOMap.get(glPointer);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param glPointer \r\n     * @param buffer \r\n     */\r\n    _setBindUBOBuffer(glPointer: number, buffer: GLBuffer): void {\r\n        this._GLBindPointerUBOMap.set(glPointer, buffer);\r\n    }\r\n\r\n    /**\r\n     * create GL\r\n     * @param canvas \r\n     */\r\n    initRenderEngine(canvas: any) {\r\n        let names;\r\n        let gl;\r\n        switch (this._webglMode) {\r\n            case WebGLMode.Auto:\r\n                names = [\"webgl2\", \"experimental-webgl2\", \"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL1:\r\n                names = [\"webgl\", \"experimental-webgl\"];\r\n                break;\r\n            case WebGLMode.WebGL2:\r\n                names = [\"webgl2\", \"experimental-webgl2\"];\r\n                break;\r\n        }\r\n        for (var i: number = 0; i < names.length; i++) {\r\n            try {\r\n                gl = canvas.getContext(names[i], this._config);\r\n                // gl.drawingBufferColorSpace = \"display-p3\";\r\n            } catch (e) {\r\n            }\r\n            if (gl) {\r\n                if (names[i] === 'webgl2' || names[i] === 'experimental-webgl2') {\r\n                    this._isWebGL2 = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        this._context = gl;\r\n\r\n        //init Other\r\n        this._initBindBufferMap();\r\n        this._supportCapatable = new GlCapable(this);\r\n        this._GLParams = new GLParams(this);\r\n        this._GLRenderState = new GLRenderState(this);\r\n        this._glTextureIDParams = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7, gl.TEXTURE8, gl.TEXTURE9, gl.TEXTURE10, gl.TEXTURE11, gl.TEXTURE12, gl.TEXTURE13, gl.TEXTURE14, gl.TEXTURE15, gl.TEXTURE16, gl.TEXTURE17, gl.TEXTURE18, gl.TEXTURE19, gl.TEXTURE20, gl.TEXTURE21, gl.TEXTURE22, gl.TEXTURE23, gl.TEXTURE24, gl.TEXTURE25, gl.TEXTURE26, gl.TEXTURE27, gl.TEXTURE28, gl.TEXTURE29, gl.TEXTURE30, gl.TEXTURE31];\r\n        this._activedTextureID = gl.TEXTURE0;//默认激活纹理区为0;\r\n        this._activeTextures = [];\r\n        this._GLTextureContext = this.isWebGL2 ? new GL2TextureContext(this) : new GLTextureContext(this);\r\n        this._GLRenderDrawContext = new GLRenderDrawContext(this);\r\n        this._GL2DRenderContext = new GLRender2DContext(this);\r\n    }\r\n\r\n    private _initBindBufferMap() {\r\n        this._GLBufferBindMap = {};\r\n        this._GLBufferBindMap[BufferTargetType.ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.ELEMENT_ARRAY_BUFFER] = null;\r\n        this._GLBufferBindMap[BufferTargetType.UNIFORM_BUFFER] = null;\r\n    }\r\n\r\n\r\n    _getbindBuffer(target: BufferTargetType) {\r\n        return this._GLBufferBindMap[target];\r\n    }\r\n\r\n    _setbindBuffer(target: BufferTargetType, buffer: GLBuffer | null) {\r\n        this._GLBufferBindMap[target] = buffer;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param target \r\n     * @param texture \r\n     */\r\n    _bindTexture(target: number, texture: WebGLTexture) {\r\n        const texID = this._activedTextureID - this._context.TEXTURE0;\r\n        if (this._activeTextures[texID] !== texture) {\r\n            this._context.bindTexture(target, texture);\r\n            this._activeTextures[texID] = texture;\r\n        }\r\n    }\r\n\r\n    bindTexture(texture: BaseTexture) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n    }\r\n\r\n    applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n        this._GLRenderState.applyRenderStateCommand(cmd);\r\n    }\r\n\r\n    //get capable of webgl\r\n    getCapable(capatableType: RenderCapable): boolean {\r\n        return this._supportCapatable.getCapable(capatableType);\r\n    }\r\n\r\n    viewport(x: number, y: number, width: number, height: number): void {\r\n        // gl.enable(gl.SCISSOR_TEST);\r\n        // gl.scissor(x, transformY, width, height);\r\n        const gl = this._context;\r\n        const lv = this._lastViewport;\r\n        if (LayaEnv.isConch) {\r\n            gl.viewport(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.viewport(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissor(x: number, y: number, width: number, height: number) {\r\n        const gl = this._context;\r\n        const lv = this._lastScissor;\r\n        if (LayaEnv.isConch) {\r\n            gl.scissor(x, y, width, height);\r\n        } else if (x !== lv.x || y !== lv.y || width !== lv.z || height !== lv.w) {\r\n            gl.scissor(x, y, width, height);\r\n            lv.setValue(x, y, width, height);\r\n        }\r\n    }\r\n\r\n    scissorTest(value: boolean) {\r\n        if (value)\r\n            this._context.enable(this._context.SCISSOR_TEST);\r\n        else\r\n            this._context.disable(this._context.SCISSOR_TEST);\r\n    }\r\n\r\n\r\n\r\n    clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n        var flag: number;\r\n        //this.gl.enable(this._gl.SCISSOR_TEST)\r\n        if (clearFlag & RenderClearFlag.Color) {\r\n            if (clearcolor && !this._lastClearColor.equal(clearcolor)) {\r\n                this._context.clearColor(clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a);\r\n                clearcolor.cloneTo(this._lastClearColor);\r\n            }\r\n            flag |= this.gl.COLOR_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Depth) {\r\n            if (this._lastClearDepth != clearDepth) {\r\n                this._context.clearDepth(clearDepth);\r\n                this._lastClearDepth = clearDepth;\r\n            }\r\n            this._GLRenderState.setDepthMask(true);\r\n            flag |= this._context.DEPTH_BUFFER_BIT;\r\n        }\r\n        if (clearFlag & RenderClearFlag.Stencil) {\r\n            this._context.clearStencil(0);\r\n            this._GLRenderState.setStencilMask(true);\r\n            flag |= this._context.STENCIL_BUFFER_BIT;\r\n        }\r\n        if (flag)\r\n            this._context.clear(flag);\r\n        //this._gl.disable(this._gl.SCISSOR_TEST);\r\n    }\r\n\r\n    copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n        this._bindTexture(texture._texture.target, texture._getSource());\r\n        this._context.copyTexSubImage2D(texture._texture.target, level, xoffset, yoffset, x, y, width, height);\r\n    }\r\n\r\n    colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n        this._context.colorMask(r, g, b, a);\r\n    }\r\n\r\n    getParams(params: RenderParams): number {\r\n        return this._GLParams.getParams(params);\r\n    }\r\n\r\n\r\n    createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n        //TODO SourceManager\r\n        return new GLBuffer(this, targetType, bufferUsageType);\r\n    }\r\n\r\n    createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n        //TODO SourceManager\r\n        return new GLShaderInstance(this, vs, ps, attributeMap);\r\n    }\r\n\r\n    createVertexState(): IRenderVertexState {\r\n        return new GLVertexState(this);\r\n    }\r\n\r\n    getUBOPointer(name: string): number {\r\n        if (!this._GLUBOPointerMap.has(name))\r\n            this._GLUBOPointerMap.set(name, this._curUBOPointer++);\r\n        return this._GLUBOPointerMap.get(name);\r\n    }\r\n\r\n\r\n\r\n    getTextureContext(): ITextureContext {\r\n        return this._GLTextureContext;\r\n    }\r\n\r\n    //TODO 先写完测试，这种封装过于死板\r\n    getDrawContext(): IRenderDrawContext {\r\n        return this._GLRenderDrawContext;\r\n    }\r\n\r\n    get2DRenderContext(): IRender2DContext {\r\n        return this._GL2DRenderContext;\r\n    }\r\n\r\n    getCreateRenderOBJContext(): IRenderOBJCreate {\r\n        return this._renderOBJCreateContext;\r\n    }\r\n\r\n    // //TODO:\r\n    // propertyNameToID(name: string): number {\r\n    //   return this.propertyNameToID(name);\r\n    // }\r\n\r\n    /**\r\n   * 通过Shader属性名称获得唯一ID。\r\n   * @param name Shader属性名称。\r\n   * @return 唯一ID。\r\n   */\r\n    propertyNameToID(name: string): number {\r\n        if (this._propertyNameMap[name] != null) {\r\n            return this._propertyNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._propertyNameMap[name] = id;\r\n            this._propertyNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    propertyIDToName(id: number): string {\r\n        return this._propertyNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadUniforms(shader: GLShaderInstance, commandEncoder: CommandEncoder, shaderData: ShaderData, uploadUnTexture: boolean): number {\r\n        shaderData.applyUBO && shaderData.applyUBOData();\r\n        var data: any = shaderData._data;\r\n        var shaderUniform: any[] = commandEncoder.getArrayData();\r\n        var shaderCall: number = 0;\r\n        for (var i: number = 0, n: number = shaderUniform.length; i < n; i++) {\r\n            var one: any/*ShaderVariable*/ = shaderUniform[i];\r\n            if (uploadUnTexture || one.textureID !== -1) {//如uniform为纹理切换Shader时需要重新上传\r\n                var value: any = data[one.dataOffset];\r\n                if (value != null)\r\n                    shaderCall += one.fun.call(one.caller, one, value);\r\n            }\r\n        }\r\n        return shaderCall;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    uploadCustomUniforms(shader: GLShaderInstance, custom: any[], index: number, data: any): number {\r\n        shader.bind();\r\n        var shaderCall: number = 0;\r\n        var one: ShaderVariable = custom[index];\r\n        if (one && data != null)\r\n            shaderCall += one.fun.call(one.caller, one, data);\r\n        return shaderCall;\r\n    }\r\n\r\n    createRenderStateComand(): RenderStateCommand {\r\n        return new RenderStateCommand();\r\n    }\r\n\r\n    unbindVertexState(): void {\r\n        if (this.isWebGL2)\r\n            (<WebGL2RenderingContext>this._context).bindVertexArray(null);\r\n        else\r\n            this._supportCapatable.getExtension(WebGLExtension.OES_vertex_array_object).bindVertexArrayOES(null);\r\n        this._GLBindVertexArray = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n/**\r\n * WebglObject 基类\r\n */\r\nexport class NativeGLObject{\r\n    protected _engine:NativeWebGLEngine;\r\n    protected _gl: WebGLRenderingContext | WebGL2RenderingContext;\r\n    protected _id:number;\r\n    protected _destroyed: boolean = false;\r\n\r\n    constructor(engine: NativeWebGLEngine){\r\n        this._engine = engine;\r\n        this._gl = this._engine.gl;\r\n        this._id = this._engine._IDCounter++;\r\n    }\r\n\r\n    get destroyed():boolean{\r\n        return this._destroyed;\r\n    }\r\n\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    setResourceManager():void{\r\n    };\r\n\r\n    destroy():void{\r\n        if (this._destroyed) return;\r\n        this._destroyed = true;\r\n    }\r\n\r\n}","\r\nimport { WebGLExtension } from \"../WebGLEngine/GLEnum/WebGLExtension\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { DDSTextureInfo } from \"../../DDSTextureInfo\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\nexport class NativeGLTextureContext extends NativeGLObject implements ITextureContext {\r\n    protected _native: any;\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine);\r\n        this._native = native;\r\n    }\r\n\r\n    createTextureInternal(dimension: TextureDimension, width: number, height: number, format: TextureFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    setTextureImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTextureImageData(texture, (source as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexturePixelsData(texture: InternalTexture, source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        this._native.setTexturePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    initVideoTextureData(texture: InternalTexture): void{\r\n        this._native.initVideoTextureData(texture);\r\n    }\r\n\r\n    setTextureSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTextureSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureSubImageData(texture: InternalTexture, source: HTMLImageElement | HTMLCanvasElement | ImageBitmap, x: number, y: number, premultiplyAlpha: boolean, invertY: boolean): void{\r\n        //TODO\r\n    }\r\n\r\n    setTexture3DImageData(texture: InternalTexture, source: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DImageData(texture, (source as any[]).map(function(s) { return s._nativeObj}), depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DPixlesData(texture: InternalTexture, source: ArrayBufferView, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DPixlesData(texture, source, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTexture3DSubPixelsData(texture: InternalTexture, source: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setTexture3DSubPixelsData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setTextureHDRData(texture: InternalTexture, hdrInfo: HDRTextureInfo): void {\r\n        let sourceData = hdrInfo.readScanLine();\r\n\r\n        this.setTexturePixelsData(texture, sourceData, false, false);\r\n    }\r\n    setTextureDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ddsInfo);\r\n    }\r\n\r\n    setTextureKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        this._native.setTextureKTXData(texture, ktxInfo);\r\n    }\r\n    setCubeImageData(texture: InternalTexture, sources: (HTMLImageElement | HTMLCanvasElement | ImageBitmap)[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        var images: any[] = [];\r\n        var length = sources.length;\r\n        for (let index = 0; index < length; index++) {\r\n            images.push((sources[index] as any)._nativeObj);\r\n        }\r\n        this._native.setCubeImageData(texture, images, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    setCubePixelsData(texture: InternalTexture, source: ArrayBufferView[], premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubePixelsData(texture, source, premultiplyAlpha, invertY);\r\n    }\r\n    setCubeSubPixelData(texture: InternalTexture, source: ArrayBufferView[], mipmapLevel: number, generateMipmap: boolean, xOffset: number, yOffset: number, width: number, height: number, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.setCubeSubPixelData(texture, source, mipmapLevel, generateMipmap, xOffset, yOffset, width, height, premultiplyAlpha, invertY);\r\n    }\r\n\r\n\r\n    setCubeDDSData(texture: InternalTexture, ddsInfo: DDSTextureInfo) {\r\n        throw new Error(\"setCubeDDSData Method not implemented.\");\r\n    }\r\n\r\n    setCubeKTXData(texture: InternalTexture, ktxInfo: KTXTextureInfo) {\r\n        throw new Error(\"setCubeKTXData Method not implemented.\");\r\n    }\r\n\r\n    setTextureCompareMode(texture: InternalTexture, compareMode: TextureCompareMode): TextureCompareMode {\r\n        return this._native.setTextureCompareMode(texture, compareMode);\r\n    }\r\n\r\n    bindRenderTarget(renderTarget: InternalRenderTarget): void {\r\n        this._native.bindRenderTarget(renderTarget);\r\n    }\r\n\r\n    bindoutScreenTarget(): void {\r\n        this._native.bindoutScreenTarget();\r\n    }\r\n\r\n    unbindRenderTarget(renderTarget: InternalRenderTarget): void {\r\n        this._native.unbindRenderTarget(renderTarget);\r\n    }\r\n\r\n    createRenderTextureInternal(dimension: TextureDimension, width: number, height: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        return this._native.createRenderTextureInternal(dimension, width, height, format, generateMipmap, sRGB);\r\n    }\r\n\r\n    createRenderTargetInternal(width: number, height: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetInternal(width, height, colorFormat, depthStencilFormat ? depthStencilFormat : RenderTargetFormat.None, generateMipmap, sRGB, multiSamples);\r\n    }\r\n\r\n    createRenderTargetCubeInternal(size: number, colorFormat: RenderTargetFormat, depthStencilFormat: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean, multiSamples: number): InternalRenderTarget {\r\n        return this._native.createRenderTargetCubeInternal(size, colorFormat, depthStencilFormat, generateMipmap, sRGB, multiSamples);\r\n    }\r\n    createRenderTextureCubeInternal(dimension: TextureDimension, size: number, format: RenderTargetFormat, generateMipmap: boolean, sRGB: boolean): InternalTexture {\r\n        throw new Error(\"createRenderTextureCubeInternal Method not implemented.\");\r\n    }\r\n    // todo  color 0, 1, 2, 3 ?\r\n    setupRendertargetTextureAttachment(renderTarget: InternalRenderTarget, texture: InternalTexture) {\r\n        this._native.setupRendertargetTextureAttachment(renderTarget, texture);\r\n    }\r\n\r\n    // todo 不同 格式\r\n    readRenderTargetPixelData(renderTarget: InternalRenderTarget, xOffset: number, yOffset: number, width: number, height: number, out: ArrayBufferView): ArrayBufferView {\r\n        return this._native.readRenderTargetPixelData(renderTarget, xOffset, yOffset, width, height, out);\r\n    }\r\n\r\n    updateVideoTexture(texture: InternalTexture, video: HTMLVideoElement, premultiplyAlpha: boolean, invertY: boolean): void {\r\n        this._native.updateVideoTexture(texture, (video as any)._nativeObj.conchImgId, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    getRenderTextureData(internalTex: InternalRenderTarget, x: number, y: number, width: number, height: number): ArrayBufferView {\r\n        return this._native.getRenderTextureData(internalTex, x, y, width, height);\r\n    }\r\n}","import { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\nimport { TextureDimension } from \"../../RenderEnum/TextureDimension\";\r\nimport { HDRTextureInfo } from \"../../HDRTextureInfo\";\r\nimport { FilterMode } from \"../../RenderEnum/FilterMode\";\r\nimport { RenderTargetFormat } from \"../../RenderEnum/RenderTargetFormat\";\r\nimport { TextureCompareMode } from \"../../RenderEnum/TextureCompareMode\";\r\nimport { TextureFormat } from \"../../RenderEnum/TextureFormat\";\r\nimport { KTXTextureInfo } from \"../../KTXTextureInfo\";\r\nimport { InternalTexture } from \"../../RenderInterface/InternalTexture\";\r\nimport { InternalRenderTarget } from \"../../RenderInterface/InternalRenderTarget\";\r\n\r\n/**\r\n * 将继承修改为类似 WebGLRenderingContextBase, WebGLRenderingContextOverloads 多继承 ?\r\n */\r\nexport class NativeGL2TextureContext extends NativeGLTextureContext {\r\n\r\n    constructor(engine: NativeWebGLEngine, native: any) {\r\n        super(engine, native);\r\n    }\r\n}","import { IndexBuffer } from \"../../IndexBuffer\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { VertexBuffer } from \"../../VertexBuffer\";\r\nimport { VertexDeclaration } from \"../../VertexDeclaration\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLVertexState extends NativeGLObject implements IRenderVertexState {\r\n\r\n    _vertexDeclaration: VertexDeclaration[] = [];\r\n    _bindedIndexBuffer: IndexBuffer;\r\n    _vertexBuffers: VertexBuffer[];\r\n    _nativeVertexBuffers:any[];\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLVertexState(engine._nativeObj);\r\n        this._nativeVertexBuffers=[];\r\n    }\r\n\r\n    bindVertexArray(): void {\r\n        this._nativeObj.bindVertexArray();\r\n    }\r\n\r\n    unbindVertexArray(): void {\r\n        this._nativeObj.unbindVertexArray();\r\n    }\r\n\r\n    applyVertexBuffer(vertexBuffer: VertexBuffer[]): void {\r\n        this._vertexBuffers = vertexBuffer;\r\n        this._nativeVertexBuffers.length = 0;\r\n        vertexBuffer.forEach((element) => {\r\n            this._nativeVertexBuffers.push((element as any)._conchVertexBuffer3D);\r\n        });\r\n        this._nativeObj.applyVertexBuffer(this._nativeVertexBuffers);\r\n    }\r\n\r\n    applyIndexBuffer(indexBuffer: IndexBuffer|null): void {\r\n        //需要强制更新IndexBuffer\r\n        \r\n        if(indexBuffer==null){\r\n            return;\r\n        }\r\n        this._bindedIndexBuffer = indexBuffer;\r\n        this._nativeObj.applyIndexBuffer((indexBuffer as any)._conchIndexBuffer3D);\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        this._vertexBuffers = null;\r\n        this._nativeVertexBuffers=[];\r\n        this._bindedIndexBuffer = null;\r\n        super.destroy();\r\n        this._nativeObj.destroy()\r\n    }\r\n} ","import { IndexFormat } from \"../../RenderEnum/IndexFormat\";\r\nimport { MeshTopology } from \"../../RenderEnum/RenderPologyMode\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderGeometryElement } from \"../../RenderInterface/RenderPipelineInterface/IRenderGeometryElement\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n//TODO\r\nexport class NativeGLRenderDrawContext extends NativeGLObject implements IRenderDrawContext {\r\n    _nativeObj: any;\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n        this._nativeObj = new (window as any).conchGLRenderDrawContext((engine as any)._nativeObj);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElementsInstanced(mode: MeshTopology, count: number, type: IndexFormat, offset: number, instanceCount: number): void {\r\n        this._nativeObj.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawArraysInstanced(mode: MeshTopology, first: number, count: number, instanceCount: number): void {\r\n        this._nativeObj.drawArraysInstanced(mode, first, count, instanceCount);\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     */\r\n    drawArrays(mode: MeshTopology, first: number, count: number): void {\r\n        this._nativeObj.drawArrays(mode, first, count);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawElements(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        this._nativeObj.drawElements(mode, count, type, offset);\r\n    }\r\n\r\n    drawElements2DTemp(mode: MeshTopology, count: number, type: IndexFormat, offset: number): void {\r\n        //todo\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    drawGeometryElement(geometryElement: IRenderGeometryElement): void {\r\n        this._nativeObj.drawGeometryElement((geometryElement as any)._nativeObj);\r\n    }\r\n\r\n\r\n}","import { LayaGL } from \"../../../layagl/LayaGL\";\r\nimport { BlendType } from \"../../../RenderEngine/RenderEnum/BlendType\";\r\nimport { RenderStateType } from \"../../../RenderEngine/RenderEnum/RenderStateType\";\r\nimport { RenderStateCommand } from \"../../../RenderEngine/RenderStateCommand\";\r\n\r\n\r\n/**\r\n * 渲染状态设置命令流\r\n */\r\nexport class NativeRenderStateCommand extends RenderStateCommand {\r\n    private _nativeObj: any;\r\n    constructor(){\r\n        super();\r\n        this._nativeObj = new (window as any).conchRenderStateCommand();\r\n    }\r\n\r\n    addCMD(renderstate:RenderStateType,value:any){\r\n        switch (renderstate) {\r\n            case RenderStateType.DepthTest:\r\n            case RenderStateType.DepthMask:\r\n            case RenderStateType.DepthFunc:\r\n            case RenderStateType.StencilTest:\r\n            case RenderStateType.StencilMask:\r\n            case RenderStateType.BlendEquation:\r\n            case RenderStateType.CullFace:\r\n            case RenderStateType.FrontFace:\r\n                this._nativeObj.addCMDInt1(renderstate, value);\r\n                break;\r\n            case RenderStateType.StencilFunc:         \r\n            case RenderStateType.BlendFunc:            \r\n            case RenderStateType.BlendEquationSeparate:\r\n                this._nativeObj.addCMDInt2(renderstate, value[0], value[1]);\r\n                break;\r\n            case RenderStateType.StencilOp:\r\n                this._nativeObj.addCMDInt3(renderstate, value[0],value[1], value[2]);//TODO\r\n                break;\r\n            case RenderStateType.BlendType:\r\n                this._nativeObj.addCMDInt1(renderstate, value != BlendType.BLEND_DISABLE ? 1 : 0);\r\n                break;\r\n            case RenderStateType.BlendFuncSeperate:\r\n                this._nativeObj.addCMDInt4(renderstate, value[0], value[1], value[2], value[3]);\r\n                break;\r\n            default:\r\n                throw \"unknow type of renderStateType\";\r\n                break;\r\n        }\r\n    }\r\n\r\n    applyCMD(){\r\n        LayaGL.renderEngine.applyRenderStateCMD(this);\r\n    }\r\n\r\n    clear(){\r\n        this._nativeObj.clear();\r\n    }\r\n}","import { CommandEncoder } from \"../../../layagl/CommandEncoder\";\r\nimport { BaseTexture } from \"../../../resource/BaseTexture\";\r\nimport { BufferTargetType, BufferUsage } from \"../../RenderEnum/BufferTargetType\";\r\nimport { RenderCapable } from \"../../RenderEnum/RenderCapable\";\r\nimport { RenderClearFlag } from \"../../RenderEnum/RenderClearFlag\";\r\nimport { RenderParams } from \"../../RenderEnum/RenderParams\";\r\nimport { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { IRenderBuffer } from \"../../RenderInterface/IRenderBuffer\";\r\nimport { IRenderDrawContext } from \"../../RenderInterface/IRenderDrawContext\";\r\nimport { IRenderEngine } from \"../../RenderInterface/IRenderEngine\";\r\nimport { IRenderShaderInstance } from \"../../RenderInterface/IRenderShaderInstance\";\r\nimport { IRenderVertexState } from \"../../RenderInterface/IRenderVertexState\";\r\nimport { ITextureContext } from \"../../RenderInterface/ITextureContext\";\r\nimport { RenderStateCommand } from \"../../RenderStateCommand\";\r\nimport { NativeGL2TextureContext } from \"./NativeGL2TextureContext\";\r\nimport { WebGLMode } from \"../WebGLEngine/GLEnum/WebGLMode\";\r\nimport { NativeGLRender2DContext } from \"./NativeGLRender2DContext\";\r\nimport { NativeGLTextureContext } from \"./NativeGLTextureContext\";\r\nimport { NativeGLVertexState } from \"./NativeGLVertexState\";\r\nimport { WebGlConfig } from \"../WebGLEngine/WebGLConfig\";\r\nimport { IRenderOBJCreate } from \"../../RenderInterface/IRenderOBJCreate\";\r\nimport { NativeGLRenderDrawContext } from \"./NativeGLRenderDrawContext\";\r\nimport { ShaderDataType } from \"../../RenderShader/ShaderData\";\r\nimport { RenderStatisticsInfo } from \"../../RenderEnum/RenderStatInfo\";\r\nimport { Color } from \"../../../maths/Color\";\r\nimport { NativeRenderStateCommand } from \"./NativeRenderStateCommand\";\r\n\r\n\r\n/**\r\n * @private 封装Webgl\r\n */\r\nexport class NativeWebGLEngine implements IRenderEngine {\r\n\r\n  _context: WebGLRenderingContext | WebGL2RenderingContext;\r\n\r\n  private _config: WebGlConfig;\r\n\r\n  /**@internal ShaderDebugMode*/\r\n  _isShaderDebugMode: boolean = true;\r\n\r\n  private _GLTextureContext: NativeGLTextureContext;\r\n  //Gl Draw\r\n  private _GLRenderDrawContext: NativeGLRenderDrawContext;\r\n\r\n  private _GL2DRenderContext: NativeGLRender2DContext;\r\n\r\n  /**@internal */\r\n  _renderOBJCreateContext:IRenderOBJCreate;\r\n\r\n  _nativeObj: any;\r\n\r\n  /**@internal */\r\n  _IDCounter: number;\r\n\r\n  constructor(config: WebGlConfig, webglMode: WebGLMode = WebGLMode.Auto) {\r\n    this._nativeObj = new (window as any).conchWebGLEngine(webglMode);\r\n  }\r\n  \r\n  createRenderStateComand(): RenderStateCommand {\r\n    return new NativeRenderStateCommand();\r\n  }\r\n  getUBOPointer(name: string): number {\r\n    return this._nativeObj.getUBOPointer(name);\r\n  }\r\n\r\n  _addStatisticsInfo(info: RenderStatisticsInfo, value: number) {\r\n    this._nativeObj.addStatisticsInfo(info, value);\r\n  }\r\n  /**\r\n * 清除\r\n * @internal\r\n * @param info \r\n */\r\n  clearStatisticsInfo(info: RenderStatisticsInfo) {\r\n    this._nativeObj.clearStatisticsInfo(info);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   * @param info \r\n   * @returns \r\n   */\r\n  getStatisticsInfo(info: RenderStatisticsInfo): number {\r\n    return this._nativeObj.getStatisticsInfo(info);\r\n  }\r\n  /**\r\n   * GL Context\r\n   * @member {WebGLRenderingContext}\r\n   */\r\n  get gl() {\r\n    return this._context;\r\n  }\r\n\r\n  get isWebGL2() {\r\n    return this._nativeObj.isWebGL2;\r\n  }\r\n\r\n  get webglConfig() {\r\n    return this._config;\r\n  }\r\n\r\n  /**\r\n   * create GL\r\n   * @param canvas \r\n   */\r\n  initRenderEngine(canvas: any) {\r\n    this._nativeObj.initRenderEngine();\r\n    this._GLRenderDrawContext = new NativeGLRenderDrawContext(this);\r\n\r\n    if (this.isWebGL2) {\r\n      this._GLTextureContext = new NativeGL2TextureContext(this, new (window as any).conchGL2TextureContext(this._nativeObj));\r\n    }\r\n    else {\r\n      this._GLTextureContext = new NativeGLTextureContext(this, new (window as any).conchGLTextureContext(this._nativeObj));\r\n    }\r\n  }\r\n\r\n  bindTexture(texture: BaseTexture) {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  applyRenderStateCMD(cmd: RenderStateCommand): void {\r\n    this._nativeObj.applyRenderStateCommand((cmd as any)._nativeObj);\r\n  }\r\n\r\n  //get capable of webgl\r\n  getCapable(capatableType: RenderCapable): boolean {\r\n    return this._nativeObj.getCapable(capatableType);\r\n  }\r\n\r\n  viewport(x: number, y: number, width: number, height: number): void {\r\n    this._nativeObj.viewport(x, y, width, height);\r\n  }\r\n\r\n  scissor(x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.scissor(x, y, width, height);\r\n  }\r\n\r\n  scissorTest(value: boolean) {\r\n    this._nativeObj.scissorTest(value);\r\n  }\r\n\r\n  clearRenderTexture(clearFlag: RenderClearFlag, clearcolor: Color = null, clearDepth: number = 1) {\r\n    if (clearcolor)\r\n      this._nativeObj.clearRenderTexture(clearFlag, true, clearcolor.r, clearcolor.g, clearcolor.b, clearcolor.a, clearDepth);\r\n    else\r\n      this._nativeObj.clearRenderTexture(clearFlag, false, Color.BLACK.r, Color.BLACK.g, Color.BLACK.b, Color.BLACK.a, clearDepth);\r\n  }\r\n\r\n  copySubFrameBuffertoTex(texture: BaseTexture, level: number, xoffset: number, yoffset: number, x: number, y: number, width: number, height: number) {\r\n    this._nativeObj.copySubFrameBuffertoTex(texture._texture, level, xoffset, yoffset, x, y, width, height);\r\n  }\r\n\r\n  colorMask(r: boolean, g: boolean, b: boolean, a: boolean): void {\r\n    this._nativeObj.colorMask(r, g, b, a);\r\n  }\r\n\r\n  getParams(params: RenderParams): number {\r\n    return this._nativeObj.getParams(params);\r\n  }\r\n\r\n\r\n  createBuffer(targetType: BufferTargetType, bufferUsageType: BufferUsage): IRenderBuffer {\r\n    //TODO SourceManager\r\n    return new (window as any).conchGLBuffer(this._nativeObj, targetType, bufferUsageType);\r\n  }\r\n\r\n  createShaderInstance(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }): IRenderShaderInstance {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  createVertexState(): IRenderVertexState {\r\n    return new NativeGLVertexState(this);\r\n  }\r\n\r\n  getTextureContext(): ITextureContext {\r\n    return this._GLTextureContext;\r\n  }\r\n\r\n  //TODO 先写完测试，这种封装过于死板\r\n  getDrawContext(): IRenderDrawContext {\r\n    return this._GLRenderDrawContext;\r\n  }\r\n\r\n  get2DRenderContext(): IRender2DContext {\r\n    return this._GL2DRenderContext;\r\n  }\r\n\r\n  getCreateRenderOBJContext(): IRenderOBJCreate {\r\n    return this._renderOBJCreateContext;\r\n  }\r\n\r\n  propertyNameToID(name: string): number {\r\n    return this._nativeObj.propertyNameToID(name);\r\n  }\r\n\r\n  propertyIDToName(id: number): string {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n  uploadUniforms(shader: IRenderShaderInstance, commandEncoder: CommandEncoder, shaderData: any, uploadUnTexture: boolean): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  uploadCustomUniforms(shader: IRenderShaderInstance, custom: any[], index: number, data: any): number {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  unbindVertexState(): void{\r\n    this._nativeObj.unbindVertexState && this._nativeObj.unbindVertexState();\r\n  }\r\n}\r\n\r\n\r\n","import { ILaya } from \"./../../ILaya\";\r\nimport { Config } from \"./../../Config\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { WebGLMode } from \"../RenderEngine/RenderEngine/WebGLEngine/GLEnum/WebGLMode\";\r\nimport { WebGlConfig } from \"../RenderEngine/RenderEngine/WebGLEngine/WebGLConfig\";\r\nimport { RenderStateContext } from \"../RenderEngine/RenderStateContext\";\r\nimport { Context } from \"../resource/Context\";\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\";\r\nimport { BlendMode } from \"../webgl/canvas/BlendMode\";\r\nimport { Shader2D } from \"../webgl/shader/d2/Shader2D\";\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\";\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\";\r\nimport { SubmitBase } from \"../webgl/submit/SubmitBase\";\r\nimport { WebGL } from \"../webgl/WebGL\";\r\nimport { IRenderEngine } from \"../RenderEngine/RenderInterface/IRenderEngine\";\r\nimport { WebGLEngine } from \"../RenderEngine/RenderEngine/WebGLEngine/WebGLEngine\";\r\nimport { NativeWebGLEngine } from \"../RenderEngine/RenderEngine/NativeGLEngine/NativeWebGLEngine\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { VertexElementFormat } from \"./VertexElementFormat\";\r\n\r\n/**\r\n * <code>Render</code> 是渲染管理类。它是一个单例，可以使用 Laya.render 访问。\r\n */\r\nexport class Render {\r\n    /** @internal */\r\n    static _context: Context;\r\n    /** @internal 主画布。canvas和webgl渲染都用这个画布*/\r\n    static _mainCanvas: HTMLCanvas;\r\n    /** 表示是否是 3D 模式。*/\r\n    static is3DMode: boolean;\r\n    /**自定义帧循环 */\r\n    static _customRequestAnimationFrame: any;\r\n    /**帧循环函数 */\r\n    static _loopFunction: any;\r\n\r\n    /** 当前的帧数 */\r\n    private static lastFrm = 0;\r\n    /** 第一次运行标记 */\r\n    private _first = true;\r\n    /** 刚启动的时间。由于微信的rAF不标准，传入的stamp参数不对，因此自己计算一个从启动开始的相对时间 */\r\n    private _startTm = 0;\r\n\r\n    /** @internal */\r\n    private static ifps = 1000 / 60;\r\n\r\n    static _Render: Render;\r\n\r\n    static customRequestAnimationFrame(value: any, loopFun: any) {\r\n        Render._customRequestAnimationFrame = value;\r\n        Render._loopFunction = loopFun;\r\n    }\r\n\r\n    private static _customEngine: IRenderEngine;\r\n    static set customRenderEngine(engine: IRenderEngine) {\r\n        Render._customEngine = engine;\r\n    }\r\n    static get customRenderEngine() {\r\n        return Render._customEngine;\r\n    }\r\n\r\n\r\n    /**\r\n     * 初始化引擎。\r\n     * @param\twidth 游戏窗口宽度。\r\n     * @param\theight\t游戏窗口高度。\r\n     */\r\n    constructor(width: number, height: number, mainCanv: HTMLCanvas) {\r\n        Render._Render = this;\r\n        Render._mainCanvas = mainCanv;\r\n        let source: HTMLCanvasElement = Render._mainCanvas.source as HTMLCanvasElement;\r\n        //创建主画布。改到Browser中了，因为为了runtime，主画布必须是第一个\r\n        source.id = \"layaCanvas\";\r\n        source.width = width;\r\n        source.height = height;\r\n        if (LayaEnv.isConch) {\r\n            document.body.appendChild(source);\r\n        }\r\n\r\n        this.initRender(Render._mainCanvas, width, height);\r\n        window.requestAnimationFrame(loop);\r\n        let me = this;\r\n        let lastFrmTm = performance.now();\r\n        let fps = Config.FPS;\r\n        let ifps = Render.ifps = 1000 / fps; //如果VR的话，需要改这个\r\n        function loop(stamp: number) {\r\n            //let perf = PerfHUD.inst;\r\n            let sttm = performance.now();\r\n            //perf && perf.updateValue(0, sttm-lastFrmTm);\r\n            lastFrmTm = sttm;\r\n            if (me._first) {\r\n                // 把starttm转成帧对齐\r\n                me._startTm = Math.floor(stamp / ifps) * ifps;\r\n                me._first = false;\r\n            }\r\n            // 与第一帧开始时间的delta\r\n            stamp -= me._startTm;\r\n            // 计算当前帧数\r\n            let frm = Math.floor(stamp / ifps);    // 不能|0 在微信下会变成负的\r\n            // 是否已经跨帧了\r\n            let dfrm = frm - Render.lastFrm;\r\n            if (dfrm > 0 || LayaEnv.isConch || !Config.fixedFrames) {\r\n                //不限制\r\n                Render.lastFrm = frm;\r\n                ILaya.stage._loop();\r\n            }\r\n            //perf && perf.updateValue(1, performance.now()-sttm);\r\n\r\n            if (!!Render._customRequestAnimationFrame && !!Render._loopFunction) {\r\n                Render._customRequestAnimationFrame(Render._loopFunction);\r\n            }\r\n            else\r\n                window.requestAnimationFrame(loop);\r\n        }\r\n        ILaya.stage.on(\"visibilitychange\", this, this._onVisibilitychange);\r\n    }\r\n\r\n    /**@private */\r\n    private _timeId: number = 0;\r\n\r\n    /**@private */\r\n    private _onVisibilitychange(): void {\r\n        if (!ILaya.stage.isVisibility) {\r\n            this._timeId = window.setInterval(this._enterFrame, 1000);\r\n        } else if (this._timeId != 0) {\r\n            window.clearInterval(this._timeId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取帧对齐的时间。\r\n     * 用这个做动画的时间参数会更平滑。\r\n     * 从render构造开始算起。\r\n     * @returns \r\n     */\r\n    static vsyncTime() {\r\n        return Render.lastFrm * Render.ifps;\r\n    }\r\n\r\n    initRender(canvas: HTMLCanvas, w: number, h: number): boolean {\r\n        let glConfig: WebGlConfig = { stencil: Config.isStencil, alpha: Config.isAlpha, antialias: Config.isAntialias, premultipliedAlpha: Config.premultipliedAlpha, preserveDrawingBuffer: Config.preserveDrawingBuffer, depth: Config.isDepth, failIfMajorPerformanceCaveat: Config.isfailIfMajorPerformanceCaveat, powerPreference: Config.powerPreference };\r\n\r\n        //TODO  other engine\r\n        const webglMode: WebGLMode = Config.useWebGL2 ? WebGLMode.Auto : WebGLMode.WebGL1;\r\n\r\n        let engine: IRenderEngine;\r\n        if (!Render.customRenderEngine) {\r\n            if (LayaEnv.isConch && !(window as any).conchConfig.conchWebGL) {\r\n                engine = new NativeWebGLEngine(glConfig, webglMode);\r\n                engine.initRenderEngine(Render._mainCanvas.source);\r\n                new LayaGL();\r\n            }\r\n            else {\r\n                engine = new WebGLEngine(glConfig, webglMode);\r\n                engine.initRenderEngine(Render._mainCanvas.source);\r\n                var gl: WebGLRenderingContext = RenderStateContext.mainContext = engine._context;\r\n                if (Config.printWebglOrder)\r\n                    this._replaceWebglcall(gl);\r\n                if (!gl)\r\n                    return false;\r\n                if (gl) {\r\n                    new LayaGL();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            engine = Render.customRenderEngine;\r\n            engine.initRenderEngine(Render._mainCanvas.source);\r\n        }\r\n\r\n        LayaGL.renderEngine = engine;\r\n        //LayaGL.instance = gl;\r\n        //native TODO\r\n        LayaGL.textureContext = engine.getTextureContext();\r\n        LayaGL.renderDrawContext = engine.getDrawContext();\r\n        LayaGL.render2DContext = engine.get2DRenderContext();\r\n        //LayaGL.renderOBJCreate = engine.getCreateRenderOBJContext();\r\n\r\n        canvas.size(w, h);\t//在ctx之后调用。\r\n        VertexElementFormat.__init__();\r\n        Context.__init__();\r\n        SubmitBase.__init__();\r\n\r\n        var ctx: Context = new Context();\r\n        Context._rendercontex = ctx;\r\n        ctx.isMain = true;\r\n        Render._context = ctx;\r\n        canvas._setContext(ctx);\r\n\r\n        //TODO 现在有个问题是 gl.deleteTexture并没有走WebGLContex封装的\r\n        ShaderDefines2D.__init__();\r\n        Value2D.__init__();\r\n        Shader2D.__init__();\r\n        BlendMode._init_();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**@private */\r\n    private _replaceWebglcall(gl: any) {\r\n        var tempgl: { [key: string]: any } = {};\r\n        for (const key in gl) {\r\n            if (typeof gl[key] == \"function\" && key != \"getError\" && key != \"__SPECTOR_Origin_getError\" && key != \"__proto__\") {\r\n                tempgl[key] = gl[key];\r\n                gl[key] = function () {\r\n                    let arr: IArguments[] = [];\r\n                    for (let i = 0; i < arguments.length; i++) {\r\n                        arr.push(arguments[i]);\r\n                    }\r\n                    let result = tempgl[key].apply(gl, arr);\r\n\r\n                    //console.log(RenderInfo.loopCount + \":gl.\" + key + \":\" + arr);\r\n                    let err = gl.getError();\r\n                    if (err) {\r\n                        //console.log(err);\r\n                        debugger;\r\n                    }\r\n                    return result;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _enterFrame(e: any = null): void {\r\n        ILaya.stage._loop();\r\n    }\r\n\r\n    /** 目前使用的渲染器。*/\r\n    static get context(): Context {\r\n        return Render._context;\r\n    }\r\n\r\n    /** 渲染使用的原生画布引用。 */\r\n    static get canvas(): any {\r\n        return Render._mainCanvas.source;\r\n    }\r\n}\r\n","import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { InputManager } from \"../events/InputManager\";\r\nimport { Render } from \"../renders/Render\";\r\nimport { Config } from \"../../Config\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\n\r\n/**\r\n * 用户输入一个或多个文本字符时后调度。\r\n * @eventType Event.INPUT\r\n * */\r\n/*[Event(name = \"input\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 文本发生变化后调度。\r\n * @eventType Event.CHANGE\r\n * */\r\n/*[Event(name = \"change\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 用户在输入框内敲回车键后，将会调度 <code>enter</code> 事件。\r\n * @eventType Event.ENTER\r\n * */\r\n/*[Event(name = \"enter\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象获得焦点后调度。\r\n * @eventType Event.FOCUS\r\n * */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 显示对象失去焦点后调度。\r\n * @eventType Event.BLUR\r\n * */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p><code>Input</code> 类用于创建显示对象以显示和输入文本。</p>\r\n * <p>Input 类封装了原生的文本输入框，由于不同浏览器的差异，会导致此对象的默认文本的位置与用户点击输入时的文本的位置有少许的偏差。</p>\r\n */\r\nexport class Input extends Text {\r\n    /** 常规文本域。*/\r\n    static TYPE_TEXT: string = \"text\";\r\n    /** password 类型用于密码域输入。*/\r\n    static TYPE_PASSWORD: string = \"password\";\r\n    /** email 类型用于应该包含 e-mail 地址的输入域。*/\r\n    static TYPE_EMAIL: string = \"email\";\r\n    /** url 类型用于应该包含 URL 地址的输入域。*/\r\n    static TYPE_URL: string = \"url\";\r\n    /** number 类型用于应该包含数值的输入域。*/\r\n    static TYPE_NUMBER: string = \"number\";\r\n    /**\r\n     * <p>range 类型用于应该包含一定范围内数字值的输入域。</p>\r\n     * <p>range 类型显示为滑动条。</p>\r\n     * <p>您还能够设定对所接受的数字的限定。</p>\r\n     */\r\n    static TYPE_RANGE: string = \"range\";\r\n    /**  选取日、月、年。*/\r\n    static TYPE_DATE: string = \"date\";\r\n    /** month - 选取月、年。*/\r\n    static TYPE_MONTH: string = \"month\";\r\n    /** week - 选取周和年。*/\r\n    static TYPE_WEEK: string = \"week\";\r\n    /** time - 选取时间（小时和分钟）。*/\r\n    static TYPE_TIME: string = \"time\";\r\n    /** datetime - 选取时间、日、月、年（UTC 时间）。*/\r\n    static TYPE_DATE_TIME: string = \"datetime\";\r\n    /** datetime-local - 选取时间、日、月、年（本地时间）。*/\r\n    static TYPE_DATE_TIME_LOCAL: string = \"datetime-local\";\r\n    /**\r\n     * <p>search 类型用于搜索域，比如站点搜索或 Google 搜索。</p>\r\n     * <p>search 域显示为常规的文本域。</p>\r\n     */\r\n    static TYPE_SEARCH: string = \"search\";\r\n\r\n    /**@private */\r\n    protected static input: HTMLInputElement;\r\n    /**@private */\r\n    protected static area: HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputElement: HTMLInputElement | HTMLTextAreaElement;\r\n    /**@private */\r\n    protected static inputContainer: HTMLDivElement;\r\n    /**@private */\r\n    protected static confirmButton: any;\r\n    /**@private */\r\n    protected static promptStyleDOM: any;\r\n\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean = false;\r\n    protected _editable: boolean = true;\r\n    protected _restrict: string;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number = 0;\r\n\r\n    private _type: string = \"text\";\r\n\r\n    /**@private */\r\n    static IOS_IFRAME: boolean = false;\r\n\r\n    static isAppUseNewInput: boolean = false;\r\n\r\n    /**创建一个新的 <code>Input</code> 类实例。*/\r\n    constructor() {\r\n        super();\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this._promptColor = \"#A9A9A9\";\r\n\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        Input._createInputElement();\r\n\r\n        // 移动端通过画布的touchend调用focus\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue: boolean = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n\r\n    // 移动平台在单击事件触发后弹出输入法\r\n    private static _popupInputMethod(e: any): void {\r\n        //e.preventDefault();\r\n        if (!InputManager.isTextInputting) return;\r\n\r\n        var input: any = Input.inputElement;\r\n\r\n        // 弹出输入法。\r\n        input.focus();\r\n    }\r\n\r\n    private static _createInputElement(): void {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = '1E5';\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        (Input.inputContainer as any).setPos = function (x: number, y: number): void {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n\r\n    private static _initInput(input: HTMLInputElement): void {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = '1';\r\n\r\n        input.addEventListener('input', Input._processInputting);\r\n\r\n        input.addEventListener('mousemove', Input._stopEvent, { passive: false });\r\n        input.addEventListener('mousedown', Input._stopEvent, { passive: false });\r\n        input.addEventListener('touchmove', Input._stopEvent, { passive: false });\r\n\r\n        (input as any).setFontFace = function (fontFace: string): void { input.style.fontFamily = fontFace; };\r\n        if (!(LayaEnv.isConch && !Input.isAppUseNewInput)) {\r\n            (input as any).setColor = function (color: string): void { input.style.color = color; };\r\n            (input as any).setFontSize = function (fontSize: number): void { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n\r\n    private static _processInputting(e: any): void {\r\n        var input: Input = (Input.inputElement as any).target;\r\n        if (!input) return;\r\n\r\n        var value = Input.inputElement.value;\r\n\r\n        // 对输入字符进行限制\r\n        if (input._restrictPattern) {\r\n            // 部分输入法兼容\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n\r\n        if (value == null) value = \"\";\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n\r\n    private static _stopEvent(e: any): void {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * 设置光标位置和选取字符。\r\n     * @param\tstartIndex\t光标起始位置。\r\n     * @param\tendIndex\t光标结束位置。\r\n     */\r\n    setSelection(startIndex: number, endIndex: number): void {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n\r\n    /**表示是否是多行输入框。*/\r\n    get multiline(): boolean {\r\n        return this._multiline;\r\n    }\r\n\r\n    set multiline(value: boolean) {\r\n        this._multiline = value;\r\n        this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n\r\n    /**\r\n     * 获取对输入框的引用实例。\r\n     */\r\n    get nativeInput(): HTMLInputElement | HTMLTextAreaElement {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n\r\n    private _onUnDisplay(e: Event = null): void {\r\n        this.focus = false;\r\n    }\r\n\r\n    private _onMouseDown(e: Event): void {\r\n        this.focus = true;\r\n    }\r\n    /**\r\n     * 在输入期间，如果 Input 实例的位置改变，调用_syncInputTransform同步输入框的位置。\r\n     */\r\n    private _syncInputTransform(): void {\r\n        var inputElement = this.nativeInput;\r\n        var transform = SpriteUtils.getTransformRelativeToWindow(this, this._padding[3], this._padding[0]);\r\n        var inputWid = this._width - this._padding[1] - this._padding[3];\r\n        var inputHei = this._height - this._padding[0] - this._padding[2];\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (inputElement as any).setScale(transform.scaleX, transform.scaleY);\r\n            (inputElement as any).setSize(inputWid, inputHei);\r\n            (inputElement as any).setPos(transform.x, transform.y);\r\n        } else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n\r\n    /**选中当前实例的所有文本。*/\r\n    select(): void {\r\n        this.nativeInput.select();\r\n    }\r\n\r\n    /**\r\n     * 表示焦点是否在此实例上。\r\n     */\r\n    get focus(): boolean {\r\n        return this._focus;\r\n    }\r\n\r\n    // 移动平台最后单击画布才会调用focus\r\n    // 因此 调用focus接口是无法都在移动平台立刻弹出键盘的\r\n    set focus(value: boolean) {\r\n        var input = this.nativeInput;\r\n\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if ((input as any).target) {\r\n                    (input as any).target._focusOut();\r\n                } else {\r\n                    this._setInputMethod();\r\n                }\r\n                input = this.nativeInput;\r\n                (input as any).target = this;\r\n                this._focusIn();\r\n            } else {\r\n                (input as any).target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n\r\n                if (LayaEnv.isConch && !Input.isAppUseNewInput) (input as any).setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input)) Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _setInputMethod(): void {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n\r\n        // 安卓的安全键盘的问题；\r\n        // 如果设置type='password' 则会弹安全键盘\r\n        // 就算以后设置type='text' 还是会弹安全键盘，所以对于安卓，干脆全部重新生成\r\n        if (ILaya.Browser.onAndroid) {\r\n            Input.input = Input.inputElement = ILaya.Browser.createElement('input');\r\n            Input._initInput(Input.input);\r\n        }\r\n\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n\r\n    private _focusIn(): void {\r\n        InputManager.isTextInputting = true;\r\n        var input = this.nativeInput;\r\n\r\n        Input.input && (Input.input.type = this._type);\t\t// 设置input控件的 password\r\n\r\n        this._focus = true;\r\n\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n\r\n        input.readOnly = !this._editable;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setType(this._type);\r\n            (input as any).setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars <= 0 ? 1E5 : this._maxChars;\r\n\r\n        input.value = this._text;\r\n        input.placeholder = this._prompt;\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n\r\n        // PC端直接调用focus进入焦点。\r\n        if (ILaya.Browser.onPC) input.focus();\r\n\r\n        // PC浏览器隐藏文字\r\n        if (!(LayaEnv.isConch && Input.isAppUseNewInput) && !ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            this.graphics.clear(true);\r\n            this.drawBg();\r\n            this._hideText = true;\r\n        }\r\n\r\n        // PC同步输入框外观。\r\n        (input as any).setColor(this.color);\r\n        (input as any).setFontSize(this.fontSize);\r\n        (input as any).setFontFace(this._realFont);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (input as any).setMultiAble && (input as any).setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n\r\n        // 输入框重定位。\r\n        this._syncInputTransform();\r\n        if (!LayaEnv.isConch && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n\r\n    // 设置DOM输入框提示符颜色。\r\n    private _setPromptColor(): void {\r\n        // 创建style标签\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n\r\n        // 设置style标签\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n\r\n    /**@private */\r\n    private _focusOut(): void {\r\n        if (!InputManager.isTextInputting) return;\r\n        if (!InputManager.isiOSWKwebView)\r\n            InputManager.isTextInputting = false;\r\n        this._focus = false;\r\n        this._hideText = false;\r\n\r\n        this.text = this.nativeInput.value;\r\n        this.markChanged();\r\n        this.typeset();\r\n\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) this.nativeInput.blur();\r\n        // 只有PC会注册此事件。\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n\r\n    /**@private */\r\n    private _onKeyDown(e: any): void {\r\n        if (e.keyCode === 13) {\r\n            // 移动平台单行输入状态下点击回车收回输入法。 \r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 小游戏专用(解决键盘输入框内容和游戏输入框内容不同步的bug)\r\n     * @param value \r\n     */\r\n    miniGameTxt(value: string) {\r\n        value += '';\r\n        if (!this._multiline)\r\n            value = value.replace(/\\r?\\n/g, '');\r\n        this.text = value;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set text(value: string) {\r\n        if (value == null)\r\n            value = \"\";\r\n        else if (typeof (value) !== \"string\")\r\n            value = '' + value;\r\n\r\n        if (this._focus) {\r\n            this.nativeInput.value = value;\r\n            this.event(Event.CHANGE);\r\n        } else {\r\n            // 单行时不允许换行\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n\r\n            super.text = value;\r\n        }\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get text(): string {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return super.text;\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set_color(value: string) {\r\n        if (this._focus)\r\n            (this.nativeInput as any).setColor(value);\r\n\r\n        super.set_color(value);\r\n    }\r\n\r\n    /**@inheritDoc \r\n     * @override\r\n    */\r\n    set bgColor(value: string) {\r\n        super.bgColor = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput)\r\n            (this.nativeInput as any).setBgColor(value);\r\n    }\r\n\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n\r\n    /**限制输入的字符。*/\r\n    get restrict(): string {\r\n        return this._restrict;\r\n    }\r\n\r\n    set restrict(value: string) {\r\n        this._restrict = value;\r\n        // H5保存RegExp\r\n        if (value) {\r\n            value = \"[^\" + value + \"]\";\r\n\r\n            // 如果pattern为^\\00-\\FF，则我们需要的正则表达式是\\00-\\FF\r\n            if (value.indexOf(\"^^\") > -1)\r\n                value = value.replace(\"^^\", \"\");\r\n\r\n            this._restrictPattern = new RegExp(value, \"g\");\r\n        } else\r\n            this._restrictPattern = null;\r\n    }\r\n\r\n    /**\r\n     * 是否可编辑。\r\n     */\r\n    set editable(value: boolean) {\r\n        this._editable = value;\r\n        if (LayaEnv.isConch && !Input.isAppUseNewInput) {\r\n            (Input.input as any).setForbidEdit(!value);\r\n        }\r\n    }\r\n\r\n    get editable(): boolean {\r\n        return this._editable;\r\n    }\r\n\r\n    /**\r\n     * <p>字符数量限制，默认为10000。</p>\r\n     * <p>设置字符数量限制时，小于等于0的值将会限制字符数量为10000。</p>\r\n     */\r\n    get maxChars(): number {\r\n        return this._maxChars;\r\n    }\r\n\r\n    set maxChars(value: number) {\r\n        this._maxChars = value;\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符。\r\n     */\r\n    get prompt(): string {\r\n        return this._prompt;\r\n    }\r\n\r\n    set prompt(value: string) {\r\n        value = Text.langPacks?.[value] || value;\r\n        if (this._prompt != value) {\r\n            this._prompt = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置输入提示符颜色。\r\n     */\r\n    get promptColor(): string {\r\n        return this._promptColor;\r\n    }\r\n\r\n    set promptColor(value: string) {\r\n        if (this._promptColor != value) {\r\n            this._promptColor = value;\r\n            this.markChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>输入框类型为Input静态常量之一。</p>\r\n     * <ul>\r\n     * <li>TYPE_TEXT</li>\r\n     * <li>TYPE_PASSWORD</li>\r\n     * <li>TYPE_EMAIL</li>\r\n     * <li>TYPE_URL</li>\r\n     * <li>TYPE_NUMBER</li>\r\n     * <li>TYPE_RANGE</li>\r\n     * <li>TYPE_DATE</li>\r\n     * <li>TYPE_MONTH</li>\r\n     * <li>TYPE_WEEK</li>\r\n     * <li>TYPE_TIME</li>\r\n     * <li>TYPE_DATE_TIME</li>\r\n     * <li>TYPE_DATE_TIME_LOCAL</li>\r\n     * </ul>\r\n     * <p>平台兼容性参见http://www.w3school.com.cn/html5/html_5_form_input_types.asp。</p>\r\n     */\r\n    get type(): string {\r\n        return this._type;\r\n    }\r\n\r\n    set type(value: string) {\r\n        this._asPassword = value === \"password\";\r\n        this._type = value;\r\n    }\r\n}","import { Component } from \"./Component\"\r\nimport { HideFlags } from \"../Const\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\n\r\n/**\r\n * 相对布局插件\r\n */\r\nexport class Widget extends Component {\r\n    /**一个已初始化的 <code>Widget</code> 实例。*/\r\n    static EMPTY: Widget = null;// new Widget();\r\n\r\n    private _top: number = null;\r\n    private _bottom: number = null;\r\n    private _left: number = null;\r\n    private _right: number = null;\r\n    private _centerX: number = null;\r\n    private _centerY: number = null;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.runInEditor = true;\r\n        this.hideFlags |= HideFlags.HideAndDontSave;\r\n    }\r\n\r\n    onReset(): void {\r\n        this._top = this._bottom = this._left = this._right = this._centerX = this._centerY = null;\r\n    }\r\n\r\n    protected _onEnable(): void {\r\n        if (this.owner.parent) this._onAdded();\r\n        else this.owner.once(Event.ADDED, this, this._onAdded);\r\n    }\r\n\r\n    protected _onDisable(): void {\r\n        this.owner.off(Event.ADDED, this, this._onAdded);\r\n        if (this.owner.parent) this.owner.parent.off(Event.RESIZE, this, this._onParentResize);\r\n    }\r\n\r\n    protected _onAdded(): void {\r\n        if (this.owner.parent)\r\n            this.owner.parent.on(Event.RESIZE, this, this._onParentResize);\r\n        this.resetLayoutX();\r\n        this.resetLayoutY();\r\n    }\r\n\r\n    /**\r\n     * 父容器的 <code>Event.RESIZE</code> 事件侦听处理函数。\r\n     */\r\n    protected _onParentResize(): void {\r\n        var flagX = this.resetLayoutX();\r\n        var flagY = this.resetLayoutY();\r\n        if (flagX || flagY) this.owner.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>X</code> 轴（水平方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutX(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerX != null) {\r\n                owner.x = Math.round((parent.width - owner.displayWidth) * 0.5 + this._centerX + owner.pivotX * owner.scaleX);\r\n            } else if (this._left != null) {\r\n                owner.x = Math.round(this._left + owner.pivotX * owner.scaleX);\r\n                if (this._right != null) {\r\n                    if (!parent._width) return false;\r\n                    //TODO:如果用width，会死循环\r\n                    var temp: number = (parent._width - this._left - this._right) / (owner.scaleX || 0.01);\r\n                    if (temp != owner._width) {\r\n                        owner.width = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._right != null) {\r\n                owner.x = Math.round(parent.width - owner.displayWidth - this._right + owner.pivotX * owner.scaleX);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * <p>重置对象的 <code>Y</code> 轴（垂直方向）布局。</p>\r\n     * @private\r\n     */\r\n    resetLayoutY(): boolean {\r\n        var owner: Sprite = (<Sprite>this.owner);\r\n        if (!owner) return false;\r\n        var parent: Sprite = (<Sprite>owner.parent);\r\n        if (parent) {\r\n            if (this._centerY != null) {\r\n                owner.y = Math.round((parent.height - owner.displayHeight) * 0.5 + this._centerY + owner.pivotY * owner.scaleY);\r\n            } else if (this._top != null) {\r\n                owner.y = Math.round(this._top + owner.pivotY * owner.scaleY);\r\n                if (this._bottom != null) {\r\n                    if (!parent._height) return false;\r\n                    //TODO:\r\n                    var temp: number = (parent._height - this._top - this._bottom) / (owner.scaleY || 0.01);\r\n                    if (temp != owner._height) {\r\n                        owner.height = temp;\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (this._bottom != null) {\r\n                owner.y = Math.round(parent.height - owner.displayHeight - this._bottom + owner.pivotY * owner.scaleY);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 重新计算布局\r\n     */\r\n    resetLayout(): void {\r\n        if (this.owner) {\r\n            this.resetLayoutX();\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距顶边的距离（以像素为单位）。*/\r\n    get top(): number {\r\n        return this._top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._top != value) {\r\n            this._top = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距底边的距离（以像素为单位）。*/\r\n    get bottom(): number {\r\n        return this._bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._bottom != value) {\r\n            this._bottom = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n\r\n    /**表示距左边的距离（以像素为单位）。*/\r\n    get left(): number {\r\n        return this._left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._left != value) {\r\n            this._left = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距右边的距离（以像素为单位）。*/\r\n    get right(): number {\r\n        return this._right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._right != value) {\r\n            this._right = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距水平方向中心轴的距离（以像素为单位）。*/\r\n    get centerX(): number {\r\n        return this._centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerX != value) {\r\n            this._centerX = value;\r\n            this.resetLayoutX();\r\n        }\r\n    }\r\n\r\n    /**表示距垂直方向中心轴的距离（以像素为单位）。*/\r\n    get centerY(): number {\r\n        return this._centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (isNaN(value)) //兼容2.0\r\n            value = null;\r\n        if (this._centerY != value) {\r\n            this._centerY = value;\r\n            this.resetLayoutY();\r\n        }\r\n    }\r\n}\r\n\r\nWidget.EMPTY = new Widget();\r\n","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Graphics } from \"../display/Graphics\"\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Point } from \"../maths/Point\"\r\nimport { Rectangle } from \"../maths/Rectangle\"\r\nimport { ClassUtils } from \"./ClassUtils\";\r\nimport { IHitArea } from \"./IHitArea\";\r\n\r\nconst _rect: Rectangle = new Rectangle();\r\nconst _ptPoint: Point = new Point();\r\n\r\n/**\r\n * 鼠标点击区域，可以设置绘制一系列矢量图作为点击区域和非点击区域（目前只支持圆形，矩形，多边形）\r\n *\r\n */\r\nexport class HitArea implements IHitArea {\r\n    _hit: Graphics;\r\n    _unHit: Graphics;\r\n\r\n    /**\r\n     * 检测对象是否包含指定的点。\r\n     * @param\tx\t点的 X 轴坐标值（水平位置）。\r\n     * @param\ty\t点的 Y 轴坐标值（垂直位置）。\r\n     * @return\t如果包含指定的点，则值为 true；否则为 false。\r\n     */\r\n    contains(x: number, y: number, sp: Sprite): boolean {\r\n        if (!HitArea._isHitGraphic(x, y, sp, this._hit))\r\n            return false;\r\n        return !HitArea._isHitGraphic(x, y, sp, this._unHit);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中Graphic\r\n     */\r\n    static _isHitGraphic(x: number, y: number, sp: Sprite, graphic: Graphics): boolean {\r\n        if (!graphic) return false;\r\n        let cmds = graphic.cmds;\r\n        if (cmds.length == 0) return false;\r\n        let len = cmds.length;\r\n        for (let i = 0; i < len; i++) {\r\n            let cmd = cmds[i];\r\n            if (!cmd) continue;\r\n            switch (cmd.cmdID) {\r\n                case \"Translate\":\r\n                    x -= cmd.tx;\r\n                    y -= cmd.ty;\r\n            }\r\n            if (HitArea._isHitCmd(x, y, sp, cmd)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 是否击中绘图指令\r\n     */\r\n    static _isHitCmd(x: number, y: number, sp: Sprite, cmd: any): boolean {\r\n        if (!cmd) return false;\r\n        var rst: boolean = false;\r\n        switch (cmd.cmdID) {\r\n            case \"DrawRect\":\r\n                if (cmd.percent)\r\n                    _rect.setTo(cmd.x * sp.width, cmd.y * sp.height, cmd.width * sp.width, cmd.height * sp.height);\r\n                else\r\n                    _rect.setTo(cmd.x, cmd.y, cmd.width, cmd.height);\r\n                rst = _rect.contains(x, y);\r\n                break;\r\n            case \"DrawCircle\":\r\n                let r = cmd.radius;\r\n                var d: number;\r\n                if (cmd.percent) {\r\n                    x -= cmd.x * sp.width;\r\n                    y -= cmd.y * sp.height;\r\n                    r *= sp.width;\r\n                }\r\n                else {\r\n                    x -= cmd.x;\r\n                    y -= cmd.y;\r\n                }\r\n                d = x * x + y * y;\r\n                rst = d < r * r;\r\n                break;\r\n            case \"DrawPoly\":\r\n                x -= cmd.x;\r\n                y -= cmd.y;\r\n                rst = HitArea._ptInPolygon(x, y, cmd.points);\r\n                break;\r\n        }\r\n        return rst;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 坐标是否在多边形内\r\n     */\r\n    static _ptInPolygon(x: number, y: number, areaPoints: any[]): boolean {\r\n        var p: Point = _ptPoint;\r\n        p.setTo(x, y);\r\n        // 交点个数\r\n        var nCross: number = 0;\r\n        var p1x: number, p1y: number, p2x: number, p2y: number;\r\n        var len: number;\r\n        len = areaPoints.length;\r\n        for (var i: number = 0; i < len; i += 2) {\r\n            p1x = areaPoints[i];\r\n            p1y = areaPoints[i + 1];\r\n            p2x = areaPoints[(i + 2) % len];\r\n            p2y = areaPoints[(i + 3) % len];\r\n            //var p1:Point = areaPoints[i];\r\n            //var p2:Point = areaPoints[(i + 1) % areaPoints.length]; // 最后一个点与第一个点连线\r\n            if (p1y == p2y) continue;\r\n            if (p.y < Math.min(p1y, p2y)) continue;\r\n            if (p.y >= Math.max(p1y, p2y)) continue;\r\n            // 求交点的x坐标\r\n            var tx: number = (p.y - p1y) * (p2x - p1x) / (p2y - p1y) + p1x;\r\n            // 只统计p1p2与p向右射线的交点\r\n            if (tx > p.x) nCross++;\r\n        }\r\n        // 交点为偶数，点在多边形之外\r\n        return (nCross % 2 == 1);\r\n    }\r\n\r\n    /**\r\n     * 可点击区域，可以设置绘制一系列矢量图作为点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get hit(): Graphics {\r\n        if (!this._hit) this._hit = new Graphics();\r\n        return this._hit;\r\n    }\r\n\r\n    set hit(value: Graphics) {\r\n        this._hit = value;\r\n    }\r\n\r\n    /**\r\n     * 不可点击区域，可以设置绘制一系列矢量图作为非点击区域（目前只支持圆形，矩形，多边形）\r\n     */\r\n    get unHit(): Graphics {\r\n        if (!this._unHit) this._unHit = new Graphics();\r\n        return this._unHit;\r\n    }\r\n\r\n    set unHit(value: Graphics) {\r\n        this._unHit = value;\r\n    }\r\n\r\n    onAfterDeserialize() {\r\n        if (LayaEnv.isPlaying) {\r\n            if ((<any>this)._hitCmds) {\r\n                this.hit.cmds = (<any>this)._hitCmds;\r\n                delete (<any>this)._hitCmds;\r\n            }\r\n\r\n            if ((<any>this)._unHitCmds) {\r\n                this.unHit.cmds = (<any>this)._unHitCmds;\r\n                delete (<any>this)._unHitCmds;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nClassUtils.regClass(\"HitArea\", HitArea);\r\n\r\n","import { Utils } from \"./Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 封装弱引用WeakMap\r\n * 如果支持WeakMap，则使用WeakMap，如果不支持，则用Object代替\r\n * 注意：如果采用Object，为了防止内存泄漏，则采用定时清理缓存策略\r\n * \r\n * 这里的设计是错误的，为了兼容，先不删掉这个类，直接采用Object\r\n */\r\nexport class WeakObject {\r\n    /**是否支持WeakMap*/\r\n    static supportWeakMap = false;\r\n    /**如果不支持WeakMap，则多少时间清理一次缓存，默认10分钟清理一次*/\r\n    static delInterval = 10 * 60 * 1000;\r\n    /**全局WeakObject单例*/\r\n    static I: WeakObject;\r\n    /**@private */\r\n    private static _maps: any[] = [];\r\n    /**@internal */\r\n    _obj: any;\r\n\r\n    /**@internal */\r\n    static __init__(): void {\r\n        WeakObject.I = new WeakObject();\r\n        //WeakObject.supportWeakMap = Browser.window.WeakMap != null;\r\n        //如果不支持，10分钟回收一次\r\n        if (!WeakObject.supportWeakMap) ILaya.systemTimer.loop(WeakObject.delInterval, null, WeakObject.clearCache);\r\n    }\r\n\r\n    /**清理缓存，回收内存*/\r\n    static clearCache(): void {\r\n        for (var i = 0, n = WeakObject._maps.length; i < n; i++) {\r\n            var obj = WeakObject._maps[i];\r\n            obj._obj = {};\r\n        }\r\n    }\r\n\r\n    constructor() {\r\n        this._obj = {};\r\n        WeakObject._maps.push(this);\r\n    }\r\n\r\n\t/**\r\n\t * 设置缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t * @param\tvalue object对象，可被回收\r\n\t */\r\n    set(key: any, value: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') {\r\n                this._obj[key as any] = value;\r\n            } else {\r\n                key.$_GID || (key.$_GID = Utils.getGID());\r\n                this._obj[key.$_GID] = value;\r\n            }\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取缓存\r\n\t * @param\tkey kye对象，可被回收\r\n\t */\r\n    get(key: any): any {\r\n        if (key == null) return null;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any];\r\n            return this._obj[key.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除缓存\r\n\t */\r\n    del(key: any): void {\r\n        if (key == null) return;\r\n        if (WeakObject.supportWeakMap) {\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') delete this._obj[key as any];\r\n            else delete this._obj[this._obj.$_GID];\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 是否有缓存\r\n\t */\r\n    has(key: any): boolean {\r\n        if (key == null) return false;\r\n        if (WeakObject.supportWeakMap) {\r\n            return false;\r\n        } else {\r\n            if (typeof (key) == 'string' || typeof (key) == 'number') return this._obj[key as any] != null;\r\n            return this._obj[this._obj.$_GID] != null;\r\n        }\r\n    }\r\n}\r\n\r\n//WeakObject.__init__();","import { LayaEnv } from \"../../LayaEnv\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { Resource } from \"./Resource\";\r\n\r\nexport class Prefab extends Resource {\r\n    public readonly version: number;\r\n    protected _deps: Array<Resource>;\r\n\r\n    /**@private */\r\n    json: any; //兼容2.0\r\n\r\n    constructor(version?: number) {\r\n        super();\r\n\r\n        this.version = version;\r\n        this._deps = [];\r\n    }\r\n\r\n    /**\r\n     * 创建实例\r\n     */\r\n    create(options?: Record<string, any>, errors?: Array<any>): Node {\r\n        if (this.json) //兼容2.0\r\n            return LegacyUIParser.createByData(null, this.json);\r\n        else\r\n            return null;\r\n    }\r\n\r\n    get deps(): ReadonlyArray<Resource> {\r\n        return this._deps;\r\n    }\r\n\r\n    addDep(res: Resource) {\r\n        if (res instanceof Resource) {\r\n            res._addReference();\r\n            this._deps.push(res);\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.on(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    addDeps(resArr: Array<Resource>) {\r\n        for (let res of resArr) {\r\n            if (res instanceof Resource) {\r\n                res._addReference();\r\n                this._deps.push(res);\r\n\r\n                if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                    res.on(\"obsolute\", this, this.onDepObsolute);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _disposeResource(): void {\r\n        for (let res of this._deps) {\r\n            res._removeReference();\r\n\r\n            if (!LayaEnv.isPlaying && (res instanceof Prefab))\r\n                res.off(\"obsolute\", this, this.onDepObsolute);\r\n        }\r\n    }\r\n\r\n    public get obsolute(): boolean {\r\n        return this._obsolute;\r\n    }\r\n\r\n    public set obsolute(value: boolean) {\r\n        if (this._obsolute != value) {\r\n            this._obsolute = value;\r\n            if (value && !LayaEnv.isPlaying)\r\n                this.event(\"obsolute\");\r\n        }\r\n    }\r\n\r\n    private onDepObsolute() {\r\n        this.obsolute = true;\r\n    }\r\n}\r\n\r\n//旧版本兼容\r\nexport type HierarchyResource = Prefab;\r\nexport var HierarchyResource = Prefab;","import { Component } from \"../components/Component\"\r\nimport { FrameAnimation } from \"../display/FrameAnimation\"\r\nimport { Node } from \"../display/Node\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Graphics } from \"../display/Graphics\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Matrix } from \"../maths/Matrix\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { HitArea } from \"../utils/HitArea\";\r\nimport { Pool } from \"../utils/Pool\";\r\nimport { WeakObject } from \"../utils/WeakObject\";\r\nimport { Handler } from \"laya/utils/Handler\";\r\nimport { NodeFlags } from \"../Const\";\r\nimport { PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar _listClass: any;\r\nvar _viewClass: any;\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nexport class LegacyUIParser {\r\n    /**@private */\r\n    private static _funMap: WeakObject;\r\n    /**@private */\r\n    private static _parseWatchData: RegExp = /\\${(.*?)}/g;\r\n    /**@private */\r\n    private static _parseKeyWord: RegExp = /[a-zA-Z_][a-zA-Z0-9_]*(?:(?:\\.[a-zA-Z_][a-zA-Z0-9_]*)+)/g;\r\n    /**@internal */\r\n    static _sheet: any;\r\n\r\n    static parse(data: any, options: any) {\r\n        let root: Sprite = options?.root;\r\n        if (!root) {\r\n            let runtime: string = (LayaEnv.isPlaying && data.props.runtime) ? data.props.runtime : data.type;\r\n            let clas = ClassUtils.getClass(runtime);\r\n\r\n            if (data.props.renderType == \"instance\")\r\n                root = clas.instance || (clas.instance = new clas());\r\n            else\r\n                root = new clas();\r\n        }\r\n\r\n        if (root && (<any>root)._viewCreated)\r\n            return root;\r\n\r\n        return LegacyUIParser.createByData(root, data);\r\n    }\r\n\r\n    /**\r\n     * @private 根据字符串，返回函数表达式\r\n     */\r\n    //TODO:coverage\r\n    static getBindFun(value: string): Function {\r\n        let map = LegacyUIParser._funMap;\r\n        if (!map)\r\n            map = LegacyUIParser._funMap = new WeakObject();\r\n        var fun: Function = LegacyUIParser._funMap.get(value);\r\n        if (fun == null) {\r\n            var temp: string = \"\\\"\" + value + \"\\\"\";\r\n            temp = temp.replace(/^\"\\${|}\"$/g, \"\").replace(/\\${/g, \"\\\"+\").replace(/}/g, \"+\\\"\");\r\n            var str: string = \"(function(data){if(data==null)return;with(data){try{\\nreturn \" + temp + \"\\n}catch(e){}}})\";\r\n            fun = (window as any).Laya._runScript(str);\r\n            LegacyUIParser._funMap.set(value, fun);\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    //TODO:coverage\r\n    static createByData(root: Sprite, uiView: any): Sprite {\r\n        var tInitTool: InitTool = InitTool.create();\r\n\r\n        //递归创建节点\r\n        root = LegacyUIParser.createComp(uiView, root, root, null, tInitTool);\r\n        if (\"_idMap\" in root) {\r\n            (<any>root)[\"_idMap\"] = tInitTool._idMap;\r\n        }\r\n\r\n        //处理动画信息\r\n        if (uiView.animations) {\r\n            var anilist: any[] = [];\r\n            var animations: any[] = uiView.animations;\r\n            var i: number, len: number = animations.length;\r\n            var tAni: FrameAnimation;\r\n            var tAniO: any;\r\n            for (i = 0; i < len; i++) {\r\n                tAni = new FrameAnimation();\r\n                tAniO = animations[i];\r\n                tAni._setUp(tInitTool._idMap, tAniO);\r\n                (<any>root)[tAniO.name] = tAni;\r\n                tAni._setControlNode(root);\r\n                switch (tAniO.action) {\r\n                    case 1:\r\n                        tAni.play(0, false);\r\n                        break;\r\n                    case 2:\r\n                        tAni.play(0, true);\r\n                        break;\r\n                }\r\n                anilist.push(tAni);\r\n            }\r\n            (<any>root)._aniList = anilist;\r\n        }\r\n\r\n        //设置页面穿透\r\n        if ((root instanceof Scene) && root._width > 0 && uiView.props.hitTestPrior == null && !root.mouseThrough)\r\n            root.hitTestPrior = true;\r\n\r\n        //设置组件\r\n        tInitTool.finish();\r\n        root._setBit(NodeFlags.NOT_READY, false);\r\n        if (root.parent && root.parent.activeInHierarchy && root.active)\r\n            root._processActive(true);\r\n        return root;\r\n    }\r\n\r\n    static createInitTool(): InitTool {\r\n        return InitTool.create();\r\n    }\r\n\r\n    /**\r\n     * 根据UI数据实例化组件。\r\n     * @param uiView UI数据。\r\n     * @param comp 组件本体，如果为空，会新创建一个。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     * @return 一个 Component 对象。\r\n     */\r\n    static createComp(uiView: any, comp: Sprite = null, view: Sprite = null, dataMap: any[] = null, initTool: InitTool = null): any {\r\n        comp = comp || LegacyUIParser.getCompInstance(uiView);\r\n        if (!comp) {\r\n            if (uiView.props && uiView.props.runtime)\r\n                console.warn(\"runtime not found:\" + uiView.props.runtime);\r\n            else\r\n                console.warn(\"can not create:\" + uiView.type);\r\n            return null;\r\n        }\r\n\r\n        var child: any[] = uiView.child;\r\n        if (child) {\r\n            var isList: boolean = comp instanceof (_listClass || (_listClass = ClassUtils.getClass(\"List\")));\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var node: any = child[i];\r\n                if ('itemRender' in comp && (node.props.name == \"render\" || node.props.renderType === \"render\")) {\r\n                    //如果list的itemRender\r\n                    (<any>comp)[\"itemRender\"] = node;\r\n                } else if (node.type == \"Graphic\") {\r\n                    //绘制矢量图\r\n                    this._addGraphicsToSprite(node, comp);\r\n                } else if (this._isDrawType(node.type)) {\r\n                    this._addGraphicToSprite(node, comp, true);\r\n                } else {\r\n                    if (isList) {\r\n                        //收集数据绑定信息\r\n                        var arr: any[] = [];\r\n                        var tChild: any = LegacyUIParser.createComp(node, null, view, arr, initTool);\r\n                        if (arr.length)\r\n                            tChild[\"_$bindData\"] = arr;\r\n                    } else {\r\n                        tChild = LegacyUIParser.createComp(node, null, view, dataMap, initTool);\r\n                    }\r\n\r\n                    //处理脚本\r\n                    if (node.type == \"Script\") {\r\n                        if (tChild instanceof Component) {\r\n                            comp.addComponentInstance(tChild);\r\n                        } else {\r\n                            //兼容老版本\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = comp;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = comp;\r\n                            }\r\n                        }\r\n                    } else if (node.props.renderType == \"mask\" || node.props.name == \"mask\") {\r\n                        comp.mask = tChild;\r\n                    } else {\r\n                        tChild instanceof Node && comp.addChild(tChild);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var props: any = uiView.props;\r\n        for (var prop in props) {\r\n            var value: any = props[prop];\r\n            if (typeof (value) == 'string' && (value.indexOf(\"@node:\") >= 0 || value.indexOf(\"@Prefab:\") >= 0)) {\r\n                if (initTool) {\r\n                    initTool.addNodeRef(comp, prop, <string>value);\r\n                }\r\n            } else\r\n                LegacyUIParser.setCompValue(comp, prop, value, view, dataMap);\r\n        }\r\n\r\n        if ((<any>comp)._afterInited) {\r\n            //if (initTool) {\r\n            //initTool.addInitItem(comp);\r\n            //} else {\r\n            (<any>comp)._afterInited();\r\n            //}\r\n        }\r\n\r\n        if (uiView.compId && initTool && initTool._idMap) {\r\n            initTool._idMap[uiView.compId] = comp;\r\n        }\r\n\r\n        return comp;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置组件的属性值。\r\n     * @param comp 组件实例。\r\n     * @param prop 属性名称。\r\n     * @param value 属性值。\r\n     * @param view 组件所在的视图实例，用来注册var全局变量，如果值为空则不注册。\r\n     */\r\n    private static setCompValue(comp: any, prop: string, value: any, view: any = null, dataMap: any[] = null): void {\r\n        //处理数据绑定\r\n        if (typeof (value) == 'string' && value.indexOf(\"${\") > -1) {\r\n            LegacyUIParser._sheet || (LegacyUIParser._sheet = ClassUtils.getClass(\"laya.data.Table\"));\r\n            if (!LegacyUIParser._sheet) {\r\n                console.warn(\"Can not find class Sheet\");\r\n                return;\r\n            }\r\n            //list的item处理\r\n            if (dataMap) {\r\n                dataMap.push(comp, prop, value);\r\n            } else if (view) {\r\n                if (value.indexOf(\"].\") == -1) {\r\n                    //TODO\r\n                    value = value.replace(\".\", \"[0].\");\r\n                }\r\n                var watcher: DataWatcher = new DataWatcher(comp, prop, value);\r\n\r\n                //执行第一次数据赋值\r\n                watcher.exe(view);\r\n                var one: any[], temp: any[];\r\n                var str: string = value.replace(/\\[.*?\\]\\./g, \".\");\r\n                while ((one = LegacyUIParser._parseWatchData.exec(str)) != null) {\r\n                    var key1: string = one[1];\r\n                    while ((temp = LegacyUIParser._parseKeyWord.exec(key1)) != null) {\r\n                        var key2: string = temp[0];\r\n                        var arr: any[] = (view._watchMap[key2] || (view._watchMap[key2] = []));\r\n                        arr.push(watcher);\r\n                        //监听数据变化\r\n                        LegacyUIParser._sheet.I.notifer.on(key2, view, view.changeData, [key2]);\r\n                    }\r\n                    //TODO\r\n                    arr = (view._watchMap[key1] || (view._watchMap[key1] = []));\r\n                    arr.push(watcher);\r\n                    LegacyUIParser._sheet.I.notifer.on(key1, view, view.changeData, [key1]);\r\n                }\r\n                //trace(view._watchMap);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (prop === \"var\" && view) {\r\n            view[value] = comp;\r\n        } else {\r\n            comp[prop] = (value === \"true\" ? true : (value === \"false\" ? false : value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 通过组建UI数据，获取组件实例。\r\n     * @param json UI数据。\r\n     * @return Component 对象。\r\n     */\r\n    static getCompInstance(json: any): any {\r\n        if (json.type == \"UIView\") {\r\n            if (json.props && json.props.pageData) {\r\n                return LegacyUIParser.createByData(null, json.props.pageData);\r\n            }\r\n        }\r\n        var runtime: string = LayaEnv.isPlaying ? ((json.props && json.props.runtime) || json.type) : json.type;\r\n        var compClass = ClassUtils.getClass(runtime);\r\n        if (!compClass) throw \"Can not find class \" + runtime;\r\n        if (json.type === \"Script\" && compClass.prototype._doAwake) {\r\n            var comp: any = Pool.createByClass(compClass);\r\n            comp._destroyed = false;\r\n            return comp;\r\n        }\r\n        if (json.props && \"renderType\" in json.props && json.props[\"renderType\"] == \"instance\") {\r\n            if (!(compClass as any)[\"instance\"]) (compClass as any)[\"instance\"] = new compClass();\r\n            return (compClass as any)[\"instance\"];\r\n        }\r\n\r\n        let ret = new compClass();\r\n        if (ret instanceof (_viewClass || (_viewClass = ClassUtils.getClass(\"View\")))) //3.0取消了View的_scene属性，因为它不应该是一个scene。但兼容2.0的代码，这里补回去\r\n            (<any>ret)._scene = ret;\r\n        return ret;\r\n    }\r\n\r\n    public static collectResourceLinks(uiView: any) {\r\n        let test = new Set();\r\n        let innerUrls: string[] = [];\r\n\r\n        function addInnerUrl(url: string) {\r\n            if (!test.has(url)) {\r\n                test.add(url);\r\n                innerUrls.push(url);\r\n            }\r\n        }\r\n\r\n        function check(uiView: any) {\r\n            let props: any = uiView.props;\r\n            for (let prop in props) {\r\n                let value: any = props[prop];\r\n                if (typeof (value) == 'string' && value.indexOf(\"@Prefab:\") >= 0) {\r\n                    let url = value.replace(\"@Prefab:\", \"\");\r\n                    addInnerUrl(url);\r\n                }\r\n            }\r\n\r\n            let child: any[] = uiView.child;\r\n            if (child) {\r\n                for (let i: number = 0, n: number = child.length; i < n; i++) {\r\n                    let node: any = child[i];\r\n                    check(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (uiView.loadList) {\r\n            for (let url of uiView.loadList)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        if (uiView.loadList3D) {\r\n            for (let url of uiView.loadList3D)\r\n                addInnerUrl(url);\r\n        }\r\n\r\n        check(uiView);\r\n        return innerUrls;\r\n    }\r\n\r\n    /**\r\n     * 根据指定的 json 数据创建节点对象。\r\n     * 比如:\r\n     * {\r\n     * \t\"type\":\"Sprite\",\r\n     * \t\"props\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"customProps\":{\r\n     * \t\t\"x\":100,\r\n     * \t\t\"y\":50,\r\n     * \t\t\"name\":\"item1\",\r\n     * \t\t\"scale\":[2,2]\r\n     * \t},\r\n     * \t\"child\":[\r\n     * \t\t{\r\n     * \t\t\t\"type\":\"Text\",\r\n     * \t\t\t\"props\":{\r\n     * \t\t\t\t\"text\":\"this is a test\",\r\n     * \t\t\t\t\"var\":\"label\",\r\n     * \t\t\t\t\"rumtime\":\"\"\r\n     * \t\t\t}\r\n     * \t\t}\r\n     * \t]\r\n     * }\r\n     * @param\tjson json字符串或者Object对象。\r\n     * @param\tnode node节点，如果为空，则新创建一个。\r\n     * @param\troot 根节点，用来设置var定义。\r\n     * @return\t生成的节点。\r\n     */\r\n    static createByJson(json: any, node: any = null, root: Node = null, customHandler: Handler = null, instanceHandler: Handler = null): any {\r\n        if (typeof (json) == 'string') json = JSON.parse((<string>json));\r\n        var props: any = json.props;\r\n\r\n        if (!node) {\r\n            node = instanceHandler ? instanceHandler.runWith(json) : ClassUtils.getInstance(LayaEnv.isPlaying ? (props.runtime || json.type) : json.type);\r\n            if (!node) return null;\r\n        }\r\n\r\n        var child: any[] = json.child;\r\n        if (child) {\r\n            for (var i: number = 0, n: number = child.length; i < n; i++) {\r\n                var data: any = child[i];\r\n                if ((data.props.name === \"render\" || data.props.renderType === \"render\") && node[\"_$set_itemRender\"])\r\n                    node.itemRender = data;\r\n                else {\r\n                    if (data.type == \"Graphic\") {\r\n                        this._addGraphicsToSprite(data, node);\r\n                    } else if (this._isDrawType(data.type)) {\r\n                        this._addGraphicToSprite(data, node, true);\r\n                    } else {\r\n                        var tChild: any = this.createByJson(data, null, root, customHandler, instanceHandler)\r\n                        if (data.type === \"Script\") {\r\n                            if (\"owner\" in tChild) {\r\n                                tChild[\"owner\"] = node;\r\n                            } else if (\"target\" in tChild) {\r\n                                tChild[\"target\"] = node;\r\n                            }\r\n                        } else if (data.props.renderType == \"mask\") {\r\n                            node.mask = tChild;\r\n                        } else {\r\n                            node.addChild(tChild);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (props) {\r\n            for (var prop in props) {\r\n                var value: any = props[prop];\r\n                if (prop === \"var\" && root) {\r\n                    (root as any)[value] = node;\r\n                } else if (value instanceof Array && node[prop] instanceof Function) {\r\n                    node[prop].apply(node, value);\r\n                } else {\r\n                    node[prop] = value;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (customHandler && json.customProps) {\r\n            customHandler.runWith([node, json]);\r\n        }\r\n\r\n        if (node[\"created\"]) node.created();\r\n\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic对象添加到Sprite上\r\n     * @param graphicO graphic对象描述\r\n     */\r\n    static _addGraphicsToSprite(graphicO: any, sprite: Sprite): void {\r\n        var graphics: any[] = graphicO.child;\r\n        if (!graphics || graphics.length < 1) return;\r\n        var g: Graphics = this._getGraphicsFromSprite(graphicO, sprite);\r\n        var ox: number = 0;\r\n        var oy: number = 0;\r\n        if (graphicO.props) {\r\n            ox = this._getObjVar(graphicO.props, \"x\", 0);\r\n            oy = this._getObjVar(graphicO.props, \"y\", 0);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(ox, oy);\r\n        }\r\n        var i: number, len: number;\r\n        len = graphics.length;\r\n        for (i = 0; i < len; i++) {\r\n            this._addGraphicToGraphics(graphics[i], g);\r\n        }\r\n        if (ox != 0 && oy != 0) {\r\n            g.translate(-ox, -oy);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 将graphic绘图指令添加到sprite上\r\n     * @param graphicO 绘图指令描述\r\n     */\r\n    static _addGraphicToSprite(graphicO: any, sprite: Sprite, isChild: boolean = false): void {\r\n        var g: Graphics = isChild ? this._getGraphicsFromSprite(graphicO, sprite) : sprite.graphics;\r\n        this._addGraphicToGraphics(graphicO, g);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getGraphicsFromSprite(dataO: any, sprite: Sprite): Graphics {\r\n        if (!dataO || !dataO.props) return sprite.graphics;\r\n        var propsName: string = dataO.props.renderType;\r\n        if (propsName === \"hit\" || propsName === \"unHit\") {\r\n            var hitArea: HitArea = <HitArea>sprite._style.hitArea || (sprite.hitArea = new HitArea());\r\n            if (!hitArea[propsName]) {\r\n                hitArea[propsName] = new Graphics();\r\n            }\r\n            var g: Graphics = hitArea[propsName];\r\n        }\r\n        if (!g) g = sprite.graphics;\r\n        return g;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getTransformData(propsO: any): Matrix {\r\n        var m: Matrix;\r\n\r\n        if (\"pivotX\" in propsO || \"pivotY\" in propsO) {\r\n            m = m || new Matrix();\r\n            m.translate(-this._getObjVar(propsO, \"pivotX\", 0), -this._getObjVar(propsO, \"pivotY\", 0));\r\n        }\r\n\r\n        var sx: number = this._getObjVar(propsO, \"scaleX\", 1), sy: number = this._getObjVar(propsO, \"scaleY\", 1);\r\n        var rotate: number = this._getObjVar(propsO, \"rotation\", 0);\r\n        var skewX: number = this._getObjVar(propsO, \"skewX\", 0);\r\n        var skewY: number = this._getObjVar(propsO, \"skewY\", 0);\r\n\r\n        if (sx != 1 || sy != 1 || rotate != 0) {\r\n            m = m || new Matrix();\r\n            m.scale(sx, sy);\r\n            m.rotate(rotate * 0.0174532922222222);\r\n        }\r\n\r\n        return m;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _addGraphicToGraphics(graphicO: any, graphic: Graphics): void {\r\n        var propsO: any;\r\n        propsO = graphicO.props;\r\n        if (!propsO) return;\r\n        var drawConfig: any;\r\n        drawConfig = this.DrawTypeDic[graphicO.type];\r\n        if (!drawConfig) return;\r\n\r\n        var g: Graphics = graphic;\r\n        var params: any = this._getParams(propsO, drawConfig[1], drawConfig[2], drawConfig[3]);\r\n        var m: Matrix = this._tM;\r\n        if (m || this._alpha != 1) {\r\n            g.save();\r\n            if (m) g.transform(m);\r\n            if (this._alpha != 1) g.alpha(this._alpha);\r\n        }\r\n        (g as any)[drawConfig[0]].apply(g, params);\r\n        if (m || this._alpha != 1) {\r\n            g.restore();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLineData(params: any[]): any[] {\r\n        params[2] = parseFloat(params[0]) + parseFloat(params[2]);\r\n        params[3] = parseFloat(params[1]) + parseFloat(params[3]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptTextureData(params: any[]): any[] {\r\n        params[0] = ILaya.Loader.getRes(params[0]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _adptLinesData(params: any[]): any[] {\r\n        params[2] = this._getPointListByStr(params[2]);\r\n        return params;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _isDrawType(type: string): boolean {\r\n        if (type === \"Image\") return false;\r\n        return type in this.DrawTypeDic;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getParams(obj: any, params: any[], xPos: number = 0, adptFun: string = null): any[] {\r\n        var rst: any = this._temParam;\r\n        rst.length = params.length;\r\n        var i: number, len: number;\r\n        len = params.length;\r\n        for (i = 0; i < len; i++) {\r\n            rst[i] = this._getObjVar(obj, params[i][0], params[i][1]);\r\n        }\r\n        this._alpha = this._getObjVar(obj, \"alpha\", 1);\r\n        var m: Matrix;\r\n        m = this._getTransformData(obj);\r\n        if (m) {\r\n            if (!xPos) xPos = 0;\r\n\r\n            m.translate(rst[xPos], rst[xPos + 1]);\r\n            rst[xPos] = rst[xPos + 1] = 0;\r\n            this._tM = m;\r\n        } else {\r\n            this._tM = null;\r\n        }\r\n        if (adptFun && (this as any)[adptFun]) {\r\n            rst = (this as any)[adptFun](rst);\r\n        }\r\n        return rst;\r\n    }\r\n    /**@private */\r\n    private static DrawTypeDic: any = { \"Rect\": [\"drawRect\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Circle\": [\"drawCircle\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Pie\": [\"drawPie\", [[\"x\", 0], [\"y\", 0], [\"radius\", 0], [\"startAngle\", 0], [\"endAngle\", 0], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]]], \"Image\": [\"drawTexture\", [[\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]]], \"Texture\": [\"drawTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0]], 1, \"_adptTextureData\"], \"FillTexture\": [\"fillTexture\", [[\"skin\", null], [\"x\", 0], [\"y\", 0], [\"width\", 0], [\"height\", 0], [\"repeat\", null]], 1, \"_adptTextureData\"], \"FillText\": [\"fillText\", [[\"text\", \"\"], [\"x\", 0], [\"y\", 0], [\"font\", null], [\"color\", null], [\"textAlign\", null]], 1], \"Line\": [\"drawLine\", [[\"x\", 0], [\"y\", 0], [\"toX\", 0], [\"toY\", 0], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLineData\"], \"Lines\": [\"drawLines\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Curves\": [\"drawCurves\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"lineColor\", null], [\"lineWidth\", 0]], 0, \"_adptLinesData\"], \"Poly\": [\"drawPoly\", [[\"x\", 0], [\"y\", 0], [\"points\", \"\"], [\"fillColor\", null], [\"lineColor\", null], [\"lineWidth\", 1]], 0, \"_adptLinesData\"] };\r\n    /**@private */\r\n    private static _temParam: any[] = [];\r\n    /**@private */\r\n    private static _tM: Matrix;\r\n    /**@private */\r\n    private static _alpha: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getPointListByStr(str: string): any[] {\r\n        var pointArr: any[] = str.split(\",\");\r\n        var i: number, len: number;\r\n        len = pointArr.length;\r\n        for (i = 0; i < len; i++) {\r\n            pointArr[i] = parseFloat(pointArr[i]);\r\n        }\r\n        return pointArr;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    private static _getObjVar(obj: any, key: string, noValue: any): any {\r\n        if (key in obj) {\r\n            return obj[key];\r\n        }\r\n        return noValue;\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass DataWatcher {\r\n    comp: any;\r\n    prop: string;\r\n    value: string;\r\n\r\n    //TODO:coverage\r\n    constructor(comp: any, prop: string, value: string) {\r\n        this.comp = comp;\r\n        this.prop = prop;\r\n        this.value = value;\r\n    }\r\n\r\n    exe(view: any): void {\r\n        var fun: Function = LegacyUIParser.getBindFun(this.value);\r\n        this.comp[this.prop] = fun.call(this, view);\r\n    }\r\n}\r\n\r\n/**\r\n * @private 场景辅助类\r\n */\r\nclass InitTool {\r\n    /**@private */\r\n    private _nodeRefList: any[];\r\n    /**@private */\r\n    private _initList: any[];\r\n    /**@internal */\r\n    _idMap: { [key: string]: Sprite };\r\n\r\n    //TODO:coverage\r\n    reset(): void {\r\n        this._nodeRefList = null;\r\n        this._initList = null;\r\n        this._idMap = null;\r\n    }\r\n\r\n    //TODO:coverage\r\n    recover(): void {\r\n        this.reset();\r\n        Pool.recover(\"InitTool\", this);\r\n    }\r\n\r\n    static create(): InitTool {\r\n        var tool: InitTool = Pool.getItemByClass(\"InitTool\", InitTool);\r\n        tool._idMap = {};\r\n        return tool;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addNodeRef(node: any, prop: string, referStr: string): void {\r\n        if (!this._nodeRefList) this._nodeRefList = [];\r\n        this._nodeRefList.push([node, prop, referStr]);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    setNodeRef(): void {\r\n        if (!this._nodeRefList) return;\r\n        if (!this._idMap) {\r\n            this._nodeRefList = null;\r\n            return;\r\n        }\r\n        var i: number, len: number;\r\n        len = this._nodeRefList.length;\r\n        var tRefInfo: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tRefInfo = this._nodeRefList[i];\r\n            tRefInfo[0][tRefInfo[1]] = this.getReferData(tRefInfo[2]);\r\n        }\r\n        this._nodeRefList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    getReferData(referStr: string): any {\r\n        if (referStr.indexOf(\"@Prefab:\") >= 0) {\r\n            return new PrefabImpl(LegacyUIParser, Loader.getRes(referStr.replace(\"@Prefab:\", \"\")), 2);\r\n        } else if (referStr.indexOf(\"@arr:\") >= 0) {\r\n            referStr = referStr.replace(\"@arr:\", \"\");\r\n            var list: string[];\r\n            list = referStr.split(\",\");\r\n            var i: number, len: number;\r\n            var tStr: string;\r\n            len = list.length;\r\n            var list2: Sprite[] = [];\r\n            for (i = 0; i < len; i++) {\r\n                tStr = list[i];\r\n                if (tStr) {\r\n                    list2.push(this._idMap[tStr.replace(\"@node:\", \"\")]);\r\n                } else {\r\n                    list2.push(null);\r\n                }\r\n            }\r\n            return list2;\r\n        } else {\r\n            return this._idMap[referStr.replace(\"@node:\", \"\")];\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    addInitItem(item: any): void {\r\n        if (!this._initList) this._initList = [];\r\n        this._initList.push(item);\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    doInits(): void {\r\n        if (!this._initList) return;\r\n        this._initList = null;\r\n    }\r\n\r\n    /**@private */\r\n    //TODO:coverage\r\n    finish(): void {\r\n        this.setNodeRef();\r\n        this.doInits();\r\n        this.recover();\r\n    }\r\n}","import { Node } from \"../display/Node\";\r\nimport { ILoadURL } from \"../net/Loader\";\r\nimport { Prefab } from \"./HierarchyResource\";\r\n\r\n/**\r\n * 层次结构分析器API\r\n */\r\nexport interface IHierarchyParserAPI {\r\n    /**收集资源链接 */\r\n    collectResourceLinks: (data: any, basePath: string) => (string | ILoadURL)[],\r\n    /**解析 */\r\n    parse: (data: any, options?: Record<string, any>, errors?: Array<any>) => Array<Node> | Node;\r\n}\r\n\r\n/**\r\n * 预制体导入\r\n */\r\nexport class PrefabImpl extends Prefab {\r\n    /**数据 */\r\n    data: any;\r\n    /**层次结构API */\r\n    api: IHierarchyParserAPI;\r\n\r\n    /**\r\n     * 实例化一个预制体\r\n     * @param api 层次结构API\r\n     * @param data 数据\r\n     * @param version 版本\r\n     */\r\n    constructor(api: IHierarchyParserAPI, data: any, version: number) {\r\n        super(version);\r\n\r\n        this.api = api;\r\n        this.data = data;\r\n    }\r\n\r\n    /**\r\n     * 创建一个\r\n     * @param options \r\n     * @param errors \r\n     * @returns \r\n     */\r\n    create(options?: Record<string, any>, errors?: any[]): Node {\r\n        let ret = this.api.parse(this.data, options, errors);\r\n        if (Array.isArray(ret)) {\r\n            if (ret.length == 1) {\r\n                ret[0].url = this.url;\r\n            }\r\n            return ret[0];\r\n        }\r\n        else {\r\n            ret.url = this.url;\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n","import { Sprite } from \"./Sprite\";\r\nimport { Widget } from \"../components/Widget\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Resource } from \"../resource/Resource\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Timer } from \"../utils/Timer\"\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { LegacyUIParser } from \"../loaders/LegacyUIParser\";\r\nimport { NodeFlags } from \"../Const\";\r\n\r\n/**\r\n * 场景类，负责场景创建，加载，销毁等功能\r\n * 场景被从节点移除后，并不会被自动垃圾机制回收，如果想回收，请调用destroy接口，可以通过unDestroyedScenes属性查看还未被销毁的场景列表\r\n */\r\nexport class Scene extends Sprite {\r\n    /**创建后，还未被销毁的场景列表，方便查看还未被销毁的场景列表，方便内存管理，本属性只读，请不要直接修改*/\r\n    static readonly unDestroyedScenes: Set<Scene> = new Set();\r\n    /**获取根节点*/\r\n    private static _root: Sprite;\r\n    /**@private */\r\n    private static _loadPage: Sprite;\r\n\r\n    /**场景被关闭后，是否自动销毁（销毁节点和使用到的资源），默认为false*/\r\n    autoDestroyAtClosed: boolean = false;\r\n    /**@internal */\r\n    _idMap?: any;\r\n    _scene3D: any;\r\n\r\n    /**@private 相对布局组件*/\r\n    protected _widget: Widget;\r\n\r\n    /**场景时钟*/\r\n    private _timer: Timer;\r\n    /**@private */\r\n    private _viewCreated: boolean = false;\r\n\r\n    constructor(createChildren = true) {\r\n        super();\r\n\r\n        this._timer = ILaya.timer;\r\n        this._widget = Widget.EMPTY;\r\n\r\n        this._scene = this;\r\n        if (createChildren)\r\n            this.createChildren();\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     */\r\n    protected createChildren(): void {\r\n    }\r\n\r\n    /**\r\n     * 兼容加载模式\r\n     * 加载模式设置uimap\r\n     * @param url uimapJosn的url\r\n     */\r\n    static setUIMap(url: string): void {\r\n        let uimap = ILaya.loader.getRes(url);\r\n        if (uimap) {\r\n            for (let key in uimap) {\r\n                ILaya.Loader.loadedMap[key + \".scene\"] = uimap[key];\r\n            }\r\n        } else {\r\n            throw \"请提前加载uimap的json，再使用该接口设置！\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 装载场景视图。用于加载模式。\r\n     * @param path 场景地址。\r\n     */\r\n    loadScene(path: string): void {\r\n        Scene.unDestroyedScenes.add(this);\r\n        let url: string = path.indexOf(\".\") > -1 ? path : path + \".scene\";\r\n        let content: Prefab = ILaya.loader.getRes(url);\r\n        if (content) {\r\n            if (!this._viewCreated) {\r\n                content.create({ root: this });\r\n                this._viewCreated = true;\r\n                Scene.unDestroyedScenes.add(this);\r\n            }\r\n        } else {\r\n            this._setBit(NodeFlags.NOT_READY, true);\r\n            ILaya.loader.load(url, null, value => {\r\n                if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            }).then((content: Prefab) => {\r\n                if (!content) throw \"Can not find scene:\" + path;\r\n                if (!this._viewCreated) {\r\n                    this.url = url;\r\n                    Scene.hideLoadingPage();\r\n\r\n                    content.create({ root: this });\r\n                    this._viewCreated = true;\r\n                    Scene.unDestroyedScenes.add(this);\r\n                }\r\n                else\r\n                    this._setBit(NodeFlags.NOT_READY, false);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private 兼容老项目\r\n     * 通过视图数据创建视图。\r\n     * @param uiView 视图数据信息。\r\n     */\r\n    createView(view: any): void {\r\n        if (view && !this._viewCreated) {\r\n            this._viewCreated = true;\r\n            LegacyUIParser.createByData(this, view);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 根据IDE内的节点id，获得节点实例\r\n    */\r\n    getNodeByID(id: number): any {\r\n        if (this._idMap) return this._idMap[id];\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 打开场景。【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选）\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     */\r\n    open(closeOther: boolean = true, param: any = null): void {\r\n        if (closeOther) Scene.closeAll();\r\n        Scene.root.addChild(this);\r\n        if (this._scene3D)\r\n            ILaya.stage.addChildAt(this._scene3D, 0);\r\n        this.onOpened(param);\r\n    }\r\n\r\n    /**场景打开完成后，调用此方法（如果有弹出动画，则在动画完成后执行）*/\r\n    onOpened(param: any): void {\r\n        //trace(\"onOpened\");\r\n    }\r\n\r\n    /**\r\n     * 关闭场景\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param type 关闭的原因，会传递给onClosed函数\r\n     */\r\n    close(type: string = null): void {\r\n        this.onClosed(type);\r\n        if (this.autoDestroyAtClosed) {\r\n            this.destroy();\r\n            if (this._scene3D)\r\n                this._scene3D.destroy();\r\n        }\r\n        else {\r\n            this.removeSelf();\r\n            if (this._scene3D)\r\n                this._scene3D.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭完成后，调用此方法（如果有关闭动画，则在动画完成后执行）\r\n     * @param type 如果是点击默认关闭按钮触发，则传入关闭按钮的名字(name)，否则为null。\r\n     */\r\n    onClosed(type: string = null): void {\r\n        //trace(\"onClosed\");\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    destroy(destroyChild: boolean = true): void {\r\n        super.destroy(destroyChild);\r\n        if (this._scene3D) {\r\n            this._scene3D.destroy();\r\n            this._scene3D = null;\r\n        }\r\n\r\n        this._idMap = null;\r\n        Scene.unDestroyedScenes.delete(this);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        if (this._isWidthSet) return this._width;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_height(): number {\r\n        if (this._isHeightSet) return this._height;\r\n        var max: number = 0;\r\n        for (var i: number = this.numChildren - 1; i > -1; i--) {\r\n            var comp: Sprite = (<Sprite>this.getChildAt(i));\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n\r\n    /**\r\n     * 场景时钟\r\n     * @override\r\n     */\r\n    get timer(): Timer {\r\n        return this._timer;\r\n    }\r\n\r\n    set timer(value: Timer) {\r\n        this._timer = value;\r\n    }\r\n\r\n    /**\r\n     * 场景包含的3D场景实例\r\n     */\r\n    get scene3D() {\r\n        return this._scene3D;\r\n    }\r\n\r\n    /**\r\n     * <p>从组件顶边到其内容区域顶边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get top(): number {\r\n        return this._widget.top;\r\n    }\r\n\r\n    set top(value: number) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件底边到其内容区域底边之间的垂直距离（以像素为单位）。</p>\r\n     */\r\n    get bottom(): number {\r\n        return this._widget.bottom;\r\n    }\r\n\r\n    set bottom(value: number) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件左边到其内容区域左边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get left(): number {\r\n        return this._widget.left;\r\n    }\r\n\r\n    set left(value: number) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>从组件右边到其内容区域右边之间的水平距离（以像素为单位）。</p>\r\n     */\r\n    get right(): number {\r\n        return this._widget.right;\r\n    }\r\n\r\n    set right(value: number) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的水平方向中轴线与父容器的水平方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerX(): number {\r\n        return this._widget.centerX;\r\n    }\r\n\r\n    set centerX(value: number) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * <p>在父容器中，此对象的垂直方向中轴线与父容器的垂直方向中心线的距离（以像素为单位）。</p>\r\n     */\r\n    get centerY(): number {\r\n        return this._widget.centerY;\r\n    }\r\n\r\n    set centerY(value: number) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n\r\n    protected _shouldRefreshLayout(): void {\r\n        super._shouldRefreshLayout();\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n\r\n    /**\r\n     * @private \r\n     * @override\r\n    */\r\n    protected _sizeChanged(): void {\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY) this._widget.resetLayout();\r\n    }\r\n\r\n    /**\r\n     * 重新排版\r\n     */\r\n    freshLayout() {\r\n        if (this._widget != Widget.EMPTY) {\r\n            this._widget.resetLayout();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * <p>获取对象的布局样式。请不要直接修改此对象</p>\r\n     */\r\n    private _getWidget(): Widget {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n\r\n    //////////////////////////////////////静态方法//////////////////////////////////////////\r\n\r\n    /**获取场景根容器*/\r\n    static get root(): Sprite {\r\n        let root = Scene._root;\r\n        if (!root) {\r\n            root = Scene._root = (<Sprite>ILaya.stage.addChild(new Sprite()));\r\n            root.name = \"root\";\r\n            root.mouseThrough = true;\r\n            ILaya.stage.on(\"resize\", null, () => {\r\n                root.size(ILaya.stage.width, ILaya.stage.height);\r\n                root.event(Event.RESIZE);\r\n            });\r\n            root.size(ILaya.stage.width, ILaya.stage.height);\r\n            root.event(Event.RESIZE);\r\n        }\r\n        return root;\r\n    }\r\n\r\n    /**\r\n     * 加载场景及场景使用到的资源\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcomplete\t加载完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static load(url: string, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        return ILaya.loader.load(url, null, value => {\r\n            if (Scene._loadPage) Scene._loadPage.event(\"progress\", value);\r\n            progress && progress.runWith(value);\r\n        }).then((content: Prefab) => {\r\n            if (!content) throw \"Can not find scene:\" + url;\r\n\r\n            let scene: Scene;\r\n            let errors: Array<any> = [];\r\n            let ret = content.create(null, errors);\r\n            if (errors.length > 0)\r\n                console.warn(`Error loading ${url}: \\n${errors.join(\"\\n\")}`);\r\n\r\n            if (ret instanceof Scene)\r\n                scene = ret;\r\n            else if (ret._is3D) {\r\n                scene = new Scene();\r\n                scene.left = scene.right = scene.top = scene.bottom = 0;\r\n                scene._scene3D = ret;\r\n            }\r\n            else\r\n                throw \"Not a scene:\" + url;\r\n\r\n            scene._viewCreated = true;\r\n            if (scene._scene3D)\r\n                scene._scene3D._scene2D = scene;\r\n            Scene.unDestroyedScenes.add(scene);\r\n            Scene.hideLoadingPage();\r\n            complete && complete.runWith(scene);\r\n\r\n            return scene;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 加载并打开场景\r\n     * @param\turl\t\t\t场景地址\r\n     * @param\tcloseOther\t是否关闭其他场景，默认为true（可选），【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     * @param\tparam\t\t打开页面的参数，会传递给onOpened方法（可选）\r\n     * @param\tcomplete\t打开完成回调，返回场景实例（可选）\r\n     * @param\tprogress\t加载进度回调（可选）\r\n     */\r\n    static open(url: string, closeOther: boolean = true, param: any = null, complete: Handler = null, progress: Handler = null): Promise<Scene> {\r\n        //兼容处理\r\n        if (param instanceof Handler) {\r\n            var temp: any = complete;\r\n            complete = param;\r\n            param = temp;\r\n        }\r\n        Scene.showLoadingPage();\r\n        return Scene.load(url, Handler.create(null, this._onSceneLoaded, [closeOther, complete, param]), progress);\r\n    }\r\n\r\n    /**@private */\r\n    private static _onSceneLoaded(closeOther: boolean, complete: Handler, param: any, scene: Scene): void {\r\n        scene.open(closeOther, param);\r\n        if (complete) complete.runWith(scene);\r\n    }\r\n\r\n    /**\r\n     * 根据地址，关闭场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否关闭成功，如果url找不到，则不成功\r\n     */\r\n    static close(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene && scene.parent && scene.url === url && (name == null || scene.name == name)) {\r\n                scene.close();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 关闭所有场景，不包括对话框，如果关闭对话框，请使用Dialog.closeAll()\r\n     * 【注意】被关闭的场景，如果没有设置autoDestroyAtRemoved=true，则资源可能不能被回收，需要自己手动回收\r\n     */\r\n    static closeAll(): void {\r\n        let root: Sprite = Scene.root;\r\n        for (let i = 0, n = root.numChildren; i < n; i++) {\r\n            var scene = root.getChildAt(0);\r\n            if (scene instanceof Scene)\r\n                scene.close();\r\n            else\r\n                scene.removeSelf();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 根据地址，销毁场景（包括对话框）\r\n     * @param\turl\t\t场景地址\r\n     * @param\tname\t如果name不为空，name必须相同才能关闭\r\n     * @return\t返回是否销毁成功，如果url找不到，则不成功\r\n     */\r\n    static destroy(url: string, name?: string): boolean {\r\n        let flag: boolean = false;\r\n        for (let scene of Scene.unDestroyedScenes) {\r\n            if (scene.url === url && (name == null || scene.name == name) && !scene._destroyed) {\r\n                scene.destroy();\r\n                flag = true;\r\n                break;\r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    /**\r\n     * 销毁当前没有被使用的资源,该函数会忽略lock=true的资源。\r\n     */\r\n    static gc(): void {\r\n        Resource.destroyUnusedResources();\r\n    }\r\n\r\n    /**\r\n     * 设置loading界面，引擎会在调用open方法后，延迟打开loading界面，在页面添加到舞台之后，关闭loading界面\r\n     * @param\tloadPage \tload界面实例\r\n     */\r\n    static setLoadingPage(loadPage: Sprite): void {\r\n        Scene._loadPage = loadPage;\r\n    }\r\n\r\n    /**\r\n     * 显示loading界面\r\n     * @param\tparam 打开参数，如果是scene，则会传递给onOpened方法\r\n     * @param\tdelay 延迟打开时间，默认500毫秒\r\n     */\r\n    static showLoadingPage(param: any = null, delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._showLoading, [param], false);\r\n        }\r\n    }\r\n\r\n    private static _showLoading(param: any): void {\r\n        ILaya.stage.addChild(Scene._loadPage);\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.onOpened(param);\r\n    }\r\n\r\n    private static _hideLoading(): void {\r\n        if (Scene._loadPage instanceof Scene)\r\n            Scene._loadPage.close();\r\n        else\r\n            Scene._loadPage.removeSelf();\r\n    }\r\n\r\n    /**\r\n     * 隐藏loading界面\r\n     * @param\tdelay 延迟关闭时间，默认500毫秒\r\n     */\r\n    static hideLoadingPage(delay: number = 500): void {\r\n        if (Scene._loadPage) {\r\n            ILaya.systemTimer.clear(null, Scene._showLoading);\r\n            ILaya.systemTimer.clear(null, Scene._hideLoading);\r\n            ILaya.systemTimer.once(delay, null, Scene._hideLoading);\r\n        }\r\n    }\r\n}","import { CallLater } from \"./CallLater\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * <code>Timer</code> 是时钟管理类。它是一个单例，不要手动实例化此类，应该通过 Laya.timer 访问。\r\n */\r\nexport class Timer {\r\n    /**@private */\r\n    static gSysTimer: Timer = null;\r\n\r\n    /**@private */\r\n    private static _pool: any[] = [];\r\n    /**@private */\r\n    static _mid: number = 1;\r\n\r\n\r\n    /** 时针缩放。*/\r\n    scale: number = 1;\r\n    /** 当前帧开始的时间。*/\r\n    currTimer: number;\r\n    /** 当前的帧数。*/\r\n    currFrame: number = 0;\r\n    /**@internal 两帧之间的时间间隔,单位毫秒。*/\r\n    _delta: number = 0;\r\n    /**@internal */\r\n    _lastTimer: number;\r\n    /**@private */\r\n    private _map: { [key: string]: TimerHandler } = {};\r\n    /**@private */\r\n    private _handlers: any[] = [];\r\n    /**@private */\r\n    private _temp: any[] = [];\r\n    /**@private */\r\n    private _count: number = 0;\r\n\r\n    /**\r\n     * 创建 <code>Timer</code> 类的一个实例。\r\n     */\r\n    constructor(autoActive: boolean = true) {\r\n        autoActive && Timer.gSysTimer && Timer.gSysTimer.frameLoop(1, this, this._update);\r\n        this.currTimer = this._getNowData();\r\n        this._lastTimer = this._getNowData();\r\n    }\r\n\r\n    /**两帧之间的时间间隔,单位毫秒。*/\r\n    get delta(): number {\r\n        return this._delta;\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        if (this.scale <= 0) {\r\n            this._lastTimer = this._getNowData();\r\n            this._delta = 0;\r\n            return;\r\n        }\r\n        var frame: number = this.currFrame = this.currFrame + this.scale;\r\n        var now: number = this._getNowData();\r\n        var awake: boolean = (now - this._lastTimer) > 30000;\r\n        this._delta = (now - this._lastTimer) * this.scale;\r\n        var timer: number = this.currTimer = this.currTimer + this._delta;\r\n        this._lastTimer = now;\r\n\r\n        //处理handler\r\n        var handlers: any[] = this._handlers;\r\n        this._count = 0;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) {\r\n                var t: number = handler.userFrame ? frame : timer;\r\n                if (t >= handler.exeTime) {\r\n                    if (handler.repeat) {\r\n                        if (!handler.jumpFrame || awake) {\r\n                            handler.exeTime += handler.delay;\r\n                            handler.run(false);\r\n                            if (t > handler.exeTime) {\r\n                                //如果执行一次后还能再执行，做跳出处理，如果想用多次执行，需要设置jumpFrame=true\r\n                                handler.exeTime += Math.ceil((t - handler.exeTime) / handler.delay) * handler.delay;\r\n                            }\r\n                        } else {\r\n                            while (t >= handler.exeTime) {\r\n                                handler.exeTime += handler.delay;\r\n                                handler.run(false);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        handler.run(true);\r\n                    }\r\n                }\r\n            } else {\r\n                this._count++;\r\n            }\r\n        }\r\n\r\n        if (this._count > 30 || frame % 200 === 0) this._clearHandlers();\r\n    }\r\n\r\n    /** @private */\r\n    private _clearHandlers(): void {\r\n        var handlers: any[] = this._handlers;\r\n        for (var i: number = 0, n: number = handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = handlers[i];\r\n            if (handler.method !== null) this._temp.push(handler);\r\n            else this._recoverHandler(handler);\r\n        }\r\n        this._handlers = this._temp;\r\n        handlers.length = 0;\r\n        this._temp = handlers;\r\n    }\r\n\r\n    /** @private */\r\n    private _recoverHandler(handler: TimerHandler): void {\r\n        if (this._map[handler.key] == handler) delete this._map[handler.key];\r\n        handler.clear();\r\n        Timer._pool.push(handler);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * get now time data\r\n     * @returns \r\n     */\r\n    public _getNowData(): number {\r\n        return Date.now();\r\n    }\r\n\r\n    /** @internal */\r\n    _create(useFrame: boolean, repeat: boolean, delay: number, caller: any, method: Function, args: any[], coverBefore: boolean): TimerHandler {\r\n        //如果延迟为0，则立即执行\r\n        if (!delay) {\r\n            method.apply(caller, args);\r\n            return null;\r\n        }\r\n\r\n        //先覆盖相同函数的计时\r\n        if (coverBefore) {\r\n            var handler: TimerHandler = this._getHandler(caller, method);\r\n            if (handler) {\r\n                handler.repeat = repeat;\r\n                handler.userFrame = useFrame;\r\n                handler.delay = delay;\r\n                handler.caller = caller;\r\n                handler.method = method;\r\n                handler.args = args;\r\n                handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n                return handler;\r\n            }\r\n        }\r\n\r\n        //找到一个空闲的timerHandler\r\n        handler = Timer._pool.length > 0 ? Timer._pool.pop() : new TimerHandler();\r\n        handler.repeat = repeat;\r\n        handler.userFrame = useFrame;\r\n        handler.delay = delay;\r\n        handler.caller = caller;\r\n        handler.method = method;\r\n        handler.args = args;\r\n        handler.exeTime = delay + (useFrame ? this.currFrame : this.currTimer + this._getNowData() - this._lastTimer);\r\n\r\n        //索引handler\r\n        this._indexHandler(handler);\r\n\r\n        //插入数组\r\n        this._handlers.push(handler);\r\n\r\n        return handler;\r\n    }\r\n\r\n    /** @private */\r\n    private _indexHandler(handler: TimerHandler): void {\r\n        var caller: any = handler.caller;\r\n        var method: any = handler.method;\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        handler.key = cid + \"_\" + mid;\r\n        this._map[handler.key] = handler;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次。\r\n     * @param\tdelay\t延迟时间(单位为毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    once(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(false, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行。\r\n     * @param\tdelay\t间隔时间(单位毫秒)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     * @param\tjumpFrame 时钟是否跳帧。基于时间的循环回调，单位时间间隔内，如能执行多次回调，出于性能考虑，引擎默认只执行一次，设置jumpFrame=true后，则回调会连续执行多次\r\n     */\r\n    loop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true, jumpFrame: boolean = false): void {\r\n        var handler: TimerHandler = this._create(false, true, delay, caller, method, args, coverBefore);\r\n        if (handler) handler.jumpFrame = jumpFrame;\r\n    }\r\n\r\n    /**\r\n     * 定时执行一次(基于帧率)。\r\n     * @param\tdelay\t延迟几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameOnce(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, false, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /**\r\n     * 定时重复执行(基于帧率)。\r\n     * @param\tdelay\t间隔几帧(单位为帧)。\r\n     * @param\tcaller\t执行域(this)。\r\n     * @param\tmethod\t定时器回调函数。\r\n     * @param\targs\t回调参数。\r\n     * @param\tcoverBefore\t是否覆盖之前的延迟执行，默认为 true 。\r\n     */\r\n    frameLoop(delay: number, caller: any, method: Function, args: any[] = null, coverBefore: boolean = true): void {\r\n        this._create(true, true, delay, caller, method, args, coverBefore);\r\n    }\r\n\r\n    /** 返回统计信息。*/\r\n    toString(): string {\r\n        return \" handlers:\" + this._handlers.length + \" pool:\" + Timer._pool.length;\r\n    }\r\n\r\n    /**\r\n     * 清理定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clear(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理对象身上的所有定时器。\r\n     * @param\tcaller 执行域(this)。\r\n     */\r\n    clearAll(caller: any): void {\r\n        if (!caller) return;\r\n        for (var i: number = 0, n: number = this._handlers.length; i < n; i++) {\r\n            var handler: TimerHandler = this._handlers[i];\r\n            if (handler.caller === caller) {\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): TimerHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = Timer._mid++);\r\n        var key: any = cid + \"_\" + mid;\r\n        return this._map[key];\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        CallLater.I.callLater(caller, method, args);\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        CallLater.I.runCallLater(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 取消执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    clearCallLater(caller: any, method: Function): void {\r\n        CallLater.I.clear(caller, method);\r\n    }\r\n\r\n    /**\r\n     * 立即提前执行定时器，执行之后从队列中删除\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runTimer(caller: any, method: Function): void {\r\n        var handler: TimerHandler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run(true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 暂停时钟\r\n     */\r\n    pause(): void {\r\n        this.scale = 0;\r\n    }\r\n\r\n    /**\r\n     * 恢复时钟\r\n     */\r\n    resume(): void {\r\n        this.scale = 1;\r\n    }\r\n\r\n\r\n    destroy() {\r\n        for (var i = 0, n = this._handlers.length; i < n; i++) {\r\n            var handler = this._handlers[i];\r\n            handler.clear();\r\n        }\r\n        this._handlers.length = 0;\r\n        this._map = {};\r\n        this._temp.length = 0;\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass TimerHandler {\r\n    key: string;\r\n    repeat: boolean;\r\n    delay: number;\r\n    userFrame: boolean;\r\n    exeTime: number;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n    jumpFrame: boolean;\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(withClear: boolean): void {\r\n        var caller: any = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method: Function = this.method;\r\n        var args: any[] = this.args;\r\n        withClear && this.clear();\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { Timer } from \"./Timer\";\r\nimport { Utils } from \"./Utils\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class CallLater {\r\n    static I = new CallLater();\r\n    /**@private */\r\n    private _pool: LaterHandler[] = [];\r\n    /**@private */\r\n    private _map: { [key: string]: LaterHandler } = {};\r\n    /**@private */\r\n    private _laters: LaterHandler[] = [];\r\n\r\n    /**\r\n     * @internal\r\n     * 帧循环处理函数。\r\n     */\r\n    _update(): void {\r\n        let laters = this._laters;\r\n        let len = laters.length;\r\n        if (len > 0) {\r\n            for (let i = 0, n = len - 1; i <= n; i++) {\r\n                let handler = laters[i];\r\n                this._map[handler.key] = null;\r\n                if (handler.method !== null) {\r\n                    handler.run();\r\n                    handler.clear();\r\n                }\r\n                this._pool.push(handler);\r\n                i === n && (n = laters.length - 1);\r\n            }\r\n            laters.length = 0;\r\n        }\r\n    }\r\n\r\n    /** @private */\r\n    private _getHandler(caller: any, method: any): LaterHandler {\r\n        var cid: number = caller ? caller.$_GID || (caller.$_GID = Utils.getGID()) : 0;\r\n        var mid: number = method.$_TID || (method.$_TID = (Timer._mid++));\r\n        return this._map[cid + '.' + mid]\r\n    }\r\n\r\n    /**\r\n     * 延迟执行。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     * @param\targs 回调参数。\r\n     */\r\n    callLater(caller: any, method: Function, args: any[] = null): void {\r\n        if (this._getHandler(caller, method) == null) {\r\n            let handler: LaterHandler;\r\n            if (this._pool.length)\r\n                handler = this._pool.pop();\r\n            else\r\n                handler = new LaterHandler();\r\n            //设置属性\r\n            handler.caller = caller;\r\n            handler.method = method;\r\n            handler.args = args;\r\n            //索引handler\r\n            var cid: number = caller ? caller.$_GID : 0;\r\n            var mid: number = (method as any)[\"$_TID\"];\r\n            handler.key = cid + '.' + mid;\r\n            this._map[handler.key] = handler\r\n            //插入队列\r\n            this._laters.push(handler);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 立即执行 callLater 。\r\n     * @param\tcaller 执行域(this)。\r\n     * @param\tmethod 定时器回调函数。\r\n     */\r\n    runCallLater(caller: any, method: Function): void {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler && handler.method != null) {\r\n            this._map[handler.key] = null;\r\n            handler.run();\r\n            handler.clear();\r\n        }\r\n    }\r\n\r\n    clear(caller: any, method: Function) {\r\n        var handler = this._getHandler(caller, method);\r\n        if (handler) {\r\n            this._map[handler.key] = null;\r\n            handler.key = \"\";\r\n            handler.clear();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    clearAll(caller: any) {\r\n        if (!caller) return;\r\n        for (var i = 0, n = this._laters.length; i < n; i++) {\r\n            var handler = this._laters[i];\r\n            if (handler.caller === caller) {\r\n                this._map[handler.key] = null;\r\n                handler.key = \"\";\r\n                handler.clear();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/** @private */\r\nclass LaterHandler {\r\n    key: string;\r\n    caller: any\r\n    method: Function;\r\n    args: any[];\r\n\r\n    clear(): void {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n    }\r\n\r\n    run(): void {\r\n        var caller = this.caller;\r\n        if (caller && caller.destroyed) return this.clear();\r\n        var method = this.method;\r\n        var args = this.args;\r\n        if (method == null) return;\r\n        args ? method.apply(caller, args) : method.call(caller);\r\n    }\r\n}\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderState2D } from \"./utils/RenderState2D\"\r\n\r\n/**\r\n * @private\r\n */\r\nexport class WebGL {\r\n    static isNativeRender_enable: boolean = false;\r\n\r\n    static _nativeRender_enable(): void {\r\n    }\r\n\r\n    //使用webgl渲染器\r\n    static enable(): boolean {\r\n        return true;\r\n    }\r\n\r\n    static onStageResize(width: number, height: number): void {\r\n        LayaGL.renderEngine.viewport(0, 0, width, height);\r\n        RenderState2D.width = width;\r\n        RenderState2D.height = height;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { WebGL } from \"../webgl/WebGL\"\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RunDriver {\r\n    //TODO:coverage\r\n    static createShaderCondition: Function = function (conditionScript: string): Function {\r\n        var fn: string = \"(function() {return \" + conditionScript + \";})\";\r\n        return (window as any).Laya._runScript(fn);//生成条件判断函数\r\n    }\r\n\r\n\r\n    /**\r\n     * 用于改变 WebGL宽高信息。\r\n     */\r\n    static changeWebGLSize: Function = function (w: number, h: number): void {\r\n        WebGL.onStageResize(w, h);\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from \"./Component\";\r\n\r\nexport class ComponentDriver {\r\n    private _onUpdates: Set<Component> = new Set();\r\n    private _onLateUpdates: Set<Component> = new Set();\r\n    private _onPreRenders: Set<Component> = new Set();\r\n    private _onPostRenders: Set<Component> = new Set();\r\n\r\n    private _toStarts: Set<Component> = new Set();\r\n    readonly _toDestroys: Set<Component> = new Set();\r\n    /**\r\n     * @internal\r\n     * 调用组件Onstart\r\n     */\r\n    callStart() {\r\n        for (let ele of this._toStarts) {\r\n            if (ele._status == 2) {\r\n                ele._status = 3;\r\n\r\n                try {\r\n                    ele.onStart();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n        this._toStarts.clear();\r\n    }\r\n    /**\r\n     * @internal\r\n     * 调用组件OnUpdate\r\n     */\r\n    callUpdate() {\r\n        for (let ele of this._onUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件LayeUpdate\r\n     */\r\n    callLateUpdate() {\r\n        for (let ele of this._onLateUpdates) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onLateUpdate();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPreRender\r\n     */\r\n    callPreRender() {\r\n        for (let ele of this._onPreRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPreRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用组件onPostRender\r\n     */\r\n    callPostRender() {\r\n        for (let ele of this._onPostRenders) {\r\n            if (ele._status == 3) {\r\n                try {\r\n                    ele.onPostRender();\r\n                }\r\n                catch (err: any) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 调用销毁\r\n     */\r\n    callDestroy(): void {\r\n        for (let ele of this._toDestroys) {\r\n            try {\r\n                ele._destroy(true);\r\n            }\r\n            catch (err: any) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        this._toDestroys.clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 添加一个组件\r\n     * @param comp 组件\r\n     */\r\n    add(comp: Component) {\r\n        if (comp._status == 1) {\r\n            if (comp.onStart) {\r\n                comp._status = 2;\r\n                this._toStarts.add(comp);\r\n            }\r\n            else\r\n                comp._status = 3;\r\n        }\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.add(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.add(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.add(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.add(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 移除一个组件\r\n     * @param comp 组件\r\n     */\r\n    remove(comp: Component) {\r\n        if (comp._status == 2) //starting\r\n            comp._status = 1; //cancel start\r\n\r\n        if (comp.onUpdate)\r\n            this._onUpdates.delete(comp);\r\n        if (comp.onLateUpdate)\r\n            this._onLateUpdates.delete(comp);\r\n\r\n        if (comp.onPreRender)\r\n            this._onPreRenders.delete(comp);\r\n        if (comp.onPostRender)\r\n            this._onPostRenders.delete(comp);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 删除组件Driver\r\n     */\r\n    destroy() {\r\n        //TODO:\r\n    }\r\n}","import { Sprite } from \"./Sprite\";\r\nimport { Node } from \"./Node\";\r\nimport { Config } from \"./../../Config\";\r\nimport { Input } from \"./Input\";\r\nimport { SpriteConst } from \"./SpriteConst\";\r\nimport { NodeFlags } from \"../Const\"\r\nimport { Event } from \"../events/Event\"\r\nimport { InputManager } from \"../events/InputManager\"\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Point } from \"../maths/Point\"\r\nimport { Render } from \"../renders/Render\"\r\nimport { RenderInfo } from \"../renders/RenderInfo\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { HTMLCanvas } from \"../resource/HTMLCanvas\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { CallLater } from \"../utils/CallLater\"\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { RunDriver } from \"../utils/RunDriver\"\r\nimport { VectorGraphManager } from \"../utils/VectorGraphManager\"\r\nimport { RenderState2D } from \"../webgl/utils/RenderState2D\";\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { ComponentDriver } from \"../components/ComponentDriver\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * stage大小经过重新调整时进行调度。\r\n * @eventType Event.RESIZE\r\n */\r\n/*[Event(name = \"resize\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台获得焦点时调度。比如浏览器或者当前标签处于后台，重新切换回来时进行调度。\r\n * @eventType Event.FOCUS\r\n */\r\n/*[Event(name = \"focus\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台失去焦点时调度。比如浏览器或者当前标签被切换到后台后调度。\r\n * @eventType Event.BLUR\r\n */\r\n/*[Event(name = \"blur\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台焦点变化时调度，使用Laya.stage.isFocused可以获取当前舞台是否获得焦点。\r\n * @eventType Event.FOCUS_CHANGE\r\n */\r\n/*[Event(name = \"focuschange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 舞台可见性发生变化时调度（比如浏览器或者当前标签被切换到后台后调度），使用Laya.stage.isVisibility可以获取当前是否处于显示状态。\r\n * @eventType Event.VISIBILITY_CHANGE\r\n */\r\n/*[Event(name = \"visibilitychange\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 浏览器全屏更改时调度，比如进入全屏或者退出全屏。\r\n * @eventType Event.FULL_SCREEN_CHANGE\r\n */\r\n/*[Event(name = \"fullscreenchange\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Stage</code> 是舞台类，显示列表的根节点，所有显示对象都在舞台上显示。通过 Laya.stage 单例访问。</p>\r\n * <p>Stage提供几种适配模式，不同的适配模式会产生不同的画布大小，画布越大，渲染压力越大，所以要选择合适的适配方案。</p>\r\n * <p>Stage提供不同的帧率模式，帧率越高，渲染压力越大，越费电，合理使用帧率甚至动态更改帧率有利于改进手机耗电。</p>\r\n */\r\nexport class Stage extends Sprite {\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOSCALE: string = \"noscale\";\r\n    /**应用根据屏幕大小铺满全屏，非等比缩放会变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_EXACTFIT: string = \"exactfit\";\r\n    /**应用显示全部内容，按照最小比率缩放，等比缩放不变形，一边可能会留空白，stage的宽高等于设计宽高。*/\r\n    static SCALE_SHOWALL: string = \"showall\";\r\n    /**应用按照最大比率缩放显示，宽或高方向会显示一部分，等比缩放不变形，stage的宽高等于设计宽高。*/\r\n    static SCALE_NOBORDER: string = \"noborder\";\r\n    /**应用保持设计宽高不变，不缩放不变形，stage的宽高等于屏幕宽高。*/\r\n    static SCALE_FULL: string = \"full\";\r\n    /**应用保持设计宽度不变，高度根据屏幕比缩放，stage的宽度等于设计高度，高度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_WIDTH: string = \"fixedwidth\";\r\n    /**应用保持设计高度不变，宽度根据屏幕比缩放，stage的高度等于设计宽度，宽度根据屏幕比率大小而变化*/\r\n    static SCALE_FIXED_HEIGHT: string = \"fixedheight\";\r\n    /**应用保持设计比例不变，全屏显示全部内容(类似showall，但showall非全屏，会有黑边)，根据屏幕长宽比，自动选择使用SCALE_FIXED_WIDTH或SCALE_FIXED_HEIGHT*/\r\n    static SCALE_FIXED_AUTO: string = \"fixedauto\";\r\n\r\n    static SCALE_FIXED_AUTO_LAYAME: string = \"fixedauto_layame\";\r\n    static SCALE_FIXED_AUTO_LAYAVERSE: string = \"fixedauto_layaverse\";\r\n\r\n    /**画布水平居左对齐。*/\r\n    static ALIGN_LEFT: string = \"left\";\r\n    /**画布水平居右对齐。*/\r\n    static ALIGN_RIGHT: string = \"right\";\r\n    /**画布水平居中对齐。*/\r\n    static ALIGN_CENTER: string = \"center\";\r\n    /**画布垂直居上对齐。*/\r\n    static ALIGN_TOP: string = \"top\";\r\n    /**画布垂直居中对齐。*/\r\n    static ALIGN_MIDDLE: string = \"middle\";\r\n    /**画布垂直居下对齐。*/\r\n    static ALIGN_BOTTOM: string = \"bottom\";\r\n\r\n    /**不更改屏幕。*/\r\n    static SCREEN_NONE: string = \"none\";\r\n    /**自动横屏。*/\r\n    static SCREEN_HORIZONTAL: string = \"horizontal\";\r\n    /**自动竖屏。*/\r\n    static SCREEN_VERTICAL: string = \"vertical\";\r\n\r\n    /**全速模式，以60的帧率运行。*/\r\n    static FRAME_FAST: string = \"fast\";\r\n    /**慢速模式，以30的帧率运行。*/\r\n    static FRAME_SLOW: string = \"slow\";\r\n    /**自动模式，以30的帧率运行，但鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗。*/\r\n    static FRAME_MOUSE: string = \"mouse\";\r\n    /**休眠模式，以1的帧率运行*/\r\n    static FRAME_SLEEP: string = \"sleep\";\r\n\r\n    /**当前焦点对象，此对象会影响当前键盘事件的派发主体。*/\r\n    focus: Node;\r\n    /**@private 相对浏览器左上角的偏移，弃用，请使用_canvasTransform。*/\r\n    offset: Point = new Point();\r\n    /**帧率类型，支持三种模式：fast-60帧(默认)，slow-30帧，mouse-30帧（鼠标活动后会自动加速到60，鼠标不动2秒后降低为30帧，以节省消耗），sleep-1帧。*/\r\n    private _frameRate: string = \"fast\";\r\n    /**设计宽度（初始化时设置的宽度Laya.init(width,height)）*/\r\n    designWidth: number = 0;\r\n    /**设计高度（初始化时设置的高度Laya.init(width,height)）*/\r\n    designHeight: number = 0;\r\n    /**画布是否发生翻转。*/\r\n    canvasRotation: boolean = false;\r\n    /**画布的旋转角度。*/\r\n    canvasDegree: number = 0;\r\n    /**\r\n     * <p>设置是否渲染，设置为false，可以停止渲染，画面会停留到最后一次渲染上，减少cpu消耗，此设置不影响时钟。</p>\r\n     * <p>比如非激活状态，可以设置renderingEnabled=false以节省消耗。</p>\r\n     * */\r\n    renderingEnabled: boolean = true;\r\n    /**是否启用屏幕适配，可以适配后，在某个时候关闭屏幕适配，防止某些操作导致的屏幕意外改变*/\r\n    screenAdaptationEnabled: boolean = true;\r\n    /**@internal */\r\n    _canvasTransform: Matrix = new Matrix();\r\n    /**@private */\r\n    private _screenMode: string = \"none\";\r\n    /**@private */\r\n    private _scaleMode: string = \"noscale\";\r\n    /**@private */\r\n    private _alignV: string = \"top\";\r\n    /**@private */\r\n    private _alignH: string = \"left\";\r\n    /**@private */\r\n    private _bgColor: string = \"black\";\r\n    /**@internal */\r\n    _mouseMoveTime: number = 0;\r\n    /**@private */\r\n    private _renderCount: number = 0;\r\n    /**@private */\r\n    private _safariOffsetY: number = 0;\r\n    /**@private */\r\n    private _frameStartTime: number = 0;\r\n    /**@private */\r\n    private _previousOrientation: number = Browser.window.orientation;\r\n    /**@private */\r\n    private _isFocused: boolean;\r\n    /**@private */\r\n    private _isVisibility: boolean;\r\n    /**@internal webgl Color*/\r\n    _wgColor: number[] | null = [0, 0, 0, 1];\r\n    /**@internal */\r\n    _scene3Ds: Node[] = [];\r\n\r\n    /**@private */\r\n    private _globalRepaintSet: boolean = false;\t\t// 设置全局重画标志。这个是给IDE用的。IDE的Image无法在onload的时候通知对应的sprite重画。\r\n    /**@private */\r\n    private _globalRepaintGet: boolean = false;\t\t// 一个get一个set是为了把标志延迟到下一帧的开始，防止部分对象接收不到。\r\n\r\n    /**使用物理分辨率作为canvas大小，会改进渲染效果，但是会降低性能*/\r\n    useRetinalCanvas: boolean = false;\r\n\r\n    /**场景类，引擎中只有一个stage实例，此实例可以通过Laya.stage访问。*/\r\n    constructor() {\r\n        super();\r\n        super.set_transform(this._createTransform());\r\n        //重置默认值，请不要修改\r\n        this.mouseEnabled = true;\r\n        this.hitTestPrior = true;\r\n        this.autoSize = false;\r\n        this._setBit(NodeFlags.DISPLAYED_INSTAGE, true);\r\n        this._setBit(NodeFlags.ACTIVE_INHIERARCHY, true);\r\n        this._isFocused = true;\r\n        this._isVisibility = true;\r\n\r\n        //this.drawCallOptimize=true;\r\n        this.useRetinalCanvas = Config.useRetinalCanvas;\r\n\r\n        var window: any = Browser.window;\r\n        //var _me = this;\t\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n            this._isFocused = true;\r\n            this.event(Event.FOCUS);\r\n            this.event(Event.FOCUS_CHANGE);\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n            this._isFocused = false;\r\n            this.event(Event.BLUR);\r\n            this.event(Event.FOCUS_CHANGE);\r\n            if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n        });\r\n\r\n        // 各种浏览器兼容\r\n        var state = \"visibilityState\", visibilityChange = \"visibilitychange\";\r\n        var document: any = window.document;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            visibilityChange = \"visibilitychange\";\r\n            state = \"visibilityState\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            visibilityChange = \"mozvisibilitychange\";\r\n            state = \"mozVisibilityState\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            visibilityChange = \"msvisibilitychange\";\r\n            state = \"msVisibilityState\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            visibilityChange = \"webkitvisibilitychange\";\r\n            state = \"webkitVisibilityState\";\r\n        }\r\n\r\n        window.document.addEventListener(visibilityChange, () => {\r\n            if (Browser.document[state] == \"hidden\") {\r\n                this._isVisibility = false;\r\n                if (this._isInputting()) (Input[\"inputElement\"] as any).target.focus = false;\r\n            } else {\r\n                this._isVisibility = true;\r\n            }\r\n            this.renderingEnabled = this._isVisibility;\r\n            this.event(Event.VISIBILITY_CHANGE);\r\n        });\r\n        window.addEventListener(\"resize\", () => {\r\n            // 处理屏幕旋转。旋转后收起输入法。\r\n            var orientation: any = Browser.window.orientation;\r\n            if (orientation != null && orientation != this._previousOrientation && this._isInputting()) {\r\n                (Input[\"inputElement\"] as any).target.focus = false;\r\n            }\r\n            this._previousOrientation = orientation;\r\n\r\n            // 弹出输入法不应对画布进行resize。\r\n            if (this._isInputting()) return;\r\n\r\n            // Safari横屏工具栏偏移\r\n            if (Browser.onSafari)\r\n                this._safariOffsetY = (Browser.window.__innerHeight || Browser.document.body.clientHeight || Browser.document.documentElement.clientHeight) - Browser.window.innerHeight;\r\n\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        // 微信的iframe不触发orientationchange。\r\n        window.addEventListener(\"orientationchange\", (e: any) => {\r\n            if (this.screenAdaptationEnabled) {\r\n                this.event(Event.WILL_RESIZE);\r\n                this.updateCanvasSize();\r\n            }\r\n        });\r\n\r\n        this._componentDriver = new ComponentDriver();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 在移动端输入时，输入法弹出期间不进行画布尺寸重置。\r\n     */\r\n    private _isInputting(): boolean {\r\n        return (Browser.onMobile && InputManager.isTextInputting);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set_width(value: number) {\r\n        this.designWidth = value;\r\n        super.set_width(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get_width(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_width();\r\n    }\r\n\r\n    /**@inheritDoc @override */\r\n    set_height(value: number) {\r\n        this.designHeight = value;\r\n        super.set_height(value);\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /** @override*/\r\n    get_height(): number {\r\n        this.needUpdateCanvasSize();\r\n        return super.get_height();\r\n    }\r\n\r\n    /**@override*/\r\n    set transform(value: Matrix) {\r\n        super.set_transform(value);\r\n    }\r\n    /**@inheritDoc @override*/\r\n    get transform(): Matrix {\r\n        if (this._tfChanged) this._adjustTransform();\r\n        return (this._transform = this._transform || this._createTransform());\r\n    }\r\n\r\n    /**\r\n     * 舞台是否获得焦点。\r\n     */\r\n    get isFocused(): boolean {\r\n        return this._isFocused;\r\n    }\r\n\r\n    /**\r\n     * 舞台是否处于可见状态(是否进入后台)。\r\n     */\r\n    get isVisibility(): boolean {\r\n        return this._isVisibility;\r\n    }\r\n\r\n    private _needUpdateCanvasSize: boolean = false;\r\n    updateCanvasSize(delay?: boolean): void {\r\n        if (delay) {\r\n            if (!this._needUpdateCanvasSize) {\r\n                this._needUpdateCanvasSize = true;\r\n                ILaya.systemTimer.callLater(this, this.updateCanvasSize);\r\n            }\r\n        }\r\n        else {\r\n            this.setScreenSize(Browser.clientWidth * Browser.pixelRatio, Browser.clientHeight * Browser.pixelRatio);\r\n        }\r\n    }\r\n\r\n    needUpdateCanvasSize() {\r\n        if (this._needUpdateCanvasSize)\r\n            this.updateCanvasSize();\r\n    }\r\n\r\n    /**\r\n     * 设置屏幕大小，场景会根据屏幕大小进行适配。可以动态调用此方法，来更改游戏显示的大小。\r\n     * @param\tscreenWidth\t\t屏幕宽度。\r\n     * @param\tscreenHeight\t屏幕高度。\r\n     */\r\n    setScreenSize(screenWidth: number, screenHeight: number): void {\r\n        this._needUpdateCanvasSize = false;\r\n\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (this._screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== this._screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform.identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth;\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        this._width = this.designWidth;\r\n        this._height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            // case Stage.SCALE_FULL:\r\n            //     scaleX = scaleY = 1;\r\n            //     this._width = canvasWidth = screenWidth;\r\n            //     this._height = canvasHeight = screenHeight;\r\n            //     break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = pixelRatio;\r\n                canvasWidth = screenWidth;\r\n                canvasHeight = screenHeight;\r\n                this._width = screenWidth / pixelRatio;\r\n                this._height = screenHeight / pixelRatio;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n                this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n                this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAME:\r\n                if (screenWidth < screenHeight) {\r\n                    scaleY = scaleX;\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = screenHeight / this.designWidth;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO_LAYAVERSE:\r\n                if (screenWidth > screenHeight) {\r\n                    scaleX = scaleY;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                else {\r\n                    scaleX = screenWidth / this.designHeight;\r\n                    scaleY = scaleX;\r\n                    this._width = canvasWidth = Math.round(screenWidth / scaleX);\r\n                    this._height = canvasHeight = Math.round(screenHeight / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        //根据不同尺寸缩放stage画面\r\n        scaleX *= this.scaleX;\r\n        scaleY *= this.scaleY;\r\n        if (scaleX === 1 && scaleY === 1) {\r\n            this.transform.identity();\r\n        } else {\r\n            this.transform.a = this._formatData(scaleX / (realWidth / canvasWidth));\r\n            this.transform.d = this._formatData(scaleY / (realHeight / canvasHeight));\r\n        }\r\n\r\n        //处理canvas大小\r\n        canvas.size(canvasWidth, canvasHeight);\r\n        RunDriver.changeWebGLSize(canvasWidth, canvasHeight);\r\n        mat.scale(realWidth / canvasWidth / pixelRatio, realHeight / canvasHeight / pixelRatio);\r\n\r\n        //处理水平对齐\r\n        if (this._alignH === Stage.ALIGN_LEFT) this.offset.x = 0;\r\n        else if (this._alignH === Stage.ALIGN_RIGHT) this.offset.x = screenWidth - realWidth;\r\n        else this.offset.x = (screenWidth - realWidth) * 0.5 / pixelRatio;\r\n\r\n        //处理垂直对齐\r\n        if (this._alignV === Stage.ALIGN_TOP) this.offset.y = 0;\r\n        else if (this._alignV === Stage.ALIGN_BOTTOM) this.offset.y = screenHeight - realHeight;\r\n        else this.offset.y = (screenHeight - realHeight) * 0.5 / pixelRatio;\r\n\r\n        //处理用户自行设置的画布偏移\r\n        this.offset.x = Math.round(this.offset.x);\r\n        this.offset.y = Math.round(this.offset.y);\r\n        mat.translate(this.offset.x, this.offset.y);\r\n        if (this._safariOffsetY) mat.translate(0, this._safariOffsetY);\r\n\r\n        //处理横竖屏\r\n        this.canvasDegree = 0;\r\n        if (rotation) {\r\n            if (this._screenMode === Stage.SCREEN_HORIZONTAL) {\r\n                mat.rotate(Math.PI / 2);\r\n                mat.translate(screenHeight / pixelRatio, 0);\r\n                this.canvasDegree = 90;\r\n            } else {\r\n                mat.rotate(-Math.PI / 2);\r\n                mat.translate(0, screenWidth / pixelRatio);\r\n                this.canvasDegree = -90;\r\n            }\r\n        }\r\n\r\n        mat.a = this._formatData(mat.a);\r\n        mat.d = this._formatData(mat.d);\r\n        mat.tx = this._formatData(mat.tx);\r\n        mat.ty = this._formatData(mat.ty);\r\n\r\n        super.set_transform(this.transform);\r\n        canvasStyle.transformOrigin = canvasStyle.webkitTransformOrigin = canvasStyle.msTransformOrigin = canvasStyle.mozTransformOrigin = canvasStyle.oTransformOrigin = \"0px 0px 0px\";\r\n        canvasStyle.transform = canvasStyle.webkitTransform = canvasStyle.msTransform = canvasStyle.mozTransform = canvasStyle.oTransform = \"matrix(\" + mat.toString() + \")\";\r\n        canvasStyle.width = canvasWidth;\r\n        canvasStyle.height = canvasHeight;\r\n        //修正用户自行设置的偏移\r\n        if (this._safariOffsetY) mat.translate(0, -this._safariOffsetY);\r\n        mat.translate(parseInt(canvasStyle.left) || 0, parseInt(canvasStyle.top) || 0);\r\n        this.visible = true;\r\n        this._repaint |= SpriteConst.REPAINT_CACHE;\r\n\r\n        this.event(Event.RESIZE);\r\n    }\r\n\r\n    /**\r\n     * 屏幕旋转用layaverse 需要\r\n     * @param screenWidth \r\n     * @param screenHeight \r\n     * @param _screenMode \r\n     * @returns \r\n     */\r\n    setScreenSizeForScene(screenWidth: number, screenHeight: number, _screenMode: string) {\r\n        //计算是否旋转\r\n        var rotation: boolean = false;\r\n        if (/**this.*/_screenMode !== Stage.SCREEN_NONE) {\r\n            var screenType: string = screenWidth / screenHeight < 1 ? Stage.SCREEN_VERTICAL : Stage.SCREEN_HORIZONTAL;\r\n            rotation = screenType !== /**this.*/_screenMode;\r\n            if (rotation) {\r\n                //宽高互换\r\n                var temp: number = screenHeight;\r\n                screenHeight = screenWidth;\r\n                screenWidth = temp;\r\n            }\r\n        }\r\n        this.canvasRotation = rotation;\r\n\r\n        var canvas: HTMLCanvas = Render._mainCanvas;\r\n        var canvasStyle: any = canvas.source.style;\r\n        var mat: Matrix = this._canvasTransform/**add */.clone().identity();\r\n        var scaleMode: string = this._scaleMode;\r\n        var scaleX: number = screenWidth / this.designWidth\r\n        var scaleY: number = screenHeight / this.designHeight;\r\n        var canvasWidth: number = this.useRetinalCanvas ? screenWidth : this.designWidth;\r\n        var canvasHeight: number = this.useRetinalCanvas ? screenHeight : this.designHeight;\r\n        var realWidth: number = screenWidth;\r\n        var realHeight: number = screenHeight;\r\n        var pixelRatio: number = Browser.pixelRatio;\r\n        let /**this.*/_width = this.designWidth;\r\n        let /**this.*/_height = this.designHeight;\r\n\r\n        //处理缩放模式\r\n        switch (scaleMode) {\r\n            case Stage.SCALE_NOSCALE:\r\n                scaleX = scaleY = 1;\r\n                realWidth = this.designWidth;\r\n                realHeight = this.designHeight;\r\n                break;\r\n            case Stage.SCALE_SHOWALL:\r\n                scaleX = scaleY = Math.min(scaleX, scaleY);\r\n                canvasWidth = realWidth = Math.round(this.designWidth * scaleX);\r\n                canvasHeight = realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_NOBORDER:\r\n                scaleX = scaleY = Math.max(scaleX, scaleY);\r\n                realWidth = Math.round(this.designWidth * scaleX);\r\n                realHeight = Math.round(this.designHeight * scaleY);\r\n                break;\r\n            case Stage.SCALE_FULL:\r\n                scaleX = scaleY = 1;\r\n\t\t\t\t/**this.*/_width = canvasWidth = screenWidth;\r\n\t\t\t\t/**this.*/_height = canvasHeight = screenHeight;\r\n                break;\r\n            case Stage.SCALE_FIXED_WIDTH:\r\n                scaleY = scaleX;\r\n\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                break;\r\n            case Stage.SCALE_FIXED_HEIGHT:\r\n                scaleX = scaleY;\r\n\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                break;\r\n            case Stage.SCALE_FIXED_AUTO:\r\n                if ((screenWidth / screenHeight) < (this.designWidth / this.designHeight)) {\r\n                    scaleY = scaleX;\r\n\t\t\t\t\t/**this.*/_height = canvasHeight = Math.round(screenHeight / scaleX);\r\n                } else {\r\n                    scaleX = scaleY;\r\n\t\t\t\t\t/**this.*/_width = canvasWidth = Math.round(screenWidth / scaleY);\r\n                }\r\n                break;\r\n        }\r\n\r\n        if (this.useRetinalCanvas) {\r\n            realWidth = canvasWidth = screenWidth;\r\n            realHeight = canvasHeight = screenHeight;\r\n        }\r\n\r\n        return {\r\n            stageWidth: _width,\r\n            stageHeight: _height,\r\n            canvasWidth: canvasWidth,\r\n            canvasHeight: canvasHeight,\r\n            scaleX: scaleX / (realWidth / canvasWidth),\r\n            scaleY: scaleY / (realHeight / canvasHeight),\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _formatData(value: number): number {\r\n        if (Math.abs(value) < 0.000001) return 0;\r\n        if (Math.abs(1 - value) < 0.001) return value > 0 ? 1 : -1;\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * <p>缩放模式。默认值为 \"noscale\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"noscale\" ：不缩放；</li>\r\n     * <li>\"exactfit\" ：全屏不等比缩放；</li>\r\n     * <li>\"showall\" ：最小比例缩放；</li>\r\n     * <li>\"noborder\" ：最大比例缩放；</li>\r\n     * <li>\"full\" ：不缩放，stage的宽高等于屏幕宽高；</li>\r\n     * <li>\"fixedwidth\" ：宽度不变，高度根据屏幕比缩放；</li>\r\n     * <li>\"fixedheight\" ：高度不变，宽度根据屏幕比缩放；</li>\r\n     * <li>\"fixedauto\" ：根据宽高比，自动选择使用fixedwidth或fixedheight；</li>\r\n     * </ul></p>\r\n     */\r\n    get scaleMode(): string {\r\n        return this._scaleMode;\r\n    }\r\n\r\n    set scaleMode(value: string) {\r\n        this._scaleMode = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>水平对齐方式。默认值为\"left\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"left\" ：居左对齐；</li>\r\n     * <li>\"center\" ：居中对齐；</li>\r\n     * <li>\"right\" ：居右对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignH(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignH;\r\n    }\r\n\r\n    set alignH(value: string) {\r\n        this._alignH = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**\r\n     * <p>垂直对齐方式。默认值为\"top\"。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"top\" ：居顶部对齐；</li>\r\n     * <li>\"middle\" ：居中对齐；</li>\r\n     * <li>\"bottom\" ：居底部对齐；</li>\r\n     * </ul></p>\r\n     */\r\n    get alignV(): string {\r\n        this.needUpdateCanvasSize();\r\n        return this._alignV;\r\n    }\r\n\r\n    set alignV(value: string) {\r\n        this._alignV = value;\r\n        this.updateCanvasSize(true);\r\n    }\r\n\r\n    /**舞台的背景颜色，默认为黑色，null为透明。*/\r\n    get bgColor(): string {\r\n        return this._bgColor;\r\n    }\r\n\r\n    set bgColor(value: string) {\r\n        this._bgColor = value;\r\n        if (value)\r\n            this._wgColor = ColorUtils.create(value).arrColor;\r\n        else\r\n            this._wgColor = null;\r\n\r\n        if (value) {\r\n            Render.canvas.style.background = value;\r\n        } else {\r\n            Render.canvas.style.background = \"none\";\r\n        }\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 X 轴坐标。@override*/\r\n    get mouseX(): number {\r\n        return Math.round(InputManager.mouseX / this.clientScaleX);\r\n    }\r\n\r\n    /**鼠标在 Stage 上的 Y 轴坐标。@override*/\r\n    get mouseY(): number {\r\n        return Math.round(InputManager.mouseY / this.clientScaleY);\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    getMousePoint(): Point {\r\n        return Point.TEMP.setTo(this.mouseX, this.mouseY);\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 X 轴缩放系数。*/\r\n    get clientScaleX(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleX() : 1;\r\n    }\r\n\r\n    /**当前视窗由缩放模式导致的 Y 轴缩放系数。*/\r\n    get clientScaleY(): number {\r\n        this.needUpdateCanvasSize();\r\n        return this._transform ? this._transform.getScaleY() : 1;\r\n    }\r\n\r\n    /**\r\n     * <p>场景布局类型。</p>\r\n     * <p><ul>取值范围：\r\n     * <li>\"none\" ：不更改屏幕</li>\r\n     * <li>\"horizontal\" ：自动横屏</li>\r\n     * <li>\"vertical\" ：自动竖屏</li>\r\n     * </ul></p>\r\n     */\r\n    get screenMode(): string {\r\n        return this._screenMode;\r\n    }\r\n\r\n    set screenMode(value: string) {\r\n        this._screenMode = value;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    repaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n        this._repaint |= type;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    parentRepaint(type: number = SpriteConst.REPAINT_CACHE): void {\r\n    }\r\n\r\n    /**@internal */\r\n    _loop(): boolean {\r\n        this._globalRepaintGet = this._globalRepaintSet;\r\n        this._globalRepaintSet = false;\r\n        this.render(Render._context, 0, 0);\r\n        return true;\r\n    }\r\n\r\n    /**@private */\r\n    getFrameTm(): number {\r\n        return this._frameStartTime;\r\n    }\r\n\r\n    /**\r\n     * <p>获得距当前帧开始后，过了多少时间，单位为毫秒。</p>\r\n     * <p>可以用来判断函数内时间消耗，通过合理控制每帧函数处理消耗时长，避免一帧做事情太多，对复杂计算分帧处理，能有效降低帧率波动。</p>\r\n     */\r\n    getTimeFromFrameStart(): number {\r\n        return Browser.now() - this._frameStartTime;\r\n    }\r\n\r\n    /**@inheritDoc @override*/\r\n    set visible(value: boolean) {\r\n        if (this.visible !== value) {\r\n            super.set_visible(value);\r\n            var style: any = Render._mainCanvas.source.style;\r\n            style.visibility = value ? \"visible\" : \"hidden\";\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc \r\n     * @override\r\n     */\r\n    get visible() {\r\n        return super.visible;\r\n    }\r\n\r\n    /** @private */\r\n    static clear: Function = function (value: string): void {\r\n        //修改需要同步到上面的native实现中\r\n        Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n        RenderState2D.worldScissorTest && LayaGL.renderEngine.scissorTest(false);\r\n        var ctx: Context = Render.context;\r\n        //兼容浏览器\r\n        var c: any[] = (ctx._submits._length == 0 || Config.preserveDrawingBuffer) ? ColorUtils.create(value).arrColor : ILaya.stage._wgColor;\r\n        if (c)\r\n            ctx.clearBG(c[0], c[1], c[2], c[3]);\r\n        else\r\n            ctx.clearBG(0, 0, 0, 0);\r\n        RenderState2D.clear();\r\n    };\r\n\r\n    /**@inheritDoc @override*/\r\n    render(context: Context, x: number, y: number): void {\r\n        if (LayaEnv.isConch) {\r\n            this.renderToNative(context, x, y);\r\n            return;\r\n        }\r\n\r\n        let delta: number = ILaya.timer._delta / 1000;\r\n        if (this._frameRate === Stage.FRAME_SLEEP) {\r\n            var now: number = Browser.now();\r\n            if (now - this._frameStartTime < 1000)\r\n                return;\r\n            this._frameStartTime = now;\r\n        } else {\r\n            if (!this._visible) {\r\n                this._renderCount++;\r\n                if (this._renderCount % 5 === 0) {\r\n                    CallLater.I._update();\r\n                    Stat.loopCount++;\r\n                    RenderInfo.loopCount = Stat.loopCount;\r\n                    this._runComponents();\r\n                    this._updateTimers();\r\n                }\r\n                return;\r\n            }\r\n            this._frameStartTime = Browser.now();\r\n            RenderInfo.loopStTm = this._frameStartTime;\r\n        }\r\n\r\n        this._renderCount++;\r\n        var frameMode: string = this._frameRate === Stage.FRAME_MOUSE ? (((this._frameStartTime - this._mouseMoveTime) < 2000) ? Stage.FRAME_FAST : Stage.FRAME_SLOW) : this._frameRate;\r\n        var isFastMode: boolean = (frameMode !== Stage.FRAME_SLOW);\r\n        var isDoubleLoop: boolean = (this._renderCount % 2 === 0);\r\n\r\n        Stat.renderSlow = !isFastMode;\r\n        if (!isFastMode && !isDoubleLoop)//统一双帧处理渲染\r\n            return;\r\n\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        if (this.renderingEnabled) {\r\n            for (let i = 0, n = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update(delta);\r\n            this._runComponents();\r\n\r\n            context.clear();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            super.render(context, x, y);\r\n\r\n            Stat.render(context, x, y);\r\n\r\n            Stage.clear(this._bgColor);\r\n\r\n            context.flush();\r\n\r\n            this._componentDriver.callPostRender();\r\n\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        this._updateTimers();\r\n    }\r\n\r\n    renderToNative(context: Context, x: number, y: number): void {\r\n        this._renderCount++;\r\n\r\n        if (!this._visible) {\r\n            if (this._renderCount % 5 === 0) {\r\n                CallLater.I._update();\r\n                Stat.loopCount++;\r\n                RenderInfo.loopCount = Stat.loopCount;\r\n                this._runComponents();\r\n                this._updateTimers();\r\n            }\r\n            return;\r\n        }\r\n        this._frameStartTime = Browser.now();\r\n        //update\r\n        CallLater.I._update();\r\n        Stat.loopCount++;\r\n        RenderInfo.loopCount = Stat.loopCount;\r\n\r\n        //render\r\n        if (this.renderingEnabled) {\r\n            for (let i: number = 0, n: number = this._scene3Ds.length; i < n; i++)//更新3D场景,必须提出来,否则在脚本中移除节点会导致BUG\r\n                (<any>this._scene3Ds[i])._update();\r\n\r\n            this._runComponents();\r\n\r\n            this._componentDriver.callPreRender();\r\n\r\n            context.clear();\r\n            super.render(context, x, y);\r\n            Stat.render(context, x, y);\r\n\r\n            this._componentDriver.callPostRender();\r\n        }\r\n        else\r\n            this._runComponents();\r\n\r\n        //commit submit\r\n        if (this.renderingEnabled) {\r\n            Stage.clear(this._bgColor);\r\n            context.flush();\r\n            VectorGraphManager.instance && VectorGraphManager.getInstance().endDispose();\r\n        }\r\n        this._updateTimers();\r\n    }\r\n\r\n    private _runComponents() {\r\n        this._componentDriver.callStart();\r\n        this._componentDriver.callUpdate();\r\n        this._componentDriver.callLateUpdate();\r\n        this._componentDriver.callDestroy();\r\n    }\r\n\r\n    private _updateTimers(): void {\r\n        ILaya.systemTimer._update();\r\n        ILaya.physicsTimer._update();\r\n        ILaya.timer._update();\r\n    }\r\n\r\n    /**\r\n     * <p>是否开启全屏，用户点击后进入全屏。</p>\r\n     * <p>兼容性提示：部分浏览器不允许点击进入全屏，比如Iphone等。</p>\r\n     */\r\n    set fullScreenEnabled(value: boolean) {\r\n        var document: any = Browser.document;\r\n        var canvas: any = Render.canvas;\r\n        if (value) {\r\n            canvas.addEventListener('mousedown', this._requestFullscreen);\r\n            canvas.addEventListener('touchstart', this._requestFullscreen);\r\n            document.addEventListener(\"fullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\r\n            document.addEventListener(\"msfullscreenchange\", this._fullScreenChanged);\r\n        } else {\r\n            canvas.removeEventListener('mousedown', this._requestFullscreen);\r\n            canvas.removeEventListener('touchstart', this._requestFullscreen);\r\n            document.removeEventListener(\"fullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"mozfullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"webkitfullscreenchange\", this._fullScreenChanged);\r\n            document.removeEventListener(\"msfullscreenchange\", this._fullScreenChanged);\r\n        }\r\n    }\r\n\r\n    get frameRate(): string {\r\n        if (!LayaEnv.isConch) {\r\n            return this._frameRate;\r\n        } else {\r\n            return ((<any>this))._frameRateNative;\r\n        }\r\n    }\r\n\r\n    set frameRate(value: string) {\r\n        if (!LayaEnv.isConch) {\r\n            this._frameRate = value;\r\n        } else {\r\n            var c: any = ((<any>window)).conch;\r\n            switch (value) {\r\n                case Stage.FRAME_FAST:\r\n                    c.config.setLimitFPS(60);\r\n                    break;\r\n                case Stage.FRAME_MOUSE:\r\n                    c.config.setMouseFrame(2000);\r\n                    break;\r\n                case Stage.FRAME_SLOW:\r\n                    c.config.setSlowFrame(true);\r\n                    break;\r\n                case Stage.FRAME_SLEEP:\r\n                    c.config.setLimitFPS(1);\r\n                    break;\r\n            }\r\n            ((<any>this))._frameRateNative = value;\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _requestFullscreen(): void {\r\n        var element: any = Browser.document.documentElement;\r\n        if (element.requestFullscreen) {\r\n            element.requestFullscreen();\r\n        } else if (element.mozRequestFullScreen) {\r\n            element.mozRequestFullScreen();\r\n        } else if (element.webkitRequestFullscreen) {\r\n            element.webkitRequestFullscreen();\r\n        } else if (element.msRequestFullscreen) {\r\n            element.msRequestFullscreen();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private _fullScreenChanged(): void {\r\n        this.event(Event.FULL_SCREEN_CHANGE);\r\n    }\r\n\r\n    /**退出全屏模式*/\r\n    exitFullscreen(): void {\r\n        var document: any = Browser.document;\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            document.webkitExitFullscreen();\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    isGlobalRepaint(): boolean {\r\n        return this._globalRepaintGet;\r\n    }\r\n\r\n    /**@private */\r\n    setGlobalRepaint(): void {\r\n        this._globalRepaintSet = true;\r\n    }\r\n}\r\n","import { Filter } from \"./Filter\";\r\nimport { Matrix } from \"../maths/Matrix\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\n/**\r\n * @private\r\n */\r\nexport class BlurFilterGLRender {\r\n    private static blurinfo: any[] = new Array(2);\r\n    render(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: BlurFilter): void {\r\n        var shaderValue: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n        this.setShaderInfo(shaderValue, filter, rt.width, rt.height);\r\n        ctx.drawTarget(rt, 0, 0, width, height, Matrix.EMPTY.identity(), shaderValue);\r\n    }\r\n\r\n    setShaderInfo(shader: Value2D, filter: BlurFilter, w: number, h: number): void {\r\n        shader.defines.add(Filter.BLUR);\r\n        var sv: any = (<any>shader);\r\n        BlurFilterGLRender.blurinfo[0] = w; BlurFilterGLRender.blurinfo[1] = h;\r\n        sv.blurInfo = BlurFilterGLRender.blurinfo;\r\n        var sigma: number = filter.strength / 3.0;//3σ以外影响很小。即当σ=1的时候，半径为3;\r\n        var sigma2: number = sigma * sigma;\r\n        filter.strength_sig2_2sig2_gauss1[0] = filter.strength;\r\n        filter.strength_sig2_2sig2_gauss1[1] = sigma2;\t\t\t//做一些预计算传给shader，提高效率\r\n        filter.strength_sig2_2sig2_gauss1[2] = 2.0 * sigma2;\r\n        filter.strength_sig2_2sig2_gauss1[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n        sv.strength_sig2_2sig2_gauss1 = filter.strength_sig2_2sig2_gauss1;\r\n    }\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { BlurFilterGLRender } from \"./BlurFilterGLRender\";\r\n\r\n/**\r\n * 模糊滤镜\r\n */\r\nexport class BlurFilter extends Filter {\r\n\r\n    /**模糊滤镜的强度(值越大，越不清晰 */\r\n    strength: number;\r\n    strength_sig2_2sig2_gauss1: any[] = [];//给shader用的。避免创建对象\r\n    strength_sig2_native: Float32Array;//给native用的\r\n    renderFunc: any;//\r\n\r\n    /**\r\n     * 模糊滤镜\r\n     * @param\tstrength\t模糊滤镜的强度值\r\n     */\r\n    constructor(strength: number = 4) {\r\n        super();\r\n        this.strength = strength;\r\n        this._glRender = new BlurFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 当前滤镜的类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return Filter.BLUR;\r\n    }\r\n\r\n    getStrenth_sig2_2sig2_native(): Float32Array {\r\n        if (!this.strength_sig2_native) {\r\n            this.strength_sig2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不要每次进行计算\r\n        var sigma: number = this.strength / 3.0;\r\n        var sigma2: number = sigma * sigma;\r\n        this.strength_sig2_native[0] = this.strength;\r\n        this.strength_sig2_native[1] = sigma2;\r\n        this.strength_sig2_native[2] = 2.0 * sigma2;\r\n        this.strength_sig2_native[3] = 1.0 / (2.0 * Math.PI * sigma2);\r\n        return this.strength_sig2_native;\r\n    }\r\n}\r\n\r\n","import { Matrix } from \"../maths/Matrix\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { RenderTexture2D } from \"../resource/RenderTexture2D\"\r\nimport { ShaderDefines2D } from \"../webgl/shader/d2/ShaderDefines2D\"\r\nimport { Value2D } from \"../webgl/shader/d2/value/Value2D\"\r\nimport { GlowFilter } from \"./GlowFilter\";\r\n/**\r\n * @private\r\n */\r\nexport class GlowFilterGLRender {\r\n\tprivate setShaderInfo(shader: Value2D, w: number, h: number, data: GlowFilter): void {\r\n\t\tshader.defines.add(data.type);\r\n\t\tvar sv: any = (<any>shader);\r\n\t\tsv.u_blurInfo1 = data._sv_blurInfo1;// [data.blur, data.blur, data.offX, -data.offY];\r\n\t\tvar info2: any = data._sv_blurInfo2;\r\n\t\tinfo2[0] = w; info2[1] = h;\r\n\t\tsv.u_blurInfo2 = info2;\r\n\t\tsv.u_color = data.getColor();\r\n\t}\r\n\trender(rt: RenderTexture2D, ctx: Context, width: number, height: number, filter: GlowFilter): void {\r\n\t\tvar w: number = width, h: number = height;\r\n\t\tvar svBlur: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n\t\tthis.setShaderInfo(svBlur, w, h, filter);\r\n\t\tvar svCP: Value2D = Value2D.create(ShaderDefines2D.TEXTURE2D, 0);\r\n\t\tvar matI: Matrix = Matrix.TEMP.identity();\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svBlur);\t//先画模糊的底\r\n\t\tctx.drawTarget(rt, 0, 0, w, h, matI, svCP);\t\t//再画原始图片\r\n\r\n\t}\r\n}\r\n\r\n","import { Filter } from \"./Filter\";\r\nimport { GlowFilterGLRender } from \"./GlowFilterGLRender\";\r\nimport { ColorUtils } from \"../utils/ColorUtils\"\r\nimport { BlurFilter } from \"./BlurFilter\";\r\n\r\n/**\r\n *  发光滤镜(也可以当成阴影滤使用）\r\n */\r\nexport class GlowFilter extends Filter {\r\n\r\n    /**数据的存储，顺序R,G,B,A,blurWidth,offX,offY;*/\r\n    private _elements: Float32Array = new Float32Array(9);\r\n    /**@internal */\r\n    _sv_blurInfo1: any[] = new Array(4);\t//给shader用\r\n    /**@internal */\r\n    _sv_blurInfo2: any[] = [0, 0, 1, 0];\r\n    /**滤镜的颜色*/\r\n    private _color: ColorUtils;\r\n    /**@internal */\r\n    _color_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof1_native: Float32Array;\r\n    /**@internal */\r\n    _blurInof2_native: Float32Array;\r\n\r\n    /**\r\n     * 创建发光滤镜\r\n     * @param\tcolor\t滤镜的颜色\r\n     * @param\tblur\t边缘模糊的大小\r\n     * @param\toffX\tX轴方向的偏移\r\n     * @param\toffY\tY轴方向的偏移\r\n     */\r\n    constructor(color: string, blur: number = 4, offX: number = 6, offY: number = 6) {\r\n        super();\r\n        this._color = new ColorUtils(color || \"#000\");\r\n        //限制最大效果为20\r\n        this.blur = Math.min(blur, 20);\r\n        this.offX = offX;\r\n        this.offY = offY;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = this.blur; this._sv_blurInfo1[2] = offX; this._sv_blurInfo1[3] = -offY;\r\n        this._glRender = new GlowFilterGLRender();\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 滤镜类型\r\n     * @override\r\n     */\r\n    get type(): number {\r\n        return BlurFilter.GLOW;\r\n    }\r\n\r\n    /**@private */\r\n    get offY(): number {\r\n        return this._elements[6];\r\n    }\r\n\r\n    /**@private */\r\n    set offY(value: number) {\r\n        this._elements[6] = value;\r\n        this._sv_blurInfo1[3] = -value;\r\n    }\r\n\r\n    /**@private */\r\n    get offX(): number {\r\n        return this._elements[5];\r\n    }\r\n\r\n    /**@private */\r\n    set offX(value: number) {\r\n        this._elements[5] = value;\r\n        this._sv_blurInfo1[2] = value;\r\n    }\r\n\r\n    /**@private */\r\n    get color(): string {\r\n        return this._color.strColor;\r\n    }\r\n\r\n    /**@private */\r\n    set color(value: string) {\r\n        this._color = new ColorUtils(value);\r\n    }\r\n\r\n    /**@private */\r\n    getColor(): any[] {\r\n        return this._color.arrColor;\r\n    }\r\n\r\n    /**@private */\r\n    get blur(): number {\r\n        return this._elements[4];\r\n    }\r\n\r\n    /**@private */\r\n    set blur(value: number) {\r\n        this._elements[4] = value;\r\n        this._sv_blurInfo1[0] = this._sv_blurInfo1[1] = value;\r\n    }\r\n\r\n    getColorNative(): Float32Array {\r\n        if (!this._color_native) {\r\n            this._color_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        var color: any[] = this.getColor();\r\n        this._color_native[0] = color[0];\r\n        this._color_native[1] = color[1];\r\n        this._color_native[2] = color[2];\r\n        this._color_native[3] = color[3];\r\n        return this._color_native;\r\n    }\r\n    getBlurInfo1Native(): Float32Array {\r\n        if (!this._blurInof1_native) {\r\n            this._blurInof1_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof1_native[0] = this._blurInof1_native[1] = this.blur;\r\n        this._blurInof1_native[2] = this.offX;\r\n        this._blurInof1_native[3] = this.offY;\r\n        return this._blurInof1_native;\r\n    }\r\n    getBlurInfo2Native(): Float32Array {\r\n        if (!this._blurInof2_native) {\r\n            this._blurInof2_native = new Float32Array(4);\r\n        }\r\n        //TODO James 不用每次赋值\r\n        this._blurInof2_native[2] = 1;\r\n        return this._blurInof2_native;\r\n    }\r\n}\r\n\r\n","import { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Handler } from \"../utils/Handler\"\r\n\r\n/**\r\n * <p> <code>SoundChannel</code> 用来控制程序中的声音。每个声音均分配给一个声道，而且应用程序可以具有混合在一起的多个声道。</p>\r\n * <p> <code>SoundChannel</code> 类包含控制声音的播放、暂停、停止、音量的方法，以及获取声音的播放状态、总时间、当前播放时间、总循环次数、播放地址等信息的方法。</p>\r\n */\r\nexport class SoundChannel extends EventDispatcher {\r\n    /**\r\n     * 声音地址。\r\n     */\r\n    url: string;\r\n    /**\r\n     * 循环次数。\r\n     */\r\n    loops: number;\r\n    /**\r\n     * 播放声音开始时间。\r\n     */\r\n    startTime: number;\r\n    /**\r\n     * 表示声音是否已暂停。\r\n     */\r\n    isStopped: boolean = false;\r\n    /**\r\n     * 播放完成处理器。\r\n     */\r\n    completeHandler: Handler;\r\n\r\n    /**\r\n     * 音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    set volume(v: number) {\r\n\r\n    }\r\n\r\n    get volume(): number {\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放时间，单位是秒。\r\n     */\r\n    get position(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间，单位是秒。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     */\r\n    play(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 停止播放。\r\n     */\r\n    stop(): void {\r\n        if (this.completeHandler) this.completeHandler.runWith(false);\r\n    }\r\n\r\n    /**\r\n     * 暂停播放。\r\n     */\r\n    pause(): void {\r\n    }\r\n\r\n    /**\r\n     * 继续播放。\r\n     */\r\n    resume(): void {\r\n    }\r\n\r\n    /**\r\n     * private\r\n     */\r\n    protected __runComplete(handler: Handler): void {\r\n        if (handler) {\r\n            handler.runWith(true);\r\n        }\r\n    }\r\n}\r\n\r\n","import { Event as LayaEvent } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\n//import { SoundManager } from \"../SoundManager\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AudioSound } from \"./AudioSound\";\r\n\r\n/**\r\n * @private\r\n * audio标签播放声音的音轨控制\r\n */\r\nexport class AudioSoundChannel extends SoundChannel {\r\n\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    private _audio: HTMLAudioElement = null;\r\n    private _onEnd: (evt: Event) => void;\r\n    private _resumePlay: (evt: Event) => void;\r\n    private _src: string;\r\n\r\n    constructor(audio: HTMLAudioElement) {\r\n        super();\r\n        this._onEnd = this.__onEnd.bind(this);\r\n        this._resumePlay = this.__resumePlay.bind(this);\r\n        audio.addEventListener(\"ended\", this._onEnd);\r\n        this._audio = audio;\r\n        this._src = audio.src;\r\n    }\r\n\r\n    private __onEnd(evt: Event): void {\r\n        if (this.loops == 1) {\r\n            if (this.completeHandler) {\r\n                ILaya.systemTimer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(LayaEvent.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    private __resumePlay(): void {\r\n        if (this._audio) this._audio.removeEventListener(\"canplay\", this._resumePlay as any);\r\n        if (this.isStopped) return;\r\n        try {\r\n            this._audio.currentTime = this.startTime;\r\n            Browser.container.appendChild(this._audio);\r\n            this._audio.play();\r\n        } catch (e) {\r\n            //this.audio.play();\r\n            this.event(LayaEvent.ERROR);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @override\r\n     */\r\n    play(): void {\r\n        this.isStopped = false;\r\n        try {\r\n            this._audio.playbackRate = SoundManager.playbackRate;\r\n            this._audio.currentTime = this.startTime;\r\n        } catch (e) {\r\n            this._audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            return;\r\n        }\r\n        SoundManager.addChannel(this);\r\n        Browser.container.appendChild(this._audio);\r\n        if (\"play\" in this._audio) {\r\n            let p = this._audio.play();\r\n            if (p)\r\n                p.catch(e => { /*Auto-play was prevented*/ });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 当前播放到的位置\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get position(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.currentTime;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (!this._audio)\r\n            return 0;\r\n        return this._audio.duration;\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        //trace(\"stop and remove event\");\r\n        super.stop();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            //理论上应该全部使用stop，但是不知为什么，使用pause，为了安全我只修改在加速器模式下再调用一次stop\r\n            if (LayaEnv.isConch) {\r\n                (this._audio as any).stop();\r\n            }\r\n        this._audio.pause();\r\n        this._audio.removeEventListener(\"ended\", this._onEnd as EventListener);\r\n        this._audio.removeEventListener(\"canplay\", this._resumePlay);\r\n        //ie下使用对象池可能会导致后面的声音播放不出来\r\n        if (!ILaya.Browser.onIE) {\r\n            if (this._audio != AudioSound._musicAudio) {\r\n                Pool.recover(\"audio:\" + this.url, this._audio);\r\n            }\r\n        }\r\n        Browser.removeElement(this._audio);\r\n        this._audio = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (!this._audio)\r\n            return;\r\n        if (\"pause\" in this._audio)\r\n            this._audio.pause();\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        var audio = this._audio;\r\n        if (!audio)\r\n            return;\r\n        this.isStopped = false;\r\n        if (audio.readyState == 0) { //当音频放到后台一定时间后，会被卸载，音频会断开连接，并将readyState重置为0\r\n            audio.src = this._src;\r\n            audio.addEventListener(\"canplay\", this._resumePlay as any);\r\n            audio.load();\r\n        }\r\n        SoundManager.addChannel(this);\r\n        if (\"play\" in audio) {\r\n            audio.play();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @param v\r\n     * @override\r\n     *\r\n     */\r\n    set volume(v: number) {\r\n        if (!this._audio) return;\r\n        this._audio.volume = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @return\r\n     * @override\r\n     *\r\n     */\r\n    get volume(): number {\r\n        if (!this._audio) return 1;\r\n        return this._audio.volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { AudioSoundChannel } from \"./AudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { URL } from \"../../net/URL\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { Pool } from \"../../utils/Pool\"\r\nimport { LayaEnv } from \"../../../LayaEnv\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { AssetDb } from \"../../resource/AssetDb\";\r\n\r\n/**\r\n * @private\r\n * 使用Audio标签播放声音\r\n */\r\nexport class AudioSound extends EventDispatcher {\r\n\r\n    /**@private */\r\n    private static _audioCache: any = {};\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 播放用的audio标签\r\n     */\r\n    audio: HTMLAudioElement;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**@internal */\r\n    static _musicAudio: HTMLAudioElement;\r\n    /**\r\n     * 释放声音\r\n     *\r\n     */\r\n    dispose(): void {\r\n        var ad: HTMLAudioElement = AudioSound._audioCache[this.url];\r\n        Pool.clearBySign(\"audio:\" + this.url);\r\n        if (ad) {\r\n            if (!LayaEnv.isConch) {\r\n                ad.src = \"\";\r\n            }\r\n            delete AudioSound._audioCache[this.url];\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    static _initMusicAudio(): void {\r\n        if (AudioSound._musicAudio) return;\r\n        if (!AudioSound._musicAudio) AudioSound._musicAudio = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n        if (!LayaEnv.isConch) {\r\n            Browser.document.addEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _makeMusicOK(): void {\r\n        Browser.document.removeEventListener(\"mousedown\", AudioSound._makeMusicOK);\r\n        if (!AudioSound._musicAudio.src) {\r\n            AudioSound._musicAudio.src = \"\";\r\n            AudioSound._musicAudio.load();\r\n        } else {\r\n            AudioSound._musicAudio.play();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        var ad: HTMLAudioElement;\r\n        if (url == SoundManager._bgMusic) {\r\n            AudioSound._initMusicAudio();\r\n            ad = AudioSound._musicAudio;\r\n            if ((<any>ad).originalUrl != url) {\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                ad = null;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[url];\r\n        }\r\n        if (ad && ad.readyState >= 2) {\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (!ad) {\r\n            if (url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                ad = AudioSound._musicAudio;\r\n            } else {\r\n                ad = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n            }\r\n            AudioSound._audioCache[url] = ad;\r\n            AssetDb.inst.resolveURL(url, url => {\r\n                ad.src = URL.postFormatURL(URL.formatURL(url));\r\n            });\r\n        }\r\n        (<any>ad).originalUrl = url;\r\n\r\n        ad.addEventListener(\"canplaythrough\", onLoaded);\r\n        ad.addEventListener(\"error\", onErr);\r\n        var me: AudioSound = this;\r\n        function onLoaded(): void {\r\n            offs();\r\n            me.loaded = true;\r\n            me.event(Event.COMPLETE);\r\n        }\r\n\r\n        function onErr(): void {\r\n            ad.load = null;\r\n            offs();\r\n            me.event(Event.ERROR);\r\n        }\r\n\r\n        function offs(): void {\r\n            ad.removeEventListener(\"canplaythrough\", onLoaded);\r\n            ad.removeEventListener(\"error\", onErr);\r\n        }\r\n\r\n        this.audio = ad;\r\n        if (ad.load) {\r\n            ad.load();\r\n        } else {\r\n            onErr();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        //trace(\"playAudioSound\");\r\n        if (!this.url)\r\n            return null;\r\n\r\n        var ad: HTMLAudioElement;\r\n        if (this.url == SoundManager._bgMusic) {\r\n            ad = AudioSound._musicAudio;\r\n            if (ad.src != \"\" && (<any>ad).originalUrl != this.url) {  //@fix 清除上一次记录 防止它释放时把音乐暂停了\r\n                delete AudioSound._audioCache[(<any>ad).originalUrl];\r\n                AudioSound._audioCache[this.url] = ad;\r\n            }\r\n        } else {\r\n            ad = AudioSound._audioCache[this.url];\r\n        }\r\n\r\n        if (!ad) return null;\r\n        var tAd: HTMLAudioElement;\r\n\r\n        tAd = Pool.getItem(\"audio:\" + this.url);\r\n\r\n        if (LayaEnv.isConch) {\r\n            if (!tAd) {\r\n                tAd = (<HTMLAudioElement>Browser.createElement(\"audio\"));\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            if (this.url == SoundManager._bgMusic) {\r\n                AudioSound._initMusicAudio();\r\n                tAd = AudioSound._musicAudio;\r\n                AssetDb.inst.resolveURL(this.url, url => {\r\n                    tAd.src = URL.postFormatURL(URL.formatURL(url));\r\n                });\r\n            } else {\r\n                tAd = tAd ? tAd : ad.cloneNode(true) as HTMLAudioElement;\r\n            }\r\n        }\r\n        (<any>tAd).originalUrl = this.url;\r\n\r\n        var channel: AudioSoundChannel = new AudioSoundChannel(tAd);\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        var ad: HTMLAudioElement;\r\n        ad = AudioSound._audioCache[this.url];\r\n        if (!ad)\r\n            return 0;\r\n        return ad.duration;\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../../events/Event\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { Browser } from \"../../utils/Browser\"\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音的音轨控制\r\n */\r\nexport class WebAudioSoundChannel extends SoundChannel {\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: any;\r\n\r\n    /**\r\n     * gain节点\r\n     */\r\n    private gain: any;\r\n\r\n    /**\r\n     * 播放用的数据\r\n     */\r\n    private bufferSource: any = null;\r\n    /**\r\n     * 当前时间\r\n     */\r\n    private _currentTime: number = 0;\r\n\r\n    /**\r\n     * 当前音量\r\n     */\r\n    private _volume: number = 1;\r\n\r\n    /**\r\n     * 播放开始时的时间戳\r\n     */\r\n    private _startTime: number = 0;\r\n\r\n    private _pauseTime: number = 0;\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    private context: AudioContext;\r\n\r\n    private _onPlayEnd: Function;\r\n    private static _tryCleanFailed: boolean = false;\r\n    static SetTargetDelay: number = 0.001;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.context = WebAudioSound.ctx;\r\n\r\n        this._onPlayEnd = this.__onPlayEnd.bind(this);\r\n        if (this.context[\"createGain\"]) {\r\n            this.gain = this.context[\"createGain\"]();\r\n        } else {\r\n            this.gain = (<any>this.context)[\"createGainNode\"]();\r\n        }\r\n    }\r\n    /**\r\n     * 播放声音\r\n     * @override\r\n     */\r\n    play(): void {\r\n        SoundManager.addChannel(this);\r\n        this.isStopped = false;\r\n        this._clearBufferSource();\r\n        if (!this.audioBuffer) return;\r\n        if (this.startTime >= this.duration) return this.stop();\r\n        var context: any = this.context;\r\n        var gain: any = this.gain;\r\n        var bufferSource: any = context.createBufferSource();\r\n        this.bufferSource = bufferSource;\r\n        bufferSource.buffer = this.audioBuffer;\r\n        bufferSource.connect(gain);\r\n        if (gain)\r\n            gain.disconnect();\r\n        gain.connect(context.destination);\r\n        bufferSource.onended = this._onPlayEnd;\r\n        // if (this.startTime >= this.duration) this.startTime = 0;\r\n        this._startTime = Browser.now();\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(this._volume, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = this._volume;\r\n        if (this.loops == 0) {\r\n            bufferSource.loop = true;\r\n        }\r\n        if (bufferSource.playbackRate.setTargetAtTime) {\r\n            bufferSource.playbackRate.setTargetAtTime(SoundManager.playbackRate, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay)\r\n        } else\r\n            bufferSource.playbackRate.value = SoundManager.playbackRate;\r\n        bufferSource.start(0, this.startTime);\r\n        this._currentTime = 0;\r\n    }\r\n\r\n\r\n\r\n    private __onPlayEnd(): void {\r\n        if (this.loops == 1) {\r\n\r\n            if (this.completeHandler) {\r\n                ILaya.timer.once(10, this, this.__runComplete, [this.completeHandler], false);\r\n                this.completeHandler = null;\r\n            }\r\n            this.stop();\r\n            this.event(Event.COMPLETE);\r\n            return;\r\n        }\r\n        if (this.loops > 0) {\r\n            this.loops--;\r\n        }\r\n        this.startTime = 0;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放位置\r\n     * @override\r\n     */\r\n    get position(): number {\r\n        if (this.bufferSource) {\r\n            return (Browser.now() - this._startTime) / 1000 + this.startTime;\r\n        }\r\n        return 0;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private _clearBufferSource(): void {\r\n        if (this.bufferSource) {\r\n            var sourceNode: any = this.bufferSource;\r\n            if (sourceNode.stop) {\r\n                sourceNode.stop(0);\r\n            } else {\r\n                sourceNode.noteOff(0);\r\n            }\r\n            sourceNode.disconnect(0);\r\n            sourceNode.onended = null;\r\n            if (!WebAudioSoundChannel._tryCleanFailed) this._tryClearBuffer(sourceNode);\r\n            this.bufferSource = null;\r\n        }\r\n    }\r\n\r\n    private _tryClearBuffer(sourceNode: any): void {\r\n        try {//已经支持buffer=null\r\n            sourceNode.buffer = null;\r\n        } catch (e) {\r\n            WebAudioSoundChannel._tryCleanFailed = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     * @override\r\n     */\r\n    stop(): void {\r\n        super.stop();\r\n        this._clearBufferSource();\r\n        this.audioBuffer = null;\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        this.completeHandler = null;\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    pause(): void {\r\n        if (!this.isStopped) {\r\n            this._pauseTime = this.position;\r\n        }\r\n        this._clearBufferSource();\r\n        if (this.gain)\r\n            this.gain.disconnect();\r\n        this.isStopped = true;\r\n        SoundManager.removeChannel(this);\r\n        if (SoundManager.autoReleaseSound)\r\n            SoundManager.disposeSoundLater(this.url);\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    resume(): void {\r\n        this.startTime = this._pauseTime;\r\n        this.play();\r\n    }\r\n\r\n    /**\r\n     * 设置音量\r\n     * @override\r\n     */\r\n    set volume(v: number) {\r\n        this._volume = v;\r\n        if (this.isStopped) {\r\n            return;\r\n        }\r\n        if (this.gain.gain.setTargetAtTime) {\r\n            this.gain.gain.setTargetAtTime(v, this.context.currentTime, WebAudioSoundChannel.SetTargetDelay);\r\n        } else\r\n            this.gain.gain.value = v;\r\n    }\r\n\r\n    /**\r\n     * 获取音量\r\n     * @override\r\n     */\r\n    get volume(): number {\r\n        return this._volume;\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { WebAudioSoundChannel } from \"./WebAudioSoundChannel\";\r\nimport { Event } from \"../../events/Event\"\r\nimport { EventDispatcher } from \"../../events/EventDispatcher\"\r\nimport { SoundChannel } from \"../SoundChannel\"\r\nimport { SoundManager } from \"../SoundManager\";\r\nimport { ILaya } from \"../../../ILaya\";\r\nimport { Loader } from \"../../net/Loader\";\r\n\r\n/**\r\n * @private\r\n * web audio api方式播放声音\r\n */\r\nexport class WebAudioSound extends EventDispatcher {\r\n\r\n    /**\r\n     * 播放设备\r\n     */\r\n    static ctx: AudioContext;\r\n\r\n    /**\r\n     * 用于播放解锁声音以及解决Ios9版本的内存释放\r\n     */\r\n    static _miniBuffer: any = WebAudioSound.ctx ? WebAudioSound.ctx.createBuffer(1, 1, 22050) : undefined;\r\n\r\n    /**\r\n     * 是否已解锁声音播放\r\n     */\r\n    private static _unlocked: boolean = false;\r\n\r\n    /**\r\n     * 声音URL\r\n     */\r\n    url: string;\r\n    /**\r\n     * 是否已加载完成\r\n     */\r\n    loaded: boolean = false;\r\n    /**\r\n     * 声音原始文件数据\r\n     */\r\n    audioBuffer: AudioBuffer;\r\n    /**\r\n     * 待播放的声音列表\r\n     */\r\n    private __toPlays: any[];\r\n    /**\r\n     * @private\r\n     */\r\n    private _disposed: boolean = false;\r\n\r\n\r\n    /**\r\n     * 播放声音以解锁IOS的声音\r\n     *\r\n     */\r\n    private static _playEmptySound(): void {\r\n        if (WebAudioSound.ctx == null) {\r\n            return;\r\n        }\r\n        var source: any = WebAudioSound.ctx.createBufferSource();\r\n        source.buffer = WebAudioSound._miniBuffer;\r\n        source.connect(WebAudioSound.ctx.destination);\r\n        source.start(0, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * 尝试解锁声音\r\n     *\r\n     */\r\n    private static _unlock(): void {\r\n        if (WebAudioSound._unlocked) {\r\n            return;\r\n        }\r\n        WebAudioSound._playEmptySound();\r\n        if (WebAudioSound.ctx.state == \"running\") {\r\n            window.document.removeEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.removeEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n            WebAudioSound._unlocked = true;\r\n        }\r\n    }\r\n    /*;*/\r\n\r\n    static initWebAudio(): void {\r\n        WebAudioSound.ctx = new (window[\"AudioContext\"] || (window as any)[\"webkitAudioContext\"] || (window as any)[\"mozAudioContext\"])();\r\n\r\n        if (WebAudioSound.ctx.state != \"running\") {\r\n            WebAudioSound._unlock(); // When played inside of a touch event, this will enable audio on iOS immediately.\r\n            window.document.addEventListener(\"mousedown\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchend\", WebAudioSound._unlock, true);\r\n            window.document.addEventListener(\"touchstart\", WebAudioSound._unlock, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载声音\r\n     * @param url\r\n     *\r\n     */\r\n    load(url: string): void {\r\n        this.url = url;\r\n        this.audioBuffer = ILaya.loader.getRes(url);\r\n        if (this.audioBuffer) {\r\n            this._loaded(this.audioBuffer);\r\n            return;\r\n        }\r\n        ILaya.loader.load(url, Loader.SOUND).then(audioBuffer => this._loaded(audioBuffer));\r\n    }\r\n\r\n    private _loaded(audioBuffer: any): void {\r\n        if (this._disposed)\r\n            return;\r\n\r\n        this.audioBuffer = audioBuffer;\r\n        this.loaded = true;\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    private __playAfterLoaded(): void {\r\n        if (!this.__toPlays) return;\r\n        var i: number, len: number;\r\n        var toPlays: any[];\r\n        toPlays = this.__toPlays;\r\n        len = toPlays.length;\r\n        var tParams: any[];\r\n        for (i = 0; i < len; i++) {\r\n            tParams = toPlays[i];\r\n            if (tParams[2] && !((<WebAudioSoundChannel>tParams[2])).isStopped) {\r\n                this.play(tParams[0], tParams[1], tParams[2]);\r\n            }\r\n        }\r\n        this.__toPlays.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 播放声音\r\n     * @param startTime 起始时间\r\n     * @param loops 循环次数\r\n     * @return\r\n     *\r\n     */\r\n    play(startTime: number = 0, loops: number = 0, channel: WebAudioSoundChannel = null): SoundChannel {\r\n        channel = channel ? channel : new WebAudioSoundChannel();\r\n        if (!this.audioBuffer) {\r\n            if (this.url) {\r\n                if (!this.__toPlays) this.__toPlays = [];\r\n                this.__toPlays.push([startTime, loops, channel]);\r\n                this.once(Event.COMPLETE, this, this.__playAfterLoaded);\r\n                this.load(this.url);\r\n            }\r\n        }\r\n        channel.url = this.url;\r\n        channel.loops = loops;\r\n        channel.audioBuffer = this.audioBuffer;\r\n        channel.startTime = startTime;\r\n        channel.play();\r\n        SoundManager.addChannel(channel);\r\n        return channel;\r\n    }\r\n\r\n    get duration(): number {\r\n        if (this.audioBuffer) {\r\n            return this.audioBuffer.duration;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    dispose(): void {\r\n        this._disposed = true;\r\n        if (this.audioBuffer) {\r\n            ILaya.loader.clearRes(this.url, this.audioBuffer);\r\n            this.audioBuffer = null;\r\n        }\r\n        this.__toPlays = [];\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { Event } from \"../events/Event\"\r\nimport { AudioSound } from \"./h5audio/AudioSound\"\r\nimport { WebAudioSound } from \"./webaudio/WebAudioSound\"\r\nimport { URL } from \"../net/URL\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { Sound } from \"./Sound\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * <code>SoundManager</code> 是一个声音管理类。提供了对背景音乐、音效的播放控制方法。\r\n * 引擎默认有两套声音方案：WebAudio和H5Audio\r\n * 播放音效，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n * 播放背景音乐，则使用H5Audio播放（使用WebAudio会增加特别大的内存，并且要等加载完毕后才能播放，有延迟）\r\n * 建议背景音乐用mp3类型，音效用wav或者mp3类型（如果打包为app，音效只能用wav格式）。\r\n * 详细教程及声音格式请参考：http://ldc2.layabox.com/doc/?nav=ch-as-1-7-0\r\n */\r\nexport class SoundManager {\r\n    /**\r\n     * 背景音乐音量。\r\n     * @default 1\r\n     */\r\n    static musicVolume: number = 1;\r\n    /**\r\n     * 音效音量。\r\n     * @default 1\r\n     */\r\n    static soundVolume: number = 1;\r\n    /**\r\n     * 声音播放速率。\r\n     * @default 1\r\n     */\r\n    static playbackRate: number = 1;\r\n    /**\r\n     * 背景音乐使用Audio标签播放。\r\n     * @default true\r\n     */\r\n    private static _useAudioMusic: boolean = true;\r\n    /**@private 是否静音，默认为false。*/\r\n    private static _muted: boolean = false;\r\n    /**@private 是否音效静音，默认为false。*/\r\n    private static _soundMuted: boolean = false;\r\n    /**@private 是否背景音乐静音，默认为false。*/\r\n    private static _musicMuted: boolean = false;\r\n    /**@internal 当前背景音乐url。*/\r\n    static _bgMusic: string = null;\r\n    /**@private 当前背景音乐声道。*/\r\n    static _musicChannel: SoundChannel = null;\r\n    /**@private 当前播放的Channel列表。*/\r\n    private static _channels: any[] = [];\r\n    /**@private */\r\n    private static _autoStopMusic: boolean;\r\n    /**@private */\r\n    private static _blurPaused: boolean = false;\r\n    /**@private */\r\n    private static _isActive: boolean = true;\r\n    /**@internal */\r\n    static _soundClass: new () => any;\r\n    /**@internal */\r\n    static _musicClass: new () => any;\r\n    /**@private */\r\n    private static _lastSoundUsedTimeDic: any = {};\r\n    /**@private */\r\n    private static _isCheckingDispose: boolean = false;\r\n    /**@private */\r\n    private static _soundCache: Record<string, Sound> = {};\r\n\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        var win: any = ILaya.Browser.window;\r\n        var supportWebAudio = win[\"AudioContext\"] || win[\"webkitAudioContext\"] || win[\"mozAudioContext\"] ? true : false;\r\n        if (supportWebAudio)\r\n            WebAudioSound.initWebAudio();\r\n        SoundManager._soundClass = supportWebAudio ? WebAudioSound : AudioSound;\r\n\r\n        if (!Browser.onTBMiniGame) {\r\n            AudioSound._initMusicAudio();\r\n        }\r\n        SoundManager._musicClass = AudioSound;\r\n\r\n        return supportWebAudio;\r\n    }\r\n\r\n    /**\r\n     * 音效播放后自动删除。\r\n     * @default true\r\n     */\r\n    static autoReleaseSound: boolean = true;\r\n\r\n    /**\r\n     * 添加播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static addChannel(channel: SoundChannel): void {\r\n        if (SoundManager._channels.indexOf(channel) >= 0) return;\r\n        SoundManager._channels.push(channel);\r\n    }\r\n\r\n    /**\r\n     * 移除播放的声音实例。\r\n     * @param channel <code>SoundChannel</code> 对象。\r\n     */\r\n    static removeChannel(channel: SoundChannel): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i] == channel) {\r\n                SoundManager._channels.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundLater(url: string): void {\r\n        SoundManager._lastSoundUsedTimeDic[url] = ILaya.Browser.now();\r\n        if (!SoundManager._isCheckingDispose) {\r\n            SoundManager._isCheckingDispose = true;\r\n            ILaya.timer.loop(5000, null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    private static _checkDisposeSound(): void {\r\n        let tTime: number = ILaya.Browser.now();\r\n        let hasCheck: boolean = false;\r\n        for (let key in SoundManager._lastSoundUsedTimeDic) {\r\n            if (tTime - SoundManager._lastSoundUsedTimeDic[key] > 30000) {\r\n                delete SoundManager._lastSoundUsedTimeDic[key];\r\n                SoundManager.disposeSoundIfNotUsed(key);\r\n            } else {\r\n                hasCheck = true;\r\n            }\r\n        }\r\n        if (!hasCheck) {\r\n            SoundManager._isCheckingDispose = false;\r\n            ILaya.timer.clear(null, SoundManager._checkDisposeSound);\r\n        }\r\n    }\r\n\r\n    /**@private */\r\n    static disposeSoundIfNotUsed(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            if (SoundManager._channels[i].url == url) {\r\n                return;\r\n            }\r\n        }\r\n        SoundManager.destroySound(url);\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     * @param v Boolean 失去焦点后是否自动停止背景音乐。\r\n     *\r\n     */\r\n    static set autoStopMusic(v: boolean) {\r\n        ILaya.stage.off(Event.BLUR, null, SoundManager._stageOnBlur);\r\n        ILaya.stage.off(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n        ILaya.stage.off(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        SoundManager._autoStopMusic = v;\r\n        if (v) {\r\n            ILaya.stage.on(Event.BLUR, null, SoundManager._stageOnBlur);\r\n            ILaya.stage.on(Event.FOCUS, null, SoundManager._stageOnFocus);\r\n            ILaya.stage.on(Event.VISIBILITY_CHANGE, null, SoundManager._visibilityChange);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 失去焦点后是否自动停止背景音乐。\r\n     */\r\n    static get autoStopMusic(): boolean {\r\n        return SoundManager._autoStopMusic;\r\n    }\r\n\r\n    private static _visibilityChange(): void {\r\n        if (ILaya.stage.isVisibility) {\r\n            SoundManager._stageOnFocus();\r\n        } else {\r\n            SoundManager._stageOnBlur();\r\n        }\r\n    }\r\n\r\n    private static _stageOnBlur(): void {\r\n        SoundManager._isActive = false;\r\n        if (SoundManager._musicChannel) {\r\n            if (!SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = true;\r\n                SoundManager._musicChannel.pause();\r\n\r\n            }\r\n\r\n        }\r\n        SoundManager.stopAllSound();\r\n        ILaya.stage.once(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n    }\r\n\r\n    private static _recoverWebAudio(): void {\r\n        if (WebAudioSound.ctx && WebAudioSound.ctx.state != \"running\" && WebAudioSound.ctx.resume)\r\n            WebAudioSound.ctx.resume();\r\n    }\r\n\r\n    private static _stageOnFocus(): void {\r\n        SoundManager._isActive = true;\r\n        SoundManager._recoverWebAudio();\r\n        ILaya.stage.off(Event.MOUSE_DOWN, null, SoundManager._stageOnFocus);\r\n        if (SoundManager._blurPaused) {\r\n            if (SoundManager._musicChannel && SoundManager._musicChannel.isStopped) {\r\n                SoundManager._blurPaused = false;\r\n                SoundManager._musicChannel.resume();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 背景音乐和所有音效是否静音。\r\n     */\r\n    static set muted(value: boolean) {\r\n        if (value == SoundManager._muted) return;\r\n        if (value) {\r\n            SoundManager.stopAllSound();\r\n        }\r\n        SoundManager.musicMuted = value;\r\n        SoundManager._muted = value;\r\n    }\r\n\r\n    static get muted(): boolean {\r\n        return SoundManager._muted;\r\n    }\r\n\r\n    /**\r\n     * 所有音效（不包括背景音乐）是否静音。\r\n     */\r\n    static set soundMuted(value: boolean) {\r\n        SoundManager._soundMuted = value;\r\n    }\r\n\r\n    static get soundMuted(): boolean {\r\n        return SoundManager._soundMuted;\r\n    }\r\n\r\n    /**\r\n     * 背景音乐（不包括音效）是否静音。\r\n     */\r\n    static set musicMuted(value: boolean) {\r\n        if (value == SoundManager._musicMuted) return;\r\n        if (value) {\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel && !SoundManager._musicChannel.isStopped) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = true;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.pause();\r\n                    }\r\n                } else {\r\n                    SoundManager._musicChannel = null;\r\n                }\r\n            } else {\r\n                SoundManager._musicChannel = null;\r\n            }\r\n\r\n            SoundManager._musicMuted = value;\r\n        } else {\r\n            SoundManager._musicMuted = value;\r\n            if (SoundManager._bgMusic) {\r\n                if (SoundManager._musicChannel) {\r\n                    if (LayaEnv.isConch) {\r\n                        if ((SoundManager._musicChannel as any)._audio) (SoundManager._musicChannel as any)._audio.muted = false;;\r\n                    }\r\n                    else {\r\n                        SoundManager._musicChannel.resume();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    static get musicMuted(): boolean {\r\n        return SoundManager._musicMuted;\r\n    }\r\n\r\n    static get useAudioMusic(): boolean {\r\n        return SoundManager._useAudioMusic;\r\n    }\r\n\r\n    static set useAudioMusic(value: boolean) {\r\n        SoundManager._useAudioMusic = value;\r\n        if (value) {\r\n            SoundManager._musicClass = AudioSound;\r\n        } else {\r\n            SoundManager._musicClass = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放音效。音效可以同时播放多个。\r\n     * @param url\t\t\t声音文件地址。\r\n     * @param loops\t\t\t循环次数,0表示无限循环。\r\n     * @param complete\t\t声音播放完成回调  Handler对象。\r\n     * @param soundClass\t使用哪个声音类进行播放，null表示自动选择。\r\n     * @param startTime\t\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playSound(url: string, loops: number = 1, complete: Handler = null, soundClass: new () => any = null, startTime: number = 0): SoundChannel {\r\n        if (!SoundManager._isActive || !url) return null;\r\n        if (SoundManager._muted) return null;\r\n        SoundManager._recoverWebAudio();\r\n        if (url == SoundManager._bgMusic) {\r\n            if (SoundManager._musicMuted) return null;\r\n        } else {\r\n            if (SoundManager._soundMuted) return null;\r\n        }\r\n        let tSound: Sound;\r\n        if (!Browser._isMiniGame) {\r\n            tSound = SoundManager._soundCache[url];\r\n        }\r\n        if (!soundClass) soundClass = SoundManager._soundClass;\r\n        if (!tSound) {\r\n            tSound = new soundClass();\r\n            tSound.load(url);\r\n            if (!Browser._isMiniGame) {\r\n                SoundManager._soundCache[url] = tSound;\r\n            }\r\n        }\r\n        let channel = tSound.play(startTime, loops);\r\n        if (!channel) return null;\r\n        channel.url = url;\r\n        channel.volume = (url == SoundManager._bgMusic) ? SoundManager.musicVolume : SoundManager.soundVolume;\r\n        channel.completeHandler = complete;\r\n        return channel;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     * @param url\t声音播放地址。\r\n     */\r\n    static destroySound(url: string): void {\r\n        let tSound = SoundManager._soundCache[url];\r\n        if (tSound) {\r\n            delete SoundManager._soundCache[url];\r\n            tSound.dispose();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 播放背景音乐。背景音乐同时只能播放一个，如果在播放背景音乐时再次调用本方法，会先停止之前的背景音乐，再播放当前的背景音乐。\r\n     * @param url\t\t声音文件地址。\r\n     * @param loops\t\t循环次数,0表示无限循环。\r\n     * @param complete\t声音播放完成回调,complete 结果参数 true: 播放完成, false/undefined ：stop触发的complete。\r\n     * @param startTime\t声音播放起始时间。\r\n     * @return SoundChannel对象，通过此对象可以对声音进行控制，以及获取声音信息。\r\n     */\r\n    static playMusic(url: string, loops: number = 0, complete: Handler = null, startTime: number = 0): SoundChannel {\r\n        SoundManager._bgMusic = url;\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        return SoundManager._musicChannel = SoundManager.playSound(url, loops, complete, SoundManager._musicClass, startTime);\r\n    }\r\n\r\n    /**\r\n     * 停止声音播放。此方法能够停止任意声音的播放（包括背景音乐和音效），只需传入对应的声音播放地址。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopSound(url: string): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有声音（包括背景音乐和音效）。\r\n     */\r\n    static stopAll(): void {\r\n        SoundManager._bgMusic = null;\r\n        var i: number;\r\n        var channel: SoundChannel;\r\n        for (i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            channel = SoundManager._channels[i];\r\n            channel.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放所有音效（不包括背景音乐）。\r\n     */\r\n    static stopAllSound(): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url != SoundManager._bgMusic) {\r\n                channel.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 停止播放背景音乐（不包括音效）。\r\n     * @param url  声音文件地址。\r\n     */\r\n    static stopMusic(): void {\r\n        if (SoundManager._musicChannel) SoundManager._musicChannel.stop();\r\n        SoundManager._bgMusic = null;\r\n    }\r\n\r\n    /**\r\n     * 设置声音音量。根据参数不同，可以分别设置指定声音（背景音乐或音效）音量或者所有音效（不包括背景音乐）音量。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param url\t\t(default = null)声音播放地址。默认为null。为空表示设置所有音效（不包括背景音乐）的音量，不为空表示设置指定声音（背景音乐或音效）的音量。\r\n     */\r\n    static setSoundVolume(volume: number, url: string = null): void {\r\n        if (url) {\r\n            SoundManager._setVolume(url, volume);\r\n        } else {\r\n            SoundManager.soundVolume = volume;\r\n            for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n                let channel = SoundManager._channels[i];\r\n                if (channel.url != SoundManager._bgMusic) {\r\n                    channel.volume = volume;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置背景音乐音量。音量范围从 0（静音）至 1（最大音量）。\r\n     * @param volume\t音量。初始值为1。音量范围从 0（静音）至 1（最大音量）。\r\n     */\r\n    static setMusicVolume(volume: number): void {\r\n        SoundManager.musicVolume = volume;\r\n        SoundManager._setVolume(SoundManager._bgMusic, volume);\r\n    }\r\n\r\n    /**\r\n     * 设置指定声音的音量。\r\n     * @param url\t\t声音文件url\r\n     * @param volume\t音量。初始值为1。\r\n     */\r\n    private static _setVolume(url: string, volume: number): void {\r\n        for (let i = SoundManager._channels.length - 1; i >= 0; i--) {\r\n            let channel = SoundManager._channels[i];\r\n            if (channel.url == url) {\r\n                channel.volume = volume;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { SoundManager } from \"./SoundManager\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { Event } from \"../events/Event\"\r\nimport { Handler } from \"../utils/Handler\"\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\n/**\r\n * 用于播放背景音乐或者音效的节点\r\n */\r\nexport class SoundNode extends Sprite {\r\n    private _channel: SoundChannel;\r\n    private _tar: Sprite;\r\n    private _playEvents: string;\r\n    private _stopEvents: string;\r\n    private _source: string;\r\n    private _isMusic: boolean;\r\n    private _autoPlay: boolean;\r\n    private _loop: number;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this._loop = 1;\r\n\r\n        this.on(Event.ADDED, this, this._onParentChange);\r\n        this.on(Event.REMOVED, this, this._onParentChange);\r\n    }\r\n\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        this._source = value;\r\n        if (value) {\r\n            if (this._autoPlay && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n                this.play();\r\n        }\r\n        else\r\n            this.stop();\r\n    }\r\n\r\n    /**\r\n     * 如果是，音乐类型为背景音乐，否则为音效\r\n     */\r\n    get isMusic() {\r\n        return this._isMusic;\r\n    }\r\n\r\n    set isMusic(value: boolean) {\r\n        this._isMusic = value;\r\n    }\r\n\r\n    /**\r\n     * 循环次数\r\n     */\r\n    get loop() {\r\n        return this._loop;\r\n    }\r\n\r\n    set loop(value: number) {\r\n        this._loop = value;\r\n    }\r\n\r\n    /**\r\n     * 是否自动播放\r\n     */\r\n    get autoPlay() {\r\n        return this._autoPlay;\r\n    }\r\n\r\n    set autoPlay(value: boolean) {\r\n        this._autoPlay = value;\r\n        if (value && this._source && (!this._channel || this._channel.isStopped) && LayaEnv.isPlaying)\r\n            this.play();\r\n    }\r\n\r\n    /**@private */\r\n    private _onParentChange(): void {\r\n        this.target = (<Sprite>this.parent);\r\n    }\r\n\r\n    /**\r\n     * 播放\r\n     * @param loops 循环次数\r\n     * @param complete 完成回调\r\n     *\r\n     */\r\n    play(loops?: number, complete?: Handler): void {\r\n        if (!this._source) return;\r\n\r\n        if (loops == null || isNaN(loops))\r\n            loops = this._loop;\r\n\r\n        this.stop();\r\n\r\n        if (this._isMusic)\r\n            this._channel = SoundManager.playMusic(this._source, loops, complete);\r\n        else\r\n            this._channel = SoundManager.playSound(this._source, loops, complete);\r\n    }\r\n\r\n    /**\r\n     * 停止播放\r\n     *\r\n     */\r\n    stop(): void {\r\n        if (this._channel && !this._channel.isStopped) {\r\n            this._channel.stop();\r\n        }\r\n        this._channel = null;\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayAction(tar: Sprite, event: string, action: string, add: boolean = true): void {\r\n        if (!(this as any)[action]) return;\r\n        if (!tar) return;\r\n        if (add) {\r\n            tar.on(event, this, (this as any)[action]);\r\n        } else {\r\n            tar.off(event, this, (this as any)[action]);\r\n        }\r\n\r\n    }\r\n\r\n    /**@private */\r\n    private _setPlayActions(tar: Sprite, events: string, action: string, add: boolean = true): void {\r\n        if (!tar) return;\r\n        if (!events) return;\r\n        let eventArr = events.split(\",\");\r\n        let len = eventArr.length;\r\n        for (let i = 0; i < len; i++) {\r\n            this._setPlayAction(tar, eventArr[i], action, add);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发播放的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set playEvent(events: string) {\r\n        this._playEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"play\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置控制播放的对象\r\n     * @param tar\r\n     *\r\n     */\r\n    set target(tar: Sprite) {\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", false);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", false);\r\n        }\r\n        this._tar = tar;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, this._playEvents, \"play\", true);\r\n            this._setPlayActions(this._tar, this._stopEvents, \"stop\", true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置触发停止的事件\r\n     * @param events\r\n     *\r\n     */\r\n    set stopEvent(events: string) {\r\n        this._stopEvents = events;\r\n        if (!events) return;\r\n        if (this._tar) {\r\n            this._setPlayActions(this._tar, events, \"stop\");\r\n        }\r\n    }\r\n}\r\n","import { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { URL } from \"../net/URL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { FilterMode } from \"../RenderEngine/RenderEnum/FilterMode\";\r\nimport { WrapMode } from \"../RenderEngine/RenderEnum/WrapMode\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Event as LayaEvent } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\n\r\n\r\n/**\r\n * <code>VideoTexture</code> 多媒体纹理\r\n */\r\nexport class VideoTexture extends BaseTexture {\r\n    public readonly element: HTMLVideoElement;\r\n\r\n    private _source: string;\r\n    private _listeningEvents: Record<string, (evt: Event) => void>;\r\n    private immediatelyPlay: boolean;\r\n    /**\r\n     * 是否开发者自己调用Render\r\n     */\r\n    private _frameRender: boolean;\r\n    /** @inernal 避免重复的加载 */\r\n    _isLoaded: boolean;\r\n    _needUpdate: boolean;\r\n\r\n    /**\r\n     * 创建VideoTexture对象，\r\n     */\r\n    constructor() {\r\n        let ele: HTMLVideoElement = ILaya.Browser.createElement(\"video\");\r\n        super(ele.videoWidth, ele.videoHeight, RenderTargetFormat.R8G8B8);\r\n        this._frameRender = true;\r\n        this._isLoaded = false;\r\n        this._needUpdate = false;\r\n        this.immediatelyPlay = false;\r\n        this.element = ele;\r\n\r\n        this._listeningEvents = {};\r\n\r\n        this._dimension = TextureDimension.Tex2D;\r\n\r\n\r\n        // ele.setAttribute('crossorigin', 'Anonymous');\r\n\r\n        var style: any = this.element.style;\r\n        style.position = 'absolute';\r\n        style.top = '0px';\r\n        style.left = '0px';\r\n\r\n        // 默认放开webGL对纹理数据的跨域限制\r\n        ele.setAttribute('crossorigin', 'anonymous');\r\n        if (ILaya.Browser.onMobile) {\r\n            //@ts-ignore\r\n            ele[\"x5-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"x5-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.x5PlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsInline = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsInline\"] = true;\r\n            //@ts-ignore\r\n            ele[\"webkit-playsinline\"] = true;\r\n            //@ts-ignore\r\n            ele.webkitPlaysInline = true;\r\n            //@ts-ignore\r\n            ele.playsinline = true;\r\n            //@ts-ignore\r\n            ele.style.playsInline = true;\r\n            ele.crossOrigin = \"anonymous\";\r\n            ele.setAttribute('playsinline', 'true');\r\n            ele.setAttribute('x5-playsinline', 'true');\r\n            ele.setAttribute('webkit-playsinline', 'true');\r\n            ele.autoplay = true;\r\n        }\r\n\r\n        ele.addEventListener(\"loadedmetadata\", () => {\r\n            this.loadedmetadata();\r\n        });\r\n        const scope = this;\r\n        function updateVideo() {\r\n            scope._needUpdate = true;\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n\r\n        }\r\n        if ('requestVideoFrameCallback' in ele) {\r\n            ele.requestVideoFrameCallback(updateVideo);\r\n        }\r\n        //ios微信浏览器环境下默认不触发loadedmetadata，在主动调用play方法的时候才会触发loadedmetadata事件\r\n        if (ILaya.Browser.onWeiXin) {\r\n            this.loadedmetadata();\r\n        }\r\n    }\r\n\r\n    private isNeedUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n\r\n    loadedmetadata() {\r\n        if (this._isLoaded)\r\n            return;\r\n        //flag only TODO\r\n        this._width = this.element.videoWidth;\r\n        this._height = this.element.videoHeight;\r\n        if (Browser.onLayaRuntime) {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8A8, false, false, false);\r\n        }\r\n        else {\r\n            this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, this.element.videoWidth, this.element.videoHeight, TextureFormat.R8G8B8, false, false, false);\r\n        }\r\n        this.wrapModeU = WrapMode.Clamp;\r\n        this.wrapModeV = WrapMode.Clamp;\r\n        this.filterMode = FilterMode.Bilinear;\r\n        LayaGL.textureContext.initVideoTextureData(this._texture);\r\n        this._texture.gammaCorrection = 2.2;//这里使用srgb会变得特别的卡，所以srgb的转换放入Shader中进行\r\n        if (this.immediatelyPlay) {\r\n            this.play();\r\n        }\r\n        this._isLoaded = true;\r\n        this.event(LayaEvent.READY, this);\r\n    }\r\n\r\n    get source(): string {\r\n        return this._source;\r\n    }\r\n\r\n    get gammaCorrection() {\r\n        return 2.2;\r\n    }\r\n\r\n    /**\r\n    * 设置播放源路径\r\n    * @param url 播放源路径\r\n    */\r\n    set source(url: string) {\r\n        this._source = url;\r\n        if (!url)\r\n            return;\r\n\r\n        AssetDb.inst.resolveURL(url, url => {\r\n            while (this.element.childElementCount)\r\n                this.element.firstChild.remove();\r\n\r\n            if (url.startsWith(\"blob:\"))\r\n                this.element.src = url;\r\n            else\r\n                this.appendSource(url);\r\n        });\r\n    }\r\n\r\n    private appendSource(source: string): void {\r\n        var sourceElement: HTMLSourceElement = ILaya.Browser.createElement(\"source\");\r\n        sourceElement.src = URL.postFormatURL(URL.formatURL(source));\r\n        let extension = Utils.getFileExtension(source);\r\n        sourceElement.type = extension == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + extension);\r\n        this.element.appendChild(sourceElement);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    render() {\r\n\r\n        if (this.element.readyState == 0)\r\n            return;\r\n        if (this.isNeedUpdate() || Browser.onLayaRuntime) {\r\n            LayaGL.textureContext.updateVideoTexture(this._texture, this.element, false, false);\r\n            this._needUpdate = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 是否每一帧都渲染\r\n     */\r\n    set frameRender(value: boolean) {\r\n        if (this._frameRender && !value) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n        if (!this._frameRender && value) {\r\n            ILaya.timer.frameLoop(1, this, this.render);\r\n        }\r\n        this._frameRender = value;\r\n    }\r\n\r\n    get frameRender() {\r\n        return this._frameRender;\r\n    }\r\n\r\n\r\n    /**\r\n     * 开始播放视频\r\n     */\r\n    play() {\r\n        if (!this._texture) {\r\n            this.immediatelyPlay = true;\r\n        } else {\r\n            this.element.play().catch(() => {\r\n                this.event(\"NotAllowedError\");\r\n            });\r\n            if (this._frameRender) {\r\n                ILaya.timer.frameLoop(1, this, this.render);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    _getSource() {\r\n        return this._texture ? this._texture.resource : null;\r\n    }\r\n\r\n    get defaultTexture() {\r\n        return Texture2D.whiteTexture;\r\n    }\r\n\r\n    /**\r\n     * 暂停播放视频\r\n     */\r\n    pause() {\r\n        this.element.pause();\r\n        if (this._frameRender) {\r\n            ILaya.timer.clear(this, this.render);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    load(): void {\r\n        this.element.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        type = type == \"m3u8\" ? \"application/vnd.apple.mpegurl\" : (\"video/\" + type);\r\n        return this.element.canPlayType(type);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this.element.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this.element.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this.element.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this.element)\r\n            return;\r\n\r\n        this.element.currentTime = value;\r\n        this.render();\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this.element.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this.element.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this.element.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this.element.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this.element.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this.element.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this.element.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this.element.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this.element.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this.element.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this.element)\r\n            return;\r\n        this.element.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this.element.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this.element.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this.element)\r\n            return;\r\n        //@ts-ignore\r\n        this.element.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this.element.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this.element.seeking;\r\n    }\r\n\r\n    protected onStartListeningToType(type: string): void {\r\n        if (videoEvents.has(type)) {\r\n            let func = this._listeningEvents[type];\r\n            if (!func)\r\n                func = this._listeningEvents[type] = () => {\r\n                    this.event(type);\r\n                };\r\n\r\n            this.element.addEventListener(type, func);\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        var isConchApp: boolean = LayaEnv.isConch;\r\n        if (isConchApp) {\r\n            (<any>this.element)._destroy();\r\n        }\r\n\r\n        ILaya.timer.clear(this, this.render);\r\n        super.destroy();\r\n    }\r\n}\r\n\r\nconst videoEvents = new Set([\r\n    \"abort\", \"canplay\", \"canplaythrough\", \"durationchange\", \"emptied\", \"error\", \"loadeddata\",\r\n    \"loadedmetadata\", \"loadstart\", \"pause\", \"play\", \"playing\", \"progress\", \"ratechange\", \"seeked\", \"seeking\",\r\n    \"stalled\", \"suspend\", \"timeupdate\", \"volumechange\", \"waiting\", \"ended\"\r\n]);","import { Sprite } from \"../display/Sprite\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { VideoTexture } from \"./VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { SpriteUtils } from \"../utils/SpriteUtils\";\r\nimport { Event } from \"../events/Event\";\r\n\r\n/**\r\n * <code>VideoNode</code>将视频显示到Canvas上。<code>Video</code>可能不会在所有浏览器有效。\r\n * <p>关于Video支持的所有事件参见：<i>http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</i>。</p>\r\n * <p>\r\n * <b>注意：</b><br/>\r\n * 在PC端可以在任何时机调用<code>play()</code>因此，可以在程序开始运行时就使Video开始播放。但是在移动端，只有在用户第一次触碰屏幕后才可以调用play()，所以移动端不可能在程序开始运行时就自动开始播放Video。\r\n * </p>\r\n *\r\n * <p>MDN Video链接： <i>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video</i></p>\r\n */\r\nexport class VideoNode extends Sprite {\r\n    private _videoTexture: VideoTexture;\r\n    private _internalTex: Texture;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.texture = this._internalTex = new Texture();\r\n\r\n        if (LayaEnv.isPlaying && ILaya.Browser.onMobile) {\r\n            let func = () => {\r\n                ILaya.Browser.document.removeEventListener(\"touchend\", func);\r\n\r\n                if (!this._videoTexture)\r\n                    return;\r\n\r\n                if (Browser.onIOS) {\r\n                    this._videoTexture.load();\r\n                } else {\r\n                    this._videoTexture.play();\r\n                    this._videoTexture.pause();\r\n                }\r\n            }\r\n\r\n            ILaya.Browser.document.addEventListener(\"touchend\", func);\r\n        }\r\n    }\r\n\r\n    get videoTexture(): VideoTexture {\r\n        return this._videoTexture;\r\n    }\r\n\r\n    set videoTexture(value: VideoTexture) {\r\n        if (this._videoTexture) {\r\n            this._videoTexture._removeReference();\r\n            this._videoTexture.off(Event.READY, this, this.onVideoMetaLoaded);\r\n        }\r\n\r\n        this._videoTexture = value;\r\n        if (value) {\r\n            this._videoTexture._addReference();\r\n            this._videoTexture.on(Event.READY, this, this.onVideoMetaLoaded);\r\n            if (this._videoTexture._isLoaded)\r\n                this._internalTex.setTo(this._videoTexture);\r\n        }\r\n        else {\r\n            this._internalTex.setTo(null);\r\n        }\r\n    }\r\n\r\n    get source() {\r\n        return this._videoTexture?.source;\r\n    }\r\n\r\n    set source(value: string) {\r\n        if (value) {\r\n            if (!this._videoTexture)\r\n                this.videoTexture = new VideoTexture();\r\n            this._videoTexture.source = value;\r\n        }\r\n        else if (this._videoTexture)\r\n            this._videoTexture.source = value;\r\n    }\r\n\r\n    /**\r\n     * 设置播放源。\r\n     * @param url\t播放源路径。\r\n     */\r\n    load(url: string): void {\r\n        this.source = url;\r\n    }\r\n\r\n    /**\r\n     * 开始播放视频。\r\n     */\r\n    play(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.play();\r\n    }\r\n\r\n    /**\r\n     * 暂停视频播放。\r\n     */\r\n    pause(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.pause();\r\n    }\r\n\r\n    /**\r\n     * 重新加载视频。\r\n     */\r\n    reload(): void {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.load();\r\n    }\r\n\r\n    /**\r\n     * 检测是否支持播放指定格式视频。\r\n     * @param type\t\"mp4\",\"ogg\",\"webm\",\"m3u8\"等。\r\n     * @return 表示支持的级别。可能的值：\r\n     * <ul>\r\n     * <li>\"probably\" - 浏览器最可能支持该音频/视频类型</li>\r\n     * <li>\"maybe\" - 浏览器也许支持该音频/视频类型</li>\r\n     * <li>\"\" - （空字符串）浏览器不支持该音频/视频类型</li>\r\n     * </ul>\r\n     */\r\n    canPlayType(type: string): CanPlayTypeResult {\r\n        if (!this._videoTexture)\r\n            this.videoTexture = new VideoTexture();\r\n        return this._videoTexture.canPlayType(type);\r\n    }\r\n\r\n    private onVideoMetaLoaded(): void {\r\n        this._internalTex.setTo(this._videoTexture);\r\n    }\r\n\r\n    /**\r\n     * buffered 属性返回 TimeRanges(JS)对象。TimeRanges 对象表示用户的音视频缓冲范围。缓冲范围指的是已缓冲音视频的时间范围。如果用户在音视频中跳跃播放，会得到多个缓冲范围。\r\n     * <p>buffered.length返回缓冲范围个数。如获取第一个缓冲范围则是buffered.start(0)和buffered.end(0)。以秒计。</p>\r\n     * @return TimeRanges(JS)对象\r\n     */\r\n    get buffered(): any {\r\n        return this._videoTexture?.buffered;\r\n    }\r\n\r\n    /**\r\n     * 获取当前播放源路径。\r\n     */\r\n    get currentSrc(): string {\r\n        return this._videoTexture?.currentSrc;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前播放头位置。\r\n     */\r\n    get currentTime(): number {\r\n        return this._videoTexture?.currentTime;\r\n    }\r\n\r\n    set currentTime(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n\r\n        this._videoTexture.currentTime = value;\r\n    }\r\n\r\n    /**\r\n     * 设置和获取当前音量。\r\n     */\r\n    set volume(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.volume = value;\r\n    }\r\n\r\n    get volume(): number {\r\n        return this._videoTexture?.volume;\r\n    }\r\n\r\n    /**\r\n     * 表示视频元素的就绪状态：\r\n     * <ul>\r\n     * <li>0 = HAVE_NOTHING - 没有关于音频/视频是否就绪的信息</li>\r\n     * <li>1 = HAVE_METADATA - 关于音频/视频就绪的元数据</li>\r\n     * <li>2 = HAVE_CURRENT_DATA - 关于当前播放位置的数据是可用的，但没有足够的数据来播放下一帧/毫秒</li>\r\n     * <li>3 = HAVE_FUTURE_DATA - 当前及至少下一帧的数据是可用的</li>\r\n     * <li>4 = HAVE_ENOUGH_DATA - 可用数据足以开始播放</li>\r\n     * </ul>\r\n     */\r\n    get readyState(): any {\r\n        return this._videoTexture?.readyState;\r\n    }\r\n\r\n    /**\r\n     * 获取视频源尺寸。ready事件触发后可用。\r\n     */\r\n    get videoWidth(): number {\r\n        return this._videoTexture?.videoWidth;\r\n    }\r\n\r\n    get videoHeight(): number {\r\n        return this._videoTexture?.videoHeight;\r\n    }\r\n\r\n    /**\r\n     * 获取视频长度（秒）。ready事件触发后可用。\r\n     */\r\n    get duration(): number {\r\n        return this._videoTexture?.duration;\r\n    }\r\n\r\n    /**\r\n     * 返回音频/视频的播放是否已结束\r\n     */\r\n    get ended(): boolean {\r\n        return this._videoTexture?.ended;\r\n    }\r\n\r\n    /**\r\n     * 返回表示音频/视频错误状态的 MediaError（JS）对象。\r\n     */\r\n    get error(): MediaError {\r\n        return this._videoTexture?.error;\r\n    }\r\n\r\n    /**\r\n     * 设置或返回音频/视频是否应在结束时重新播放。\r\n     */\r\n    get loop(): boolean {\r\n        return this._videoTexture?.loop;\r\n    }\r\n\r\n    set loop(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.loop = value;\r\n    }\r\n\r\n    /**\r\n     * playbackRate 属性设置或返回音频/视频的当前播放速度。如：\r\n     * <ul>\r\n     * <li>1.0 正常速度</li>\r\n     * <li>0.5 半速（更慢）</li>\r\n     * <li>2.0 倍速（更快）</li>\r\n     * <li>-1.0 向后，正常速度</li>\r\n     * <li>-0.5 向后，半速</li>\r\n     * </ul>\r\n     * <p>只有 Google Chrome 和 Safari 支持 playbackRate 属性。</p>\r\n     */\r\n    get playbackRate(): number {\r\n        return this._videoTexture?.playbackRate;\r\n    }\r\n\r\n    set playbackRate(value: number) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.playbackRate = value;\r\n    }\r\n\r\n    /**\r\n     * 获取和设置静音状态。\r\n     */\r\n    get muted(): boolean {\r\n        return this._videoTexture?.muted;\r\n    }\r\n\r\n    set muted(value: boolean) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        this._videoTexture.muted = value;\r\n    }\r\n\r\n    /**\r\n     * 返回视频是否暂停\r\n     */\r\n    get paused(): boolean {\r\n        return this._videoTexture?.paused;\r\n    }\r\n\r\n    /**\r\n     * preload 属性设置或返回是否在页面加载后立即加载视频。可赋值如下：\r\n     * <ul>\r\n     * <li>auto\t指示一旦页面加载，则开始加载视频。</li>\r\n     * <li>metadata\t指示当页面加载后仅加载音频/视频的元数据。</li>\r\n     * <li>none\t指示页面加载后不应加载音频/视频。</li>\r\n     * </ul>\r\n     */\r\n    get preload(): string {\r\n        return this._videoTexture?.preload;\r\n    }\r\n\r\n    set preload(value: string) {\r\n        if (!this._videoTexture)\r\n            return;\r\n        //@ts-ignore\r\n        this._videoTexture.preload = value;\r\n    }\r\n\r\n    /**\r\n     * 参见 <i>http://www.w3school.com.cn/tags/av_prop_seekable.asp</i>。\r\n     */\r\n    get seekable(): any {\r\n        return this._videoTexture?.seekable;\r\n    }\r\n\r\n    /**\r\n     * seeking 属性返回用户目前是否在音频/视频中寻址。\r\n     * 寻址中（Seeking）指的是用户在音频/视频中移动/跳跃到新的位置。\r\n     */\r\n    get seeking(): boolean {\r\n        return this._videoTexture?.seeking;\r\n    }\r\n\r\n    /**\r\n    * @override\r\n    */\r\n    _setX(value: number): void {\r\n        super._setX(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.left = transform.x;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    _setY(value: number): void {\r\n        super._setY(value);\r\n        if (this._videoTexture && LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.style.top = transform.y;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_width(value: number): void {\r\n        super.set_width(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.width = value * transform.scaleX;\r\n        }\r\n        else {\r\n            this._videoTexture.element.width = this.width / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    set_height(value: number) {\r\n        super.set_height(value);\r\n\r\n        if (!this._videoTexture)\r\n            return;\r\n        if (LayaEnv.isConch) {\r\n            var transform: any = SpriteUtils.getTransformRelativeToWindow(this, 0, 0);\r\n            this._videoTexture.element.height = value * transform.scaleY;\r\n\r\n        }\r\n        else {\r\n            this._videoTexture.element.height = this.height / ILaya.Browser.pixelRatio;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 销毁内部事件绑定。\r\n     * @override\r\n     */\r\n    destroy(detroyChildren: boolean = true): void {\r\n        this.videoTexture = null;\r\n        super.destroy(detroyChildren);\r\n    }\r\n}","import { AnimatorState2D } from \"./AnimatorState2D\";\r\n\r\nexport class AnimatorPlayState2D {\r\n\t_finish: boolean;\r\n\t/**@internal */\r\n\t_startPlayTime: number;\r\n\t/**@internal */\r\n\t_lastElapsedTime: number;\r\n\t/**@internal 动画播放时间*/\r\n\t_elapsedTime: number;\r\n\t/**@internal 播放的次数*/\r\n\t_playNum: number;\r\n\r\n\t/**播放总时间，不受speed为负数的影响 */\r\n\t_playAllTime: number;\r\n\r\n\t/**@internal 单词播放归一化时间 */\r\n\t_normalizedPlayTime: number;\r\n\t/**@internal */\r\n\t_duration: number;\r\n\t/**@internal 上次播放的时间，event事件使用*/\r\n\t_parentPlayTime: number;\r\n\t/**@internal */\r\n\t_lastIsFront: boolean;\r\n\t/**@internal */\r\n\t_currentState: AnimatorState2D | null = null;\r\n\r\n\t/**是为正向播放 */\r\n\t_frontPlay = true;\r\n\r\n\r\n\t/**\r\n\t * 当前动画的持续时间，以秒为单位。\r\n\t */\r\n\tget duration(): number {\r\n\t\treturn this._duration;\r\n\t}\r\n\r\n\t// checkPlayNext(): Animation2DNext {\r\n\t//     var nexts = this._currentState.nexts;\r\n\t//     if (nexts) {\r\n\t//         for (var i = 0, len = nexts.length; i < len; i++) {\r\n\t//             var no = nexts[i];\r\n\t//             //TODO 需要检测next的条件\r\n\t//             return no;\r\n\t//         }\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\r\n\t/**\r\n\t * 动画状态机。\r\n\t */\r\n\tget animatorState(): AnimatorState2D {\r\n\t\treturn this._currentState!;\r\n\t}\r\n\r\n\t/**\r\n\t * 创建一个 <code>AnimatorPlayState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_resetPlayState(startTime: number, clipDuration: number): void {\r\n\t\tthis._finish = false;\r\n\t\tthis._startPlayTime = startTime;\r\n\t\tthis._elapsedTime = startTime;\r\n\t\tthis._lastIsFront = true;\r\n\t\tthis._playNum = 0;\r\n\t\tthis._parentPlayTime = null;\r\n\t\tthis._playAllTime = 0;\r\n\t\tvar playTime = (this._elapsedTime / clipDuration) % 1.0;\r\n\t\tthis._normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\t\tthis._frontPlay = true;\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_cloneTo(dest: AnimatorPlayState2D): void {\r\n\t\tdest._finish = this._finish;\r\n\t\tdest._startPlayTime = this._startPlayTime;\r\n\t\tdest._elapsedTime = this._elapsedTime;\r\n\t\tdest._playNum = this._playNum;\r\n\t\tdest._parentPlayTime = this._parentPlayTime;\r\n\t\tdest._normalizedPlayTime = this._normalizedPlayTime;\r\n\t\tdest._lastIsFront = this._lastIsFront;\r\n\t\tdest._frontPlay = this._frontPlay;\r\n\t\tdest._playAllTime = this._playAllTime;\r\n\t}\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\nexport class AnimatorControllerLayer2D implements IClone {\r\n\r\n    /**混合模式_覆盖。 */\r\n    static BLENDINGMODE_OVERRIDE: number = 0;\r\n\r\n    /**混合模式_叠加。 */\r\n    static BLENDINGMODE_ADDTIVE: number = 1;\r\n\r\n    /**@internal */\r\n    private _defaultState: AnimatorState2D | null;\r\n\r\n    /**@internal */\r\n    private _referenceCount = 0;\r\n\r\n    /**@internal */\r\n    private _defaultStateNameCatch: string;\r\n\r\n    /**@internal*/\r\n    _playStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossPlayStateInfo: AnimatorPlayState2D | null = new AnimatorPlayState2D();\r\n\r\n    /**@internal*/\r\n    _crossMark: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersCount: number = 0;\r\n\r\n    /**@internal */\r\n    _crossNodesOwnersIndicesMap: any = {};\r\n\r\n    /**@internal */\r\n    _srcCrossClipNodeIndices: number[] = [];\r\n\r\n    /**@internal */\r\n    _destCrossClipNodeIndices: number[] = [];\r\n    \r\n    /**@internal */\r\n    _enterTransition: AnimatorTransition2D;\r\n\r\n    /**\r\n     * 层的名字\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 是否开始时播放\r\n     */\r\n    playOnWake = true;\r\n\r\n    /**\r\n     * 默认权重\r\n     */\r\n    defaultWeight = 1.0;\r\n\r\n    /**\r\n     * 混合模式\r\n     */\r\n    blendingMode = AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n\r\n    /**\r\n     * 是否开启\r\n     */\r\n    enable = true;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _states: AnimatorState2D[] = [];\r\n\r\n    /**\r\n     * @internal \r\n     * 0:常规播放、1:动态融合播放、2:固定融合播放\r\n     */\r\n    _playType = -1;\r\n\r\n    /**\r\n     * 实例化一个2D动画控制器\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        this.name = name;\r\n    }\r\n\r\n    /**\r\n     * 设置状态机\r\n     */\r\n    set states(states: ReadonlyArray<AnimatorState2D>) {\r\n        if (this._states === states)\r\n            return;\r\n        for (let i = this.states.length - 1; i >= 0; i--) {\r\n            this.removeState(this.states[i]);\r\n        }\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            this.addState(states[i]);\r\n        }\r\n    }\r\n\r\n    get states(): ReadonlyArray<AnimatorState2D> {\r\n        return this._states;\r\n    }\r\n\r\n    /**\r\n     * 默认状态名称\r\n     */\r\n    set defaultStateName(str: string) {\r\n        this._defaultState = this.getStateByName(str);\r\n        if (null == this._defaultState) {\r\n            if (0 == this._states.length) {\r\n                this._defaultStateNameCatch = str;\r\n            } else {\r\n                for (var i = this._states.length - 1; i >= 0; i--) {\r\n                    if (this._states[i].name == str) {\r\n                        this._defaultState = this._states[i];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get defaultStateName() {\r\n        if (!this._defaultState) {\r\n            return null;\r\n        }\r\n        return this._defaultState.name;\r\n    }\r\n\r\n    /**\r\n     * 默认动画状态机。\r\n     */\r\n    get defaultState(): AnimatorState2D {\r\n        return this._defaultState!;\r\n    }\r\n\r\n    set defaultState(value: AnimatorState2D) {\r\n        this._defaultState = value;\r\n        //this._statesMap[value.name] = value;\r\n    }\r\n\r\n    /**\r\n     * 移除Clip\r\n     * @param clipStateInfos \r\n     * @param index \r\n     * @param state \r\n     */\r\n    private _removeClip(clipStateInfos: AnimatorState2D[], index: number, state: AnimatorState2D): void {\r\n        clipStateInfos.splice(index, 1);\r\n    }\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._addReference(count);\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count = 1): void {\r\n        for (var i = 0, n = this._states.length; i < n; i++)\r\n            this._states[i]._removeReference(count);\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n\r\n    /**\r\n    * 获取当前的播放状态。\r\n    * @return 动画播放状态。\r\n    */\r\n    getCurrentPlayState(): AnimatorPlayState2D {\r\n        return this._playStateInfo!;\r\n    }\r\n\r\n    /**\r\n     * 状态机名称\r\n     * @param str \r\n     * @returns \r\n     */\r\n    getStateByName(str: string) {\r\n        for (let i = this._states.length - 1; i >= 0; i--) {\r\n            if (this._states[i].name == str) {\r\n                return this._states[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 添加动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    addState(state: AnimatorState2D): void {\r\n        var stateName = state.name;\r\n        if (this.getStateByName(stateName)) {\r\n            throw \"AnimatorControllerLayer:this stat's name has exist.\";\r\n        } else {\r\n            this._states.push(state);\r\n            if (stateName == this._defaultStateNameCatch) {\r\n                this._defaultState = state;\r\n                this._defaultStateNameCatch = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 移除动画状态。\r\n     * @param\tstate 动画状态。\r\n     * @param   layerIndex 层索引。\r\n     */\r\n    removeState(state: AnimatorState2D): void {\r\n        var states = this._states;\r\n        var index = -1;\r\n        for (var i = 0, n = states.length; i < n; i++) {\r\n            if (states[i] === state) {\r\n                index = i;\r\n                break;\r\n            }\r\n        }\r\n        if (-1 != index)\r\n            this._removeClip(states, index, state);\r\n    }\r\n\r\n    /**\r\n         * 克隆。\r\n         * @return\t 克隆副本。\r\n         */\r\n    clone() {\r\n        var dest: AnimatorControllerLayer2D = new AnimatorControllerLayer2D(this.name);\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorControllerLayer2D = (<AnimatorControllerLayer2D>destObject);\r\n        dest.name = this.name;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 销毁\r\n     */\r\n    destroy() {\r\n        this._removeReference();\r\n        for (var i = 0, n = this._states.length; i < n; i++) {\r\n            this._states[i].destroy();\r\n        }\r\n        this._states.length = 0;\r\n    }\r\n}","export interface TypeAnimatorControllerData {\r\n    layerW: number,\r\n    controllerLayers: TypeAnimatorLayer[];\r\n    cullingMode?: number,\r\n    enable?: boolean,\r\n    animatorParams?: TypeAnimatorParams[],\r\n}\r\nexport interface TypeAnimatorParams {\r\n    id: number,\r\n    name: string,\r\n    type: AniParmType,\r\n    val: number | boolean,\r\n}\r\nexport interface TypeAnimatorLayer {\r\n    defaultStateName?: string,\r\n    name: string,\r\n    blendingMode: number,\r\n    states: TypeAnimatorState[],\r\n    playOnWake: boolean,\r\n    defaultWeight: number,\r\n    avatarMask?: any,\r\n\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\n\r\nexport enum AniParmType {\r\n    Float,\r\n    Bool,\r\n    Trigger,\r\n}\r\n\r\n/**\r\n * 动画状态条件类型\r\n */\r\nexport enum AniStateConditionType {\r\n    Number,\r\n    Bool,\r\n    Trigger\r\n}\r\n\r\nexport interface TypeAnimatorState {\r\n    x: number,\r\n    y: number,\r\n    /**-1代表enter，-2代表exit，-3代表anyState */\r\n    id: string,\r\n    name: string,\r\n    speed?: number,\r\n    clipStart?: number,\r\n    clipEnd?: number,\r\n    loop?: number,\r\n    yoyo?: boolean,\r\n    soloTransitions?: TypeAnimatorTransition[],\r\n    clip?: { _$uuid: string, },\r\n    scripts?: string[],\r\n\r\n\r\n    states?: TypeAnimatorState[],\r\n    defaultStateName?: string,\r\n    stageX?: number,\r\n    stageY?: number,\r\n    stageScale?: number,\r\n}\r\nexport interface TypeAnimatorTransition {\r\n    id: string,\r\n    name?: string,\r\n    mute?: boolean,\r\n    solo?: boolean,\r\n    exitTime?: number,\r\n    transduration?: number,\r\n    transstartoffset?: number,\r\n    exitByTime?: boolean,\r\n    conditions?: TypeAnimatorConditions[],\r\n}\r\nexport interface TypeAnimatorConditions {\r\n    id?: number,\r\n    type?: AniStateConditionNumberCompressType,\r\n    checkValue?: number | boolean,\r\n    name?: string,\r\n}\r\n\r\nexport enum AniStateConditionNumberCompressType {\r\n    Less,\r\n    Greater\r\n}\r\n\r\nexport class AnimatorControllerParse {\r\n    static parse(data: TypeAnimatorControllerData) {\r\n        //let ret: TypeAnimatorControllerData = JSON.parse(JSON.stringify(data));\r\n        let ret = data;\r\n        let layers = ret.controllerLayers;\r\n        if (null == layers) {\r\n            layers = [];\r\n        }\r\n\r\n        let clipsID: string[] = [];\r\n\r\n\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let states = l.states;\r\n            if (!states) {\r\n                states = [];\r\n                l.states = states;\r\n            }\r\n\r\n            l.defaultStateName = null;\r\n            let retobj = this.checkStates(states, clipsID, ret);\r\n            if (retobj) {\r\n                l.defaultStateName = retobj.enterName;\r\n            } else {\r\n                layers.splice(i, 1);\r\n            }\r\n        }\r\n        return { ret: ret, clipsID: clipsID };\r\n    }\r\n\r\n\r\n    private static checkStates(states: TypeAnimatorState[], clipsID: string[], data: TypeAnimatorControllerData) {\r\n        let clipState: TypeAnimatorState[] = null;\r\n        let enterState: TypeAnimatorState = null;\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            let state = states[j];\r\n            if (state.states) {\r\n                if (null == this.checkStates(state.states, clipsID, data)) {\r\n                    states.splice(j, 1);\r\n                } else {\r\n                    if (null == clipState) {\r\n                        clipState = [];\r\n                    }\r\n                    clipState.push(state);\r\n                }\r\n            } else if (\"-1\" == state.id) {\r\n                enterState = state;\r\n                // let defName = this.checkDefault(state, states);\r\n                // if (null != defName) {\r\n                //     l.defaultStateName = defName;\r\n                // }\r\n            } else if (\"-2\" == state.id) {\r\n                //TODO any\r\n            } else if (\"-3\" == state.id) {\r\n                //TODO exit\r\n            } else if (null == state.clip || null == state.clip._$uuid || \"\" == state.clip._$uuid) {\r\n                states.splice(j, 1);\r\n            } else {\r\n                if (0 > clipsID.indexOf(state.clip._$uuid)) {\r\n                    clipsID.push(state.clip._$uuid);\r\n                }\r\n\r\n                this.checkNext(state, states, data);\r\n                if (null == clipState) {\r\n                    clipState = [];\r\n                }\r\n                clipState.push(state);\r\n            }\r\n        }\r\n        let ret: { states: TypeAnimatorState[], enterName: string } = null;\r\n        if (clipState && enterState) {\r\n            let defName = this.checkDefault(enterState, clipState);\r\n            if (null != defName) {\r\n                ret = { states: clipState, enterName: defName };\r\n            }\r\n        }\r\n\r\n\r\n        return ret;\r\n    }\r\n\r\n    private static checkNext(state: TypeAnimatorState, states: TypeAnimatorState[], data: TypeAnimatorControllerData) {\r\n        let nexts = state.soloTransitions;\r\n        if (nexts) {\r\n            for (let i = nexts.length - 1; i >= 0; i--) {\r\n                let next = nexts[i];\r\n                let nState = this.getStateByID(states, next.id);\r\n                if (!nState || (null == nState.clip && \"-3\" != nState.id && null == nState.states)) {\r\n                    nexts.splice(i, 1);\r\n                } else {\r\n                    next.name = nState.name;\r\n\r\n                    next.conditions = this.checkConditions(next.conditions, data);\r\n\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private static checkConditions(conditions: TypeAnimatorConditions[], data: TypeAnimatorControllerData) {\r\n        if (!conditions || 0 == conditions.length || null == data.animatorParams || 0 == data.animatorParams.length) {\r\n            return [];\r\n        }\r\n\r\n        let parms = data.animatorParams;\r\n\r\n        for (let i = conditions.length - 1; i >= 0; i--) {\r\n            let o = conditions[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                conditions.splice(i, 1);\r\n            } else {\r\n                o.name = parm.name;\r\n                if (parm.type == AniParmType.Float) {\r\n                    let num = Number(o.checkValue);\r\n                    if (isNaN(num)) {\r\n                        o.checkValue = 0;\r\n                    }\r\n                    num = Number(o.type);\r\n                    if (isNaN(num)) {\r\n                        o.type = 0;\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n        return conditions;\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    private static checkDefault(state: TypeAnimatorState, states: TypeAnimatorState[]) {\r\n        let nexts = state.soloTransitions;\r\n        let id: string = null;\r\n        if (nexts && 0 < nexts.length) {\r\n            id = nexts[0].id;\r\n        }\r\n\r\n        let defState: TypeAnimatorState = null;\r\n        if (null != id) {\r\n            defState = this.getStateByID(states, id);\r\n        }\r\n        if (null != defState && (null != defState.clip || null != defState.states)) {\r\n            return defState.name;\r\n        }\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            if (states[i].clip) {\r\n                return states[i].name;\r\n            }\r\n        }\r\n\r\n\r\n        return null;\r\n\r\n    }\r\n\r\n\r\n    private static getStateByID(states: TypeAnimatorState[], id: string) {\r\n        if (states) {\r\n            for (let i = states.length - 1; i >= 0; i--) {\r\n                if (states[i].id == id) {\r\n                    return states[i];\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n}","/**\r\n * 动画更新模式\r\n */\r\nexport enum AnimatorUpdateMode {\r\n    /**正常更新。*/\r\n    Normal = 0,\r\n    /**低频率更新 */\r\n    LowFrame = 1,\r\n    /**不更新 */\r\n    UnScaleTime = 2\r\n}\r\n","\r\n/**\r\n * 动画条件类型\r\n */\r\nexport enum AniConditionType {\r\n    /**\r\n     * 大于\r\n     */\r\n    Greater,\r\n    /**\r\n     * 小于\r\n     */\r\n    Less,\r\n    /**\r\n     * 等于\r\n     */\r\n    Equals,\r\n    /**\r\n     * 不等于\r\n     */\r\n    NotEqual,//不等于\r\n}\r\n\r\n/**\r\n * 2D动画类型\r\n */\r\nexport class Animation2DCondition {\r\n    /**\r\n     * id编号\r\n     */\r\n    id: number;\r\n    /**\r\n     * 动画条件\r\n     */\r\n    type: AniConditionType;\r\n    /**\r\n     * 检测值\r\n     */\r\n    checkValue: any\r\n}","\r\nimport { Stat } from \"../utils/Stat\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorPlayState2D } from \"./AnimatorPlayState2D\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { Component } from \"./Component\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Node } from \"../../laya/display/Node\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimatorController2D } from \"./AnimatorController2D\";\r\nimport { AniParmType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { AnimatorUpdateMode } from \"./AnimatorUpdateMode\";\r\n\r\n/**\r\n * <code>Animator2D<code/>2D动画组件\r\n */\r\nexport class Animator2D extends Component {\r\n    /**@internal */\r\n    private _speed = 1;\r\n    /**@internal 更新模式*/\r\n    private _updateMode = AnimatorUpdateMode.Normal;\r\n    /**@internal 降低更新频率调整值*/\r\n    private _lowUpdateDelty = 20;\r\n    /**@internal */\r\n    private _isPlaying = true;\r\n    /**@internal */\r\n    private _ownerMap: Map<KeyframeNode2D, { ower: Node, pro?: { ower: any, key: string, defVal: any } }>\r\n    /**@internal */\r\n    _parameters: Record<string, Animation2DParm>;\r\n    /**@internal */\r\n    _controllerLayers: AnimatorControllerLayer2D[];\r\n    /**@internal */\r\n    _controller: AnimatorController2D;\r\n    /**@internal */\r\n    _checkEnterIndex: number[];\r\n\r\n    /**\r\n     * 实例化2D动画组件\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._controllerLayers = [];\r\n        this._parameters = {};\r\n    }\r\n\r\n    /**\r\n     * 2D动画控制器\r\n     */\r\n    set controller(val: AnimatorController2D) {\r\n        this._controller = val;\r\n        if (val) {\r\n            val.updateTo(this);\r\n        }\r\n    }\r\n\r\n    get controller() {\r\n        return this._controller;\r\n    }\r\n\r\n    /**\r\n     * 动画参数\r\n     */\r\n    set parameters(val: Record<string, Animation2DParm>) {\r\n        this._parameters = val;\r\n    }\r\n\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\n    /**\r\n     * 播放速度\r\n     */\r\n    set speed(num: number) {\r\n        this._speed = num;\r\n    }\r\n\r\n    get speed() {\r\n        return this._speed;\r\n    }\r\n\r\n    /**\r\n     * 是否正在播放中\r\n     */\r\n    get isPlaying() {\r\n        return this._isPlaying;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     */\r\n    private _updateStateFinish(animatorState: AnimatorState2D, playState: AnimatorPlayState2D): void {\r\n        if (playState._finish) {\r\n            animatorState._eventExit();//派发播放完成的事件\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 赋值Node数据\r\n     * @param stateInfo 动画状态\r\n     * @param additive 是否为addtive\r\n     * @param weight state权重\r\n     * @param isFirstLayer 是否是第一层\r\n     */\r\n    private _setClipDatasToNode(stateInfo: AnimatorState2D, additive: boolean, weight: number, isFirstLayer: boolean, controllerLayer: AnimatorControllerLayer2D = null): void {\r\n        var realtimeDatas = stateInfo._realtimeDatas;\r\n        var nodes = stateInfo._clip!._nodes!;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            if (null == realtimeDatas[i]) continue;\r\n            var node = nodes.getNodeByIndex(i);\r\n            var o = this.getOwner(node);\r\n            o && this._applyFloat(o, additive, weight, isFirstLayer, realtimeDatas[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param o \r\n     * @param additive \r\n     * @param weight \r\n     * @param isFirstLayer \r\n     * @param data \r\n     */\r\n    private _applyFloat(o: { ower: Node, pro?: { ower: any, key: string, defVal: any } }, additive: boolean, weight: number, isFirstLayer: boolean, data: string | number | boolean): void {\r\n        var pro = o.pro;\r\n        if (pro && pro.ower) {\r\n            if (additive && \"number\" == typeof data) {\r\n                pro.ower[pro.key] = pro.defVal + weight * data;\r\n            } else if (\"number\" == typeof data) {\r\n                pro.ower[pro.key] = weight * data;\r\n            } else {\r\n                pro.ower[pro.key] = data;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param node \r\n     * @returns \r\n     */\r\n    private getOwner(node: KeyframeNode2D) {\r\n        var ret: { ower: Node, pro?: { ower: any, key: string, defVal: any } };\r\n        if (this._ownerMap) {\r\n            ret = this._ownerMap.get(node);\r\n            if (ret) {\r\n                return ret;\r\n            }\r\n        }\r\n\r\n        var property = this.owner;\r\n        for (var j = 0, m = node.ownerPathCount; j < m; j++) {\r\n            var ownPat = node.getOwnerPathByIndex(j);\r\n            if (\"\" == ownPat) {\r\n                continue;\r\n            } else {\r\n                property = property.getChildByName(ownPat);\r\n                if (!property)\r\n                    break;\r\n            }\r\n        }\r\n\r\n        ret = { ower: property };\r\n\r\n        if (property) {\r\n            var pobj: any = property;\r\n            var propertyCount = node.propertyCount;\r\n\r\n            if (1 == propertyCount) {\r\n                var pname = node.getPropertyByIndex(0);\r\n                ret.pro = { ower: property, key: pname, defVal: (property as any)[pname] };\r\n            } else {\r\n                for (var i = 0; i < propertyCount; i++) {\r\n                    var pname = node.getPropertyByIndex(i);\r\n\r\n                    if (i == propertyCount - 1 || null == pobj) {\r\n                        ret.pro = { ower: pobj, key: pname, defVal: pobj ? pobj[pname] : null }\r\n                        break;\r\n                    }\r\n\r\n                    if (null == pobj[pname] && property == pobj) {\r\n                        //有可能是组件,查找组件逻辑\r\n                        pobj = null;\r\n                        var classObj = ClassUtils.getClass(pname);\r\n                        if (classObj) {\r\n                            pobj = property.getComponent(classObj);\r\n                        }\r\n\r\n                    } else {\r\n                        pobj = pobj[pname];\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        if (null == this._ownerMap) {\r\n            this._ownerMap = new Map();\r\n        }\r\n        this._ownerMap.set(node, ret);\r\n        return ret;\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 更新clip数据\r\n     * @internal\r\n     */\r\n    private _updateClipDatas(animatorState: AnimatorState2D, addtive: boolean, playStateInfo: AnimatorPlayState2D): void {\r\n        var clip = animatorState._clip;\r\n        var clipDuration = clip!._duration;\r\n\r\n        var curPlayTime = animatorState.clipStart * clipDuration + playStateInfo._normalizedPlayTime * playStateInfo._duration;\r\n        var currentFrameIndices = animatorState._currentFrameIndices;\r\n        //var frontPlay = playStateInfo._frontPlay;\r\n        let frontPlay = true;\r\n        clip!._evaluateClipDatasRealTime(curPlayTime, currentFrameIndices, addtive, frontPlay, animatorState._realtimeDatas);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param animatorState \r\n     * @param playState \r\n     * @param elapsedTime \r\n     * @param loop \r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    private _updatePlayer(animatorState: AnimatorState2D, playState: AnimatorPlayState2D, elapsedTime: number, loop: number, layerIndex: number): void {\r\n\r\n        let isReplay = false;\r\n        var clipDuration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n        var lastElapsedTime = playState._elapsedTime;\r\n\r\n        let pAllTime = playState._playAllTime;\r\n\r\n        playState._playAllTime += Math.abs(elapsedTime);\r\n\r\n        //动画播放总时间\r\n        elapsedTime = lastElapsedTime + elapsedTime;\r\n        //动画播放的上次总时间\r\n        playState._lastElapsedTime = lastElapsedTime;\r\n        playState._elapsedTime = elapsedTime;\r\n        var normalizedTime = elapsedTime / clipDuration;\r\n\r\n        let scale = 1;\r\n        if (animatorState.yoyo) {\r\n            scale = 2;\r\n        }\r\n\r\n        //总播放次数\r\n        let pTime = playState._playAllTime / (clipDuration * scale);\r\n\r\n        if (Math.floor(pAllTime / (clipDuration * scale)) < Math.floor(pTime)) {\r\n            isReplay = true;\r\n        }\r\n\r\n        var playTime = normalizedTime % 1.0;\r\n        let normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n        playState._normalizedPlayTime = normalizedPlayTime;\r\n        playState._duration = clipDuration;\r\n\r\n        if (1 != scale) {\r\n            normalizedTime = playState._playAllTime / (clipDuration * scale);\r\n            playTime = normalizedTime % 1.0;\r\n            normalizedPlayTime = playTime < 0 ? playTime + 1.0 : playTime;\r\n\r\n            if (animatorState.yoyo) {\r\n                if (0.5 > normalizedPlayTime) {\r\n                    if (!playState._frontPlay) {\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        }\r\n                        playState._frontPlay = true;\r\n                    }\r\n                } else {\r\n                    if (playState._frontPlay) {\r\n                        playState._frontPlay = false;\r\n                        if (0 > animatorState.speed) {\r\n                            playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipStart;\r\n                        } else {\r\n                            playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                            playState._normalizedPlayTime = animatorState.clipEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        animatorState._eventStateUpdate(normalizedPlayTime);\r\n        let ret = this._applyTransition(layerIndex, animatorState._eventtransition(normalizedPlayTime, this.parameters, isReplay));\r\n\r\n        if (!ret && isReplay) {\r\n            let absTime = playState._playAllTime / (clipDuration * scale);\r\n            if (0 < loop && loop <= absTime) {\r\n                playState._finish = true;\r\n\r\n                if (0 > animatorState.speed) {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    }\r\n                } else {\r\n                    if (animatorState.yoyo) {\r\n                        playState._elapsedTime = animatorState.clipStart * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipStart;\r\n                    } else {\r\n                        playState._elapsedTime = animatorState.clipEnd * pAllTime;\r\n                        playState._normalizedPlayTime = animatorState.clipEnd;\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param stateInfo \r\n     * @param playStateInfo \r\n     */\r\n    private _updateEventScript(stateInfo: AnimatorState2D, playStateInfo: AnimatorPlayState2D): void {\r\n        let clip = stateInfo._clip;\r\n        let events = clip!._animationEvents;\r\n        if (!events || 0 == events.length) return;\r\n        let clipDuration = clip!._duration;\r\n        let time = playStateInfo._normalizedPlayTime * clipDuration;\r\n        let frontPlay = playStateInfo._frontPlay;\r\n        let parentPlayTime = playStateInfo._parentPlayTime;\r\n        if (null == parentPlayTime) {\r\n            if (frontPlay) {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            } else {\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n        if (frontPlay) {\r\n            if (time < parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipEnd, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipStart;\r\n            }\r\n        } else {\r\n            if (time > parentPlayTime) {\r\n                this._eventScript(events, parentPlayTime, clipDuration * playStateInfo.animatorState.clipStart, frontPlay);\r\n                parentPlayTime = clipDuration * playStateInfo.animatorState.clipEnd;\r\n            }\r\n        }\r\n\r\n\r\n        this._eventScript(events, parentPlayTime, time, frontPlay);\r\n        playStateInfo._parentPlayTime = time;\r\n    }\r\n    /**\r\n    * @internal\r\n    */\r\n    private _eventScript(events: Animation2DEvent[], parentPlayTime: number, currPlayTime: number, frontPlay: boolean) {\r\n        let scripts = this.owner.components;\r\n        if (frontPlay) {\r\n            for (let i = 0, len = events.length; i < len; i++) {\r\n                let e = events[i];\r\n                if (e.time > parentPlayTime && e.time <= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time > currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = events.length - 1; i >= 0; i--) {\r\n                let e = events[i];\r\n                if (e.time < parentPlayTime && e.time >= currPlayTime) {\r\n                    for (let j = 0, m = scripts.length; j < m; j++) {\r\n                        let script = scripts[j];\r\n                        if (script._isScript()) {\r\n                            let fun: Function = (script as any)[e.eventName];\r\n                            (fun) && (fun.apply(script, e.params));\r\n                        }\r\n                    }\r\n                } else if (e.time < currPlayTime) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    // private _eventScript(events: Animation2DEvent[], eventIndex: number, endTime: number, front: boolean, startTime = 0): number {\r\n    //     let scripts = this.owner.components;\r\n    //     if (front) {\r\n    //         for (let n = events.length; eventIndex < n; eventIndex++) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time <= endTime) {\r\n    //                 if (event.time >= startTime) {\r\n    //                     for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                         let script = scripts[j];\r\n    //                         if (script._isScript()) {\r\n    //                             let fun: Function = (script as any)[event.eventName];\r\n    //                             (fun) && (fun.apply(script, event.params));\r\n    //                         }\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     } else {\r\n    //         for (; eventIndex >= 0; eventIndex--) {\r\n    //             let event = events[eventIndex];\r\n    //             if (event.time >= endTime) {\r\n    //                 for (let j = 0, m = scripts.length; j < m; j++) {\r\n    //                     let script = scripts[j];\r\n    //                     if (script._isScript()) {\r\n    //                         let fun = (script as any)[event.eventName];\r\n    //                         (fun) && (fun.apply(script, event.params));\r\n    //                     }\r\n    //                 }\r\n    //             } else {\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     return eventIndex;\r\n    // }\r\n\r\n    /**\r\n     * 启用过渡\r\n     * @param layerindex \r\n     * @param transition \r\n     * @returns \r\n     */\r\n    private _applyTransition(layerindex: number, transition: AnimatorTransition2D) {\r\n        if (!transition)\r\n            return false;\r\n        return this.crossFade(transition.destState.name, transition.transduration, layerindex, transition.transstartoffset);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param delta \r\n     * @returns \r\n     */\r\n    private _applyUpdateMode(delta: number): number {\r\n        let ret;\r\n        switch (this._updateMode) {\r\n            case AnimatorUpdateMode.Normal:\r\n                ret = delta;\r\n                break;\r\n            case AnimatorUpdateMode.LowFrame:\r\n                ret = (Stat.loopCount % this._lowUpdateDelty == 0) ? delta * this._lowUpdateDelty : 0;\r\n                break;\r\n            case AnimatorUpdateMode.UnScaleTime:\r\n                ret = 0;\r\n                break;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 播放动画\r\n     * @param name 动画名称\r\n     * @param layerIndex 层索引\r\n     * @param normalizedTime 归一化时间\r\n     * @returns \r\n     */\r\n    play(name?: string, layerIndex = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        if (this._checkEnterIndex) {\r\n            let i = this._checkEnterIndex.indexOf(layerIndex);\r\n            if (0 <= i) {\r\n                this._checkEnterIndex.splice(i, 1);\r\n            }\r\n        }\r\n        this._isPlaying = true;\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var defaultState = controllerLayer.defaultState;\r\n            if (!name && !defaultState)\r\n                throw new Error(\"Animator:must have default clip value,please set clip property.\");\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            var curPlayState = playStateInfo._currentState!;\r\n            var animatorState = name ? controllerLayer.getStateByName(name) : defaultState;\r\n\r\n            if (!animatorState._clip)\r\n                return;\r\n\r\n            var clipDuration = animatorState._clip!._duration;\r\n            var calclipduration = animatorState._clip!._duration * (animatorState.clipEnd - animatorState.clipStart);\r\n\r\n            // this.resetDefOwerVal();\r\n            // playStateInfo._resetPlayState(0.0, calclipduration);\r\n            // if (curPlayState != animatorState) {\r\n            //     playStateInfo._currentState = animatorState;\r\n            // }\r\n            // controllerLayer._playType = 0;、\r\n\r\n            if (curPlayState !== animatorState) {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY)\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                else\r\n                    playStateInfo._resetPlayState(0.0, calclipduration);\r\n                (curPlayState !== null && curPlayState !== animatorState);\r\n                controllerLayer._playType = 0;\r\n                playStateInfo._currentState = animatorState;\r\n            } else {\r\n                if (normalizedTime !== Number.NEGATIVE_INFINITY) {\r\n                    playStateInfo._resetPlayState(clipDuration * normalizedTime, calclipduration);\r\n                    controllerLayer._playType = 0;\r\n                }\r\n            }\r\n            animatorState._eventStart(this, layerIndex);\r\n        }\r\n        // var scripts = animatorState._scripts!;\r\n        // if (scripts) {\r\n        //     for (var i = 0, n = scripts.length; i < n; i++)\r\n        //         scripts[i].onStateEnter();\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 停止播放动画\r\n     */\r\n    stop() {\r\n        this._isPlaying = false;\r\n    }\r\n\r\n    /**\r\n     * 帧循环\r\n     * @returns \r\n     */\r\n    onUpdate(): void {\r\n        if (!this._isPlaying) return;\r\n\r\n        if (this._checkEnterIndex) {\r\n            for (let i = this._checkEnterIndex.length - 1; i >= 0; i--) {\r\n                let index = this._checkEnterIndex[i];\r\n                let enterTransition = this._controllerLayers[index]._enterTransition;\r\n                if (enterTransition.check(0, this.parameters, true)) {\r\n                    var defaultClip = this.getDefaultState(index);\r\n                    this.play(null, index, defaultClip.cycleOffset);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        var delta = this.owner.timer._delta / 1000.0;\r\n        delta = this._applyUpdateMode(delta);\r\n        if (0 == this.speed || 0 == delta) return;\r\n        var needRender = true;//TODO:有渲染节点才可将needRender变为true\r\n\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n            var controllerLayer = this._controllerLayers[i];\r\n            if (!controllerLayer.enable)\r\n                continue;\r\n\r\n\r\n            var playStateInfo = controllerLayer._playStateInfo!;\r\n            //var crossPlayStateInfo = controllerLayer._crossPlayStateInfo!;\r\n            var addtive = controllerLayer.blendingMode != AnimatorControllerLayer2D.BLENDINGMODE_OVERRIDE;\r\n            switch (controllerLayer._playType) {\r\n                case 0:\r\n                    var animatorState = playStateInfo._currentState!;\r\n                    var speed = this._speed * animatorState.speed;\r\n                    var finish = playStateInfo._finish;\r\n\r\n                    var loop = animatorState.loop;\r\n                    if (-1 >= loop) {\r\n                        var clip = animatorState._clip!;\r\n                        if (clip.islooping) {\r\n                            loop = 0;\r\n                        } else {\r\n                            loop = 1;\r\n                        }\r\n                    }\r\n\r\n                    let dir = 1;\r\n                    if (!playStateInfo._frontPlay) {\r\n                        dir = -1;\r\n                    }\r\n\r\n\r\n                    finish || this._updatePlayer(animatorState, playStateInfo, delta * speed * dir, loop, i);\r\n                    playStateInfo = controllerLayer._playStateInfo!;\r\n                    animatorState = playStateInfo._currentState!;\r\n                    if (needRender) {\r\n                        this._updateClipDatas(animatorState, addtive, playStateInfo);\r\n                        if (!finish) {\r\n                            this._setClipDatasToNode(animatorState, addtive, controllerLayer.defaultWeight, i == 0, controllerLayer);\r\n                            this._updateEventScript(animatorState, playStateInfo);\r\n                        }\r\n                    }\r\n                    finish || this._updateStateFinish(animatorState, playStateInfo);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加控制器层。\r\n     */\r\n    addControllerLayer(controllderLayer: AnimatorControllerLayer2D): void {\r\n        this._controllerLayers.push(controllderLayer);\r\n    }\r\n\r\n    /**\r\n     * 在当前动画状态和目标动画状态之间进行融合过渡播放。\r\n     * @param\tname 目标动画状态。\r\n     * @param\ttransitionDuration 过渡时间,该值为当前动画状态的归一化时间，值在0.0~1.0之间。\r\n     * @param\tlayerIndex 层索引。\r\n     * @param\tnormalizedTime 归一化的播放起始时间。\r\n     */\r\n    crossFade(name: string, transitionDuration: number, layerIndex: number = 0, normalizedTime: number = Number.NEGATIVE_INFINITY) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        if (controllerLayer) {\r\n            var destAnimatorState = controllerLayer.getStateByName(name);\r\n            if (destAnimatorState) {\r\n\r\n                this.play(name, layerIndex, normalizedTime);\r\n                return true;\r\n\r\n            }\r\n            else {\r\n                console.warn(\"Invalid layerIndex \" + layerIndex + \".\");\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    onAfterDeserialize(): void {\r\n        let arr = (<any>this).controllerLayers;\r\n        if (!arr || null != this.controller)\r\n            return;\r\n        delete (<any>this).controllerLayers;\r\n        this._controllerLayers.length = 0;\r\n        for (let layer of arr) {\r\n            this.addControllerLayer(layer);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onEnable() {\r\n        if (this._checkEnterIndex) this._checkEnterIndex.length = 0;\r\n        else this._checkEnterIndex = [];\r\n\r\n        if (this._isPlaying) {\r\n            for (var i = 0, n = this._controllerLayers.length; i < n; i++) {\r\n                if (this._controllerLayers[i].playOnWake) {\r\n                    var defaultClip = this.getDefaultState(i);\r\n                    //(defaultClip) && (this.play(null, i, defaultClip.cycleOffset));\r\n                    if (defaultClip) {\r\n                        let enterTransition = this._controllerLayers[i]._enterTransition;\r\n                        if (enterTransition) {\r\n                            this._isPlaying = true;\r\n                            if (enterTransition.check(0, this.parameters, true)) {\r\n                                this.play(null, i, defaultClip.cycleOffset);\r\n                            } else {\r\n                                this._checkEnterIndex.push(i);\r\n                            }\r\n                        } else {\r\n                            this.play(null, i, defaultClip.cycleOffset);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 默认状态机\r\n     * @param layerIndex \r\n     * @returns \r\n     */\r\n    getDefaultState(layerIndex = 0) {\r\n        var controllerLayer = this._controllerLayers[layerIndex];\r\n        return controllerLayer.defaultState;\r\n    }\r\n\r\n    /**\r\n     * 设置参数Trigger值\r\n     * @param name 名字\r\n     */\r\n    setParamsTrigger(name: string) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Trigger, value: true };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Number值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsNumber(name: string, value: number) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 设置参数Bool值\r\n     * @param name 名字\r\n     * @param value 值\r\n     */\r\n    setParamsBool(name: string, value: boolean) {\r\n        this._parameters[name] = { name: name, type: AniParmType.Float, value: value };\r\n    }\r\n\r\n    /**\r\n     * 得到参数值\r\n     * @param name 名字\r\n     * @returns \r\n     */\r\n    getParamsvalue(name: number) {\r\n        let parm = this._parameters[name];\r\n        if (parm) {\r\n            return parm.value;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    onDestroy() {\r\n        for (var i = 0, n = this._controllerLayers.length; i < n; i++)\r\n            this._controllerLayers[i].destroy();\r\n        this._controllerLayers.length = 0;\r\n        this._isPlaying = false;\r\n        this._parameters = null;\r\n    }\r\n}","import { AnimatorStateScript } from \"../d3/animation/AnimatorStateScript\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\";\r\nimport { IClone } from \"../utils/IClone\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>Animator</code> 类用于创建动画组件。\r\n */\r\nexport class AnimatorState2D extends EventDispatcher implements IClone {\r\n    /**@internal */\r\n    static EVENT_OnStateEnter = \"OnStartEnter\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateUpdate = \"OnStateUpdate\";\r\n\r\n    /**@internal */\r\n    static EVENT_OnStateExit = \"OnStateExit\";\r\n\r\n    /** @internal */\r\n    private _referenceCount = 0;\r\n\r\n    /** @internal */\r\n    _clip: AnimationClip2D | null = null;\r\n\r\n    /**@internal */\r\n    _currentFrameIndices: Int16Array | null = null;\r\n\r\n    /**play on awake start offset*/\r\n    cycleOffset: number = 0;\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * 动画播放速度\r\n     */\r\n    speed = 1.0;\r\n\r\n    /**\r\n     * 动作播放起始时间。\r\n     */\r\n    clipStart = 0.0;\r\n\r\n    /**\r\n     * 动作播放结束时间。\r\n     */\r\n    clipEnd = 1.0;\r\n\r\n    /**\r\n     *  动画循环次数，-1或者小于-1为使用clip的循环状态，1为播放一次，2为播放2次，0为无限循环\r\n     */\r\n    loop = -1;\r\n\r\n    /**\r\n     * 是否为一次正播放，一次倒播放模式 \r\n     */\r\n    yoyo = false;\r\n\r\n    /**@internal 过渡列表*/\r\n    transitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal 优先过渡列表only play this transition */\r\n    soloTransitions: AnimatorTransition2D[] = [];\r\n\r\n    /**@internal */\r\n    _scripts: AnimatorStateScript[] | null = null;\r\n\r\n    /**@internal */\r\n    _realtimeDatas: Array<number | string | boolean> = [];\r\n\r\n    /**\r\n     * 动作。\r\n     */\r\n    get clip(): AnimationClip2D | null {\r\n        return this._clip;\r\n    }\r\n\r\n    set clip(value: AnimationClip2D | null) {\r\n        if (this._clip != value) {\r\n            if (this._clip)\r\n                (this._referenceCount > 0) && (this._clip._removeReference(this._referenceCount));\r\n            if (value) {\r\n                var clipNodes = value._nodes!;\r\n                var count = clipNodes.count;\r\n                this._currentFrameIndices = new Int16Array(count);\r\n                this._resetFrameIndices();\r\n                (this._referenceCount > 0) && (value._addReference(this._referenceCount));\r\n                this._realtimeDatas.length = count;\r\n            }\r\n            this._clip = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStateUpdate(value: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateUpdate, value);\r\n        if (this._scripts) {\r\n            for (var i = 0, n = this._scripts.length; i < n; i++)\r\n                this._scripts[i].onStateUpdate(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventStart(animator: Animator2D, layerIndex: number) {\r\n        this.event(AnimatorState2D.EVENT_OnStateEnter);\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].setPlayScriptInfo(animator, layerIndex, this);\r\n                this._scripts[i].onStateEnter();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _eventExit() {\r\n        this.event(AnimatorState2D.EVENT_OnStateExit);\r\n        if (this._scripts) {\r\n            for (let i = 0, n = this._scripts.length; i < n; i++) {\r\n                this._scripts[i].onStateExit();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 派发过渡事件\r\n     * @internal\r\n     * @param normalizeTime \r\n     * @param paramsMap \r\n     */\r\n    _eventtransition(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): AnimatorTransition2D {\r\n        let soloNums = this.soloTransitions.length;\r\n        if (soloNums > 0) {\r\n            for (var i = 0; i < soloNums; i++) {\r\n                if (this.soloTransitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                    return this.soloTransitions[i];\r\n            }\r\n            return null;\r\n        }\r\n        let transNums = this.transitions.length;\r\n        for (var i = 0; i < transNums; i++) {\r\n            if (this.transitions[i].check(normalizeTime, paramsMap, isReplay))\r\n                return this.transitions[i];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetFrameIndices(): void {\r\n        for (var i = 0, n = this._currentFrameIndices!.length; i < n; i++)\r\n            this._currentFrameIndices![i] = -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    _getReferenceCount(): number {\r\n        return this._referenceCount;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _addReference(count: number): void {\r\n        (this._clip) && (this._clip._addReference(count));\r\n        this._referenceCount += count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param count \r\n     */\r\n    _removeReference(count: number): void {\r\n        (this._clip) && (this._clip._removeReference(count));\r\n        this._referenceCount -= count;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _clearReference(): void {\r\n        this._removeReference(-this._referenceCount);\r\n    }\r\n\r\n    /**\r\n     * 添加脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    addScript(type: typeof AnimatorStateScript): AnimatorStateScript {\r\n        var script: AnimatorStateScript = new type();\r\n        this._scripts = this._scripts || [];\r\n        this._scripts.push(script);\r\n        return script;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本。\r\n     */\r\n    getScript(type: typeof AnimatorStateScript): AnimatorStateScript | null {\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type)\r\n                    return script;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取脚本集合。\r\n     * @param\ttype  组件类型。\r\n     * @return 脚本集合。\r\n     */\r\n    getScripts(type: typeof AnimatorStateScript): AnimatorStateScript[] | null {\r\n        var coms: AnimatorStateScript[] | null = null;\r\n        if (this._scripts) {\r\n            for (var i: number = 0, n: number = this._scripts.length; i < n; i++) {\r\n                var script: AnimatorStateScript = this._scripts[i];\r\n                if (script instanceof type) {\r\n                    coms = coms || [];\r\n                    coms.push(script);\r\n                }\r\n            }\r\n        }\r\n        return coms;\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @returns \r\n     */\r\n    clone() {\r\n        var dest: AnimatorState2D = new AnimatorState2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 拷贝到目标\r\n     * @param destObject 目标节点\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var dest: AnimatorState2D = <AnimatorState2D>destObject;\r\n        dest.name = this.name;\r\n        dest.speed = this.speed;\r\n        dest.clip = this._clip;\r\n    }\r\n\r\n    /**\r\n     * 删除\r\n     */\r\n    destroy() {\r\n        this._clip = null;\r\n        this._currentFrameIndices = null;\r\n        this._scripts = null;\r\n        //this.nexts = null;\r\n        this._realtimeDatas.length = 0;\r\n    }\r\n\r\n}","import { Keyframe2D } from \"./KeyFrame2D\";\r\n\r\nexport class KeyframeNode2D {\r\n    _ownerPath: string[] = [];\r\n    _propertys: string[] = [];\r\n    fullPath: string;\r\n    nodePath: string;\r\n    _indexInList: number;\r\n\r\n\r\n\r\n    _keyFrames: Keyframe2D[] = [];\r\n    /**\r\n    * 帧个数。\r\n    */\r\n    get keyFramesCount(): number {\r\n        return this._keyFrames.length;\r\n    }\r\n    _setOwnerPathCount(value: number) {\r\n        this._ownerPath.length = value;\r\n    }\r\n    _setOwnerPathByIndex(index: number, value: string) {\r\n        this._ownerPath[index] = value;\r\n    }\r\n    _setPropertyCount(value: number) {\r\n        this._propertys.length = value;\r\n    }\r\n    _setPropertyByIndex(index: number, value: string) {\r\n        this._propertys[index] = value;\r\n    }\r\n    _setKeyframeCount(value: number) {\r\n        this._keyFrames.length = value;\r\n    }\r\n\r\n    _joinOwnerPath(sep: string): string {\r\n        return this._ownerPath.join(sep);\r\n    }\r\n    _joinProperty(sep: string): string {\r\n        return this._propertys.join(sep);\r\n    }\r\n\r\n    /**\r\n    * 通过索引获取帧。\r\n    * @param index 索引。\r\n    */\r\n    getKeyframeByIndex(index: number): Keyframe2D {\r\n        return this._keyFrames[index];\r\n    }\r\n    /**\r\n    * 精灵路径个数。\r\n    */\r\n    get ownerPathCount(): number {\r\n        return this._ownerPath.length;\r\n    }\r\n    /**\r\n     * 属性路径个数。\r\n     */\r\n    get propertyCount(): number {\r\n        return this._propertys.length;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取精灵路径。\r\n     * @param index 索引。\r\n     */\r\n    getOwnerPathByIndex(index: number): string {\r\n        return this._ownerPath[index];\r\n    }\r\n    /**\r\n     * 通过索引获取属性路径。\r\n     * @param index 索引。\r\n     */\r\n    getPropertyByIndex(index: number): string {\r\n        return this._propertys[index];\r\n    }\r\n\r\n\r\n}","import { IClone } from \"../utils/IClone\";\r\n\r\nexport interface TypeAniKey {\r\n    /**第几帧 */\r\n    f: number,\r\n    val: number | string | boolean,\r\n    /**目前用于2D动画，用于记录动画补间的类型，比如(Linear|Quad_EaseIn)... */\r\n    tweenType?: string,\r\n    /**扩展，如果有一些其它数据需要加入到关键帧中可以写在这里 */\r\n    extend?: any,\r\n    /**tween的信息 */\r\n    tweenInfo?: TypeTweenInfo,\r\n}\r\n\r\nexport interface TypeTweenInfo {\r\n    outTangent?: number,\r\n    outWeight?: number,\r\n    inTangent?: number,\r\n    inWeight?: number,\r\n    inWeightLock?: boolean,\r\n    outWeightLock?: boolean,\r\n    broken?: boolean,\r\n}\r\n\r\nexport class Keyframe2D implements IClone {\r\n    static defaultWeight = 0.33333;\r\n    /**时间。*/\r\n    time: number;\r\n    /**帧里面的具体数据 */\r\n    data: TypeAniKey;\r\n\r\n\r\n\r\n    clone() {\r\n        var dest = new Keyframe2D();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n    cloneTo(destObject: any): void {\r\n        var destKeyFrame: Keyframe2D = (<Keyframe2D>destObject);\r\n        destKeyFrame.time = this.time;\r\n    }\r\n\r\n}","/**\r\n * <code>Animation2DEvent</code> 类用于实现动画事件。\r\n */\r\nexport class Animation2DEvent {\r\n    /** 事件触发时间。*/\r\n    time: number;\r\n    /** 事件触发名称。*/\r\n    eventName: string;\r\n    /** 事件触发参数。*/\r\n    params: any[];\r\n\r\n    /**\r\n     * 创建一个 <code>Animation2DEvent</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n}\r\n","import { AnimationClip2D } from \"./AnimationClip2D\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\n/**\r\n * <code>AnimationClip2DParse01</code>\r\n * AnimationClip资源解析\r\n */\r\nexport class AnimationClip2DParse01 {\r\n    \r\n    /**@internal */\r\n    private static _clip: AnimationClip2D | null;\r\n    /**@internal */\r\n    private static _reader: Byte | null;\r\n    /**@internal */\r\n    private static _version: string | null;\r\n    /**@internal */\r\n    private static _strings: string[] = [];\r\n    /**@internal */\r\n    private static _DATA = { offset: 0, size: 0 };\r\n    /**@internal */\r\n    private static _BLOCK: { count: number, blockStarts?: number[], blockLengths?: number[] } = { count: 0 };\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_DATA() {\r\n        this._DATA.offset = this._reader!.getUint32();\r\n        this._DATA.size = this._reader!.getUint32();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_BLOCK() {\r\n        var count = this._BLOCK.count = this._reader!.getUint16();\r\n        var blockStarts: number[] = this._BLOCK.blockStarts = [];\r\n        var blockLengths: number[] = this._BLOCK.blockLengths = [];\r\n        for (var i = 0; i < count; i++) {\r\n            blockStarts.push(this._reader!.getUint32());\r\n            blockLengths.push(this._reader!.getUint32());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @internal\r\n     */\r\n    private static READ_STRINGS() {\r\n        var offset = this._reader!.getUint32();\r\n        var count = this._reader!.getUint16();\r\n        var prePos = this._reader!.pos;\r\n        this._reader!.pos = offset + this._DATA.offset;\r\n\r\n        for (var i = 0; i < count; i++)\r\n            this._strings[i] = this._reader!.readUTFString();\r\n        this._reader!.pos = prePos;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param clip \r\n     * @param reader \r\n     * @param version \r\n     */\r\n    static parse(clip: AnimationClip2D, reader: Byte, version: string) {\r\n        this._clip = clip;\r\n        this._reader = reader;\r\n        this._version = version;\r\n        this.READ_DATA();\r\n        this.READ_BLOCK();\r\n        this.READ_STRINGS();\r\n\r\n        for (var i = 0, n = this._BLOCK.count; i < n; i++) {\r\n            var index = reader.getUint16();\r\n            var blockName = this._strings[index];\r\n            var fn: () => void = (this as any)[\"READ_\" + blockName];\r\n            if (!fn) {\r\n                throw new Error(\"model file err,no this function:\" + index + \" \" + blockName);\r\n            }\r\n            else\r\n                fn.call(this);\r\n        }\r\n\r\n        this._version = null;\r\n        this._reader = null;\r\n        this._clip = null;\r\n        this._strings.length = 0;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param second \r\n     * @param fps \r\n     * @returns \r\n     */\r\n    private static timeToFrame(second: number, fps: number): number {\r\n        return Math.round(second * fps);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static READ_ANIMATIONS2D(): void {\r\n        var i: number, j: number;\r\n\r\n        var reader = this._reader!;\r\n        var clip = this._clip!;\r\n        var node: KeyframeNode2D;\r\n\r\n        var numList: number[] = [];\r\n        var numCount = reader.getUint16();\r\n        numList.length = numCount;\r\n        for (i = 0; i < numCount; i++) {\r\n            numList[i] = reader.getFloat32();\r\n        }\r\n\r\n        var clipDur = clip._duration = numList[reader.getInt16()];\r\n        clip.islooping = !!reader.getByte();\r\n        clip._frameRate = reader.getInt16();\r\n        var nodeCount = reader.getInt16();\r\n\r\n        var nodes = clip._nodes!;\r\n        nodes.count = nodeCount;\r\n        var nodesMap: Record<string, KeyframeNode2D[]> = clip._nodesMap = {};\r\n        var nodesDic: Record<string, KeyframeNode2D> = clip._nodesDic = {};\r\n\r\n        for (i = 0; i < nodeCount; i++) {\r\n            node = new KeyframeNode2D();\r\n            nodes.setNodeByIndex(i, node);\r\n            node._indexInList = i;\r\n\r\n            var pathLength = reader.getUint16();\r\n            node._setOwnerPathCount(pathLength);\r\n\r\n            for (j = 0; j < pathLength; j++) {\r\n                node._setOwnerPathByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var nodePath = node._joinOwnerPath(\"/\");\r\n            var mapArray = nodesMap[nodePath];\r\n            (mapArray) || (nodesMap[nodePath] = mapArray = []);\r\n            mapArray.push(node);\r\n\r\n\r\n            var propertyLength = reader.getUint16();\r\n            node._setPropertyCount(propertyLength);\r\n            for (j = 0; j < propertyLength; j++) {\r\n                node._setPropertyByIndex(j, this._strings[reader.getUint16()]);\r\n            }\r\n            var fullPath = nodePath + \".\" + node._joinProperty(\".\");\r\n            nodesDic[fullPath] = node;\r\n            node.fullPath = fullPath;\r\n            node.nodePath = nodePath;\r\n\r\n            var keyframeCount = reader.getUint16();\r\n            //node._setKeyframeCount(keyframeCount);\r\n            for (j = 0; j < keyframeCount; j++) {\r\n                var k = new Keyframe2D();\r\n                k.time = numList[reader.getUint16()];\r\n                k.data = { f: this.timeToFrame(k.time, clip._frameRate), val: 0 };\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenType = this._strings[reader.getUint16()];\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    k.data.tweenInfo = {};\r\n\r\n                    k.data.tweenInfo.inTangent = numList[reader.getUint16()];\r\n                    k.data.tweenInfo.outTangent = numList[reader.getUint16()];\r\n\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.inTangent)) {\r\n                    //     k.data.tweenInfo.inTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.inTangent) {\r\n                    //         k.data.tweenInfo.inTangent *= -1;\r\n                    //     }\r\n                    // }\r\n                    // if (Infinity == Math.abs(k.data.tweenInfo.outTangent)) {\r\n                    //     k.data.tweenInfo.outTangent = Number.MAX_VALUE;\r\n                    //     if (0 > k.data.tweenInfo.outTangent) {\r\n                    //         k.data.tweenInfo.outTangent *= -1;\r\n                    //     }\r\n                    // }\r\n\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.inWeight = numList[reader.getUint16()];\r\n                    }\r\n\r\n                    if (1 == reader.getByte()) {\r\n                        k.data.tweenInfo.outWeight = numList[reader.getUint16()];\r\n                    }\r\n                }\r\n                var num = reader.getByte();\r\n                if (0 == num) {\r\n                    k.data.val = numList[reader.getUint16()];\r\n                } else if (1 == num) {\r\n                    k.data.val = this._strings[reader.getUint16()];\r\n                } else if (2 == num) {\r\n                    k.data.val = !!reader.getByte();\r\n                }\r\n\r\n                if (1 == reader.getByte()) {\r\n                    try {\r\n                        k.data.extend = JSON.parse(this._strings[reader.getUint16()])\r\n                    } catch (err) { }\r\n                }\r\n                node._keyFrames.push(k);\r\n            }\r\n        }\r\n        var eventCount = reader.getUint16();\r\n        for (i = 0; i < eventCount; i++) {\r\n            var event = new Animation2DEvent();\r\n            //event.time = Math.min(clipDur, numList[reader.getUint16()]);\r\n            event.time = numList[reader.getUint16()];\r\n            event.eventName = this._strings[reader.getUint16()];\r\n            var params: Array<number | string | boolean> = [];\r\n            var paramCount: number = reader.getUint16();\r\n            (paramCount > 0) && (event.params = params = []);\r\n\r\n            for (j = 0; j < paramCount; j++) {\r\n                var eventType: number = reader.getByte();\r\n                switch (eventType) {\r\n                    case 0:\r\n                        params.push(!!reader.getByte());\r\n                        break;\r\n                    case 1:\r\n                        params.push(reader.getInt32());\r\n                        break;\r\n                    case 2:\r\n                        params.push(numList[reader.getUint16()]);\r\n                        break;\r\n                    case 3:\r\n                        params.push(this._strings[reader.getUint16()]);\r\n                        break;\r\n                    default:\r\n                        throw new Error(\"unknown type.\");\r\n                }\r\n            }\r\n            clip.addEvent(event);\r\n        }\r\n\r\n    }\r\n}","import { KeyframeNode2D } from \"./KeyframeNode2D\";\r\n\r\nexport class KeyframeNodeList2D {\r\n    private _nodes: KeyframeNode2D[] = [];\r\n    /**\r\n    *\t节点个数。\r\n    */\r\n    get count(): number {\r\n        return this._nodes.length;\r\n    }\r\n    set count(value: number) {\r\n        this._nodes.length = value;\r\n    }\r\n    /**\r\n     * 通过索引获取节点。\r\n     * @param\tindex 索引。\r\n     * @return 节点。\r\n     */\r\n    getNodeByIndex(index: number): KeyframeNode2D {\r\n        return this._nodes[index];\r\n    }\r\n\r\n    /**\r\n     * 通过索引设置节点。\r\n     * @param\tindex 索引。\r\n     * @param 节点。\r\n     */\r\n    setNodeByIndex(index: number, node: KeyframeNode2D): void {\r\n        this._nodes[index] = node;\r\n    }\r\n}","import { AnimationClip2DParse01 } from \"./AnimationClip2DParser01\";\r\nimport { KeyframeNode2D } from \"./KeyframeNode2D\";\r\nimport { KeyframeNodeList2D } from \"./KeyframeNodeList2D\";\r\nimport { Keyframe2D } from \"./KeyFrame2D\";\r\nimport { Animation2DEvent } from \"./Animation2DEvent\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Byte } from \"../utils/Byte\";\r\n\r\nexport class AnimationClip2D extends Resource {\r\n\r\n    /**\r\n     * @internal\r\n     * @param data \r\n     * @returns \r\n     */\r\n    static _parse(data: ArrayBuffer): AnimationClip2D {\r\n        var clip = new AnimationClip2D();\r\n        var reader = new Byte(data);\r\n        var version = reader.readUTFString();\r\n        switch (version) {\r\n            case \"LAYAANIMATION2D:01\":\r\n                AnimationClip2DParse01.parse(clip, reader, version);\r\n                break;\r\n            default:\r\n                throw \"unknown animationClip version.\";\r\n        }\r\n        return clip;\r\n    }\r\n\r\n    /**\r\n     * 动画补帧函数\r\n     */\r\n    static tween = {\r\n        Linear: function (t: number, b: number, c: number, d: number): number { return c * t / d + b; },\r\n        Quad_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t + b;\r\n        },\r\n        Quad_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (t /= d) * (t - 2) + b;\r\n        },\r\n        Quad_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\r\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n        },\r\n\r\n        Cubic_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t + b;\r\n        },\r\n        Cubic_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t + 1) + b;\r\n        },\r\n        Cubic_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t + 2) + b;\r\n        },\r\n\r\n        Quart_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t + b;\r\n        },\r\n        Quart_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n        },\r\n        Quart_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t + b;\r\n            return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n        },\r\n\r\n        Quint_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c * (t /= d) * t * t * t * t + b;\r\n        },\r\n        Quint_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n        },\r\n        Quint_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return c / 2 * t * t * t * t * t + b;\r\n            return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n        },\r\n\r\n        Sine_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\r\n        },\r\n        Sine_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sin(t / d * (Math.PI / 2)) + b;\r\n        },\r\n        Sine_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\r\n        },\r\n\r\n        Expo_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\r\n        },\r\n        Expo_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return (t == d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\r\n        },\r\n        Expo_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t == 0) return b;\r\n            if (t == d) return b + c;\r\n            if ((t /= d / 2) < 1) return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\r\n            return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\r\n        },\r\n\r\n        Circ_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\r\n        },\r\n        Circ_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\r\n        },\r\n        Circ_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d / 2) < 1) return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\r\n            return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\r\n        },\r\n\r\n        Elastic_EaseIn: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n        },\r\n        Elastic_EaseOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b);\r\n        },\r\n        Elastic_EaseInOut: function (t: number, b: number, c: number, d: number, a: number, p: number): number {\r\n            if (t == 0) return b; if ((t /= d / 2) == 2) return b + c; if (!p) p = d * (.3 * 1.5);\r\n            if (!a || a < Math.abs(c)) { a = c; var s = p / 4; }\r\n            else var s = p / (2 * Math.PI) * Math.asin(c / a);\r\n            if (t < 1) return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\r\n            return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\r\n        },\r\n\r\n        Back_EaseIn: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n        },\r\n        Back_EaseOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n        },\r\n        Back_EaseInOut: function (t: number, b: number, c: number, d: number, s: number = undefined): number {\r\n            if (s == undefined) s = 1.70158;\r\n            if ((t /= d / 2) < 1) return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\r\n            return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n        },\r\n\r\n        Bounce_EaseIn: function (t: number, b: number, c: number, d: number): number {\r\n            return c - AnimationClip2D.tween.Bounce_EaseOut(d - t, 0, c, d) + b;\r\n        },\r\n        Bounce_EaseOut: function (t: number, b: number, c: number, d: number): number {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            } else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n            } else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n            } else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n            }\r\n        },\r\n        Bounce_EaseInOut: function (t: number, b: number, c: number, d: number): number {\r\n            if (t < d / 2) return AnimationClip2D.tween.Bounce_EaseIn(t * 2, 0, c, d) * .5 + b;\r\n            else return AnimationClip2D.tween.Bounce_EaseOut(t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n        },\r\n\r\n        hermiteInterpolate: function (outTangent: number, inTangent: number, startValue: number, endValue: number, t: number, dur: number): number {\r\n            if (Math.abs(outTangent) == Infinity || Math.abs(inTangent) == Infinity) {\r\n                if (0 > outTangent || 0 < inTangent) return startValue;\r\n                return startValue;\r\n            }\r\n            var t2 = t * t;\r\n            var t3 = t2 * t;\r\n            var a = 2.0 * t3 - 3.0 * t2 + 1.0;\r\n            var b = t3 - 2.0 * t2 + t;\r\n            var c = t3 - t2;\r\n            var d = -2.0 * t3 + 3.0 * t2;\r\n            return a * startValue + b * outTangent * dur + c * inTangent * dur + d * endValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _frameRate: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _duration: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _animationEvents: Animation2DEvent[];\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesDic: Record<string, KeyframeNode2D>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodesMap: Record<string, KeyframeNode2D[]>;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _nodes: KeyframeNodeList2D | null = new KeyframeNodeList2D();\r\n\r\n    /**\r\n     * 是否循环\r\n     */\r\n    islooping: boolean;\r\n\r\n    /**\r\n     * 实例化一个2D动画clip类\r\n     */\r\n    constructor() {\r\n        super();\r\n        this._animationEvents = [];\r\n    }\r\n\r\n    /**\r\n     * 动画时长\r\n     * @returns \r\n     */\r\n    duration() {\r\n        return this._duration;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @internal\r\n     * @param playCurTime \r\n     * @param realTimeCurrentFrameIndexes \r\n     * @param addtive \r\n     * @param frontPlay \r\n     * @param outDatas \r\n     */\r\n    _evaluateClipDatasRealTime(playCurTime: number, realTimeCurrentFrameIndexes: Int16Array, addtive: boolean, frontPlay: boolean, outDatas: Array<number | string | boolean>) {\r\n        var nodes = this._nodes;\r\n        for (var i = 0, n = nodes.count; i < n; i++) {\r\n            var node = nodes.getNodeByIndex(i);\r\n            var nextFrameIndex;\r\n            var keyFrames = node._keyFrames;\r\n            var keyFramesCount = keyFrames.length;\r\n            if (0 == keyFramesCount) continue;\r\n            var frameIndex = realTimeCurrentFrameIndexes[i];\r\n            if (frontPlay) {\r\n                if ((-1 != frameIndex) && (playCurTime < keyFrames[frameIndex].time)) {//重置正向循环\r\n                    frameIndex = -1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (nextFrameIndex < keyFramesCount) {\r\n                    if (keyFrames[nextFrameIndex].time > playCurTime)\r\n                        break;\r\n                    frameIndex++;\r\n                    nextFrameIndex++;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n            } else {\r\n                nextFrameIndex = frameIndex + 1;\r\n                if ((nextFrameIndex != keyFramesCount) && (playCurTime > keyFrames[nextFrameIndex].time)) {//重置逆向循环\r\n                    frameIndex = keyFramesCount - 1;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n                nextFrameIndex = frameIndex + 1;\r\n                while (frameIndex > -1) {\r\n                    if (keyFrames[frameIndex].time < playCurTime)\r\n                        break;\r\n                    frameIndex--;\r\n                    nextFrameIndex--;\r\n                    realTimeCurrentFrameIndexes[i] = frameIndex;\r\n                }\r\n\r\n            }\r\n            var isEnd = nextFrameIndex == keyFramesCount;\r\n\r\n            if (-1 != frameIndex) {\r\n                var frame = keyFrames[frameIndex];\r\n                if (isEnd) {//如果nextFarme为空，不修改数据，保持上一帧\r\n                    outDatas[i] = frame.data.val;\r\n                } else {\r\n                    var nextFarme = keyFrames[nextFrameIndex];\r\n                    var d = nextFarme.time - frame.time;\r\n                    var t;\r\n                    if (d !== 0)\r\n                        t = (playCurTime - frame.time) / d;\r\n                    else\r\n                        t = 0;\r\n\r\n                    outDatas[i] = this._getTweenVal(frame, nextFarme, t, d);\r\n                }\r\n            } else {\r\n                outDatas[i] = keyFrames[0].data.val;\r\n            }\r\n\r\n            if (addtive && \"number\" == typeof keyFrames[0].data.val) {\r\n                outDatas[i] = <number>outDatas[i] - keyFrames[0].data.val;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param frame \r\n     * @param nextFrame \r\n     * @param t \r\n     * @param dur \r\n     * @returns \r\n     */\r\n    private _getTweenVal(frame: Keyframe2D, nextFrame: Keyframe2D, t: number, dur: number) {\r\n        var start = frame.data;\r\n        var end = nextFrame.data;\r\n\r\n        if (\"number\" != typeof start.val || \"number\" != typeof end.val) {\r\n            return start.val;\r\n        }\r\n        var tweenFun = (AnimationClip2D.tween as any)[start.tweenType];\r\n        var poval = start.val as number;\r\n        var oval = end.val as number;\r\n\r\n        //var t = (x - s.cx) / (e.cx - s.cx);\r\n        if (null != tweenFun) {\r\n            return tweenFun(t, poval, oval - poval, 1);\r\n        }\r\n\r\n        var outTangent = 0;\r\n        var inTangent = 0;\r\n\r\n        var outWeight = NaN;\r\n        var inWeight = NaN;\r\n\r\n        if (null != start.tweenInfo) {\r\n            outTangent = start.tweenInfo.outTangent;\r\n            outWeight = start.tweenInfo.outWeight;\r\n        }\r\n        if (null != end.tweenInfo) {\r\n            inTangent = end.tweenInfo.inTangent;\r\n            inWeight = end.tweenInfo.inWeight;\r\n        }\r\n        if (isNaN(outWeight) || 0 >= outWeight) outWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(inWeight) || 0 >= inWeight) inWeight = Keyframe2D.defaultWeight;\r\n        if (isNaN(outTangent)) outTangent = 0;\r\n        if (isNaN(inTangent)) inTangent = 0;\r\n\r\n        if (Math.abs(outTangent) == Number.MAX_VALUE) {\r\n            if (0 > outTangent) {\r\n                outTangent = -Infinity;\r\n            } else {\r\n                outTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        if (Math.abs(inTangent) == Number.MAX_VALUE) {\r\n            if (0 > inTangent) {\r\n                inTangent = -Infinity;\r\n            } else {\r\n                inTangent = Infinity;\r\n            }\r\n        }\r\n\r\n        var tnum: number;\r\n        if ((!start.tweenInfo && !end.tweenInfo) || (Keyframe2D.defaultWeight == inWeight && Keyframe2D.defaultWeight == outWeight)) {\r\n            //var dur = nextFrameTime - startFrameTime;\r\n            tnum = AnimationClip2D.tween.hermiteInterpolate(outTangent, inTangent, poval, oval, t, dur);\r\n        } else {\r\n            tnum = this.hermiteCurveSplineWeight(poval, frame.time, outWeight, outTangent, oval, nextFrame.time, inWeight, inTangent, t);\r\n        }\r\n        return tnum;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param time \r\n     * @returns \r\n     */\r\n    private _binarySearchEventIndex(time: number): number {\r\n        var start = 0;\r\n        var end = this._animationEvents.length - 1;\r\n        var mid;\r\n        while (start <= end) {\r\n            mid = (start + end) >> 1;\r\n            var midValue = this._animationEvents[mid].time;\r\n            if (midValue == time)\r\n                return mid;\r\n            else if (midValue > time)\r\n                end = mid - 1;\r\n            else\r\n                start = mid + 1;\r\n        }\r\n        return start;\r\n    }\r\n\r\n    /**\r\n     * hermite插值算法\r\n     * @param frameValue 上一帧值\r\n     * @param frametime 上一帧事件\r\n     * @param frameOutWeight 上一帧权重\r\n     * @param frameOutTangent 上一帧切线\r\n     * @param nextframeValue 下一帧值\r\n     * @param nextframetime 下一帧时间\r\n     * @param nextframeInweight 下一帧权重\r\n     * @param nextframeIntangent 下一帧切线\r\n     * @param time 时间\r\n     * @returns \r\n     */\r\n    hermiteCurveSplineWeight(frameValue: number, frametime: number, frameOutWeight: number, frameOutTangent: number, nextframeValue: number, nextframetime: number, nextframeInweight: number, nextframeIntangent: number, time: number) {\r\n        let Eps = 2.22e-16;\r\n\r\n        let x = time;\r\n        let x1 = frametime;\r\n        let y1 = frameValue;\r\n        let wt1 = frameOutWeight;\r\n        let x2 = nextframetime;\r\n        let y2 = nextframeValue;\r\n        let wt2 = nextframeInweight;\r\n\r\n        let dx = x2 - x1;\r\n        let dy = y2 - y1;\r\n        dy = Math.max(Math.abs(dy), Eps) * (dy < 0 ? -1 : 1);\r\n\r\n        let yp1 = frameOutTangent;\r\n        let yp2 = nextframeIntangent;\r\n\r\n        if (!Number.isFinite(yp1) || !Number.isFinite(yp2)) {\r\n            return frameValue;\r\n        }\r\n\r\n        yp1 = yp1 * dx / dy;\r\n        yp2 = yp2 * dx / dy;\r\n\r\n        let wt2s = 1 - wt2;\r\n\r\n        let t = 0.5;\r\n        let t2 = 0;\r\n\r\n        if (Math.abs(wt1 - 0.33333334) < 0.0001 && Math.abs(wt2 - 0.33333334) < 0.0001) {\r\n            t = x;\r\n            t2 = 1 - t;\r\n        }\r\n        else {\r\n            while (true) {\r\n                t2 = (1 - t);\r\n                let fg = 3 * t2 * t2 * t * wt1 + 3 * t2 * t * t * wt2s + t * t * t - x;\r\n                if (Math.abs(fg) <= 2.5 * Eps)\r\n                    break;\r\n\r\n                // third order householder method\r\n                let fpg = 3 * t2 * t2 * wt1 + 6 * t2 * t * (wt2s - wt1) + 3 * t * t * (1 - wt2s);\r\n                let fppg = 6 * t2 * (wt2s - 2 * wt1) + 6 * t * (1 - 2 * wt2s + wt1);\r\n                let fpppg = 18 * wt1 - 18 * wt2s + 6;\r\n\r\n                t -= (6 * fg * fpg * fpg - 3 * fg * fg * fppg) / (6 * fpg * fpg * fpg - 6 * fg * fpg * fppg + fg * fg * fpppg);\r\n            }\r\n        }\r\n\r\n        let y = 3 * t2 * t2 * t * wt1 * yp1 + 3 * t2 * t * t * (1 - wt2 * yp2) + t * t * t;\r\n\r\n        return y * dy + y1;\r\n    }\r\n\r\n\r\n    /**\r\n     * 添加动画事件。\r\n     * @param event 动画事件\r\n     */\r\n    addEvent(event: Animation2DEvent): void {\r\n        var index = this._binarySearchEventIndex(event.time);\r\n        this._animationEvents.splice(index, 0, event);\r\n    }\r\n\r\n\r\n\r\n}","import { AniParmType } from \"./AnimatorControllerParse\";\r\n\r\nexport class Animation2DParm {\r\n    name: string;\r\n    type: AniParmType;\r\n    value: boolean | number;\r\n}","import { AniStateConditionType, AniStateConditionNumberCompressType } from \"./AnimatorControllerParse\";\r\n\r\nexport class AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    static _conditionNameMap: any = {};\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _propertyNameCounter: number = 0;\r\n\r\n    /**\r\n     * 通过名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static conditionNameToID(name: string): number {\r\n        if (AnimatorStateCondition._conditionNameMap[name] != null) {\r\n            return AnimatorStateCondition._conditionNameMap[name];\r\n        } else {\r\n            var id: number = this._propertyNameCounter++;\r\n            this._conditionNameMap[name] = id;\r\n            this._conditionNameMap[id] = name;\r\n            return id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过ID获得唯一名称。\r\n     * @param id \r\n     * @returns \r\n     */\r\n    static conditionIDToName(id: number): string {\r\n        return this._conditionNameMap[id];\r\n    }\r\n\r\n    /**\r\n     * @internal 状态条件类型\r\n     */\r\n    protected _type: AniStateConditionType;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _id: number;\r\n\r\n    /**\r\n     * @intenral\r\n     */\r\n    private _name: string;\r\n\r\n    /**\r\n     * 状态机过渡条件\r\n     */\r\n    constructor(name: string = null) {\r\n        if (!name) return;\r\n        this._id = AnimatorStateCondition.conditionNameToID(name);\r\n        this._name = name;\r\n    }\r\n\r\n    /**\r\n     * 唯一ID\r\n     */\r\n    get id() {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * 名称\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n\r\n    set name(value: string) {\r\n        this._id = AnimatorStateCondition.conditionNameToID(value);\r\n        this._name = value\r\n    }\r\n\r\n    /**\r\n     * 条件类型\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number | boolean): boolean {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateNumberCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberValue: number;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _numberCompareFlag: AniStateConditionNumberCompressType;\r\n\r\n    /**\r\n     * 创建number比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._numberValue = 0;\r\n        this._numberCompareFlag = AniStateConditionNumberCompressType.Greater;\r\n        this._type = AniStateConditionType.Number;\r\n    }\r\n\r\n    /**\r\n     * number值\r\n     */\r\n    get numberValue() {\r\n        return this._numberValue;\r\n    }\r\n\r\n    set numberValue(value: number) {\r\n        this._numberValue = value;\r\n    }\r\n\r\n    /**\r\n     * 判断类型\r\n     */\r\n    get compareFlag() {\r\n        return this._numberCompareFlag;\r\n    }\r\n\r\n    set compareFlag(value: AniStateConditionNumberCompressType) {\r\n        this._numberCompareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: number): boolean {\r\n        if (AniStateConditionNumberCompressType.Greater == this._numberCompareFlag)\r\n            return value > this._numberValue;\r\n        else\r\n            return value < this._numberValue;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateBoolCondition extends AnimatorStateCondition {\r\n    /**\r\n     * @internal\r\n     */\r\n    private _compareFlag: boolean;\r\n\r\n    /**\r\n     * 创建bool比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._compareFlag = true;\r\n        this._type = AniStateConditionType.Bool;\r\n    }\r\n\r\n    /**\r\n     * 判断类型 \r\n     */\r\n    get compareFlag() {\r\n        return this._compareFlag;\r\n    }\r\n\r\n    set compareFlag(value: boolean) {\r\n        this._compareFlag = value;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return this._compareFlag == value;\r\n    }\r\n}\r\n\r\nexport class AnimatorStateTriggerCondition extends AnimatorStateCondition {\r\n    /**\r\n     * 创建trigger比较条件类\r\n     * @param name \r\n     */\r\n    constructor(name: string) {\r\n        super(name);\r\n        this._type = AniStateConditionType.Trigger;\r\n    }\r\n\r\n    /**\r\n     * 检查状态是否触发,tigger 如果是true,就算条件达成\r\n     * @param value \r\n     * @returns \r\n     */\r\n    checkState(value: boolean): boolean {\r\n        return value;\r\n    }\r\n}","import { Animation2DParm } from \"./Animation2DParm\";\r\nimport { AniStateConditionType } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition } from \"./AnimatorStateCondition\";\r\n\r\nexport class AnimatorTransition2D {\r\n    mute: boolean;\r\n    exitTime: number;//退出时间\r\n    exitByTime: boolean;//是否设置生效时间\r\n    transstartoffset: number;//归一化的时间的下一个state播放位置\r\n    transduration: number;//归一化过度时间 TODO 0-1\r\n    conditions: AnimatorStateCondition[];//\r\n    destState: AnimatorState2D;\r\n    /**\r\n     * 创建一个新的Animatortransition2D\r\n     */\r\n    constructor() {\r\n        this.conditions = [];\r\n        this.exitByTime = true;\r\n        this.exitTime = 1;\r\n        this.transduration = 0;\r\n        this.transstartoffset = 0;\r\n        this.mute = false;\r\n    }\r\n\r\n    /**\r\n     * 增加一个条件\r\n     * @param condition \r\n     */\r\n     addCondition(condition: AnimatorStateCondition): void {\r\n        if (this.conditions.indexOf(condition) == -1) {\r\n            this.conditions.push(condition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除一个条件\r\n     * @param condition \r\n     */\r\n    removeCondition(condition: AnimatorStateCondition): void {\r\n        let index = this.conditions.indexOf(condition);\r\n        if (index != -1) {\r\n            this.conditions.splice(index, 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n    * 是否启用过渡\r\n    * @param normalizeTime \r\n    * @param paramsMap \r\n    */\r\n    check(normalizeTime: number, paramsMap: Record<string, Animation2DParm>, isReplay: boolean): boolean {\r\n        if (this.mute) {\r\n            return false;\r\n        }\r\n        if (this.exitByTime && (normalizeTime < this.exitTime && !isReplay)) {\r\n            return false;\r\n        }\r\n        if (null == this.conditions || 0 == this.conditions.length) {\r\n            return true;\r\n        }\r\n        for (var i = 0; i < this.conditions.length; i++) {\r\n            let con = this.conditions[i];\r\n\r\n            let out = con.checkState(paramsMap[con.name].value);\r\n            if (out) {\r\n                if (con.type == AniStateConditionType.Trigger) {\r\n                    paramsMap[con.name].value = false;\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}","import { Resource } from \"../resource/Resource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { Animation2DParm } from \"./Animation2DParm\";\r\nimport { Animator2D } from \"./Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./AnimatorControllerLayer2D\";\r\nimport { AnimatorControllerParse, AniParmType, TypeAnimatorConditions, TypeAnimatorControllerData, TypeAnimatorParams, TypeAnimatorState, TypeAnimatorTransition } from \"./AnimatorControllerParse\";\r\nimport { AnimatorState2D } from \"./AnimatorState2D\";\r\nimport { AnimatorStateCondition, AnimatorStateBoolCondition, AnimatorStateNumberCondition, AnimatorStateTriggerCondition } from \"./AnimatorStateCondition\";\r\nimport { AnimatorTransition2D } from \"./AnimatorTransition2D\";\r\n\r\n/**\r\n * <code>2D动画控制器<code/>\r\n */\r\nexport class AnimatorController2D extends Resource {\r\n    /**\r\n     * @internal\r\n     */\r\n    data: TypeAnimatorControllerData;\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clipsID: string[];\r\n\r\n    /**\r\n     * 实例化2D动画控制器\r\n     * @param data \r\n     */\r\n    constructor(data: any) {\r\n        super();\r\n        let obj = AnimatorControllerParse.parse(data);\r\n        this.data = obj.ret;\r\n        this.clipsID = obj.clipsID;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns \r\n     */\r\n    private getLayers() {\r\n        let layers = this.data.controllerLayers;\r\n        let lArr: AnimatorControllerLayer2D[] = [];\r\n        for (let i = layers.length - 1; i >= 0; i--) {\r\n            let l = layers[i];\r\n            let acl = new AnimatorControllerLayer2D(l.name);\r\n            lArr.unshift(acl);\r\n\r\n\r\n            for (let k in l) {\r\n                if (\"name\" == k || \"states\" == k || null == (l as any)[k]) {\r\n                    continue;\r\n                }\r\n                try {\r\n                    (acl as any)[k] = (l as any)[k];\r\n                } catch (err: any) { }\r\n            }\r\n            this.getState(l.states, acl, this.data);\r\n\r\n        }\r\n        return lArr;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @returns \r\n     */\r\n    private createState(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D) {\r\n        if (!states) return null;\r\n        let ret: Record<string, AnimatorState2D> = {};\r\n        let defID: string = null;\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n            let childStates = obj.states;\r\n            if (childStates) {\r\n                let groupRet = this.createState(childStates, idCatch, acl);\r\n                if (groupRet) {\r\n                    idCatch[obj.id] = groupRet.states[groupRet.id];\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (0 > Number(obj.id)) {\r\n                if (\"-1\" == obj.id) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions && 0 < transitions.length) {\r\n                        defID = transitions[0].id;\r\n                    }\r\n                }\r\n                continue;\r\n            }\r\n\r\n            let state = new AnimatorState2D();\r\n            idCatch[obj.id] = state;\r\n            ret[obj.id] = state;\r\n            for (let k in obj) {\r\n                try {\r\n                    if (\"scripts\" == k) {\r\n                        let scripts: string[] = obj[k];\r\n                        if (scripts && Array.isArray(scripts)) {\r\n                            for (let k = scripts.length - 1; k >= 0; k--) {\r\n                                let uuid = scripts[k];\r\n                                if (uuid && 0 == uuid.indexOf(\"res://\")) {\r\n                                    uuid = uuid.substring(6);\r\n                                }\r\n                                let c = ClassUtils.getClass(uuid);\r\n                                if (c) {\r\n                                    state.addScript(c);\r\n                                }\r\n                            }\r\n                        }\r\n                        continue;\r\n                    } else if (\"soloTransitions\" == k) {\r\n                        continue;\r\n                    } else if (null != (obj as any)[k]) {\r\n                        (state as any)[k] = (obj as any)[k];\r\n                    }\r\n                } catch (err: any) { }\r\n            }\r\n\r\n            acl.addState(state);\r\n        }\r\n        return { id: defID, states: ret };\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param acl \r\n     * @param data \r\n     */\r\n    private getState(states: TypeAnimatorState[], acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData) {\r\n        //let ret:\r\n        if (states) {\r\n            let idCatch: Record<string, AnimatorState2D> = {};\r\n            this.createState(states, idCatch, acl);\r\n            this.setTransitions(states, idCatch, acl, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param exitRet \r\n     * @param transitions \r\n     * @param idCatch \r\n     * @param data \r\n     * @param pExitRet \r\n     */\r\n    private setExitTransition(exitRet: Record<string, TypeAnimatorTransition[]>, transitions: TypeAnimatorTransition[], idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData, pExitRet: Record<string, TypeAnimatorTransition[]>) {\r\n        for (let id in exitRet) {\r\n            let state = idCatch[id];\r\n            if (state) {\r\n\r\n                let ats: AnimatorTransition2D[] = state.transitions;\r\n                let sts: AnimatorTransition2D[] = state.soloTransitions;\r\n\r\n                let linArr = exitRet[id];\r\n                for (let i = transitions.length - 1; i >= 0; i--) {\r\n                    let t = transitions[i];\r\n                    if (\"-3\" == t.id) {\r\n                        if (null == pExitRet[id]) {\r\n                            pExitRet[id] = [];\r\n                        }\r\n                        pExitRet[id].push(t);\r\n                        continue;\r\n                    }\r\n\r\n\r\n                    for (let j = linArr.length - 1; j >= 0; j--) {\r\n                        let t2 = linArr[j];\r\n\r\n\r\n                        let ato = new AnimatorTransition2D();\r\n                        ato.destState = idCatch[t.id];\r\n\r\n                        if (t.conditions) {\r\n                            this.addConditions(t.conditions, ato, data);\r\n                        }\r\n\r\n                        if (t2.conditions) {\r\n                            this.addConditions(t2.conditions, ato, data);\r\n                        }\r\n\r\n\r\n                        for (let k in t) {\r\n                            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                continue;\r\n                            } else {\r\n                                (ato as any)[k] = (t as any)[k];\r\n                            }\r\n                        }\r\n\r\n                        if (t.solo) {\r\n                            sts.unshift(ato);\r\n                        } else {\r\n                            ats.unshift(ato);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _getAnimatorTransition2D(o: TypeAnimatorTransition, idCatch: Record<string, AnimatorState2D>, data: TypeAnimatorControllerData) {\r\n        let ato = new AnimatorTransition2D();\r\n\r\n        if (idCatch[o.id]) {\r\n            ato.destState = idCatch[o.id];\r\n        }\r\n        if (o.conditions) {\r\n            this.addConditions(o.conditions, ato, data);\r\n        }\r\n\r\n        for (let k in o) {\r\n            if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                continue;\r\n            } else {\r\n                (ato as any)[k] = (o as any)[k];\r\n            }\r\n        }\r\n        return ato;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param states \r\n     * @param idCatch \r\n     * @param acl \r\n     * @param data \r\n     * @param pState \r\n     * @returns \r\n     */\r\n    private setTransitions(states: TypeAnimatorState[], idCatch: Record<string, AnimatorState2D>, acl: AnimatorControllerLayer2D, data: TypeAnimatorControllerData, pState?: TypeAnimatorState) {\r\n        if (!states) return null;\r\n\r\n        let exitRet: Record<string, TypeAnimatorTransition[]> = {};\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                let exitTransition = this.setTransitions(obj.states, idCatch, acl, data, obj);\r\n                if (exitTransition) {\r\n                    let transitions = obj.soloTransitions;\r\n                    if (transitions) {\r\n                        this.setExitTransition(exitTransition, transitions, idCatch, data, exitRet);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        for (let i = states.length - 1; i >= 0; i--) {\r\n            let obj = states[i];\r\n\r\n            if (obj.states) {\r\n                continue;\r\n            }\r\n            if (\"-1\" == obj.id) {\r\n                if (obj.soloTransitions && 0 < obj.soloTransitions.length) {\r\n                    if (null == pState) {\r\n                        acl.defaultState = idCatch[obj.soloTransitions[0].id];\r\n                        acl._enterTransition = this._getAnimatorTransition2D(obj.soloTransitions[0], idCatch, data);\r\n                    } else {\r\n                        idCatch[pState.id] = idCatch[obj.soloTransitions[0].id];\r\n                    }\r\n                    continue;\r\n                }\r\n            } else if (\"-2\" == obj.id) {\r\n                let transitions = obj.soloTransitions;\r\n                if (transitions) {\r\n                    for (let j = transitions.length - 1; j >= 0; j--) {\r\n                        let o = transitions[j];\r\n                        let destState = idCatch[o.id];\r\n                        if (destState) {\r\n                            for (let idk in idCatch) {\r\n                                let state = idCatch[idk];\r\n                                let ato = this._getAnimatorTransition2D(o, idCatch, data)\r\n                                // let ato = new AnimatorTransition2D();\r\n                                // ato.destState = destState;\r\n                                // if (o.conditions) {\r\n                                //     this.addConditions(o.conditions, ato, data);\r\n                                // }\r\n\r\n                                // for (let k in o) {\r\n                                //     if (\"solo\" == k || \"id\" == k || \"conditions\" == k) {\r\n                                //         continue;\r\n                                //     } else {\r\n                                //         (ato as any)[k] = (o as any)[k];\r\n                                //     }\r\n                                // }\r\n\r\n                                if (o.solo) {\r\n                                    state.soloTransitions.unshift(ato);\r\n                                } else {\r\n                                    state.transitions.unshift(ato);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n                continue;\r\n            } else if (\"-3\" == obj.id) {\r\n                continue;\r\n            }\r\n\r\n            let soloTransitions = obj.soloTransitions;\r\n            if (soloTransitions && idCatch[obj.id]) {\r\n\r\n                let ats: AnimatorTransition2D[] = idCatch[obj.id].transitions;\r\n                let sts: AnimatorTransition2D[] = idCatch[obj.id].soloTransitions;\r\n                for (let j = soloTransitions.length - 1; j >= 0; j--) {\r\n                    let o = soloTransitions[j];\r\n                    if (\"-3\" == o.id) {\r\n                        if (null == exitRet[obj.id]) {\r\n                            exitRet[obj.id] = [];\r\n                        }\r\n                        exitRet[obj.id].push(o);\r\n                        continue;\r\n                    }\r\n\r\n                    let ato = this._getAnimatorTransition2D(o,idCatch,data);\r\n\r\n                    if (o.solo) {\r\n                        sts.unshift(ato);\r\n                    } else {\r\n                        ats.unshift(ato);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return exitRet;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param arr \r\n     * @param ato \r\n     * @param data \r\n     * @returns \r\n     */\r\n    private addConditions(arr: TypeAnimatorConditions[], ato: AnimatorTransition2D, data: TypeAnimatorControllerData) {\r\n        let parms = data.animatorParams;\r\n        if (null == parms || 0 == parms.length) return;\r\n        for (let i = 0, len = arr.length; i < len; i++) {\r\n            let o = arr[i];\r\n            let parm: TypeAnimatorParams = null;\r\n            for (let j = parms.length - 1; j >= 0; j--) {\r\n                if (parms[j].id == o.id) {\r\n                    parm = parms[j];\r\n                    break;\r\n                }\r\n            }\r\n            if (null == parm) {\r\n                return;\r\n            }\r\n            let c: AnimatorStateCondition;\r\n            if (parm.type == AniParmType.Bool) {\r\n                let b = new AnimatorStateBoolCondition(parm.name);\r\n                b.compareFlag = Boolean(o.checkValue);\r\n                c = b;\r\n            } else if (parm.type == AniParmType.Float) {\r\n                let n = new AnimatorStateNumberCondition(parm.name);\r\n                n.numberValue = Number(o.checkValue);\r\n                n.compareFlag = o.type;\r\n                c = n;\r\n            } else if (parm.type == AniParmType.Trigger) {\r\n                let t = new AnimatorStateTriggerCondition(parm.name);\r\n                c = t;\r\n            }\r\n            ato.addCondition(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param a \r\n     */\r\n    updateTo(a: Animator2D) {\r\n        let currLayer = (a as any)._controllerLayers;\r\n\r\n        for (let i = 0, len = currLayer.length; i < len; i++) {\r\n            currLayer[i].destroy();\r\n        }\r\n        currLayer.length = 0;\r\n\r\n        let layers = this.getLayers();\r\n        for (let i = 0, len = layers.length; i < len; i++) {\r\n            a.addControllerLayer(layers[i]);\r\n        }\r\n\r\n        let parms = this.data.animatorParams;\r\n        if (parms) {\r\n            let setParm: Record<string, Animation2DParm> = {};\r\n            for (let i = parms.length - 1; i >= 0; i--) {\r\n                let p = parms[i];\r\n                let sp = new Animation2DParm();\r\n                sp.name = p.name;\r\n                sp.type = p.type;\r\n                sp.value = p.val;\r\n                setParm[p.name] = sp;\r\n            }\r\n            a.parameters = setParm;\r\n        }\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _tempVector0 = new Vector3();\r\nconst _tempVector1 = new Vector3();\r\nconst _tempVector2 = new Vector3();\r\nconst _tempVector3 = new Vector3();\r\nconst DEFAULTARRAY = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\r\n\r\n/**\r\n * <code>Matrix4x4</code> 类用于创建4x4矩阵。\r\n */\r\nexport class Matrix4x4 implements IClone {\r\n    /**@internal */\r\n    static TEMPMatrix0: Matrix4x4 = new Matrix4x4();\r\n    /**@internal */\r\n    static TEMPMatrix1: Matrix4x4 = new Matrix4x4();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Matrix4x4> = new Matrix4x4();\r\n    static readonly DEFAULTINVERT: Readonly<Matrix4x4> = new Matrix4x4(-1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly ZERO: Readonly<Matrix4x4> = new Matrix4x4(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\r\n\r\n    /**\r\n     * 绕X轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationX(rad: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[7] = oe[8] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[0] = oe[15] = 1;\r\n        oe[5] = oe[10] = c;\r\n        oe[6] = s;\r\n        oe[9] = -s;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * 绕Y轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationY(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[1] = oe[3] = oe[4] = oe[6] = oe[7] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[5] = oe[15] = 1;\r\n        oe[0] = oe[10] = c;\r\n        oe[2] = -s;\r\n        oe[8] = s;\r\n    }\r\n\r\n    /**\r\n     * 绕Z轴旋转\r\n     * @param\trad  旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createRotationZ(rad: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        oe[2] = oe[3] = oe[6] = oe[7] = oe[8] = oe[9] = oe[11] = oe[12] = oe[13] = oe[14] = 0;\r\n        oe[10] = oe[15] = 1;\r\n        oe[0] = oe[5] = c;\r\n        oe[1] = s;\r\n        oe[4] = -s;\r\n    }\r\n\r\n    /**\r\n     * 通过yaw pitch roll旋转创建旋转矩阵。\r\n     * @param\tyaw\r\n     * @param\tpitch\r\n     * @param\troll\r\n     * @param\tresult\r\n     */\r\n    static createRotationYawPitchRoll(yaw: number, pitch: number, roll: number, result: Matrix4x4): void {\r\n        Quaternion.createFromYawPitchRoll(yaw, pitch, roll, Quaternion.TEMP);\r\n        Matrix4x4.createRotationQuaternion(Quaternion.TEMP, result);\r\n    }\r\n\r\n    /**\r\n     * 通过旋转轴axis和旋转角度angle计算旋转矩阵。\r\n     * @param\taxis 旋转轴,假定已经归一化。\r\n     * @param\tangle 旋转角度。\r\n     * @param\tresult 结果矩阵。\r\n     */\r\n    static createRotationAxis(axis: Vector3, angle: number, result: Matrix4x4): void {\r\n        var x: number = axis.x;\r\n        var y: number = axis.y;\r\n        var z: number = axis.z;\r\n        var cos: number = Math.cos(angle);\r\n        var sin: number = Math.sin(angle);\r\n        var xx: number = x * x;\r\n        var yy: number = y * y;\r\n        var zz: number = z * z;\r\n        var xy: number = x * y;\r\n        var xz: number = x * z;\r\n        var yz: number = y * z;\r\n\r\n        var resultE: Float32Array = result.elements;\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = xx + (cos * (1.0 - xx));\r\n        resultE[1] = (xy - (cos * xy)) + (sin * z);\r\n        resultE[2] = (xz - (cos * xz)) - (sin * y);\r\n        resultE[4] = (xy - (cos * xy)) - (sin * z);\r\n        resultE[5] = yy + (cos * (1.0 - yy));\r\n        resultE[6] = (yz - (cos * yz)) + (sin * x);\r\n        resultE[8] = (xz - (cos * xz)) + (sin * y);\r\n        resultE[9] = (yz - (cos * yz)) - (sin * x);\r\n        resultE[10] = zz + (cos * (1.0 - zz));\r\n    }\r\n\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tresult 输出旋转矩阵\r\n     */\r\n    static createRotationQuaternion(rotation: Quaternion, result: Matrix4x4): void {\r\n        var resultE: Float32Array = result.elements;\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        resultE[3] = resultE[7] = resultE[11] = resultE[12] = resultE[13] = resultE[14] = 0;\r\n        resultE[15] = 1.0;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[4] = 2.0 * (xy - zw);\r\n        resultE[5] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[6] = 2.0 * (yz + xw);\r\n        resultE[8] = 2.0 * (zx + yw);\r\n        resultE[9] = 2.0 * (yz - xw);\r\n        resultE[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据平移计算输出矩阵\r\n     * @param\ttrans  平移向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createTranslate(trans: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[4] = oe[8] = oe[1] = oe[9] = oe[2] = oe[6] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n    }\r\n\r\n    /**\r\n     * 根据缩放计算输出矩阵\r\n     * @param\tscale  缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createScaling(scale: Vector3, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = scale.x;\r\n        oe[5] = scale.y;\r\n        oe[10] = scale.z;\r\n        oe[1] = oe[4] = oe[8] = oe[12] = oe[9] = oe[13] = oe[2] = oe[6] = oe[14] = oe[3] = oe[7] = oe[11] = 0;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算两个矩阵的乘法\r\n     * @param\tleft left矩阵\r\n     * @param\tright  right矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix4x4, right: Matrix4x4, out: Matrix4x4): void {\r\n        var l: Float32Array = right.elements;\r\n        var r: Float32Array = left.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2], l14: number = l[3];\r\n        var l21: number = l[4], l22: number = l[5], l23: number = l[6], l24: number = l[7];\r\n        var l31: number = l[8], l32: number = l[9], l33: number = l[10], l34: number = l[11];\r\n        var l41: number = l[12], l42: number = l[13], l43: number = l[14], l44: number = l[15];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2], r14: number = r[3];\r\n        var r21: number = r[4], r22: number = r[5], r23: number = r[6], r24: number = r[7];\r\n        var r31: number = r[8], r32: number = r[9], r33: number = r[10], r34: number = r[11];\r\n        var r41: number = r[12], r42: number = r[13], r43: number = r[14], r44: number = r[15];\r\n\r\n        e[0] = (l11 * r11) + (l12 * r21) + (l13 * r31) + (l14 * r41);\r\n        e[1] = (l11 * r12) + (l12 * r22) + (l13 * r32) + (l14 * r42);\r\n        e[2] = (l11 * r13) + (l12 * r23) + (l13 * r33) + (l14 * r43);\r\n        e[3] = (l11 * r14) + (l12 * r24) + (l13 * r34) + (l14 * r44);\r\n        e[4] = (l21 * r11) + (l22 * r21) + (l23 * r31) + (l24 * r41);\r\n        e[5] = (l21 * r12) + (l22 * r22) + (l23 * r32) + (l24 * r42);\r\n        e[6] = (l21 * r13) + (l22 * r23) + (l23 * r33) + (l24 * r43);\r\n        e[7] = (l21 * r14) + (l22 * r24) + (l23 * r34) + (l24 * r44);\r\n        e[8] = (l31 * r11) + (l32 * r21) + (l33 * r31) + (l34 * r41);\r\n        e[9] = (l31 * r12) + (l32 * r22) + (l33 * r32) + (l34 * r42);\r\n        e[10] = (l31 * r13) + (l32 * r23) + (l33 * r33) + (l34 * r43);\r\n        e[11] = (l31 * r14) + (l32 * r24) + (l33 * r34) + (l34 * r44);\r\n        e[12] = (l41 * r11) + (l42 * r21) + (l43 * r31) + (l44 * r41);\r\n        e[13] = (l41 * r12) + (l42 * r22) + (l43 * r32) + (l44 * r42);\r\n        e[14] = (l41 * r13) + (l42 * r23) + (l43 * r33) + (l44 * r43);\r\n        e[15] = (l41 * r14) + (l42 * r24) + (l43 * r34) + (l44 * r44);\r\n    }\r\n\r\n    /**\r\n     * 从四元数计算旋转矩阵\r\n     * @param\trotation 四元数\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromQuaternion(rotation: Quaternion, out: Matrix4x4): void {\r\n        var e: Float32Array = out.elements;\r\n        var x: number = rotation.x, y: number = rotation.y, z: number = rotation.z, w: number = rotation.w;\r\n        var x2: number = x + x;\r\n        var y2: number = y + y;\r\n        var z2: number = z + z;\r\n\r\n        var xx: number = x * x2;\r\n        var yx: number = y * x2;\r\n        var yy: number = y * y2;\r\n        var zx: number = z * x2;\r\n        var zy: number = z * y2;\r\n        var zz: number = z * z2;\r\n        var wx: number = w * x2;\r\n        var wy: number = w * y2;\r\n        var wz: number = w * z2;\r\n\r\n        e[0] = 1 - yy - zz;\r\n        e[1] = yx + wz;\r\n        e[2] = zx - wy;\r\n        e[3] = 0;\r\n\r\n        e[4] = yx - wz;\r\n        e[5] = 1 - xx - zz;\r\n        e[6] = zy + wx;\r\n        e[7] = 0;\r\n\r\n        e[8] = zx + wy;\r\n        e[9] = zy - wx;\r\n        e[10] = 1 - xx - yy;\r\n        e[11] = 0;\r\n\r\n        e[12] = 0;\r\n        e[13] = 0;\r\n        e[14] = 0;\r\n        e[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算仿射矩阵\r\n     * @param\ttrans 平移\r\n     * @param\trot 旋转\r\n     * @param\tscale 缩放\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createAffineTransformation(trans: Vector3, rot: Quaternion, scale: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n\r\n        var x: number = rot.x, y: number = rot.y, z: number = rot.z, w: number = rot.w, x2: number = x + x, y2: number = y + y, z2: number = z + z;\r\n        var xx: number = x * x2, xy: number = x * y2, xz: number = x * z2, yy: number = y * y2, yz: number = y * z2, zz: number = z * z2;\r\n        var wx: number = w * x2, wy: number = w * y2, wz: number = w * z2, sx: number = scale.x, sy: number = scale.y, sz: number = scale.z;\r\n\r\n        oe[0] = (1 - (yy + zz)) * sx;\r\n        oe[1] = (xy + wz) * sx;\r\n        oe[2] = (xz - wy) * sx;\r\n        oe[3] = 0;\r\n        oe[4] = (xy - wz) * sy;\r\n        oe[5] = (1 - (xx + zz)) * sy;\r\n        oe[6] = (yz + wx) * sy;\r\n        oe[7] = 0;\r\n        oe[8] = (xz + wy) * sz;\r\n        oe[9] = (yz - wx) * sz;\r\n        oe[10] = (1 - (xx + yy)) * sz;\r\n        oe[11] = 0;\r\n        oe[12] = trans.x;\r\n        oe[13] = trans.y;\r\n        oe[14] = trans.z;\r\n        oe[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * 计算观察矩阵\r\n     * @param\teye 视点位置\r\n     * @param\ttarget 视点目标\r\n     * @param\tup 向上向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix4x4): void {\r\n        var oE: Float32Array = out.elements;\r\n        var xaxis: Vector3 = _tempVector0;\r\n        var yaxis: Vector3 = _tempVector1;\r\n        var zaxis: Vector3 = _tempVector2;\r\n        Vector3.subtract(eye, target, zaxis);\r\n        Vector3.normalize(zaxis, zaxis);\r\n        Vector3.cross(up, zaxis, xaxis);\r\n        Vector3.normalize(xaxis, xaxis);\r\n        Vector3.cross(zaxis, xaxis, yaxis);\r\n\r\n        oE[3] = oE[7] = oE[11] = 0;\r\n        oE[15] = 1;\r\n        oE[0] = xaxis.x;\r\n        oE[4] = xaxis.y;\r\n        oE[8] = xaxis.z;\r\n        oE[1] = yaxis.x;\r\n        oE[5] = yaxis.y;\r\n        oE[9] = yaxis.z;\r\n        oE[2] = zaxis.x;\r\n        oE[6] = zaxis.y;\r\n        oE[10] = zaxis.z;\r\n\r\n        oE[12] = -Vector3.dot(xaxis, eye);\r\n        oE[13] = -Vector3.dot(yaxis, eye);\r\n        oE[14] = -Vector3.dot(zaxis, eye);\r\n    }\r\n\r\n    /**\r\n     * 通过FOV创建透视投影矩阵。\r\n     * @param\tfov  视角。\r\n     * @param\taspect 横纵比。\r\n     * @param\tnear 近裁面。\r\n     * @param\tfar 远裁面。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspective(fov: number, aspect: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var yScale: number = 1.0 / Math.tan(fov * 0.5);\r\n        var xScale: number = yScale / aspect;\r\n\r\n        var halfWidth: number = znear / xScale;\r\n        var halfHeight: number = znear / yScale;\r\n        Matrix4x4.createPerspectiveOffCenter(-halfWidth, halfWidth, -halfHeight, halfHeight, znear, zfar, out);\r\n    }\r\n\r\n    /**\r\n     * 创建透视投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tznear 视椎近边界。\r\n     * @param\tzfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createPerspectiveOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = zfar / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[7] = oe[12] = oe[13] = oe[15] = 0;\r\n        oe[0] = 2.0 * znear / (right - left);\r\n        oe[5] = 2.0 * znear / (top - bottom);\r\n        oe[8] = (left + right) / (right - left);\r\n        oe[9] = (top + bottom) / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[11] = -1.0;\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**\r\n     * 计算正交投影矩阵。\r\n     * @param\tleft 视椎左边界。\r\n     * @param\tright 视椎右边界。\r\n     * @param\tbottom 视椎底边界。\r\n     * @param\ttop 视椎顶边界。\r\n     * @param\tnear 视椎近边界。\r\n     * @param\tfar 视椎远边界。\r\n     * @param\tout 输出矩阵。\r\n     */\r\n    static createOrthoOffCenter(left: number, right: number, bottom: number, top: number, znear: number, zfar: number, out: Matrix4x4): void {\r\n\r\n        var oe: Float32Array = out.elements;\r\n        var zRange: number = 1.0 / (zfar - znear);\r\n        oe[1] = oe[2] = oe[3] = oe[4] = oe[6] = oe[8] = oe[7] = oe[9] = oe[11] = 0;\r\n        oe[15] = 1;\r\n        oe[0] = 2.0 / (right - left);\r\n        oe[5] = 2.0 / (top - bottom);\r\n        oe[10] = -zRange;\r\n        oe[12] = (left + right) / (left - right);\r\n        oe[13] = (top + bottom) / (bottom - top);\r\n        oe[14] = -znear * zRange;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix4x4</code> 实例。\r\n     * @param\t4x4矩阵的各元素\r\n     */\r\n    constructor(m11: number = 1, m12: number = 0, m13: number = 0, m14: number = 0, m21: number = 0, m22: number = 1, m23: number = 0, m24: number = 0, m31: number = 0, m32: number = 0, m33: number = 1, m34: number = 0, m41: number = 0, m42: number = 0, m43: number = 0, m44: number = 1, elements: Float32Array = null) {\r\n        if (arguments.length == 0) {\r\n            this.elements = DEFAULTARRAY.slice();\r\n            return;\r\n        }\r\n        if (arguments.length === 1 && arguments[0] === null)\r\n            return;\r\n\r\n        var e: Float32Array = elements ? this.elements = elements : this.elements = new Float32Array(16);//TODO:[NATIVE]临时\r\n        e[0] = m11;\r\n        e[1] = m12;\r\n        e[2] = m13;\r\n        e[3] = m14;\r\n        e[4] = m21;\r\n        e[5] = m22;\r\n        e[6] = m23;\r\n        e[7] = m24;\r\n        e[8] = m31;\r\n        e[9] = m32;\r\n        e[10] = m33;\r\n        e[11] = m34;\r\n        e[12] = m41;\r\n        e[13] = m42;\r\n        e[14] = m43;\r\n        e[15] = m44;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @returns \r\n     */\r\n    getElementByRowColumn(row: number, column: number): number {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        return this.elements[(row * 4) + column];\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param row \r\n     * @param column \r\n     * @param value \r\n     */\r\n    setElementByRowColumn(row: number, column: number, value: number): void {\r\n        if (row < 0 || row > 3)\r\n            throw new Error(\"row Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n        if (column < 0 || column > 3)\r\n            throw new Error(\"column Rows and columns for matrices run from 0 to 3, inclusive.\");\r\n\r\n        this.elements[(row * 4) + column] = value;\r\n    }\r\n\r\n    /**\r\n  * 四元数生成矩阵\r\n  * @param rotation \r\n  */\r\n    setRotation(rotation: Quaternion): void {\r\n        var rotationX: number = rotation.x;\r\n        var rotationY: number = rotation.y;\r\n        var rotationZ: number = rotation.z;\r\n        var rotationW: number = rotation.w;\r\n\r\n        var xx: number = rotationX * rotationX;\r\n        var yy: number = rotationY * rotationY;\r\n        var zz: number = rotationZ * rotationZ;\r\n        var xy: number = rotationX * rotationY;\r\n        var zw: number = rotationZ * rotationW;\r\n        var zx: number = rotationZ * rotationX;\r\n        var yw: number = rotationY * rotationW;\r\n        var yz: number = rotationY * rotationZ;\r\n        var xw: number = rotationX * rotationW;\r\n\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1.0 - (2.0 * (yy + zz));\r\n        e[1] = 2.0 * (xy + zw);\r\n        e[2] = 2.0 * (zx - yw);\r\n        e[4] = 2.0 * (xy - zw);\r\n        e[5] = 1.0 - (2.0 * (zz + xx));\r\n        e[6] = 2.0 * (yz + xw);\r\n        e[8] = 2.0 * (zx + yw);\r\n        e[9] = 2.0 * (yz - xw);\r\n        e[10] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 位置\r\n     * @param position \r\n     */\r\n    setPosition(position: Vector3): void {\r\n        var e: Float32Array = this.elements;\r\n        e[12] = position.x;\r\n        e[13] = position.y;\r\n        e[14] = position.z;\r\n    }\r\n\r\n\r\n    /**\r\n     * 判断两个4x4矩阵的值是否相等。\r\n     * @param\tother 4x4矩阵\r\n     */\r\n    equalsOtherMatrix(other: Matrix4x4): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var oe: Float32Array = other.elements;\r\n\r\n        return (MathUtils3D.nearEqual(e[0], oe[0]) && MathUtils3D.nearEqual(e[1], oe[1]) && MathUtils3D.nearEqual(e[2], oe[2]) && MathUtils3D.nearEqual(e[3], oe[3]) && MathUtils3D.nearEqual(e[4], oe[4]) && MathUtils3D.nearEqual(e[5], oe[5]) && MathUtils3D.nearEqual(e[6], oe[6]) && MathUtils3D.nearEqual(e[7], oe[7]) && MathUtils3D.nearEqual(e[8], oe[8]) && MathUtils3D.nearEqual(e[9], oe[9]) && MathUtils3D.nearEqual(e[10], oe[10]) && MathUtils3D.nearEqual(e[11], oe[11]) && MathUtils3D.nearEqual(e[12], oe[12]) && MathUtils3D.nearEqual(e[13], oe[13]) && MathUtils3D.nearEqual(e[14], oe[14]) && MathUtils3D.nearEqual(e[15], oe[15]));\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转四元数、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotation 旋转四元数。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotScale(translation: Vector3, rotation: Quaternion, scale: Vector3): boolean {\r\n        var rotationMatrix: Matrix4x4 = _tempMatrix4x4;\r\n        if (this.decomposeTransRotMatScale(translation, rotationMatrix, scale)) {\r\n            Quaternion.createFromMatrix4x4(rotationMatrix, rotation);\r\n            return true;\r\n        } else {\r\n            rotation.identity();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 分解矩阵为平移向量、旋转矩阵、缩放向量。\r\n     * @param\ttranslation 平移向量。\r\n     * @param\trotationMatrix 旋转矩阵。\r\n     * @param\tscale 缩放向量。\r\n     * @return 是否分解成功。\r\n     */\r\n    decomposeTransRotMatScale(translation: Vector3, rotationMatrix: Matrix4x4, scale: Vector3): boolean {\r\n        var e: Float32Array = this.elements;\r\n        var te: Vector3 = translation;\r\n        var re: Float32Array = rotationMatrix.elements;\r\n        var se: Vector3 = scale;\r\n\r\n        //Get the translation. \r\n        te.x = e[12];\r\n        te.y = e[13];\r\n        te.z = e[14];\r\n\r\n        //Scaling is the length of the rows. \r\n        var m11: number = e[0], m12: number = e[1], m13: number = e[2];\r\n        var m21: number = e[4], m22: number = e[5], m23: number = e[6];\r\n        var m31: number = e[8], m32: number = e[9], m33: number = e[10];\r\n\r\n        var sX: number = se.x = Math.sqrt((m11 * m11) + (m12 * m12) + (m13 * m13));\r\n        var sY: number = se.y = Math.sqrt((m21 * m21) + (m22 * m22) + (m23 * m23));\r\n        var sZ: number = se.z = Math.sqrt((m31 * m31) + (m32 * m32) + (m33 * m33));\r\n\r\n        //If any of the scaling factors are zero, than the rotation matrix can not exist. \r\n        if (MathUtils3D.isZero(sX) || MathUtils3D.isZero(sY) || MathUtils3D.isZero(sZ)) {\r\n            re[1] = re[2] = re[3] = re[4] = re[6] = re[7] = re[8] = re[9] = re[11] = re[12] = re[13] = re[14] = 0;\r\n            re[0] = re[5] = re[10] = re[15] = 1;\r\n            return false;\r\n        }\r\n\r\n        // Calculate an perfect orthonormal matrix (no reflections)\r\n        var at: Vector3 = _tempVector0;\r\n        at.x = m31 / sZ;\r\n        at.y = m32 / sZ;\r\n        at.z = m33 / sZ;\r\n        var tempRight: Vector3 = _tempVector1;\r\n        tempRight.x = m11 / sX;\r\n        tempRight.y = m12 / sX;\r\n        tempRight.z = m13 / sX;\r\n        var up: Vector3 = _tempVector2;\r\n        Vector3.cross(at, tempRight, up);\r\n        var right: Vector3 = _tempVector1;\r\n        Vector3.cross(up, at, right);\r\n\r\n        re[3] = re[7] = re[11] = re[12] = re[13] = re[14] = 0;\r\n        re[15] = 1;\r\n        re[0] = right.x;\r\n        re[1] = right.y;\r\n        re[2] = right.z;\r\n\r\n        re[4] = up.x;\r\n        re[5] = up.y;\r\n        re[6] = up.z;\r\n\r\n        re[8] = at.x;\r\n        re[9] = at.y;\r\n        re[10] = at.z;\r\n\r\n        // In case of reflexions//TODO:是否不用计算dot后的值即为结果\r\n        ((re[0] * m11 + re[1] * m12 + re[2] * m13)/*Vector3.dot(right,Right)*/ < 0.0) && (se.x = -sX);\r\n        ((re[4] * m21 + re[5] * m22 + re[6] * m23)/* Vector3.dot(up, Up)*/ < 0.0) && (se.y = -sY);\r\n        ((re[8] * m31 + re[9] * m32 + re[10] * m33)/*Vector3.dot(at, Backward)*/ < 0.0) && (se.z = -sZ);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 分解旋转矩阵的旋转为YawPitchRoll欧拉角。\r\n     * @param\tout float yaw\r\n     * @param\tout float pitch\r\n     * @param\tout float roll\r\n     * @return\r\n     */\r\n    decomposeYawPitchRoll(yawPitchRoll: Vector3): void {//TODO:经飞仙测试,好像有BUG。\r\n        var pitch: number = Math.asin(-this.elements[9]);\r\n        yawPitchRoll.y = pitch;\r\n        // Hardcoded constant - burn him, he's a witch\r\n        // double threshold = 0.001; \r\n        var test: number = Math.cos(pitch);\r\n        if (test > MathUtils3D.zeroTolerance) {\r\n            yawPitchRoll.z = Math.atan2(this.elements[1], this.elements[5]);\r\n            yawPitchRoll.x = Math.atan2(this.elements[8], this.elements[10]);\r\n        } else {\r\n            yawPitchRoll.z = Math.atan2(-this.elements[4], this.elements[0]);\r\n            yawPitchRoll.x = 0.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 归一化矩阵 \r\n     */\r\n    normalize(): void {\r\n        var v: Float32Array = this.elements;\r\n        var c: number = v[0], d: number = v[1], e: number = v[2], g: number = Math.sqrt(c * c + d * d + e * e);\r\n        if (g) {\r\n            if (g == 1)\r\n                return;\r\n        } else {\r\n            v[0] = 0;\r\n            v[1] = 0;\r\n            v[2] = 0;\r\n            return;\r\n        }\r\n        g = 1 / g;\r\n        v[0] = c * g;\r\n        v[1] = d * g;\r\n        v[2] = e * g;\r\n    }\r\n\r\n    /**\r\n     * 计算矩阵的转置矩阵\r\n     */\r\n    transpose(): Matrix4x4 {\r\n        var e: Float32Array, t: number;\r\n        e = this.elements;\r\n        t = e[1];\r\n        e[1] = e[4];\r\n        e[4] = t;\r\n        t = e[2];\r\n        e[2] = e[8];\r\n        e[8] = t;\r\n        t = e[3];\r\n        e[3] = e[12];\r\n        e[12] = t;\r\n        t = e[6];\r\n        e[6] = e[9];\r\n        e[9] = t;\r\n        t = e[7];\r\n        e[7] = e[13];\r\n        e[13] = t;\r\n        t = e[11];\r\n        e[11] = e[14];\r\n        e[14] = t;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 计算一个矩阵的逆矩阵\r\n     * @param\tout 输出矩阵\r\n     */\r\n    invert(out: Matrix4x4): void {\r\n\r\n        var ae: Float32Array = this.elements;\r\n        var oe: Float32Array = out.elements;\r\n        var a00: number = ae[0], a01: number = ae[1], a02: number = ae[2], a03: number = ae[3], a10: number = ae[4], a11: number = ae[5], a12: number = ae[6], a13: number = ae[7], a20: number = ae[8], a21: number = ae[9], a22: number = ae[10], a23: number = ae[11], a30: number = ae[12], a31: number = ae[13], a32: number = ae[14], a33: number = ae[15],\r\n\r\n            b00: number = a00 * a11 - a01 * a10, b01: number = a00 * a12 - a02 * a10, b02: number = a00 * a13 - a03 * a10, b03: number = a01 * a12 - a02 * a11, b04: number = a01 * a13 - a03 * a11, b05: number = a02 * a13 - a03 * a12, b06: number = a20 * a31 - a21 * a30, b07: number = a20 * a32 - a22 * a30, b08: number = a20 * a33 - a23 * a30, b09: number = a21 * a32 - a22 * a31, b10: number = a21 * a33 - a23 * a31, b11: number = a22 * a33 - a23 * a32,\r\n\r\n            // Calculate the determinant \r\n            det: number = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (Math.abs(det) === 0.0) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        oe[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        oe[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        oe[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        oe[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        oe[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        oe[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        oe[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        oe[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        oe[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        oe[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        oe[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        oe[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        oe[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        oe[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        oe[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        oe[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算BlillBoard矩阵\r\n     * @param\tobjectPosition 物体位置\r\n     * @param\tcameraPosition 相机位置\r\n     * @param\tcameraUp       相机上向量\r\n     * @param\tcameraForward  相机前向量\r\n     * @param\tmat            变换矩阵\r\n     */\r\n    static billboard(objectPosition: Vector3, cameraPosition: Vector3, cameraUp: Vector3, cameraForward: Vector3, mat: Matrix4x4): void {\r\n\r\n        Vector3.subtract(objectPosition, cameraPosition, _tempVector0);\r\n\r\n        var lengthSq: number = Vector3.scalarLengthSquared(_tempVector0);\r\n\r\n        if (MathUtils3D.isZero(lengthSq)) {\r\n            Vector3.scale(cameraForward, -1, _tempVector1);\r\n            _tempVector1.cloneTo(_tempVector0);\r\n        } else {\r\n            Vector3.scale(_tempVector0, 1 / Math.sqrt(lengthSq), _tempVector0);\r\n        }\r\n\r\n        Vector3.cross(cameraUp, _tempVector0, _tempVector2);\r\n        Vector3.normalize(_tempVector2, _tempVector2);\r\n        Vector3.cross(_tempVector0, _tempVector2, _tempVector3);\r\n\r\n        var crosse: Vector3 = _tempVector2;\r\n        var finale: Vector3 = _tempVector3;\r\n        var diffee: Vector3 = _tempVector0;\r\n        var obpose: Vector3 = objectPosition;\r\n\r\n        var mate: Float32Array = mat.elements;\r\n        mate[0] = crosse.x;\r\n        mate[1] = crosse.y;\r\n        mate[2] = crosse.z;\r\n        mate[3] = 0.0;\r\n        mate[4] = finale.x;\r\n        mate[5] = finale.y;\r\n        mate[6] = finale.z;\r\n        mate[7] = 0.0;\r\n        mate[8] = diffee.x;\r\n        mate[9] = diffee.y;\r\n        mate[10] = diffee.z;\r\n        mate[11] = 0.0;\r\n        mate[12] = obpose.x;\r\n        mate[13] = obpose.y;\r\n        mate[14] = obpose.z;\r\n        mate[15] = 1.0;\r\n    }\r\n\r\n    /**\r\n     * 归一化\r\n     */\r\n    identity(): void {\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[1] = e[2] = e[3] = e[4] = e[6] = e[7] = e[8] = e[9] = e[11] = e[12] = e[13] = e[14] = 0;\r\n        e[0] = e[5] = e[10] = e[15] = 1;\r\n        */\r\n        this.elements.set(DEFAULTARRAY);\r\n    }\r\n\r\n    /**判断是否是单位矩阵 */\r\n    isIdentity(): boolean {\r\n        let delty = function (num0: number, num1: number) {\r\n            return Math.abs(num0 - num1) < 1e-7;\r\n        }\r\n        let e = this.elements;\r\n        let defined = Matrix4x4.DEFAULT.elements;\r\n        for (let i = 0, n = e.length; i < n; i++) {\r\n            if (!delty(e[i], defined[i]))\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        destObject.elements.set(this.elements);\r\n        /*for (i = 0; i < 16; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆\r\n     * @param destObject \r\n     */\r\n    cloneByArray(destObject: Float32Array) {\r\n        this.elements.set(destObject);\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix4x4 = new Matrix4x4(null);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    static translation(v3: Vector3, out: Matrix4x4): void {\r\n        var oe: Float32Array = out.elements;\r\n        oe[0] = oe[5] = oe[10] = oe[15] = 1;\r\n        oe[12] = v3.x;\r\n        oe[13] = v3.y;\r\n        oe[14] = v3.z;\r\n    }\r\n\r\n    /**\r\n     * 获取平移向量。\r\n     * @param\tout 平移向量。\r\n     */\r\n    getTranslationVector(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = me[12];\r\n        out.y = me[13];\r\n        out.z = me[14];\r\n    }\r\n\r\n    /**\r\n     * 设置平移向量。\r\n     * @param\ttranslate 平移向量。\r\n     */\r\n    setTranslationVector(translate: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        var ve: Vector3 = translate;\r\n        me[12] = ve.x;\r\n        me[13] = ve.y;\r\n        me[14] = ve.z;\r\n    }\r\n\r\n    /**\r\n     * 获取前向量。\r\n     * @param\tout 前向量。\r\n     */\r\n    getForward(out: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        out.x = -me[8];\r\n        out.y = -me[9];\r\n        out.z = -me[10];\r\n    }\r\n\r\n    /**\r\n     * 设置前向量。\r\n     * @param\tforward 前向量。\r\n     */\r\n    setForward(forward: Vector3): void {\r\n        var me: Float32Array = this.elements;\r\n        me[8] = -forward.x;\r\n        me[9] = -forward.y;\r\n        me[10] = -forward.z;\r\n    }\r\n\r\n    /**\r\n     * 判断此矩阵是否是反向矩阵\r\n     */\r\n    getInvertFront(): boolean {\r\n        this.decomposeTransRotScale(_tempVector0, Quaternion.TEMP, _tempVector1);\r\n        var scale: Vector3 = _tempVector1;\r\n        var isInvert: boolean = scale.x < 0;\r\n        (scale.y < 0) && (isInvert = !isInvert);\r\n        (scale.z < 0) && (isInvert = !isInvert);\r\n        return isInvert;\r\n    }\r\n}\r\n\r\nconst _tempMatrix4x4 = new Matrix4x4();","import { Vector3 } from \"./Vector3\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Quaternion } from \"./Quaternion\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst _DEFAULTELEMENTS = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\r\nconst _tempV30 = new Vector3();\r\nconst _tempV31 = new Vector3();\r\nconst _tempV32 = new Vector3();\r\n\r\n/**\r\n * <code>Matrix3x3</code> 类用于创建3x3矩阵。\r\n */\r\nexport class Matrix3x3 implements IClone {\r\n    static readonly DEFAULT: Readonly<Matrix3x3> = new Matrix3x3();\r\n\r\n    /**\r\n     * 通过四元数创建旋转矩阵。\r\n     * @param rotation 旋转四元数。\r\n     * @param out 旋转矩阵。\r\n     */\r\n\r\n    static createRotationQuaternion(rotation: Quaternion, out: Matrix3x3) {\r\n        var rotX: number = rotation.x;\r\n        var rotY: number = rotation.y;\r\n        var rotZ: number = rotation.z;\r\n        var rotW: number = rotation.w;\r\n\r\n        var xx: number = rotX * rotX;\r\n        var yy: number = rotY * rotY;\r\n        var zz: number = rotZ * rotZ;\r\n        var xy: number = rotX * rotY;\r\n        var zw: number = rotZ * rotW;\r\n        var zx: number = rotZ * rotX;\r\n        var yw: number = rotY * rotW;\r\n        var yz: number = rotY * rotZ;\r\n        var xw: number = rotX * rotW;\r\n\r\n        var resultE: Float32Array = out.elements;\r\n        resultE[0] = 1.0 - (2.0 * (yy + zz));\r\n        resultE[1] = 2.0 * (xy + zw);\r\n        resultE[2] = 2.0 * (zx - yw);\r\n        resultE[3] = 2.0 * (xy - zw);\r\n        resultE[4] = 1.0 - (2.0 * (zz + xx));\r\n        resultE[5] = 2.0 * (yz + xw);\r\n        resultE[6] = 2.0 * (zx + yw);\r\n        resultE[7] = 2.0 * (yz - xw);\r\n        resultE[8] = 1.0 - (2.0 * (yy + xx));\r\n    }\r\n\r\n    /**\r\n     * 根据指定平移生成3x3矩阵\r\n     * @param\ttra 平移\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromTranslation(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = trans.x;\r\n        e[7] = trans.y;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据指定旋转生成3x3矩阵\r\n     * @param\trad  旋转值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromRotation(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        var s: number = Math.sin(rad), c: number = Math.cos(rad);\r\n\r\n        e[0] = c;\r\n        e[1] = s;\r\n        e[2] = 0;\r\n\r\n        e[3] = -s;\r\n        e[4] = c;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * 根据制定缩放生成3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    static createFromScaling(scale: Vector3, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n\r\n        e[0] = scale.x;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n\r\n        e[3] = 0;\r\n        e[4] = scale.y;\r\n        e[5] = 0;\r\n\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = scale.z;\r\n    }\r\n\r\n    /**\r\n     * 从4x4矩阵转换为一个3x3的矩阵（原则为upper-left,忽略第四行四列）\r\n     * @param\tsou 4x4源矩阵\r\n     * @param\tout 3x3输出矩阵\r\n     */\r\n    static createFromMatrix4x4(sou: Matrix4x4, out: Matrix3x3): void {\r\n        var souE: Float32Array = sou.elements;\r\n        var outE: Float32Array = out.elements;\r\n        outE[0] = souE[0];\r\n        outE[1] = souE[1];\r\n        outE[2] = souE[2];\r\n        outE[3] = souE[4];\r\n        outE[4] = souE[5];\r\n        outE[5] = souE[6];\r\n        outE[6] = souE[8];\r\n        outE[7] = souE[9];\r\n        outE[8] = souE[10];\r\n    }\r\n\r\n    /**\r\n     *  两个3x3矩阵的相乘\r\n     * @param\tleft 左矩阵\r\n     * @param\tright  右矩阵\r\n     * @param\tout  输出矩阵\r\n     */\r\n    static multiply(left: Matrix3x3, right: Matrix3x3, out: Matrix3x3): void {\r\n        var l: Float32Array = left.elements;\r\n        var r: Float32Array = right.elements;\r\n        var e: Float32Array = out.elements;\r\n\r\n        var l11: number = l[0], l12: number = l[1], l13: number = l[2];\r\n        var l21: number = l[3], l22: number = l[4], l23: number = l[5];\r\n        var l31: number = l[6], l32: number = l[7], l33: number = l[8];\r\n\r\n        var r11: number = r[0], r12: number = r[1], r13: number = r[2];\r\n        var r21: number = r[3], r22: number = r[4], r23: number = r[5];\r\n        var r31: number = r[6], r32: number = r[7], r33: number = r[8];\r\n\r\n        e[0] = r11 * l11 + r12 * l21 + r13 * l31;\r\n        e[1] = r11 * l12 + r12 * l22 + r13 * r32;\r\n        e[2] = r11 * l13 + r12 * l23 + r13 * l33;\r\n\r\n        e[3] = r21 * l11 + r22 * l21 + r23 * l31;\r\n        e[4] = r21 * l12 + r22 * l22 + r23 * l32;\r\n        e[5] = r21 * l13 + r22 * l23 + r23 * l33;\r\n\r\n        e[6] = r31 * l11 + r32 * l21 + r33 * l31;\r\n        e[7] = r31 * l12 + r32 * l22 + r33 * l32;\r\n        e[8] = r31 * l13 + r32 * l23 + r33 * l33;\r\n    }\r\n\r\n    /**矩阵元素数组*/\r\n    elements: Float32Array;\r\n\r\n    /**\r\n     * 创建一个 <code>Matrix3x3</code> 实例。\r\n     */\r\n    constructor(createElement: boolean = true) {\r\n        createElement && (this.elements = _DEFAULTELEMENTS.slice());\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的行列式\r\n     * @return    矩阵的行列式\r\n     */\r\n    determinant(): number {\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * 通过一个二维向量转换3x3矩阵\r\n     * @param\ttra 转换向量\r\n     * @param\tout 输出矩阵\r\n     */\r\n    translate(trans: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n        var x: number = trans.x, y: number = trans.y;\r\n\r\n        e[0] = a00;\r\n        e[1] = a01;\r\n        e[2] = a02;\r\n\r\n        e[3] = a10;\r\n        e[4] = a11;\r\n        e[5] = a12;\r\n\r\n        e[6] = x * a00 + y * a10 + a20;\r\n        e[7] = x * a01 + y * a11 + a21;\r\n        e[8] = x * a02 + y * a12 + a22;\r\n    }\r\n\r\n    /**\r\n     * 根据指定角度旋转3x3矩阵\r\n     * @param\trad 旋转角度\r\n     * @param\tout 输出矩阵\r\n     */\r\n    rotate(rad: number, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var a00: number = f[0], a01: number = f[1], a02: number = f[2];\r\n        var a10: number = f[3], a11: number = f[4], a12: number = f[5];\r\n        var a20: number = f[6], a21: number = f[7], a22: number = f[8];\r\n\r\n        var s: number = Math.sin(rad);\r\n        var c: number = Math.cos(rad);\r\n\r\n        e[0] = c * a00 + s * a10;\r\n        e[1] = c * a01 + s * a11;\r\n        e[2] = c * a02 + s * a12;\r\n\r\n        e[3] = c * a10 - s * a00;\r\n        e[4] = c * a11 - s * a01;\r\n        e[5] = c * a12 - s * a02;\r\n\r\n        e[6] = a20;\r\n        e[7] = a21;\r\n        e[8] = a22;\r\n    }\r\n\r\n    /**\r\n     *根据制定缩放3x3矩阵\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出矩阵\r\n     */\r\n    scale(scale: Vector2, out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        var x: number = scale.x, y: number = scale.y;\r\n\r\n        e[0] = x * f[0];\r\n        e[1] = x * f[1];\r\n        e[2] = x * f[2];\r\n\r\n        e[3] = y * f[3];\r\n        e[4] = y * f[4];\r\n        e[5] = y * f[5];\r\n\r\n        e[6] = f[6];\r\n        e[7] = f[7];\r\n        e[8] = f[8];\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的逆矩阵\r\n     * @param\tout 输出的逆矩阵\r\n     */\r\n    invert(out: Matrix3x3): void {\r\n        var e = out.elements;\r\n        var f = this.elements;\r\n\r\n        var a00 = f[0], a01 = f[1], a02 = f[2];\r\n        var a10 = f[3], a11 = f[4], a12 = f[5];\r\n        var a20 = f[6], a21 = f[7], a22 = f[8];\r\n\r\n        var b01: number = a22 * a11 - a12 * a21;\r\n        var b11: number = -a22 * a10 + a12 * a20;\r\n        var b21: number = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        var det: number = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        e[0] = b01 * det;\r\n        e[1] = (-a22 * a01 + a02 * a21) * det;\r\n        e[2] = (a12 * a01 - a02 * a11) * det;\r\n        e[3] = b11 * det;\r\n        e[4] = (a22 * a00 - a02 * a20) * det;\r\n        e[5] = (-a12 * a00 + a02 * a10) * det;\r\n        e[6] = b21 * det;\r\n        e[7] = (-a21 * a00 + a01 * a20) * det;\r\n        e[8] = (a11 * a00 - a01 * a10) * det;\r\n    }\r\n\r\n    /**\r\n     * 计算3x3矩阵的转置矩阵\r\n     * @param \tout 输出矩阵\r\n     */\r\n    transpose(out: Matrix3x3): void {\r\n        var e: Float32Array = out.elements;\r\n        var f: Float32Array = this.elements;\r\n\r\n        if (out === this) {\r\n            var a01: number = f[1], a02: number = f[2], a12: number = f[5];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = a01;\r\n            e[5] = f[7];\r\n            e[6] = a02;\r\n            e[7] = a12;\r\n        } else {\r\n            e[0] = f[0];\r\n            e[1] = f[3];\r\n            e[2] = f[6];\r\n            e[3] = f[1];\r\n            e[4] = f[4];\r\n            e[5] = f[7];\r\n            e[6] = f[2];\r\n            e[7] = f[5];\r\n            e[8] = f[8];\r\n        }\r\n    }\r\n\r\n    /** 设置已有的矩阵为单位矩阵*/\r\n    identity(): void {\r\n        this.elements.set(_DEFAULTELEMENTS);\r\n        /*\r\n        var e: Float32Array = this.elements;\r\n        e[0] = 1;\r\n        e[1] = 0;\r\n        e[2] = 0;\r\n        e[3] = 0;\r\n        e[4] = 1;\r\n        e[5] = 0;\r\n        e[6] = 0;\r\n        e[7] = 0;\r\n        e[8] = 1;*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        var i: number, s: Float32Array, d: Float32Array;\r\n        s = this.elements;\r\n        d = destObject.elements;\r\n        if (s === d) {\r\n            return;\r\n        }\r\n        s.set(d);\r\n        /*\r\n        for (i = 0; i < 9; ++i) {\r\n            d[i] = s[i];\r\n        }*/\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Matrix3x3 = new Matrix3x3(false);\r\n        dest.elements = this.elements.slice();\r\n        return dest;\r\n    }\r\n\r\n    /**\r\n     * 计算观察3x3矩阵\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出3x3矩阵\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        Vector3.subtract(eye, target, _tempV30);//WebGL为右手坐标系统\r\n        Vector3.normalize(_tempV30, _tempV30);\r\n\r\n        Vector3.cross(up, _tempV30, _tempV31);\r\n        Vector3.normalize(_tempV31, _tempV31);\r\n\r\n        Vector3.cross(_tempV30, _tempV31, _tempV32);\r\n\r\n        var v0: Vector3 = _tempV30;\r\n        var v1: Vector3 = _tempV31;\r\n        var v2: Vector3 = _tempV32;\r\n\r\n        var me: Float32Array = out.elements;\r\n        me[0] = v1.x;\r\n        me[3] = v1.y;\r\n        me[6] = v1.z;\r\n\r\n        me[1] = v2.x;\r\n        me[4] = v2.y;\r\n        me[7] = v2.z;\r\n\r\n        me[2] = v0.x;\r\n        me[5] = v0.y;\r\n        me[8] = v0.z;\r\n    }\r\n\r\n    /**\r\n     * forward看向target\r\n     * forward在这里规定为z轴\r\n     * @param eye \r\n     * @param target 目标\r\n     * @param up \r\n     * @param out \r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Matrix3x3): void {\r\n        var vx = _tempV31;\r\n        var vy = _tempV32;\r\n        var vz = _tempV30;\r\n\r\n        target.vsub(eye, vz).normalize();\r\n        up.cross(vz, vx).normalize();\r\n        vz.cross(vx, vy);\r\n\r\n        var m = out.elements;\r\n        m[0] = vx.x; m[1] = vx.y; m[2] = vx.z;\r\n        m[3] = vy.x; m[4] = vy.y; m[5] = vy.z;\r\n        m[6] = vz.x; m[7] = vz.y; m[8] = vz.z;\r\n    }\r\n}","import { Vector3 } from \"./Vector3\";\r\nimport { Matrix4x4 } from \"./Matrix4x4\";\r\nimport { Matrix3x3 } from \"./Matrix3x3\";\r\nimport { MathUtils3D } from \"./MathUtils3D\";\r\nimport { Vector2 } from \"./Vector2\";\r\nimport { IClone } from \"../utils/IClone\";\r\n\r\nconst TEMPVector30 = new Vector3();\r\nconst TEMPVector31 = new Vector3();\r\nconst TEMPVector32 = new Vector3();\r\nconst TEMPVector33 = new Vector3();\r\nconst _tempMatrix3x3 = new Matrix3x3();\r\n\r\n/**\r\n * <code>Quaternion</code> 类用于创建四元数。\r\n */\r\nexport class Quaternion implements IClone {\r\n\r\n    /**@internal */\r\n    static TEMP = new Quaternion();\r\n\r\n    /**默认矩阵,禁止修改*/\r\n    static readonly DEFAULT: Readonly<Quaternion> = new Quaternion();\r\n    /**无效矩阵,禁止修改*/\r\n    static readonly NAN: Readonly<Quaternion> = new Quaternion(NaN, NaN, NaN, NaN);\r\n\r\n    /**\r\n     *  从欧拉角生成四元数（顺序为Yaw、Pitch、Roll）\r\n     * @param\tyaw yaw值\r\n     * @param\tpitch pitch值\r\n     * @param\troll roll值\r\n     * @param\tout 输出四元数\r\n     */\r\n    static createFromYawPitchRoll(yaw: number, pitch: number, roll: number, out: Quaternion): void {\r\n        var halfRoll: number = roll * 0.5;\r\n        var halfPitch: number = pitch * 0.5;\r\n        var halfYaw: number = yaw * 0.5;\r\n\r\n        var sinRoll: number = Math.sin(halfRoll);\r\n        var cosRoll: number = Math.cos(halfRoll);\r\n        var sinPitch: number = Math.sin(halfPitch);\r\n        var cosPitch: number = Math.cos(halfPitch);\r\n        var sinYaw: number = Math.sin(halfYaw);\r\n        var cosYaw: number = Math.cos(halfYaw);\r\n\r\n\r\n        out.x = (cosYaw * sinPitch * cosRoll) + (sinYaw * cosPitch * sinRoll);\r\n        out.y = (sinYaw * cosPitch * cosRoll) - (cosYaw * sinPitch * sinRoll);\r\n        out.z = (cosYaw * cosPitch * sinRoll) - (sinYaw * sinPitch * cosRoll);\r\n        out.w = (cosYaw * cosPitch * cosRoll) + (sinYaw * sinPitch * sinRoll);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数相乘\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static multiply(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        var lx: number = left.x;\r\n        var ly: number = left.y;\r\n        var lz: number = left.z;\r\n        var lw: number = left.w;\r\n        var rx: number = right.x;\r\n        var ry: number = right.y;\r\n        var rz: number = right.z;\r\n        var rw: number = right.w;\r\n        var a: number = (ly * rz - lz * ry);\r\n        var b: number = (lz * rx - lx * rz);\r\n        var c: number = (lx * ry - ly * rx);\r\n        var d: number = (lx * rx + ly * ry + lz * rz);\r\n        out.x = (lx * rw + rx * lw) + a;\r\n        out.y = (ly * rw + ry * lw) + b;\r\n        out.z = (lz * rw + rz * lw) + c;\r\n        out.w = lw * rw - d;\r\n    }\r\n\r\n    private static arcTanAngle(x: number, y: number): number {\r\n        if (x == 0) {\r\n            if (y == 1)\r\n                return Math.PI / 2;\r\n            return -Math.PI / 2;\r\n        }\r\n        if (x > 0)\r\n            return Math.atan(y / x);\r\n        if (x < 0) {\r\n            if (y > 0)\r\n                return Math.atan(y / x) + Math.PI;\r\n            return Math.atan(y / x) - Math.PI;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private static angleTo(from: Vector3, location: Vector3, angle: Vector3): void {\r\n        Vector3.subtract(location, from, TEMPVector30);\r\n        Vector3.normalize(TEMPVector30, TEMPVector30);\r\n\r\n        angle.x = Math.asin(TEMPVector30.y);\r\n        angle.y = Quaternion.arcTanAngle(-TEMPVector30.z, -TEMPVector30.x);\r\n    }\r\n\r\n    /**\r\n     * 从指定的轴和角度计算四元数\r\n     * @param\taxis  轴\r\n     * @param\trad  角度\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromAxisAngle(axis: Vector3, rad: number, out: Quaternion): void {\r\n        rad = rad * 0.5;\r\n        var s: number = Math.sin(rad);\r\n        out.x = s * axis.x;\r\n        out.y = s * axis.y;\r\n        out.z = s * axis.z;\r\n        out.w = Math.cos(rad);\r\n    }\r\n\r\n\r\n    /**\r\n     *  从旋转矩阵计算四元数\r\n     * @param\tmat 旋转矩阵\r\n     * @param\tout  输出四元数\r\n     */\r\n    static createFromMatrix4x4(mat: Matrix4x4, out: Quaternion): void {\r\n        var me: Float32Array = mat.elements;\r\n\r\n        var sqrt: number;\r\n        var half: number;\r\n        var scale: number = me[0] + me[5] + me[10];\r\n\r\n        if (scale > 0.0) {\r\n            sqrt = Math.sqrt(scale + 1.0);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (me[6] - me[9]) * sqrt;\r\n            out.y = (me[8] - me[2]) * sqrt;\r\n            out.z = (me[1] - me[4]) * sqrt;\r\n        } else if ((me[0] >= me[5]) && (me[0] >= me[10])) {\r\n            sqrt = Math.sqrt(1.0 + me[0] - me[5] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (me[1] + me[4]) * half;\r\n            out.z = (me[2] + me[8]) * half;\r\n            out.w = (me[6] - me[9]) * half;\r\n        } else if (me[5] > me[10]) {\r\n            sqrt = Math.sqrt(1.0 + me[5] - me[0] - me[10]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[4] + me[1]) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (me[9] + me[6]) * half;\r\n            out.w = (me[8] - me[2]) * half;\r\n        } else {\r\n            sqrt = Math.sqrt(1.0 + me[10] - me[0] - me[5]);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (me[8] + me[2]) * half;\r\n            out.y = (me[9] + me[6]) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (me[1] - me[4]) * half;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 球面插值\r\n     * @param\tleft left四元数\r\n     * @param\tright  right四元数\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     * @returns 输出Float32Array\r\n     */\r\n    static slerp(left: Quaternion, right: Quaternion, t: number, out: Quaternion): Quaternion {\r\n        var ax: number = left.x, ay: number = left.y, az: number = left.z, aw: number = left.w, bx: number = right.x, by: number = right.y, bz: number = right.z, bw: number = right.w;\r\n\r\n        var omega: number, cosom: number, sinom: number, scale0: number, scale1: number;\r\n\r\n        // calc cosine \r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary) \r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients \r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp) \r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close  \r\n            //  ... so we can do a linear interpolation \r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values \r\n        out.x = scale0 * ax + scale1 * bx;\r\n        out.y = scale0 * ay + scale1 * by;\r\n        out.z = scale0 * az + scale1 * bz;\r\n        out.w = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的线性插值\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数b\r\n     * @param\tt 插值比例\r\n     * @param\tout 输出四元数\r\n     */\r\n    static lerp(left: Quaternion, right: Quaternion, amount: number, out: Quaternion): void {\r\n        var inverse: number = 1.0 - amount;\r\n        if (Quaternion.dot(left, right) >= 0) {\r\n            out.x = (inverse * left.x) + (amount * right.x);\r\n            out.y = (inverse * left.y) + (amount * right.y);\r\n            out.z = (inverse * left.z) + (amount * right.z);\r\n            out.w = (inverse * left.w) + (amount * right.w);\r\n        } else {\r\n            out.x = (inverse * left.x) - (amount * right.x);\r\n            out.y = (inverse * left.y) - (amount * right.y);\r\n            out.z = (inverse * left.z) - (amount * right.z);\r\n            out.w = (inverse * left.w) - (amount * right.w);\r\n        }\r\n        out.normalize(out);\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的和\r\n     * @param\tleft  left四元数\r\n     * @param\tright right 四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    static add(left: Quaternion, right: Quaternion, out: Quaternion): void {\r\n        out.x = left.x + right.x;\r\n        out.y = left.y + right.y;\r\n        out.z = left.z + right.z;\r\n        out.w = left.w + right.w;\r\n    }\r\n\r\n    /**\r\n     * 计算两个四元数的点积\r\n     * @param\tleft left四元数\r\n     * @param\tright right四元数\r\n     * @return  点积\r\n     */\r\n    static dot(left: Quaternion, right: Quaternion): number {\r\n        return left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\r\n    }\r\n\r\n    /**X轴坐标*/\r\n    x: number;\r\n    /**Y轴坐标*/\r\n    y: number;\r\n    /**Z轴坐标*/\r\n    z: number;\r\n    /**W轴坐标*/\r\n    w: number;\r\n\r\n    /**\r\n     * 创建一个 <code>Quaternion</code> 实例。\r\n     * @param\tx 四元数的x值\r\n     * @param\ty 四元数的y值\r\n     * @param\tz 四元数的z值\r\n     * @param\tw 四元数的w值\r\n     */\r\n    constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 1) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     */\r\n    setValue(x: number, y: number, z: number, w: number): void {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n    }\r\n\r\n    /**\r\n     * 设置四元数的值。\r\n     * @param\tx X值。\r\n     * @param\ty Y值。\r\n     * @param\tz Z值。\r\n     * @return 返回四元数\r\n     */\r\n    set(x: number, y: number, z: number, w: number) {\r\n        this.x = x; this.y = y; this.z = z; this.w = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * 根据缩放值缩放四元数\r\n     * @param\tscale 缩放值\r\n     * @param\tout 输出四元数\r\n     */\r\n    scaling(scaling: number, out: Quaternion): void {\r\n        out.x = this.x * scaling;\r\n        out.y = this.y * scaling;\r\n        out.z = this.z * scaling;\r\n        out.w = this.w * scaling;\r\n    }\r\n\r\n    /**\r\n     * 归一化四元数\r\n     * @param\tout 输出四元数\r\n     */\r\n    normalize(out: Quaternion): void {\r\n        var len: number = this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out.x = this.x * len;\r\n            out.y = this.y * len;\r\n            out.z = this.z * len;\r\n            out.w = this.w * len;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的长度\r\n     * @return  长度\r\n     */\r\n    length(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 根据绕X轴的角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateX(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var bx: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.w * bx;\r\n        out.y = this.y * bw + this.z * bx;\r\n        out.z = this.z * bw - this.y * bx;\r\n        out.w = this.w * bw - this.x * bx;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Y轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateY(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n\r\n        var by: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw - this.z * by;\r\n        out.y = this.y * bw + this.w * by;\r\n        out.z = this.z * bw + this.x * by;\r\n        out.w = this.w * bw - this.y * by;\r\n    }\r\n\r\n    /**\r\n     * 根据绕Z轴的制定角度旋转四元数\r\n     * @param\trad 角度\r\n     * @param\tout 输出四元数\r\n     */\r\n    rotateZ(rad: number, out: Quaternion): void {\r\n        rad *= 0.5;\r\n        var bz: number = Math.sin(rad), bw: number = Math.cos(rad);\r\n\r\n        out.x = this.x * bw + this.y * bz;\r\n        out.y = this.y * bw - this.x * bz;\r\n        out.z = this.z * bw + this.w * bz;\r\n        out.w = this.w * bw - this.z * bz;\r\n    }\r\n\r\n    /**\r\n     * 分解四元数到欧拉角（顺序为Yaw、Pitch、Roll），参考自http://xboxforums.create.msdn.com/forums/p/4574/23988.aspx#23988,问题绕X轴翻转超过±90度时有，会产生瞬间反转\r\n     * @param\tquaternion 源四元数\r\n     * @param\tout 欧拉角值\r\n     */\r\n    getYawPitchRoll(out: Vector3): void {\r\n\r\n        Vector3.transformQuat(Vector3.ForwardRH, this, TEMPVector31/*forwarldRH*/);\r\n\r\n        Vector3.transformQuat(Vector3.Up, this, TEMPVector32/*up*/);\r\n        var upe: Vector3 = TEMPVector32;\r\n\r\n        Quaternion.angleTo(Vector3.ZERO, TEMPVector31, TEMPVector33/*angle*/);\r\n        var angle: Vector3 = TEMPVector33;\r\n\r\n        if (angle.x == Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(upe.z, upe.x);\r\n            angle.z = 0;\r\n        } else if (angle.x == -Math.PI / 2) {\r\n            angle.y = Quaternion.arcTanAngle(-upe.z, -upe.x);\r\n            angle.z = 0;\r\n        } else {\r\n            Matrix4x4.createRotationY(-angle.y, Matrix4x4.TEMPMatrix0);\r\n            Matrix4x4.createRotationX(-angle.x, Matrix4x4.TEMPMatrix1);\r\n\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix0, TEMPVector32);\r\n            Vector3.transformCoordinate(TEMPVector32, Matrix4x4.TEMPMatrix1, TEMPVector32);\r\n            angle.z = Quaternion.arcTanAngle(upe.y, -upe.x);\r\n        }\r\n\r\n        // Special cases.\r\n        if (angle.y <= -Math.PI)\r\n            angle.y = Math.PI;\r\n        if (angle.z <= -Math.PI)\r\n            angle.z = Math.PI;\r\n\r\n        if (angle.y >= Math.PI && angle.z >= Math.PI) {\r\n            angle.y = 0;\r\n            angle.z = 0;\r\n            angle.x = Math.PI - angle.x;\r\n        }\r\n\r\n        var oe: Vector3 = out;\r\n        oe.x = angle.y;\r\n        oe.y = angle.x;\r\n        oe.z = angle.z;\r\n    }\r\n\r\n    /**\r\n     * 求四元数的逆\r\n     * @param\tout  输出四元数\r\n     */\r\n    invert(out: Quaternion): void {\r\n        var a0: number = this.x, a1: number = this.y, a2: number = this.z, a3: number = this.w;\r\n        var dot: number = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        var invDot: number = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n        out.x = -a0 * invDot;\r\n        out.y = -a1 * invDot;\r\n        out.z = -a2 * invDot;\r\n        out.w = a3 * invDot;\r\n    }\r\n\r\n    /**\r\n     *设置四元数为单位算数\r\n     * @param out  输出四元数\r\n     */\r\n    identity(): void {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        this.z = 0;\r\n        this.w = 1;\r\n    }\r\n\r\n    /**\r\n     * 从Array数组拷贝值。\r\n     * @param  array 数组。\r\n     * @param  offset 数组偏移。\r\n     */\r\n    fromArray(array: any[], offset: number = 0): void {\r\n        this.x = array[offset + 0];\r\n        this.y = array[offset + 1];\r\n        this.z = array[offset + 2];\r\n        this.w = array[offset + 3];\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @param\tdestObject 克隆源。\r\n     */\r\n    cloneTo(destObject: any): void {\r\n        if (this === destObject) {\r\n            return;\r\n        }\r\n        destObject.x = this.x;\r\n        destObject.y = this.y;\r\n        destObject.z = this.z;\r\n        destObject.w = this.w;\r\n    }\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return\t 克隆副本。\r\n     */\r\n    clone(): any {\r\n        var dest: Quaternion = new Quaternion();\r\n        this.cloneTo(dest);\r\n        return dest;\r\n    }\r\n\r\n    equals(b: Quaternion): boolean {\r\n        return MathUtils3D.nearEqual(this.x, b.x) && MathUtils3D.nearEqual(this.y, b.y) && MathUtils3D.nearEqual(this.z, b.z) && MathUtils3D.nearEqual(this.w, b.w);\r\n    }\r\n\r\n    /**\r\n     * 计算旋转观察四元数\r\n     * @param\tforward 方向\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static rotationLookAt(forward: Vector3, up: Vector3, out: Quaternion): void {\r\n        Quaternion.lookAt(Vector3.ZERO, forward, up, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用Camera 灯光）\r\n     * @param\teye    观察者位置\r\n     * @param\ttarget 目标位置\r\n     * @param\tup     上向量\r\n     * @param\tout    输出四元数\r\n     */\r\n    static lookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.lookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算观察四元数（适用gameObject）\r\n     * @param eye 观察者位置\r\n     * @param target 目标位置\r\n     * @param up 上向量\r\n     * @param out 输出四元数\r\n     */\r\n    static forwardLookAt(eye: Vector3, target: Vector3, up: Vector3, out: Quaternion): void {\r\n        Matrix3x3.forwardLookAt(eye, target, up, _tempMatrix3x3);\r\n        Quaternion.rotationMatrix(_tempMatrix3x3, out);\r\n    }\r\n\r\n    /**\r\n     * 计算长度的平方。\r\n     * @return 长度的平方。\r\n     */\r\n    lengthSquared(): number {\r\n        return (this.x * this.x) + (this.y * this.y) + (this.z * this.z) + (this.w * this.w);\r\n    }\r\n\r\n    /**\r\n     * 计算四元数的逆四元数。\r\n     * @param\tvalue 四元数。\r\n     * @param\tout 逆四元数。\r\n     */\r\n    static invert(value: Quaternion, out: Quaternion): void {\r\n        var lengthSq: number = value.lengthSquared();\r\n        if (!MathUtils3D.isZero(lengthSq)) {\r\n            lengthSq = 1.0 / lengthSq;\r\n\r\n            out.x = -value.x * lengthSq;\r\n            out.y = -value.y * lengthSq;\r\n            out.z = -value.z * lengthSq;\r\n            out.w = value.w * lengthSq;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 通过一个3x3矩阵创建一个四元数\r\n     * @param\tmatrix3x3  3x3矩阵\r\n     * @param\tout        四元数\r\n     */\r\n    static rotationMatrix(matrix3x3: Matrix3x3, out: Quaternion): void {\r\n        var me: Float32Array = matrix3x3.elements;\r\n        var m11: number = me[0];\r\n        var m12: number = me[1];\r\n        var m13: number = me[2];\r\n        var m21: number = me[3];\r\n        var m22: number = me[4];\r\n        var m23: number = me[5];\r\n        var m31: number = me[6];\r\n        var m32: number = me[7];\r\n        var m33: number = me[8];\r\n\r\n        var sqrt: number, half: number;\r\n        var scale: number = m11 + m22 + m33;\r\n\r\n        if (scale > 0) {\r\n\r\n            sqrt = Math.sqrt(scale + 1);\r\n            out.w = sqrt * 0.5;\r\n            sqrt = 0.5 / sqrt;\r\n\r\n            out.x = (m23 - m32) * sqrt;\r\n            out.y = (m31 - m13) * sqrt;\r\n            out.z = (m12 - m21) * sqrt;\r\n\r\n        } else if ((m11 >= m22) && (m11 >= m33)) {\r\n\r\n            sqrt = Math.sqrt(1 + m11 - m22 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = 0.5 * sqrt;\r\n            out.y = (m12 + m21) * half;\r\n            out.z = (m13 + m31) * half;\r\n            out.w = (m23 - m32) * half;\r\n        } else if (m22 > m33) {\r\n\r\n            sqrt = Math.sqrt(1 + m22 - m11 - m33);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m21 + m12) * half;\r\n            out.y = 0.5 * sqrt;\r\n            out.z = (m32 + m23) * half;\r\n            out.w = (m31 - m13) * half;\r\n        } else {\r\n\r\n            sqrt = Math.sqrt(1 + m33 - m11 - m22);\r\n            half = 0.5 / sqrt;\r\n\r\n            out.x = (m31 + m13) * half;\r\n            out.y = (m32 + m23) * half;\r\n            out.z = 0.5 * sqrt;\r\n            out.w = (m12 - m21) * half;\r\n        }\r\n    }\r\n\r\n    forNativeElement(nativeElements: Float32Array = null): void//[NATIVE_TS]\r\n    {\r\n\r\n        if (nativeElements) {\r\n            (<any>this).elements = nativeElements;\r\n            (<any>this).elements[0] = this.x;\r\n            (<any>this).elements[1] = this.y;\r\n            (<any>this).elements[2] = this.z;\r\n            (<any>this).elements[3] = this.w;\r\n        }\r\n        else {\r\n            (<any>this).elements = new Float32Array([this.x, this.y, this.z, this.w]);\r\n        }\r\n        Vector2.rewriteNumProperty(this, \"x\", 0);\r\n        Vector2.rewriteNumProperty(this, \"y\", 1);\r\n        Vector2.rewriteNumProperty(this, \"z\", 2);\r\n        Vector2.rewriteNumProperty(this, \"w\", 3);\r\n    }\r\n}","import { Component } from \"./Component\";\r\nimport { Event } from \"../events/Event\"\r\nimport { Collision } from \"../d3/physics/Collision\";\r\nimport { PhysicsComponent } from \"../d3/physics/PhysicsComponent\";\r\nimport { ColliderBase } from \"../physics/ColliderBase\";\r\nimport { Sprite3D } from \"../d3/core/Sprite3D\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * <code>Script</code> 类用于创建脚本的父类，该类为抽象类，不允许实例。\r\n */\r\nexport class Script extends Component {\r\n    declare owner: Sprite | Sprite3D;\r\n\r\n    /**\r\n     * @internal\r\n     * @override\r\n     */\r\n    _isScript(): boolean {\r\n        return true;\r\n    }\r\n\r\n    protected setupScript(): void {\r\n        let owner = this.owner;\r\n        let func: Function;\r\n\r\n        if (func = this.onTriggerEnter) owner.on(Event.TRIGGER_ENTER, this, func);\r\n        if (func = this.onTriggerStay) owner.on(Event.TRIGGER_STAY, this, func);\r\n        if (func = this.onTriggerExit) owner.on(Event.TRIGGER_EXIT, this, func);\r\n\r\n        if (func = this.onCollisionEnter) owner.on(Event.COLLISION_ENTER, this, func);\r\n        if (func = this.onCollisionStay) owner.on(Event.COLLISION_STAY, this, func);\r\n        if (func = this.onCollisionExit) owner.on(Event.COLLISION_EXIT, this, func);\r\n        if (func = this.onJointBreak) owner.on(Event.JOINT_BREAK, this, func);\r\n\r\n        if (func = this.onMouseDown) owner.on(Event.MOUSE_DOWN, this, func);\r\n        if (func = this.onMouseUp) owner.on(Event.MOUSE_UP, this, func);\r\n        if (func = this.onRightMouseDown) owner.on(Event.RIGHT_MOUSE_DOWN, this, func);\r\n        if (func = this.onRightMouseUp) owner.on(Event.RIGHT_MOUSE_UP, this, func);\r\n        if (func = this.onMouseMove) owner.on(Event.MOUSE_MOVE, this, func);\r\n        if (func = this.onMouseDrag) owner.on(Event.MOUSE_DRAG, this, func);\r\n        if (func = this.onMouseDragEnd) owner.on(Event.MOUSE_DRAG_END, this, func);\r\n        if (func = this.onMouseOver) owner.on(Event.MOUSE_OVER, this, func);\r\n        if (func = this.onMouseOut) owner.on(Event.MOUSE_OUT, this, func);\r\n        if (func = this.onMouseClick) owner.on(Event.CLICK, this, func);\r\n        if (func = this.onMouseDoubleClick) owner.on(Event.DOUBLE_CLICK, this, func);\r\n        if (func = this.onMouseRightClick) owner.on(Event.RIGHT_CLICK, this, func);\r\n\r\n        if (func = this.onKeyDown) ILaya.stage.on(Event.KEY_DOWN, this, func);\r\n        if (func = this.onKeyPress) ILaya.stage.on(Event.KEY_PRESS, this, func);\r\n        if (func = this.onKeyUp) ILaya.stage.on(Event.KEY_UP, this, func);\r\n    }\r\n\r\n    /**\r\n     * 开始碰撞时执行\r\n     */\r\n    onTriggerEnter?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 持续碰撞时执行\r\n     */\r\n    onTriggerStay?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 结束碰撞时执行\r\n     */\r\n    onTriggerExit?(other: PhysicsComponent | ColliderBase, self?: ColliderBase, contact?: any): void;\r\n\r\n    /**\r\n     * 开始碰撞时执行\r\n     */\r\n    onCollisionEnter?(collision: Collision): void;\r\n\r\n    /**\r\n     * 持续碰撞时执行\r\n     */\r\n    onCollisionStay?(collision: Collision): void;\r\n\r\n    /**\r\n     * 结束碰撞时执行\r\n     */\r\n    onCollisionExit?(collision: Collision): void;\r\n\r\n    /**\r\n     * 关节破坏时执行此方法\r\n     */\r\n    onJointBreak?(): void;\r\n\r\n    /**\r\n     * 鼠标按下时执行\r\n     */\r\n    onMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标抬起时执行\r\n     */\r\n    onMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键按下时执行\r\n     */\r\n    onRightMouseDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键或中键抬起时执行\r\n     */\r\n    onRightMouseUp?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标在节点上移动时执行\r\n     */\r\n    onMouseMove?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标进入节点时执行\r\n     */\r\n    onMouseOver?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标离开节点时执行\r\n     */\r\n    onMouseOut?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体后，拖拽时执行\r\n     */\r\n    onMouseDrag?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标按住一个物体，拖拽一定距离，释放鼠标按键后执行\r\n     */\r\n    onMouseDragEnd?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标点击时执行\r\n     */\r\n    onMouseClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标双击时执行\r\n     */\r\n    onMouseDoubleClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 鼠标右键点击时执行\r\n     */\r\n    onMouseRightClick?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘按下时执行\r\n     */\r\n    onKeyDown?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘产生一个字符时执行\r\n     */\r\n    onKeyPress?(evt: Event): void;\r\n\r\n    /**\r\n     * 键盘抬起时执行\r\n     */\r\n    onKeyUp?(evt: Event): void;\r\n}\r\n\r\n","import { Resource } from \"./Resource\";\r\n/**\r\n * 文字资源格式\r\n */\r\nexport enum TextResourceFormat {\r\n    /**Buffer */\r\n    Buffer,\r\n    /**TODO */\r\n    Plain,\r\n    /**Json */\r\n    JSON,\r\n    /**XML */\r\n    XML\r\n}\r\n\r\n/**\r\n * 文字资源\r\n */\r\nexport class TextResource extends Resource {\r\n    /**数据 */\r\n    public readonly data: any;\r\n    /**格式 */\r\n    public readonly format: TextResourceFormat;\r\n    /**\r\n     * 实例化文字资源\r\n     * @param data \r\n     * @param format \r\n     */\r\n    constructor(data: any, format: TextResourceFormat) {\r\n        super();\r\n        this.data = data;\r\n        this.format = format;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { TextResource, TextResourceFormat } from \"../resource/TextResource\";\r\n\r\nclass TextAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"text\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Plain);\r\n        });\r\n    }\r\n}\r\n\r\nclass BytesAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.Buffer);\r\n        });\r\n    }\r\n}\r\n\r\nclass JsonAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.JSON);\r\n        });\r\n    }\r\n}\r\n\r\nclass XMLAssetLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"xml\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return new TextResource(data, TextResourceFormat.XML);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"txt\", \"csv\"], TextAssetLoader, Loader.TEXT);\r\nLoader.registerLoader([\"bin\", \"bytes\", \"fui\"], BytesAssetLoader, Loader.BUFFER);\r\nLoader.registerLoader([\"json\"], JsonAssetLoader, Loader.JSON);\r\nLoader.registerLoader([\"xml\"], XMLAssetLoader, Loader.XML);","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { AtlasResource } from \"../resource/AtlasResource\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass AtlasLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let toloadPics: Array<Promise<Texture>> = [];\r\n            if (data.meta && data.meta.image) {\r\n                let folderPath: string = \"\";\r\n                let i = task.url.lastIndexOf(\"/\");\r\n                if (i != -1)\r\n                    folderPath = task.url.substring(0, i + 1);\r\n\r\n                //如果图集带了版本号，需要将图集中包含的图片也需要追加版本号，以此解决浏览器缓存的问题\r\n                let query: string = \"\";\r\n                i = task.url.lastIndexOf(\"?\");\r\n                if (i != -1)\r\n                    query = task.url.substring(i);\r\n\r\n                //带图片信息的类型\r\n                let pics: Array<string> = data.meta.image.split(\",\");\r\n                for (let pic of pics)\r\n                    toloadPics.push(task.loader.load(folderPath + pic + query, null, task.progress.createCallback()));\r\n            } else {  //不带图片信息\r\n                toloadPics.push(task.loader.load(Utils.replaceFileExtension(task.url, \"png\"), null, task.progress.createCallback()));\r\n            }\r\n\r\n            return Promise.all(toloadPics).then(pics => {\r\n                let baseUrl = task.options.baseUrl || \"\";\r\n\r\n                let frames: any = data.frames;\r\n                let directory: string = (data.meta && data.meta.prefix != null) ? data.meta.prefix : task.url.substring(0, task.url.lastIndexOf(\".\")) + \"/\";\r\n                let subTextures: Array<Texture> = [];\r\n\r\n                let scaleRate: number = 1;\r\n                if (data.meta && data.meta.scale && data.meta.scale != 1)\r\n                    scaleRate = parseFloat(data.meta.scale);\r\n\r\n                for (let tPic of pics) {\r\n                    if (tPic) {\r\n                        tPic._addReference();\r\n                        tPic.scaleRate = scaleRate;\r\n                    }\r\n                }\r\n\r\n                for (let name in frames) {\r\n                    let obj = frames[name];\r\n                    let tPic = pics[obj.frame.idx ? obj.frame.idx : 0];\r\n                    if (!tPic)\r\n                        continue;\r\n\r\n                    let url = baseUrl + directory + (obj.filename || name);\r\n                    let tt = Texture.create(tPic, obj.frame.x, obj.frame.y, obj.frame.w, obj.frame.h, obj.spriteSourceSize.x, obj.spriteSourceSize.y, obj.sourceSize.w, obj.sourceSize.h);\r\n                    tt.lock = true;\r\n                    tt._sizeGrid = obj.sizeGrid;\r\n                    tt._stateNum = obj.stateNum;\r\n                    task.loader.cacheRes(url, tt);\r\n                    tt.url = url;\r\n                    subTextures.push(tt);\r\n                }\r\n\r\n                return new AtlasResource(directory, pics, subTextures);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"atlas\"], AtlasLoader, Loader.ATLAS);","import { ILaya } from \"../../ILaya\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\n\r\nexport const TypedArrayClasses: Record<string, any> = {\r\n    \"Int8Array\": Int8Array,\r\n    \"Uint8Array\": Uint8Array,\r\n    \"Int16Array\": Int16Array,\r\n    \"Uint16Array\": Uint16Array,\r\n    \"Int32Array\": Int32Array,\r\n    \"Uint32Array\": Uint32Array,\r\n    \"Float32Array\": Float32Array,\r\n    \"Float64Array\": Float64Array\r\n};\r\n\r\nexport interface IDecodeObjOptions {\r\n    outErrors?: Array<string>;\r\n    getNodeByRef?: (id: string | string[]) => Node;\r\n    getNodeData?: (node: Node) => any;\r\n}\r\n\r\nvar _errors: Array<string>;\r\nvar _getNodeByRef: (id: string | string[]) => Node;\r\nvar _getNodeData: (node: Node) => any;\r\n\r\nexport class SerializeUtil {\r\n    public static isDeserializing = false;\r\n\r\n    public static decodeObj(data: any, obj?: any, options?: IDecodeObjOptions) {\r\n        if (options) {\r\n            _errors = options.outErrors;\r\n            _getNodeByRef = options.getNodeByRef;\r\n            _getNodeData = options.getNodeData;\r\n        }\r\n        else {\r\n            _errors = null;\r\n            _getNodeByRef = null;\r\n            _getNodeData = null;\r\n        }\r\n\r\n        SerializeUtil.isDeserializing = true;\r\n        try {\r\n            return SerializeUtil._decodeObj(data, obj);\r\n        } finally {\r\n            SerializeUtil.isDeserializing = false;\r\n        }\r\n    }\r\n\r\n    private static _decodeObj(data: any, obj?: any): any {\r\n        if (data == null)\r\n            return null;\r\n        else if (Array.isArray(data)) {\r\n            let arr: any[] = [];\r\n            for (let i = 0; i < data.length; i++) {\r\n                let v = data[i];\r\n                if (v != null) {\r\n                    try {\r\n                        arr[i] = SerializeUtil._decodeObj(v);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                        arr[i] = null;\r\n                    }\r\n                }\r\n                else\r\n                    arr[i] = null;\r\n            }\r\n            return arr;\r\n        }\r\n        else if (typeof (data) === \"object\") {\r\n            if (data._$uuid != null) {\r\n                let url = URL.getResURLByUUID(data._$uuid);\r\n                return ILaya.loader.getRes(url, SerializeUtil.getLoadTypeByEngineType(data._$type));\r\n            }\r\n\r\n            if (data._$ref != null) {\r\n                let node = _getNodeByRef?.(data._$ref);\r\n                if (node && data._$type) {\r\n                    let cls: any = ClassUtils.getClass(data._$type);\r\n                    if (cls)\r\n                        return node.getComponent(cls);\r\n                    else\r\n                        return null;\r\n                }\r\n                else\r\n                    return node;\r\n            }\r\n\r\n            let type = data._$type;\r\n\r\n            if (type === \"any\") {\r\n                if (data._$type)\r\n                    return data.value;\r\n                else\r\n                    return data;\r\n            }\r\n\r\n            let typedArray = TypedArrayClasses[type];\r\n            if (typedArray != null) {\r\n                if (data._$type)\r\n                    return new typedArray(data.value);\r\n                else\r\n                    return new typedArray(data);\r\n            }\r\n\r\n            if (!obj) {\r\n                let cls: any = ClassUtils.getClass(type);\r\n                if (!cls) {\r\n                    //this._errors.push(new Error(`missing type '${type}'`));\r\n                    return null;\r\n                }\r\n\r\n                obj = new cls();\r\n            }\r\n\r\n            for (let key in data) {\r\n                if (key.startsWith(\"_$\"))\r\n                    continue;\r\n\r\n                let v = data[key];\r\n                if (v == null || typeof (v) !== \"object\" || Array.isArray(v)\r\n                    || v._$type || v._$uuid || v._$ref) {\r\n                    try {\r\n                        let v2 = SerializeUtil._decodeObj(v);\r\n                        obj[key] = v2;\r\n\r\n                        if (v2 != null && v != null && v._$tmpl)\r\n                            obj[v._$tmpl] = _getNodeData(v2);\r\n                    }\r\n                    catch (error: any) {\r\n                        if (_errors)\r\n                            _errors.push(error);\r\n                    }\r\n                }\r\n                else {\r\n                    let childObj = obj[key];\r\n                    if (childObj) {\r\n                        try {\r\n                            SerializeUtil._decodeObj(v, childObj);\r\n                        }\r\n                        catch (error: any) {\r\n                            if (_errors)\r\n                                _errors.push(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (obj.onAfterDeserialize)\r\n                obj.onAfterDeserialize();\r\n\r\n            return obj;\r\n        }\r\n        else\r\n            return data;\r\n    }\r\n\r\n    static getLoadTypeByEngineType(type: string) {\r\n        switch (type) {\r\n            case \"Texture2D\":\r\n            case \"RenderTexture\":\r\n                return Loader.TEXTURE2D;\r\n            case \"TextureCube\":\r\n                return Loader.TEXTURECUBE;\r\n            case \"Prefab\":\r\n                return Loader.HIERARCHY;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n\r\n    static bakeOverrideData(overrideData: any) {\r\n        let dataMap: Record<string, Array<any>> = null;\r\n        for (let n = overrideData.length, i = n - 1; i >= 0; i--) {\r\n            let arr = overrideData[i];\r\n            if (arr && arr.length > 0) {\r\n                for (let d of arr) {\r\n                    let od = d._$override || d._$parent;\r\n                    let k: string;\r\n                    if (Array.isArray(od))\r\n                        k = od[n - i - 1];\r\n                    else if (i == n - 1)\r\n                        k = od;\r\n\r\n                    if (k != null) {\r\n                        if (!dataMap) dataMap = {};\r\n                        let arr2 = dataMap[k];\r\n                        if (!arr2)\r\n                            dataMap[k] = arr2 = [];\r\n                        arr2.push(n - i, d);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return dataMap;\r\n    }\r\n\r\n    static applyOverrideData(nodeData: any, overrideDataMap: Record<string, Array<any>>) {\r\n        function test(obj: any) {\r\n            if (overrideDataMap[obj._$id])\r\n                return true;\r\n\r\n            let children: Array<any> = obj._$child;\r\n            if (children && children.find(child => test(child)))\r\n                return true;\r\n\r\n            return false;\r\n        }\r\n\r\n        function cloneTree(obj: any) {\r\n            let ret = Object.assign({}, obj);\r\n            let children: Array<any> = ret._$child;\r\n            if (children)\r\n                ret._$child = children.map(c => cloneTree(c));\r\n            let comps: Array<any> = ret._$comp;\r\n            if (comps)\r\n                ret._$comp = comps.map(c => Object.assign({}, c));\r\n            return ret;\r\n        }\r\n\r\n        function visit(data: any) {\r\n            let children: Array<any> = data._$child;\r\n            if (children) {\r\n                for (let child of children) {\r\n                    if (child._$id)\r\n                        visit(child);\r\n                }\r\n            }\r\n\r\n            let od = overrideDataMap[data._$id];\r\n            if (od) {\r\n                for (let i = 0; i < od.length; i += 2) {\r\n                    let j = od[i];\r\n                    let e = od[i + 1];\r\n                    let idPath: string | string[];\r\n                    if (idPath = e._$override) {\r\n                        let toWrite: any;\r\n                        if (Array.isArray(idPath)) {\r\n                            if (j == idPath.length - 1) {\r\n                                let k = idPath[j];\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else\r\n                                    toWrite = children.find(c => c._$override == k);\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else if (j < idPath.length - 1) {\r\n                                let k = idPath.slice(j);\r\n                                if (!children)\r\n                                    data._$child = children = [];\r\n                                else {\r\n                                    toWrite = children.find(c => {\r\n                                        let o = c._$override;\r\n                                        return Array.isArray(o) && arrayEquals(o, k);\r\n                                    });\r\n                                }\r\n                                if (!toWrite) {\r\n                                    toWrite = { _$override: k };\r\n                                    children.push(toWrite);\r\n                                }\r\n                            }\r\n                            else\r\n                                toWrite = data;\r\n                        }\r\n                        else\r\n                            toWrite = data;\r\n\r\n                        mergeData(toWrite, e);\r\n                        if (e._$comp) {\r\n                            let comps: Array<any> = toWrite._$comp;\r\n                            if (!comps)\r\n                                toWrite._$comp = comps = [];\r\n                            for (let comp of e._$comp) {\r\n                                let compType = comp._$type || comp._$override;\r\n                                let c = comps.find(c => c._$override == compType || c._$type == compType);\r\n                                if (!c) {\r\n                                    c = {};\r\n                                    if (comp._$type)\r\n                                        c._$type = compType;\r\n                                    else\r\n                                        c._$override = compType;\r\n                                    comps.push(c);\r\n                                }\r\n                                mergeData(c, comp);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (idPath = e._$parent) { //增加的节点\r\n                        if (!children)\r\n                            data._$child = children = [];\r\n                        let k: string | string[];\r\n                        if (j < idPath.length) { //挂接的节点在嵌套预制体内部\r\n                            if (j == idPath.length - 1)\r\n                                k = idPath[j];\r\n                            else\r\n                                k = idPath.slice(j);\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            toWrite._$parent = k;\r\n                            children.push(toWrite);\r\n                        }\r\n                        else {\r\n                            let toWrite = Object.assign({}, e);\r\n                            //todo: toWrite._$id有极小几率重复？\r\n                            delete toWrite._$parent;\r\n                            if (data._$prefab) {\r\n                                children.push(toWrite);\r\n                            }\r\n                            else {\r\n                                delete toWrite._$index;\r\n                                if (e._$index < children.length)\r\n                                    children.splice(e._$index, 0, toWrite);\r\n                                else\r\n                                    children.push(toWrite);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (test(nodeData)) {\r\n            nodeData = cloneTree(nodeData);\r\n            visit(nodeData);\r\n        }\r\n\r\n        return nodeData;\r\n    }\r\n}\r\n\r\nfunction mergeData(target: any, overrided: any) {\r\n    for (let k in overrided) {\r\n        if (k.startsWith(\"_$\"))\r\n            continue;\r\n\r\n        let v = overrided[k];\r\n        if (v != null && typeof (v) === \"object\" && !Array.isArray(v) && !(v._$type || v._$uuid || v._$ref)) {\r\n            let v2 = target[k];\r\n            if (v2 != null && typeof (v2) === \"object\") {\r\n                target[k] = v2 = Object.assign({}, v2);\r\n                mergeData(v2, v);\r\n            }\r\n            else\r\n                target[k] = v;\r\n        }\r\n        else\r\n            target[k] = v;\r\n    }\r\n}\r\n\r\nfunction arrayEquals(a: ReadonlyArray<any>, b: ReadonlyArray<any>): boolean {\r\n    if (a.length === b.length) {\r\n        for (var i = 0; i < a.length; i++) {\r\n            if (a[i] !== b[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}","import { Component } from \"../components/Component\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Scene } from \"../display/Scene\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Loader, ILoadURL } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { IDecodeObjOptions, SerializeUtil } from \"./SerializeUtil\";\r\n\r\nconst errorList: Array<any> = [];\r\n\r\nexport class HierarchyParser {\r\n    public static parse(data: any, options?: Record<string, any>, errors?: Array<any>): Array<Node> {\r\n        errors = errors || errorList;\r\n        let nodeMap: Record<string, Node> = {};\r\n        let dataList: Array<any> = [];\r\n        let allNodes: Array<Node> = [];\r\n        let outNodes: Array<Node> = [];\r\n        let scene: Scene;\r\n\r\n        let inPrefab: boolean;\r\n        let prefabNodeDict: Map<Node, Record<string, Node>>;\r\n        let skinBaseUrl: string;\r\n        let overrideData: Array<Array<any>>;\r\n\r\n        if (options) {\r\n            inPrefab = options.inPrefab;\r\n            if (inPrefab)\r\n                prefabNodeDict = options.prefabNodeDict;\r\n            skinBaseUrl = options.skinBaseUrl;\r\n            overrideData = options.overrideData;\r\n        }\r\n\r\n        function createChildren(data: any, prefab: Node) {\r\n            for (let child of data._$child) {\r\n                if (child._$child) {\r\n                    let node = createNode(child, prefab);\r\n                    createChildren(child, child._$prefab ? node : prefab);\r\n\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n                else {\r\n                    let node = createNode(child, prefab);\r\n                    dataList.push(child);\r\n                    allNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        function createNode(nodeData: any, prefab: Node, runtime?: any): Node {\r\n            let node: Node;\r\n            let pstr: string;\r\n            if (pstr = nodeData._$override) { //prefab里的override节点\r\n                if (prefab && prefabNodeDict) {\r\n                    if (Array.isArray(pstr)) {\r\n                        node = prefab;\r\n                        for (let i = 0, n = pstr.length; i < n; i++) {\r\n                            let map = prefabNodeDict.get(node);\r\n                            node = map?.[pstr[i]];\r\n                            if (!node)\r\n                                break;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let map = prefabNodeDict.get(prefab);\r\n                        if (map)\r\n                            node = map[nodeData._$override];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (pstr = nodeData._$prefab) { //prefab根节点\r\n                    let res = <Prefab>Loader.getRes(URL.getResURLByUUID(pstr), Loader.HIERARCHY);\r\n                    if (res) {\r\n                        if (!prefabNodeDict)\r\n                            prefabNodeDict = new Map();\r\n\r\n                        let overrideData2: Array<any> = [];\r\n                        let testId = nodeData._$id;\r\n                        if (overrideData) {\r\n                            for (let i = 0, n = overrideData.length; i < n; i++) {\r\n                                let arr = overrideData[i];\r\n                                if (arr && arr.length > 0) {\r\n                                    overrideData2[i] = arr.filter(d => {\r\n                                        let od = d._$override || d._$parent;\r\n                                        return Array.isArray(od) && od.length > n - i && od[n - i - 1] == testId;\r\n                                    });\r\n                                }\r\n                                else\r\n                                    overrideData2[i] = arr;\r\n                            }\r\n                        }\r\n\r\n                        overrideData2.push(nodeData._$child);\r\n\r\n                        node = res.create({ inPrefab: true, prefabNodeDict: prefabNodeDict, overrideData: overrideData2 }, errors);\r\n                    }\r\n                }\r\n                else if (pstr = nodeData._$type) {\r\n                    let cls: any = runtime ?? ClassUtils.getClass(pstr);\r\n                    if (cls) {\r\n                        try {\r\n                            node = new cls();\r\n                        }\r\n                        catch (err: any) {\r\n                            errors.push(err);\r\n                        }\r\n                    }\r\n                    else {\r\n                        errors.push(new Error(`unknown type '${pstr}'`));\r\n                    }\r\n                }\r\n\r\n                if (node)\r\n                    nodeMap[nodeData._$id] = node;\r\n            }\r\n\r\n            return node;\r\n        }\r\n\r\n        function getNodeByRef(idPath: string | string[]) {\r\n            if (Array.isArray(idPath)) {\r\n                let prefab = nodeMap[idPath[0]];\r\n                if (prefab && idPath.length > 1)\r\n                    return findNodeInPrefab(prefab, idPath, 1);\r\n                else\r\n                    return prefab;\r\n            }\r\n            else\r\n                return nodeMap[idPath];\r\n        }\r\n\r\n        function findNodeInPrefab(prefab: Node, idPath: string | string[], startIndex: number = 0) {\r\n            if (!idPath)\r\n                return prefab;\r\n\r\n            let map = prefabNodeDict?.get(prefab);\r\n            if (!map)\r\n                return null;\r\n\r\n            if (Array.isArray(idPath)) {\r\n                let node: Node;\r\n                for (let i = startIndex, n = idPath.length; i < n; i++) {\r\n                    if (!map)\r\n                        return null;\r\n\r\n                    node = map[idPath[i]];\r\n                    if (!node)\r\n                        break;\r\n\r\n                    map = prefabNodeDict.get(node);\r\n                }\r\n                return node;\r\n            }\r\n            else\r\n                return map[idPath];\r\n        }\r\n\r\n        let bakedOverrideData: Record<string, Array<any>>;\r\n        function getNodeData(node: Node) {\r\n            (<Sprite>node).visible = false;\r\n\r\n            let i = allNodes.indexOf(node);\r\n            let nodeData = dataList[i];\r\n\r\n            if (!overrideData)\r\n                return nodeData;\r\n\r\n            if (bakedOverrideData === undefined)\r\n                bakedOverrideData = SerializeUtil.bakeOverrideData(overrideData);\r\n\r\n            if (bakedOverrideData)\r\n                return SerializeUtil.applyOverrideData(nodeData, bakedOverrideData);\r\n            else\r\n                return nodeData;\r\n        }\r\n\r\n        let runtime: any;\r\n        if (data._$type || data._$prefab) {\r\n            if (runtime = data._$runtime) {\r\n                if (runtime.startsWith(\"res://\"))\r\n                    runtime = runtime.substring(6);\r\n                let cls = ClassUtils.getClass(runtime);\r\n                if (cls)\r\n                    runtime = cls;\r\n                else\r\n                    errors.push(new Error(`unknown runtime '${runtime}'`));\r\n            }\r\n\r\n            let node = createNode(data, null, runtime);\r\n            if (node) {\r\n                if (data._$child)\r\n                    createChildren(data, data._$prefab ? node : null);\r\n\r\n                dataList.push(data);\r\n                allNodes.push(node);\r\n\r\n                if (node instanceof Scene)\r\n                    scene = node;\r\n            }\r\n        }\r\n        else {\r\n            if (data._$child)\r\n                createChildren(data, null);\r\n        }\r\n\r\n        let cnt = dataList.length;\r\n\r\n        //生成树\r\n        let k = 0;\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n\r\n            let children: Array<any> = nodeData._$child;\r\n            if (children) {\r\n                let num = children.length;\r\n                if (node) {\r\n                    if (nodeData._$prefab) {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let m = k - num + j;\r\n                            let n = outNodes[m];\r\n                            if (n && !n.parent) { //是预制体新增\r\n                                let nodeData2 = dataList[i - num + j];\r\n                                let parentNode = findNodeInPrefab(node, nodeData2._$parent);\r\n                                if (parentNode) {\r\n                                    let pos = nodeData2._$index;\r\n                                    if (pos != null && pos < parentNode.numChildren)\r\n                                        parentNode.addChildAt(n, pos);\r\n                                    else\r\n                                        parentNode.addChild(n);\r\n                                }\r\n                                else {\r\n                                    //挂接的节点可能被删掉了\r\n                                    node.addChildAt(n, 0);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (let j = 0; j < num; j++) {\r\n                            let n = outNodes[k - num + j];\r\n                            if (n) {\r\n                                if (node === scene && n._is3D)\r\n                                    scene._scene3D = <any>n;\r\n                                else\r\n                                    node.addChild(n);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                k -= num;\r\n            }\r\n\r\n            outNodes[k] = node;\r\n            k++;\r\n        }\r\n        outNodes.length = k;\r\n        outNodes = outNodes.filter(n => n != null);\r\n        let topNode = outNodes[0];\r\n\r\n        //加载所有组件\r\n        let compInitList: Array<any> = [];\r\n        for (let i = 0; i < cnt; i++) {\r\n            let components = dataList[i]._$comp;\r\n            if (!components)\r\n                continue;\r\n\r\n            let node = allNodes[i];\r\n            if (!node)\r\n                continue;\r\n\r\n            for (let compData of components) {\r\n                let comp: Component;\r\n                if (compData._$override) {\r\n                    let cls: any = ClassUtils.getClass(compData._$override);\r\n                    if (cls)\r\n                        comp = node.getComponent(cls);\r\n                }\r\n                else {\r\n                    let cls: any = ClassUtils.getClass(compData._$type);\r\n                    if (cls) {\r\n                        comp = node.getComponent(cls);\r\n                        if (!comp) {\r\n                            try {\r\n                                comp = node.addComponent(cls);\r\n                            }\r\n                            catch (err: any) {\r\n                                errors.push(err);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (comp)\r\n                    compInitList.push(compData, comp);\r\n            }\r\n        }\r\n\r\n        //设置节点属性\r\n        const decodeOptions: IDecodeObjOptions = { outErrors: errors, getNodeByRef, getNodeData };\r\n        for (let i = 0; i < cnt; i++) {\r\n            let nodeData = dataList[i];\r\n            let node = allNodes[i];\r\n            if (node) {\r\n                if (skinBaseUrl != null && (node instanceof Sprite))\r\n                    node._skinBaseUrl = skinBaseUrl;\r\n\r\n                SerializeUtil.decodeObj(nodeData, node, decodeOptions);\r\n\r\n                if (runtime && nodeData._$var && node.name) {\r\n                    try {\r\n                        (<any>topNode)[node.name] = node;\r\n                    }\r\n                    catch (err: any) {\r\n                        errors.push(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        //设置组件属性\r\n        cnt = compInitList.length;\r\n        for (let i = 0; i < cnt; i += 2) {\r\n            SerializeUtil.decodeObj(compInitList[i], compInitList[i + 1], decodeOptions);\r\n        }\r\n\r\n        if (inPrefab && prefabNodeDict && topNode) //记录下nodeMap，上层创建prefab时使用\r\n            prefabNodeDict.set(topNode, nodeMap);\r\n\r\n        if (errors == errorList)\r\n            errorList.length = 0;\r\n\r\n        return outNodes;\r\n    }\r\n\r\n    public static collectResourceLinks(data: any, basePath: string) {\r\n        let test: Record<string, string[]> = {};\r\n        let innerUrls: (string | ILoadURL)[] = [];\r\n\r\n        function addInnerUrl(url: string, type: string) {\r\n            if (!url)\r\n                return \"\";\r\n            let entry = test[url];\r\n            if (entry === undefined) {\r\n                let url2: string;\r\n                if (url.length >= 36 && url.charCodeAt(8) === 45 && url.charCodeAt(13) === 45) //uuid xxxxxxxx-xxxx-...\r\n                    url2 = \"res://\" + url;\r\n                else\r\n                    url2 = URL.join(basePath, url);\r\n                innerUrls.push({ url: url2, type: type });\r\n                test[url] = entry = [url2, type];\r\n            }\r\n            else if (entry.indexOf(type, 1) == -1) {\r\n                entry.push(type);\r\n                innerUrls.push({ url: entry[0], type: type });\r\n            }\r\n            return entry[0];\r\n        }\r\n\r\n        function check(data: any) {\r\n            for (let key in data) {\r\n                let child = data[key];\r\n                if (child == null)\r\n                    continue;\r\n                if (Array.isArray(child)) {\r\n                    for (let item of child) {\r\n                        if (item == null)\r\n                            continue;\r\n\r\n                        if (typeof (item) === \"object\") {\r\n                            if (item._$uuid != null)\r\n                                item._$uuid = addInnerUrl(item._$uuid, SerializeUtil.getLoadTypeByEngineType(item._$type));\r\n                            else if (item._$prefab != null) {\r\n                                item._$prefab = addInnerUrl(item._$prefab, Loader.HIERARCHY);\r\n                                check(item);\r\n                            }\r\n                            else\r\n                                check(item);\r\n                        }\r\n                    }\r\n                }\r\n                else if (typeof (child) === \"object\") {\r\n                    if (child._$uuid != null)\r\n                        child._$uuid = addInnerUrl(child._$uuid, SerializeUtil.getLoadTypeByEngineType(child._$type));\r\n                    else if (child._$prefab != null) {\r\n                        child._$prefab = addInnerUrl(child._$prefab, Loader.HIERARCHY);\r\n                        check(child);\r\n                    }\r\n                    else\r\n                        check(child);\r\n                }\r\n            }\r\n        }\r\n\r\n        check(data);\r\n\r\n        if (data._$preloads) {\r\n            for (let url of data._$preloads)\r\n                innerUrls.push(url);\r\n        }\r\n\r\n        return innerUrls;\r\n    }\r\n}","import { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Prefab } from \"../resource/HierarchyResource\";\r\nimport { IHierarchyParserAPI, PrefabImpl } from \"../resource/PrefabImpl\";\r\nimport { HierarchyParser } from \"./HierarchyParser\";\r\nimport { LegacyUIParser } from \"./LegacyUIParser\";\r\n\r\nexport class HierarchyLoader implements IResourceLoader {\r\n    static v3: IHierarchyParserAPI = HierarchyParser;\r\n    static v2: IHierarchyParserAPI = null;\r\n    static legacySceneOrPrefab: IHierarchyParserAPI = LegacyUIParser;\r\n\r\n    load(task: ILoadTask) {\r\n        let url = task.url;\r\n        let isModel = task.ext == \"gltf\" || task.ext == \"fbx\" || task.ext == \"glb\";\r\n        if (isModel)\r\n            url = AssetDb.inst.getSubAssetURL(url, task.uuid, \"0\", \"lh\");\r\n        return task.loader.fetch(url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            if (data._$ver != null)\r\n                return this._load(HierarchyLoader.v3, task, data, 3);\r\n            else if (task.ext == \"ls\" || task.ext == \"lh\")\r\n                return this._load(HierarchyLoader.v2, task, data, 2);\r\n            else if (task.ext == \"scene\" || task.ext == \"prefab\")\r\n                return this._load(HierarchyLoader.legacySceneOrPrefab, task, data, 2);\r\n            else\r\n                return null;\r\n        });\r\n    }\r\n\r\n    //@internal\r\n    private _load(api: IHierarchyParserAPI, task: ILoadTask, data: any, version: number): Promise<Prefab> {\r\n        let basePath = URL.getPath(task.url);\r\n        let links = api.collectResourceLinks(data, basePath);\r\n        return task.loader.load(links, null, task.progress.createCallback()).then((resArray: any[]) => {\r\n            let res = new PrefabImpl(api, data, version);\r\n            res.addDeps(resArray);\r\n            return res;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lh\", \"ls\", \"scene\", \"prefab\"], HierarchyLoader, Loader.HIERARCHY);","/**\r\n * https://en.wikipedia.org/wiki/Radiance_(software)#HDR_image_format\r\n * \r\n * 文件第一行为 \"#?RADIANCE\"\r\n * \r\n * 以 \"#\" 开始为 注释行\r\n * \r\n * 后面有 key=value 形式声明信息\r\n * 包括 \"FORMAT=32-bit_rle_rgbe\" 格式声明\r\n * \r\n * 空行代表 header 结束， \r\n * \r\n * header 信息下一行 描述 图像分辨率和像素数据\r\n * 由 Radiance tools 生成, 一般为 \"-Y height +X width\"\r\n * \r\n * 之后为 图像 二进制像素数据\r\n *  \r\n */\r\n\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Texture2D } from \"../resource/Texture2D\";\r\n\r\n/**\r\n * https://floyd.lbl.gov/radiance/framer.html\r\n */\r\nexport class HDRTextureInfo {\r\n\r\n    static HDRTEXTURE: string = \"HDRTEXTURE\";\r\n\r\n    static _parseHDRTexture(data: ArrayBuffer, propertyParams: any = null, constructParams: any[] = null) {\r\n\r\n        let hdrInfo = HDRTextureInfo.getHDRInfo(data);\r\n\r\n        let texture = new Texture2D(hdrInfo.width, hdrInfo.height, hdrInfo.format, false, false, false);\r\n\r\n        texture.setHDRData(hdrInfo);\r\n\r\n        return texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param source \r\n     */\r\n    static getHDRInfo(source: ArrayBuffer) {\r\n\r\n        let data = new Uint8Array(source);\r\n        let readByteOffset = 0;\r\n\r\n        const readLine = () => {\r\n            let lineStr = HDRTextureInfo.getLineString(data, readByteOffset);\r\n            // string 带着 '\\n' 就不用 +1\r\n            readByteOffset += lineStr.length + 1;\r\n            return lineStr;\r\n        }\r\n\r\n        // header\r\n        let identifier = readLine();\r\n        // todo  非 Radiance tools 生成文件 identifier 是否还是 RADIANCE\r\n        if (identifier != \"#?RADIANCE\") {\r\n            throw \"HDR image: identifier wrong.\";\r\n        }\r\n\r\n        let commandsMap = new Map();\r\n\r\n        let line = \"\";\r\n        do {\r\n            line = readLine();\r\n            if (line[0] != \"#\") {\r\n                let commands = line.split(\"=\");\r\n                commandsMap.set(commands[0], commands[1]);\r\n            }\r\n\r\n        } while (line != \"\");\r\n        // header end\r\n\r\n        /**\r\n         * FORMAT\r\n         * EXPOSURE\r\n         * COLORCORR\r\n         * SOFTWARE\r\n         * PIXASPECT\r\n         * VIEW\r\n         * PRIMARIES\r\n         */\r\n        let hdrFormat = commandsMap.get(\"FORMAT\");\r\n        /**\r\n         * 32-bit_rle_rgbe\r\n         * 32-bit_rle_xyze\r\n         */\r\n        if (hdrFormat != \"32-bit_rle_rgbe\") {\r\n            throw \"HDR image: unsupported format.\";\r\n        }\r\n\r\n        let resolutionStr = readLine();\r\n        let resolutions = resolutionStr.split(\" \");\r\n\r\n        let decreaseY = resolutions[0] == \"-Y\";\r\n        let decreaseX = resolutions[2] == \"-X\";\r\n\r\n        let height = parseInt(resolutions[1]);\r\n        let width = parseInt(resolutions[3]);\r\n\r\n        // format 固定?\r\n        let hdrInfo = new HDRTextureInfo(source, readByteOffset, decreaseX, decreaseY, width, height, TextureFormat.R32G32B32);\r\n\r\n        /**\r\n         * Scanline Records\r\n         * 1. Uncompressed 每像素 4 字节\r\n         * 2. Old run-length encoded\r\n         * 3. New run-length encoded *✓\r\n         */\r\n\r\n\r\n        return hdrInfo;\r\n    }\r\n\r\n    private static getLineString(data: Uint8Array, readByteOffset: number) {\r\n\r\n        let dataLength = data.length;\r\n\r\n        let index = readByteOffset;\r\n\r\n        let res = \"\";\r\n        let char = \"\";\r\n        // do {\r\n        //     char = String.fromCharCode(data[index]);\r\n        //     res = `${res}${char}`;\r\n        //     index++;\r\n        // } while (index < dataLength && char != \"\\n\");\r\n\r\n        while (index < dataLength && char != \"\\n\") {\r\n            res = `${res}${char}`;\r\n            char = String.fromCharCode(data[index]);\r\n            index++;\r\n        }\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n\r\n\r\n    constructor(public source: ArrayBuffer, public byteOffset: number, public decreaseX: boolean, public decreaseY: boolean, public width: number, public height: number, public format: TextureFormat) {\r\n\r\n    }\r\n\r\n    get_32_bit_rle_rgbe(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataIndex = 0;\r\n\r\n        let rgbeBuffer = new ArrayBuffer(width * 4);\r\n        let rgbeArray = new Uint8Array(rgbeBuffer);\r\n\r\n        let pixelBuffer = new ArrayBuffer(width * height * 4 * 3);\r\n        let pixelArray = new Float32Array(pixelBuffer);\r\n\r\n        // todo decreaseX and decreaseY\r\n        for (let y = height; y > 0; y--) {\r\n\r\n            // begin unnormalized pixel\r\n            let a2 = data[dataIndex++]; // equal to 2\r\n            let b2 = data[dataIndex++]; // equal to 2\r\n            let c = data[dataIndex++]; // upper byte\r\n            let d = data[dataIndex++]; // lower byte\r\n\r\n            let scanlineLength = (c << 8) | d;\r\n\r\n            if (scanlineLength != width) {\r\n                throw \"HDR info: scanlineLength wrong.\";\r\n            }\r\n\r\n            let index = 0;\r\n            for (let i = 0; i < 4; i++) {\r\n                let endIndex = (i + 1) * scanlineLength;\r\n\r\n                while (index < endIndex) {\r\n                    let a = data[dataIndex++];\r\n                    let b = data[dataIndex++];\r\n                    if (a > 128) {\r\n                        let count = a - 128;\r\n                        if (count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        while (count-- > 0) {\r\n                            rgbeArray[index++] = b;\r\n                        }\r\n                    }\r\n                    else {\r\n                        let count = a;\r\n                        if (count == 0 || count > endIndex - index) {\r\n                            throw \"HDR info: ??\";\r\n                        }\r\n                        rgbeArray[index++] = b;\r\n                        if (--count > 0) {\r\n                            for (let j = 0; j < count; j++) {\r\n                                rgbeArray[index++] = data[dataIndex++];\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < scanlineLength; i++) {\r\n                let r = rgbeArray[i];\r\n                let g = rgbeArray[i + scanlineLength];\r\n                let b = rgbeArray[i + 2 * scanlineLength];\r\n                let e = rgbeArray[i + 3 * scanlineLength];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129).\r\n                //  */\r\n                // r = 128;\r\n                // g = 64;\r\n                // b = 32;\r\n                // e = 129;\r\n\r\n                let index = (height - y) * scanlineLength * 3 + i * 3;\r\n\r\n                const Ldexp = (mantissa: number, exponent: number) => {\r\n                    if (exponent > 1023) {\r\n                        return mantissa * Math.pow(2, 1023) * Math.pow(2, exponent - 1023);\r\n                    }\r\n\r\n                    if (exponent < -1074) {\r\n                        return mantissa * Math.pow(2, -1074) * Math.pow(2, exponent + 1074);\r\n                    }\r\n\r\n                    return mantissa * Math.pow(2, exponent);\r\n                }\r\n\r\n                if (e > 0) {\r\n                    let exponent = Ldexp(1.0, e - (128 + 8));\r\n                    pixelArray[index] = r * exponent;\r\n                    pixelArray[index + 1] = g * exponent;\r\n                    pixelArray[index + 2] = b * exponent;\r\n                }\r\n                else {\r\n                    pixelArray[index] = 0;\r\n                    pixelArray[index + 1] = 0;\r\n                    pixelArray[index + 2] = 0;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return pixelArray;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://www.radiance-online.org/archived/radsite/radiance/refer/Notes/picture_format.html\r\n     */\r\n    readScanLine(): ArrayBufferView {\r\n\r\n        let width = this.width;\r\n        let height = this.height;\r\n        let decreaseX = this.decreaseX;\r\n        let decreaseY = this.decreaseY;\r\n\r\n        let pixelArray = new Float32Array(width * height * 3);\r\n\r\n        let scanlineArray = new Uint8Array(width * 4);\r\n\r\n        let data = new Uint8Array(this.source, this.byteOffset);\r\n        let dataLength = data.length;\r\n        let dataIndex = 0;\r\n\r\n        const getc = () => {\r\n            // todo  check\r\n            if (dataIndex >= dataLength) {\r\n                throw \"HDR info: data wrong.\";\r\n            }\r\n\r\n            return data[dataIndex++];\r\n        };\r\n\r\n        const wrong = () => {\r\n            throw \"HDR info: data wrong.\";\r\n        }\r\n\r\n        for (let y = (height - 1); y >= 0; y--) {\r\n\r\n            this.readcolors(scanlineArray, getc, wrong);\r\n\r\n            for (let i = 0; i < width; i++) {\r\n\r\n                // color_color func\r\n                let index = 4 * i;\r\n                let byter = scanlineArray[index];\r\n                let byteg = scanlineArray[index + 1];\r\n                let byteb = scanlineArray[index + 2];\r\n                let bytee = scanlineArray[index + 3];\r\n\r\n                // /// test data\r\n                // /**\r\n                //  * (R,G,B)=(1.,.5,.25) would be represented by the bytes (128,64,32,129)\r\n                //  */\r\n                // byter = 128;\r\n                // byteg = 64;\r\n                // byteb = 32;\r\n                // bytee = 129;\r\n\r\n                let offsetY = y;\r\n                let offsetX = i;\r\n                if (decreaseY) {\r\n                    offsetY = height - 1 - y;\r\n                }\r\n                if (decreaseX) {\r\n                    offsetX = width - 1 - i;\r\n                }\r\n\r\n                let pixelIndex = offsetY * width * 3 + offsetX * 3;\r\n\r\n                if (bytee == 0) {\r\n                    pixelArray[pixelIndex] = 0;\r\n                    pixelArray[pixelIndex + 1] = 0;\r\n                    pixelArray[pixelIndex + 2] = 0;\r\n                }\r\n                else {\r\n                    let f = ldexp(1.0, bytee - (128 + 8));\r\n                    pixelArray[pixelIndex] = (byter + 0.5) * f;\r\n                    pixelArray[pixelIndex + 1] = (byteg + 0.5) * f;\r\n                    pixelArray[pixelIndex + 2] = (byteb + 0.5) * f;\r\n                }\r\n            }\r\n\r\n        }\r\n        return pixelArray;\r\n    }\r\n\r\n    readcolors(scanlineArray: Uint8Array, getc: () => number, wrong: () => void) {\r\n\r\n        const setScanLineData = (w: number, channel: number, value: number) => {\r\n            scanlineArray[w * 4 + channel] = value;\r\n        }\r\n\r\n        let width = this.width;\r\n\r\n        // 第一个数据\r\n        let unnormalizedr = getc();\r\n        let unnormalizedg = getc();\r\n        let unnormalizedb = getc();\r\n        let unnormalizede = getc();\r\n\r\n        if (width < 8 || width > 32767) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if (unnormalizedr != 2 || unnormalizedg != 2 || unnormalizedb & 128) {\r\n            this.olddreadcolors(scanlineArray, getc, unnormalizedr, unnormalizedg, unnormalizedb, unnormalizede);\r\n            return;\r\n        }\r\n\r\n        if ((unnormalizedb << 8 | unnormalizede) != width) {\r\n            wrong()\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            for (let j = 0; j < width;) {\r\n                let code = getc();\r\n                if (code > 128) {\r\n                    code &= 127;\r\n                    let val = getc();\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n                else {\r\n                    if (j + code > width) {\r\n                        wrong();\r\n                    }\r\n                    while (code--) {\r\n                        let val = getc();\r\n                        setScanLineData(j++, i, val);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    olddreadcolors(scanlineArray: Uint8Array, getc: () => number, r: number, g: number, b: number, e: number) {\r\n\r\n        let rshift = 0;\r\n\r\n        let len = this.width;\r\n\r\n        scanlineArray[0] = r;\r\n        scanlineArray[1] = g;\r\n        scanlineArray[2] = b;\r\n        scanlineArray[3] = e;\r\n\r\n        for (let w = 1; w < len; w++) {\r\n            let unnormalizedr = getc();\r\n            let unnormalizedg = getc();\r\n            let unnormalizedb = getc();\r\n            let unnormalizede = getc();\r\n\r\n            let scanIndex = w * 4;\r\n            scanlineArray[scanIndex] = unnormalizedr;\r\n            scanlineArray[scanIndex + 1] = unnormalizedg;\r\n            scanlineArray[scanIndex + 2] = unnormalizedb;\r\n            scanlineArray[scanIndex + 3] = unnormalizede;\r\n\r\n            if (unnormalizedr == 1 && unnormalizedg == 1 && unnormalizedb == 1) {\r\n                let lastIndex = scanIndex - 4;\r\n                for (let i = unnormalizede << rshift; i > 0; i--) {\r\n                    scanlineArray[scanIndex] = scanlineArray[lastIndex];\r\n                    scanlineArray[scanIndex + 1] = scanlineArray[lastIndex + 1];\r\n                    scanlineArray[scanIndex + 2] = scanlineArray[lastIndex + 2];\r\n                    scanlineArray[scanIndex + 3] = scanlineArray[lastIndex + 3];\r\n                    // len--;\r\n                }\r\n                rshift += 8;\r\n            }\r\n            else {\r\n                // len--;\r\n                rshift = 0;\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    color_color(col: Vector4, clr: Vector4) {\r\n        let f = 0;\r\n        if (clr.w == 0) {\r\n            col.x = col.y = col.z = 0;\r\n        }\r\n        else {\r\n            f = ldexp(1.0, clr.w - (128 + 8));\r\n            // todo   + 0.5 值会变\r\n            col.x = (clr.x) * f;\r\n            col.y = (clr.y) * f;\r\n            col.z = (clr.z) * f;\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nfunction ldexp(value: number, exponent: number): number {\r\n    return value * Math.pow(2, exponent);\r\n}","import { Texture2D, TextureConstructParams, TexturePropertyParams } from \"../resource/Texture2D\";\r\nimport { Texture } from \"../resource/Texture\";\r\nimport { IResourceLoader, ILoadTask, Loader, ILoadURL } from \"../net/Loader\";\r\nimport { HDRTextureInfo } from \"../RenderEngine/HDRTextureInfo\";\r\nimport { KTXTextureInfo } from \"../RenderEngine/KTXTextureInfo\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { BaseTexture } from \"../resource/BaseTexture\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { AssetDb } from \"../resource/AssetDb\";\r\nimport { Resource } from \"../resource/Resource\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { RenderTexture } from \"../resource/RenderTexture\";\r\nimport { VideoTexture } from \"../media/VideoTexture\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\n\r\nvar internalResources: Record<string, Texture2D>;\r\n\r\nclass Texture2DLoader implements IResourceLoader {\r\n    constructor() {\r\n        if (!internalResources) {\r\n            internalResources = {\r\n                \"WhiteTexture.png\": Texture2D.whiteTexture,\r\n                \"BlackTexture.png\": Texture2D.blackTexture,\r\n                \"GrayTexture.png\": Texture2D.grayTexture,\r\n                \"NormalTexture.png\": Texture2D.normalTexture,\r\n            };\r\n        }\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        if (task.url.indexOf(\"internal/\") != -1) {\r\n            let tex = internalResources[Utils.getBaseName(task.url)];\r\n            if (tex)\r\n                return Promise.resolve(tex);\r\n        }\r\n\r\n        let meta: any;\r\n        if (!task.url.startsWith(\"data:\")) {\r\n            meta = AssetDb.inst.metaMap[task.url];\r\n            if (!meta && LayaEnv.isPreview) {\r\n                return AssetDb.inst.getMeta(task.url, task.uuid).then(meta => {\r\n                    return this.load2(task, meta);\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.load2(task, meta);\r\n    }\r\n\r\n    protected load2(task: ILoadTask, meta: any) {\r\n        let constructParams: TextureConstructParams;\r\n        let propertyParams: TexturePropertyParams;\r\n        let ext = task.ext;\r\n        let url = task.url;\r\n        if (meta) {\r\n            let platform = Browser.platform;\r\n            let fileIndex = meta.platforms?.[platform] || 0;\r\n            let fileInfo = meta.files[fileIndex];\r\n            if (fileInfo.file) {\r\n                url = AssetDb.inst.getSubAssetURL(url, task.uuid, fileInfo.file, fileInfo.ext);\r\n                ext = fileInfo.ext;\r\n            }\r\n\r\n            constructParams = [0, 0, fileInfo.format ?? 1, meta.mipmap, meta.readWrite, meta.sRGB];\r\n            propertyParams = {\r\n                wrapModeU: meta.wrapMode,\r\n                wrapModeV: meta.wrapMode,\r\n                filterMode: meta.filterMode,\r\n                anisoLevel: meta.anisoLevel,\r\n                premultiplyAlpha: !!meta.pma,\r\n                hdrEncodeFormat: meta.hdrEncodeFormat,\r\n            };\r\n        }\r\n        else {\r\n            constructParams = task.options.constructParams;\r\n            propertyParams = task.options.propertyParams;\r\n        }\r\n\r\n        let compress = compressedFormats.indexOf(ext) != -1 ? ext : null;\r\n        if (compress != null) {\r\n            return task.loader.fetch(url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n                if (!data)\r\n                    return null;\r\n\r\n                let tex: BaseTexture;\r\n                switch (compress) {\r\n                    case \"dds\":\r\n                        tex = Texture2D._parseDDS(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"ktx\":\r\n                        let ktxInfo = KTXTextureInfo.getKTXTextureInfo(data);\r\n                        if (ktxInfo.dimension == TextureDimension.Cube) {\r\n                            //这里在core模块，不能直接引用d3里的TextureCube\r\n                            let cls = ClassUtils.getClass(\"TextureCube\");\r\n                            if (cls) {\r\n                                let tc = new cls(ktxInfo.width, ktxInfo.format, ktxInfo.mipmapCount > 1, ktxInfo.sRGB);\r\n                                tc.setKTXData(ktxInfo);\r\n                                tex = tc;\r\n                            }\r\n                            else\r\n                                return null;\r\n                        }\r\n                        else if (ktxInfo.dimension == TextureDimension.Tex2D) {\r\n                            tex = Texture2D._parseKTX(data, propertyParams, constructParams);\r\n                        }\r\n                        break;\r\n                    case \"pvr\":\r\n                        tex = Texture2D._parsePVR(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"hdr\":\r\n                        tex = HDRTextureInfo._parseHDRTexture(data, propertyParams, constructParams);\r\n                        break;\r\n\r\n                    case \"lanit.ls\":\r\n                        tex = Texture2D._SimpleAnimatorTextureParse(data, propertyParams, constructParams);\r\n                        break;\r\n                }\r\n\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (propertyParams && propertyParams.hdrEncodeFormat)\r\n                    tex.hdrEncodeFormat = propertyParams.hdrEncodeFormat;\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n        else {\r\n            let options = task.options;\r\n            if (options.useWorkerLoader && (!propertyParams || !propertyParams.premultiplyAlpha))\r\n                options = Object.assign({ workerLoaderOptions: { premultiplyAlpha: \"none\" } }, options);\r\n\r\n            return task.loader.fetch(url, \"image\", task.progress.createCallback(), options).then(img => {\r\n                if (!img)\r\n                    return null;\r\n\r\n                let tex: BaseTexture = Texture2D._parseImage(img, propertyParams, constructParams);\r\n                let obsoluteInst = <Texture2D>task.obsoluteInst;\r\n                if (obsoluteInst && Object.getPrototypeOf(obsoluteInst) == Object.getPrototypeOf(tex))\r\n                    tex = this.move(obsoluteInst, tex);\r\n\r\n                if (meta) {\r\n                    (<any>tex)._sizeGrid = meta.sizeGrid;\r\n                    (<any>tex)._stateNum = meta.stateNum;\r\n                }\r\n\r\n                return tex;\r\n            });\r\n        }\r\n    }\r\n\r\n    private move(obsoluteInst: BaseTexture, tex: BaseTexture) {\r\n        obsoluteInst._texture = tex._texture;\r\n        obsoluteInst.width = tex.width;\r\n        obsoluteInst.height = tex.height;\r\n        obsoluteInst.obsolute = false;\r\n        delete Resource._idResourcesMap[tex.id];\r\n        return obsoluteInst;\r\n    }\r\n}\r\n\r\nclass RenderTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            let rt = <RenderTexture>task.obsoluteInst;\r\n            if (rt)\r\n                rt.recreate(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n            else\r\n                rt = new RenderTexture(data.width, data.height, data.colorFormat, data.depthFormat,\r\n                    data.generateMipmap, data.multiSamples, data.generateDepthTexture, data.sRGB);\r\n\r\n            if (null != data.anisoLevel)\r\n                rt.anisoLevel = data.anisoLevel;\r\n            if (null != data.filterMode)\r\n                rt.filterMode = data.filterMode;\r\n            if (null != data.wrapModeU)\r\n                rt.wrapModeU = data.wrapModeU;\r\n            if (null != data.wrapModeV)\r\n                rt.wrapModeV = data.wrapModeV;\r\n\r\n            return rt;\r\n        });\r\n    }\r\n}\r\n\r\n\r\nclass VideoTextureLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let inst = <VideoTexture>task.obsoluteInst || new VideoTexture();\r\n        inst.source = task.url;\r\n        return Promise.resolve(inst);\r\n    }\r\n}\r\n\r\nconst propertyParams2d: TexturePropertyParams = { premultiplyAlpha: true };\r\nconst constructParams2d: TextureConstructParams = [null, null, TextureFormat.R8G8B8A8, false, false, true];\r\n\r\nclass TextureLoader implements IResourceLoader {\r\n    wrapTex2D(task: ILoadTask, tex2D: Texture2D) {\r\n        if (!tex2D)\r\n            return null;\r\n\r\n        let tex = <Texture>task.obsoluteInst;\r\n        if (tex) { //recover\r\n            tex.setTo(tex2D);\r\n            tex.obsolute = false;\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n            tex.event(\"reload\");\r\n            if (tex._clipCache) {\r\n                tex._clipCache.forEach(t => {\r\n                    t.event(\"reload\");\r\n                    t._sizeGrid = tex._sizeGrid;\r\n                    t._stateNum = tex._stateNum;\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            tex = new Texture(tex2D);\r\n            tex._sizeGrid = (<any>tex2D)._sizeGrid;\r\n            tex._stateNum = (<any>tex2D)._stateNum;\r\n        }\r\n\r\n        return tex;\r\n    }\r\n\r\n    load(task: ILoadTask) {\r\n        let tex2D = <Texture2D>task.loader.getRes(task.url, Loader.TEXTURE2D);\r\n        if (!tex2D || tex2D.obsolute) {\r\n            let url: ILoadURL = { url: task.url, type: Loader.TEXTURE2D };\r\n\r\n            if (!task.options.propertyParams)\r\n                url.propertyParams = propertyParams2d;\r\n            else if (task.options.propertyParams.premultiplyAlpha == null)\r\n                url.propertyParams = Object.assign({}, propertyParams2d, task.options.propertyParams);\r\n\r\n            if (!task.options.constructParams)\r\n                url.constructParams = constructParams2d;\r\n            else if (task.options.constructParams[5] == null)\r\n                url.constructParams = Object.assign([], constructParams2d, task.options.constructParams);\r\n            return task.loader.load(url, task.options, task.progress.createCallback()).then(tex2D => {\r\n                return this.wrapTex2D(task, tex2D);\r\n            });\r\n        }\r\n        else\r\n            return Promise.resolve(this.wrapTex2D(task, tex2D));\r\n    }\r\n}\r\n\r\nconst compressedFormats = [\"ktx\", \"pvr\", \"dds\", \"hdr\", \"lanit.ls\"];\r\nconst videoFormats = [\"mp4\", \"webm\"];\r\n\r\nLoader.registerLoader([\"tga\", \"tif\", \"tiff\", \"png\", \"jpg\", \"jpeg\", \"rendertexture\", ...videoFormats, ...compressedFormats], TextureLoader, Loader.IMAGE);\r\nLoader.registerLoader([], Texture2DLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader([\"rendertexture\"], RenderTextureLoader, Loader.TEXTURE2D);\r\nLoader.registerLoader(videoFormats, VideoTextureLoader, Loader.TEXTURE2D);","import { AnimationClip2D } from \"../components/AnimationClip2D\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\n\r\nclass AnimationClip2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return AnimationClip2D._parse(data);\r\n        });\r\n    }\r\n}\r\nLoader.registerLoader([\"mc\"], AnimationClip2DLoader);","import { AnimatorController2D } from \"../components/AnimatorController2D\";\r\nimport { TypeAnimatorState } from \"../components/AnimatorControllerParse\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\n\r\nclass AnimationController2DLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"json\", task.progress.createCallback(0.2), task.options).then(data => {\r\n            let ret = new AnimatorController2D(data);\r\n            if (ret.data && ret.data.controllerLayers) {\r\n                let layers = ret.data.controllerLayers;\r\n                let promises: Array<any> = [];\r\n                for (let i = layers.length - 1; i >= 0; i--) {\r\n                    let states = layers[i].states;\r\n                    this.loadStates(states, promises, task);\r\n\r\n                }\r\n                return Promise.all(promises).then(() => ret);\r\n            }\r\n            else\r\n                return ret;\r\n        });\r\n    }\r\n\r\n\r\n    loadStates(states: TypeAnimatorState[], promises: Array<any>, task: ILoadTask) {\r\n        let basePath = URL.getPath(task.url);\r\n        for (let j = states.length - 1; j >= 0; j--) {\r\n            if (states[j].clip && states[j].clip._$uuid) {\r\n                let url = URL.getResURLByUUID(states[j].clip._$uuid);\r\n                if (!url.startsWith(\"res://\"))\r\n                    url = URL.join(basePath, url);\r\n                promises.push(task.loader.load(url).then(res => {\r\n                    states[j].clip = res;\r\n                }));\r\n\r\n                // promises.push(task.loader.load(\"res://\" + states[j].clip._$uuid).then(res => {\r\n                //     states[j].clip = res;\r\n                // }));\r\n            }\r\n\r\n            if (states[j].states) {\r\n                this.loadStates(states[j].states, promises, task);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mcc\"], AnimationController2DLoader);","import { ILoadTask, IResourceLoader, Loader } from \"../net/Loader\";\r\n\r\nexport class NullLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return Promise.resolve(null);\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"lighting\"], NullLoader);","import { BitmapFont } from \"../display/BitmapFont\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nclass BitmapFontLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        let picUrl = Utils.replaceFileExtension(task.url, \"png\");\r\n        return Promise.all([\r\n            task.loader.fetch(task.url, \"xml\", task.progress.createCallback(0.2), task.options),\r\n            task.loader.load(picUrl, task.options, task.progress.createCallback(0.8))\r\n        ]).then(([xml, tex]) => {\r\n            if (!xml || !tex)\r\n                return null;\r\n\r\n            let font = new BitmapFont();\r\n            font.parseFont(xml, tex);\r\n\r\n            return font;\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"fnt\"], BitmapFontLoader, Loader.FONT);","import { ILaya } from \"../../ILaya\";\r\nimport { LayaEnv } from \"../../LayaEnv\";\r\nimport { IResourceLoader, ILoadTask, Loader } from \"../net/Loader\";\r\nimport { URL } from \"../net/URL\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { Utils } from \"../utils/Utils\";\r\n\r\nconst testString = \"LayaTTFFont\";\r\n\r\nclass TTFFontLoader implements IResourceLoader {\r\n\r\n    load(task: ILoadTask) {\r\n        let fontName = Utils.replaceFileExtension(Utils.getBaseName(task.url), \"\");\r\n        if (LayaEnv.isConch) {\r\n            return task.loader.fetch(task.url, \"arraybuffer\").then(data => {\r\n                if (data)\r\n                    (window as any)[\"conchTextCanvas\"].setFontFaceFromBuffer(fontName, data);\r\n                return { family: fontName };\r\n            });\r\n        }\r\n        else if ((window as any).FontFace) {\r\n            let fontFace: any = new (window as any).FontFace(fontName, \"url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"')\");\r\n            (document as any).fonts.add(fontFace);\r\n            return fontFace.load().then(() => {\r\n                return fontFace;\r\n            });\r\n        }\r\n        else {\r\n            let fontTxt = \"40px \" + fontName;\r\n            let txtWidth = Browser.measureText(testString, fontTxt).width;\r\n\r\n            let fontStyle: any = Browser.createElement(\"style\");\r\n            fontStyle.type = \"text/css\";\r\n            document.body.appendChild(fontStyle);\r\n            fontStyle.textContent = \"@font-face { font-family:'\" + fontName + \"'; src:url('\" + URL.postFormatURL(URL.formatURL(task.url)) + \"');}\";\r\n\r\n            return new Promise((resolve) => {\r\n                let checkComplete = () => {\r\n                    if (Browser.measureText(testString, fontTxt).width != txtWidth)\r\n                        complete();\r\n                };\r\n                let complete = () => {\r\n                    ILaya.systemTimer.clear(this, checkComplete);\r\n                    ILaya.systemTimer.clear(this, complete);\r\n\r\n                    resolve({ family: fontName });\r\n                };\r\n\r\n                ILaya.systemTimer.once(10000, this, complete);\r\n                ILaya.systemTimer.loop(20, this, checkComplete);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"ttf\", \"woff\", \"woff2\", \"otf\"], TTFFontLoader, Loader.TTF);","import { IResourceLoader, ILoadTask, Loader } from \"../../net/Loader\";\r\nimport { WebAudioSound } from \"./WebAudioSound\";\r\n\r\nclass WebAudioLoader implements IResourceLoader {\r\n    load(task: ILoadTask) {\r\n        return task.loader.fetch(task.url, \"arraybuffer\", task.progress.createCallback(), task.options).then(data => {\r\n            if (!data)\r\n                return null;\r\n\r\n            return WebAudioSound.ctx.decodeAudioData(data);\r\n        });\r\n    }\r\n}\r\n\r\nLoader.registerLoader([\"mp3\", \"wav\", \"ogg\"], WebAudioLoader, Loader.SOUND);","import { ClassUtils } from \"./utils/ClassUtils\";\r\nimport { Component } from \"./components/Component\";\r\nimport { Animation } from \"./display/Animation\";\r\nimport { AnimationBase } from \"./display/AnimationBase\";\r\nimport { BitmapFont } from \"./display/BitmapFont\";\r\nimport { EffectAnimation } from \"./display/EffectAnimation\";\r\nimport { FrameAnimation } from \"./display/FrameAnimation\";\r\nimport { Input } from \"./display/Input\";\r\nimport { Node } from \"./display/Node\";\r\nimport { Scene } from \"./display/Scene\";\r\nimport { Sprite } from \"./display/Sprite\";\r\nimport { Stage } from \"./display/Stage\";\r\nimport { Text } from \"./display/Text\";\r\nimport { BlurFilter } from \"./filters/BlurFilter\";\r\nimport { ColorFilter } from \"./filters/ColorFilter\";\r\nimport { GlowFilter } from \"./filters/GlowFilter\";\r\nimport { Point } from \"./maths/Point\";\r\nimport { Rectangle } from \"./maths/Rectangle\";\r\nimport { SoundNode } from \"./media/SoundNode\";\r\nimport { VideoNode } from \"./media/VideoNode\";\r\nimport { Texture } from \"./resource/Texture\";\r\nimport { Texture2D } from \"./resource/Texture2D\";\r\nimport { Animator2D } from \"./components/Animator2D\";\r\nimport { AnimatorControllerLayer2D } from \"./components/AnimatorControllerLayer2D\";\r\nimport { AnimatorState2D } from \"./components/AnimatorState2D\";\r\nimport { AnimationClip2D } from \"./components/AnimationClip2D\";\r\nimport { Animation2DParm } from \"./components/Animation2DParm\";\r\nimport { Animation2DCondition } from \"./components/Animation2DCondition\";\r\nimport { Prefab } from \"./resource/HierarchyResource\";\r\nimport { Widget } from \"./components/Widget\";\r\nimport { AnimatorController2D } from \"./components/AnimatorController2D\";\r\nimport { Vector2 } from \"./maths/Vector2\";\r\nimport { Vector3 } from \"./maths/Vector3\";\r\nimport { Vector4 } from \"./maths/Vector4\";\r\nimport { Quaternion } from \"./maths/Quaternion\";\r\nimport { Color } from \"./maths/Color\";\r\nimport { Script } from \"./components/Script\";\r\nimport { Matrix } from \"./maths/Matrix\";\r\nimport { Matrix3x3 } from \"./maths/Matrix3x3\";\r\nimport { Matrix4x4 } from \"./maths/Matrix4x4\";\r\n\r\nimport \"./loaders/TextResourceLoader\";\r\nimport \"./loaders/AtlasLoader\";\r\nimport \"./loaders/HierarchyLoader\";\r\nimport \"./loaders/TextureLoader\";\r\nimport \"./loaders/AnimationClip2DLoader\";\r\nimport \"./loaders/AnimationController2DLoader\";\r\nimport \"./loaders/NullLoader\";\r\nimport \"./loaders/BitmapFontLoader\";\r\nimport \"./loaders/TTFFontLoader\";\r\nimport \"./media/webaudio/WebAudioLoader\";\r\n\r\nlet c = ClassUtils.regClass;\r\n\r\nc(\"Record\", Object);\r\nc(\"Node\", Node);\r\nc(\"Sprite\", Sprite);\r\nc(\"Widget\", Widget);\r\nc(\"Text\", Text);\r\nc(\"Input\", Input);\r\nc(\"AnimationBase\", AnimationBase);\r\nc(\"Animation\", Animation);\r\nc(\"FrameAnimation\", FrameAnimation);\r\nc(\"EffectAnimation\", EffectAnimation);\r\nc(\"SoundNode\", SoundNode);\r\nc(\"VideoNode\", VideoNode);\r\n\r\nc(\"Scene\", Scene);\r\nc(\"Stage\", Stage);\r\nc(\"Component\", Component);\r\nc(\"Script\", Script);\r\nc(\"BitmapFont\", BitmapFont);\r\nc(\"BlurFilter\", BlurFilter);\r\nc(\"ColorFilter\", ColorFilter);\r\nc(\"GlowFilter\", GlowFilter);\r\nc(\"Point\", Point);\r\nc(\"Rectangle\", Rectangle);\r\nc(\"Texture\", Texture);\r\nc(\"Texture2D\", Texture2D);\r\n\r\nc(\"Prefab\", Prefab);\r\n\r\nc(\"Animator2D\", Animator2D);\r\nc(\"AnimatorControllerLayer2D\", AnimatorControllerLayer2D);\r\nc(\"AnimatorState2D\", AnimatorState2D);\r\nc(\"AnimationClip2D\", AnimationClip2D);\r\nc(\"AnimatorController2D\", AnimatorController2D);\r\nc(\"Animation2DParm\", Animation2DParm);\r\nc(\"Animation2DCondition\", Animation2DCondition);\r\n\r\nc(\"Vector2\", Vector2);\r\nc(\"Vector3\", Vector3);\r\nc(\"Vector4\", Vector4);\r\nc(\"Quaternion\", Quaternion);\r\nc(\"Color\", Color);\r\nc(\"Matrix\", Matrix);\r\nc(\"Matrix3x3\", Matrix3x3);\r\nc(\"Matrix4x4\", Matrix4x4);","/**\r\n * <p> <code>LocalStorage</code> 类用于没有时间限制的数据存储。</p>\r\n */\r\nexport class LocalStorage {\r\n\r\n    /**@ 基础类*/\r\n    static _baseClass: any;\r\n    /**\r\n     *  数据列表。\r\n     */\r\n    static items: any;\r\n    /**\r\n     * 表示是否支持  <code>LocalStorage</code>。\r\n     */\r\n    static support: boolean = false;\r\n    /**@internal */\r\n    static __init__(): boolean {\r\n        if (!LocalStorage._baseClass) {\r\n            LocalStorage._baseClass = Storage;\r\n            Storage.init();\r\n        }\r\n        LocalStorage.items = LocalStorage._baseClass.items;\r\n        LocalStorage.support = LocalStorage._baseClass.support;\r\n        return LocalStorage.support;\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名和键值，字符串类型。\r\n     * @param key 键名。\r\n     * @param value 键值。\r\n     */\r\n    static setItem(key: string, value: string): void {\r\n        LocalStorage._baseClass.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名的值。\r\n     * @param key 键名。\r\n     * @return 字符串型值。\r\n     */\r\n    static getItem(key: string): string {\r\n        return LocalStorage._baseClass.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * 存储指定键名及其对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n     */\r\n    static setJSON(key: string, value: any): void {\r\n        LocalStorage._baseClass.setJSON(key, value);\r\n    }\r\n\r\n    /**\r\n     * 获取指定键名对应的 <code>Object</code> 类型值。\r\n     * @param key 键名。\r\n     * @return <code>Object</code> 类型值\r\n     */\r\n    static getJSON(key: string): any {\r\n        return LocalStorage._baseClass.getJSON(key);\r\n    }\r\n\r\n    /**\r\n     * 删除指定键名的信息。\r\n     * @param key 键名。\r\n     */\r\n    static removeItem(key: string): void {\r\n        LocalStorage._baseClass.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * 清除本地存储信息。\r\n     */\r\n    static clear(): void {\r\n        LocalStorage._baseClass.clear();\r\n    }\r\n}\r\n\r\n\r\n/** @internal */\r\nclass Storage {\r\n\r\n\t/**\r\n\t *  数据列表。\r\n\t */\r\n    static items: any;\r\n\t/**\r\n\t * 表示是否支持  <code>LocalStorage</code>。\r\n\t */\r\n    static support: boolean = false;\r\n\r\n    static init(): void {\r\n        try { Storage.support = true; Storage.items = window.localStorage; Storage.setItem('laya', '1'); Storage.removeItem('laya'); } catch (e) { Storage.support = false; } if (!Storage.support) console.log('LocalStorage is not supprot or browser is private mode.');\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和键值，字符串类型。\r\n\t * @param key 键名。\r\n\t * @param value 键值。\r\n\t */\r\n    static setItem(key: string, value: string): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, value);\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的值。\r\n\t * @param key 键名。\r\n\t * @return 字符串型值。\r\n\t */\r\n    static getItem(key: string): string {\r\n        return Storage.support ? Storage.items.getItem(key) : null;\r\n    }\r\n\r\n\t/**\r\n\t * 存储指定键名和它的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @param value 键值。是 <code>Object</code> 类型，此致会被转化为 JSON 字符串存储。\r\n\t */\r\n    static setJSON(key: string, value: any): void {\r\n        try {\r\n            Storage.support && Storage.items.setItem(key, JSON.stringify(value));\r\n        } catch (e) {\r\n            console.warn(\"set localStorage failed\", e);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 获取指定键名的 <code>Object</code> 类型值。\r\n\t * @param key 键名。\r\n\t * @return <code>Object</code> 类型值\r\n\t */\r\n    static getJSON(key: string): any {\r\n        try{\r\n            let obj = JSON.parse(Storage.support ? Storage.items.getItem(key) : null);\r\n            return obj;\r\n        }catch(err){\r\n            return Storage.items.getItem(key);\r\n        }\r\n    }\r\n\r\n\t/**\r\n\t * 删除指定键名的信息。\r\n\t * @param key 键名。\r\n\t */\r\n    static removeItem(key: string): void {\r\n        Storage.support && Storage.items.removeItem(key);\r\n    }\r\n\r\n\t/**\r\n\t * 清除本地存储信息。\r\n\t */\r\n    static clear(): void {\r\n        Storage.support && Storage.items.clear();\r\n    }\r\n\r\n}\r\n","import { ShaderDefines2D } from \"../ShaderDefines2D\"\r\nimport { Value2D } from \"../value/Value2D\"\r\nimport { LayaGL } from \"../../../../layagl/LayaGL\";\r\nimport { RenderParams } from \"../../../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { Const } from \"../../../../Const\";\r\n\r\nexport class SkinSV extends Value2D {\r\n    texcoord: any;\r\n    position: any;\r\n    offsetX: number = 300;\r\n    offsetY: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor(type: any) {\r\n        super(ShaderDefines2D.SKINMESH, 0);\r\n        var _vlen: number = 8 * Const.BYTES_PE;\r\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT)\r\n        this.position = [2, glfloat, false, _vlen, 0];\r\n        this.texcoord = [2, glfloat, false, _vlen, 2 * Const.BYTES_PE];\r\n        this.color = [4, glfloat, false, _vlen, 4 * Const.BYTES_PE];\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { Value2D } from \"./Value2D\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\n\r\nexport class PrimitiveSV extends Value2D{\t\r\n    constructor(args:any){\r\n        super(ShaderDefines2D.PRIMITIVE,0);\r\n        this._attribLocation = ['position', 0, 'attribColor', 1];// , 'clipDir', 2, 'clipRect', 3];\r\n    }\r\n}\r\n\r\n","import { Value2D } from \"./Value2D\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\"\r\n\r\nexport class TextureSV extends Value2D {\r\n    u_colorMatrix: any[];\r\n    strength: number = 0;\r\n    blurInfo: any[] = null;\r\n    colorMat: Float32Array = null;\r\n    colorAlpha: Float32Array = null;\r\n    constructor(subID: number = 0) {\r\n        super(ShaderDefines2D.TEXTURE2D, subID);\r\n        this._attribLocation = ['posuv', 0, 'attribColor', 1, 'attribFlags', 2];// , 'clipDir', 3, 'clipRect', 4];\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    clear(): void {\r\n        this.texture = null;\r\n        this.shader = null;\r\n        this.defines._value = this.subID;\r\n        //defines.setValue(0);\r\n    }\r\n}\r\n\r\n// 放在这里容易导致这个文件被排除\r\n//Value2D._initone(ShaderDefines2D.TEXTURE2D, TextureSV);\r\n//Value2D._initone(ShaderDefines2D.TEXTURE2D | ShaderDefines2D.FILTERGLOW, TextureSV);\r\n","import { Browser } from \"./Browser\";\r\n/**\r\n * <code>Mouse</code> 类用于控制鼠标光标样式。\r\n */\r\nexport class Mouse {\r\n    /**@private */\r\n    private static _style: any;\r\n    /**@private */\r\n    private static _preCursor: string;\r\n\r\n    /**\r\n     * 设置鼠标样式\r\n     * @param cursorStr\r\n     * 例如auto move no-drop col-resize\r\n     * all-scroll pointer not-allowed row-resize\r\n     * crosshair progress e-resize ne-resize\r\n     * default text n-resize nw-resize\r\n     * help vertical-text s-resize se-resize\r\n     * inherit wait w-resize sw-resize\r\n     */\r\n    static set cursor(cursorStr: string) {\r\n        Mouse._style.cursor = cursorStr;\r\n    }\r\n\r\n    static get cursor(): string {\r\n        return Mouse._style.cursor;\r\n    }\r\n\r\n    /**@internal */\r\n    static __init__(): any {\r\n        Mouse._style = Browser.document.body.style;\r\n    }\r\n\r\n    /**\r\n     * 隐藏鼠标\r\n     */\r\n    static hide(): void {\r\n        if (Mouse.cursor != \"none\") {\r\n            Mouse._preCursor = Mouse.cursor;\r\n            Mouse.cursor = \"none\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 显示鼠标\r\n     */\r\n    static show(): void {\r\n        if (Mouse.cursor == \"none\") {\r\n            if (Mouse._preCursor) {\r\n                Mouse.cursor = Mouse._preCursor;\r\n            } else {\r\n                Mouse.cursor = \"auto\";\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Mesh2D } from \"./Mesh2D\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { VertexDeclaration } from \"../../RenderEngine/VertexDeclaration\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexElement } from \"../../renders/VertexElement\";\r\n\r\n/**\r\n * drawImage，fillRect等会用到的简单的mesh。每次添加必然是一个四边形。\r\n */\r\nexport class MeshParticle2D extends Mesh2D {\r\n    static const_stride: number = 116;\r\n    private static _fixattriInfo: any[];\r\n    private static _POOL: any[] = [];\r\n    static vertexDeclaration: VertexDeclaration = null;\r\n    static __init__(): void {\r\n        const glfloat = LayaGL.renderEngine.getParams(RenderParams.FLOAT);\r\n        MeshParticle2D._fixattriInfo = [\r\n            glfloat, 4, 0,\t//CornerTextureCoordinate\r\n            glfloat, 3, 16,//pos\r\n            glfloat, 3, 28,//vel\r\n            glfloat, 4, 40,//start color\r\n            glfloat, 4, 56,//end color\r\n            glfloat, 3, 72,//size,rot\r\n            glfloat, 2, 84,//radius\r\n            glfloat, 4, 92,//radian\r\n            glfloat, 1, 108,//AgeAddScale\r\n            glfloat, 1, 112];\r\n\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    constructor(maxNum: number) {\r\n        super(MeshParticle2D.const_stride, maxNum * 4 * MeshParticle2D.const_stride, 4);\t\t//ib 先4\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshParticle2D._fixattriInfo);\r\n        this.createQuadIB(maxNum);\r\n        this._quadNum = maxNum;\r\n\r\n        if (!MeshParticle2D.vertexDeclaration) {\r\n            MeshParticle2D.vertexDeclaration = new VertexDeclaration(116, [\r\n                new VertexElement(0, VertexElementFormat.Vector4, 0),\r\n                new VertexElement(16, VertexElementFormat.Vector3, 1),\r\n                new VertexElement(28, VertexElementFormat.Vector3, 2),\r\n                new VertexElement(40, VertexElementFormat.Vector4, 3),\r\n                new VertexElement(56, VertexElementFormat.Vector4, 4),\r\n                new VertexElement(72, VertexElementFormat.Vector3, 5),\r\n                new VertexElement(84, VertexElementFormat.Vector2, 6),\r\n                new VertexElement(92, VertexElementFormat.Vector4, 7),\r\n                new VertexElement(108, VertexElementFormat.Single, 8),\r\n                new VertexElement(112, VertexElementFormat.Single, 9)\r\n            ]);\r\n        }\r\n\r\n        this._vb.vertexDeclaration = MeshParticle2D.vertexDeclaration;\r\n    }\r\n\r\n    setMaxParticleNum(maxNum: number): void {\r\n        this._vb.buffer2D._resizeBuffer(maxNum * 4 * MeshParticle2D.const_stride, false);\r\n        this.createQuadIB(maxNum);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    //TODO:coverage\r\n    static getAMesh(maxNum: number): MeshParticle2D {\r\n        //console.log('getmesh');\r\n        if (MeshParticle2D._POOL.length) {\r\n            var ret: MeshParticle2D = MeshParticle2D._POOL.pop();\r\n            ret.setMaxParticleNum(maxNum);\r\n            return ret;\r\n        }\r\n        return new MeshParticle2D(maxNum);\r\n    }\r\n\r\n    /**\r\n     * 把本对象放到回收池中，以便getMesh能用。\r\n     * @override\r\n     */\r\n    //TODO:coverage\r\n    releaseMesh(): void {\r\n        this._vb.buffer2D.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        //_applied = false;\r\n        MeshParticle2D._POOL.push(this);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * @override\r\n     */\r\n    destroy(): void {\r\n        this._ib.destroy();\r\n        this._vb.destroy();\r\n        this._vb.deleteBuffer();\r\n        //ib用deletebuffer么\r\n    }\r\n}\r\n\r\n","import { IClone } from \"../../utils/IClone\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\n\r\n/**\r\n * <code>DefineDatas</code> 类用于创建宏定义数据集合。\r\n */\r\nexport class DefineDatas implements IClone {\r\n\t/** @internal */\r\n\t_mask: Array<number> = [];\r\n\t/** @internal */\r\n\t_length: number = 0;\r\n\r\n\t/**\r\n\t * 创建一个 <code>DefineDatas</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_intersectionDefineDatas(define: DefineDatas): void {\r\n\t\tvar unionMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tfor (var i: number = this._length - 1; i >= 0; i--) {\r\n\t\t\tvar value: number = mask[i] & unionMask[i];\r\n\t\t\tif (value == 0 && i == this._length - 1)\r\n\t\t\t\tthis._length--;\r\n\t\t\telse\r\n\t\t\t\tmask[i] = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义值。\r\n\t * @param define 宏定义值。\r\n\t */\r\n\tadd(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar size: number = index + 1;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;//must from this._length because this._length maybe less than mask.length and have dirty data should clear.\r\n\t\tif (maskStart < size) {\r\n\t\t\t(mask.length < size) && (mask.length = size);//mask.length maybe small than size,maybe not.\r\n\t\t\tfor (; maskStart < index; maskStart++)\r\n\t\t\t\tmask[maskStart] = 0;\r\n\t\t\tmask[index] = define._value;\r\n\t\t\tthis._length = size;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tmask[index] |= define._value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 移除宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\tremove(define: ShaderDefine): void {\r\n\t\tvar index: number = define._index;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tif (index > endIndex)//不重置Length,避免经常扩充\r\n\t\t\treturn;\r\n\t\tvar newValue = mask[index] & ~define._value;\r\n\t\tif (index == endIndex && newValue === 0)\r\n\t\t\tthis._length--;\r\n\t\telse\r\n\t\t\tmask[index] = newValue;\r\n\t}\r\n\r\n\t/**\r\n\t * 添加宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\taddDefineDatas(define: DefineDatas): void {\r\n\t\tvar addMask: Array<number> = define._mask;\r\n\t\tvar size: number = define._length;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar maskStart: number = this._length;\r\n\t\tif (maskStart < size) {\r\n\t\t\tmask.length = size;\r\n\t\t\tfor (var i: number = 0; i < maskStart; i++)\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\tfor (; i < size; i++)\r\n\t\t\t\tmask[i] = addMask[i];\r\n\t\t\tthis._length = size;\r\n\t\t} else {\r\n\t\t\tfor (var i: number = 0; i < size; i++) {\r\n\t\t\t\tmask[i] |= addMask[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * 移除宏定义集合。\r\n\t * @param define 宏定义集合。\r\n\t */\r\n\tremoveDefineDatas(define: DefineDatas): void {\r\n\t\tvar removeMask: Array<number> = define._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar endIndex: number = this._length - 1;\r\n\t\tvar i = Math.min(define._length, endIndex);\r\n\t\tfor (; i >= 0; i--) {\r\n\t\t\tvar newValue = mask[i] & ~removeMask[i];\r\n\t\t\tif (i == endIndex && newValue === 0) {\r\n\t\t\t\tendIndex--;\r\n\t\t\t\tthis._length--;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmask[i] = newValue;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * 是否有宏定义。\r\n\t * @param define 宏定义。\r\n\t */\r\n\thas(define: ShaderDefine): boolean {\r\n\t\tvar index: number = define._index;\r\n\t\tif (index >= this._length)\r\n\t\t\treturn false;\r\n\t\treturn (this._mask[index] & define._value) !== 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclear(): void {\r\n\t\tthis._length = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: any): void {\r\n\t\tvar destDefineData: DefineDatas = (<DefineDatas>destObject);\r\n\t\tvar destMask: Array<number> = destDefineData._mask;\r\n\t\tvar mask: Array<number> = this._mask;\r\n\t\tvar count: number = this._length;\r\n\t\tdestMask.length = count;\r\n\t\tfor (var i: number = 0; i < count; i++)\r\n\t\t\tdestMask[i] = mask[i];\r\n\t\tdestDefineData._length = count;\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: DefineDatas = new DefineDatas();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tdelete this._mask;\r\n\t}\r\n}\r\n\r\n\r\n","/**\r\n * <code>ShaderDefine</code> 类用于定义宏数据。\r\n */\r\nexport class ShaderDefine {\r\n\r\n\t/**\r\n\t * @internal\r\n\t * 存储 texture uniform gamma define\r\n\t */\r\n\tstatic _texGammaDefine: { [key: string]: ShaderDefine } = {};\r\n\r\n\t/**@internal */\r\n\t_index: number;\r\n\t/**@internal */\r\n\t_value: number;\r\n\t/**\r\n\t * 创建一个宏定义的实例\r\n\t * @param index 宏索引\r\n\t * @param value 宏值\r\n\t */\r\n\tconstructor(index: number, value: number) {\r\n\t\tthis._index = index;\r\n\t\tthis._value = value;\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { DefineDatas } from \"./DefineDatas\";\r\nimport { Shader3D } from \"./Shader3D\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\n/**\r\n * 着色器变种。\r\n */\r\nexport class ShaderVariant {\r\n    /** @internal */\r\n    _shader: Shader3D;\r\n    /** @internal */\r\n    _subShaderIndex: number = 0;\r\n    /** @internal */\r\n    _passIndex: number = 0;\r\n    /** @internal */\r\n    _defineNames: string[];\r\n\r\n    /**\r\n     * 着色器。\r\n     */\r\n    public get shader(): Shader3D {\r\n        return this._shader;\r\n    }\r\n\r\n    /**\r\n     * 子着色器索引。\r\n     */\r\n    public get subShaderIndex(): number {\r\n        return this._subShaderIndex;\r\n    }\r\n\r\n    /**\r\n     * 通道索引。\r\n     */\r\n    public get passIndex(): number {\r\n        return this._passIndex;\r\n    }\r\n\r\n    /**\r\n     * 宏定义集合。\r\n     */\r\n    public get defineNames(): Readonly<string[]> {\r\n        return this._defineNames;\r\n    }\r\n\r\n    /**\r\n     * 创建着色器变种。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defines 宏定义集合\r\n     */\r\n    constructor(shader: Shader3D, subShaderIndex: number, passIndex: number, defines: string[]) {\r\n        this.setValue(shader, subShaderIndex, passIndex, defines);\r\n    }\r\n\r\n    /**\r\n     * 给着色器变种赋值。\r\n     * @param shader 着色器\r\n     * @param subShaderIndex 子着色器索引 \r\n     * @param passIndex 通道索引\r\n     * @param defineNames 宏定义集合\r\n     */\r\n    setValue(shader: Shader3D, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var validDefine: DefineDatas = pass._validDefine;\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++) {\r\n                        var defname: string = defineNames[i];\r\n                        if (!validDefine.has(Shader3D.getDefineByName(defname)))\r\n                            throw `ShaderVariantInfo:Invalid defineName ${defname} in ${shader._name} subShaderIndex of ${subShaderIndex} passIndex of ${passIndex}.`;\r\n                    }\r\n                }\r\n                else {\r\n                    throw `ShaderVariantInfo:Shader don't have passIndex of ${passIndex}.`;\r\n                }\r\n            }\r\n            else {\r\n                throw `ShaderVariantInfo:Shader don't have subShaderIndex of ${subShaderIndex}.`;\r\n            }\r\n        }\r\n        else {\r\n            throw `ShaderVariantInfo:Shader can't be null.`;\r\n        }\r\n        this._shader = shader;\r\n        this._subShaderIndex = subShaderIndex;\r\n        this._passIndex = passIndex;\r\n        this._defineNames = defineNames;\r\n    }\r\n\r\n    /**\r\n     * 是否相等。\r\n     * @param other 其它着色器变种\r\n     * @return 是否相等。\r\n     */\r\n    equal(other: ShaderVariant): boolean {\r\n        if (this._shader !== other._shader || this._subShaderIndex !== other._subShaderIndex || this._passIndex !== other._passIndex)\r\n            return false;\r\n\r\n        var defines: string[] = this._defineNames;\r\n        var otherDefines: string[] = other._defineNames;\r\n        if (defines.length !== otherDefines.length)\r\n            return false;\r\n        for (var i: number = 0, n: number = this._defineNames.length; i < n; i++) {\r\n            if (defines[i] !== otherDefines[i])\r\n                return false;\r\n        }\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 克隆。\r\n     * @return 着色器变种。 \r\n     */\r\n    clone(): ShaderVariant {\r\n        var dest: ShaderVariant = new ShaderVariant(this._shader, this._subShaderIndex, this._passIndex, this._defineNames.slice());\r\n        return dest;\r\n    }\r\n}\r\n\r\n/**\r\n * 着色器变种集合。\r\n */\r\nexport class ShaderVariantCollection {\r\n    /** @internal */\r\n    private _allCompiled: boolean = false;\r\n    /** @internal */\r\n    private _variants: ShaderVariant[] = [];\r\n\r\n    /**\r\n     * 是否已经全部编译。\r\n     */\r\n    get allCompiled(): boolean {\r\n        return this._allCompiled;\r\n    }\r\n\r\n    /**\r\n     * 包含的变种数量。\r\n     */\r\n    get variantCount(): number {\r\n        return this._variants.length;\r\n    }\r\n\r\n    /**\r\n     * 添加着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @param 是否添加成功。\r\n     */\r\n    add(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return false;\r\n        }\r\n        this._variants.push(variant.clone());\r\n        this._allCompiled = false;\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 移除着色器变种。\r\n     * @param variant 着色器变种。\r\n     * @return 是否移除成功。\r\n     */\r\n    remove(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant)) {\r\n                this._variants.splice(i, 1);\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 是否包含着色器变种。\r\n     * @param variant 着色器变种。\r\n     */\r\n    contatins(variant: ShaderVariant): boolean {\r\n        for (var i: number = 0, n: number = this._variants.length; i < n; i++) {\r\n            if (this._variants[i].equal(variant))\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * 通过索引获取着色器变种。\r\n     * @param index 索引。\r\n     * @returns 着色器变种。\r\n     */\r\n    getByIndex(index: number): ShaderVariant {\r\n        return this._variants[index];\r\n    }\r\n\r\n    /**\r\n     * 清空。\r\n     */\r\n    clear(): void {\r\n        this._variants.length = 0;\r\n    }\r\n\r\n    /**\r\n     * 执行编译。\r\n     */\r\n    compile(): void {\r\n        if (!this._allCompiled) {\r\n            var variants: ShaderVariant[] = this._variants;\r\n            for (var i: number = 0, n: number = variants.length; i < n; i++) {\r\n                var variant: ShaderVariant = variants[i];\r\n                Shader3D.compileShaderByDefineNames(variant._shader._name, variant._subShaderIndex, variant._passIndex, variant._defineNames);\r\n            }\r\n            this._allCompiled = true;\r\n        }\r\n    }\r\n}","import { BaseTexture } from \"../../resource/BaseTexture\";\r\nimport { Resource } from \"../../resource/Resource\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { IClone } from \"../../utils/IClone\";\r\nimport { UniformBufferObject } from \"../UniformBufferObject\";\r\nimport {\r\n\tUniformBufferParamsType,\r\n\tUnifromBufferData,\r\n} from \"../UniformBufferData\";\r\nimport { Color } from \"../../maths/Color\";\r\nimport { Matrix4x4 } from \"../../maths/Matrix4x4\";\r\nimport { Quaternion } from \"../../maths/Quaternion\";\r\nimport { Vector2 } from \"../../maths/Vector2\";\r\nimport { Vector3 } from \"../../maths/Vector3\";\r\nimport { Vector4 } from \"../../maths/Vector4\";\r\ntype uboParams = { ubo: UniformBufferObject; uboBuffer: UnifromBufferData };\r\nexport enum ShaderDataType {\r\n\tInt,\r\n\tBool,\r\n\tFloat,\r\n\tVector2,\r\n\tVector3,\r\n\tVector4,\r\n\tColor,\r\n\tMatrix4x4,\r\n\tTexture2D,\r\n\tTextureCube,\r\n\tBuffer\r\n}\r\n\r\nexport type ShaderDataItem = number | boolean | Vector2 | Vector3 | Vector4 | Color | Matrix4x4 | BaseTexture | Float32Array;\r\n\r\nexport function ShaderDataDefaultValue(type: ShaderDataType) {\r\n\tswitch (type) {\r\n\t\tcase ShaderDataType.Int:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Bool:\r\n\t\t\treturn false;\r\n\t\tcase ShaderDataType.Float:\r\n\t\t\treturn 0;\r\n\t\tcase ShaderDataType.Vector2:\r\n\t\t\treturn Vector2.ZERO;\r\n\t\tcase ShaderDataType.Vector3:\r\n\t\t\treturn Vector3.ZERO;\r\n\t\tcase ShaderDataType.Vector4:\r\n\t\t\treturn Vector4.ZERO;\r\n\t\tcase ShaderDataType.Color:\r\n\t\t\treturn Color.BLACK;\r\n\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\treturn Matrix4x4.DEFAULT;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n/**\r\n * 着色器数据类。\r\n */\r\nexport class ShaderData implements IClone {\r\n\t/**@internal 反向找Material*/\r\n\tprotected _ownerResource: Resource = null;\r\n\r\n\t/**@internal */\r\n\tprotected _gammaColorMap: Map<number, Color>;\r\n\t/**@internal */\r\n\tapplyUBO: boolean = false;\r\n\t/**@internal */\r\n\t_data: any = null;\r\n\r\n\t/** @internal */\r\n\t_defineDatas: DefineDatas = new DefineDatas();\r\n\r\n\t/**@internal */\r\n\t_uniformBufferDatas: Map<string, uboParams>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t * key: uniform property id\r\n\t * value: UniformBufferObject\r\n\t * 保存 每个 uniform id 所在的 ubo\r\n\t */\r\n\t_uniformBuffersMap: Map<number, UniformBufferObject>;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tget uniformBufferDatas() {\r\n\t\treturn this._uniformBufferDatas;\r\n\t}\r\n\r\n\tget uniformBuffersMap(): Map<number, UniformBufferObject> {\r\n\t\treturn this._uniformBuffersMap;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @internal\t\r\n\t */\r\n\tconstructor(ownerResource: Resource = null) {\r\n\t\tthis._ownerResource = ownerResource;\r\n\t\tthis._initData();\r\n\r\n\t\tthis._uniformBufferDatas = new Map();\r\n\t\tthis._uniformBuffersMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param key \r\n\t * @param ubo \r\n\t * @param uboData \r\n\t */\r\n\t_addCheckUBO(key: string, ubo: UniformBufferObject, uboData: UnifromBufferData) {\r\n\t\tthis._uniformBufferDatas.set(key, { ubo: ubo, uboBuffer: uboData });\r\n\t\tuboData._uniformParamsState.forEach(\r\n\t\t\t(value: UniformBufferParamsType, id: number) => {\r\n\t\t\t\tthis.uniformBuffersMap.set(id, ubo);\r\n\t\t\t}\r\n\t\t);\r\n\t\tubo.setDataByUniformBufferData(uboData);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t_initData(): void {\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tgetData(): any {\r\n\t\treturn this._data;\r\n\t}\r\n\r\n\tapplyUBOData() {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tvalue.ubo.setDataByUniformBufferData(value.uboBuffer);\r\n\t\t});\r\n\t\tthis.applyUBO = false;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\taddDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.add(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 移除Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\tremoveDefine(define: ShaderDefine): void {\r\n\t\tthis._defineDatas.remove(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 是否包含Shader宏定义。\r\n\t * @param value 宏定义。\r\n\t */\r\n\thasDefine(define: ShaderDefine): boolean {\r\n\t\treturn this._defineDatas.has(define);\r\n\t}\r\n\r\n\t/**\r\n\t * 清空宏定义。\r\n\t */\r\n\tclearDefine(): void {\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * 获取布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @return  布尔。\r\n\t */\r\n\tgetBool(index: number): boolean {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置布尔。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 布尔。\r\n\t */\r\n\tsetBool(index: number, value: boolean): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 获取整形。\r\n\t * @param\tindex shader索引。\r\n\t * @return  整形。\r\n\t */\r\n\tgetInt(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置整型。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 整形。\r\n\t */\r\n\tsetInt(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getInt(index));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @return\t浮点。\r\n\t */\r\n\tgetNumber(index: number): number {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置浮点。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 浮点。\r\n\t */\r\n\tsetNumber(index: number, value: number): void {\r\n\t\tthis._data[index] = value;\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getNumber(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector2向量。\r\n\t */\r\n\tgetVector2(index: number): Vector2 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector2向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector2向量。\r\n\t */\r\n\tsetVector2(index: number, value: Vector2): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector2(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @return Vector3向量。\r\n\t */\r\n\tgetVector3(index: number): Vector3 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Vector3向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue Vector3向量。\r\n\t */\r\n\tsetVector3(index: number, value: Vector3): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector3(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色。\r\n\t * @param \tindex shader索引。\r\n\t * @return  向量。\r\n\t */\r\n\tgetVector(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置向量。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 向量。\r\n\t */\r\n\tsetVector(index: number, value: Vector4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getVector(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取颜色\r\n\t * @param index 索引\r\n\t * @returns 颜色\r\n\t */\r\n\tgetColor(index: number): Color {\r\n\t\treturn this._gammaColorMap.get(index);\r\n\t}\r\n\r\n\t/**\r\n\t * 设置颜色\r\n\t * @param index 索引\r\n\t * @param value 颜色值\r\n\t */\r\n\tsetColor(index: number, value: Color): void {\r\n\t\tif (!value)\r\n\t\t\treturn;\r\n\t\tif (this._data[index]) {\r\n\t\t\tlet gammaColor = this._gammaColorMap.get(index);\r\n\t\t\tvalue.cloneTo(gammaColor);\r\n\t\t\tlet linearColor = this._data[index];\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linearColor = new Vector4();\r\n\t\t\tlinearColor.x = Color.gammaToLinearSpace(value.r);\r\n\t\t\tlinearColor.y = Color.gammaToLinearSpace(value.g);\r\n\t\t\tlinearColor.z = Color.gammaToLinearSpace(value.b);\r\n\t\t\tlinearColor.w = value.a;\r\n\t\t\tthis._data[index] = linearColor;\r\n\t\t\tthis._gammaColorMap.set(index, value.clone());\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getLinearColor(index));\r\n\t\t\tthis.applyUBO = true;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t * @param index \r\n\t */\r\n\tgetLinearColor(index: number): Vector4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 获取矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @return  矩阵。\r\n\t */\r\n\tgetMatrix4x4(index: number): Matrix4x4 {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置矩阵。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  矩阵。\r\n\t */\r\n\tsetMatrix4x4(index: number, value: Matrix4x4): void {\r\n\t\tif (this._data[index]) {\r\n\t\t\tvalue.cloneTo(this._data[index]);\r\n\t\t} else {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t}\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getMatrix4x4(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 获取Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @return\r\n\t */\r\n\tgetBuffer(index: number): Float32Array {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 设置Buffer。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue  buffer数据。\r\n\t */\r\n\tsetBuffer(index: number, value: Float32Array): void {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\t/**\r\n\t * 设置纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @param\tvalue 纹理。\r\n\t */\r\n\tsetTexture(index: number, value: BaseTexture): void {\r\n\t\tvar lastValue: BaseTexture = this._data[index];\r\n\t\tif (value) {\r\n\t\t\tlet shaderDefine = ShaderDefine._texGammaDefine[index];\r\n\t\t\tif (shaderDefine && value && value.gammaCorrection > 1) {\r\n\t\t\t\tthis.addDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// todo 自动的\r\n\t\t\t\tshaderDefine && this.removeDefine(shaderDefine);\r\n\t\t\t}\r\n\t\t}\r\n\t\t//维护Reference\r\n\t\tthis._data[index] = value;\r\n\t\tlastValue && lastValue._removeReference();\r\n\t\tvalue && value._addReference();\r\n\t}\r\n\t/**\r\n\t * 获取纹理。\r\n\t * @param\tindex shader索引。\r\n\t * @return  纹理。\r\n\t */\r\n\tgetTexture(index: number): BaseTexture {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tgetSourceIndex(value: any) {\r\n\t\tfor (var i in this._data) {\r\n\t\t\tif (this._data[i] == value)\r\n\t\t\t\treturn Number(i);\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t/**\r\n\t * set shader data\r\n\t * @deprecated\r\n\t * @param index uniformID\r\n\t * @param value data\r\n\t */\r\n\tsetValueData(index: number, value: any) {\r\n\t\t//Color 需要特殊处理\r\n\t\tif (value instanceof Color) {\r\n\t\t\tthis.setColor(index, value);\r\n\t\t\treturn;\r\n\t\t} else if (!value) {\r\n\t\t\t//value null\r\n\t\t\tthis._data[index] = value;\r\n\t\t} else if (!!value.clone) {\r\n\t\t\tthis._data[index] = value.clone();\r\n\t\t} else this._data[index] = value;\r\n\r\n\t\tlet ubo = this._uniformBuffersMap.get(index);\r\n\t\tif (ubo) {\r\n\t\t\tthis._uniformBufferDatas.get(ubo._name).uboBuffer._setData(index, this.getValueData(index));\r\n\t\t\tthis.applyUBO = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param index \r\n\t * @param value \r\n\t */\r\n\tsetUniformBuffer(index: number, value: UniformBufferObject) {\r\n\t\tthis._data[index] = value;\r\n\t}\r\n\r\n\tgetUniformBuffer(index: number): UniformBufferObject {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\tsetShaderData(uniformIndex: number, type: ShaderDataType, value: ShaderDataItem | Quaternion) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\tthis.setInt(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\tthis.setBool(uniformIndex, <boolean>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\tthis.setNumber(uniformIndex, <number>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\tthis.setVector2(uniformIndex, <Vector2>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\tthis.setVector3(uniformIndex, <Vector3>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\tthis.setVector(uniformIndex, <Vector4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\tthis.setColor(uniformIndex, <Color>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\tthis.setMatrix4x4(uniformIndex, <Matrix4x4>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\t\tthis.setTexture(uniformIndex, <BaseTexture>value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\tthis.setBuffer(uniformIndex, <Float32Array>value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unkone shader data type.\";\r\n\t\t}\r\n\t}\r\n\r\n\tgetShaderData(uniformIndex: number, type: ShaderDataType) {\r\n\t\tswitch (type) {\r\n\t\t\tcase ShaderDataType.Int:\r\n\t\t\t\treturn this.getInt(uniformIndex);\r\n\t\t\tcase ShaderDataType.Bool:\r\n\t\t\t\treturn this.getBool(uniformIndex);\r\n\t\t\tcase ShaderDataType.Float:\r\n\t\t\t\treturn this.getNumber(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector2:\r\n\t\t\t\treturn this.getVector2(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector3:\r\n\t\t\t\treturn this.getVector3(uniformIndex);\r\n\t\t\tcase ShaderDataType.Vector4:\r\n\t\t\t\treturn this.getVector(uniformIndex);\r\n\t\t\tcase ShaderDataType.Color:\r\n\t\t\t\treturn this.getColor(uniformIndex);\r\n\t\t\tcase ShaderDataType.Matrix4x4:\r\n\t\t\t\treturn this.getMatrix4x4(uniformIndex);\r\n\t\t\tcase ShaderDataType.Texture2D:\r\n\t\t\tcase ShaderDataType.TextureCube:\r\n\t\t\t\treturn this.getTexture(uniformIndex);\r\n\t\t\tcase ShaderDataType.Buffer:\r\n\t\t\t\treturn this.getBuffer(uniformIndex);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow \"unkone shader data type.\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get shader data\r\n\t * @deprecated\r\n\t * @param index uniform ID\r\n\t * @returns \r\n\t */\r\n\tgetValueData(index: number): any {\r\n\t\treturn this._data[index];\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @param\tdestObject 克隆源。\r\n\t */\r\n\tcloneTo(destObject: ShaderData): void {\r\n\t\tvar dest: ShaderData = <ShaderData>destObject;\r\n\t\tvar destData: { [key: string]: number | boolean | Vector2 | Vector3 | Vector4 | Matrix4x4 | BaseTexture } = dest._data;\r\n\t\tfor (var k in this._data) {//TODO:需要优化,杜绝is判断，慢\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value != null) {\r\n\t\t\t\tif (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"number\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (typeof value == \"boolean\") {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t} else if (value instanceof Vector2) {\r\n\t\t\t\t\tvar v2 = destData[k] || (destData[k] = new Vector2());\r\n\t\t\t\t\t(<Vector2>value).cloneTo(v2);\r\n\t\t\t\t\tdestData[k] = v2;\r\n\t\t\t\t} else if (value instanceof Vector3) {\r\n\t\t\t\t\tvar v3 = destData[k] || (destData[k] = new Vector3());\r\n\t\t\t\t\t(<Vector3>value).cloneTo(v3);\r\n\t\t\t\t\tdestData[k] = v3;\r\n\t\t\t\t} else if (value instanceof Vector4) {\r\n\t\t\t\t\tlet color = this.getColor(parseInt(k));\r\n\t\t\t\t\tif (color) {\r\n\t\t\t\t\t\tlet clonecolor = color.clone();\r\n\t\t\t\t\t\tdestObject.setColor(parseInt(k), clonecolor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar v4 = destData[k] || (destData[k] = new Vector4());\r\n\t\t\t\t\t\t(<Vector4>value).cloneTo(v4);\r\n\t\t\t\t\t\tdestData[k] = v4;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value instanceof Matrix4x4) {\r\n\t\t\t\t\tvar mat = destData[k] || (destData[k] = new Matrix4x4());\r\n\t\t\t\t\t(<Matrix4x4>value).cloneTo(mat);\r\n\t\t\t\t\tdestData[k] = mat;\r\n\t\t\t\t} else if (value instanceof BaseTexture) {\r\n\t\t\t\t\tdestData[k] = value;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t} else if (value instanceof Resource) {\r\n\t\t\t\t\tdestData[k] = value as any;\r\n\t\t\t\t\tvalue._addReference();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._defineDatas.cloneTo(dest._defineDatas);\r\n\t\tthis._gammaColorMap.forEach((color, index) => {\r\n\t\t\tdestObject._gammaColorMap.set(index, color.clone());\r\n\t\t});\r\n\r\n\t\t//UBO Clone\r\n\t\tthis._cloneUBO(dest._uniformBufferDatas);\r\n\t\tdest.applyUBO = true;\r\n\t}\r\n\r\n\t/**\r\n\t * clone UBO Data\r\n\t * @internal\r\n\t * @param uboDatas \r\n\t */\r\n\t_cloneUBO(uboDatas: Map<string, uboParams>) {\r\n\t\tthis._uniformBufferDatas.forEach((value, key) => {\r\n\t\t\tuboDatas.has(key) && (value.uboBuffer.cloneTo(uboDatas.get(key).uboBuffer));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * 克隆。\r\n\t * @return\t 克隆副本。\r\n\t */\r\n\tclone(): any {\r\n\t\tvar dest: ShaderData = new ShaderData();\r\n\t\tthis.cloneTo(dest);\r\n\t\treturn dest;\r\n\t}\r\n\r\n\treset() {\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = {};\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._uniformBufferDatas.clear();\r\n\t\tthis.applyUBO = false;\r\n\t\tthis._uniformBuffersMap.clear();\r\n\t\tthis._defineDatas.clear();\r\n\t}\r\n\r\n\tdestroy(): void {\r\n\t\tthis._defineDatas.destroy();\r\n\t\tthis._defineDatas = null;\r\n\t\tfor (var k in this._data) {\r\n\t\t\t//维护Refrence\r\n\t\t\tvar value: any = this._data[k];\r\n\t\t\tif (value instanceof Resource) {\r\n\t\t\t\tvalue._removeReference();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._data = null;\r\n\t\tthis._gammaColorMap.clear();\r\n\t\tthis._gammaColorMap = null;\r\n\t\t// // 使用对象解析\r\n\t\tdelete this._uniformBufferDatas;\r\n\t\tdelete this._uniformBuffersMap;\r\n\t\tthis._uniformBufferDatas = null;\r\n\t\tthis._uniformBuffersMap = null;\r\n\t}\r\n}\r\n","import { Color } from \"../maths/Color\";\r\nimport { Matrix4x4 } from \"../maths/Matrix4x4\";\r\nimport { Vector2 } from \"../maths/Vector2\";\r\nimport { Vector3 } from \"../maths/Vector3\";\r\nimport { Vector4 } from \"../maths/Vector4\";\r\nimport { Shader3D } from \"./RenderShader/Shader3D\";\r\n\r\n/**\r\n *描述UniformBuffer参数类型\r\n */\r\nexport enum UniformBufferParamsType {\r\n    Number,\r\n    Vector2,\r\n    Vector3,\r\n    Vector4,\r\n    Matrix4x4,\r\n    Vector4Array,//Numberarray, vec2array and vec3array occupy the same memory as vec4array, so only vector4 is provided\r\n    MatrixArray\r\n}\r\n\r\n/**\r\n * 实例化UniformBuffer数据\r\n * 注：要与glsl中Uniform block结构相同\r\n */\r\nexport class UnifromBufferData {\r\n\r\n    /**\r\n     * @internal\r\n     * key: UniformID,value: x:offset y:length z:\r\n     */\r\n    protected _layoutMap: any;\r\n\r\n    /**\r\n     * @internal\r\n     * data length\r\n     */\r\n    protected _bytelength: number;\r\n\r\n    /**\r\n     * @internal\r\n     * params describe\r\n     */\r\n    _uniformParamsState: Map<number, UniformBufferParamsType>;\r\n\r\n    /**\r\n     * @internal\r\n     * update frome x to max,x:min,y:max\r\n     */\r\n    _updateFlag: Vector2;\r\n\r\n    /**\r\n     * Buffer Data\r\n     */\r\n    _buffer: Float32Array;\r\n\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>) {\r\n        // todo 后面改掉 不用map 初始化\r\n        this._uniformParamsState = new Map(uniformParamsStat);\r\n        this._createBuffer();\r\n        this._updateFlag = new Vector2();\r\n        this._resetUpdateFlag();\r\n    }\r\n\r\n    /**\r\n     * @internal \r\n     * createBuffer\r\n     */\r\n    protected _createBuffer() {\r\n        var dataPos = 0;\r\n        this._layoutMap = {};\r\n        const elementSize = 4;\r\n        this._uniformParamsState.forEach((key, value) => {\r\n            dataPos += this._addUniformParams(value, key, dataPos);\r\n        });\r\n        //这里需要对手机平台做兼容\r\n        //this._bytelength = dataPos * elementSize;\r\n        this._bytelength = Math.ceil(dataPos / 4) * 4 * elementSize;\r\n        this._buffer = new Float32Array(dataPos);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _getArraySize(key: string) {\r\n        let left = key.indexOf(\"[\");\r\n        let right = key.indexOf(\"]\");\r\n        if (left != -1 && right != -1 && left < right) {\r\n            return parseFloat(key.substring(left + 1, right));\r\n        } else\r\n            throw key + \" is illegal \"\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * layout UniformBuffer pitch std140\r\n     */\r\n    protected _addUniformParams(uniformID: number, value: UniformBufferParamsType, offset: number): number {\r\n        let size: number = 0;\r\n        let posAdd: number = 0;\r\n        let posG = offset % 4;\r\n        let offsetadd;\r\n        switch (value) {\r\n            case UniformBufferParamsType.Number:\r\n                size = 1;\r\n                posAdd = 1;\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                size = 2;\r\n                switch (posG) {\r\n                    case 0:\r\n                    case 2:\r\n                        posAdd = 2;\r\n                        break;\r\n                    case 1:\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                size = 3;\r\n                posAdd = 3;\r\n                switch (posG) {\r\n                    case 1:\r\n                    case 2:\r\n                    case 3:\r\n                        offset += (4 - posG);\r\n                        posAdd = (4 - posG) + 3;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                //case UniformBufferParamsType.Color:\r\n                size = 4;\r\n                switch (posG) {\r\n                    case 0:\r\n                        posAdd = 4;\r\n                        break;\r\n                    case 1:\r\n                        offset += 3;\r\n                        posAdd = 7;\r\n                        break;\r\n                    case 2:\r\n                        offset += 2;\r\n                        posAdd = 6;\r\n                        break;\r\n                    case 3:\r\n                        offset += 1;\r\n                        posAdd = 5;\r\n                        break;\r\n                }\r\n                break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                size = 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 4;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                size = this._getArraySize(Shader3D.propertyIDToName(uniformID)) * 16;\r\n                offsetadd = posG ? 4 - posG : posG;\r\n                offset += offsetadd\r\n                posAdd = size + offsetadd;\r\n                break;\r\n            default:\r\n                throw \"Unifrom Buffer Params Type is illegal \"\r\n        }\r\n        const paramsInfo = new Vector2(offset, size);\r\n        this._layoutMap[uniformID] = paramsInfo;\r\n        return posAdd;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _getParamsInfo(key: number): Vector2 {\r\n        return this._layoutMap[key];\r\n    }\r\n\r\n    /**\r\n     * @interanl\r\n     * set upload range\r\n     */\r\n    private _setUpdateFlag(min: number, max: number) {\r\n        if (min < this._updateFlag.x)\r\n            this._updateFlag.x = min;\r\n        if (max > this._updateFlag.y)\r\n            this._updateFlag.y = max;\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    destroy() {\r\n        delete this._buffer;\r\n        this._uniformParamsState.clear();\r\n        this._uniformParamsState = null;\r\n        this._layoutMap = null;\r\n        this._updateFlag = null;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resetUpdateFlag() {\r\n        this._updateFlag.setValue(this._buffer.length, 0);\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param uniformID \r\n     * @returns \r\n     */\r\n    _has(uniformID: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        return !!info;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * set buffer params Data\r\n     */\r\n    _setData(uniformID: number, value: any) {\r\n\r\n        let uniformType = this._uniformParamsState.get(uniformID);\r\n\r\n        switch (uniformType) {\r\n            case UniformBufferParamsType.Number:\r\n                this.setNumberbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector2:\r\n                this.setVector2byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector3:\r\n                this.setVector3byIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4:\r\n                this.setVector4byIndex(uniformID, value);\r\n                break;\r\n            // case UniformBufferParamsType.Color:\r\n            //     this.setColorbyIndex(uniformID, value);\r\n            //     break;\r\n            case UniformBufferParamsType.Matrix4x4:\r\n                this.setMatrixbyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.Vector4Array:\r\n                this.setVector4ArraybyIndex(uniformID, value);\r\n                break;\r\n            case UniformBufferParamsType.MatrixArray:\r\n                this.setMatrixArraybyIndex(uniformID, value);\r\n                break;\r\n            // todo\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Buffer byte length\r\n     * @returns \r\n     */\r\n    getbyteLength(): number {\r\n        return this._bytelength;\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsName\r\n     * @param name uniform params name\r\n     * @param value vector4Array data\r\n     */\r\n    setVector4Array(name: string, value: Vector4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4ArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4Array by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value vector4Array data\r\n     * @returns \r\n     */\r\n    setVector4ArraybyIndex(uniformID: number, value: Vector4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let vec = value[i];\r\n            this._buffer[pos++] = vec.x;\r\n            this._buffer[pos++] = vec.y;\r\n            this._buffer[pos++] = vec.z;\r\n            this._buffer[pos++] = vec.w;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsName\r\n     * @param name uniform params name\r\n     * @param value MatrixArray data\r\n     */\r\n    setMatrixArray(name: string, value: Matrix4x4[]) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixArraybyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set MatrixArray by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value MatrixArray data\r\n     * @returns \r\n     */\r\n    setMatrixArraybyIndex(uniformID: number, value: Matrix4x4[]) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        let count = info.y / 4;\r\n        for (let i = 0; i < count; i++) {\r\n            let mat = value[i];\r\n            this._buffer.set(mat.elements, pos);\r\n            pos += 16;\r\n        }\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsName\r\n     * @param name uniform params name\r\n     * @param value Number data\r\n     */\r\n    setNumber(name: string, value: number) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setNumberbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Number by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Number data\r\n     * @returns \r\n     */\r\n    setNumberbyIndex(uniformID: number, value: number) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector2 data\r\n     */\r\n    setVector2(name: string, value: Vector2) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector2byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector2 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector2 data\r\n     * @returns \r\n     */\r\n    setVector2byIndex(uniformID: number, value: Vector2) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector3 data\r\n     */\r\n    setVector3(name: string, value: Vector3) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector3byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector3 by uniformID\r\n     * @param uniformID uniform params index\r\n     * @param value Vector3 data\r\n     * @returns \r\n     */\r\n    setVector3byIndex(uniformID: number, value: Vector3) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsName\r\n     * @param name uniform params name\r\n     * @param value Vector4 data\r\n     */\r\n    setVector4(name: string, value: Vector4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setVector4byIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Vector4 by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Vector4 data\r\n     * @returns \r\n     */\r\n    setVector4byIndex(uniformID: number, value: Vector4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = value.x;\r\n        this._buffer[pos++] = value.y;\r\n        this._buffer[pos++] = value.z;\r\n        this._buffer[pos++] = value.w;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n    /**\r\n     * set Color by paramsName\r\n     * @param name uniform params name\r\n     * @param value Color data\r\n     */\r\n    setColor(name: string, value: Color) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setColorbyIndex(uniformID, value);\r\n    }\r\n\r\n    setColorbyIndex(uniformID: number, value: Color) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.r);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.g);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.b);\r\n        this._buffer[pos++] = Color.gammaToLinearSpace(value.a);\r\n        this._setUpdateFlag(info.x, pos);\r\n\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsName\r\n     * @param name uniform params name\r\n     * @param value Matrix data\r\n     */\r\n    setMatrix(name: string, value: Matrix4x4) {\r\n        const uniformID: number = Shader3D.propertyNameToID(name);\r\n        this.setMatrixbyIndex(uniformID, value);\r\n    }\r\n\r\n    /**\r\n     * set Matrix by paramsIndex\r\n     * @param uniformID uniform params index\r\n     * @param value Matrix data\r\n     * @returns \r\n     */\r\n    setMatrixbyIndex(uniformID: number, value: Matrix4x4) {\r\n        const info = this._getParamsInfo(uniformID);\r\n        if (!info) return;\r\n        let pos = info.x;\r\n        this._buffer.set(value.elements, pos);\r\n        pos += 16;\r\n        this._setUpdateFlag(info.x, pos);\r\n    }\r\n\r\n\r\n    clone(): UnifromBufferData {\r\n        // todo clone 更改\r\n        let ubd = new UnifromBufferData(this._uniformParamsState);\r\n        this.cloneTo(ubd);\r\n        return ubd\r\n    }\r\n\r\n    cloneTo(destObject: UnifromBufferData) {\r\n        if (destObject._bytelength == this._bytelength) {\r\n            destObject._buffer = Float32Array.from(this._buffer);\r\n            this._updateFlag.setValue(0, this._buffer.length);\r\n        }\r\n    }\r\n}","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderCapable } from \"../../RenderEngine/RenderEnum/RenderCapable\";\r\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderInstance } from \"../../RenderEngine/RenderShader/ShaderInstance\";\r\nimport { SubShader } from \"../../RenderEngine/RenderShader/SubShader\";\r\nimport { WebGL } from \"../WebGL\";\r\nimport { IShaderCompiledObj } from \"./ShaderCompile\";\r\nimport { ShaderNode } from \"./ShaderNode\";\r\n\r\nexport class ShaderCompileDefineBase {\r\n    /** @internal */\r\n    static _defineString: Array<string> = [];\r\n    /** @internal */\r\n    static _debugDefineString: string[] = [];\r\n    /** @internal */\r\n    static _debugDefineMask: number[] = [];\r\n    /** @internal */\r\n    public _VS: ShaderNode;\r\n    /** @internal */\r\n    public _PS: ShaderNode;\r\n    /** @internal */\r\n    _defs: Set<string>;\r\n    /** @internal */\r\n    _validDefine: DefineDatas = new DefineDatas();\r\n    /** @internal */\r\n    protected _cacheShaderHierarchy: number = 1;\r\n    /** @internal */\r\n    protected _owner: SubShader;\r\n    /** @internal */\r\n    name: string;\r\n    /** @internal */\r\n    protected _cacheSharders: { [key: number]: { [key: number]: { [key: number]: ShaderInstance } } } = {};\r\n\r\n    constructor(owner: any, name: string, compiledObj: IShaderCompiledObj) {\r\n        this._owner = owner;\r\n        this.name = name;\r\n        this._VS = compiledObj.vsNode;\r\n        this._PS = compiledObj.psNode;\r\n        this._defs = compiledObj.defs;\r\n        for (let k of compiledObj.defs)\r\n            this._validDefine.add(Shader3D.getDefineByName(k));\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _resizeCacheShaderMap(cacheMap: any, hierarchy: number, resizeLength: number): void {\r\n        var end: number = this._cacheShaderHierarchy - 1;\r\n        if (hierarchy == end) {\r\n            for (var k in cacheMap) {\r\n                var shader = cacheMap[k];\r\n                for (var i: number = 0, n: number = resizeLength - end; i < n; i++) {\r\n                    if (i == n - 1)\r\n                        cacheMap[0] = shader;//0替代(i == 0 ? k : 0),只扩不缩\r\n                    else\r\n                        cacheMap = cacheMap[i == 0 ? k : 0] = {};\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            ++hierarchy;\r\n            for (var k in cacheMap)\r\n                this._resizeCacheShaderMap(cacheMap[k], hierarchy, resizeLength);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderCompileDefineBase._debugDefineString;\r\n        var debugDefineMask: number[] = ShaderCompileDefineBase._debugDefineMask;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n        }\r\n        //compileDefine.addDefineDatas(Scene3D._configDefineValues);\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        var defineString: string[] = ShaderCompileDefineBase._defineString;\r\n        //TODO\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n\r\n        // var config: Config3D = Config3D._config;\r\n        // var clusterSlices: Vector3 = config.lightClusterCount;\r\n        var defMap: any = {};\r\n\r\n        var vertexHead: string;\r\n        var fragmentHead: string;\r\n        var defineStr: string = \"\";\r\n\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.GRAPHICS_API_GLES3)) {\r\n            vertexHead =\r\n                `#version 300 es\\n\r\n                #define attribute in\r\n                #define varying out\r\n                #define textureCube texture\r\n                #define texture2D texture\\n`;\r\n            fragmentHead =\r\n                `#version 300 es\\n\r\n                #define varying in\r\n                out highp vec4 pc_fragColor;\r\n                #define gl_FragColor pc_fragColor\r\n                #define gl_FragDepthEXT gl_FragDepth\r\n                #define texture2D texture\r\n                #define textureCube texture\r\n                #define texture2DProj textureProj\r\n                #define texture2DLodEXT textureLod\r\n                #define texture2DProjLodEXT textureProjLod\r\n                #define textureCubeLodEXT textureLod\r\n                #define texture2DGradEXT textureGrad\r\n                #define texture2DProjGradEXT textureProjGrad\r\n                #define textureCubeGradEXT textureGrad\\n`;\r\n        }\r\n        else {\r\n            vertexHead = \"\"\r\n            fragmentHead =\r\n                `#ifdef GL_EXT_shader_texture_lod\r\n                    #extension GL_EXT_shader_texture_lod : enable\r\n                #endif\r\n                #if !defined(GL_EXT_shader_texture_lod)\r\n                    #define texture1DLodEXT texture1D\r\n                    #define texture2DLodEXT texture2D\r\n                    #define texture2DProjLodEXT texture2DProj\r\n                    #define texture3DLodEXT texture3D\r\n                    #define textureCubeLodEXT textureCube\r\n                #endif\\n`;\r\n        }\r\n\r\n\r\n        for (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n            var def: string = defineString[i];\r\n            defineStr += \"#define \" + def + \"\\n\";\r\n            defMap[def] = true;\r\n        }\r\n\r\n        var vs: any[] = this._VS.toscript(defMap, []);\r\n        var vsVersion: string = '';\r\n        if (vs[0].indexOf('#version') == 0) {\r\n            vsVersion = vs[0] + '\\n';\r\n            vs.shift();\r\n        }\r\n\r\n        var ps: any[] = this._PS.toscript(defMap, []);\r\n        var psVersion: string = '';\r\n        if (ps[0].indexOf('#version') == 0) {\r\n            psVersion = ps[0] + '\\n';\r\n            ps.shift();\r\n        }\r\n\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(vsVersion + vertexHead + defineStr + vs.join('\\n'), psVersion + fragmentHead + defineStr + ps.join('\\n'), this._owner._attributeMap, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defMask: string = \"\";\r\n\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++)\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\r\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this.name + \" \" + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\r\n        }\r\n\r\n        return shader;\r\n    }\r\n}","\r\nimport { ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { UniformMapType } from \"./SubShader\";\r\n\r\n/**\r\n * @internal\r\n */\r\nexport class GLSLCodeGenerator {\r\n\r\n    static glslAttributeString(attributeMap: { [name: string]: [number, ShaderDataType] }) {\r\n\r\n        let res = \"\";\r\n        for (const key in attributeMap) {\r\n            let type = getAttributeType(attributeMap[key][1]);\r\n            res = `${res}attribute ${type} ${key};\\n`;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    static glslUniformString(uniformsMap: UniformMapType, useUniformBlock: boolean) {\r\n\r\n        if (useUniformBlock) {\r\n            let blocksStr = \"\";\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    blocksStr += `uniform ${key} {\\n`;\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        blocksStr += `${getAttributeType(dataType)} ${uniformName};\\n`;\r\n                    }\r\n                    blocksStr += \"};\\n\";\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\r\n                }\r\n            }\r\n            return blocksStr + uniformsStr;\r\n\r\n        }\r\n        else {\r\n            let uniformsStr = \"\";\r\n            for (const key in uniformsMap) {\r\n                // uniform block\r\n                if (typeof uniformsMap[key] == \"object\") {\r\n                    let blockUniforms = <{ [uniformName: string]: ShaderDataType }>uniformsMap[key];\r\n                    for (const uniformName in blockUniforms) {\r\n                        let dataType = blockUniforms[uniformName];\r\n                        uniformsStr += `uniform ${getAttributeType(dataType)} ${uniformName};\\n`;\r\n                    }\r\n                }\r\n                else { // uniform\r\n                    let dataType = <ShaderDataType>uniformsMap[key];\r\n                    uniformsStr += `uniform ${getAttributeType(dataType)} ${key};\\n`;\r\n                }\r\n            }\r\n            return uniformsStr;\r\n        }\r\n\r\n    }\r\n}\r\n\r\nfunction getAttributeType(type: ShaderDataType) {\r\n    switch (type) {\r\n        case ShaderDataType.Int:\r\n            return \"int\";\r\n        case ShaderDataType.Bool:\r\n            return \"bool\";\r\n        case ShaderDataType.Float:\r\n            return \"float\";\r\n        case ShaderDataType.Vector2:\r\n            return \"vec2\";\r\n        case ShaderDataType.Vector3:\r\n            return \"vec3\";\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return \"vec4\";\r\n        case ShaderDataType.Matrix4x4:\r\n            return \"mat4\";\r\n        case ShaderDataType.Texture2D:\r\n            return \"sampler2D\";\r\n        case ShaderDataType.TextureCube:\r\n            return \"samplerCube\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}","import { Config3D } from \"../../../Config3D\";\r\nimport { WebGL } from \"../../webgl/WebGL\";\r\nimport { SubShader } from \"./SubShader\";\r\nimport { ShaderCompileDefineBase } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { RenderParams } from \"../../RenderEngine/RenderEnum/RenderParams\";\r\nimport { DefineDatas } from \"../../RenderEngine/RenderShader/DefineDatas\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderVariant } from \"../../RenderEngine/RenderShader/ShaderVariantCollection\";\r\nimport { IShaderCompiledObj } from \"../../webgl/utils/ShaderCompile\";\r\nimport { Vector3 } from \"../../maths/Vector3\";\r\nimport { GLSLCodeGenerator } from \"./GLSLCodeGenerator\";\r\nimport { RenderState } from \"./RenderState\";\r\nimport { ShaderInstance } from \"./ShaderInstance\";\r\nimport { RenderCapable } from \"../RenderEnum/RenderCapable\";\r\n\r\n/**\r\n * <code>ShaderPass</code> 类用于实现ShaderPass。\r\n */\r\nexport class ShaderPass extends ShaderCompileDefineBase {\r\n\r\n    /** @internal */\r\n    private static _defineStrings: Array<string> = [];\r\n    /** @internal */\r\n    private static _debugDefineStrings: string[] = [];\r\n    /** @internal */\r\n    private static _debugDefineMasks: number[] = [];\r\n    /** @internal */\r\n    private _renderState: RenderState;\r\n    /** @internal */\r\n    _tags: any = {};\r\n    /** @internal */\r\n    _pipelineMode: string;\r\n    /** 优先 ShaderPass 渲染状态 */\r\n    statefirst: boolean = false;\r\n\r\n    /**\r\n     * 渲染状态。\r\n     */\r\n    get renderState(): RenderState {\r\n        return this._renderState;\r\n    }\r\n\r\n    constructor(owner: SubShader, compiledObj: IShaderCompiledObj) {\r\n        super(owner, null, compiledObj);\r\n        this._renderState = LayaGL.renderOBJCreate.createRenderState();\r\n        this._renderState.setNull();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _addDebugShaderVariantCollection(compileDefine: DefineDatas, outDebugDefines: string[], outDebugDefineMask: number[]): void {\r\n        var dbugShaderVariantInfo: ShaderVariant = Shader3D._debugShaderVariantInfo;\r\n        var debugSubShader: SubShader = this._owner;\r\n        var debugShader: Shader3D = debugSubShader._owner;\r\n        var mask: number[] = compileDefine._mask;\r\n        Shader3D._getNamesByDefineData(compileDefine, outDebugDefines);\r\n        outDebugDefineMask.length = mask.length;\r\n        for (var i: number = 0, n: number = mask.length; i < n; i++)\r\n            outDebugDefineMask[i] = mask[i];\r\n\r\n        if (dbugShaderVariantInfo)\r\n            dbugShaderVariantInfo.setValue(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        else\r\n            Shader3D._debugShaderVariantInfo = dbugShaderVariantInfo = new ShaderVariant(debugShader, debugShader._subShaders.indexOf(debugSubShader), debugSubShader._passes.indexOf(this), outDebugDefines);\r\n        Shader3D.debugShaderVariantCollection.add(dbugShaderVariantInfo);\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     * @internal\r\n     */\r\n    withCompile(compileDefine: DefineDatas): ShaderInstance {\r\n        var debugDefineString: string[] = ShaderPass._debugDefineStrings;\r\n        var debugDefineMask: number[] = ShaderPass._debugDefineMasks;\r\n        var debugMaskLength: number;\r\n        compileDefine._intersectionDefineDatas(this._validDefine);\r\n        if (Shader3D.debugMode) {//add shader variant info to debug ShaderVariantCollection\r\n            debugMaskLength = compileDefine._length;\r\n            this._addDebugShaderVariantCollection(compileDefine, debugDefineString, debugDefineMask);\r\n        }\r\n\r\n        var cacheShaders: any = this._cacheSharders;\r\n        var maskLength: number = compileDefine._length;\r\n        if (maskLength > this._cacheShaderHierarchy) {//扩充已缓存ShaderMap\r\n            this._resizeCacheShaderMap(cacheShaders, 0, maskLength);\r\n            this._cacheShaderHierarchy = maskLength;\r\n        }\r\n\r\n        var mask: Array<number> = compileDefine._mask;\r\n        var endIndex: number = compileDefine._length - 1;\r\n        var maxEndIndex: number = this._cacheShaderHierarchy - 1;\r\n        for (var i: number = 0; i < maxEndIndex; i++) {\r\n            var subMask: number = endIndex < i ? 0 : mask[i];\r\n            var subCacheShaders = cacheShaders[subMask];\r\n            (subCacheShaders) || (cacheShaders[subMask] = subCacheShaders = {});\r\n            cacheShaders = subCacheShaders;\r\n        }\r\n\r\n        var cacheKey: number = endIndex < maxEndIndex ? 0 : mask[maxEndIndex];\r\n        var shader: ShaderInstance = cacheShaders[cacheKey];\r\n        if (shader)\r\n            return shader;\r\n\r\n        var defineString: string[] = ShaderPass._defineStrings;\r\n        Shader3D._getNamesByDefineData(compileDefine, defineString);\r\n\r\n        var clusterSlices: Vector3 = Config3D.lightClusterCount;\r\n        var defMap: any = {};\r\n\r\n        var vertexHead: string;\r\n        var fragmentHead: string;\r\n        var defineStr: string = \"\";\r\n\r\n        // 拼接 shader attribute\r\n        let attributeMap = this._owner._attributeMap;\r\n        let uniformMap = this._owner._uniformMap;\r\n        let useUniformBlock = Config3D._uniformBlock;\r\n        let attributeglsl = GLSLCodeGenerator.glslAttributeString(attributeMap);\r\n        let uniformglsl = GLSLCodeGenerator.glslUniformString(uniformMap, useUniformBlock);\r\n\r\n        if (LayaGL.renderEngine.getCapable(RenderCapable.GRAPHICS_API_GLES3)) {\r\n            vertexHead =\r\n                `#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define attribute in\r\n#define varying out\r\n#define textureCube texture\r\n#define texture2D texture\r\n${attributeglsl}\r\n${uniformglsl}\r\n`;\r\n\r\n            fragmentHead =\r\n                `#version 300 es\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n    precision highp sampler2DArray;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n    precision mediump sampler2DArray;\r\n#endif\r\nlayout(std140, column_major) uniform;\r\n#define varying in\r\nout highp vec4 pc_fragColor;\r\n#define gl_FragColor pc_fragColor\r\n#define gl_FragDepthEXT gl_FragDepth\r\n#define texture2D texture\r\n#define textureCube texture\r\n#define texture2DProj textureProj\r\n#define texture2DLodEXT textureLod\r\n#define texture2DProjLodEXT textureProjLod\r\n#define textureCubeLodEXT textureLod\r\n#define texture2DGradEXT textureGrad\r\n#define texture2DProjGradEXT textureProjGrad\r\n#define textureCubeGradEXT textureGrad\r\n${uniformglsl}`;\r\n        }\r\n        else {\r\n            vertexHead =\r\n                `#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n${attributeglsl}\r\n${uniformglsl}`;\r\n            fragmentHead =\r\n                `#ifdef GL_EXT_shader_texture_lod\r\n    #extension GL_EXT_shader_texture_lod : enable\r\n#endif\r\n\r\n#if defined(GL_FRAGMENT_PRECISION_HIGH)\r\n    precision highp float;\r\n    precision highp int;\r\n#else\r\n    precision mediump float;\r\n    precision mediump int;\r\n#endif\r\n\r\n#if !defined(GL_EXT_shader_texture_lod)\r\n    #define texture1DLodEXT texture1D\r\n    #define texture2DLodEXT texture2D\r\n    #define texture2DProjLodEXT texture2DProj\r\n    #define texture3DLodEXT texture3D\r\n    #define textureCubeLodEXT textureCube\r\n#endif\r\n${uniformglsl}`;\r\n        }\r\n\r\n        // todo \r\n        defineStr += \"#define MAX_LIGHT_COUNT \" + Config3D.maxLightCount + \"\\n\";\r\n        defineStr += \"#define MAX_LIGHT_COUNT_PER_CLUSTER \" + Config3D._maxAreaLightCountPerClusterAverage + \"\\n\";\r\n        defineStr += \"#define CLUSTER_X_COUNT \" + clusterSlices.x + \"\\n\";\r\n        defineStr += \"#define CLUSTER_Y_COUNT \" + clusterSlices.y + \"\\n\";\r\n        defineStr += \"#define CLUSTER_Z_COUNT \" + clusterSlices.z + \"\\n\";\r\n        defineStr += \"#define MORPH_MAX_COUNT \" + Config3D.maxMorphTargetCount + \"\\n\";\r\n        defineStr += \"#define SHADER_CAPAILITY_LEVEL \" + LayaGL.renderEngine.getParams(RenderParams.SHADER_CAPAILITY_LEVEL) + \"\\n\";\r\n\r\n\r\n\r\n        for (var i: number = 0, n: number = defineString.length; i < n; i++) {\r\n            var def: string = defineString[i];\r\n            defineStr += \"#define \" + def + \"\\n\";\r\n            defMap[def] = true;\r\n        }\r\n\r\n        var vs: any[] = this._VS.toscript(defMap, []);\r\n        var vsVersion: string = '';\r\n        if (vs[0].indexOf('#version') == 0) {\r\n            vsVersion = vs[0] + '\\n';\r\n            vs.shift();\r\n        }\r\n\r\n        var ps: any[] = this._PS.toscript(defMap, []);\r\n        var psVersion: string = '';\r\n        if (ps[0].indexOf('#version') == 0) {\r\n            psVersion = ps[0] + '\\n';\r\n            ps.shift();\r\n        };\r\n        // todo definestr\r\n        shader = LayaGL.renderOBJCreate.createShaderInstance(vsVersion + vertexHead + defineStr + vs.join('\\n'), psVersion + fragmentHead + defineStr + ps.join('\\n'), this._owner._attributeMap, this);\r\n\r\n        cacheShaders[cacheKey] = shader;\r\n\r\n        if (Shader3D.debugMode) {\r\n            var defStr: string = \"\";\r\n            var defMask: string = \"\";\r\n            for (var i: number = 0, n: number = debugMaskLength; i < n; i++){\r\n                (i == n - 1) ? defMask += debugDefineMask[i] : defMask += debugDefineMask[i] + \",\";\r\n            }\r\n            for (var i: number = 0, n: number = debugDefineString.length; i < n; i++)\r\n                (i == n - 1) ? defStr += debugDefineString[i] : defStr += debugDefineString[i] + \",\";\r\n            console.log(\"%cLayaAir: Shader Compile Information---ShaderName:\" + this._owner._owner._name + \" SubShaderIndex:\" + this._owner._owner._subShaders.indexOf(this._owner) + \" PassIndex:\" + this._owner._passes.indexOf(this) + \" DefineMask:[\" + defMask + \"]\" + \" DefineNames:[\" + defStr + \"]\", \"color:green\");\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n\r\n\r\n","import { VertexElement } from \"../../renders/VertexElement\";\r\nimport { VertexElementFormat } from \"../../renders/VertexElementFormat\";\r\nimport { VertexDeclaration } from \"../VertexDeclaration\";\r\n\r\n/**\r\n * ...\r\n * @author ...\r\n */\r\nexport class VertexMesh {\r\n\t/**顶点位置数据 */\r\n\tstatic MESH_POSITION0: number = 0;\r\n\t/**顶点顶点色数据 */\r\n\tstatic MESH_COLOR0: number = 1;\r\n\t/**顶点UV0数据 */\r\n\tstatic MESH_TEXTURECOORDINATE0: number = 2;\r\n\t/**顶点法线数据 */\r\n\tstatic MESH_NORMAL0: number = 3;\r\n\t/**顶点切线数据 */\r\n\tstatic MESH_TANGENT0: number = 4;\r\n\t/**顶点骨骼索引数据 */\r\n\tstatic MESH_BLENDINDICES0: number = 5;\r\n\t/**顶点骨骼权重数据 */\r\n\tstatic MESH_BLENDWEIGHT0: number = 6;\r\n\t/**顶点UV1数据 */\r\n\tstatic MESH_TEXTURECOORDINATE1: number = 7;\r\n\t/**顶点世界矩阵数据Row0 */\r\n\tstatic MESH_WORLDMATRIX_ROW0: number = 8;\r\n\t/**顶点世界矩阵数据Row1 */\r\n\tstatic MESH_WORLDMATRIX_ROW1: number = 9;\r\n\t/**顶点世界矩阵数据Row2 */\r\n\tstatic MESH_WORLDMATRIX_ROW2: number = 10;\r\n\t/**顶点世界矩阵数据Row3 */\r\n\tstatic MESH_WORLDMATRIX_ROW3: number = 11;\r\n\r\n\r\n\t//TODO：location不够\r\n\t/**简单数据动画数据 */\r\n\tstatic MESH_SIMPLEANIMATOR:number = 12;\r\n\t/**instanceworld顶点描述 */\r\n\tstatic instanceWorldMatrixDeclaration: VertexDeclaration;\r\n\t/**instanceSimple动画数据顶点描述 */\r\n\tstatic instanceSimpleAnimatorDeclaration: VertexDeclaration;\r\n\r\n\t\r\n\t/**自定义attribute instance 预留位*/\r\n\t/**顶点自定义数据0 */\r\n\tstatic MESH_CUSTOME0:number = 12;\r\n\t/**顶点自定义数据1 */\r\n\tstatic MESH_CUSTOME1:number = 13;\r\n\t/**顶点自定义数据2 */\r\n\tstatic MESH_CUSTOME2:number = 14;\r\n\t/**顶点自定义数据3 */\r\n\tstatic MESH_CUSTOME3:number = 15;\r\n\r\n\r\n\r\n\t\r\n\t/**@internal */\r\n\tprivate static _vertexDeclarationMap: any = {};\r\n\r\n\t\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tstatic __init__(): void {\r\n\t\tVertexMesh.instanceWorldMatrixDeclaration = new VertexDeclaration(64,\r\n\t\t\t[new VertexElement(0, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW0),\r\n\t\t\tnew VertexElement(16, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW1),\r\n\t\t\tnew VertexElement(32, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW2),\r\n\t\t\tnew VertexElement(48, VertexElementFormat.Vector4, VertexMesh.MESH_WORLDMATRIX_ROW3)]);\r\n\t\t\r\n\t\tVertexMesh.instanceSimpleAnimatorDeclaration = new VertexDeclaration(16,[new VertexElement(0,VertexElementFormat.Vector4,VertexMesh.MESH_SIMPLEANIMATOR)]);\r\n\t}\r\n\r\n\t/**\r\n\t * 获取顶点声明。\r\n\t * @param vertexFlag 顶点声明标记字符,格式为:\"POSITION,NORMAL,COLOR,UV,UV1,BLENDWEIGHT,BLENDINDICES,TANGENT\"。\r\n\t * @return 顶点声明。\r\n\t */\r\n\tstatic getVertexDeclaration(vertexFlag: string, compatible: boolean = true): VertexDeclaration {\r\n\t\tvar verDec: VertexDeclaration = VertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")];//TODO:兼容模式\r\n\t\tif (!verDec) {\r\n\t\t\tvar subFlags: any[] = vertexFlag.split(\",\");\r\n\t\t\tvar offset: number = 0;\r\n\t\t\tvar elements: any[] = [];\r\n\t\t\tfor (var i: number = 0, n: number = subFlags.length; i < n; i++) {\r\n\t\t\t\tvar element: VertexElement;\r\n\t\t\t\tswitch (subFlags[i]) {\r\n\t\t\t\t\tcase \"POSITION\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_POSITION0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector3, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 12;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"COLOR\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_COLOR0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE0);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"UV1\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector2, VertexMesh.MESH_TEXTURECOORDINATE1);\r\n\t\t\t\t\t\toffset += 8;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDWEIGHT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDWEIGHT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"BLENDINDICES\":\r\n\t\t\t\t\t\tif (compatible) {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_BLENDINDICES0);//兼容\r\n\t\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Byte4, VertexMesh.MESH_BLENDINDICES0);\r\n\t\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"TANGENT\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.Vector4, VertexMesh.MESH_TANGENT0);\r\n\t\t\t\t\t\toffset += 16;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"NORMAL_BYTE\":\r\n\t\t\t\t\t\telement = new VertexElement(offset, VertexElementFormat.NorByte4, VertexMesh.MESH_NORMAL0);\r\n\t\t\t\t\t\toffset += 4;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow \"VertexMesh: unknown vertex flag.\";\r\n\t\t\t\t}\r\n\t\t\t\telements.push(element);\r\n\t\t\t}\r\n\t\t\tverDec = new VertexDeclaration(offset, elements);\r\n\t\t\tVertexMesh._vertexDeclarationMap[vertexFlag + (compatible ? \"_0\" : \"_1\")] = verDec;//TODO:兼容模式\r\n\t\t}\r\n\t\treturn verDec;\r\n\t}\r\n}\r\n\r\n\r\n","import { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderDataItem, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderDefine } from \"../../RenderEngine/RenderShader/ShaderDefine\";\r\nimport { UniformBufferParamsType, UnifromBufferData } from \"../../RenderEngine/UniformBufferData\";\r\nimport { IShaderCompiledObj, ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { VertexMesh } from \"./VertexMesh\";\r\n\r\n// todo 初始化 uniformMap 提取出来 供 Scene, Camera, Sprite3D 生成 uniform shader代码 ?\r\n// export type UniformItem = { [uniformName: string]: ShaderDataType } | { type: ShaderDataType, value?: ShaderDataItem };\r\n\r\nexport type UniformMapType = { [blockName: string]: { [uniformName: string]: ShaderDataType } | ShaderDataType };\r\n\r\nexport type AttributeMapType = { [name: string]: [number, ShaderDataType] };\r\n\r\n/**\r\n * <code>SubShader</code> 类用于创建SubShader。\r\n */\r\nexport class SubShader {\r\n    public static IncludeUniformMap: any;\r\n\r\n    /**\r\n     * 注册glsl所用到的Uniform\r\n     * 会在生成Uniformmap的时候根据包含的Include文件，添加所需要的uniform因素\r\n     * @param includeName \r\n     * @param uniformInfo \r\n     * @param defaultUniformData \r\n     */\r\n    public static regIncludeBindUnifrom(includeName: string, uniformMap: { [name: string]: ShaderDataType }, defaultValue: { [key: string]: any }) {\r\n        let obj: any = {};\r\n        let data: any = obj[includeName] = {};\r\n        data[\"uniformMap\"] = uniformMap;\r\n        data[\"defaultValue\"] = defaultValue;\r\n        Object.assign(SubShader.IncludeUniformMap, obj);\r\n    }\r\n\r\n    public static readonly DefaultAttributeMap: { [name: string]: [number, ShaderDataType] } = {\r\n        'a_Position': [VertexMesh.MESH_POSITION0, ShaderDataType.Vector4],\r\n        'a_Normal': [VertexMesh.MESH_NORMAL0, ShaderDataType.Vector3],\r\n        'a_Tangent0': [VertexMesh.MESH_TANGENT0, ShaderDataType.Vector4],\r\n        'a_Texcoord0': [VertexMesh.MESH_TEXTURECOORDINATE0, ShaderDataType.Vector2],\r\n        'a_Texcoord1': [VertexMesh.MESH_TEXTURECOORDINATE1, ShaderDataType.Vector2],\r\n        'a_Color': [VertexMesh.MESH_COLOR0, ShaderDataType.Vector4],\r\n        'a_BoneWeights': [VertexMesh.MESH_BLENDWEIGHT0, ShaderDataType.Vector4],\r\n        'a_BoneIndices': [VertexMesh.MESH_BLENDINDICES0, ShaderDataType.Vector4],\r\n        'a_WorldMat': [VertexMesh.MESH_WORLDMATRIX_ROW0, ShaderDataType.Matrix4x4],\r\n        'a_SimpleTextureParams': [VertexMesh.MESH_SIMPLEANIMATOR, ShaderDataType.Vector2]\r\n    }\r\n\r\n    static __init__() {\r\n\r\n        SubShader.IncludeUniformMap = {};\r\n    }\r\n\r\n    /**@internal */\r\n    _attributeMap: AttributeMapType;\r\n\r\n    /**@internal */\r\n    _uniformMap: UniformMapType;\r\n\r\n    // todo uniform 相关信息统一用结构体存储？ 合并 value type map\r\n    /**\r\n     * @internal\r\n     * uniform 默认值\r\n     */\r\n    readonly _uniformDefaultValue: { [name: string]: ShaderDataItem };\r\n    /**\r\n     * @internal\r\n     * uniform 数据类型\r\n     */\r\n    readonly _uniformTypeMap: Map<string, ShaderDataType>;\r\n\r\n    /**@internal */\r\n    readonly _uniformBufferDataMap: Map<string, UnifromBufferData> = new Map();\r\n\r\n    /**@internal */\r\n    _owner: Shader3D;\r\n    /**@internal */\r\n    _flags: any = {};\r\n    /**@internal */\r\n    _passes: ShaderPass[] = [];\r\n\r\n    /**\r\n     * 创建一个 <code>SubShader</code> 实例。\r\n     * @param\tattributeMap  顶点属性表。\r\n     * @param\tuniformMap  uniform属性表。\r\n     */\r\n    constructor(attributeMap: { [name: string]: [number, ShaderDataType] } = SubShader.DefaultAttributeMap, uniformMap: UniformMapType = {}, uniformDefaultValue: { [name: string]: ShaderDataItem } = null) {\r\n        this._attributeMap = attributeMap;\r\n        this._uniformMap = uniformMap;\r\n        this._uniformDefaultValue = uniformDefaultValue;\r\n        this._uniformTypeMap = new Map();\r\n        for (const key in uniformMap) {\r\n            if (typeof uniformMap[key] == \"object\") {\r\n                let block = <{ [uniformName: string]: ShaderDataType }>(uniformMap[key]);\r\n                let blockUniformMap = new Map<string, UniformBufferParamsType>();\r\n                for (const uniformName in block) {\r\n                    let uniformType = ShaderDataTypeToUniformBufferType(block[uniformName]);\r\n                    blockUniformMap.set(uniformName, uniformType);\r\n\r\n                    this._uniformTypeMap.set(uniformName, block[uniformName]);\r\n                }\r\n\r\n                let blockUniformIndexMap = new Map<number, UniformBufferParamsType>();\r\n                blockUniformMap.forEach((value, key) => {\r\n                    blockUniformIndexMap.set(Shader3D.propertyNameToID(key), value);\r\n                });\r\n                let blockData = new UnifromBufferData(blockUniformIndexMap);\r\n                this._uniformBufferDataMap.set(key, blockData);\r\n            }\r\n            else {\r\n                let unifromType = <ShaderDataType>uniformMap[key];\r\n                this._uniformTypeMap.set(key, unifromType);\r\n                if (unifromType == ShaderDataType.Texture2D || unifromType == ShaderDataType.TextureCube) {\r\n                    let textureGammaDefine = Shader3D.getDefineByName(`Gamma_${key}`);\r\n                    let uniformIndex = Shader3D.propertyNameToID(key);\r\n                    ShaderDefine._texGammaDefine[uniformIndex] = textureGammaDefine;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加标记。\r\n     * @param key 标记键。\r\n     * @param value 标记值。\r\n     */\r\n    setFlag(key: string, value: string): void {\r\n        if (value)\r\n            this._flags[key] = value;\r\n        else\r\n            delete this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 获取标记值。\r\n     * @return key 标记键。\r\n     */\r\n    getFlag(key: string): string {\r\n        return this._flags[key];\r\n    }\r\n\r\n    /**\r\n     * 添加着色器Pass\r\n     * @param vs \r\n     * @param ps \r\n     * @param stateMap \r\n     * @param pipelineMode 渲染管线模式。 \r\n     */\r\n    addShaderPass(vs: string, ps: string, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        return this._addShaderPass(ShaderCompile.compile(vs, ps), pipelineMode);\r\n    }\r\n\r\n    _addShaderPass(compiledObj: IShaderCompiledObj, pipelineMode: string = \"Forward\"): ShaderPass {\r\n        var shaderPass: ShaderPass = new ShaderPass(this, compiledObj);\r\n        shaderPass._pipelineMode = pipelineMode;\r\n        this._passes.push(shaderPass);\r\n        this._addIncludeUniform(compiledObj.includeNames);\r\n        return shaderPass;\r\n    }\r\n\r\n    private _addIncludeUniform(includemap: Set<string>) {\r\n        for (let ele of includemap) {\r\n            if (SubShader.IncludeUniformMap[ele]) {\r\n                let includeBindInfo = SubShader.IncludeUniformMap[ele];\r\n                let bindtypeMap = includeBindInfo[\"uniformMap\"];\r\n                let bindDefaultValue = includeBindInfo[\"defaultValue\"];\r\n                for (var i in bindtypeMap) {\r\n                    if (!this._uniformTypeMap.has(i)) {\r\n                        this._uniformTypeMap.set(i, bindtypeMap[i]);\r\n                        this._uniformMap[i] = bindtypeMap[i];\r\n                    }\r\n                }\r\n                for (var i in bindDefaultValue) {\r\n                    if (!this._uniformDefaultValue[i]) {\r\n                        this._uniformDefaultValue[i] = bindDefaultValue[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction ShaderDataTypeToUniformBufferType(shaderDataType: ShaderDataType) {\r\n\r\n    switch (shaderDataType) {\r\n        case ShaderDataType.Float:\r\n            return UniformBufferParamsType.Number;\r\n        case ShaderDataType.Vector2:\r\n            return UniformBufferParamsType.Vector2;\r\n        case ShaderDataType.Vector3:\r\n            return UniformBufferParamsType.Vector3;\r\n        case ShaderDataType.Vector4:\r\n        case ShaderDataType.Color:\r\n            return UniformBufferParamsType.Vector4;\r\n        case ShaderDataType.Matrix4x4:\r\n            return UniformBufferParamsType.Matrix4x4;\r\n        default:\r\n            throw \"ShaderDataType can not be in UniformBuffer.\";\r\n    }\r\n\r\n}\r\n\r\n","import { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { ShaderCompile } from \"../../webgl/utils/ShaderCompile\";\r\nimport { DefineDatas } from \"./DefineDatas\";\r\nimport { ShaderDefine } from \"./ShaderDefine\";\r\nimport { ShaderPass } from \"./ShaderPass\";\r\nimport { ShaderVariant, ShaderVariantCollection } from \"./ShaderVariantCollection\";\r\nimport { SubShader } from \"./SubShader\";\r\n\r\nexport interface IShaderObjStructor {\r\n    name: string,\r\n    enableInstancing: boolean,\r\n    supportReflectionProbe: boolean,\r\n    attributeMap: any;\r\n    uniformMap: any;\r\n    defaultValue: any;\r\n    shaderPass: Array<any>;\r\n}\r\n\r\nexport interface IShaderpassStructor {\r\n    VS?: string,\r\n    FS?: string,\r\n    VSPath?: string,//TODO\r\n    FSPath?: string,//TODO\r\n    pipeline?: string,\r\n\r\n}\r\n/**\r\n * <code>Shader3D</code> 类用于创建Shader3D。\r\n */\r\nexport class Shader3D {\r\n    static _configDefineValues = new DefineDatas();\r\n    /**@internal */\r\n    private static _compileDefineDatas: DefineDatas = new DefineDatas();\r\n    /**渲染状态_剔除。*/\r\n    static CULL: number;\r\n    /**渲染状态_混合。*/\r\n    static BLEND: number;\r\n    /**渲染状态_混合源。*/\r\n    static BLEND_SRC: number;\r\n    /**渲染状态_混合目标。*/\r\n    static BLEND_DST: number;\r\n    /**渲染状态_混合源RGB。*/\r\n    static BLEND_SRC_RGB: number;\r\n    /**渲染状态_混合目标RGB。*/\r\n    static BLEND_DST_RGB: number;\r\n    /**渲染状态_混合源ALPHA。*/\r\n    static BLEND_SRC_ALPHA: number;\r\n    /**渲染状态_混合目标ALPHA。*/\r\n    static BLEND_DST_ALPHA: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION: number;\r\n    /**渲染状态_混合方程。*/\r\n    static BLEND_EQUATION_RGB: number;\r\n    /**渲染状态_ALPHA混合方程。*/\r\n    static BLEND_EQUATION_ALPHA: number;\r\n    /**渲染状态_深度测试。*/\r\n    static DEPTH_TEST: number;\r\n    /**渲染状态_深度写入。*/\r\n    static DEPTH_WRITE: number;\r\n    /**渲染状态_模板测试。*/\r\n    static STENCIL_TEST: number;\r\n    /**渲染状态_模板写入 */\r\n    static STENCIL_WRITE: number;\r\n    /**渲染状态_模板写入值 */\r\n    static STENCIL_Ref: number;\r\n    /**渲染状态_模板写入设置 */\r\n    static STENCIL_Op: number;\r\n\r\n    /**shader变量提交周期，自定义。*/\r\n    static PERIOD_CUSTOM: number = 0;\r\n    /**shader变量提交周期，逐材质。*/\r\n    static PERIOD_MATERIAL: number = 1;\r\n    /**shader变量提交周期，逐精灵和相机，注：因为精灵包含MVP矩阵，为复合属性，所以摄像机发生变化时也应提交。*/\r\n    static PERIOD_SPRITE: number = 2;\r\n    /**shader变量提交周期，逐相机。*/\r\n    static PERIOD_CAMERA: number = 3;\r\n    /**shader变量提交周期，逐场景。*/\r\n    static PERIOD_SCENE: number = 4;\r\n\r\n    /**@internal */\r\n    static SHADERDEFINE_LEGACYSINGALLIGHTING: ShaderDefine;\r\n    /**@internal 图形API为WebGL1.0/OPENGLES2.0。*/\r\n    static SHADERDEFINE_GRAPHICS_API_GLES2: ShaderDefine;\r\n    /**@internal 图形API为WebGL2.0/OPENGLES3.0。*/\r\n    static SHADERDEFINE_GRAPHICS_API_GLES3: ShaderDefine;\r\n    /**@internal 图形数据传输使用UniformBlock的方式 */\r\n    static SHADERDEFINE_ENUNIFORMBLOCK: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE: ShaderDefine;\r\n    /**@internal */\r\n    static SHADERDEFINE_FLOATTEXTURE_FIL_LINEAR: ShaderDefine;\r\n\r\n    /**@internal */\r\n    static _propertyNameMap: any = {};\r\n    /**@internal */\r\n    private static _propertyNameCounter: number = 0;\r\n    /**@internal */\r\n    private static _defineCounter: number = 0;\r\n    // todo  这个 map 和 get 函数转移到 ShaderDefine 里面\r\n    /**@internal */\r\n    private static _defineMap: { [key: string]: ShaderDefine } = {};\r\n    /**@internal */\r\n    static _preCompileShader: { [key: string]: Shader3D } = {};\r\n    /**@internal */\r\n    static _maskMap: Array<{ [key: number]: string }> = [];\r\n    /**@internal */\r\n    static _debugShaderVariantInfo: ShaderVariant;\r\n    /**是否开启调试模式。 */\r\n    static debugMode: boolean = false;\r\n    /**调试着色器变种集合。 */\r\n    static debugShaderVariantCollection: ShaderVariantCollection;\r\n\r\n\r\n    static init() {\r\n        Shader3D.debugShaderVariantCollection = new ShaderVariantCollection();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    static _getNamesByDefineData(defineData: DefineDatas, out: Array<string>): void {\r\n        var maskMap: Array<{ [key: number]: string }> = Shader3D._maskMap;\r\n        var mask: Array<number> = defineData._mask;\r\n        out.length = 0;\r\n        for (var i: number = 0, n: number = defineData._length; i < n; i++) {\r\n            var subMaskMap: { [key: number]: string } = maskMap[i];\r\n            var subMask: number = mask[i];\r\n            for (var j: number = 0; j < 32; j++) {\r\n                var d: number = 1 << j;\r\n                if (subMask > 0 && d > subMask)//如果31位存在subMask为负数,避免break\r\n                    break;\r\n                if (subMask & d)\r\n                    out.push(subMaskMap[d]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 注册宏定义。\r\n     * @param name \r\n     */\r\n    static getDefineByName(name: string): ShaderDefine {\r\n        var define: ShaderDefine = Shader3D._defineMap[name];\r\n        if (!define) {\r\n            var maskMap = Shader3D._maskMap;\r\n            var counter: number = Shader3D._defineCounter;\r\n            var index: number = Math.floor(counter / 32);\r\n            var value: number = 1 << counter % 32;\r\n            define = new ShaderDefine(index, value);\r\n            Shader3D._defineMap[name] = define;\r\n            if (index == maskMap.length) {\r\n                maskMap.length++;\r\n                maskMap[index] = {};\r\n            }\r\n            maskMap[index][value] = name;\r\n            Shader3D._defineCounter++;\r\n        }\r\n        return define;\r\n    }\r\n\r\n    /**\r\n     * 通过Shader属性名称获得唯一ID。\r\n     * @param name Shader属性名称。\r\n     * @return 唯一ID。\r\n     */\r\n    static propertyNameToID(name: string): number {\r\n        return LayaGL.renderEngine.propertyNameToID(name);\r\n    }\r\n\r\n    static propertyIDToName(id: number): string {\r\n        return LayaGL.renderEngine.propertyIDToName(id);\r\n    }\r\n\r\n    /**\r\n     * 添加函数库引用。\r\n     * @param fileName 文件名字。\r\n     * @param txt 文件内容\r\n     */\r\n    static addInclude(fileName: string, txt: string): void {\r\n        ShaderCompile.addInclude(fileName, txt);\r\n    }\r\n\r\n    /**\r\n     * 通过宏定义名字编译shader。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineNames 宏定义名字集合。\r\n     */\r\n    static compileShaderByDefineNames(shaderName: string, subShaderIndex: number, passIndex: number, defineNames: string[]): void {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\r\n                    compileDefineDatas.clear();\r\n                    for (var i: number = 0, n: number = defineNames.length; i < n; i++)\r\n                        compileDefineDatas.add(Shader3D.getDefineByName(defineNames[i]));\r\n                    compileDefineDatas.addDefineDatas(Shader3D._configDefineValues);\r\n                    pass.withCompile(compileDefineDatas);\r\n                } else {\r\n                    console.warn(\"Shader3D: unknown passIndex.\");\r\n                }\r\n            } else {\r\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\r\n            }\r\n        } else {\r\n            console.warn(\"Shader3D: unknown shader name.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加预编译shader文件，主要是处理宏定义\r\n     */\r\n    static add(name: string, enableInstancing: boolean = false, supportReflectionProbe: boolean = false): Shader3D {\r\n        return Shader3D._preCompileShader[name] = new Shader3D(name, enableInstancing, supportReflectionProbe);\r\n    }\r\n\r\n    /**\r\n     * 获取ShaderCompile3D。\r\n     * @param\tname\r\n     * @return ShaderCompile3D。\r\n     */\r\n    static find(name: string): Shader3D {\r\n        return Shader3D._preCompileShader[name];\r\n    }\r\n\r\n    static parse(data: IShaderObjStructor, basePath: string) {\r\n        if (!data.name || !data.uniformMap)\r\n            console.error(\"TODO\");\r\n        let shader = Shader3D.add(data.name, data.enableInstancing, data.supportReflectionProbe);\r\n        let subshader = new SubShader(data.attributeMap ? data.attributeMap : SubShader.DefaultAttributeMap, data.uniformMap, data.defaultValue);\r\n        shader.addSubShader(subshader);\r\n        let passArray = data.shaderPass;\r\n        for (var i in passArray) {\r\n            let pass = passArray[i] as IShaderpassStructor;\r\n            subshader._addShaderPass(ShaderCompile.compile(pass.VS, pass.FS, basePath), pass.pipeline);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    /**@internal */\r\n    _name: string;\r\n    /**@internal */\r\n    _enableInstancing: boolean = false;\r\n    /**@internal */\r\n    _supportReflectionProbe: boolean = false;\r\n    /**@internal */\r\n    _subShaders: SubShader[] = [];\r\n\r\n    /**\r\n     * 名字。\r\n     */\r\n    get name(): string {\r\n        return this._name;\r\n    }\r\n\r\n    /**\r\n     * 创建一个 <code>Shader3D</code> 实例。\r\n     */\r\n    constructor(name: string, enableInstancing: boolean, supportReflectionProbe: boolean) {\r\n        this._name = name;\r\n        this._enableInstancing = enableInstancing;\r\n        this._supportReflectionProbe = supportReflectionProbe;\r\n    }\r\n\r\n    /**\r\n     * 添加子着色器。\r\n     * @param 子着色器。\r\n     */\r\n    addSubShader(subShader: SubShader): void {\r\n        this._subShaders.push(subShader);\r\n        subShader._owner = this;\r\n    }\r\n\r\n    /**\r\n     * 在特定索引获取子着色器。\r\n     * @param\tindex 索引。\r\n     * @return 子着色器。\r\n     */\r\n    getSubShaderAt(index: number): SubShader {\r\n        return this._subShaders[index];\r\n    }\r\n\r\n    /**\r\n     * @deprecated\r\n     * 通过宏定义遮罩编译shader,建议使用compileShaderByDefineNames。\r\n     * @param\tshaderName Shader名称。\r\n     * @param   subShaderIndex 子着色器索引。\r\n     * @param   passIndex  通道索引。\r\n     * @param\tdefineMask 宏定义遮罩集合。\r\n     */\r\n    static compileShader(shaderName: string, subShaderIndex: number, passIndex: number, ...defineMask: any[]): void {\r\n        var shader: Shader3D = Shader3D.find(shaderName);\r\n        if (shader) {\r\n            var subShader: SubShader = shader.getSubShaderAt(subShaderIndex);\r\n            if (subShader) {\r\n                var pass: ShaderPass = subShader._passes[passIndex];\r\n                if (pass) {\r\n                    var compileDefineDatas: DefineDatas = Shader3D._compileDefineDatas;\r\n                    var mask: Array<number> = compileDefineDatas._mask;\r\n                    mask.length = 0;\r\n                    for (var i: number = 0, n: number = defineMask.length; i < n; i++)\r\n                        mask.push(defineMask[i]);\r\n                    compileDefineDatas._length = defineMask.length;\r\n                    pass.withCompile(compileDefineDatas);\r\n\r\n                } else {\r\n                    console.warn(\"Shader3D: unknown passIndex.\");\r\n                }\r\n            } else {\r\n                console.warn(\"Shader3D: unknown subShaderIndex.\");\r\n            }\r\n        } else {\r\n            console.warn(\"Shader3D: unknown shader name.\");\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n","﻿import { ILaya } from \"./ILaya\";\r\nimport { Input } from \"./laya/display/Input\";\r\nimport { Sprite } from \"./laya/display/Sprite\";\r\nimport { Stage } from \"./laya/display/Stage\";\r\nimport { InputManager } from \"./laya/events/InputManager\";\r\nimport { LayaGL } from \"./laya/layagl/LayaGL\";\r\nimport { SoundManager } from \"./laya/media/SoundManager\";\r\nimport { Loader } from \"./laya/net/Loader\";\r\nimport { LocalStorage } from \"./laya/net/LocalStorage\";\r\nimport { Render } from \"./laya/renders/Render\";\r\nimport { RenderSprite } from \"./laya/renders/RenderSprite\";\r\nimport { Context } from \"./laya/resource/Context\";\r\nimport { HTMLCanvas } from \"./laya/resource/HTMLCanvas\";\r\nimport { RenderTexture2D } from \"./laya/resource/RenderTexture2D\";\r\nimport { Texture } from \"./laya/resource/Texture\";\r\nimport { Browser } from \"./laya/utils/Browser\";\r\nimport { CacheManger } from \"./laya/utils/CacheManger\";\r\nimport { ColorUtils } from \"./laya/utils/ColorUtils\";\r\nimport { Timer } from \"./laya/utils/Timer\";\r\nimport { ShaderDefines2D } from \"./laya/webgl/shader/d2/ShaderDefines2D\";\r\nimport { SkinSV } from \"./laya/webgl/shader/d2/skinAnishader/SkinSV\";\r\nimport { PrimitiveSV } from \"./laya/webgl/shader/d2/value/PrimitiveSV\";\r\nimport { TextureSV } from \"./laya/webgl/shader/d2/value/TextureSV\";\r\nimport { Value2D } from \"./laya/webgl/shader/d2/value/Value2D\";\r\nimport { RenderState2D } from \"./laya/webgl/utils/RenderState2D\";\r\nimport { WebGL } from \"./laya/webgl/WebGL\";\r\nimport { Mouse } from \"./laya/utils/Mouse\";\r\nimport { MeshVG } from \"./laya/webgl/utils/MeshVG\";\r\nimport { MeshParticle2D } from \"./laya/webgl/utils/MeshParticle2D\";\r\nimport { MeshQuadTexture } from \"./laya/webgl/utils/MeshQuadTexture\";\r\nimport { MeshTexture } from \"./laya/webgl/utils/MeshTexture\";\r\nimport { WeakObject } from \"./laya/utils/WeakObject\";\r\nimport { RenderStateContext } from \"./laya/RenderEngine/RenderStateContext\";\r\nimport { RenderClearFlag } from \"./laya/RenderEngine/RenderEnum/RenderClearFlag\";\r\nimport { IStageConfig, LayaEnv } from \"./LayaEnv\";\r\nimport { Color } from \"./laya/maths/Color\";\r\nimport { URL } from \"./laya/net/URL\";\r\nimport { RunDriver } from \"./laya/utils/RunDriver\";\r\nimport { Config } from \"./Config\";\r\nimport { Shader3D } from \"./laya/RenderEngine/RenderShader/Shader3D\";\r\n\r\n/**\r\n * <code>Laya</code> 是全局对象的引用入口集。\r\n * Laya类引用了一些常用的全局对象，比如Laya.stage：舞台，Laya.timer：时间管理器，Laya.loader：加载管理器，使用时注意大小写。\r\n */\r\nexport class Laya {\r\n    /*[COMPILER OPTIONS:normal]*/\r\n    /** 舞台对象的引用。*/\r\n    static stage: Stage = null;\r\n\r\n    /**@private 系统时钟管理器，引擎内部使用*/\r\n    static systemTimer: Timer = null;\r\n    /**@private 组件的物理时钟管理器*/\r\n    static physicsTimer: Timer = null;\r\n    /**游戏主时针，同时也是管理场景，动画，缓动等效果时钟，通过控制本时针缩放，达到快进慢播效果*/\r\n    static timer: Timer = null;\r\n    /** 加载管理器的引用。*/\r\n    static loader: Loader = null;\r\n    /** 当前引擎版本。*/\r\n\r\n    /**@private Render 类的引用。*/\r\n    static render: Render;\r\n    /**是否是微信小游戏子域，默认为false**/\r\n    static isWXOpenDataContext: boolean = false;\r\n    /**微信小游戏是否需要在主域中自动将加载的文本数据自动传递到子域，默认 false**/\r\n    static isWXPosMsg: boolean = false;\r\n    /**@internal */\r\n    static WasmModules: { [key: string]: { exports: WebAssembly.Exports, memory: WebAssembly.Memory } } = {};\r\n\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\r\n     */\r\n    static init(stageConfig?: IStageConfig): Promise<void>;\r\n    /**\r\n     * 初始化引擎。使用引擎需要先初始化引擎，否则可能会报错。\r\n     * @param\twidth 初始化的游戏窗口宽度，又称设计宽度。\r\n     * @param\theight\t初始化的游戏窗口高度，又称设计高度。\r\n     * @param\tplugins 参数已失效。\r\n     */\r\n    static init(width: number, height: number, ...plugins: any[]): Promise<void>;\r\n    static init(...args: any[]): Promise<void> {\r\n        if (_isinit)\r\n            return Promise.resolve();\r\n        _isinit = true;\r\n\r\n        let stageConfig: IStageConfig;\r\n        if (typeof (args[0]) === \"number\") {\r\n            stageConfig = {\r\n                designWidth: args[0],\r\n                designHeight: args[1]\r\n            };\r\n        }\r\n        else\r\n            stageConfig = args[0];\r\n\r\n        ArrayBuffer.prototype.slice || (ArrayBuffer.prototype.slice = arrayBufferSlice);\r\n        Float32Array.prototype.slice || (Float32Array.prototype.slice = float32ArraySlice);\r\n        Uint16Array.prototype.slice || (Uint16Array.prototype.slice = uint16ArraySlice);\r\n        Uint8Array.prototype.slice || (Uint8Array.prototype.slice = uint8ArraySlice);\r\n\r\n        Browser.__init__();\r\n        URL.__init__();\r\n\r\n        let laya3D = (<any>window)[\"Laya3D\"];\r\n        if (laya3D) {\r\n            if (!WebGL.enable())\r\n                return Promise.reject(\"Must support webGL!\");\r\n\r\n            RunDriver.changeWebGLSize = laya3D._changeWebGLSize;\r\n            Render.is3DMode = true;\r\n        }\r\n\r\n        // 创建主画布\r\n        //这个其实在Render中感觉更合理，但是runtime要求第一个canvas是主画布，所以必须在下面的那个离线画布之前\r\n        var mainCanv = Browser.mainCanvas = new HTMLCanvas(true);\r\n        //Render._mainCanvas = mainCanv;\r\n        var style: any = mainCanv.source.style;\r\n        style.position = 'absolute';\r\n        style.top = style.left = \"0px\";\r\n        style.background = \"#000000\";\r\n\r\n        if (!Browser.onKGMiniGame && !Browser.onAlipayMiniGame) {\r\n            Browser.container.appendChild(mainCanv.source);//xiaosong add\r\n        }\r\n\r\n        // 创建离屏画布\r\n        //创建离线画布\r\n        Browser.canvas = new HTMLCanvas(true);\r\n        Browser.context = <CanvasRenderingContext2D>(Browser.canvas.getContext('2d') as any);\r\n        Browser.supportWebAudio = SoundManager.__init__();\r\n        Browser.supportLocalStorage = LocalStorage.__init__();\r\n\r\n        //temp TODO 以后分包\r\n        Laya.systemTimer = new Timer(false);\r\n        systemTimer = Timer.gSysTimer = Laya.systemTimer;\r\n        Laya.physicsTimer = new Timer(false);\r\n        Laya.timer = new Timer(false);\r\n\r\n        ILaya.systemTimer = Laya.systemTimer;\r\n        timer = ILaya.timer = Laya.timer;\r\n        physicsTimer = ILaya.physicsTimer = Laya.physicsTimer;\r\n\r\n        Laya.loader = new Loader();\r\n        ILaya.Laya = Laya;\r\n        loader = ILaya.loader = Laya.loader;\r\n\r\n        WeakObject.__init__();\r\n        Mouse.__init__();\r\n\r\n        if (LayaEnv.beforeInit) {\r\n            if (LayaEnv.isPlaying)\r\n                LayaEnv.beforeInit(stageConfig);\r\n            else\r\n                LayaEnv.beforeInit = null;\r\n        }\r\n\r\n        if (LayaEnv.isConch) {\r\n            Laya.enableNative();\r\n        }\r\n        CacheManger.beginCheck();\r\n\r\n        stage = Laya.stage = new Stage();\r\n        ILaya.stage = Laya.stage;\r\n\r\n        if (LayaEnv.isConch && (window as any).conch.setGlobalRepaint) {\r\n            (window as any).conch.setGlobalRepaint(stage.setGlobalRepaint.bind(stage));\r\n        }\r\n        Shader3D.init();\r\n        MeshQuadTexture.__int__();\r\n        MeshVG.__init__();\r\n        MeshTexture.__init__();\r\n        Laya.render = Laya.createRender();\r\n        render = Laya.render;\r\n\r\n        stage.size(stageConfig.designWidth, stageConfig.designHeight);\r\n        if (stageConfig.scaleMode)\r\n            stage.scaleMode = stageConfig.scaleMode;\r\n        if (stageConfig.screenMode)\r\n            stage.screenMode = stageConfig.screenMode;\r\n        if (stageConfig.alignV)\r\n            stage.alignV = stageConfig.alignV;\r\n        if (stageConfig.alignH)\r\n            stage.alignH = stageConfig.alignH;\r\n        if (Config.isAlpha)\r\n            stage.bgColor = null;\r\n        else if (stageConfig.backgroundColor)\r\n            stage.bgColor = stageConfig.backgroundColor;\r\n\r\n        ((<any>window)).stage = stage;\r\n\r\n        RenderStateContext.__init__();\r\n        MeshParticle2D.__init__();\r\n        RenderSprite.__init__();\r\n        InputManager.__init__(stage, Render.canvas);\r\n        if (!!(window as any).conch && \"conchUseWXAdapter\" in Browser.window) {\r\n            Input.isAppUseNewInput = true;\r\n        }\r\n        Input.__init__();\r\n        SoundManager.autoStopMusic = true;\r\n\r\n        Value2D._initone(ShaderDefines2D.TEXTURE2D, TextureSV);\r\n        Value2D._initone(ShaderDefines2D.TEXTURE2D | ShaderDefines2D.FILTERGLOW, TextureSV);\r\n        Value2D._initone(ShaderDefines2D.PRIMITIVE, PrimitiveSV);\r\n        Value2D._initone(ShaderDefines2D.SKINMESH, SkinSV);\r\n\r\n        if (laya3D) {\r\n            return laya3D.__init__().then(() => {\r\n                _onInitModuleCallbacks.forEach(c => c());\r\n                _onInitModuleCallbacks.length = 0;\r\n\r\n                if (LayaEnv.afterInit) {\r\n                    if (LayaEnv.isPlaying)\r\n                        LayaEnv.afterInit();\r\n                    else\r\n                        LayaEnv.afterInit = null;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            _onInitModuleCallbacks.forEach(c => c());\r\n            _onInitModuleCallbacks.length = 0;\r\n\r\n            if (LayaEnv.afterInit) {\r\n                if (LayaEnv.isPlaying)\r\n                    LayaEnv.afterInit();\r\n                else\r\n                    LayaEnv.afterInit = null;\r\n            }\r\n\r\n            return Promise.resolve();\r\n        }\r\n    }\r\n\r\n    static createRender(): Render {\r\n        return new Render(0, 0, Browser.mainCanvas);\r\n    }\r\n\r\n    static addWasmModule(id: string, exports: WebAssembly.Exports, memory: WebAssembly.Memory) {\r\n        Laya.WasmModules[id] = { exports, memory };\r\n    }\r\n\r\n    /**\r\n     * 表示是否捕获全局错误并弹出提示。默认为false。\r\n     * 适用于移动设备等不方便调试的时候，设置为true后，如有未知错误，可以弹窗抛出详细错误堆栈。\r\n     */\r\n    static alertGlobalError(value: boolean) {\r\n        var erralert: number = 0;\r\n        if (value) {\r\n            Browser.window.onerror = function (msg: string, url: string, line: string, column: string, detail: any): void {\r\n                if (erralert++ < 5 && detail)\r\n                    this.alert(\"出错啦，请把此信息截图给研发商\\n\" + msg + \"\\n\" + detail.stack);\r\n            }\r\n        } else {\r\n            Browser.window.onerror = null;\r\n        }\r\n    }\r\n    /**@internal */\r\n    private static _evcode: string = \"eva\" + \"l\";\r\n\r\n    /**@internal */\r\n    static _runScript(script: string): any {\r\n        return Browser.window[Laya._evcode](script);\r\n    }\r\n\r\n    /**\r\n     * 开启DebugPanel\r\n     * @param\tdebugJsPath laya.debugtool.js文件路径\r\n     */\r\n    static enableDebugPanel(debugJsPath: string = \"libs/laya.debugtool.js\"): void {\r\n        if (!(window as any)['Laya'][\"DebugPanel\"]) {\r\n            var script: any = Browser.createElement(\"script\");\r\n            script.onload = function (): void {\r\n                (window as any)['Laya'][\"DebugPanel\"].enable();\r\n            }\r\n            script.src = debugJsPath;\r\n            Browser.document.body.appendChild(script);\r\n        } else {\r\n            (window as any)['Laya'][\"DebugPanel\"].enable();\r\n        }\r\n    }\r\n\r\n    private static isNativeRender_enable: boolean = false;\r\n\r\n    /**@private */\r\n    private static enableNative(): void {\r\n        if (Laya.isNativeRender_enable)\r\n            return;\r\n        Laya.isNativeRender_enable = true;\r\n        RenderState2D.width = Browser.window.innerWidth;\r\n        RenderState2D.height = Browser.window.innerHeight;\r\n        Browser.measureText = function (txt: string, font: string): any {\r\n            (window as any)[\"conchTextCanvas\"].font = font;\r\n            return (window as any)[\"conchTextCanvas\"].measureText(txt);\r\n        }\r\n\r\n        Stage.clear = function (color: string): void {\r\n            Context.set2DRenderConfig();//渲染2D前要还原2D状态,否则可能受3D影响\r\n            var c: any[] = ColorUtils.create(color).arrColor;\r\n\r\n            LayaGL.renderEngine.clearRenderTexture(RenderClearFlag.Color | RenderClearFlag.Depth, new Color(c[0], c[1], c[2], c[3]), 1);\r\n            // if (c) gl.clearColor(c[0], c[1], c[2], c[3]);\r\n            // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);\r\n            RenderState2D.clear();\r\n        }\r\n\r\n        Sprite.drawToCanvas = function (sprite: Sprite, _renderType: number, canvasWidth: number, canvasHeight: number, offsetX: number, offsetY: number): any {\r\n            offsetX -= sprite.x;\r\n            offsetY -= sprite.y;\r\n            offsetX |= 0;\r\n            offsetY |= 0;\r\n            canvasWidth |= 0;\r\n            canvasHeight |= 0;\r\n\r\n            var canv: HTMLCanvas = new HTMLCanvas(false);\r\n            var ctx: Context = canv.getContext('2d') as Context;\r\n            canv.size(canvasWidth, canvasHeight);\r\n\r\n            ctx.asBitmap = true;\r\n            ctx._targets.start();\r\n            RenderSprite.renders[_renderType]._fun(sprite, ctx, offsetX, offsetY);\r\n            ctx.flush();\r\n            ctx._targets.end();\r\n            ctx._targets.restore();\r\n            return canv;\r\n        }\r\n        //RenderTexture2D.prototype._uv = RenderTexture2D.flipyuv;\r\n        Object[\"defineProperty\"](RenderTexture2D.prototype, \"uv\", {\r\n            \"get\": function (): any {\r\n                return this._uv;\r\n            },\r\n            \"set\": function (v: any): void {\r\n                this._uv = v;\r\n            }\r\n        }\r\n        );\r\n        HTMLCanvas.prototype.getTexture = function (): Texture | RenderTexture2D {\r\n            if (!this._texture) {\r\n                // @ts-ignore\r\n                this._texture = this.context._targets;\r\n                //遗留的奇怪代码，先注释掉\r\n                // @ts-ignore\r\n                this._texture.uv = RenderTexture2D.flipyuv;\r\n                // @ts-ignore\r\n                this._texture.bitmap = this._texture;\r\n            }\r\n            return this._texture;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * 引擎各个模块如果需要初始化逻辑可以在这里注册回调函数。\r\n     * @param callback\r\n     */\r\n    static onInitModule(callback: () => void) {\r\n        if (_isinit)\r\n            callback();\r\n        else\r\n            _onInitModuleCallbacks.push(callback);\r\n    }\r\n}\r\n\r\nfunction arrayBufferSlice(this: ArrayBuffer, start: number, end: number): ArrayBuffer {\r\n    var arrU8List: Uint8Array = new Uint8Array(this, start, end - start);\r\n    var newU8List: Uint8Array = new Uint8Array(arrU8List.length);\r\n    newU8List.set(arrU8List);\r\n    return newU8List.buffer;\r\n}\r\n\r\nfunction uint8ArraySlice(this: Uint8Array): Uint8Array {\r\n    var sz: number = this.length;\r\n    var dec: Uint8Array = new Uint8Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction float32ArraySlice(this: Float32Array): Float32Array {\r\n    var sz: number = this.length;\r\n    var dec: Float32Array = new Float32Array(this.length);\r\n    for (var i: number = 0; i < sz; i++) dec[i] = this[i];\r\n    return dec;\r\n}\r\n\r\nfunction uint16ArraySlice(this: Uint16Array, ...arg: any[]): Uint16Array {\r\n    var sz: number;\r\n    var dec: Uint16Array;\r\n    var i: number;\r\n    if (arg.length === 0) {\r\n        sz = this.length;\r\n        dec = new Uint16Array(sz);\r\n        for (i = 0; i < sz; i++)\r\n            dec[i] = this[i];\r\n\r\n    } else if (arg.length === 2) {\r\n        var start: number = arg[0];\r\n        var end: number = arg[1];\r\n\r\n        if (end > start) {\r\n            sz = end - start;\r\n            dec = new Uint16Array(sz);\r\n            for (i = start; i < end; i++)\r\n                dec[i - start] = this[i];\r\n        } else {\r\n            dec = new Uint16Array(0);\r\n        }\r\n    }\r\n    return dec;\r\n}\r\n\r\n\r\nILaya.Loader = Loader;\r\nILaya.Context = Context;\r\nILaya.Browser = Browser;\r\n\r\nvar _isinit = false;\r\nvar _onInitModuleCallbacks: Array<() => void> = [];\r\n\r\n/**@internal */\r\nexport var init = Laya.init;\r\n/**@internal */\r\nexport var stage: Stage;\r\n/**@internal */\r\nexport var systemTimer: Timer;\r\n/**@internal */\r\nexport var physicsTimer: Timer;\r\n/**@internal */\r\nexport var timer: Timer;\r\n/**@internal */\r\nexport var loader: Loader;\r\n/**@internal */\r\nexport var render: Render;\r\n/**@internal */\r\nexport var isWXOpenDataContext: boolean;\r\n/**@internal */\r\nexport var isWXPosMsg: boolean;\r\n/**@internal */\r\nexport var alertGlobalError = Laya.alertGlobalError;\r\n/**@internal */\r\nexport var enableDebugPanel = Laya.enableDebugPanel;","import { Handler } from \"../utils/Handler\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Component } from \"../components/Component\";\r\n\r\n/**\r\n * 效果插件基类，基于对象池管理\r\n */\r\nexport class EffectBase extends Component {\r\n    /**动画持续时间，单位为毫秒*/\r\n    duration: number = 1000;\r\n    /**动画延迟时间，单位为毫秒*/\r\n    delay: number = 0;\r\n    /**重复次数，默认为播放一次*/\r\n    repeat: number = 0;\r\n    /**缓动类型，如果为空，则默认为匀速播放*/\r\n    ease: string;\r\n    /**触发事件，如果为空，则创建时触发*/\r\n    eventName: string;\r\n    /**效用作用的目标对象，如果为空，则是脚本所在的节点本身*/\r\n    target: Sprite;\r\n    /**效果结束后，是否自动移除节点*/\r\n    autoDestroyAtComplete: boolean = true;\r\n\r\n    protected _comlete: Handler;\r\n    protected _tween: Tween;\r\n\r\n    protected _onAwake(): void {\r\n        this.target = this.target || (<Sprite>this.owner);\r\n        if (this.autoDestroyAtComplete) \r\n            this._comlete = Handler.create(this.target, this.target.destroy, null, false);\r\n        if (this.eventName) \r\n            this.owner.on(this.eventName, this, this._exeTween);\r\n        else \r\n            this._exeTween();\r\n    }\r\n\r\n    protected _exeTween(): void {\r\n        this._tween = this._doTween();\r\n        this._tween.repeat = this.repeat;\r\n    }\r\n\r\n    protected _doTween(): Tween {\r\n        return null;\r\n    }\r\n\r\n    onReset(): void {\r\n        this.duration = 1000;\r\n        this.delay = 0;\r\n        this.repeat = 0;\r\n        this.ease = null;\r\n        this.target = null;\r\n        if (this.eventName) {\r\n            this.owner.off(this.eventName, this, this._exeTween);\r\n            this.eventName = null;\r\n        }\r\n        if (this._comlete) {\r\n            this._comlete.recover();\r\n            this._comlete = null;\r\n        }\r\n        if (this._tween) {\r\n            this._tween.clear();\r\n            this._tween = null;\r\n        }\r\n    }\r\n}\r\n\r\n","/**\r\n * <code>Keyboard</code> 类的属性是一些常数，这些常数表示控制游戏时最常用的键。\r\n */\r\nexport class Keyboard {\r\n    /** 与 0 的键控代码值 (48) 关联的常数。*/\r\n    static NUMBER_0: number = 48;\r\n    /** 与 1 的键控代码值 (49) 关联的常数。*/\r\n    static NUMBER_1: number = 49;\r\n    /** 与 2 的键控代码值 (50) 关联的常数。*/\r\n    static NUMBER_2: number = 50;\r\n    /** 与 3 的键控代码值 (51) 关联的常数。*/\r\n    static NUMBER_3: number = 51;\r\n    /** 与 4 的键控代码值 (52) 关联的常数。*/\r\n    static NUMBER_4: number = 52;\r\n    /** 与 5 的键控代码值 (53) 关联的常数。*/\r\n    static NUMBER_5: number = 53;\r\n    /** 与 6 的键控代码值 (54) 关联的常数。*/\r\n    static NUMBER_6: number = 54;\r\n    /** 与 7 的键控代码值 (55) 关联的常数。*/\r\n    static NUMBER_7: number = 55;\r\n    /** 与 8 的键控代码值 (56) 关联的常数。*/\r\n    static NUMBER_8: number = 56;\r\n    /** 与 9 的键控代码值 (57) 关联的常数。*/\r\n    static NUMBER_9: number = 57;\r\n\r\n    /** 与 A 键的键控代码值 (65) 关联的常数。*/\r\n    static A: number = 65;\r\n    /** 与 B 键的键控代码值 (66) 关联的常数。*/\r\n    static B: number = 66;\r\n    /** 与 C 键的键控代码值 (67) 关联的常数。*/\r\n    static C: number = 67;\r\n    /** 与 D 键的键控代码值 (68) 关联的常数。*/\r\n    static D: number = 68;\r\n    /** 与 E 键的键控代码值 (69) 关联的常数。*/\r\n    static E: number = 69;\r\n    /** 与 F 键的键控代码值 (70) 关联的常数。*/\r\n    static F: number = 70;\r\n    /** 与 G 键的键控代码值 (71) 关联的常数。*/\r\n    static G: number = 71;\r\n    /** 与 H 键的键控代码值 (72) 关联的常数。*/\r\n    static H: number = 72;\r\n    /** 与 I 键的键控代码值 (73) 关联的常数。*/\r\n    static I: number = 73;\r\n    /** 与 J 键的键控代码值 (74) 关联的常数。*/\r\n    static J: number = 74;\r\n    /** 与 K 键的键控代码值 (75) 关联的常数。*/\r\n    static K: number = 75;\r\n    /** 与 L 键的键控代码值 (76) 关联的常数。*/\r\n    static L: number = 76;\r\n    /** 与 M 键的键控代码值 (77) 关联的常数。*/\r\n    static M: number = 77;\r\n    /** 与 N 键的键控代码值 (78) 关联的常数。*/\r\n    static N: number = 78;\r\n    /** 与 O 键的键控代码值 (79) 关联的常数。*/\r\n    static O: number = 79;\r\n    /** 与 P 键的键控代码值 (80) 关联的常数。*/\r\n    static P: number = 80;\r\n    /** 与 Q 键的键控代码值 (81) 关联的常数。*/\r\n    static Q: number = 81;\r\n    /** 与 R 键的键控代码值 (82) 关联的常数。*/\r\n    static R: number = 82;\r\n    /** 与 S 键的键控代码值 (83) 关联的常数。*/\r\n    static S: number = 83;\r\n    /** 与 T 键的键控代码值 (84) 关联的常数。*/\r\n    static T: number = 84;\r\n    /** 与 U 键的键控代码值 (85) 关联的常数。*/\r\n    static U: number = 85;\r\n    /** 与 V 键的键控代码值 (86) 关联的常数。*/\r\n    static V: number = 86;\r\n    /** 与 W 键的键控代码值 (87) 关联的常数。*/\r\n    static W: number = 87;\r\n    /** 与 X 键的键控代码值 (88) 关联的常数。*/\r\n    static X: number = 88;\r\n    /** 与 Y 键的键控代码值 (89) 关联的常数。*/\r\n    static Y: number = 89;\r\n    /** 与 Z 键的键控代码值 (90) 关联的常数。*/\r\n    static Z: number = 90;\r\n\r\n    /** 与 F1 的键控代码值 (112) 关联的常数。*/\r\n    static F1: number = 112;\r\n    /** 与 F2 的键控代码值 (113) 关联的常数。*/\r\n    static F2: number = 113;\r\n    /** 与 F3 的键控代码值 (114) 关联的常数。*/\r\n    static F3: number = 114;\r\n    /** 与 F4 的键控代码值 (115) 关联的常数。*/\r\n    static F4: number = 115;\r\n    /** 与 F5 的键控代码值 (116) 关联的常数。*/\r\n    static F5: number = 116;\r\n    /** 与 F6 的键控代码值 (117) 关联的常数。*/\r\n    static F6: number = 117;\r\n    /** 与 F7 的键控代码值 (118) 关联的常数。*/\r\n    static F7: number = 118;\r\n    /** 与 F8 的键控代码值 (119) 关联的常数。*/\r\n    static F8: number = 119;\r\n    /** 与 F9 的键控代码值 (120) 关联的常数。*/\r\n    static F9: number = 120;\r\n    /** 与 F10 的键控代码值 (121) 关联的常数。*/\r\n    static F10: number = 121;\r\n    /** 与 F11 的键控代码值 (122) 关联的常数。*/\r\n    static F11: number = 122;\r\n    /** 与 F12 的键控代码值 (123) 关联的常数。*/\r\n    static F12: number = 123;\r\n    /** 与 F13 的键控代码值 (124) 关联的常数。*/\r\n    static F13: number = 124;\r\n    /** 与 F14 的键控代码值 (125) 关联的常数。*/\r\n    static F14: number = 125;\r\n    /** 与 F15 的键控代码值 (126) 关联的常数。*/\r\n    static F15: number = 126;\r\n\r\n    /** 与数字键盘的伪键控代码 (21) 关联的常数。*/\r\n    static NUMPAD: number = 21;\r\n    /** 与数字键盘上的数字 0 的键控代码值 (96) 关联的常数。*/\r\n    static NUMPAD_0: number = 96;\r\n    /** 与数字键盘上的数字 1 的键控代码值 (97) 关联的常数。*/\r\n    static NUMPAD_1: number = 97;\r\n    /** 与数字键盘上的数字 2 的键控代码值 (98) 关联的常数。*/\r\n    static NUMPAD_2: number = 98;\r\n    /** 与数字键盘上的数字 3 的键控代码值 (99) 关联的常数。*/\r\n    static NUMPAD_3: number = 99;\r\n    /** 与数字键盘上的数字 4 的键控代码值 (100) 关联的常数。*/\r\n    static NUMPAD_4: number = 100;\r\n    /** 与数字键盘上的数字 5 的键控代码值 (101) 关联的常数。*/\r\n    static NUMPAD_5: number = 101;\r\n    /** 与数字键盘上的数字 6 的键控代码值 (102) 关联的常数。*/\r\n    static NUMPAD_6: number = 102;\r\n    /** 与数字键盘上的数字 7 的键控代码值 (103) 关联的常数。*/\r\n    static NUMPAD_7: number = 103;\r\n    /** 与数字键盘上的数字 8 的键控代码值 (104) 关联的常数。*/\r\n    static NUMPAD_8: number = 104;\r\n    /** 与数字键盘上的数字 9 的键控代码值 (105) 关联的常数。*/\r\n    static NUMPAD_9: number = 105;\r\n\r\n    /** 与数字键盘上的加号 (+) 的键控代码值 (107) 关联的常数。*/\r\n    static NUMPAD_ADD: number = 107;\r\n    /** 与数字键盘上的小数点 (.) 的键控代码值 (110) 关联的常数。*/\r\n    static NUMPAD_DECIMAL: number = 110;\r\n    /** 与数字键盘上的除号 (/) 的键控代码值 (111) 关联的常数。*/\r\n    static NUMPAD_DIVIDE: number = 111;\r\n    /** 与数字键盘上的 Enter 的键控代码值 (108) 关联的常数。*/\r\n    static NUMPAD_ENTER: number = 108;\r\n    /** 与数字键盘上的乘号 (*) 的键控代码值 (106) 关联的常数。*/\r\n    static NUMPAD_MULTIPLY: number = 106;\r\n    /** 与数字键盘上的减号 (-) 的键控代码值 (109) 关联的常数。*/\r\n    static NUMPAD_SUBTRACT: number = 109;\r\n    /** 与 ; 键的键控代码值 (186) 关联的常数。*/\r\n    static SEMICOLON: number = 186;\r\n    /** 与 = 键的键控代码值 (187) 关联的常数。*/\r\n    static EQUAL: number = 187;\r\n    /** 与 F15 的键控代码值 (188) 关联的常数。*/\r\n    static COMMA: number = 188;\r\n    /** 与 - 键的键控代码值 (189) 关联的常数。*/\r\n    static MINUS: number = 189;\r\n    /** 与 . 键的键控代码值 (190) 关联的常数。*/\r\n    static PERIOD: number = 190;\r\n    /** 与 / 键的键控代码值 (191) 关联的常数。*/\r\n    static SLASH: number = 191;\r\n    /** 与 ` 键的键控代码值 (192) 关联的常数。*/\r\n    static BACKQUOTE: number = 192;\r\n    /** 与 [ 键的键控代码值 (219) 关联的常数。*/\r\n    static LEFTBRACKET: number = 219;\r\n    /** 与 \\ 键的键控代码值 (220) 关联的常数。*/\r\n    static BACKSLASH: number = 220;\r\n    /** 与 ] 键的键控代码值 (221) 关联的常数。*/\r\n    static RIGHTBRACKET: number = 221;\r\n    /** 与 ' 键的键控代码值 (222) 关联的常数。*/\r\n    static QUOTE: number = 222;\r\n    /** 与 Alternate (Option) 键的键控代码值 (18) 关联的常数。*/\r\n    static ALTERNATE: number = 18;\r\n    /** 与 Backspace 的键控代码值 (8) 关联的常数。*/\r\n    static BACKSPACE: number = 8;\r\n    /** 与 Caps Lock 的键控代码值 (20) 关联的常数。*/\r\n    static CAPS_LOCK: number = 20;\r\n    /** 与 Mac 命令键 (15) 关联的常数。*/\r\n    static COMMAND: number = 15;\r\n    /** 与 Ctrl 的键控代码值 (17) 关联的常数。*/\r\n    static CONTROL: number = 17;\r\n    /** 与 Delete 的键控代码值 (46) 关联的常数。*/\r\n    static DELETE: number = 46;\r\n    /** 与 Enter 的键控代码值 (13) 关联的常数。*/\r\n    static ENTER: number = 13;\r\n    /** 与 Esc 的键控代码值 (27) 关联的常数。*/\r\n    static ESCAPE: number = 27;\r\n    /** 与 Page Up 的键控代码值 (33) 关联的常数。*/\r\n    static PAGE_UP: number = 33;\r\n    /** 与 Page Down 的键控代码值 (34) 关联的常数。*/\r\n    static PAGE_DOWN: number = 34;\r\n    /** 与 End 的键控代码值 (35) 关联的常数。*/\r\n    static END: number = 35;\r\n    /** 与 Home 的键控代码值 (36) 关联的常数。*/\r\n    static HOME: number = 36;\r\n    /** 与向左箭头键的键控代码值 (37) 关联的常数。*/\r\n    static LEFT: number = 37;\r\n    /** 与向上箭头键的键控代码值 (38) 关联的常数。*/\r\n    static UP: number = 38;\r\n    /** 与向右箭头键的键控代码值 (39) 关联的常数。*/\r\n    static RIGHT: number = 39;\r\n    /** 与向下箭头键的键控代码值 (40) 关联的常数。*/\r\n    static DOWN: number = 40;\r\n    /** 与 Shift 的键控代码值 (16) 关联的常数。*/\r\n    static SHIFT: number = 16;\r\n    /** 与空格键的键控代码值 (32) 关联的常数。*/\r\n    static SPACE: number = 32;\r\n    /** 与 Tab 的键控代码值 (9) 关联的常数。*/\r\n    static TAB: number = 9;\r\n    /** 与 Insert 的键控代码值 (45) 关联的常数。*/\r\n    static INSERT: number = 45;\r\n}\r\n\r\n\r\n","/**\r\n * <p><code>KeyLocation</code> 类包含表示在键盘或类似键盘的输入设备上按键位置的常量。</p>\r\n * <p><code>KeyLocation</code> 常数用在键盘事件对象的 <code>keyLocation </code>属性中。</p>\r\n */\r\nexport class KeyLocation {\r\n    /**\r\n     * 表示激活的键不区分位于左侧还是右侧，也不区分是否位于数字键盘（或者是使用对应于数字键盘的虚拟键激活的）。\r\n     */\r\n    static STANDARD: number = 0;\r\n    /**\r\n     * 表示激活的键在左侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static LEFT: number = 1;\r\n    /**\r\n     * 表示激活的键在右侧键位置（此键有多个可能的位置）。\r\n     */\r\n    static RIGHT: number = 2;\r\n    /**\r\n     * <p>表示激活的键位于数字键盘或者是使用对应于数字键盘的虚拟键激活的。</p>\r\n     * <p>注意：此属性只在flash模式下有效。</p>\r\n     * */\r\n    static NUM_PAD: number = 3;\r\n\r\n}\r\n\r\n\r\n","import { ShaderVariable } from \"../RenderEngine/RenderShader/ShaderVariable\";\r\n\r\n/**\r\n * @private\r\n * CommandEncoder Shader变量集合\r\n */\r\nexport class CommandEncoder {\r\n    \r\n    /**@internal shader variable list*/\r\n    _idata: ShaderVariable[] = [];\r\n\r\n    /**\r\n     * 实例化一个ShaderVariable集合\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns Array of ShaderVariable\r\n     */\r\n    getArrayData(): ShaderVariable[] {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @returns count of ShaderVariableArray\r\n     */\r\n    getCount(): number {\r\n        return this._idata.length;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * add one ShaderVariable\r\n     * @param variable \r\n     */\r\n    addShaderUniform(variable: ShaderVariable): void {\r\n        this._idata.push(variable);\r\n    }\r\n\r\n}\r\n\r\n","import { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Stage } from \"../display/Stage\"\r\nimport { RenderSprite } from \"../renders/RenderSprite\"\r\nimport { Context } from \"../resource/Context\"\r\nimport { ILaya } from \"../../ILaya\";\r\n/**\r\n * ...\r\n * @author ww\r\n */\r\nexport class QuickTestTool {\r\n\r\n    private static showedDic: any = {};\r\n    private static _rendertypeToStrDic: any = {};\r\n    private static _typeToNameDic: any = {};\r\n\r\n    //TODO:coverage\r\n    static getMCDName(type: number): string {\r\n        return QuickTestTool._typeToNameDic[type];\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showRenderTypeInfo(type: any, force: boolean = false): void {\r\n        if (!force && QuickTestTool.showedDic[type])\r\n            return;\r\n        QuickTestTool.showedDic[type] = true;\r\n        if (!QuickTestTool._rendertypeToStrDic[type]) {\r\n            var arr: any[] = [];\r\n            var tType: number;\r\n            tType = 1;\r\n            while (tType <= type) {\r\n                if (tType & type) {\r\n                    arr.push(QuickTestTool.getMCDName(tType & type));\r\n                }\r\n                tType = tType << 1;\r\n            }\r\n            QuickTestTool._rendertypeToStrDic[type] = arr.join(\",\");\r\n        }\r\n        console.log(\"cmd:\", QuickTestTool._rendertypeToStrDic[type]);\r\n\r\n    }\r\n\r\n    //TODO:coverage\r\n    static __init__(): void {\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.ALPHA] = \"ALPHA\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM] = \"TRANSFORM\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TEXTURE] = \"TEXTURE\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.GRAPHICS] = \"GRAPHICS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.ONECHILD] = \"ONECHILD\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CHILDS] = \"CHILDS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.TRANSFORM | SpriteConst.ALPHA] = \"TRANSFORM|ALPHA\";\r\n\r\n        QuickTestTool._typeToNameDic[SpriteConst.CANVAS] = \"CANVAS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.BLEND] = \"BLEND\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.FILTERS] = \"FILTERS\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.MASK] = \"MASK\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.CLIP] = \"CLIP\";\r\n        QuickTestTool._typeToNameDic[SpriteConst.LAYAGL3D] = \"LAYAGL3D\";\r\n    }\r\n    _renderType: number;\r\n    _repaint: number;\r\n    _x: number;\r\n    _y: number;\r\n    //TODO:coverage\r\n    constructor() {\r\n\r\n    }\r\n    /**\r\n     * 更新、呈现显示对象。由系统调用。\r\n     * @param\tcontext 渲染的上下文引用。\r\n     * @param\tx X轴坐标。\r\n     * @param\ty Y轴坐标。\r\n     */\r\n    //TODO:coverage\r\n    render(context: Context, x: number, y: number): void {\r\n        QuickTestTool._addType(this._renderType);\r\n        QuickTestTool.showRenderTypeInfo(this._renderType);\r\n        //if (_renderType == (SpriteConst.IMAGE | SpriteConst.GRAPHICS | SpriteConst.CHILDS))\r\n        //{\r\n        //debugger;\r\n        //}\r\n        RenderSprite.renders[this._renderType]._fun(this, context, x + this._x, y + this._y);\r\n        this._repaint = 0;\r\n    }\r\n\r\n    private static _PreStageRender: Function;\r\n\r\n    /**@internal */\r\n    //TODO:coverage\r\n    _stageRender(context: Context, x: number, y: number): void {\r\n        QuickTestTool._countStart();\r\n        QuickTestTool._PreStageRender.call(ILaya.stage, context, x, y);//TODO TS\r\n        QuickTestTool._countEnd();\r\n    }\r\n    private static _countDic: any = {};\r\n\r\n    //TODO:coverage\r\n    private static _countStart(): void {\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            QuickTestTool._countDic[key] = 0;\r\n        }\r\n    }\r\n    private static _i: number = 0;\r\n\r\n    //TODO:coverage\r\n    private static _countEnd(): void {\r\n        QuickTestTool._i++;\r\n        if (QuickTestTool._i > 60) {\r\n            QuickTestTool.showCountInfo();\r\n            QuickTestTool._i = 0;\r\n        }\r\n    }\r\n\r\n    /**@internal */\r\n    private static _addType(type: number): void {\r\n        if (!QuickTestTool._countDic[type]) {\r\n            QuickTestTool._countDic[type] = 1;\r\n        } else {\r\n            QuickTestTool._countDic[type] += 1;\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static showCountInfo(): void {\r\n        console.log(\"===================\");\r\n        var key: string;\r\n        for (key in QuickTestTool._countDic) {\r\n            console.log(\"count:\" + QuickTestTool._countDic[key]);\r\n            QuickTestTool.showRenderTypeInfo(key, true);\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static enableQuickTest(): void {\r\n        QuickTestTool.__init__();\r\n        Sprite[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"render\"];\r\n        QuickTestTool._PreStageRender = Stage[\"prototype\"][\"render\"];\r\n        Stage[\"prototype\"][\"render\"] = QuickTestTool[\"prototype\"][\"_stageRender\"];\r\n    }\r\n}\r\n\r\n\r\n","import { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { Browser } from \"../utils/Browser\"\r\nimport { Byte } from \"../utils/Byte\"\r\n\r\n/**\r\n * 连接建立成功后调度。\r\n * @eventType Event.OPEN\r\n * */\r\n/*[Event(name = \"open\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 接收到数据后调度。\r\n * @eventType Event.MESSAGE\r\n * */\r\n/*[Event(name = \"message\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 连接被关闭后调度。\r\n * @eventType Event.CLOSE\r\n * */\r\n/*[Event(name = \"close\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 出现异常后调度。\r\n * @eventType Event.ERROR\r\n * */\r\n/*[Event(name = \"error\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <p> <code>Socket</code> 封装了 HTML5 WebSocket ，允许服务器端与客户端进行全双工（full-duplex）的实时通信，并且允许跨域通信。在建立连接后，服务器和 Browser/Client Agent 都能主动的向对方发送或接收文本和二进制数据。</p>\r\n * <p>要使用 <code>Socket</code> 类的方法，请先使用构造函数 <code>new Socket</code> 创建一个 <code>Socket</code> 对象。 <code>Socket</code> 以异步方式传输和接收数据。</p>\r\n */\r\nexport class Socket extends EventDispatcher {\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     */\r\n    static LITTLE_ENDIAN: string = \"littleEndian\";\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。有时也称之为网络字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     */\r\n    static BIG_ENDIAN: string = \"bigEndian\";\r\n    /**@internal */\r\n    _endian: string;\r\n    /**@private */\r\n    protected _socket: any;\r\n    /**@private */\r\n    private _connected: boolean;\r\n    /**@private */\r\n    private _addInputPosition: number;\r\n    /**@private */\r\n    private _input: any;\r\n    /**@private */\r\n    private _output: any;\r\n\r\n    /**\r\n     * 不再缓存服务端发来的数据，如果传输的数据为字符串格式，建议设置为true，减少二进制转换消耗。\r\n     */\r\n    disableInput: boolean = false;\r\n    /**\r\n     * 用来发送和接收数据的 <code>Byte</code> 类。\r\n     */\r\n    private _byteClass: new () => any;\r\n    /**\r\n     * <p>子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组。必须在调用 connect 或者 connectByUrl 之前进行赋值，否则无效。</p>\r\n     * <p>指定后，只有当服务器选择了其中的某个子协议，连接才能建立成功，否则建立失败，派发 Event.ERROR 事件。</p>\r\n     * @see https://html.spec.whatwg.org/multipage/comms.html#dom-websocket\r\n     */\r\n    protocols: any = [];\r\n\r\n    /**\r\n     * 缓存的服务端发来的数据。\r\n     */\r\n    get input(): any {\r\n        return this._input;\r\n    }\r\n\r\n    /**\r\n     * 表示需要发送至服务端的缓冲区中的数据。\r\n     */\r\n    get output(): any {\r\n        return this._output;\r\n    }\r\n\r\n    /**\r\n     * 表示此 Socket 对象目前是否已连接。\r\n     */\r\n    get connected(): boolean {\r\n        return this._connected;\r\n    }\r\n\r\n    /**\r\n     * <p>主机字节序，是 CPU 存放数据的两种不同顺序，包括小端字节序和大端字节序。</p>\r\n     * <p> LITTLE_ENDIAN ：小端字节序，地址低位存储值的低位，地址高位存储值的高位。</p>\r\n     * <p> BIG_ENDIAN ：大端字节序，地址低位存储值的高位，地址高位存储值的低位。</p>\r\n     */\r\n    get endian(): string {\r\n        return this._endian;\r\n    }\r\n\r\n    set endian(value: string) {\r\n        this._endian = value;\r\n        if (this._input != null) this._input.endian = value;\r\n        if (this._output != null) this._output.endian = value;\r\n    }\r\n\r\n    /**\r\n     * <p>创建新的 Socket 对象。默认字节序为 Socket.BIG_ENDIAN 。若未指定参数，将创建一个最初处于断开状态的套接字。若指定了有效参数，则尝试连接到指定的主机和端口。</p>\r\n     * @param host\t\t服务器地址。\r\n     * @param port\t\t服务器端口。\r\n     * @param byteClass\t用于接收和发送数据的 Byte 类。如果为 null ，则使用 Byte 类，也可传入 Byte 类的子类。\r\n     * @param protocols\t子协议名称。子协议名称字符串，或由多个子协议名称字符串构成的数组\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     * @see laya.utils.Byte\r\n     */\r\n    constructor(host: string | null = null, port: number = 0, byteClass: new () => any = null, protocols: any[] | null = null, isSecure: boolean = false) {\r\n        super();\r\n        this._byteClass = byteClass ? byteClass : Byte;\r\n        this.protocols = protocols;\r\n        this.endian = Socket.BIG_ENDIAN;\r\n        if (host && port > 0 && port < 65535) this.connect(host, port, isSecure);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的主机和端口。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param host\t服务器地址。\r\n     * @param port\t服务器端口。\r\n     * @param isSecure  是否使用WebSocket安全协议wss，默认（false）使用普通协议ws\r\n     */\r\n    connect(host: string, port: number, isSecure: boolean = false): void {\r\n        var url: string = (isSecure) ? \"wss\" : \"ws\" + \"://\" + host + \":\" + port;\r\n        this.connectByUrl(url);\r\n    }\r\n\r\n    /**\r\n     * <p>连接到指定的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。</p>\r\n     * <p>连接成功派发 Event.OPEN 事件；连接失败派发 Event.ERROR 事件；连接被关闭派发 Event.CLOSE 事件；接收到数据派发 Event.MESSAGE 事件； 除了 Event.MESSAGE 事件参数为数据内容，其他事件参数都是原生的 HTML DOM Event 对象。</p>\r\n     * @param url\t要连接的服务端 WebSocket URL。 URL 类似 ws://yourdomain:port。\r\n     */\r\n    connectByUrl(url: string): void {\r\n        if (this._socket != null) this.close();\r\n\r\n        this._socket && this.cleanSocket();\r\n\r\n        if (!this.protocols || this.protocols.length == 0) {\r\n            this._socket = new Browser.window.WebSocket(url);\r\n        } else {\r\n            this._socket = new Browser.window.WebSocket(url, this.protocols);\r\n        }\r\n\r\n        this._socket.binaryType = \"arraybuffer\";\r\n\r\n        this._output = new this._byteClass();\r\n        this._output.endian = this.endian;\r\n        this._input = new this._byteClass();\r\n        this._input.endian = this.endian;\r\n        this._addInputPosition = 0;\r\n\r\n        this._socket.onopen = (e: any) => {\r\n            this._onOpen(e);\r\n        };\r\n        this._socket.onmessage = (msg: any): void => {\r\n            this._onMessage(msg);\r\n        };\r\n        this._socket.onclose = (e: any): void => {\r\n            this._onClose(e);\r\n        };\r\n        this._socket.onerror = (e: any): void => {\r\n            this._onError(e);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * 清理Socket：关闭Socket链接，关闭事件监听，重置Socket\r\n     */\r\n    cleanSocket(): void {\r\n        this.close();\r\n        this._connected = false;\r\n        this._socket.onopen = null;\r\n        this._socket.onmessage = null;\r\n        this._socket.onclose = null;\r\n        this._socket.onerror = null;\r\n        this._socket = null;\r\n    }\r\n\r\n    /**\r\n     * 关闭连接。\r\n     */\r\n    close(): void {\r\n        if (this._socket != null) {\r\n            try {\r\n                this._socket.close();\r\n            } catch (e) {\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接建立成功 。\r\n     */\r\n    protected _onOpen(e: any): void {\r\n        this._connected = true;\r\n        this.event(Event.OPEN, e);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 接收到数据处理方法。\r\n     * @param msg 数据。\r\n     */\r\n    protected _onMessage(msg: any): void {\r\n        if (!msg || !msg.data) return;\r\n        var data: any = msg.data;\r\n        if (this.disableInput && data) {\r\n            this.event(Event.MESSAGE, data);\r\n            return;\r\n        }\r\n        if (this._input.length > 0 && this._input.bytesAvailable < 1) {\r\n            this._input.clear();\r\n            this._addInputPosition = 0;\r\n        }\r\n        var pre: number = this._input.pos;\r\n        !this._addInputPosition && (this._addInputPosition = 0);\r\n        this._input.pos = this._addInputPosition;\r\n\r\n        if (data) {\r\n            if (typeof (data) == 'string') {\r\n                this._input.writeUTFBytes(data);\r\n            } else {\r\n                this._input.writeArrayBuffer(data);\r\n            }\r\n            this._addInputPosition = this._input.pos;\r\n            this._input.pos = pre;\r\n        }\r\n        this.event(Event.MESSAGE, data);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 连接被关闭处理方法。\r\n     */\r\n    protected _onClose(e: any): void {\r\n        this._connected = false;\r\n        this.event(Event.CLOSE, e)\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 出现异常处理方法。\r\n     */\r\n    protected _onError(e: any): void {\r\n        this.event(Event.ERROR, e)\r\n    }\r\n\r\n    /**\r\n     * 发送数据到服务器。\r\n     * @param\tdata 需要发送的数据，可以是String或者ArrayBuffer。\r\n     */\r\n    send(data: any): void {\r\n        this._socket.send(data);\r\n    }\r\n\r\n    /**\r\n     * 发送缓冲区中的数据到服务器。\r\n     */\r\n    flush(): void {\r\n        if (this._output && this._output.length > 0) {\r\n            var evt: any;\r\n            try {\r\n                this._socket && this._socket.send(this._output.__getBuffer().slice(0, this._output.length));\r\n            } catch (e) {\r\n                evt = e;\r\n            }\r\n            this._output.endian = this.endian;\r\n            this._output.clear();\r\n            if (evt) this.event(Event.ERROR, evt);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export class Base64Tool {\r\n\r\n    static chars: string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\r\n    static reg = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@\\/?%\\s]*?)\\s*$/i;\r\n    static reghead = /^\\s*data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,/i;\r\n\r\n    // Use a lookup table to find the index.\r\n    static lookup: Uint8Array = null;\r\n\r\n    static init(): void {\r\n        if (Base64Tool.lookup)\r\n            return;\r\n        Base64Tool.lookup = new Uint8Array(256)\r\n        for (var i: number = 0; i < Base64Tool.chars.length; i++) {\r\n            Base64Tool.lookup[Base64Tool.chars.charCodeAt(i)] = i;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判断字符串是否是 base64\r\n     * @param str \r\n     */\r\n    static isBase64String(str: string): boolean {\r\n        return Base64Tool.reg.test(str);\r\n    }\r\n\r\n    /**\r\n     * 编码ArrayBuffer \r\n     * @param arraybuffer\r\n     * @return \r\n     * \r\n     */\r\n    static encode(arraybuffer: ArrayBuffer): string {\r\n        var bytes: Uint8Array = new Uint8Array(arraybuffer), i: number, len: number = bytes[\"length\"], base64: string = \"\";\r\n\r\n        for (i = 0; i < len; i += 3) {\r\n            base64 += Base64Tool.chars[bytes[i] >> 2];\r\n            base64 += Base64Tool.chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\r\n            base64 += Base64Tool.chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\r\n            base64 += Base64Tool.chars[bytes[i + 2] & 63];\r\n        }\r\n\r\n        if ((len % 3) === 2) {\r\n            base64 = base64.substring(0, base64.length - 1) + \"=\";\r\n        }\r\n        else if (len % 3 === 1) {\r\n            base64 = base64.substring(0, base64.length - 2) + \"==\";\r\n        }\r\n\r\n        return base64;\r\n    }\r\n\r\n    /**\r\n     * 解码成ArrayBuffer \r\n     * @param base64\r\n     * @return \r\n     * \r\n     */\r\n    static decode(base64: string): ArrayBuffer {\r\n        Base64Tool.init();\r\n        var bufferLength: number = base64.length * 0.75, len: number = base64.length, i: number, p: number = 0, encoded1: number, encoded2: number, encoded3: number, encoded4: number;\r\n\r\n        if (base64[base64.length - 1] === \"=\") {\r\n            bufferLength--;\r\n            if (base64[base64.length - 2] === \"=\") {\r\n                bufferLength--;\r\n            }\r\n        }\r\n\r\n        var arraybuffer: ArrayBuffer = new ArrayBuffer(bufferLength), bytes: Uint8Array = new Uint8Array(arraybuffer);\r\n\r\n        for (i = 0; i < len; i += 4) {\r\n            encoded1 = Base64Tool.lookup[base64.charCodeAt(i)];\r\n            encoded2 = Base64Tool.lookup[base64.charCodeAt(i + 1)];\r\n            encoded3 = Base64Tool.lookup[base64.charCodeAt(i + 2)];\r\n            encoded4 = Base64Tool.lookup[base64.charCodeAt(i + 3)];\r\n\r\n            bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\r\n            bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\r\n            bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\r\n        }\r\n\r\n        return arraybuffer;\r\n    }\r\n\r\n}","import { Browser } from \"./Browser\";\r\n\r\n/**\r\n * <code>Log</code> 类用于在界面内显示日志记录信息。\r\n * 注意：在加速器内不可使用\r\n */\r\nexport class Log {\r\n\r\n    /**@private */\r\n    private static _logdiv: any;\r\n    /**@private */\r\n    private static _btn: any;\r\n    /**@private */\r\n    private static _count: number = 0;\r\n    /**最大打印数量，超过这个数量，则自动清理一次，默认为50次*/\r\n    static maxCount: number = 50;\r\n    /**是否自动滚动到底部，默认为true*/\r\n    static autoScrollToBottom: boolean = true;\r\n\r\n    /**\r\n     * 激活Log系统，使用方法Laya.init(800,600,Laya.Log);\r\n     */\r\n    static enable(): void {\r\n        if (!Log._logdiv) {\r\n            Log._logdiv = Browser.createElement('div');\r\n            Log._logdiv.style.cssText = \"border:white;padding:4px;overflow-y:auto;z-index:1000000;background:rgba(100,100,100,0.6);color:white;position: absolute;left:0px;top:0px;width:50%;height:50%;\";\r\n            Browser.document.body.appendChild(Log._logdiv);\r\n\r\n            Log._btn = Browser.createElement(\"button\");\r\n            Log._btn.innerText = \"Hide\";\r\n            Log._btn.style.cssText = \"z-index:1000001;position: absolute;left:10px;top:10px;\";\r\n            Log._btn.onclick = Log.toggle;\r\n            Browser.document.body.appendChild(Log._btn);\r\n        }\r\n    }\r\n\r\n    /**隐藏/显示日志面板*/\r\n    static toggle(): void {\r\n        var style: any = Log._logdiv.style;\r\n        if (style.display === \"\") {\r\n            Log._btn.innerText = \"Show\";\r\n            style.display = \"none\";\r\n        } else {\r\n            Log._btn.innerText = \"Hide\";\r\n            style.display = \"\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 增加日志内容。\r\n     * @param\tvalue 需要增加的日志内容。\r\n     */\r\n    static print(value: string): void {\r\n        if (Log._logdiv) {\r\n            //内容太多清理掉\r\n            if (Log._count >= Log.maxCount) Log.clear();\r\n            Log._count++;\r\n\r\n            Log._logdiv.innerText += value + \"\\n\";\r\n            //自动滚动\r\n            if (Log.autoScrollToBottom) {\r\n                if (Log._logdiv.scrollHeight - Log._logdiv.scrollTop - Log._logdiv.clientHeight < 50) {\r\n                    Log._logdiv.scrollTop = Log._logdiv.scrollHeight;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清理日志\r\n     */\r\n    static clear(): void {\r\n        Log._logdiv.innerText = \"\";\r\n        Log._count = 0;\r\n    }\r\n}\r\n\r\n","//import { PerfHUD } from \"./PerfHUD\";\r\nlet DATANUM = 300;\r\n/**\r\n * @internal\r\n */\r\nexport class PerfData {\r\n    id: number;\r\n    name: string;\r\n    color: number;\r\n    scale: number = 1.0;\r\n    datas: any[] = new Array(DATANUM);\r\n    datapos: number = 0;\r\n    constructor(id: number, color: number, name: string, scale: number) {\r\n        this.id = id;\r\n        this.color = color;\r\n        this.name = name;\r\n        this.scale = scale;\r\n    }\r\n    addData(v: number): void {\r\n        this.datas[this.datapos] = v;\r\n        this.datapos++;\r\n        this.datapos %= DATANUM;\r\n    }\r\n}\r\n\r\n","import { PerfData } from \"./PerfData\";\r\nimport { Sprite } from \"../display/Sprite\"\r\nimport { SpriteConst } from \"../display/SpriteConst\"\r\nimport { Context } from \"../resource/Context\"\r\n/**\r\n * @internal\r\n */\r\nexport class PerfHUD extends Sprite {\r\n    private static _lastTm: number = 0;\t//perf Data\r\n    private static _now: () => number = null;\r\n    private datas: any[] = [];\r\n    static DATANUM: number = 300;\r\n\r\n    xdata: any[] = new Array(PerfHUD.DATANUM);\r\n    ydata: any[] = new Array(PerfHUD.DATANUM);\r\n\r\n    hud_width: number = 800;\r\n    hud_height: number = 200;\r\n\r\n    gMinV: number = 0;\r\n    gMaxV: number = 100;\r\n\r\n    private textSpace: number = 40;\t//留给刻度文字的\r\n    static inst: PerfHUD;\r\n\r\n    private _now: Function;\r\n    private sttm: number = 0;\r\n\r\n    static drawTexTm: number = 0;\r\n\r\n    //TODO:coverage\r\n    constructor() {\r\n        super();\r\n        PerfHUD.inst = this;\r\n        this._renderType |= SpriteConst.CUSTOM;\r\n        this._setCustomRender();\r\n\r\n        this.addDataDef(0, 0xffffff, 'frame', 1.0);\r\n        this.addDataDef(1, 0x00ff00, 'update', 1.0);\r\n        this.addDataDef(2, 0xff0000, 'flush', 1.0);\r\n        PerfHUD._now = performance ? performance.now.bind(performance) : Date.now;\r\n    }\r\n\r\n    //TODO:coverage\r\n    now(): number {\r\n        return PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    start(): void {\r\n        this.sttm = PerfHUD._now();\r\n    }\r\n\r\n    //TODO:coverage\r\n    end(i: number): void {\r\n        var dt: number = PerfHUD._now() - this.sttm;\r\n        this.updateValue(i, dt);\r\n    }\r\n\r\n    //TODO:coverage\r\n    config(w: number, h: number): void {\r\n        this.hud_width = w;\r\n        this.hud_height = h;\r\n    }\r\n\r\n    //TODO:coverage\r\n    addDataDef(id: number, color: number, name: string, scale: number): void {\r\n        this.datas[id] = new PerfData(id, color, name, scale);\r\n    }\r\n\r\n    //TODO:coverage\r\n    updateValue(id: number, v: number): void {\r\n        this.datas[id].addData(v);\r\n    }\r\n\r\n    //TODO:coverage\r\n    v2y(v: number): number {\r\n        var bb: number = this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n        return this._y + this.hud_height * (1 - (v - this.gMinV) / this.gMaxV);\r\n    }\r\n\r\n    //TODO:coverage\r\n    drawHLine(ctx: Context, v: number, color: string, text: string): void {\r\n        var sx: number = this._x;\r\n        var ex: number = this._x + this.hud_width;\r\n        var sy: number = this.v2y(v);\r\n        ctx.fillText(text, sx, sy - 6, null, 'green', null);\r\n        sx += this.textSpace;\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(sx, sy, this._x + this.hud_width, 1, null);\r\n    }\r\n\r\n    //TODO:coverage\r\n    /**\r\n     * \r\n     * @param ctx \r\n     * @param x \r\n     * @param y \r\n     * @override\r\n     */\r\n    customRender(ctx: Context, x: number, y: number): void {\r\n        var now: number = performance.now();;\r\n        if (PerfHUD._lastTm <= 0) PerfHUD._lastTm = now;\r\n        this.updateValue(0, now - PerfHUD._lastTm);\r\n        PerfHUD._lastTm = now;\r\n\r\n        ctx.save();\r\n        ctx.fillRect(this._x, this._y, this.hud_width, this.hud_height + 4, '#000000cc');\r\n        ctx.globalAlpha = 0.9;\r\n        /*\r\n        for ( var i = 0; i < gMaxV; i+=30) {\r\n            drawHLine(ctx, i, 'green', '' + i);// '' + Math.round(1000 / (i + 1)));\r\n        }\r\n        */\r\n        this.drawHLine(ctx, 0, 'green', '    0');\r\n        this.drawHLine(ctx, 10, 'green', '  10');\r\n        this.drawHLine(ctx, 16.667, 'red', ' ');\r\n        this.drawHLine(ctx, 20, 'green', '50|20');\r\n        this.drawHLine(ctx, 16.667 * 2, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 3, 'yellow', '');\r\n        this.drawHLine(ctx, 16.667 * 4, 'yellow', '');\r\n        this.drawHLine(ctx, 50, 'green', '20|50');\r\n        this.drawHLine(ctx, 100, 'green', '10|100');\r\n\r\n        //数据\r\n        for (var di: number = 0, sz: number = this.datas.length; di < sz; di++) {\r\n            var cd: PerfData = this.datas[di];\r\n            if (!cd) continue;\r\n            var dtlen: number = cd.datas.length;\r\n            var dx: number = (this.hud_width - this.textSpace) / dtlen;\r\n            var cx: number = cd.datapos;\r\n            var _cx: number = this._x + this.textSpace;\r\n            ctx.fillStyle = cd.color;\r\n            //开始部分\r\n            /*\r\n            ctx.beginPath();\r\n            ctx.strokeStyle = cd.color;\r\n            ctx.moveTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n            cx++;\r\n            _cx += dx;\r\n            for ( var dtsz:int = dtlen; cx < dtsz; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx]* cd.scale) );\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                ctx.lineTo(_cx, v2y(cd.datas[cx] * cd.scale));\r\n                _cx += dx;\r\n            }\r\n            ctx.stroke();\r\n            */\r\n            for (var dtsz: number = dtlen; cx < dtsz; cx++) {\r\n                var sty: number = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n            //剩下的\r\n            for (cx = 0; cx < cd.datapos; cx++) {\r\n                sty = this.v2y(cd.datas[cx] * cd.scale);\r\n                ctx.fillRect(_cx, sty, dx, this.hud_height + this._y - sty, null);\r\n                _cx += dx;\r\n            }\r\n\r\n        }\r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n","import { CacheManger } from \"./CacheManger\";\r\nimport { Pool } from \"./Pool\";\r\n\r\n/**\r\n * @private\r\n * 基于个数的对象缓存管理器\r\n */\r\nexport class PoolCache {\r\n\r\n    //TODO:\r\n    /**\r\n     * 对象在Pool中的标识\r\n     */\r\n    sign: string;\r\n    /**\r\n     * 允许缓存的最大数量\r\n     */\r\n    maxCount: number = 1000;\r\n\r\n    /**\r\n     * 获取缓存的对象列表\r\n     * @return\r\n     *\r\n     */\r\n    getCacheList(): any[] {\r\n        return Pool.getPoolBySign(this.sign);\r\n    }\r\n\r\n    /**\r\n     * 尝试清理缓存\r\n     * @param force 是否强制清理\r\n     *\r\n     */\r\n    tryDispose(force: boolean): void {\r\n        var list: any[];\r\n        list = Pool.getPoolBySign(this.sign);\r\n        if (list.length > this.maxCount) {\r\n            list.splice(this.maxCount, list.length - this.maxCount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 添加对象缓存管理\r\n     * @param sign 对象在Pool中的标识\r\n     * @param maxCount 允许缓存的最大数量\r\n     *\r\n     */\r\n    static addPoolCacheManager(sign: string, maxCount: number = 100): void {\r\n        var cache: PoolCache;\r\n        cache = new PoolCache();\r\n        cache.sign = sign;\r\n        cache.maxCount = maxCount;\r\n        CacheManger.regCacheByFunction(cache.tryDispose.bind(cache), cache.getCacheList.bind(cache));\r\n    }\r\n}\r\n\r\n","\r\n/**\r\n * <code>SingletonList</code> 类用于实现单例队列。\r\n */\r\nexport class SingletonList<T> {\r\n    /**@internal [只读]*/\r\n    elements: Array<T> = [];\r\n    /** @internal [只读]*/\r\n    length: number = 0;\r\n\r\n    /**\r\n     * 创建一个新的 <code>SingletonList</code> 实例。\r\n     */\r\n    constructor() {\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    protected _add(element: T): void {\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    add(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if ((typeof (element) != \"number\") && index != -1 && index < this.length)\r\n            return;\r\n        if (this.length === this.elements.length)\r\n            this.elements.push(element);\r\n        else\r\n            this.elements[this.length] = element;\r\n        this.length++;\r\n    }\r\n\r\n    indexof(element:T){\r\n        let index = this.elements.indexOf(element);\r\n        if(index!=-1&&index<this.length)\r\n            return index;\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     * @param element \r\n     */\r\n    remove(element: T): void {\r\n        let index = this.elements.indexOf(element);\r\n        if (index != -1 && index < this.length) {\r\n            this.elements[index] = this.elements[this.length - 1];\r\n            this.length--;\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clear(){\r\n        this.elements = [];\r\n        this.length = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    clean(){\r\n        this.elements.length = this.length;\r\n    }\r\n\r\n    destroy() {\r\n        this.elements = null;\r\n    }\r\n}\r\n\r\n\r\n","import { Pool } from \"./Pool\";\r\nimport { Tween } from \"./Tween\";\r\nimport { Browser } from \"./Browser\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Utils } from \"./Utils\";\r\nimport { Event } from \"../events/Event\"\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\nimport { ILaya } from \"../../ILaya\";\r\n\r\n/**\r\n * 整个缓动结束的时候会调度\r\n * @eventType Event.COMPLETE\r\n */\r\n/*[Event(name = \"complete\", type = \"laya.events.Event\")]*/\r\n/**\r\n * 当缓动到达标签时会调度。\r\n * @eventType Event.LABEL\r\n */\r\n/*[Event(name = \"label\", type = \"laya.events.Event\")]*/\r\n\r\n/**\r\n * <code>TimeLine</code> 是一个用来创建时间轴动画的类。\r\n */\r\nexport class TimeLine extends EventDispatcher {\r\n\r\n    private _labelDic: any;\r\n    private _tweenDic: any = {};\r\n    private _tweenDataList: any[] = [];\r\n    private _endTweenDataList: any[];//以结束时间进行排序\r\n    private _currTime: number = 0;\r\n    private _lastTime: number = 0;\r\n    private _startTime: number = 0;\r\n    /**当前动画数据播放到第几个了*/\r\n    private _index: number = 0;\r\n    /**为TWEEN创建属于自己的唯一标识，方便管理*/\r\n    private _gidIndex: number = 0;\r\n    /**保留所有对象第一次注册动画时的状态（根据时间跳转时，需要把对象的恢复，再计算接下来的状态）*/\r\n    private _firstTweenDic: any = {};\r\n    /**是否需要排序*/\r\n    private _startTimeSort: boolean = false;\r\n    private _endTimeSort: boolean = false;\r\n    /**是否循环*/\r\n    private _loopKey: boolean = false;\r\n    /** 缩放动画播放的速度。*/\r\n    scale: number = 1;\r\n\r\n    private _frameRate: number = 60;\r\n    private _frameIndex: number = 0;\r\n    private _total: number = 0;\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    static to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).to(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    static from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return (new TimeLine()).from(target, props, duration, ease, offset);\r\n    }\r\n\r\n    /**\r\n     * 控制一个对象，从当前点移动到目标点。\r\n     * @param\ttarget\t\t要控制的对象。\r\n     * @param\tprops\t\t要控制对象的属性。\r\n     * @param\tduration\t对象TWEEN的时间。\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）。\r\n     */\r\n    to(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, true);\r\n    }\r\n\r\n    /**\r\n     * 从 props 属性，缓动到当前状态。\r\n     * @param\ttarget\t\ttarget 目标对象(即将更改属性值的对象)\r\n     * @param\tprops\t\t要控制对象的属性\r\n     * @param\tduration\t对象TWEEN的时间\r\n     * @param\tease\t\t缓动类型\r\n     * @param\toffset\t\t相对于上一个对象，偏移多长时间（单位：毫秒）\r\n     */\r\n    from(target: any, props: any, duration: number, ease: Function = null, offset: number = 0): TimeLine {\r\n        return this._create(target, props, duration, ease, offset, false);\r\n    }\r\n\r\n    /** @private */\r\n    private _create(target: any, props: any, duration: number, ease: Function, offset: number, isTo: boolean): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.isTo = isTo;\r\n        tTweenData.type = 0;\r\n        tTweenData.target = target;\r\n        tTweenData.duration = duration;\r\n        tTweenData.data = props;\r\n        tTweenData.startTime = this._startTime + offset;\r\n        tTweenData.endTime = tTweenData.startTime + tTweenData.duration;\r\n        tTweenData.ease = ease;\r\n        this._startTime = Math.max(tTweenData.endTime, this._startTime);\r\n        this._tweenDataList.push(tTweenData);\r\n        this._startTimeSort = true;\r\n        this._endTimeSort = true;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 在时间队列中加入一个标签。\r\n     * @param\tlabel\t标签名称。\r\n     * @param\toffset\t标签相对于上个动画的偏移时间(单位：毫秒)。\r\n     */\r\n    addLabel(label: string, offset: number): TimeLine {\r\n        var tTweenData: tweenData = Pool.getItemByClass(\"tweenData\", tweenData);\r\n        tTweenData.type = 1;\r\n        tTweenData.data = label;\r\n        tTweenData.endTime = tTweenData.startTime = this._startTime + offset;\r\n        this._labelDic || (this._labelDic = {});\r\n        this._labelDic[label] = tTweenData;\r\n        this._tweenDataList.push(tTweenData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 移除指定的标签\r\n     * @param\tlabel\r\n     */\r\n    removeLabel(label: string): void {\r\n        if (this._labelDic && this._labelDic[label]) {\r\n            var tTweenData: tweenData = this._labelDic[label];\r\n            if (tTweenData) {\r\n                var tIndex: number = this._tweenDataList.indexOf(tTweenData);\r\n                if (tIndex > -1) {\r\n                    this._tweenDataList.splice(tIndex, 1);\r\n                }\r\n            }\r\n            delete this._labelDic[label];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 动画从整个动画的某一时间开始。\r\n     * @param\ttime(单位：毫秒)。\r\n     */\r\n    gotoTime(time: number): void {\r\n        if (this._tweenDataList == null || this._tweenDataList.length == 0) return;\r\n        var tTween: Tween;\r\n        var tObject: any;\r\n        for (var p in this._firstTweenDic) {\r\n            tObject = this._firstTweenDic[p];\r\n            if (tObject) {\r\n                for (var tDataP in tObject) {\r\n                    if (tDataP in tObject.diyTarget) {\r\n                        tObject.diyTarget[tDataP] = tObject[tDataP];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this._currTime = time;\r\n        this._lastTime = Browser.now();\r\n        var tTweenDataCopyList: any[];\r\n        if (this._endTweenDataList == null || this._endTimeSort) {\r\n            this._endTimeSort = false;\r\n            this._endTweenDataList = tTweenDataCopyList = this._tweenDataList.concat();\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.endTime > paraB.endTime) {\r\n                    return 1;\r\n                } else if (paraA.endTime < paraB.endTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            tTweenDataCopyList.sort(Compare);\r\n        } else {\r\n            tTweenDataCopyList = this._endTweenDataList\r\n        }\r\n\r\n        var tTweenData: tweenData;\r\n        //叠加已经经过的关键帧数据\r\n        for (var i: number = 0, n: number = tTweenDataCopyList.length; i < n; i++) {\r\n            tTweenData = tTweenDataCopyList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    //把经历过的属性加入到对象中\r\n                    var props: any = tTweenData.data;\r\n                    if (tTweenData.isTo) {\r\n                        for (var tP in props) {\r\n                            tTweenData.target[tP] = props[tP];\r\n                        }\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        //创建当前正在行动的TWEEN;\r\n        for (i = 0, n = this._tweenDataList.length; i < n; i++) {\r\n            tTweenData = this._tweenDataList[i];\r\n            if (tTweenData.type == 0) {\r\n                if (time >= tTweenData.startTime && time < tTweenData.endTime) {\r\n                    this._index = Math.max(this._index, i + 1);\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(this._currTime - (time - tTweenData.startTime));\r\n                    tTween._updateEase(this._currTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 从指定的标签开始播。\r\n     * @param\tLabel 标签名。\r\n     */\r\n    gotoLabel(Label: string): void {\r\n        if (this._labelDic == null) return;\r\n        var tLabelData: tweenData = this._labelDic[Label];\r\n        if (tLabelData) this.gotoTime(tLabelData.startTime);\r\n    }\r\n\r\n    /**\r\n     * 暂停整个动画。\r\n     */\r\n    pause(): void {\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 恢复暂停动画的播放。\r\n     */\r\n    resume(): void {\r\n        this.play(this._currTime, this._loopKey);\r\n    }\r\n\r\n    /**\r\n     * 播放动画。\r\n     * @param\ttimeOrLabel 开启播放的时间点或标签名。\r\n     * @param\tloop 是否循环播放。\r\n     */\r\n    play(timeOrLabel: any = 0, loop: boolean = false): void {\r\n        if (!this._tweenDataList) return;\r\n        if (this._startTimeSort) {\r\n            this._startTimeSort = false;\r\n            //对数据排序\r\n            function Compare(paraA: any, paraB: any): number {\r\n                if (paraA.startTime > paraB.startTime) {\r\n                    return 1;\r\n                } else if (paraA.startTime < paraB.startTime) {\r\n                    return -1;\r\n                } else {\r\n                    return 0;\r\n                }\r\n            }\r\n            this._tweenDataList.sort(Compare);\r\n\r\n            for (var i: number = 0, n: number = this._tweenDataList.length; i < n; i++) {\r\n                var tTweenData: tweenData = this._tweenDataList[i];\r\n                if (tTweenData != null && tTweenData.type == 0) {\r\n                    var tTarget: any = tTweenData.target;\r\n                    var gid: number = (tTarget.$_GID || (tTarget.$_GID = Utils.getGID()));\r\n                    var tSrcData: any = null;\r\n                    //把对象的初始属性保留下来，方便跳转时，回复到初始状态\r\n                    if (this._firstTweenDic[gid] == null) {\r\n                        tSrcData = {};\r\n                        tSrcData.diyTarget = tTarget;\r\n                        this._firstTweenDic[gid] = tSrcData;\r\n                    } else {\r\n                        tSrcData = this._firstTweenDic[gid];\r\n                    }\r\n                    for (var p in tTweenData.data) {\r\n                        if (tSrcData[p] == null) {\r\n                            tSrcData[p] = tTarget[p];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (typeof (timeOrLabel) == 'string') {\r\n            this.gotoLabel(timeOrLabel);\r\n        } else {\r\n            this.gotoTime(timeOrLabel);\r\n        }\r\n        this._loopKey = loop;\r\n        this._lastTime = Browser.now();\r\n        ILaya.timer.frameLoop(1, this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 更新当前动画。\r\n     */\r\n    private _update(): void {\r\n        if (this._currTime >= this._startTime) {\r\n            if (this._loopKey) {\r\n                this._complete();\r\n                if (!this._tweenDataList) return;\r\n                this.gotoTime(0);\r\n            } else {\r\n                for (var p in this._tweenDic) {\r\n                    tTween = this._tweenDic[p];\r\n                    tTween.complete();\r\n                }\r\n                this.pause();\r\n                this._complete();\r\n                return;\r\n            }\r\n        }\r\n\r\n        var tNow: number = Browser.now();\r\n        var tFrameTime: number = tNow - this._lastTime;\r\n        var tCurrTime: number = this._currTime += tFrameTime * this.scale;\r\n        this._lastTime = tNow;\r\n\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween._updateEase(tCurrTime);\r\n        }\r\n\r\n        var tTween: Tween;\r\n        if (this._tweenDataList.length != 0 && this._index < this._tweenDataList.length) {\r\n            var tTweenData: tweenData = this._tweenDataList[this._index];\r\n            if (tCurrTime >= tTweenData.startTime) {\r\n                this._index++;\r\n                //创建TWEEN\r\n                if (tTweenData.type == 0) {\r\n                    this._gidIndex++;\r\n                    tTween = Pool.getItemByClass(\"tween\", Tween);\r\n                    tTween._create(tTweenData.target, tTweenData.data, tTweenData.duration, tTweenData.ease, Handler.create(this, this._animComplete, [this._gidIndex]), 0, false, tTweenData.isTo, true, false);\r\n                    tTween.setStartTime(tCurrTime);\r\n                    tTween.gid = this._gidIndex;\r\n                    this._tweenDic[this._gidIndex] = tTween;\r\n                    tTween._updateEase(tCurrTime);\r\n                } else {\r\n                    this.event(Event.LABEL, tTweenData.data);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定的动画索引处的动画播放完成后，把此动画从列表中删除。\r\n     * @param\tindex\r\n     */\r\n    private _animComplete(index: number): void {\r\n        var tTween: Tween = this._tweenDic[index];\r\n        if (tTween) delete this._tweenDic[index];\r\n    }\r\n\r\n    /** @private */\r\n    private _complete(): void {\r\n        this.event(Event.COMPLETE);\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 得到帧索引\r\n     */\r\n    get index(): number {\r\n        return this._frameIndex;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * 设置帧索引\r\n     */\r\n    set index(value: number) {\r\n        this._frameIndex = value;\r\n        this.gotoTime(this._frameIndex / this._frameRate * 1000);\r\n    }\r\n\r\n    /**\r\n     * 得到总帧数。\r\n     */\r\n    get total(): number {\r\n        this._total = Math.floor(this._startTime / 1000 * this._frameRate);\r\n        return this._total;\r\n    }\r\n\r\n    /**\r\n     * 重置所有对象，复用对象的时候使用。\r\n     */\r\n    reset(): void {\r\n        var p: any;\r\n        if (this._labelDic) {\r\n            for (p in this._labelDic) {\r\n                delete this._labelDic[p];\r\n            }\r\n        }\r\n        var tTween: Tween;\r\n        for (p in this._tweenDic) {\r\n            tTween = this._tweenDic[p];\r\n            tTween.clear();\r\n            delete this._tweenDic[p];\r\n        }\r\n        for (p in this._firstTweenDic) {\r\n            delete this._firstTweenDic[p];\r\n        }\r\n        this._endTweenDataList = null;\r\n        if (this._tweenDataList && this._tweenDataList.length) {\r\n            var i: number, len: number;\r\n            len = this._tweenDataList.length;\r\n            for (i = 0; i < len; i++) {\r\n                if (this._tweenDataList[i])\r\n                    this._tweenDataList[i].destroy();\r\n            }\r\n        }\r\n        this._tweenDataList.length = 0;\r\n        this._currTime = 0;\r\n        this._lastTime = 0;\r\n        this._startTime = 0;\r\n        this._index = 0;\r\n        this._gidIndex = 0;\r\n        this.scale = 1;\r\n        ILaya.timer.clear(this, this._update);\r\n    }\r\n\r\n    /**\r\n     * 彻底销毁此对象。\r\n     */\r\n    destroy(): void {\r\n        this.reset();\r\n        this._labelDic = null;\r\n        this._tweenDic = null;\r\n        this._tweenDataList = null;\r\n        this._firstTweenDic = null;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * @internal\r\n */\r\nclass tweenData {\r\n    type: number = 0;//0代表TWEEN,1代表标签\r\n    isTo: boolean = true;\r\n    startTime: number;\r\n    endTime: number;\r\n    target: any;\r\n    duration: number;\r\n    ease: Function;\r\n    data: any;\r\n    destroy(): void {\r\n        this.target = null;\r\n        this.ease = null;\r\n        this.data = null;\r\n        this.isTo = true;\r\n        this.type = 0;\r\n        Pool.recover(\"tweenData\", this);\r\n    }\r\n}\r\n","import { Context } from \"../../resource/Context\"\r\nimport { Pool } from \"../../utils/Pool\"\r\n\r\n/**\r\n * 绘制粒子\r\n * @private\r\n */\r\nexport class DrawParticleCmd {\r\n    static ID: string = \"DrawParticleCmd\";\r\n\r\n    private _templ: any;\r\n\r\n    /**@private */\r\n    static create(_temp: any): DrawParticleCmd {\r\n        var cmd: DrawParticleCmd = Pool.getItemByClass(\"DrawParticleCmd\", DrawParticleCmd);\r\n        cmd._templ = _temp;\r\n        return cmd;\r\n    }\r\n\r\n    /**\r\n     * 回收到对象池\r\n     */\r\n    recover(): void {\r\n        this._templ = null;\r\n        Pool.recover(\"DrawParticleCmd\", this);\r\n    }\r\n\r\n    /**@private */\r\n    run(context: Context, gx: number, gy: number): void {\r\n        //这个只有webgl在用\r\n        context.drawParticle(gx, gy, this._templ);\r\n    }\r\n\r\n    /**@private */\r\n    get cmdID(): string {\r\n        return DrawParticleCmd.ID;\r\n    }\r\n}\r\n\r\n","import { BlendEquationSeparate } from \"./RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"./RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"./RenderEnum/BlendType\";\r\n\r\nexport class BlendState {\r\n    static _blend_All_pool: any = {};\r\n    static _blend_seperate_pool: any = {};\r\n    static create(blendType: number, colorBlendhash: BlendComponent, alphaBlendComponent: BlendComponent) {\r\n\r\n    }\r\n    /** Whether to enable blend. */\r\n    blendType: BlendType = 0;\r\n    colorBlendComponent: BlendComponent;\r\n    alphaBlendComponent: BlendComponent;\r\n    constructor(blendType: number) {\r\n\r\n    }\r\n}\r\n\r\nexport class BlendComponent {\r\n    static _pool: any = {};\r\n    static getHash(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number): number {\r\n        return (blendOperationGLData) + (sourceBlendFactor << 3) + (destinationFactor << 7);\r\n    }\r\n    static getBlendComponent(blendOperationGLData: number, sourceBlendFactor: number, destinationFactor: number) {\r\n        let index = BlendComponent.getHash(blendOperationGLData, sourceBlendFactor, destinationFactor);\r\n        if (!BlendComponent._pool[index])\r\n            BlendComponent._pool[index] = new BlendComponent(blendOperationGLData, sourceBlendFactor, destinationFactor, index);\r\n        return BlendComponent._pool[index];\r\n    }\r\n    _blendOperation: BlendEquationSeparate;\r\n    _blendOperationGLData: number;\r\n    _sourceBlendFactor: BlendFactor;\r\n    _sourceBlendFactorGLData: number;\r\n    _destinationFactor: BlendFactor;\r\n    _destinationFactorGLData: number;\r\n    _hashIndex = 0;\r\n    constructor(blendOperationGLData: BlendEquationSeparate, sourceBlendFactor: BlendFactor, destinationFactor: BlendFactor, hashindex: number) {\r\n        this._hashIndex = hashindex;\r\n        this._blendOperationGLData = blendOperationGLData;\r\n        this._sourceBlendFactor = sourceBlendFactor;\r\n        this._destinationFactor = destinationFactor;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { UniformBufferObject } from \"./UniformBufferObject\";\r\n\r\n/**\r\n * 管理\r\n */\r\nexport class UniformBufferBase {\r\n    /**@internal */\r\n    _singgle: boolean;\r\n    /**@internal */\r\n    _mapArray: UniformBufferObject[];\r\n    /**@internal bind pointer*/\r\n    _glPointerID: number;\r\n    /**@internal ubo name*/\r\n    _blockName: string;\r\n    /**@internal */\r\n    _curUniformBuffer:UniformBufferObject;\r\n    /**\r\n     * 实例化一个UBOBase\r\n     * @internal\r\n     * @param name \r\n     * @param pointer \r\n     * @param single \r\n     */\r\n    constructor(name: string, pointer: number, single: boolean) {\r\n        this._mapArray = [];\r\n        this._blockName = name;\r\n        this._singgle = single;\r\n        this._glPointerID = pointer;\r\n    }\r\n\r\n    /**\r\n     * 增加Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    add(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index == -1)\r\n            this._mapArray.push(buffer);\r\n    }\r\n\r\n    /**\r\n     * 移除Buffer\r\n     * @internal\r\n     * @param buffer \r\n     */\r\n    splitBuffer(buffer: UniformBufferObject) {\r\n        let index = this._mapArray.indexOf(buffer);\r\n        if (index != -1)\r\n            this._mapArray.splice(index, 1);\r\n    }\r\n}","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { BufferUsage, BufferTargetType } from \"./RenderEnum/BufferTargetType\";\r\nimport { SubUniformBufferData } from \"./SubUniformBufferData\";\r\nimport { UniformBufferBase } from \"./UniformBufferBase\";\r\nimport { UnifromBufferData } from \"./UniformBufferData\";\r\nimport { Buffer } from \"./Buffer\";\r\n/**\r\n * 类封装WebGL2UniformBufferObect\r\n */\r\nexport class UniformBufferObject extends Buffer {\r\n    static UBONAME_SCENE = \"SceneUniformBlock\";\r\n    static UBONAME_CAMERA = \"CameraUniformBlock\";\r\n    static UBONAME_SPRITE3D = \"SpriteUniformBlock\";\r\n    static UBONAME_SHADOW = \"ShadowUniformBlock\";\r\n    private static commonMap: string[] = [\"CameraUniformBlock\", \"SceneUniformBlock\", \"SpriteUniformBlock\", \"ShadowUniformBlock\"]\r\n\r\n    /**@internal */\r\n    private static _Map: Map<string, UniformBufferBase> = new Map<string, UniformBufferBase>();\r\n\r\n    /**\r\n     * create Uniform Buffer Base\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @param bufferUsage config usage\r\n     * @param bytelength byte length\r\n     * @returns \r\n     */\r\n    static create(name: string, bufferUsage: number, bytelength: number, isSingle: boolean = false) {\r\n        if (!UniformBufferObject._Map.get(name)) {\r\n            UniformBufferObject._Map.set(name, new UniformBufferBase(name, LayaGL.renderEngine.getUBOPointer(name), isSingle));\r\n        }\r\n        let bufferBase = UniformBufferObject._Map.get(name);\r\n        if (bufferBase._singgle && bufferBase._mapArray.length > 0) {\r\n            return null;\r\n        } else {\r\n            let ubo = LayaGL.renderOBJCreate.createUniformBufferObject(bufferBase._glPointerID, name, bufferUsage, bytelength, isSingle);\r\n            if(bufferBase._singgle) bufferBase.add(ubo);\r\n            return ubo;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get Uniform Buffer by name\r\n     * @param name Uniform block name(must pitch Shader)\r\n     * @returns \r\n     */\r\n    static getBuffer(name: string, index: number) {\r\n        let base = UniformBufferObject._Map.get(name);\r\n        if (!base)\r\n            return null;\r\n        return base._mapArray[index];\r\n    }\r\n\r\n    /**@interanl */\r\n    _glPointer: number;\r\n\r\n    /**@internal */\r\n    _updateDataInfo: UnifromBufferData;\r\n\r\n    /**@internal */\r\n    _isSingle: boolean = false;\r\n\r\n    /**buffer name */\r\n    _name: string;\r\n\r\n    /**all byte length */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * @interanl\r\n     */\r\n    constructor(glPointer: number, name: string, bufferUsage: BufferUsage, byteLength: number, isSingle: boolean) {\r\n        super(BufferTargetType.UNIFORM_BUFFER,bufferUsage);\r\n        this._glPointer = glPointer;\r\n        this.byteLength = byteLength;\r\n        this._name = name;\r\n        this._isSingle = isSingle;\r\n        this.bind();\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * differcnt UBO bind Point\r\n     * @internal\r\n     */\r\n    _bindUniformBufferBase() {\r\n        // const base = UniformBufferObject._Map.get(this._name);\r\n        // if (base._curUniformBuffer != this) {\r\n            this._glBuffer.bindBufferBase(this._glPointer);\r\n            //base._curUniformBuffer = this;\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 绑定一段\r\n     * @internal\r\n     */\r\n    _bindBufferRange(offset: number, byteCount: number) {\r\n        this.bind();\r\n        this._glBuffer.bindBufferRange(this._glPointer,offset,byteCount);\r\n        //gl.bindBufferRange(gl.UNIFORM_BUFFER, this._glPointer, this._glBuffer, offset, byteCount);\r\n    }\r\n\r\n    /**\r\n     * 重置buffer长度\r\n     * @param bytelength \r\n     */\r\n    _reset(bytelength: number) {\r\n        \r\n        //destroy\r\n        if (this._glBuffer) {\r\n            this._glBuffer.destroy();\r\n            this._glBuffer = null;\r\n        }\r\n        //create new\r\n        this._byteLength = this.byteLength = bytelength;\r\n        this._glBuffer = LayaGL.renderEngine.createBuffer(this._bufferType,this._bufferUsage);\r\n        if (this._isSingle)\r\n            this._bindUniformBufferBase();\r\n        this._glBuffer.setDataLength(this.byteLength);\r\n    }\r\n\r\n    /**\r\n     * @inheritDoc\r\n     * @override\r\n     */\r\n    bind(): boolean {\r\n       return this._glBuffer.bindBuffer();\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param buffer Float32Array data\r\n     * @param bufferOffset byteOffset\r\n     * @param byteCount  byteCount\r\n     * @returns \r\n     */\r\n    setData(buffer: Float32Array, bufferOffset: number = 0, byteCount: number = Number.MAX_SAFE_INTEGER): void {\r\n        if (byteCount < 0) return;\r\n        this.bind();\r\n        var needSubData: boolean = !(bufferOffset == 0 && byteCount == this.byteLength);\r\n        if (needSubData) {\r\n            var subData: Uint8Array = new Uint8Array(buffer.buffer, bufferOffset, byteCount);\r\n            //bufferSubData(this._bufferType, bufferOffset, subData);\r\n            this._glBuffer.setData(subData,bufferOffset);\r\n        }\r\n        else {\r\n            // let gl = (LayaGL.instance as WebGL2RenderingContext);                                                 \r\n            // gl.bufferSubData(this._bufferType, bufferOffset, buffer, 0, buffer.length);\r\n            this._glBuffer.setDataEx(buffer,bufferOffset,buffer.length);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set UniformBuffer data by UniformBufferData\r\n     * @param bufferData \r\n     */\r\n    setDataByUniformBufferData(bufferData: UnifromBufferData) {\r\n        if (this._updateDataInfo == bufferData) {\r\n            this.setData(bufferData._buffer, bufferData._updateFlag.x * 4, (bufferData._updateFlag.y - bufferData._updateFlag.x) * 4);\r\n            bufferData._resetUpdateFlag();\r\n        } else {\r\n            this.setData(bufferData._buffer, 0, this.byteLength);\r\n            bufferData._resetUpdateFlag();\r\n            this._updateDataInfo = bufferData;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * set Data by subUniformBufferData\r\n     * @param bufferData sub UniformBufferData\r\n     * @param offset \r\n     */\r\n    setDataByByUniformBufferDataOffset(bufferData: SubUniformBufferData, offset: number) {\r\n        let datalength = bufferData.getbyteLength();//offset\r\n        let reallength = bufferData._realByte;//update Count\r\n        bufferData._resetUpdateFlag();\r\n        //let gl = (LayaGL.instance as WebGL2RenderingContext);\r\n        this.bind();\r\n        //gl.bufferSubData(this._bufferType, offset * datalength, bufferData._buffer, 0, reallength / 4);\r\n        this._glBuffer.setDataEx(bufferData._buffer,offset * datalength,reallength / 4);\r\n    }\r\n\r\n    /**\r\n\t * @private\r\n\t */\r\n\tdestroy(): void {\r\n\t\tsuper.destroy();\r\n\t}\r\n}","export enum RenderDrawMode{\r\n    TRIANGLES,\r\n    POINTS,\r\n    LINES\r\n}","export enum RenderIndexMode{\r\n    UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT,\r\n    UNSIGNED_INT\r\n}","/**\r\n * 纹理解码格式。\r\n */\r\nexport enum TextureDecodeFormat {\r\n    /** 常规解码方式,直接采样纹理颜色。*/\r\n    Normal,\r\n    /** 按照RGBM方式解码并计算最终RGB颜色。 */\r\n    RGBM\r\n}","export enum MemoryDataType{\r\n   ShaderData,\r\n   TextureData,\r\n   VertexData,\r\n   IndexData,\r\n   BaseRenderData,\r\n}","import { Vector3 } from \"../../maths/Vector3\";\r\nimport { BlendEquationSeparate } from \"../RenderEnum/BlendEquationSeparate\";\r\nimport { BlendFactor } from \"../RenderEnum/BlendFactor\";\r\nimport { BlendType } from \"../RenderEnum/BlendType\";\r\nimport { CompareFunction } from \"../RenderEnum/CompareFunction\";\r\nimport { CullMode } from \"../RenderEnum/CullMode\";\r\nimport { StencilOperation } from \"../RenderEnum/StencilOperation\";\r\n\r\n\r\n\r\n/**\r\n * <code>RenderState</code> 类用于控制渲染状态。\r\n */\r\nexport class RenderState {\r\n\t/**剔除枚举_不剔除。*/\r\n\tstatic CULL_NONE: number = CullMode.Off;\r\n\t/**剔除枚举_剔除正面。*/\r\n\tstatic CULL_FRONT: number = CullMode.Front;\r\n\t/**剔除枚举_剔除背面。*/\r\n\tstatic CULL_BACK: number = CullMode.Back;\r\n\r\n\t/**混合枚举_禁用。*/\r\n\tstatic BLEND_DISABLE: number = BlendType.BLEND_DISABLE;\r\n\t/**混合枚举_启用_RGB和Alpha统一混合。*/\r\n\tstatic BLEND_ENABLE_ALL: number = BlendType.BLEND_ENABLE_ALL;\r\n\t/**混合枚举_启用_RGB和Alpha单独混合。*/\r\n\tstatic BLEND_ENABLE_SEPERATE: number = BlendType.BLEND_ENABLE_SEPERATE;\r\n\r\n\t/**混合参数枚举_零,例：RGB(0,0,0),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ZERO: number = BlendFactor.Zero;\r\n\t/**混合参数枚举_一,例：RGB(1,1,1),Alpha:(1)。*/\r\n\tstatic BLENDPARAM_ONE: number = BlendFactor.One;\r\n\t/**混合参数枚举_源颜色,例：RGB(Rs, Gs, Bs)，Alpha(As)。*/\r\n\tstatic BLENDPARAM_SRC_COLOR: number = BlendFactor.SourceColor;\r\n\t/**混合参数枚举_一减源颜色,例：RGB(1-Rs, 1-Gs, 1-Bs)，Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_COLOR: number = BlendFactor.OneMinusSourceColor;\r\n\t/**混合参数枚举_目标颜色,例：RGB(Rd, Gd, Bd),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_COLOR: number = BlendFactor.DestinationColor;\r\n\t/**混合参数枚举_一减目标颜色,例：RGB(1-Rd, 1-Gd, 1-Bd)，Alpha(1-Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_COLOR: number = BlendFactor.OneMinusDestinationColor;\r\n\t/**混合参数枚举_源透明,例:RGB(As, As, As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA: number = BlendFactor.SourceAlpha;\r\n\t/**混合参数枚举_一减源阿尔法,例:RGB(1-As, 1-As, 1-As),Alpha(1-As)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_SRC_ALPHA: number = BlendFactor.OneMinusSourceAlpha;\r\n\t/**混合参数枚举_目标阿尔法，例：RGB(Ad, Ad, Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_DST_ALPHA: number = BlendFactor.DestinationAlpha;\r\n\t/**混合参数枚举_一减目标阿尔法,例：RGB(1-Ad, 1-Ad, 1-Ad),Alpha(Ad)。*/\r\n\tstatic BLENDPARAM_ONE_MINUS_DST_ALPHA: number = BlendFactor.OneMinusDestinationAlpha;\r\n\t/**混合参数枚举_阿尔法饱和，例：RGB(min(As, 1 - Ad), min(As, 1 - Ad), min(As, 1 - Ad)),Alpha(1)。*/\r\n\tstatic BLENDPARAM_SRC_ALPHA_SATURATE: number = BlendFactor.SourceAlphaSaturate;\r\n\t/**混合参数枚举_混合设置颜色 */\r\n\tstatic BLENDPARAM_BLENDCOLOR: number = BlendFactor.BlendColor;\r\n\t/**很合参数枚举_混合颜色取反 */\r\n\tstatic BLENDPARAM_BLEND_ONEMINUS_COLOR: number = BlendFactor.OneMinusBlendColor;\r\n\r\n\t/**混合方程枚举_加法,例：source + destination*/\r\n\tstatic BLENDEQUATION_ADD: number = BlendEquationSeparate.ADD;\r\n\t/**混合方程枚举_减法，例：source - destination*/\r\n\tstatic BLENDEQUATION_SUBTRACT: number = BlendEquationSeparate.SUBTRACT;\r\n\t/**混合方程枚举_反序减法，例：destination - source*/\r\n\tstatic BLENDEQUATION_REVERSE_SUBTRACT: number = BlendEquationSeparate.REVERSE_SUBTRACT;\r\n\t/**混合方程枚举_取最小 TODO */\r\n\tstatic BLENDEQUATION_MIN: number = BlendEquationSeparate.MIN;\r\n\t/**混合方程枚举_取最大 TODO*/\r\n\tstatic BLENDEQUATION_MAX: number = BlendEquationSeparate.MAX;\r\n\r\n\t/**深度测试函数枚举_关闭深度测试。*/\r\n\tstatic DEPTHTEST_OFF: number = 0/*WebGLContext.NEVER*/;//TODO:什么鬼\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic DEPTHTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic DEPTHTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic DEPTHTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic DEPTHTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic DEPTHTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic DEPTHTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic DEPTHTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic DEPTHTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\r\n\r\n\tstatic STENCILTEST_OFF: number = 0;\r\n\t/**深度测试函数枚举_从不通过。*/\r\n\tstatic STENCILTEST_NEVER: number = CompareFunction.Never/*WebGLContext.NEVER*/;\r\n\t/**深度测试函数枚举_小于时通过。*/\r\n\tstatic STENCILTEST_LESS: number = CompareFunction.Less/*WebGLContext.LESS*/;\r\n\t/**深度测试函数枚举_等于时通过。*/\r\n\tstatic STENCILTEST_EQUAL: number = CompareFunction.Equal/*WebGLContext.EQUAL*/;\r\n\t/**深度测试函数枚举_小于等于时通过。*/\r\n\tstatic STENCILTEST_LEQUAL: number = CompareFunction.LessEqual/*WebGLContext.LEQUAL*/;\r\n\t/**深度测试函数枚举_大于时通过。*/\r\n\tstatic STENCILTEST_GREATER: number = CompareFunction.Greater/*WebGLContext.GREATER*/;\r\n\t/**深度测试函数枚举_不等于时通过。*/\r\n\tstatic STENCILTEST_NOTEQUAL: number = CompareFunction.NotEqual/*WebGLContext.NOTEQUAL*/;\r\n\t/**深度测试函数枚举_大于等于时通过。*/\r\n\tstatic STENCILTEST_GEQUAL: number = CompareFunction.GreaterEqual/*WebGLContext.GEQUAL*/;\r\n\t/**深度测试函数枚举_总是通过。*/\r\n\tstatic STENCILTEST_ALWAYS: number = CompareFunction.Always/*WebGLContext.ALWAYS*/;\r\n\t/**保持当前值*/\r\n\tstatic STENCILOP_KEEP: number = StencilOperation.Keep;\r\n\t/**将模板缓冲区值设置为0*/\r\n\tstatic STENCILOP_ZERO: number = StencilOperation.Zero;\r\n\t/**将模具缓冲区值设置为指定的参考值*/\r\n\tstatic STENCILOP_REPLACE: number = StencilOperation.Replace;\r\n\t/**增加当前模具缓冲区值+1 */\r\n\tstatic STENCILOP_INCR: number = StencilOperation.IncrementSaturate;\r\n\t/**增加当前模具缓冲区值,超过最大值的时候循环*/\r\n\tstatic STENCILOP_INCR_WRAP: number = StencilOperation.IncrementWrap;\r\n\t/**递减当前模板缓冲区的值*/\r\n\tstatic STENCILOP_DECR: number = StencilOperation.DecrementSaturate;\r\n\t/**递减当前模板缓冲去的值，小于0时会循环*/\r\n\tstatic STENCILOP_DECR_WRAP: number = StencilOperation.DecrementWrap;\r\n\t/**按位反转当前的模板缓冲区的值*/\r\n\tstatic STENCILOP_INVERT: number = StencilOperation.Invert;\r\n\r\n\t/** @internal */\r\n\tstatic readonly Default: Readonly<RenderState> = new RenderState();\r\n\r\n\t/**渲染剔除状态。*/\r\n\tcull: number;\r\n\t/**透明混合。*/\r\n\tblend: number;\r\n\t/**源混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tsrcBlend: number;\r\n\t/**目标混合参数,在blend为BLEND_ENABLE_ALL时生效。*/\r\n\tdstBlend: number;\r\n\t/**RGB源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendRGB: number;\r\n\t/**RGB目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendRGB: number;\r\n\t/**Alpha源混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tsrcBlendAlpha: number;\r\n\t/**Alpha目标混合参数,在blend为BLEND_ENABLE_SEPERATE时生效。*/\r\n\tdstBlendAlpha: number;\r\n\t/**混合方程。*/\r\n\tblendEquation: number;\r\n\t/**RGB混合方程。*/\r\n\tblendEquationRGB: number;\r\n\t/**Alpha混合方程。*/\r\n\tblendEquationAlpha: number;\r\n\t/**深度测试函数。*/\r\n\tdepthTest: number;\r\n\t/**是否深度测试。*/\r\n\tdepthWrite: boolean;\r\n\t/**是否模板写入 */\r\n\tstencilWrite: boolean;\r\n\t/**是否开启模板测试 */\r\n\tstencilTest: number;\r\n\t/**模板值 一般会在0-255*/\r\n\tstencilRef: number;\r\n\t/**模板设置值 */\r\n\tstencilOp: Vector3;\r\n\r\n\t/**\r\n\t * 创建一个 <code>RenderState</code> 实例。\r\n\t */\r\n\tconstructor() {\r\n\t\tthis.cull = RenderState.CULL_BACK;\r\n\t\tthis.blend = RenderState.BLEND_DISABLE;\r\n\t\tthis.srcBlend = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlend = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendRGB = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendRGB = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.srcBlendAlpha = RenderState.BLENDPARAM_ONE;\r\n\t\tthis.dstBlendAlpha = RenderState.BLENDPARAM_ZERO;\r\n\t\tthis.blendEquation = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationRGB = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.blendEquationAlpha = RenderState.BLENDEQUATION_ADD;\r\n\t\tthis.depthTest = RenderState.DEPTHTEST_LEQUAL;\r\n\t\tthis.depthWrite = true;\r\n\t\tthis.stencilRef = 1;\r\n\t\tthis.stencilTest = RenderState.STENCILTEST_OFF;\r\n\t\tthis.stencilWrite = false;\r\n\t\tthis.stencilOp = new Vector3(RenderState.STENCILOP_KEEP, RenderState.STENCILOP_KEEP, RenderState.STENCILOP_REPLACE);\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tsetNull() {\r\n\t\tthis.cull = null;\r\n\t\tthis.blend = null;\r\n\t\tthis.srcBlend = null;\r\n\t\tthis.dstBlend = null;\r\n\t\tthis.srcBlendRGB = null;\r\n\t\tthis.dstBlendRGB = null;\r\n\t\tthis.srcBlendAlpha = null;\r\n\t\tthis.dstBlendAlpha = null;\r\n\t\tthis.blendEquation = null;\r\n\t\tthis.blendEquationRGB = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.depthTest = null;\r\n\t\tthis.depthWrite = null;\r\n\t\tthis.stencilRef = null;\r\n\t\tthis.stencilTest = null;\r\n\t\tthis.stencilWrite = null;\r\n\t\tthis.stencilOp = null;\r\n\t}\r\n\r\n\r\n\t// /**\r\n\t//  * 克隆。\r\n\t//  * @return\t 克隆副本。\r\n\t//  */\r\n\t// clone(): any {\r\n\t// \tvar dest: RenderState = new RenderState();\r\n\t// \tthis.cloneTo(dest);\r\n\t// \treturn dest;\r\n\t// }\r\n\r\n}\r\n\r\n\r\n","/**\r\n * 共享内存分配,并且绑定Native共享Buffer\r\n */\r\nexport class CommonMemoryAllocater{\r\n    \r\n    /**\r\n     * 创建内存，并绑定为共享内存\r\n     * @param size \r\n     * @returns \r\n     */\r\n    static creatBlock(size:number):ArrayBuffer{\r\n        const buffer = new ArrayBuffer(size);\r\n        \r\n        //native bind todo:\r\n        //buffer.nativeid = ??\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * 释放共享内存\r\n     * @param buffer \r\n     */\r\n    static freeMemoryBlock(buffer:ArrayBuffer){\r\n        //TODO native free buffer\r\n        buffer = null;\r\n    }\r\n    \r\n    \r\n    \r\n}","import { CommonMemoryAllocater } from \"./CommonMemoryAllocater\";\r\n\r\nexport class NativeMemory {\r\n    static NativeSourceID:number = 0;\r\n    /**@internal 共享内存数据 */\r\n    public _buffer: ArrayBuffer;\r\n    /**@internal 显示数据 */\r\n    static  _sharedBuffer: ArrayBuffer = new ArrayBuffer(256);\r\n    /**@internal 显示数据 */\r\n    protected _idata:Int32Array;\r\n    protected _fdata:Float32Array;\r\n    protected _f64data:Float64Array;\r\n    protected _byteArray:Uint8Array;\r\n    /**数据长度 */\r\n    protected _byteLength: number;\r\n    /**销毁标记 */\r\n    protected _destroyed: boolean;\r\n    /**数据资源 */\r\n    protected _id:number;\r\n    /**\r\n     * 实例化一个共享内存\r\n     * @param size byteLength\r\n     */\r\n    constructor(size: number, shared: boolean) {\r\n        if (shared) {\r\n            if (size > NativeMemory._sharedBuffer.byteLength) {\r\n                throw new Error(\"NativeMemory:shared buffer not enough\");\r\n            }\r\n            this._buffer = NativeMemory._sharedBuffer;\r\n        }\r\n        else {\r\n            this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n        }\r\n        this._idata = new Int32Array(this._buffer);\r\n        this._fdata = new Float32Array(this._buffer);\r\n        this._f64data = new Float64Array(this._buffer);\r\n        this._byteArray = new Uint8Array(this._buffer);\r\n        this._byteLength = size;\r\n    }\r\n\r\n    /**\r\n     * Float32Array Data\r\n     */\r\n    get float32Array(): Float32Array {\r\n        return  this._fdata;\r\n    }\r\n\r\n    get float64Array(): Float64Array {\r\n        return  this._f64data;\r\n    }\r\n    /**\r\n     * Uint16Array Data\r\n     */\r\n    /*get uint16Array(): Uint16Array {\r\n        if (!(this._bufferData instanceof Uint16Array))\r\n            this._bufferData = new Uint16Array(this._buffer);\r\n        return <Uint16Array>this._bufferData;\r\n    }*/\r\n\r\n    /**\r\n     * Uint8Array Data\r\n     */\r\n    get uint8Array(): Uint8Array {\r\n        return this._byteArray;\r\n    }\r\n\r\n    /**\r\n     * Int32Array Data\r\n     */\r\n    get int32Array(): Int32Array {\r\n        return this._idata;\r\n    }\r\n\r\n    /**\r\n     * 设置数据\r\n     * @param data 数据\r\n     * @param stride 字节偏移\r\n     * //TODO 字节对齐\r\n     */\r\n    /*setData(data:Uint8Array|Uint16Array|Uint32Array|Int32Array|Float32Array,stride:number):void{\r\n        if(data instanceof Uint8Array){\r\n           this.uint8Array.set(data,stride/2);\r\n            return;\r\n        }\r\n        else if(data instanceof Uint16Array){\r\n           this.uint16Array.set(data,stride/2);\r\n            return;\r\n        }else{\r\n           this.float32Array.set(data,stride/4);\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 设置多个参数\r\n     * @param offset \r\n     * @param args \r\n     * 考虑字节对齐\r\n     */\r\n    /*setDataByParams(offset:number,...args: number[]):void{\r\n        if(args)\r\n        {\r\n            for(let i=0,n:number=args.length;i<n;i++)\r\n            this._bufferData[i+offset]=args[i];\r\n        }\r\n    }*/\r\n\r\n    /**\r\n     * 扩充buffer\r\n     * @param size \r\n     * @returns \r\n     */\r\n    /*expand(size: number) {\r\n        if(size<=this._byteLength)\r\n            return;\r\n        this._byteLength = size;\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this.clear();\r\n        this._buffer = CommonMemoryAllocater.creatBlock(size);\r\n    }*/\r\n\r\n    /**\r\n     * 删除\r\n     * @returns \r\n     */\r\n    destroy() {\r\n        if(this._destroyed)\r\n            return;\r\n        this.clear();\r\n        CommonMemoryAllocater.freeMemoryBlock(this._buffer);\r\n        this._destroyed = true;\r\n    }\r\n\r\n    /**\r\n     * 清楚\r\n     */\r\n    clear(): void {\r\n        this._idata = null;\r\n        this._fdata = null;\r\n        this._byteArray = null;\r\n    }\r\n}","import { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { NativeMemory } from \"./NativeMemory\";\r\n\r\nexport class UploadMemory extends NativeMemory{\r\n    \r\n    /**\r\n     * @internal\r\n     * 数据填充的位置\r\n     */\r\n    _currentOffsetInByte:number = 0;\r\n\r\n    constructor(size:number){\r\n        super(size,false);\r\n    }\r\n\r\n    addBlockCell(node: INativeUploadNode, dataSizeInByte: number){\r\n        if (node.uploadDataTOShareMemory(this, this._currentOffsetInByte)) {\r\n            this._currentOffsetInByte += dataSizeInByte;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * check ability of size data\r\n     * @param size \r\n     * @returns \r\n     */\r\n    check(size:number){\r\n        return this._currentOffsetInByte + size < this._byteLength;\r\n    }\r\n\r\n    /**\r\n     * 清空更新数据\r\n     */\r\n    clear(): void {\r\n      this._currentOffsetInByte = 0;\r\n    }\r\n\r\n\r\n}","import { SingletonList } from \"../../../../utils/SingletonList\";\r\nimport { INativeUploadNode } from \"./INativeUploadNode\";\r\nimport { UploadMemory } from \"./UploadMemory\";\r\n\r\n/**\r\n * 用来组织所有的数据更新\r\n * 基本思路如下：每个需要更新native数据的类都继承接口INativeUploadNode，当需要上传数据时，会添加到UploadMemoryMenager.dataNodeList队列中，统一更新数据到共享Buffer中\r\n * 会有一个共享Buffer NativeMemory来记录总共用了几个UploadMemory，每个Upload中有几个UploadMemoryCell，在native中统一的将数据变化全部同步到Native的渲染底层\r\n */\r\nexport class UploadMemoryManager {\r\n    /**\r\n     * each upload block memory size\r\n     * defined 1MB\r\n     */\r\n    static UploadMemorySize: number = 1024 * 1024;\r\n    /*@internal SingleOBJ*/\r\n    private static _instance: UploadMemoryManager = null;\r\n    /**@internal 需要上传数据的Node列表*/\r\n    _dataNodeList: SingletonList<INativeUploadNode> = new SingletonList();\r\n    /**@internal */\r\n    _currentBlock: UploadMemory;\r\n    /**@internal */\r\n    _commandNums: number = 0;\r\n\r\n    /**@native C++ */\r\n    _conchUploadMemoryManager:any;\r\n\r\n    constructor() {\r\n        this._currentBlock = new UploadMemory(UploadMemoryManager.UploadMemorySize);\r\n        this._conchUploadMemoryManager = new (window as any).conchUploadMemoryManager();\r\n    }\r\n    static getInstance(): UploadMemoryManager {\r\n        if (!UploadMemoryManager._instance) {\r\n            UploadMemoryManager._instance = new UploadMemoryManager();\r\n        }\r\n        return UploadMemoryManager._instance;\r\n    }\r\n    private _addNodeCommand(node: INativeUploadNode, sizeInByte: number) {\r\n        this._currentBlock.addBlockCell(node, sizeInByte);\r\n        this._commandNums++;\r\n    }\r\n\r\n    static syncRenderMemory()\r\n    {\r\n        UploadMemoryManager.getInstance()._serialiseData();\r\n        UploadMemoryManager.getInstance().clear();\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    private _serialiseData() {\r\n        const elements = this._dataNodeList.elements;\r\n        for (let i = 0; i < this._dataNodeList.length; i++) {\r\n            let node = elements[i];\r\n            let dataSizeInByte = node.getUploadMemoryLength();//get upload Memory Length\r\n            if (dataSizeInByte > UploadMemoryManager.UploadMemorySize)\r\n                throw \"dataSize is too large, greater than UploadMemorySize,\";\r\n            if (this._currentBlock.check(dataSizeInByte)) { \r\n                 //Deserialization all cmd to native data\r\n                this.uploadData();\r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            } else { \r\n              \r\n                this._addNodeCommand(node, dataSizeInByte);\r\n            }\r\n        }\r\n        this.uploadData();\r\n    }\r\n\r\n    /**强制更新数据 */\r\n    uploadData() {\r\n        if (this._commandNums > 0)\r\n        {\r\n            //Native upload data\r\n            this._conchUploadMemoryManager.uploadData(this._currentBlock._buffer, this._commandNums);\r\n            //clear uploadMemory\r\n            this._commandNums = 0;\r\n            this._currentBlock.clear();\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * clear UpdateLoad list\r\n     */\r\n    clear() {\r\n        this._dataNodeList.length = 0;\r\n    }\r\n}","\r\n/**\r\n * 阿拉伯文的转码。把unicode的阿拉伯文字母编码转成他们的老的能描述不同写法的编码。\r\n *  这个是从GitHub上 Javascript-Arabic-Reshaper 项目转来的\r\n * https://github.com/louy/Javascript-Arabic-Reshaper/blob/master/src/index.js\r\n */\r\n/**\r\n\t * Javascript Arabic Reshaper by Louy Alakkad\r\n\t * https://github.com/louy/Javascript-Arabic-Reshaper\r\n\t * Based on (http://git.io/vsnAd)\r\n\t */\r\nexport class ArabicReshaper {\r\n    private static charsMap: any[] = [[0x0621, 0xFE80, null, null, null], /* HAMZA */\r\n    [0x0622, 0xFE81, null, null, 0xFE82], /* ALEF_MADDA */\r\n    [0x0623, 0xFE83, null, null, 0xFE84], /* ALEF_HAMZA_ABOVE */\r\n    [0x0624, 0xFE85, null, null, 0xFE86], /* WAW_HAMZA */\r\n    [0x0625, 0xFE87, null, null, 0xFE88], /* ALEF_HAMZA_BELOW */\r\n    [0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A], /* YEH_HAMZA */\r\n    [0x0627, 0xFE8D, null, null, 0xFE8E], /* ALEF */\r\n    [0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90], /* BEH */\r\n    [0x0629, 0xFE93, null, null, 0xFE94], /* TEH_MARBUTA */\r\n    [0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96], /* TEH */\r\n    [0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A], /* THEH */\r\n    [0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E], /* JEEM */\r\n    [0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2], /* HAH */\r\n    [0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6], /* KHAH */\r\n    [0x062F, 0xFEA9, null, null, 0xFEAA], /* DAL */\r\n    [0x0630, 0xFEAB, null, null, 0xFEAC], /* THAL */\r\n    [0x0631, 0xFEAD, null, null, 0xFEAE], /* REH */\r\n    [0x0632, 0xFEAF, null, null, 0xFEB0], /* ZAIN */\r\n    [0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2], /* SEEN */\r\n    [0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6], /* SHEEN */\r\n    [0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA], /* SAD */\r\n    [0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE], /* DAD */\r\n    [0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2], /* TAH */\r\n    [0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6], /* ZAH */\r\n    [0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA], /* AIN */\r\n    [0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE], /* GHAIN */\r\n    [0x0640, 0x0640, 0x0640, 0x0640, 0x0640], /* TATWEEL */\r\n    [0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2], /* FEH */\r\n    [0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6], /* QAF */\r\n    [0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA], /* KAF */\r\n    [0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE], /* LAM */\r\n    [0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2], /* MEEM */\r\n    [0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6], /* NOON */\r\n    [0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA], /* HEH */\r\n    [0x0648, 0xFEED, null, null, 0xFEEE], /* WAW */\r\n    [0x0649, 0xFEEF, null, null, 0xFEF0], /* ALEF_MAKSURA */\r\n    [0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2], /* YEH */\r\n    [0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57], /* PEH */\r\n    [0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD], /* Farsi Yeh */\r\n    [0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B], /* Tcheh */\r\n    [0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F], /* Keheh */\r\n    [0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93], /* Gaf */\r\n    [0x0698, 0xFB8A, null, null, 0xFB8B]];\r\n    private static combCharsMap: any[] = [[[0x0644, 0x0622], 0xFEF5, null, null, 0xFEF6], /* LAM_ALEF_MADDA */\r\n    [[0x0644, 0x0623], 0xFEF7, null, null, 0xFEF8], /* LAM_ALEF_HAMZA_ABOVE */\r\n    [[0x0644, 0x0625], 0xFEF9, null, null, 0xFEFA], /* LAM_ALEF_HAMZA_BELOW */\r\n    [[0x0644, 0x0627], 0xFEFB, null, null, 0xFEFC]];\r\n    private static transChars: any[] = [0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\r\n        0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\r\n        0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\r\n        0x0614, /* ARABIC SIGN TAKHALLUS */\r\n        0x0615, /* ARABIC SMALL HIGH TAH */\r\n        0x064B, /* ARABIC FATHATAN */\r\n        0x064C, /* ARABIC DAMMATAN */\r\n        0x064D, /* ARABIC KASRATAN */\r\n        0x064E, /* ARABIC FATHA */\r\n        0x064F, /* ARABIC DAMMA */\r\n        0x0650, /* ARABIC KASRA */\r\n        0x0651, /* ARABIC SHADDA */\r\n        0x0652, /* ARABIC SUKUN */\r\n        0x0653, /* ARABIC MADDAH ABOVE */\r\n        0x0654, /* ARABIC HAMZA ABOVE */\r\n        0x0655, /* ARABIC HAMZA BELOW */\r\n        0x0656, /* ARABIC SUBSCRIPT ALEF */\r\n        0x0657, /* ARABIC INVERTED DAMMA */\r\n        0x0658, /* ARABIC MARK NOON GHUNNA */\r\n        0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\r\n        0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\r\n        0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\r\n        0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\r\n        0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\r\n        0x06DA, /* ARABIC SMALL HIGH JEEM */\r\n        0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\r\n        0x06DC, /* ARABIC SMALL HIGH SEEN */\r\n        0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\r\n        0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\r\n        0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\r\n        0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\r\n        0x06E3, /* ARABIC SMALL LOW SEEN */\r\n        0x06E4, /* ARABIC SMALL HIGH MADDA */\r\n        0x06E7, /* ARABIC SMALL HIGH YEH */\r\n        0x06E8, /* ARABIC SMALL HIGH NOON */\r\n        0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\r\n        0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\r\n        0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\r\n        0x06ED];\r\n\r\n\r\n    //TODO:coverage\r\n    characterMapContains(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCharRep(c: number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.charsMap.length; ++i) {\r\n            if (ArabicReshaper.charsMap[i][0] === c) {\r\n                return ArabicReshaper.charsMap[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getCombCharRep(c1:number, c2:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.combCharsMap.length; ++i) {\r\n            if (ArabicReshaper.combCharsMap[i][0][0] === c1 && ArabicReshaper.combCharsMap[i][0][1] === c2) {\r\n                return ArabicReshaper.combCharsMap[i];\r\n            }\r\n        }\r\n\r\n        // We should never reach here...\r\n        // istanbul ignore next\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    isTransparent(c:number): boolean {\r\n        for (var i: number = 0; i < ArabicReshaper.transChars.length; ++i) {\r\n            if (ArabicReshaper.transChars[i] === c) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    //TODO:coverage\r\n    getOriginalCharsFromCode(code:number): string {\r\n        var j: number;\r\n\r\n        for (j = 0; j < ArabicReshaper.charsMap.length; ++j) {\r\n            if (ArabicReshaper.charsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.charsMap[j][0]);\r\n            }\r\n        }\r\n\r\n        for (j = 0; j < ArabicReshaper.combCharsMap.length; ++j) {\r\n            if (ArabicReshaper.combCharsMap[j].indexOf(code) > -1) {\r\n                return String.fromCharCode(ArabicReshaper.combCharsMap[j][0][0]) +\r\n                    String.fromCharCode(ArabicReshaper.combCharsMap[j][0][1]);\r\n            }\r\n        }\r\n\r\n        return String.fromCharCode(code);\r\n    }\r\n\r\n    /**\r\n     * 转换函数。从normal转到presentB\r\n     * 这个返回的字符串可以直接按照从左到右的顺序渲染。\r\n     * 例如\r\n     * graphics.fillText(convertArabic('سلام'),....)\r\n     * \r\n    */\r\n    //TODO:coverage\r\n    convertArabic(normal:any): string {\r\n        var crep: any,\r\n            combcrep: any,\r\n            shaped: string = '';\r\n\r\n        for (var i: number = 0; i < normal.length; ++i) {\r\n            var current: number = normal.charCodeAt(i);\r\n            if (this.characterMapContains(current)) {\r\n                var prev: any = null,\r\n                    next: any = null,\r\n                    prevID: number = i - 1,\r\n                    nextID: number = i + 1;\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are BEFORE the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; prevID >= 0; --prevID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(prevID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                prev = (prevID >= 0) ? normal.charCodeAt(prevID) : null;\r\n                crep = prev ? this.getCharRep(prev) : false;\r\n                if (!crep || crep[2] == null && crep[3] == null) {\r\n                    prev = null; // prev character doesn’t connect with its successor\r\n                }\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t  Transparent characters have no effect in the shaping process.\r\n\t\t\t\t  So, ignore all the transparent characters that are AFTER the\r\n\t\t\t\t  current character.\r\n\t\t\t\t  */\r\n                for (; nextID < normal.length; ++nextID) {\r\n                    if (!this.isTransparent(normal.charCodeAt(nextID))) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                next = (nextID < normal.length) ? normal.charCodeAt(nextID) : null;\r\n                crep = next ? this.getCharRep(next) : false;\r\n                if (!crep || crep[3] == null && crep[4] == null) {\r\n                    next = null; // next character doesn’t connect with its predecessor\r\n                }\r\n\r\n                /* Combinations */\r\n                if (current === 0x0644 && next != null &&\r\n                    (next === 0x0622 || next === 0x0623 || next === 0x0625 || next === 0x0627)) {\r\n                    combcrep = this.getCombCharRep(current, next);\r\n                    if (prev != null) {\r\n                        shaped += String.fromCharCode(combcrep[4]);\r\n                    } else {\r\n                        shaped += String.fromCharCode(combcrep[1]);\r\n                    }\r\n\r\n                    ++i;\r\n                    continue;\r\n                }\r\n\r\n                crep = this.getCharRep(current);\r\n\r\n                /* Medial */\r\n                if (prev != null && next != null && crep[3] != null) {\r\n                    shaped += String.fromCharCode(crep[3]);\r\n                    continue;\r\n                } else /* Final */\r\n                    if (prev != null && crep[4] != null) {\r\n                        shaped += String.fromCharCode(crep[4]);\r\n                        continue;\r\n                    } else /* Initial */\r\n                        if (next != null && crep[2] != null) {\r\n                            shaped += String.fromCharCode(crep[2]);\r\n                            continue;\r\n                        } else /* Isolated */ {\r\n                            shaped += String.fromCharCode(crep[1]);\r\n                        }\r\n            } else {\r\n                shaped += String.fromCharCode(current);\r\n            }\r\n        }\r\n\r\n        return shaped;\r\n    }/*;*/\r\n\r\n    // convert from Arabic Presentation Forms B\r\n    //TODO:coverage\r\n    convertArabicBack(apfb:any): string {\r\n        var toReturn: string = '',\r\n            selectedChar: number;\r\n\r\n        var i: number;\r\n\r\n        for (i = 0; i < apfb.length; ++i) {\r\n            selectedChar = apfb.charCodeAt(i);\r\n\r\n            toReturn += this.getOriginalCharsFromCode(selectedChar);\r\n        }\r\n        return toReturn;\r\n    }\r\n}\r\n\r\n\r\n","export class MatirxArray {\r\n\r\n    /**\r\n     * 4*4矩阵数组相乘。\r\n     * o=a*b;\r\n     * @param\ta 4*4矩阵数组。\r\n     * @param\tb 4*4矩阵数组。\r\n     * @param\to 4*4矩阵数组。\r\n     */\r\n    //TODO:coverage\r\n    static ArrayMul(a: any[], b: any[], o: any[]): void {\r\n        if (!a) {\r\n            MatirxArray.copyArray(b, o);\r\n            return;\r\n        }\r\n\r\n        if (!b) {\r\n            MatirxArray.copyArray(a, o);\r\n            return;\r\n        }\r\n\r\n        var ai0: number, ai1: number, ai2: number, ai3: number;\r\n        for (var i: number = 0; i < 4; i++) {\r\n            ai0 = a[i];\r\n            ai1 = a[i + 4];\r\n            ai2 = a[i + 8];\r\n            ai3 = a[i + 12];\r\n            o[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\r\n            o[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\r\n            o[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\r\n            o[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\r\n        }\r\n    }\r\n\r\n    //TODO:coverage\r\n    static copyArray(f: any[], t: any[]): void {\r\n        if (!f) return;\r\n        if (!t) return;\r\n        for (var i: number = 0; i < f.length; i++) {\r\n            t[i] = f[i];\r\n        }\r\n    }\r\n}\r\n\r\n","export class AnimatorState2DScript {\r\n    /**\r\n     * 动画状态开始时执行。\r\n     */\r\n    onStateEnter(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态更新时执行。\r\n     */\r\n    onStateUpdate(): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 动画状态退出时执行。\r\n     */\r\n    onStateExit(): void {\r\n\r\n    }\r\n}","import { Sprite } from \"../display/Sprite\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Ease } from \"../utils/Ease\";\r\nimport { Handler } from \"../utils/Handler\";\r\n\r\n/**\r\n * @Script {name:ButtonEffect}\r\n * @author ww\r\n */\r\nexport class ButtonEffect {\r\n\r\n    private _tar: Sprite;\r\n    private _curState: number = 0;\r\n    private _curTween: Tween;\r\n    /**\r\n     * effectScale\r\n     * @prop {name:effectScale,type:number, tips:\"缩放值\",default:\"1.5\"}\r\n     */\r\n    effectScale: number = 1.5;\r\n    /**\r\n     * tweenTime\r\n     * @prop {name:tweenTime,type:number, tips:\"缓动时长\",default:\"300\"}\r\n     */\r\n    tweenTime: number = 300;\r\n    /**\r\n     * effectEase\r\n     * @prop {name:effectEase,type:ease, tips:\"效果缓动类型\"}\r\n     */\r\n    effectEase: string;\r\n    /**\r\n     * backEase\r\n     * @prop {name:backEase,type:ease, tips:\"恢复缓动类型\"}\r\n     */\r\n    backEase: string;\r\n\r\n    /**\r\n     * 设置控制对象 \r\n     * @param tar\r\n     */\r\n    set target(tar: Sprite) {\r\n        this._tar = tar;\r\n        tar.on(Event.MOUSE_DOWN, this, this.toChangedState);\r\n        tar.on(Event.MOUSE_UP, this, this.toInitState);\r\n        tar.on(Event.MOUSE_OUT, this, this.toInitState);\r\n    }\r\n\r\n    private toChangedState(): void {\r\n        this._curState = 1;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curTween = Tween.to(this._tar, { scaleX: this.effectScale, scaleY: this.effectScale }, this.tweenTime, (Ease as any)[this.effectEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n\r\n    private toInitState(): void {\r\n        if (this._curState == 2) return;\r\n        if (this._curTween) Tween.clear(this._curTween);\r\n        this._curState = 2;\r\n        this._curTween = Tween.to(this._tar, { scaleX: 1, scaleY: 1 }, this.tweenTime, (Ease as any)[this.backEase], Handler.create(this, this.tweenComplete));\r\n    }\r\n    private tweenComplete(): void {\r\n        this._curState = 0;\r\n        this._curTween = null;\r\n    }\r\n}\r\n\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\n\r\nexport class CommandUniformMap {\r\n\r\n\t/**@internal */\r\n\t_idata: { [key: number]: string } = {};\r\n\t_stateName: string;\r\n\r\n\tconstructor(stateName: string) {\r\n\t\tthis._stateName = stateName;\r\n\t}\r\n\r\n\thasPtrID(propertyID: number): boolean {\r\n\t\treturn !!(this._idata[propertyID] != null);\r\n\t}\r\n\r\n\tgetMap() {\r\n\t\treturn this._idata;\r\n\t}\r\n\r\n\t/**\r\n\t * 增加一个UniformMap\r\n\t * @internal\r\n\t * @param propertyID \r\n\t * @param propertyKey \r\n\t */\r\n\taddShaderUniform(propertyID: number, propertyKey: string): void {\r\n\t\tthis._idata[propertyID] = propertyKey;\r\n\t}\r\n\r\n}","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡入效果\r\n */\r\nexport class FadeIn extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 0;\r\n        return Tween.to(this.target, { alpha: 1 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { EffectBase } from \"././EffectBase\";\r\nimport { Tween } from \"../utils/Tween\";\r\nimport { Ease } from \"../utils/Ease\";\r\n\r\n/**\r\n * 淡出效果\r\n */\r\nexport class FadeOut extends EffectBase {\r\n    /**\r\n     * @override\r\n     */\r\n    protected _doTween(): Tween {\r\n        this.target.alpha = 1;\r\n        return Tween.to(this.target, { alpha: 0 }, this.duration, (Ease as any)[this.ease], this._comlete, this.delay);\r\n    }\r\n}\r\n\r\n","import { IRender2DContext } from \"../../RenderInterface/IRender2DContext\";\r\nimport { NativeGLObject } from \"./NativeGLObject\";\r\nimport { NativeWebGLEngine } from \"./NativeWebGLEngine\";\r\n\r\n\r\nexport class NativeGLRender2DContext extends NativeGLObject implements IRender2DContext {\r\n\r\n    constructor(engine: NativeWebGLEngine) {\r\n        super(engine);\r\n    }\r\n\r\n    activeTexture(textureID: number): void {\r\n\r\n    }\r\n\r\n    bindTexture(target: number, texture: WebGLTexture): void {\r\n    }\r\n\r\n    bindUseProgram(webglProgram: any):boolean {\r\n        return true;\r\n    }\r\n\r\n}","import { RenderTargetFormat } from \"../RenderEngine/RenderEnum/RenderTargetFormat\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nimport { RenderTexture } from \"./RenderTexture\";\r\n\r\n\r\n/**\r\n * <code>SpotLight</code> 类用于创建RenderTextureCube。\r\n */\r\nexport class RenderTextureCube extends RenderTexture {\r\n\r\n    /**\r\n     * +x, -x, +y, -y, +z, -z\r\n     */\r\n    faceIndex: number;\r\n\r\n    /**\r\n     * 实例化一个RendertextureCube\r\n     * @param size 像素\r\n     * @param colorFormat 颜色格式\r\n     * @param depthFormat 深度格式\r\n     * @param generateMipmap 是否生成mipmap\r\n     * @param multiSamples \r\n     */\r\n    constructor(size: number, colorFormat: RenderTargetFormat, depthFormat: RenderTargetFormat, generateMipmap: boolean, multiSamples: number) {\r\n        super(size, size, colorFormat, depthFormat, generateMipmap, multiSamples);\r\n        this.faceIndex = 0;\r\n    }\r\n\r\n    /**\r\n     * @internal\r\n     */\r\n    _createRenderTarget(): void {\r\n        this._dimension = TextureDimension.Cube;\r\n        this._renderTarget = LayaGL.textureContext.createRenderTargetCubeInternal(this.width, <RenderTargetFormat><any>this._format, this._depthStencilFormat, this._generateMipmap, this._gammaSpace, this._multiSamples);\r\n\r\n        this._texture = this._renderTarget._textures[0];\r\n    }\r\n\r\n    _start() {\r\n        RenderTexture._configInstance.invertY = this._isCameraTarget;\r\n        if (RenderTexture._currentActive != this) {\r\n            RenderTexture._currentActive && RenderTexture._currentActive._end();\r\n            RenderTexture._currentActive = this;\r\n            LayaGL.textureContext.bindRenderTarget(this._renderTarget, this.faceIndex);\r\n        }\r\n    }\r\n\r\n}","import { CommandEncoder } from \"../../layagl/CommandEncoder\";\r\nimport { LayaGL } from \"../../layagl/LayaGL\";\r\nimport { CullMode } from \"../../RenderEngine/RenderEnum/CullMode\";\r\nimport { IRenderShaderInstance } from \"../../RenderEngine/RenderInterface/IRenderShaderInstance\";\r\nimport { Shader3D } from \"../../RenderEngine/RenderShader/Shader3D\";\r\nimport { ShaderData, ShaderDataType } from \"../../RenderEngine/RenderShader/ShaderData\";\r\nimport { ShaderPass } from \"../../RenderEngine/RenderShader/ShaderPass\";\r\nimport { ShaderVariable } from \"../../RenderEngine/RenderShader/ShaderVariable\";\r\nimport { RenderStateContext } from \"../../RenderEngine/RenderStateContext\";\r\nimport { Stat } from \"../../utils/Stat\";\r\nimport { ShaderCompileDefineBase } from \"../../webgl/utils/ShaderCompileDefineBase\";\r\nimport { RenderState } from \"./RenderState\";\r\n\r\n/**\r\n * <code>ShaderInstance</code> 类用于实现ShaderInstance。\r\n */\r\nexport class ShaderInstance {\r\n\t/**@internal */\r\n\tprivate _shaderPass: ShaderCompileDefineBase | ShaderPass;\r\n\t/**@internal */\r\n\tprivate _renderShaderInstance: IRenderShaderInstance;\r\n\r\n\t/**@internal */\r\n\t_sceneUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_cameraUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_spriteUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\t_materialUniformParamsMap: CommandEncoder;\r\n\t/**@internal */\r\n\tprivate _customUniformParamsMap: any[] = [];\r\n\r\n\t/**@internal */\r\n\t_uploadMark: number = -1;\r\n\t/**@internal */\r\n\t_uploadMaterial: ShaderData;\r\n\t/**@internal RenderIDTODO*/\r\n\t_uploadRender: any;\r\n\t/** @internal */\r\n\t_uploadRenderType: number = -1;\r\n\t/**@internal CamneraTOD*/\r\n\t_uploadCameraShaderValue: ShaderData;\r\n\t/**@internal SceneIDTODO*/\r\n\t_uploadScene: any;\r\n\r\n\t/**\r\n\t * 创建一个 <code>ShaderInstance</code> 实例。\r\n\t */\r\n\tconstructor(vs: string, ps: string, attributeMap: { [name: string]: [number, ShaderDataType] }, shaderPass: ShaderCompileDefineBase) {\r\n\t\tthis._renderShaderInstance = LayaGL.renderEngine.createShaderInstance(vs, ps, attributeMap);\r\n\t\tif (this._renderShaderInstance._complete) {\r\n\t\t\tthis._shaderPass = shaderPass;\r\n\t\t\tthis._create();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * get complete\r\n\t */\r\n\tget complete(): boolean {\r\n\t\treturn this._renderShaderInstance._complete;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tprotected _create(): void {\r\n\t\tthis._sceneUniformParamsMap = new CommandEncoder();\r\n\t\tthis._cameraUniformParamsMap = new CommandEncoder();\r\n\t\tthis._spriteUniformParamsMap = new CommandEncoder();\r\n\t\tthis._materialUniformParamsMap = new CommandEncoder();\r\n\t\tconst sceneParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Scene3D\");\r\n\t\tconst spriteParms = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Sprite3D\");\r\n\t\tconst cameraParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"BaseCamera\");\r\n\t\tconst customParams = LayaGL.renderOBJCreate.createGlobalUniformMap(\"Custom\");\r\n\t\tlet i, n;\r\n\t\tlet data: ShaderVariable[] = this._renderShaderInstance.getUniformMap();\r\n\t\tfor (i = 0, n = data.length; i < n; i++) {\r\n\t\t\tlet one: ShaderVariable = data[i];\r\n\t\t\tif (sceneParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._sceneUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (cameraParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._cameraUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (spriteParms.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._spriteUniformParamsMap.addShaderUniform(one);\r\n\t\t\t} else if (customParams.hasPtrID(one.dataOffset)) {\r\n\t\t\t\tthis._customUniformParamsMap || (this._customUniformParamsMap = []);\r\n\t\t\t\tthis._customUniformParamsMap[one.dataOffset] = one;\r\n\t\t\t} else {\r\n\t\t\t\tthis._materialUniformParamsMap.addShaderUniform(one);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @inheritDoc\r\n\t * @override\r\n\t */\r\n\tprotected _disposeResource(): void {\r\n\t\tthis._renderShaderInstance.destroy();\r\n\t\tthis._sceneUniformParamsMap = null;\r\n\t\tthis._cameraUniformParamsMap = null;\r\n\t\tthis._spriteUniformParamsMap = null;\r\n\t\tthis._materialUniformParamsMap = null\r\n\t\tthis._customUniformParamsMap = null;\r\n\r\n\t\tthis._uploadMaterial = null;\r\n\t\tthis._uploadRender = null;\r\n\t\tthis._uploadCameraShaderValue = null;\r\n\t\tthis._uploadScene = null;\r\n\t}\r\n\r\n\t/**\r\n\t * apply shader programe\r\n\t * @returns \r\n\t */\r\n\tbind() {\r\n\t\treturn this._renderShaderInstance.bind();\r\n\t}\r\n\r\n\t/**\r\n\t * upload uniform data\r\n\t * @param shaderUniform \r\n\t * @param shaderDatas \r\n\t * @param uploadUnTexture \r\n\t */\r\n\tuploadUniforms(shaderUniform: CommandEncoder, shaderDatas: ShaderData, uploadUnTexture: boolean) {\r\n\t\tStat.uploadUniform += LayaGL.renderEngine.uploadUniforms(this._renderShaderInstance, shaderUniform, shaderDatas, uploadUnTexture);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepth(shaderDatas: ShaderData): void {\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst)\r\n\t\t\tthis.uploadRenderStateBlendDepthByShader(shaderDatas);\r\n\t\telse\r\n\t\t\tthis.uploadRenderStateBlendDepthByMaterial(shaderDatas);\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Shader\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByShader(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar depthWrite: any = (renderState.depthWrite ?? datas[Shader3D.DEPTH_WRITE]) ?? RenderState.Default.depthWrite;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF)\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tvar depthTest: any = (renderState.depthTest ?? datas[Shader3D.DEPTH_TEST]) ?? RenderState.Default.depthTest;\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\t\t//Stencil\r\n\t\tvar stencilWrite: any = (renderState.stencilWrite ?? datas[Shader3D.STENCIL_WRITE]) ?? RenderState.Default.stencilWrite;\r\n\t\tvar stencilTest: any = (renderState.stencilTest ?? datas[Shader3D.STENCIL_TEST]) ?? RenderState.Default.stencilTest;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = (renderState.stencilOp ?? datas[Shader3D.STENCIL_Op]) ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t} else {\r\n\t\t\tvar stencilRef: any = (renderState.stencilRef ?? datas[Shader3D.STENCIL_Ref]) ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\t\t//blend\r\n\t\tvar blend: any = (renderState.blend ?? datas[Shader3D.BLEND]) ?? RenderState.Default.blend;\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = (renderState.blendEquation ?? datas[Shader3D.BLEND_EQUATION]) ?? RenderState.Default.blendEquation;\r\n\t\t\t\tvar srcBlend: any = (renderState.srcBlend ?? datas[Shader3D.BLEND_SRC]) ?? RenderState.Default.srcBlend;\r\n\t\t\t\tvar dstBlend: any = (renderState.dstBlend ?? datas[Shader3D.BLEND_DST]) ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = (renderState.blendEquationRGB ?? datas[Shader3D.BLEND_EQUATION_RGB]) ?? RenderState.Default.blendEquationRGB;\r\n\t\t\t\tvar blendEquationAlpha: any = (renderState.blendEquationAlpha ?? datas[Shader3D.BLEND_EQUATION_ALPHA]) ?? RenderState.Default.blendEquationAlpha;\r\n\t\t\t\tvar srcRGB: any = (renderState.srcBlendRGB ?? datas[Shader3D.BLEND_SRC_RGB]) ?? RenderState.Default.srcBlendRGB;\r\n\t\t\t\tvar dstRGB: any = (renderState.dstBlendRGB ?? datas[Shader3D.BLEND_DST_RGB]) ?? RenderState.Default.dstBlendRGB;\r\n\t\t\t\tvar srcAlpha: any = (renderState.srcBlendAlpha ?? datas[Shader3D.BLEND_SRC_ALPHA]) ?? RenderState.Default.srcBlendAlpha;\r\n\t\t\t\tvar dstAlpha: any = (renderState.dstBlendAlpha ?? datas[Shader3D.BLEND_DST_ALPHA]) ?? RenderState.Default.dstBlendAlpha;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * set blend depth stencil RenderState frome Material\r\n\t * @param shaderDatas \r\n\t */\r\n\tuploadRenderStateBlendDepthByMaterial(shaderDatas: ShaderData) {\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\r\n\t\tvar depthWrite: any = datas[Shader3D.DEPTH_WRITE];\r\n\t\tdepthWrite = depthWrite ?? false;\r\n\t\tRenderStateContext.setDepthMask(depthWrite);\r\n\t\tvar depthTest: any = datas[Shader3D.DEPTH_TEST];\r\n\t\tdepthTest = depthTest ?? RenderState.Default.depthTest;\r\n\t\tif (depthTest === RenderState.DEPTHTEST_OFF)\r\n\t\t\tRenderStateContext.setDepthTest(false);\r\n\t\telse {\r\n\t\t\tRenderStateContext.setDepthTest(true);\r\n\t\t\tRenderStateContext.setDepthFunc(depthTest);\r\n\t\t}\r\n\r\n\t\tvar stencilWrite: any = datas[Shader3D.STENCIL_WRITE];\r\n\t\tstencilWrite = stencilWrite ?? false;\r\n\t\t//Stencil\r\n\t\tvar stencilTest: any = datas[Shader3D.STENCIL_TEST];\r\n\t\tstencilTest = stencilTest ?? RenderState.Default.stencilTest;\r\n\t\tRenderStateContext.setStencilMask(stencilWrite);\r\n\t\tif (stencilWrite) {\r\n\t\t\tvar stencilOp: any = datas[Shader3D.STENCIL_Op];\r\n\t\t\tstencilOp = stencilOp ?? RenderState.Default.stencilOp;\r\n\t\t\tRenderStateContext.setstencilOp(stencilOp.x, stencilOp.y, stencilOp.z);\r\n\t\t}\r\n\t\tif (stencilTest == RenderState.STENCILTEST_OFF) {\r\n\t\t\tRenderStateContext.setStencilTest(false);\r\n\t\t} else {\r\n\t\t\tvar stencilRef: any = datas[Shader3D.STENCIL_Ref];\r\n\t\t\tstencilRef = stencilRef ?? RenderState.Default.stencilRef;\r\n\t\t\tRenderStateContext.setStencilTest(true);\r\n\t\t\tRenderStateContext.setStencilFunc(stencilTest, stencilRef);\r\n\t\t}\r\n\t\t//blend\r\n\t\tvar blend: any = datas[Shader3D.BLEND];\r\n\t\tswitch (blend) {\r\n\t\t\tcase RenderState.BLEND_DISABLE:\r\n\t\t\t\tRenderStateContext.setBlend(false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_ALL:\r\n\t\t\t\tvar blendEquation: any = datas[Shader3D.BLEND_EQUATION] //Shader3D.RENDER_STATE_BLEND_EQUATION);\r\n\t\t\t\tvar srcBlend: any = datas[Shader3D.BLEND_SRC] //Shader3D.RENDER_STATE_BLEND_SRC);\r\n\t\t\t\tvar dstBlend: any = datas[Shader3D.BLEND_DST] //Shader3D.RENDER_STATE_BLEND_DST);\r\n\t\t\t\tblendEquation = blendEquation ?? RenderState.Default.blendEquation;\r\n\t\t\t\tsrcBlend = srcBlend ?? RenderState.Default.srcBlend;\r\n\t\t\t\tdstBlend = dstBlend ?? RenderState.Default.dstBlend;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquation(blendEquation);\r\n\t\t\t\tRenderStateContext.setBlendFunc(srcBlend, dstBlend);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.BLEND_ENABLE_SEPERATE:\r\n\t\t\t\tvar blendEquationRGB: any = datas[Shader3D.BLEND_EQUATION_RGB];\r\n\t\t\t\tvar blendEquationAlpha: any = datas[Shader3D.BLEND_EQUATION_ALPHA];\r\n\t\t\t\tvar srcRGB: any = datas[Shader3D.BLEND_SRC_RGB];\r\n\t\t\t\tvar dstRGB: any = datas[Shader3D.BLEND_DST_RGB];\r\n\t\t\t\tvar srcAlpha: any = datas[Shader3D.BLEND_SRC_ALPHA];\r\n\t\t\t\tvar dstAlpha: any = datas[Shader3D.BLEND_DST_ALPHA];\r\n\t\t\t\tblendEquationRGB = blendEquationRGB ?? RenderState.Default.blendEquationRGB;\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha ?? RenderState.Default.blendEquationAlpha;\r\n\t\t\t\tsrcRGB = srcRGB ?? RenderState.Default.srcBlendRGB;\r\n\t\t\t\tdstRGB = dstRGB ?? RenderState.Default.dstBlendRGB;\r\n\t\t\t\tsrcAlpha = srcAlpha ?? RenderState.Default.srcBlendAlpha;\r\n\t\t\t\tdstAlpha = dstAlpha ?? RenderState.Default.dstBlendAlpha;\r\n\t\t\t\tRenderStateContext.setBlend(true);\r\n\t\t\t\tRenderStateContext.setBlendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n\t\t\t\tRenderStateContext.setBlendFuncSeperate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadRenderStateFrontFace(shaderDatas: ShaderData, isTarget: boolean, invertFront: boolean): void {\r\n\t\tvar renderState: RenderState = (<ShaderPass>this._shaderPass).renderState;\r\n\t\tvar datas: any = shaderDatas.getData();\r\n\t\tvar cull: any = datas[Shader3D.CULL];\r\n\t\tif ((<ShaderPass>this._shaderPass).statefirst) {\r\n\t\t\tcull = renderState.cull ?? cull;\r\n\t\t}\r\n\t\tcull = cull ?? RenderState.Default.cull;\r\n\t\tvar forntFace: number;\r\n\t\tswitch (cull) {\r\n\t\t\tcase RenderState.CULL_NONE:\r\n\t\t\t\tRenderStateContext.setCullFace(false);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_FRONT:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget == invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t\tcase RenderState.CULL_BACK:\r\n\t\t\t\tRenderStateContext.setCullFace(true);\r\n\t\t\t\tif (isTarget != invertFront)\r\n\t\t\t\t\tforntFace = CullMode.Front;//gl.CCW\r\n\t\t\t\telse\r\n\t\t\t\t\tforntFace = CullMode.Back;\r\n\t\t\t\tRenderStateContext.setFrontFace(forntFace);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\tuploadCustomUniform(index: number, data: any): void {\r\n\t\tLayaGL.renderEngine.uploadCustomUniforms(this._renderShaderInstance, this._customUniformParamsMap, index, data);\r\n\t}\r\n}\r\n\r\n","export class ShaderValue {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { SoundChannel } from \"./SoundChannel\";\r\nimport { EventDispatcher } from \"../events/EventDispatcher\"\r\n\r\n/**\r\n * <code>Sound</code> 类是用来播放控制声音的类。\r\n * 引擎默认有两套声音方案，优先使用WebAudio播放声音，如果WebAudio不可用，则用H5Audio播放，H5Audio在部分机器上有兼容问题（比如不能混音，播放有延迟等）。\r\n */\r\nexport class Sound extends EventDispatcher {\r\n\r\n    /**\r\n     * 加载声音。\r\n     * @param url 地址。\r\n     */\r\n    load(url: string): void {\r\n\r\n    }\r\n\r\n    /**\r\n     * 播放声音。\r\n     * @param startTime 开始时间,单位秒\r\n     * @param loops 循环次数,0表示一直循环\r\n     * @return 声道 SoundChannel 对象。\r\n     */\r\n    play(startTime: number = 0, loops: number = 0): SoundChannel {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * 获取总时间。\r\n     */\r\n    get duration(): number {\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * 释放声音资源。\r\n     */\r\n    dispose(): void {\r\n\r\n    }\r\n}\r\n\r\n","import { UniformBufferParamsType, UnifromBufferData } from \"./UniformBufferData\";\r\nexport class SubUniformBufferData extends UnifromBufferData{\r\n    \r\n    /**@internal */\r\n    _offset:number;\r\n\r\n    /**@interanl */\r\n    _isInPool:boolean = false;\r\n\r\n    /**@interanl */\r\n    _needUpdate:boolean = false;\r\n\r\n    /**@internal */\r\n    _realByte = 0;\r\n    /**\r\n     * create UniformBufferData Instance\r\n     * @param uniformParamsStat Params describe\r\n     */\r\n    constructor(uniformParamsStat: Map<number, UniformBufferParamsType>,bufferOffset:number) {\r\n        super(uniformParamsStat);\r\n        this._offset = bufferOffset;\r\n        this._realByte = this._bytelength;\r\n        this._bytelength =Math.ceil(this._bytelength/256)*256;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","/**\r\n * @private\r\n */\r\nexport class System {\r\n    /**\r\n     * 替换指定名称的定义。用来动态更改类的定义。\r\n     * @param\tname 属性名。\r\n     * @param\tclassObj 属性值。\r\n     */\r\n    //TODO:coverage\r\n    static changeDefinition(name: string, classObj: any): void {\r\n        (window as any).Laya[name] = classObj;\r\n        var str: string = name + \"=classObj\";\r\n        window['eval'](str);\r\n    }\r\n}\r\n\r\n","import { LayaGL } from \"../layagl/LayaGL\";\r\nimport { TextureDimension } from \"../RenderEngine/RenderEnum/TextureDimension\";\r\nimport { TextureFormat } from \"../RenderEngine/RenderEnum/TextureFormat\";\r\nimport { ITexture3DContext } from \"../RenderEngine/RenderInterface/ITextureContext\";\r\nimport { BaseTexture } from \"./BaseTexture\";\r\n\r\n/**\r\n * 2D 纹理 数组\r\n */\r\nexport class Texture2DArray extends BaseTexture {\r\n\r\n    readonly depth: number;\r\n\r\n    constructor(width: number, height: number, depth: number, format: TextureFormat, mipmap: boolean = true, canRead: boolean, sRGB: boolean = false) {\r\n        super(width, height, format);\r\n        this._dimension = TextureDimension.Texture2DArray;\r\n        this._gammaSpace = sRGB;\r\n\r\n        this.depth = depth;\r\n\r\n        this._texture = LayaGL.textureContext.createTextureInternal(this._dimension, width, height, format, mipmap, sRGB, false);\r\n\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * 设置Image数据\r\n     * @param sources Image 数组\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setImageData(sources: HTMLImageElement[] | HTMLCanvasElement[] | ImageBitmap[], premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DImageData(texture, sources, this.depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n    /**\r\n     * 设置像素数据\r\n     * @param source 像素数据\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转图像 Y 轴\r\n     */\r\n    setPixlesData(source: ArrayBufferView, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DPixlesData(texture, source, this.depth, premultiplyAlpha, invertY)\r\n    }\r\n\r\n    /**\r\n     * 更新像素数据\r\n     * @param xOffset x 偏移\r\n     * @param yOffset y 偏移\r\n     * @param zOffset z 偏移\r\n     * @param width 更新数据宽度\r\n     * @param height 更新数据高度\r\n     * @param depth 更新数据深度层级\r\n     * @param pixels 像素数据\r\n     * @param mipmapLevel mipmap 等级\r\n     * @param generateMipmap 是否生成 mipmap\r\n     * @param premultiplyAlpha 是否预乘 alpha\r\n     * @param invertY 是否反转 Y 轴\r\n     */\r\n    setSubPixelsData(xOffset: number, yOffset: number, zOffset: number, width: number, height: number, depth: number, pixels: ArrayBufferView, mipmapLevel: number, generateMipmap: boolean, premultiplyAlpha: boolean, invertY: boolean) {\r\n        let texture = this._texture;\r\n        let context = <ITexture3DContext>LayaGL.textureContext;\r\n        context.setTexture3DSubPixelsData(texture, pixels, mipmapLevel, generateMipmap, xOffset, yOffset, zOffset, width, height, depth, premultiplyAlpha, invertY);\r\n    }\r\n\r\n}"],"mappings":"2CAGaA,WAQTC,gBAAgBC,EAAmBC,GAC/BH,WAAWI,UAAUF,GAAaC,C,CAQtCF,gBAAgBC,GACZ,OAAOF,WAAWI,UAAUF,E,CAQhCD,mBAAmBC,GACf,IAAIG,EAAiBL,WAAWM,SAASJ,GACzC,OAAIG,EAAkB,IAAIA,GACrBE,QAAQC,KAAK,2BAA4BN,GACvC,K,ECkJf,SAASO,QAAK,CD/KHT,WAASI,UAAwB,G,MED/BM,QAIFA,OAAWC,aAAY,EAIvBD,OAASE,WAAY,EAIrBF,OAAGG,IAAG,GAINH,OAAgBI,kBAAY,EAM5BJ,OAAiBK,kBAAW,GAK5BL,OAAuBM,yBAAY,EAKnCN,OAAeO,gBAAW,GAI1BP,OAAWQ,YAAW,QAMtBR,OAAOS,SAAY,EAInBT,OAAOU,SAAY,EAInBV,OAA8BW,gCAAY,EAE1CX,OAAeY,gBAAyB,UAIxCZ,OAAkBa,oBAAY,EAI9Bb,OAASc,WAAY,EAIrBd,OAAqBe,uBAAY,EAIjCf,OAAegB,iBAAY,EAG3BhB,OAAAiB,cAAqB,CAAE,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,MAAO,QAAS,KAAM,OAAQ,MAAO,QAAS,MAAO,QAAS,KAAM,OAAQ,MAAO,QAAS,KAAM,OAAQ,MAAO,QAAS,KAAM,OAAQ,KAAM,OAAQ,KAAM,OAAQ,KAAM,QAG3OjB,OAAWkB,aAAY,EAEvBlB,OAAiCmB,mCAAG,E,MC3ElCC,OACFA,MAAsBC,uBAAW,EACjCD,MAAqBE,sBAAW,EAChCF,MAAoBG,qBAAW,EAE/BH,MAAQI,SAAW,EACnBJ,MAAUK,WAAW,EAErBL,MAAaM,cAAW,S,MAOtBC,WACFA,UAAUC,WAAG,EACbD,UAAkBE,mBAAG,EACrBF,UAAMG,OAAG,EACTH,UAASI,UAAG,EACZJ,UAAOK,QAAG,GACVL,UAAUM,WAAG,GACbN,UAASO,UAAG,GACZP,UAAiBQ,kBAAG,IACpBR,UAAiBS,kBAAG,IACpBT,UAAkBU,mBAAG,IACrBV,UAAgBW,iBAAG,KACnBX,UAAUY,WAAG,KACbZ,UAAyBa,0BAAG,KAC5Bb,UAAsBc,uBAAG,KACzBd,UAAsBe,uBAAG,MACzBf,UAAkBgB,mBAAG,MACrBhB,UAAYiB,aAAG,MACfjB,UAAckB,eAAG,OACjBlB,UAAcmB,eAAG,O,MAGfC,WACFA,UAAeC,gBAAG,EAClBD,UAAeE,gBAAG,EAClBF,UAAQG,SAAG,EACXH,UAAeI,gBAAG,E,MCnChBC,OACFA,MAAMC,OAAkB,KACxBD,MAAOE,QAAmB,KAC1BF,MAAOG,QAAmB,KAE1BH,MAAII,KAAQ,KACZJ,MAAMK,OAAW,KACjBL,MAAKM,MAAU,KACfN,MAAWO,YAAU,KACrBP,MAAYQ,aAAU,KACtBR,MAAKS,MAAU,K,MCpBbC,SACFA,QAAOC,QAAW,QAClBD,QAASE,WAAY,EACrBF,QAASG,WAAY,EACrBH,QAAAI,QAA0C,MAAjBC,OAAQC,M,MCA/BC,KAaT9E,qBAAqB+E,GACjB,OAAOD,KAAKE,SAASD,KAAUD,KAAKE,SAASD,GAAQ,G,CAOzD/E,mBAAmB+E,GACXD,KAAKE,SAASD,KAAOD,KAAKE,SAASD,GAAME,OAAS,E,CAQ1DjF,eAAe+E,EAAcG,IACG,IAAxBA,EAAKJ,KAAKK,YAEdD,EAAKJ,KAAKK,WAAY,EACtBL,KAAKM,cAAcL,GAAMM,KAAKH,G,CAOlClF,sBAAsBsF,GAClB,GAAIA,EAAU,CACV,IAAIrF,EAAoBqF,EAAsB,aAAKA,EAASC,YAAYC,MACpEvF,GAAW6E,KAAKW,QAAQxF,EAAWqF,EAC1C,C,CAMGtF,qBAAqB0F,GACzB,IAAIzF,EAAYyF,EAAiB,aAAKA,EAAW,MAKjD,OAJKzF,IACDyF,EAAW,MAAIzF,EAAY6E,KAAKa,OAAS,GACzCb,KAAKa,UAEF1F,C,CAOXD,qBAAwB4F,GACpB,OAAOd,KAAKe,eAAef,KAAKgB,cAAcF,GAAMA,E,CAUxD5F,sBAAyB+E,EAAca,GACnC,IAAIG,EACAC,EAAOlB,KAAKM,cAAcL,GAM9B,OAJIgB,EADAC,EAAKf,OACCe,EAAKC,MAEL,IAAIL,EACdG,EAAIjB,KAAKK,WAAY,EACdY,C,CAWX/F,0BAA0B+E,EAAcmB,EAAqBC,EAAc,MACvE,IAAIH,EAAclB,KAAKM,cAAcL,GACjCgB,EAAWC,EAAKf,OAASe,EAAKC,MAAQC,EAAUE,KAAKD,GAEzD,OADAJ,EAAIjB,KAAKK,WAAY,EACdY,C,CAQX/F,eAAe+E,GACX,IAAIiB,EAAclB,KAAKM,cAAcL,GACjCgB,EAAWC,EAAKf,OAASe,EAAKC,MAAQ,KAI1C,OAHIF,IACAA,EAAIjB,KAAKK,WAAY,GAElBY,C,EA9GIjB,KAAMa,OAAW,EAEjBb,KAAQK,SAAW,WAEnBL,KAAQE,SAAQ,GCVnC,IAAIqB,EAAe,EACnB,MAAMC,EAAc,IAAMC,KAAKC,GACzBC,EAAeF,KAAKC,GAAK,I,MAKlBE,MAOT1G,gBAAgB2G,GACZ,OAAOA,EAAQF,C,CAQnBzG,eAAe4G,GACX,OAAOA,EAASN,C,CAQpBtG,kBAAkB6G,GACd,GAAIA,EAAQ,GAAKC,MAAMD,GAAQ,OAAO,KAEtC,IADA,IAAIE,EAAcF,EAAMG,SAAS,IAC1BD,EAAI9B,OAAS,GAAG8B,EAAM,IAAMA,EACnC,MAAO,IAAMA,C,CAGjB/G,uBAAuBiH,GACnB,IAAKA,EACD,OAAO,EAEX,GAAIA,EAAMC,QAAQ,UAAY,GAAKD,EAAMC,QAAQ,SAAW,EAAG,CAC3D,IAAIC,EAAKF,EAAMC,QAAQ,KACnBE,EAAKH,EAAMC,QAAQ,KACvB,IAAW,GAAPC,IAAmB,GAAPC,EACZ,OAAO,EAGX,IAAIC,GADJJ,EAAQA,EAAMK,UAAUH,EAAK,EAAGC,IACTG,MAAM,KACzBC,EAAMH,EAAIpC,OACd,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IACrBJ,EAAII,GAAKC,WAAWL,EAAII,IACpBX,MAAMO,EAAII,MACVJ,EAAII,GAAK,GAEjB,OAAkB,GAAdJ,EAAIpC,QACIoC,EAAI,IAAM,KAAOA,EAAI,IAAM,KAAOA,EAAI,IAAM,GAAKd,KAAKoB,MAAe,IAATN,EAAI,KAEhEA,EAAI,IAAM,KAAOA,EAAI,IAAM,GAAKA,EAAI,EACnD,CAAM,CACiB,MAApBJ,EAAMW,OAAO,KAAeX,EAAQA,EAAMK,UAAU,IACpD,IAAIE,EAAMP,EAAMhC,OAChB,GAAY,IAARuC,GAAqB,IAARA,EAAW,CACxB,IAAIK,EAAe,GACnB,IAAK,IAAIJ,EAAI,EAAGA,EAAID,EAAKC,IACrBI,GAASZ,EAAMQ,GAAKR,EAAMQ,GAE9BR,EAAQY,CACX,CACD,OAAOC,SAASb,EAAO,GAC1B,C,CAILjH,gBACI,OAAOqG,G,CAUXrG,iBAAiB+H,EAAeC,GAE5B,GADAD,IAAWA,EAAS,KACfC,EAAO,OAAOD,EACnBA,EAAO9C,OAAS+C,EAAM/C,OACtB,IAAIuC,EAAcQ,EAAM/C,OACxB,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IACrBM,EAAON,GAAKO,EAAMP,GAEtB,OAAOM,C,CAUX/H,sBAAsBiI,EAAeC,EAAWC,GAC5C,IAAIV,EAAWD,EAAcS,EAAOhD,OACpC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,GAAK,EACtBQ,EAAOR,IAAMS,EACbD,EAAOR,EAAI,IAAMU,C,CAUzBnI,gBAAgB+G,EAAaqB,EAAgB,GACzC,IAAIC,EAAcP,SAASf,EAAKqB,GAChC,OAAItB,MAAMuB,GAAgB,EACnBA,C,CAMXrI,mBAAmBsI,GACf,IAAIb,EAAIa,EAAKC,YAAY,KAMzB,OALU,GAANd,IACAa,EAAOA,EAAKhB,UAAUG,EAAI,IAC9BA,EAAIa,EAAKpB,QAAQ,MACP,GAANO,IACAa,EAAOA,EAAKhB,UAAU,EAAGG,IACtBa,C,CAMXtI,wBAAwBsI,GACpB,IAAIb,EAAIa,EAAKC,YAAY,KAEzB,IAAU,GAANd,EAAS,CACT,IAAIe,EAAMF,EAAKhB,UAAUG,EAAI,GAAGgB,cAC5BC,EAAIF,EAAItB,QAAQ,KAGpB,IAFU,GAANwB,IACAF,EAAMA,EAAIlB,UAAU,EAAGoB,IACf,OAARF,EAAc,CACd,IAAIG,EAAIL,EAAKC,YAAY,IAAKd,EAAI,GAClC,IAAU,GAANkB,EAAS,CACT,IAAIC,EAAON,EAAKhB,UAAUqB,EAAI,EAAGlB,EAAI,GAAKe,EAC1C,GAAa,aAATI,GAAgC,YAATA,EACvB,OAAOA,CACd,CACJ,CACD,OAAOJ,CACV,CAEG,MAAO,E,CAMfxI,4BAA4BsI,EAAcO,EAAgBC,GACtD,IAAKR,EACD,OAAOA,EACX,IAAIb,EAAIa,EAAKC,YAAY,KAGzB,GAFIM,EAAO5D,OAAS,IAAM6D,IACtBD,EAAS,IAAMA,IACT,GAANpB,EAAS,CACT,IAAIiB,EAAIJ,EAAKpB,QAAQ,IAAKO,GAC1B,OAAU,GAANiB,EACOJ,EAAKhB,UAAU,EAAGG,GAAKoB,EAASP,EAAKhB,UAAUoB,GAE/CJ,EAAKhB,UAAU,EAAGG,GAAKoB,CACrC,CAEG,OAAOP,EAAOO,C,QC1KbE,UAsCTxD,cAlCQyD,KAAUC,WAAW,EAI7BD,KAAOE,QAAW,EAOlBF,KAAQG,UAAY,EAIpBH,KAAUI,YAAa,EAoBnBJ,KAAKK,IAAM3C,MAAM4C,SAEjBN,KAAKO,a,CAdLC,gBACA,OAAOR,KAAKC,U,CAGZO,cAAUvC,GACV+B,KAAKC,WAAahC,C,CAatBsC,cACIP,KAAKS,OAAS,E,CAGlBC,YAAYC,GACR,OAAmC,IAA3BX,KAAKC,WAAaU,E,CAM1BC,SACA,OAAOZ,KAAKK,G,CAMZQ,cACA,OAAOb,KAAKG,Q,CAGZU,YAAQ5C,GACJ+B,KAAKG,UAAYlC,IACjB+B,KAAKG,SAAWlC,EACZ+B,KAAKc,OACLd,KAAKe,WAAW9C,GAAS+B,KAAKc,MAAME,mB,CAI5CC,aACA,OAAOjB,KAAKE,QAAU,C,CAMtBgB,gBACA,OAAuB,GAAhBlB,KAAKE,O,CAKhBiB,YACI,OAAO,C,CAKDC,aACNpB,KAAKG,UAAW,EAChBH,KAAKE,QAAU,EACfF,KAAKqB,cAAe,EACpBrB,KAAKc,MAAQ,I,CAGjBQ,UAAUC,GACN,GAAoB,GAAhBvB,KAAKE,QACL,KAAM,8BAEVF,KAAKc,MAAQS,EAETvB,KAAKmB,aACLI,EAAKC,QAAQpI,UAAUY,YAAY,GAEvCgG,KAAKyB,WACLzB,KAAK0B,S,CAOCD,W,CAOAE,W,CAOAC,YACN5B,KAAK6B,U,CAQCC,aACN9B,KAAK+B,W,CAOCC,a,CAMVC,OAAOC,EAAWC,EAAmB,M,CAOrCC,kBAAkBF,EAAY,KAAMG,EAAiB,M,CAOrDC,SAASC,G,CAOTxB,WAAW9C,G,QACP,GAAIA,GASA,GARoB,GAAhB+B,KAAKE,UACLF,KAAKE,QAAU,GAEX3E,QAAQE,WAAauE,KAAKwC,eAC1BxC,KAAK2B,WACL3B,KAAKyC,YAGTzC,KAAKG,WAAaH,KAAKqB,eACvBrB,KAAKqB,cAAe,EAEhB9F,QAAQE,WAAauE,KAAKwC,aAAa,GACe,QAAzCE,EAAC1C,KAAKc,MAAM6B,OAAS3C,KAAKc,MAAM8B,cAAS,IAAAF,OAAA,EAAAA,EAAAG,mBAAoBhI,MAAMS,MAAMuH,kBAC/EC,IAAI9C,MAEPzE,QAAQE,WAAauE,KAAKmB,aAC1BnB,KAAK+C,cAET/C,KAAK4B,WACR,OAEF,GAAI5B,KAAKqB,eACZrB,KAAKqB,cAAe,EAChB9F,QAAQE,WAAauE,KAAKwC,aAAa,GACe,QAAzCQ,EAAChD,KAAKc,MAAM6B,OAAS3C,KAAKc,MAAM8B,cAAS,IAAAI,OAAA,EAAAA,EAAAH,mBAAoBhI,MAAMS,MAAMuH,kBAC/EI,OAAOjD,MAEdnF,MAAMS,MAAM4H,aAAalD,MAEzBA,KAAK8B,YACR,C,CAICiB,c,CAMVI,UACwB,GAAhBnD,KAAKE,SAGLF,KAAKc,OACLd,KAAKc,MAAMsC,kBAAkBpD,K,CAMrCqD,SAASC,G,MACL,GAAIA,EAQA,OAPAtD,KAAKgC,aACLhC,KAAKuD,iBACDvD,KAAKwD,UACLxD,KAAKwD,UACLxD,KAAKoB,aACLtF,KAAK2H,eAAezD,QAK5BA,KAAKe,YAAW,GAChBf,KAAKE,QAAU,IAEuC,QAAzCwC,EAAC1C,KAAKc,MAAM6B,OAAS3C,KAAKc,MAAM8B,cAAS,IAAAF,OAAA,EAAAA,EAAAG,mBAAoBhI,MAAMS,MAAMuH,kBAC/Ea,YAAYZ,IAAI9C,K,CAM3B0B,U,CAaAe,U,CAMAZ,W,CA+BAE,Y,CAMAwB,Y,QCtTSI,OAiCTpH,YAAYqH,EAAY,EAAGC,EAAY,EAAGC,EAAY,EAAGC,EAAY,EAAGC,EAAa,EAAGC,EAAa,EAAGC,EAAe,GACnH,GAZJlE,KAAWmE,aAAY,EAYM,MAArBR,OAAOS,WACP,OAAOT,OAAOS,WAAWR,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,EAAIC,GAEjDlE,KAAK4D,EAAIA,EACT5D,KAAK6D,EAAIA,EACT7D,KAAK8D,EAAIA,EACT9D,KAAK+D,EAAIA,EACT/D,KAAKgE,GAAKA,EACVhE,KAAKiE,GAAKA,EACVjE,KAAKqE,iB,CAOTC,WAII,OAHAtE,KAAK4D,EAAI5D,KAAK+D,EAAI,EAClB/D,KAAK6D,EAAI7D,KAAKgE,GAAKhE,KAAKiE,GAAKjE,KAAK8D,EAAI,EACtC9D,KAAKmE,aAAc,EACZnE,I,CAIXqE,kBACI,OAAOrE,KAAKmE,YAA0B,IAAXnE,KAAK4D,GAAsB,IAAX5D,KAAK6D,GAAsB,IAAX7D,KAAK8D,GAAsB,IAAX9D,KAAK+D,C,CASpFQ,aAAarF,EAAWC,GAGpB,OAFAa,KAAKgE,GAAK9E,EACVc,KAAKiE,GAAK9E,EACHa,I,CASXwE,UAAUtF,EAAWC,GAGjB,OAFAa,KAAKgE,IAAM9E,EACXc,KAAKiE,IAAM9E,EACJa,I,CASXyE,MAAMvF,EAAWC,GAQb,OAPAa,KAAK4D,GAAK1E,EACVc,KAAK+D,GAAK5E,EACVa,KAAK8D,GAAK5E,EACVc,KAAK6D,GAAK1E,EACVa,KAAKgE,IAAM9E,EACXc,KAAKiE,IAAM9E,EACXa,KAAKmE,aAAc,EACZnE,I,CAQX0E,OAAO/G,GACH,IAAIgH,EAAcpH,KAAKoH,IAAIhH,GACvBiH,EAAcrH,KAAKqH,IAAIjH,GACvBkH,EAAa7E,KAAK4D,EAClBkB,EAAa9E,KAAK8D,EAClBiB,EAAc/E,KAAKgE,GASvB,OAPAhE,KAAK4D,EAAIiB,EAAKF,EAAM3E,KAAK6D,EAAIe,EAC7B5E,KAAK6D,EAAIgB,EAAKD,EAAM5E,KAAK6D,EAAIc,EAC7B3E,KAAK8D,EAAIgB,EAAKH,EAAM3E,KAAK+D,EAAIa,EAC7B5E,KAAK+D,EAAIe,EAAKF,EAAM5E,KAAK+D,EAAIY,EAC7B3E,KAAKgE,GAAKe,EAAMJ,EAAM3E,KAAKiE,GAAKW,EAChC5E,KAAKiE,GAAKc,EAAMH,EAAM5E,KAAKiE,GAAKU,EAChC3E,KAAKmE,aAAc,EACZnE,I,CASXgF,KAAK9F,EAAWC,GACZ,IAAI8F,EAAe1H,KAAK2H,IAAIhG,GACxBiG,EAAe5H,KAAK2H,IAAI/F,GACxB0F,EAAa7E,KAAK4D,EAClBwB,EAAapF,KAAK6D,EAKtB,OAJA7D,KAAK4D,GAAKuB,EAAOnF,KAAK8D,EACtB9D,KAAK6D,GAAKsB,EAAOnF,KAAK+D,EACtB/D,KAAK8D,GAAKmB,EAAOJ,EACjB7E,KAAK+D,GAAKkB,EAAOG,EACVpF,I,CAQXqF,qBAAqBC,GACjB,IAAIT,EAAa7E,KAAK4D,EAClBwB,EAAapF,KAAK6D,EAClBiB,EAAa9E,KAAK8D,EAClByB,EAAavF,KAAK+D,EAClBgB,EAAc/E,KAAKgE,GACnBwB,EAAYX,EAAKU,EAAKH,EAAKN,EAE3BW,EAAaF,EAAKC,EAClBE,GAAcN,EAAKI,EACnBG,GAAcb,EAAKU,EACnBI,EAAaf,EAAKW,EAClBK,GAAef,EAAK9E,KAAKiE,GAAKsB,EAAKR,GAAOS,EAC1CM,IAAgBjB,EAAK7E,KAAKiE,GAAKmB,EAAKL,GAAOS,EAC/C,OAAOF,EAAIS,MAAMN,EAAKH,EAAIpG,EAAIyG,EAAKL,EAAInG,EAAI0G,EAAKH,EAAKJ,EAAIpG,EAAI0G,EAAKN,EAAInG,EAAI2G,E,CAQ9EE,eAAeV,GACX,OAAOA,EAAIS,MAAM/F,KAAK4D,EAAI0B,EAAIpG,EAAIc,KAAK8D,EAAIwB,EAAInG,EAAIa,KAAKgE,GAAIhE,KAAK6D,EAAIyB,EAAIpG,EAAIc,KAAK+D,EAAIuB,EAAInG,EAAIa,KAAKiE,G,CAQvGgC,gBAAgBX,GACZ,OAAOA,EAAIS,MAAM/F,KAAK4D,EAAI0B,EAAIpG,EAAIc,KAAK8D,EAAIwB,EAAInG,EAAYa,KAAK6D,EAAIyB,EAAIpG,EAAIc,KAAK+D,EAAIuB,EAAInG,E,CAO7F+G,YACI,OAAkB,IAAXlG,KAAK6D,EAAU7D,KAAK4D,EAAIrG,KAAK4I,KAAKnG,KAAK4D,EAAI5D,KAAK4D,EAAI5D,KAAK6D,EAAI7D,KAAK6D,E,CAO7EuC,YACI,OAAkB,IAAXpG,KAAK8D,EAAU9D,KAAK+D,EAAIxG,KAAK4I,KAAKnG,KAAK8D,EAAI9D,KAAK8D,EAAI9D,KAAK+D,EAAI/D,KAAK+D,E,CAO7EsC,SACI,IAAIxB,EAAa7E,KAAK4D,EAClBwB,EAAapF,KAAK6D,EAClBiB,EAAa9E,KAAK8D,EAClByB,EAAavF,KAAK+D,EAClBgB,EAAc/E,KAAKgE,GACnBwB,EAAYX,EAAKU,EAAKH,EAAKN,EAO/B,OANA9E,KAAK4D,EAAI2B,EAAKC,EACdxF,KAAK6D,GAAKuB,EAAKI,EACfxF,KAAK8D,GAAKgB,EAAKU,EACfxF,KAAK+D,EAAIc,EAAKW,EACdxF,KAAKgE,IAAMc,EAAK9E,KAAKiE,GAAKsB,EAAKR,GAAOS,EACtCxF,KAAKiE,KAAOY,EAAK7E,KAAKiE,GAAKmB,EAAKL,GAAOS,EAChCxF,I,CAaX+F,MAAMnC,EAAWC,EAAWC,EAAWC,EAAWC,EAAYC,GAE1D,OADAjE,KAAK4D,EAAIA,EAAG5D,KAAK6D,EAAIA,EAAG7D,KAAK8D,EAAIA,EAAG9D,KAAK+D,EAAIA,EAAG/D,KAAKgE,GAAKA,EAAIhE,KAAKiE,GAAKA,EACjEjE,I,CAQXsG,OAAOC,GACH,IAAI3C,EAAY5D,KAAK4D,EACjBE,EAAY9D,KAAK8D,EACjBE,EAAahE,KAAKgE,GAOtB,OANAhE,KAAK4D,EAAIA,EAAI2C,EAAO3C,EAAI5D,KAAK6D,EAAI0C,EAAOzC,EACxC9D,KAAK6D,EAAID,EAAI2C,EAAO1C,EAAI7D,KAAK6D,EAAI0C,EAAOxC,EACxC/D,KAAK8D,EAAIA,EAAIyC,EAAO3C,EAAI5D,KAAK+D,EAAIwC,EAAOzC,EACxC9D,KAAK+D,EAAID,EAAIyC,EAAO1C,EAAI7D,KAAK+D,EAAIwC,EAAOxC,EACxC/D,KAAKgE,GAAKA,EAAKuC,EAAO3C,EAAI5D,KAAKiE,GAAKsC,EAAOzC,EAAIyC,EAAOvC,GACtDhE,KAAKiE,GAAKD,EAAKuC,EAAO1C,EAAI7D,KAAKiE,GAAKsC,EAAOxC,EAAIwC,EAAOtC,GAC/CjE,I,CAUXhJ,WAAWwP,EAAYC,EAAYnB,GAC/B,IAAIoB,EAAaF,EAAG5C,EAAG+C,EAAaH,EAAG3C,EAAG+C,EAAaJ,EAAG1C,EAAG+C,EAAaL,EAAGzC,EAAG+C,EAAcN,EAAGxC,GAAI+C,EAAcP,EAAGvC,GAClH+C,EAAaP,EAAG7C,EAAGqD,EAAaR,EAAG5C,EAAGqD,EAAaT,EAAG3C,EAAGqD,EAAaV,EAAG1C,EAAGqD,EAAcX,EAAGzC,GAAIqD,EAAcZ,EAAGxC,GAgBtH,OAfW,IAAPgD,GAAmB,IAAPC,GACZ5B,EAAI1B,EAAI8C,EAAKM,EAAKL,EAAKO,EACvB5B,EAAIzB,EAAI6C,EAAKO,EAAKN,EAAKQ,EACvB7B,EAAIxB,EAAI8C,EAAKI,EAAKH,EAAKK,EACvB5B,EAAIvB,EAAI6C,EAAKK,EAAKJ,EAAKM,EACvB7B,EAAItB,GAAKgD,EAAKF,EAAMI,EAAKH,EAAMK,EAC/B9B,EAAIrB,GAAKgD,EAAKH,EAAMK,EAAKJ,EAAMM,IAE/B/B,EAAI1B,EAAI8C,EAAKM,EACb1B,EAAIzB,EAAI8C,EAAKQ,EACb7B,EAAIxB,EAAI8C,EAAKI,EACb1B,EAAIvB,EAAI8C,EAAKM,EACb7B,EAAItB,GAAKgD,EAAKF,EAAMM,EACpB9B,EAAIrB,GAAKkD,EAAKJ,EAAMM,GAEjB/B,C,CAUXtO,aAAawP,EAAYC,EAAYnB,GACjC,IAAIoB,EAAaF,EAAG5C,EAAG+C,EAAaH,EAAG3C,EAAG+C,EAAaJ,EAAG1C,EAAG+C,EAAaL,EAAGzC,EAAG+C,EAAcN,EAAGxC,GAAI+C,EAAcP,EAAGvC,GAClH+C,EAAaP,EAAG7C,EAAGqD,EAAaR,EAAG5C,EAAGqD,EAAaT,EAAG3C,EAAGqD,EAAaV,EAAG1C,EAAGqD,EAAcX,EAAGzC,GAAIqD,EAAcZ,EAAGxC,GAgBtH,OAfW,IAAPgD,GAAmB,IAAPC,GACZ5B,EAAI,GAAKoB,EAAKM,EAAKL,EAAKO,EACxB5B,EAAI,GAAKoB,EAAKO,EAAKN,EAAKQ,EACxB7B,EAAI,GAAKsB,EAAKI,EAAKH,EAAKK,EACxB5B,EAAI,GAAKsB,EAAKK,EAAKJ,EAAKM,EACxB7B,EAAI,IAAM0B,EAAKF,EAAMI,EAAKH,EAAMK,EAChC9B,EAAI,IAAM2B,EAAKH,EAAMK,EAAKJ,EAAMM,IAEhC/B,EAAI,GAAKoB,EAAKM,EACd1B,EAAI,GAAKqB,EAAKQ,EACd7B,EAAI,GAAKsB,EAAKI,EACd1B,EAAI,GAAKuB,EAAKM,EACd7B,EAAI,IAAM0B,EAAKF,EAAMM,EACrB9B,EAAI,IAAM6B,EAAKJ,EAAMM,GAElB/B,C,CASXgC,QAAQpI,EAAWC,GACf,IAAI6H,EAAahH,KAAK4D,EAAGqD,EAAajH,KAAK6D,EAAGqD,EAAalH,KAAK8D,EAAGqD,EAAanH,KAAK+D,EAC1E,IAAPkD,GAAmB,IAAPC,GACZlH,KAAK4D,EAAI1E,EAAI8H,EACbhH,KAAK6D,EAAI3E,EAAI+H,EACbjH,KAAK8D,EAAI3E,EAAI+H,EACblH,KAAK+D,EAAI5E,EAAIgI,IAEbnH,KAAK4D,EAAI1E,EAAI8H,EACbhH,KAAK6D,EAAI,EAAIsD,EACbnH,KAAK8D,EAAI,EAAIkD,EACbhH,KAAK+D,EAAI5E,EAAIgI,GAEjBnH,KAAKmE,aAAc,C,CAQvBoD,SAAS5J,GACL,IAAIgH,EAAcpH,KAAKoH,IAAIhH,GACvBiH,EAAcrH,KAAKqH,IAAIjH,GACvBqJ,EAAahH,KAAK4D,EAAGqD,EAAajH,KAAK6D,EAAGqD,EAAalH,KAAK8D,EAAGqD,EAAanH,KAAK+D,EAC1E,IAAPkD,GAAmB,IAAPC,GACZlH,KAAK4D,EAAIe,EAAMqC,EAAKpC,EAAMsC,EAC1BlH,KAAK6D,EAAIc,EAAMsC,EAAKrC,EAAMuC,EAC1BnH,KAAK8D,GAAKc,EAAMoC,EAAKrC,EAAMuC,EAC3BlH,KAAK+D,GAAKa,EAAMqC,EAAKtC,EAAMwC,IAE3BnH,KAAK4D,EAAIe,EAAMqC,EACfhH,KAAK6D,EAAIe,EAAMuC,EACfnH,KAAK8D,GAAKc,EAAMoC,EAChBhH,KAAK+D,EAAIY,EAAMwC,GAEnBnH,KAAKmE,aAAc,C,CAOvBqD,QACI,IAAIC,EAAc9D,OAAO+D,SAQzB,OAPAD,EAAI7D,EAAI5D,KAAK4D,EACb6D,EAAI5D,EAAI7D,KAAK6D,EACb4D,EAAI3D,EAAI9D,KAAK8D,EACb2D,EAAI1D,EAAI/D,KAAK+D,EACb0D,EAAIzD,GAAKhE,KAAKgE,GACdyD,EAAIxD,GAAKjE,KAAKiE,GACdwD,EAAItD,YAAcnE,KAAKmE,YAChBsD,C,CAQXE,OAAOF,GAQH,OAPAA,EAAI7D,EAAI5D,KAAK4D,EACb6D,EAAI5D,EAAI7D,KAAK6D,EACb4D,EAAI3D,EAAI9D,KAAK8D,EACb2D,EAAI1D,EAAI/D,KAAK+D,EACb0D,EAAIzD,GAAKhE,KAAKgE,GACdyD,EAAIxD,GAAKjE,KAAKiE,GACdwD,EAAItD,YAAcnE,KAAKmE,YAChBsD,C,CAOXzJ,WACI,OAAOgC,KAAK4D,EAAI,IAAM5D,KAAK6D,EAAI,IAAM7D,KAAK8D,EAAI,IAAM9D,KAAK+D,EAAI,IAAM/D,KAAKgE,GAAK,IAAMhE,KAAKiE,E,CAM5Fd,UACInD,KAAKvD,S,CAMTA,UACIX,KAAKW,QAAQ,SAAUuD,KAAKsE,W,CAOhCtN,gBACI,OAAO8E,KAAKe,eAAe,SAAU8G,O,EAzZlCA,OAAAiE,MAAgB,IAAIjE,OAEpBA,OAAAkE,KAAe,IAAIlE,OAEnBA,OAAUS,WAAkB,K,MCT1B0D,MAiBTvL,YAAY2C,EAAY,EAAGC,EAAY,GACnCa,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,C,CAMbnI,gBACI,OAAO8E,KAAKe,eAAe,QAASiL,M,CASxC/B,MAAM7G,EAAWC,GAGb,OAFAa,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACFa,I,CAMX+H,QAEI,OADA/H,KAAKd,EAAIc,KAAKb,EAAI,EACXa,I,CAMXvD,UACIX,KAAKW,QAAQ,QAASuD,KAAK+H,Q,CAS/BC,SAAS9I,EAAWC,GAChB,OAAO5B,KAAK4I,MAAMnG,KAAKd,EAAIA,IAAMc,KAAKd,EAAIA,IAAMc,KAAKb,EAAIA,IAAMa,KAAKb,EAAIA,G,CAI5EnB,WACI,OAAOgC,KAAKd,EAAI,IAAMc,KAAKb,C,CAM/B8I,YACI,IAAIlE,EAAYxG,KAAK4I,KAAKnG,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,GAC1D,GAAI4E,EAAI,EAAG,CACP,IAAInD,EAAa,EAAMmD,EACvB/D,KAAKd,GAAK0B,EACVZ,KAAKb,GAAKyB,CACb,C,CAOLsH,KAAKC,GACD,OAAOnI,KAAK+F,MAAMoC,EAAMjJ,EAAGiJ,EAAMhJ,E,EArF9B2I,MAAAD,KAAc,IAAIC,MAElBA,MAAAF,MAAe,IAAIE,M,MCHjBM,UA4BT7L,YAAY2C,EAAY,EAAGC,EAAY,EAAGkJ,EAAgB,EAAGC,EAAiB,GAC1EtI,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKqI,MAAQA,EACbrI,KAAKsI,OAASA,C,CAIdC,YACA,OAAOvI,KAAKd,EAAIc,KAAKqI,K,CAIrBG,aACA,OAAOxI,KAAKb,EAAIa,KAAKsI,M,CAWzBvC,MAAM7G,EAAWC,EAAWkJ,EAAeC,GAKvC,OAJAtI,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKqI,MAAQA,EACbrI,KAAKsI,OAASA,EACPtI,I,CAMX+H,QAEI,OADA/H,KAAKd,EAAIc,KAAKb,EAAIa,KAAKqI,MAAQrI,KAAKsI,OAAS,EACtCtI,I,CAMXvD,UACQuD,MAAQoI,UAAUP,MAAQ7H,MAAQoI,UAAUR,OAIhD9L,KAAKW,QAAQ,YAAauD,KAAK+H,Q,CAMnC/Q,gBACI,OAAO8E,KAAKe,eAAe,YAAauL,U,CAQ5CK,SAAS1J,GAKL,OAJAiB,KAAKd,EAAIH,EAAOG,EAChBc,KAAKb,EAAIJ,EAAOI,EAChBa,KAAKqI,MAAQtJ,EAAOsJ,MACpBrI,KAAKsI,OAASvJ,EAAOuJ,OACdtI,I,CASX0I,SAASxJ,EAAWC,GAChB,QAAIa,KAAKqI,OAAS,GAAKrI,KAAKsI,QAAU,KAElCpJ,GAAKc,KAAKd,GAAKA,EAAIc,KAAKuI,OACpBpJ,GAAKa,KAAKb,GAAKA,EAAIa,KAAKwI,O,CAYpCG,WAAWC,GACP,QAASA,EAAK1J,EAAKc,KAAKd,EAAIc,KAAKqI,OAAWO,EAAK1J,EAAI0J,EAAKP,MAASrI,KAAKd,GAAK0J,EAAKzJ,EAAKa,KAAKb,EAAIa,KAAKsI,QAAYM,EAAKzJ,EAAIyJ,EAAKN,OAAUtI,KAAKb,E,CASlJ0J,aAAaD,EAAiBtD,EAAwB,MAClD,OAAKtF,KAAK2I,WAAWC,IACrBtD,IAAQA,EAAM,IAAI8C,WAClB9C,EAAIpG,EAAI3B,KAAKuL,IAAI9I,KAAKd,EAAG0J,EAAK1J,GAC9BoG,EAAInG,EAAI5B,KAAKuL,IAAI9I,KAAKb,EAAGyJ,EAAKzJ,GAC9BmG,EAAI+C,MAAQ9K,KAAKwL,IAAI/I,KAAKuI,MAAOK,EAAKL,OAASjD,EAAIpG,EACnDoG,EAAIgD,OAAS/K,KAAKwL,IAAI/I,KAAKwI,OAAQI,EAAKJ,QAAUlD,EAAInG,EAC/CmG,GAN4B,I,CAgBvC0D,MAAMjK,EAAmBuG,EAAwB,MAG7C,OAFAA,IAAQA,EAAM,IAAI8C,WAClBpI,KAAKwH,MAAMlC,GACPvG,EAAOsJ,OAAS,GAAKtJ,EAAOuJ,QAAU,EAAUhD,GACpDA,EAAI2D,SAASlK,EAAOG,EAAGH,EAAOI,GAC9BmG,EAAI2D,SAASlK,EAAOwJ,MAAOxJ,EAAOyJ,QAC3BxI,K,CAQXwH,MAAMlC,EAAwB,MAM1B,OALAA,IAAQA,EAAM,IAAI8C,WAClB9C,EAAIpG,EAAIc,KAAKd,EACboG,EAAInG,EAAIa,KAAKb,EACbmG,EAAI+C,MAAQrI,KAAKqI,MACjB/C,EAAIgD,OAAStI,KAAKsI,OACXhD,C,CAMXtH,WACI,OAAOgC,KAAKd,EAAI,IAAMc,KAAKb,EAAI,IAAMa,KAAKqI,MAAQ,IAAMrI,KAAKsI,M,CAQjEY,OAAON,GACH,SAAKA,GAAQA,EAAK1J,IAAMc,KAAKd,GAAK0J,EAAKzJ,IAAMa,KAAKb,GAAKyJ,EAAKP,QAAUrI,KAAKqI,OAASO,EAAKN,SAAWtI,KAAKsI,O,CAW7GW,SAAS/J,EAAWC,GAKhB,OAJAa,KAAKd,EAAIA,IAAMc,KAAKqI,OAASrI,KAAKd,EAAIA,EAAGc,KAAKd,EAAIA,GAClDc,KAAKb,EAAIA,IAAMa,KAAKsI,QAAUtI,KAAKb,EAAIA,EAAGa,KAAKb,EAAIA,GAC/Ca,KAAKqI,MAAQnJ,EAAIc,KAAKd,IAAGc,KAAKqI,MAAQnJ,EAAIc,KAAKd,GAC/Cc,KAAKsI,OAASnJ,EAAIa,KAAKb,IAAGa,KAAKsI,OAASnJ,EAAIa,KAAKb,GAC9Ca,I,CAQXmJ,kBACI,IAAIpM,EAAMqL,UAAUgB,MAEpB,OADArM,EAAId,OAAS,EACK,GAAd+D,KAAKqI,OAA6B,GAAfrI,KAAKsI,QAC5BvL,EAAIV,KAAK2D,KAAKd,EAAGc,KAAKb,EAAGa,KAAKd,EAAIc,KAAKqI,MAAOrI,KAAKb,EAAGa,KAAKd,EAAGc,KAAKb,EAAIa,KAAKsI,OAAQtI,KAAKd,EAAIc,KAAKqI,MAAOrI,KAAKb,EAAIa,KAAKsI,QADvEvL,C,CASpD/F,uBAAuBkI,EAAWC,EAAWkJ,EAAeC,EAAgBe,GACxE,IAAItM,EAAaqL,UAAUkB,MAE3B,OADAvM,EAAId,OAAS,EACA,GAAToM,GAAwB,GAAVC,IACde,IACAnK,GAAKmK,EAAGhB,MACRlJ,GAAKkK,EAAGf,OACRD,GAASgB,EAAGhB,MACZC,GAAUe,EAAGf,QAEjBvL,EAAIV,KAAK6C,EAAGC,EAAGD,EAAImJ,EAAOlJ,EAAGD,EAAGC,EAAImJ,EAAQpJ,EAAImJ,EAAOlJ,EAAImJ,IAPrBvL,C,CAiB1C/F,mBAAmBuS,EAA8BxM,EAAwB,MAErE,IAAKwM,GAAaA,EAAUtN,OAAS,EAAG,OAAOc,EAAMA,EAAIgJ,MAAM,EAAG,EAAG,EAAG,GAAKqC,UAAUP,KAAK9B,MAAM,EAAG,EAAG,EAAG,GAC3GhJ,EAAMA,GAAYqL,UAAUV,SAC5B,IAAIjJ,EAA2C+K,EAAcC,EAAcC,EAAcC,EAA1EnL,EAAc+K,EAAUtN,OAAgE2N,EAAgB9B,MAAMD,KAG7H,IADA4B,EAAOE,IADPH,EAAOE,EAAO,OAETjL,EAAI,EAAGA,EAAID,EAAKC,GAAK,EACtBmL,EAAO1K,EAAIqK,EAAU9K,GACrBmL,EAAOzK,EAAIoK,EAAU9K,EAAI,GACzB+K,EAAOA,EAAOI,EAAO1K,EAAIsK,EAAOI,EAAO1K,EACvCwK,EAAOA,EAAOE,EAAOzK,EAAIuK,EAAOE,EAAOzK,EACvCsK,EAAOA,EAAOG,EAAO1K,EAAIuK,EAAOG,EAAO1K,EACvCyK,EAAOA,EAAOC,EAAOzK,EAAIwK,EAAOC,EAAOzK,EAE3C,OAAOpC,EAAIgJ,MAAMyD,EAAME,EAAMD,EAAOD,EAAMG,EAAOD,E,CAOrDG,UACI,OAAI7J,KAAKqI,OAAS,GAAKrI,KAAKsI,QAAU,C,EArQnCF,UAAAR,MAAmB,IAAIQ,UAEvBA,UAAAP,KAAkB,IAAIO,UAGdA,UAAKgB,MAAa,GAElBhB,UAAKkB,MAAa,G,MCRxBQ,QCTb,IAAYC,ECGAC,EDHAD,kEAKX,KAJGA,EAAA,eACAA,IAAA,eACAA,IAAA,eCAQC,4DAmEX,KAjEGA,EAAA,mBAEAA,IAAA,uBAEAA,IAAA,oBAEAA,IAAA,mBAEAA,IAAA,eAEAA,IAAA,gBAEAA,IAAA,eAEAA,IAAA,qBAEAA,IAAA,qBAEAA,IAAA,uBAIAA,IAAA,qCAEAA,IAAA,wBAEAA,IAAA,mCAEAA,IAAA,sCAEAA,IAAA,oCAEAA,IAAA,sCAEAA,IAAA,gCAEAA,IAAA,0BAEAA,IAAA,gCAEAA,IAAA,0BAEAA,IAAA,sBAEAA,IAAA,8BAEAA,IAAA,sBAEAA,IAAA,8BAEAA,IAAA,sBAEAA,IAAA,8BAEAA,IAAA,0BAEAA,IAAA,kCAEAA,IAAA,0BAEAA,IAAA,kCAEAA,IAAA,4BAEAA,IAAA,4B,MCnESC,SAIT1N,cACIyD,KAAKkK,MAAQ,EACblK,KAAKmK,OAAS,E,CAGXrH,IAAIsH,EAAoBC,EAAcC,GACzC,IAAIjM,EAAM2B,KAAKmK,OACXI,EAAQlM,EAAImM,WAAU,CAACvM,EAAOsM,EAAOlM,IAAQJ,GAASmM,GAAY/L,EAAIkM,EAAQ,IAAMF,KAC1E,GAAVE,GACAlM,EAAIkM,EAAQ,GAAKD,EACjBjM,EAAIkM,EAAQ,GAAK,GAGjBlM,EAAIhC,KAAK+N,EAAUC,EAAQC,EAAM,E,CAGlCG,KAAKL,EAAoBC,EAAcC,GAC1C,IAAIjM,EAAM2B,KAAKmK,OACXI,EAAQlM,EAAImM,WAAU,CAACvM,EAAOsM,EAAOlM,IAAQJ,GAASmM,GAAY/L,EAAIkM,EAAQ,IAAMF,KAC1E,GAAVE,GACAlM,EAAIkM,EAAQ,GAAKD,EACjBjM,EAAIkM,EAAQ,GAAK,GAGjBlM,EAAIhC,KAAK+N,EAAUC,EAAQC,EAAM,E,CAGlCrH,OAAOmH,EAAoBC,GAC9B,IAAIhM,EAAM2B,KAAKmK,OACXI,EAAQlM,EAAImM,WAAU,CAACvM,EAAOsM,EAAOlM,IAAQJ,GAASmM,GAAY/L,EAAIkM,EAAQ,IAAMF,KAC1E,GAAVE,IACkB,GAAdvK,KAAKkK,OACL7L,EAAIkM,EAAQ,GAAK,EACjBvK,KAAKkK,MAAQ,GAGb7L,EAAIqM,OAAOH,EA1CP,G,CA8CTI,QACH,IAAItM,EAAM2B,KAAKmK,OACG,GAAdnK,KAAKkK,OACL7L,EAAIuM,SAAQ,CAAC3M,EAAOsM,EAAOlM,KAAckM,EAjDjC,GAiDwD,IAAGlM,EAAIkM,GAAS,EAAC,IACjFvK,KAAKkK,MAAQ,GAGb7L,EAAIpC,OAAS,C,CAId4O,eAAeR,GAClB,IAAKA,EACD,OAEJ,IAAIhM,EAAM2B,KAAKmK,OACf,GAAkB,GAAdnK,KAAKkK,MACL7L,EAAIuM,SAAQ,CAAC3M,EAAOsM,EAAOlM,KAAekM,EA/DlC,GA+DyD,GAAMlM,EAAIkM,IAAUF,IAAQhM,EAAIkM,EAAQ,GAAK,EAAC,IAC/GvK,KAAKkK,MAAQ,MAEZ,CACD,IAAIzL,EAAYJ,EAAIpC,OAnEZ,EAoER,KAAOwC,GAAK,GACJJ,EAAII,EAAI,IAAM4L,GACdhM,EAAIqM,OAAOjM,EAtEX,GAuEJA,GAvEI,CAyEX,C,CAGMqM,YACP,OAAO9K,KAAKmK,OAAOlO,OA7EP,C,CAgFT8O,UAAUT,GACb,GAAkB,GAAdtK,KAAKkK,MACL,OAEJlK,KAAKkK,MAAQ,EACb,IAAI7L,EAAM2B,KAAKmK,OACXa,EAAM3M,EAAIpC,OACd,IAAK,IAAIwC,EAAI,EAAGA,EAAIuM,EAAKvM,GAvFb,EAuF+B,CACvC,GAAI,GAAKJ,EAAII,EAAI,GAAI,SACrB,IAAIwM,EAAY5M,EAAII,EAAI,GACP,MAAbwM,EACA5M,EAAII,GAAGrB,KAAKiB,EAAII,EAAI,MAAOwM,KAAcX,GAEzCjM,EAAII,GAAGrB,KAAKiB,EAAII,EAAI,MAAO6L,GACb,GAAdjM,EAAII,EAAI,KACRJ,EAAII,EAAI,GAAK,EACbuB,KAAKkK,MAAQ,EAEpB,CAED,GAAkB,GAAdlK,KAAKkK,MAAY,CACjB,IAAIc,EAAM3M,EAAIpC,OACVwC,EAAI,EACR,KAAOA,EAAIuM,GACW,GAAd3M,EAAII,EAAI,GAMRA,GA9GA,GAyGAJ,EAAIqM,OAAOjM,EAzGX,GA0GAuM,GA1GA,EAgHX,CACDhL,KAAKkK,MAAQ,C,QCvGRgB,MA0LT3O,cAzBAyD,KAAOmL,QAAW,EAMlBnL,KAAKoL,MAAW,EAShBpL,KAAMqL,OAAW,EAWbrL,KAAKsL,SAAW,IAAIxD,K,CAtCxB9Q,oBAAoBuU,GAChB,OAAOC,EAAaC,IAAIF,E,CA+C5BxF,MAAMwF,EAAcG,EAAoBrB,GAIpC,OAHArK,KAAKuL,KAAOA,EACZvL,KAAK0L,cAAgBA,EACrB1L,KAAKqK,OAASA,EACPrK,I,CAMX2L,kBACI3L,KAAK4L,UAAW,C,CAMhBC,cACA,OAAO7L,KAAK8L,Q,CAMZC,a,MACA,OAAuB,QAAhBrJ,EAAA1C,KAAKgM,mBAAW,IAAAtJ,OAAA,EAAAA,EAAEqJ,M,CAMzBE,c,MACA,OAAuB,QAAhBvJ,EAAA1C,KAAKgM,mBAAW,IAAAtJ,OAAA,EAAAA,EAAEuJ,O,CAMzBC,e,MACA,OAAuB,QAAhBxJ,EAAA1C,KAAKgM,mBAAW,IAAAtJ,OAAA,EAAAA,EAAEwJ,Q,CAMzBC,c,MACA,OAAuB,QAAhBzJ,EAAA1C,KAAKgM,mBAAW,IAAAtJ,OAAA,EAAAA,EAAEyJ,O,CAGzBC,UACA,OAAuBpM,KAAKgM,YAAaI,G,CAGzCC,cACA,OAAuBrM,KAAKgM,YAAaK,O,CAMzCC,e,MACA,OAAwC,QAAjC5J,EAAgB1C,KAAKgM,mBAAY,IAAAtJ,OAAA,EAAAA,EAAE6J,I,CAO1CC,kBACA,OAAIxM,KAAKgM,YACkBhM,KAAKgM,YAAaS,UAAkBzM,KAAKgM,YAAaQ,YAEtE,C,CAIXE,aACA,OAAO1M,KAAKsL,SAASpM,C,CAIrByN,aACA,OAAO3M,KAAKsL,SAASnM,C,EApRT+L,MAAAtD,MAAyB,IAAIsD,MAGtCA,MAAU0B,WAAG,YAEb1B,MAAQ2B,SAAG,UAEX3B,MAAgB4B,iBAAW,iBAE3B5B,MAAc6B,eAAW,eAEzB7B,MAAK8B,MAAG,QAER9B,MAAW+B,YAAG,aAEd/B,MAAUgC,WAAG,YAEbhC,MAAUiC,WAAG,YAEbjC,MAASkC,UAAG,WAEZlC,MAAWmC,YAAG,aAEdnC,MAASoC,UAAG,YAEZpC,MAAQqC,SAAG,WAEXrC,MAAYsC,aAAG,cAEftC,MAAUuC,WAAG,YAEbvC,MAAcwC,eAAG,eAGjBxC,MAAUyC,WAAG,YAEbzC,MAAS0C,UAAG,WAEZ1C,MAAQ2C,SAAG,UAGX3C,MAAQ4C,SAAG,UAEX5C,MAAS6C,UAAG,WAEZ7C,MAAM8C,OAAG,QAGT9C,MAAM+C,OAAG,SAET/C,MAAOgD,QAAG,UAEVhD,MAAWiD,YAAG,aAEdjD,MAAMkD,OAAG,SAGTlD,MAAKmD,MAAG,QAERnD,MAAOoD,QAAG,UAEVpD,MAAOzR,QAAG,UAEVyR,MAASqD,UAAG,YAGZrD,MAAKsD,MAAG,QAERtD,MAAQuD,SAAG,WAEXvD,MAAMwD,OAAG,SAETxD,MAAKyD,MAAG,QAERzD,MAAQ0D,SAAG,WAEX1D,MAAK2D,MAAG,QAER3D,MAAM4D,OAAG,SAET5D,MAAI6D,KAAG,OAEP7D,MAAO8D,QAAG,UAEV9D,MAAK+D,MAAG,QAGR/D,MAAKgE,MAAG,aAERhE,MAAKiE,MAAG,QAERjE,MAAMkE,OAAG,SAETlE,MAAImE,KAAG,OAEPnE,MAAKoE,MAAG,QAERpE,MAAiBqE,kBAAG,mBAEpBrE,MAAYsE,aAAG,cAEftE,MAAMuE,OAAG,SAETvE,MAAMwE,OAAG,SAETxE,MAAOyE,QAAG,UAEVzE,MAAK0E,MAAG,QAER1E,MAAG2E,IAAG,MAEN3E,MAAI4E,KAAG,OAEP5E,MAAK6E,MAAG,QAER7E,MAAkB8E,mBAAG,mBAErB9E,MAAW+E,YAAG,aAEd/E,MAAiBgF,kBAAG,mBAEpBhF,MAAWiF,YAAG,cAEdjF,MAAUkF,WAAG,aAGblF,MAAamF,cAAG,eAEhBnF,MAAYoF,aAAG,cAEfpF,MAAYqF,aAAG,cAGfrF,MAAesF,gBAAG,iBAElBtF,MAAcuF,eAAG,gBAEjBvF,MAAcwF,eAAG,gBAEjBxF,MAAWyF,YAAG,aA6IzB,MAAMnF,EAAe,IAAIoF,IAAY,CACjC1F,MAAM0B,WAAY1B,MAAM2B,SAAU3B,MAAMgC,WAAYhC,MAAM8B,MAAO9B,MAAMsC,aACvEtC,MAAM+B,YAAa/B,MAAM4B,iBAAkB5B,MAAM6B,eACjD7B,MAAMiC,WAAYjC,MAAMkC,UAAWlC,MAAMmC,cCrSvCwD,EAA0B,G,MAKnBC,gBAICC,uBAAuBxF,G,CAQjCyF,YAAYzF,GACR,IAAI0F,EAAYjR,KAAKkR,SAAWlR,KAAKkR,QAAQ3F,GAC7C,QAAS0F,GAAaA,EAAUnG,MAAQ,C,CAS5CqG,MAAM5F,EAAcrJ,GAChB,IAAI+O,EAAYjR,KAAKkR,SAAWlR,KAAKkR,QAAQ3F,GAC7C,IAAK0F,EAAW,OAAO,EACvB,IAAIG,EAAMH,EAAUnG,MAAQ,EAE5B,GAAIuG,MAAMC,QAAQpP,GACd+O,EAAUlG,UAAU7I,QACnB,QAAaqP,IAATrP,EACL+O,EAAUlG,OAAO7I,QAChB,GAAIA,IAASgJ,MAAMtD,MAAO,CAC3B,IAAI4J,EAAKX,EAAU5U,OAAS,EAAI4U,EAAU5T,MAAQ,IAAIiO,MACtD+F,EAAUlG,OAAOyG,EAAGzL,MAAMwF,EAAMvL,KAAMA,OACtCwR,EAAGnH,OAASmH,EAAG9F,cAAgB,KAC/BmF,EAAUxU,KAAKmV,EAClB,MAEGP,EAAUlG,SAEd,OAAOqG,C,CAaXK,GAAGlG,EAAcpO,EAAauU,EAAqBpH,GACvB,GAApBqH,UAAU1V,SACVyV,EAAWvU,EACXA,EAAS,MAER6C,KAAKkR,UAASlR,KAAKkR,QAAU,IAClC,IAAID,EAAYjR,KAAKkR,QAAQ3F,GAO7B,OANK0F,IACDjR,KAAK+Q,uBAAuBxF,GAC5BvL,KAAKkR,QAAQ3F,GAAQ0F,EAAY,IAAIhH,UAGzCgH,EAAUnO,IAAI4O,EAAUvU,EAAQmN,GACzBtK,I,CAaXyK,KAAKc,EAAcpO,EAAauU,EAAqBpH,GACzB,GAApBqH,UAAU1V,SACVyV,EAAWvU,EACXA,EAAS,MAER6C,KAAKkR,UAASlR,KAAKkR,QAAU,IAClC,IAAID,EAAYjR,KAAKkR,QAAQ3F,GAO7B,OANK0F,IACDjR,KAAK+Q,uBAAuBxF,GAC5BvL,KAAKkR,QAAQ3F,GAAQ0F,EAAY,IAAIhH,UAGzCgH,EAAUxG,KAAKiH,EAAUvU,EAAQmN,GAC1BtK,I,CAYX4R,IAAIrG,EAAcpO,EAAauU,GACH,GAApBC,UAAU1V,SACVyV,EAAWvU,EACXA,EAAS,MAEb,IAAI8T,EAAYjR,KAAKkR,SAAWlR,KAAKkR,QAAQ3F,GAI7C,OAHI0F,GACAA,EAAUhO,OAAOyO,EAAUvU,GAExB6C,I,CAQX6R,OAAOtG,GACH,GAAY,MAARA,EACAvL,KAAKkR,QAAU,SACd,CACD,IAAID,EAAYjR,KAAKkR,SAAWlR,KAAKkR,QAAQ3F,GACzC0F,GACAA,EAAUtG,OACjB,CACD,OAAO3K,I,CAOXkD,aAAa/F,GACT,GAAIA,GAAU6C,KAAKkR,QACf,IAAK,IAAI3F,KAAQvL,KAAKkR,QAClBlR,KAAKkR,QAAQ3F,GAAMV,eAAe1N,GAE1C,OAAO6C,I,ECnJf,ICAY8R,ECHAC,EFGRC,EAAqB,EACrBC,EAA4B,EAC5BC,EAAsB,EAKpB,MAAOC,iBAAiBrB,gBA2J1BvU,YAAsB6V,GAClBC,QAxEIrS,KAAUsS,WAAW,EACrBtS,KAAUuS,WAAW,EAC7BvS,KAAGK,IAAW,EAEJL,KAAewS,gBAAW,EAsEhCxS,KAAKK,MAAQ2R,EACbhS,KAAKyS,YAAa,EAClBzS,KAAKwS,gBAAkB,GACR,MAAXJ,GAAmBA,KACnBD,SAASO,gBAAgB1S,KAAKY,IAAMZ,MACxCA,KAAK2S,MAAO,EACZ3S,KAAK4S,sBAAuB,C,CAvJrBC,uBACP,OAAOV,SAASG,U,CAMTQ,uBACP,OAAOX,SAASI,U,CAMpBvb,qBAAqB+b,GACjBZ,SAASG,YAAcS,C,CAM3B/b,qBAAqB+b,GACjBZ,SAASI,YAAcQ,C,CAM3B/b,kBAAkBgc,EAAiBC,GAC/Bd,SAASG,YAAcU,EACvBb,SAASI,YAAcU,C,CAM3Bjc,gCACIib,EAAoB,EACpBC,EAAc,EAETrX,MAAMK,OAAOgY,QAGdrY,MAAMM,MAAMgY,UAAU,EAAGhB,SAAUA,SAASiB,yBAF5CjB,SAASiB,yBAAwB,E,CAMjCpc,+BAA+Bqc,GACnC,IAAKA,GAASxY,MAAMK,OAAOgY,QACvB,OAEJrY,MAAMM,MAAMwP,MAAMwH,SAAUA,SAASiB,yBACrC,IAAIE,EAAa,EAEjB,IAAK,IAAI3T,KAAKwS,SAASO,gBAAiB,CACpC,IAAIa,EAAgBpB,SAASO,gBAAgB/S,GACxC4T,EAAIZ,MAAgC,IAAxBY,EAAIf,kBACjBe,EAAIpQ,UACJmQ,IAEP,CAEGnB,SAASqB,OAASF,EAAa,GAC/Bhc,QAAQmc,MAAM,0BAA0BH,MAExCA,EAAa,GAAKpB,EAAc,IAChCA,IACArX,MAAMM,MAAMgY,UAAU,EAAGhB,SAAUA,SAASiB,yB,CA0BhDxS,SACA,OAAOZ,KAAKK,G,CAMZwS,gBACA,OAAO7S,KAAKsS,U,CAMZQ,gBACA,OAAO9S,KAAKuS,U,CAMZrR,gBACA,OAAOlB,KAAKyS,U,CAQZiB,eACA,OAAO1T,KAAK2T,S,CAGZD,aAASzV,GACT+B,KAAK2T,UAAY1V,C,CAMjB2V,qBACA,OAAO5T,KAAKwS,e,CAmBhBqB,cAAc5V,GACV,IAAI6V,EAAsB7V,EAAQ+B,KAAKsS,WACvCtS,KAAKsS,WAAarU,EAClBkU,SAAS4B,cAAcD,E,CAG3BE,cAAc/V,GACV,IAAI6V,EAAsB7V,EAAQ+B,KAAKuS,WACvCvS,KAAKuS,WAAatU,EAClBkU,SAAS8B,cAAcH,E,CAG3BI,cAAcC,EAAaC,GACvBpU,KAAKmU,IAAMA,EACXnU,KAAKoU,KAAOA,C,CAMhBC,gBAAgBF,GACZ,OAAOnU,KAAKoU,MAAQD,EAAIlY,SAAW+D,KAAKoU,KAAKnY,OAAS,GAAKkY,EAAIG,SAAStU,KAAKoU,OACtEpU,KAAKmU,MAAQA,C,CAGxBI,cAAczJ,EAAgB,GAC1B9K,KAAKwS,iBAAmB1H,C,CAG5B0J,iBAAiB1J,EAAgB,GAC7B9K,KAAKwS,iBAAmB1H,EAEpBmH,EAAoB,GAAKjS,KAAKwS,iBAAmB,IAAMxS,KAAK2S,MAAQ3S,KAAK4S,sBACzE5S,KAAKmD,S,CAObsR,kBACIzU,KAAKwS,gBAAkB,C,CAGjBkC,mB,CAGAC,mB,CAGAC,kB,CAOVzR,UACQnD,KAAKyS,aAGTzS,KAAKyS,YAAa,EAClBzS,KAAK2S,MAAO,EACZV,IACAjS,KAAK2U,mBACL1C,IACAjS,KAAK6R,gBACEM,SAASO,gBAAgB1S,KAAKY,IACjCZ,KAAKmU,MACDhC,SAASqB,OACTlc,QAAQmc,MAAM,WAAWoB,OAAOC,eAAe9U,MAAMzD,YAAYwY,QAAQ/U,KAAKmU,OAClFtZ,MAAMK,OAAO8Z,SAAShV,KAAKmU,IAAKnU,O,EA5OjCmS,SAAeO,gBAAQ,GAEfP,SAAUG,WAAW,EAErBH,SAAUI,WAAW,EAE7BJ,SAAKqB,OAAY,EGHtB,MAAOyB,oBAAoB9C,SAwK7B5V,YAAY8L,EAAeC,EAAgB4M,GACvC7C,QAdJrS,KAAWmV,aAAY,EAenBnV,KAAKoV,OAAS/M,EACdrI,KAAKqV,QAAU/M,EACftI,KAAKsV,QAAUJ,EACflV,KAAK4S,qBAAuBnb,OAAOmB,kCACnCoH,KAAKuV,gBAAkBxL,kBAAgByL,I,CA/JvCnN,YACA,OAAOrI,KAAKoV,M,CAGZ/M,UAAMA,GACNrI,KAAKoV,OAAS/M,C,CAMdC,aACA,OAAOtI,KAAKqV,O,CAGZ/M,WAAOA,GACPtI,KAAKqV,QAAU/M,C,CAQRmN,gBACP,OAAOzV,KAAK0V,U,CAOLR,aACP,OAAOlV,KAAKsV,O,CAMLK,aACP,OAAO3V,KAAK4V,SAASD,M,CAGdE,kBACP,OAAO7V,KAAK4V,SAASC,W,CAMdC,iBACP,OAAO9V,KAAK4V,SAASE,U,CAEdA,eAAW7X,GAClB+B,KAAK4V,SAASE,WAAa7X,C,CAMpB8X,iBACP,OAAO/V,KAAK4V,SAASG,U,CAEdA,eAAW9X,GAClB+B,KAAK4V,SAASG,WAAa9X,C,CAMpB+X,gBACP,OAAOhW,KAAK4V,SAASK,K,CAEdD,cAAU/X,GACjB+B,KAAK4V,SAASK,MAAQhY,C,CAMfiY,gBACP,OAAOlW,KAAK4V,SAASO,K,CAEdD,cAAUjY,GACjB+B,KAAK4V,SAASO,MAAQlY,C,CAMfmY,gBACP,OAAOpW,KAAK4V,SAASS,K,CAEdD,cAAUnY,GACjB+B,KAAK4V,SAASS,MAAQpY,C,CAMfqY,kBACP,OAAOtW,KAAK4V,SAASU,W,CAGdA,gBAAYrY,GACnB+B,KAAK4V,SAASU,YAAcxM,OAAOyM,eAAeC,sBAAsBxW,KAAK4V,SAAU3X,E,CAQhFwY,sBACP,OAAOzW,KAAK4V,SAASa,e,CAMdC,oBAAgBzY,GACvB+B,KAAK4V,SAASc,gBAAkBzY,C,CAGzByY,sBACP,OAAO1W,KAAK4V,SAASc,e,CAMdC,mBAAe1Y,GACtB+B,KAAK4V,SAASe,eAAiB1Y,C,CAGxB0Y,qBACP,OAAO3W,KAAK4V,SAASe,c,CAMdC,iBAEP,OAAO5W,KAAK4V,SAASiB,aAAe7W,KAAK4V,SAASa,gBAAkB,C,CAsBxEK,oBAEI,OADa9W,KAAKsV,SAEd,KAAKtL,gBAAc+M,OACnB,KAAK/M,gBAAcgN,SACnB,KAAKhN,gBAAciN,UACnB,KAAKjN,gBAAckN,aACnB,KAAKlN,gBAAcmN,UACnB,KAAKnN,gBAAcoN,aACnB,KAAKpN,gBAAcqN,OACnB,KAAKrN,gBAAcsN,OACf,OAAO,EACX,KAAKtN,gBAAcuN,KACnB,KAAKvN,gBAAcwN,KACnB,KAAKxN,gBAAcyN,KACnB,KAAKzN,gBAAc0N,QACnB,KAAK1N,gBAAc2N,QACnB,KAAK3N,gBAAc4N,SACnB,KAAK5N,gBAAc6N,gBACnB,KAAK7N,gBAAc8N,SACnB,KAAK9N,gBAAc+N,eACnB,KAAK/N,gBAAcgO,gBACnB,KAAKhO,gBAAciO,eACnB,KAAKjO,gBAAckO,gBACnB,KAAKlO,gBAAcmO,QACnB,KAAKnO,gBAAcoO,YACnB,KAAKpO,gBAAcqO,QACnB,KAAKrO,gBAAcsO,YACnB,KAAKtO,gBAAcuO,QACnB,KAAKvO,gBAAcwO,YACnB,KAAKxO,gBAAcyO,UACnB,KAAKzO,gBAAc0O,cACnB,KAAK1O,gBAAc2O,UACnB,KAAK3O,gBAAc4O,cACf,OAAO,EACX,QACI,OAAO,E,CAQnBC,sBACI,OAAQ7Y,KAAKsV,SACT,KAAKtL,gBAAc+M,OACf,OAAO,EACX,KAAK/M,gBAAcgN,SACf,OAAO,EACX,KAAKhN,gBAAcqN,OAEnB,KAAKrN,gBAAcsN,OACf,OAAO,EACX,KAAKtN,gBAAckN,aACf,OAAO,EACX,KAAKlN,gBAAcoN,aACf,OAAO,EAEX,QACI,KAAM,6B,CAQlB0B,aACI,OAAO9Y,KAAK4V,SAASmD,Q,CAMrBC,qBACA,KAAM,U,CAGArE,mBACN3U,KAAK4V,SAASqD,S,QC9QTC,KAiDT3c,YAAY2F,EAAY,MAhCdlC,KAAImZ,MAAY,EAElBnZ,KAAWoZ,YAAW,EAMpBpZ,KAAKqZ,MAAW,EAEhBrZ,KAAOsZ,QAAW,EAuBpBpX,GACAlC,KAAKuZ,MAAQ,IAAIC,WAAWtX,GAC5BlC,KAAKyZ,IAAM,IAAIC,SAAS1Z,KAAKuZ,MAAMI,QACnC3Z,KAAKsZ,QAAUtZ,KAAKyZ,IAAIG,YAExB5Z,KAAK6Z,cAAc7Z,KAAKoZ,Y,CAnBhCpiB,yBACI,IAAKkiB,KAAKY,WAAY,CAClB,IAAIH,EAAc,IAAII,YAAY,GAClC,IAAIL,SAASC,GAAQK,SAAS,EAAG,KAAK,GACtCd,KAAKY,WAA6C,MAAhC,IAAKG,WAAWN,GAAS,GAAaT,KAAKgB,cAAgBhB,KAAKiB,UACrF,CACD,OAAOjB,KAAKY,U,CAoBZH,aACA,IAAIS,EAAyBpa,KAAKyZ,IAAIE,OACtC,OAAIS,EAAUR,aAAe5Z,KAAKsZ,QAAgBc,EAC3CA,EAAUC,MAAM,EAAGra,KAAKsZ,Q,CAS/BgB,aACA,OAAOta,KAAKmZ,KAAOD,KAAKgB,cAAgBhB,KAAKiB,U,CAG7CG,WAAOrc,GACP+B,KAAKmZ,KAAQlb,IAAUib,KAAKgB,a,CAQ5Bje,WAAOgC,GACH+B,KAAKoZ,YAAcnb,EAAO+B,KAAK6Z,cAAc7Z,KAAKoZ,YAAc7b,KAAKgd,MAAMhd,KAAKuL,IAAI7K,EAA0B,EAAnB+B,KAAKoZ,eAC3FpZ,KAAKoZ,YAAcnb,GAAO+B,KAAK6Z,cAAc7Z,KAAKoZ,YAAcnb,GACzE+B,KAAKsZ,QAAUrb,C,CAGfhC,aACA,OAAO+D,KAAKsZ,O,CAIRO,cAAcrb,GAClB,IACI,IAAIgc,EAAmB,IAAIhB,WAAWhb,GACpB,MAAdwB,KAAKuZ,QACDvZ,KAAKuZ,MAAMtd,QAAUuC,EAAKgc,EAAYC,IAAIza,KAAKuZ,OAC9CiB,EAAYC,IAAIza,KAAKuZ,MAAMmB,SAAS,EAAGlc,KAEhDwB,KAAKuZ,MAAQiB,EACbxa,KAAKyZ,IAAM,IAAIC,SAASc,EAAYb,OACvC,CAAC,MAAOgB,GACL,KAAM,8BAAgCnc,CACzC,C,CASLoc,YACI,OAAO5a,KAAK6a,Y,CAQhBA,aACI,OAAO7a,KAAK8a,MAAM9a,KAAK+a,Y,CAW3BC,gBAAgBC,EAAezc,GAC3B,OAAOwB,KAAKkb,iBAAiBD,EAAOzc,E,CASxC0c,iBAAiBD,EAAezc,GAC5B,IAAI2c,EAAcF,EAAQzc,EAC1B2c,EAAOA,EAAMnb,KAAKsZ,QAAWtZ,KAAKsZ,QAAU6B,EAC5C,IAAIC,EAAS,IAAIC,aAAarb,KAAKyZ,IAAIE,OAAOU,MAAMY,EAAOE,IAE3D,OADAnb,KAAKqZ,MAAQ8B,EACNC,C,CAUXE,cAAcL,EAAezc,GACzB,OAAOwB,KAAKub,eAAeN,EAAOzc,E,CAStC+c,eAAeN,EAAezc,GAC1B,IAAI2c,EAAcF,EAAQzc,EAC1B2c,EAAOA,EAAMnb,KAAKsZ,QAAWtZ,KAAKsZ,QAAU6B,EAC5C,IAAIC,EAAS,IAAI5B,WAAWxZ,KAAKyZ,IAAIE,OAAOU,MAAMY,EAAOE,IAEzD,OADAnb,KAAKqZ,MAAQ8B,EACNC,C,CAWXI,cAAcP,EAAezc,GACzB,OAAOwB,KAAKyb,eAAeR,EAAOzc,E,CAStCid,eAAeR,EAAezc,GAC1B,IAAI2c,EAAcF,EAAQzc,EAC1B2c,EAAOA,EAAMnb,KAAKsZ,QAAWtZ,KAAKsZ,QAAU6B,EAC5C,IAAIC,EAAS,IAAInB,WAAWja,KAAKyZ,IAAIE,OAAOU,MAAMY,EAAOE,IAEzD,OADAnb,KAAKqZ,MAAQ8B,EACNC,C,CAQXM,aACI,OAAO1b,KAAK2b,a,CAOhBA,cACI,GAAI3b,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,mCACzC,IAAI8B,EAAYpb,KAAKyZ,IAAIiC,WAAW1b,KAAKqZ,MAAOrZ,KAAKmZ,MAErD,OADAnZ,KAAKqZ,OAAS,EACP+B,C,CAQXQ,aACI,OAAO5b,KAAK6b,a,CAOhBA,cACI,GAAI7b,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,mCACzC,IAAI8B,EAAYpb,KAAKyZ,IAAImC,WAAW5b,KAAKqZ,MAAOrZ,KAAKmZ,MAErD,OADAnZ,KAAKqZ,OAAS,EACP+B,C,CAOXU,aAAa7d,GACT+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIuC,WAAWhc,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC5CnZ,KAAKqZ,OAAS,C,CAOlB4C,aAAahe,GACT+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIyC,WAAWlc,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC5CnZ,KAAKqZ,OAAS,C,CAQlB8C,WACI,OAAOnc,KAAKoc,W,CAOhBA,YACI,GAAIpc,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,iCACzC,IAAI+C,EAAgBrc,KAAKyZ,IAAI0C,SAASnc,KAAKqZ,MAAOrZ,KAAKmZ,MAEvD,OADAnZ,KAAKqZ,OAAS,EACPgD,C,CAQXC,YACI,OAAOtc,KAAKuc,Y,CAOhBA,aACI,GAAIvc,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,kCACzC,IAAI8B,EAAYpb,KAAKyZ,IAAI6C,UAAUtc,KAAKqZ,MAAOrZ,KAAKmZ,MAEpD,OADAnZ,KAAKqZ,OAAS,EACP+B,C,CAOXoB,WAAWve,GACP+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIgD,SAASzc,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC1CnZ,KAAKqZ,OAAS,C,CAOlBqD,YAAYze,GACR+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIkD,UAAU3c,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC3CnZ,KAAKqZ,OAAS,C,CAQlBuD,WACI,OAAO5c,KAAK6c,W,CAOhBA,YACI,GAAI7c,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,iCACzC,IAAIwD,EAAa9c,KAAKyZ,IAAImD,SAAS5c,KAAKqZ,MAAOrZ,KAAKmZ,MAEpD,OADAnZ,KAAKqZ,OAAS,EACPyD,C,CAQX/B,YACI,OAAO/a,KAAK+c,Y,CAOhBA,aACI,GAAI/c,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,kCACzC,IAAIwD,EAAa9c,KAAKyZ,IAAIsB,UAAU/a,KAAKqZ,MAAOrZ,KAAKmZ,MAErD,OADAnZ,KAAKqZ,OAAS,EACPyD,C,CAOXE,YAAY/e,GACR+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIwD,UAAUjd,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC3CnZ,KAAKqZ,OAAS,C,CAOlB6D,WAAWjf,GACP+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIO,SAASha,KAAKqZ,MAAOpb,EAAO+B,KAAKmZ,MAC1CnZ,KAAKqZ,OAAS,C,CAQlB8D,WACI,OAAOnd,KAAKod,W,CAOhBA,YACI,GAAIpd,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,iCACzC,OAAOtZ,KAAKuZ,MAAMvZ,KAAKqZ,Q,CAO3BgE,WAAWpf,GACP+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAI6D,SAAStd,KAAKqZ,MAAOpb,GAC9B+B,KAAKqZ,O,CAUTkE,UAAUC,GACN,OAAOxd,KAAKyd,WAAWD,E,CAU3BC,WAAWD,GACP,OAAOxd,KAAKyZ,IAAI0D,SAASK,E,CAU7BE,WAAWF,GACP,OAAOxd,KAAK2d,YAAYH,E,CAU5BG,YAAYH,GACR,OAAOxd,KAAKyZ,IAAIsB,UAAUyC,EAAKxd,KAAKmZ,K,CASxCyE,aACI,OAAO5d,KAAK6d,a,CAShBA,cAEI,OADkB,IAAIla,OAAO3D,KAAK0b,aAAc1b,KAAK0b,aAAc1b,KAAK0b,aAAc1b,KAAK0b,aAAc1b,KAAK0b,aAAc1b,KAAK0b,a,CAU7HZ,MAAMtc,GACN,IAAgDsF,EAAW6B,EAA3CmD,EAAc9I,KAAKqZ,MAAQ7a,EAAwCsf,EAAcC,OAAOC,aACxGC,EAASje,KAAKuZ,MACd2E,EAAc,GACd1Y,EAAY,EAEhB,IADA0Y,EAAKjiB,OAAS,IACP+D,KAAKqZ,MAAQvQ,GAEhB,IADAhF,EAAIma,EAAEje,KAAKqZ,UACH,IACK,GAALvV,IAEAoa,EAAK1Y,KAAOsY,EAAEha,SACf,GAAIA,EAAI,IAEXoa,EAAK1Y,KAAOsY,GAAQ,GAAJha,IAAa,EAAwB,IAAlBma,EAAEje,KAAKqZ,eACvC,GAAIvV,EAAI,IACX6B,EAAKsY,EAAEje,KAAKqZ,SAEZ6E,EAAK1Y,KAAOsY,GAAQ,GAAJha,IAAa,IAAa,IAAL6B,IAAc,EAAwB,IAAlBsY,EAAEje,KAAKqZ,cAC7D,CAIH,MAAM8E,GAAc,GAAJra,IAAa,IAAa,KAH1C6B,EAAKsY,EAAEje,KAAKqZ,YAGuC,IAAa,IAF3D4E,EAAEje,KAAKqZ,WAE6D,EAAwB,IAAlB4E,EAAEje,KAAKqZ,SACtF,GAAI8E,GAAS,MAAS,CAClB,MAAMC,EAAUD,EAAQ,MAClBE,EAAQ,MAAUD,GAAW,GAC7BE,EAAS,MAAoB,KAAVF,EACzBF,EAAK1Y,KAAOsY,EAAEO,GACdH,EAAK1Y,KAAOsY,EAAEQ,EACjB,MAEGJ,EAAK1Y,KAAOsY,EAAEK,EAErB,CAIL,OADAD,EAAKjiB,OAASuJ,EACP0Y,EAAKK,KAAK,G,CAWrBC,gBAAgBhgB,GACZ,OAAOwB,KAAKye,iBAAiBjgB,E,CAUjCigB,iBAAiBjgB,GAGb,IAFA,IAAsCsF,EAAlCsX,EAAY,GAAIsD,EAAe,EAA0BZ,EAAcC,OAAOC,aAC9EC,EAASje,KAAKuZ,MACX/a,EAAM,GAET,IADAsF,EAAIma,EAAEje,KAAKqZ,QACH,IACJ+B,GAAK0C,EAAEha,GACP9D,KAAKqZ,QACL7a,SAKA,IAHAkgB,EAAO5a,EAAI,IACX9D,KAAKqZ,QACL7a,GAAOkgB,EACAA,EAAO,GACV5a,EAAIma,EAAEje,KAAKqZ,SAEX+B,GAAK0C,EADAG,EAAEje,KAAKqZ,UACE,EAAKvV,GACnB4a,IAKZ,OAAOtD,C,CAMPoC,UACA,OAAOxd,KAAKqZ,K,CAGZmE,QAAIvf,GACJ+B,KAAKqZ,MAAQpb,C,CAQb0gB,qBACA,OAAO3e,KAAKsZ,QAAUtZ,KAAKqZ,K,CAM/B1O,QACI3K,KAAKqZ,MAAQ,EACbrZ,KAAK/D,OAAS,C,CAQlB2iB,cAEI,OAAO5e,KAAKyZ,IAAIE,M,CAQpBkF,cAAc5gB,GAGV,IAAK,IAAIQ,EAAY,EAAGqgB,GADxB7gB,GAAgB,IAC2BhC,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CAC5D,IAAIqF,EAAY7F,EAAM8gB,WAAWtgB,GAEjC,GAAIqF,GAAK,IACL9D,KAAKgf,UAAUlb,QACZ,GAAIA,GAAK,KAEZ9D,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKuZ,MAAMkB,IAAI,CAAC,IAAQ3W,GAAK,EAAI,IAAY,GAAJA,GAAY9D,KAAKqZ,OAC1DrZ,KAAKqZ,OAAS,OACX,GAAIvV,GAAK,OAAUA,GAAK,MAAQ,CACnCrF,IACA,MAAMkH,EAAK1H,EAAM8gB,WAAWtgB,GAC5B,IAAKwgB,OAAOnhB,MAAM6H,IAAOA,GAAM,OAAUA,GAAM,MAAQ,CACnD,MAAMuZ,EAAoB,IAAT,KAAJpb,GACPqb,EAAW,KAALxZ,EAENyZ,EAAM,IAASF,GAAO,EAAK,GAC3BG,EAAM,IAASH,GAAO,EAAK,GAC3BI,EAAM,KAAe,EAANJ,IAAc,EAAOC,GAAO,EAAK,GAChDI,EAAM,IAAc,GAANJ,EAEpBnf,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKuZ,MAAMkB,IAAI,CAAC2E,EAAKC,EAAKC,EAAKC,GAAMvf,KAAKqZ,OAC1CrZ,KAAKqZ,OAAS,CACjB,CACJ,MAAUvV,GAAK,OACZ9D,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKuZ,MAAMkB,IAAI,CAAC,IAAQ3W,GAAK,GAAK,IAASA,GAAK,EAAK,GAAO,IAAY,GAAJA,GAAY9D,KAAKqZ,OACrFrZ,KAAKqZ,OAAS,IAEdrZ,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKuZ,MAAMkB,IAAI,CAAC,IAAQ3W,GAAK,GAAK,IAASA,GAAK,GAAM,GAAO,IAASA,GAAK,EAAK,GAAO,IAAY,GAAJA,GAAY9D,KAAKqZ,OAChHrZ,KAAKqZ,OAAS,EAErB,C,CAQLmG,eAAevhB,GACX,IAAIwhB,EAAezf,KAAKwd,IACxBxd,KAAKgd,YAAY,GACjBhd,KAAK6e,cAAc5gB,GACnB,IAAIyhB,EAAe1f,KAAKwd,IAAMiC,EAAO,EAErCzf,KAAKyZ,IAAIwD,UAAUwC,EAAMC,EAAM1f,KAAKmZ,K,CAOxCwG,iBAAiB1hB,GACb,IAAIwhB,EAAOzf,KAAKwd,IAChBxd,KAAK0c,YAAY,GACjB1c,KAAK6e,cAAc5gB,GACnB,IAAIyhB,EAAO1f,KAAKwd,IAAMiC,EAAO,EAE7Bzf,KAAKyZ,IAAIkD,UAAU8C,EAAMC,EAAM1f,KAAKmZ,K,CASxCyG,gBAII,OAAO5f,KAAK6f,aAAa7f,KAAK+a,Y,CAMlC+E,kBACI,OAAO9f,KAAK6f,aAAa7f,KAAKsc,Y,CAQlCyD,eACI,OAAO/f,KAAK4f,e,CAShBC,aAAarhB,GAAc,GACvB,GAAY,IAARA,EAAW,MAAO,GACtB,IAAIwhB,EAAoBhgB,KAAK2e,eAC7B,GAAIngB,EAAMwhB,EAAW,KAAM,qCAE3B,OADAxhB,EAAMA,EAAM,EAAIA,EAAMwhB,EACfhgB,KAAK8a,MAAMtc,E,CAStByhB,YAAYzhB,GAAc,GACtB,OAAOwB,KAAK6f,aAAarhB,E,CAQ7BwgB,UAAU/gB,GACN+B,KAAK+b,aAAa/b,KAAKqZ,MAAQ,GAC/BrZ,KAAKyZ,IAAIyG,QAAQlgB,KAAKqZ,MAAOpb,GAC7B+B,KAAKqZ,OAAS,C,CAQlB8G,WACI,GAAIngB,KAAKqZ,MAAQ,EAAIrZ,KAAKsZ,QAAS,KAAM,iCACzC,OAAOtZ,KAAKyZ,IAAI2G,QAAQpgB,KAAKqZ,Q,CAOjCgH,UACI,OAAOrgB,KAAKmgB,U,CAQhBpE,aAAauE,GACLtgB,KAAKsZ,QAAUgH,IAAgBtgB,KAAKsZ,QAAUgH,GAC9CtgB,KAAKoZ,YAAckH,IAAgBtgB,KAAK/D,OAASqkB,E,CAWzDC,iBAAiBC,EAAkBC,EAAiB,EAAGxkB,EAAiB,GACpE,GAAIwkB,EAAS,GAAKxkB,EAAS,EAAG,KAAM,yCACtB,GAAVA,IAAaA,EAASukB,EAAY5G,WAAa6G,GACnDzgB,KAAK+b,aAAa/b,KAAKqZ,MAAQpd,GAC/B,IAAIykB,EAAkB,IAAIlH,WAAWgH,GACrCxgB,KAAKuZ,MAAMkB,IAAIiG,EAAWhG,SAAS+F,EAAQA,EAASxkB,GAAS+D,KAAKqZ,OAClErZ,KAAKqZ,OAASpd,C,CAQlB0kB,gBAAgB1kB,GACZ,IAAIc,EAGJ,OAFAA,EAAMiD,KAAKuZ,MAAMI,OAAOU,MAAMra,KAAKqZ,MAAOrZ,KAAKqZ,MAAQpd,GACvD+D,KAAKqZ,MAAQrZ,KAAKqZ,MAAQpd,EACnBc,C,EA1xBJmc,KAAUiB,WAAW,YAMrBjB,KAAagB,cAAW,eAEhBhB,KAAUY,WAAW,K,MClB3B8G,eAuBT5pB,kBACI,IAAK,IAAIyH,EAAY,EAAGA,EAAI,MAAOA,EAAG,CAClC,IAAIoiB,EAAYpiB,EAAI,IAEhBoiB,GAAK,IACLD,eAAeE,WAAe,EAAJriB,GAAa,EACvCmiB,eAAeE,WAAe,IAAJriB,GAAa,MACvCmiB,eAAeG,YAAgB,EAAJtiB,GAAa,GACxCmiB,eAAeG,YAAgB,IAAJtiB,GAAa,IAGjCoiB,GAAK,IACZD,eAAeE,WAAe,EAAJriB,GAAa,OAAYoiB,EAAI,GACvDD,eAAeE,WAAe,IAAJriB,GAAc,OAAYoiB,EAAI,GAAO,MAC/DD,eAAeG,YAAgB,EAAJtiB,IAAcoiB,EAAI,EAC7CD,eAAeG,YAAgB,IAAJtiB,IAAcoiB,EAAI,GAGtCA,GAAK,IACZD,eAAeE,WAAe,EAAJriB,GAAcoiB,EAAI,IAAO,GACnDD,eAAeE,WAAe,IAAJriB,GAAeoiB,EAAI,IAAO,GAAM,MAC1DD,eAAeG,YAAgB,EAAJtiB,GAAa,GACxCmiB,eAAeG,YAAgB,IAAJtiB,GAAa,IAGjCoiB,EAAI,KACXD,eAAeE,WAAe,EAAJriB,GAAa,MACvCmiB,eAAeE,WAAe,IAAJriB,GAAa,MACvCmiB,eAAeG,YAAgB,EAAJtiB,GAAa,GACxCmiB,eAAeG,YAAgB,IAAJtiB,GAAa,KAIxCmiB,eAAeE,WAAe,EAAJriB,GAAa,MACvCmiB,eAAeE,WAAe,IAAJriB,GAAa,MACvCmiB,eAAeG,YAAgB,EAAJtiB,GAAa,GACxCmiB,eAAeG,YAAgB,IAAJtiB,GAAa,GAE/C,CAGD,IADAmiB,eAAeI,eAAe,GAAK,EAC9BviB,EAAI,EAAGA,EAAI,OAAQA,EAAG,CACvB,IAAIwiB,EAAYxiB,GAAK,GAIrB,IAHAoiB,EAAI,EAGwB,IAAhB,QAAJI,IACJJ,GAAK,QACLI,IAAM,EAGVA,IAAK,QACLJ,GAAK,UAELD,eAAeI,eAAeviB,GAAKwiB,EAAIJ,CAC1C,CACD,IAAKpiB,EAAI,KAAMA,EAAI,OAAQA,EACvBmiB,eAAeI,eAAeviB,GAAK,WAAeA,EAAI,MAAS,IAInE,IADAmiB,eAAeM,eAAe,GAAK,EAC9BziB,EAAI,EAAGA,EAAI,KAAMA,EAClBmiB,eAAeM,eAAeziB,GAAKA,GAAK,GAI5C,IAFAmiB,eAAeM,eAAe,IAAM,WACpCN,eAAeM,eAAe,IAAM,WAC/BziB,EAAI,GAAIA,EAAI,KAAMA,EACnBmiB,eAAeM,eAAeziB,GAAK,YAAeA,EAAI,IAAO,IAKjE,IAHAmiB,eAAeM,eAAe,IAAM,WAEpCN,eAAeO,aAAa,GAAK,EAC5B1iB,EAAI,EAAGA,EAAI,KAAMA,EAEdmiB,eAAeO,aAAa1iB,GADtB,KAANA,EACiC,EAEA,I,CAS7CzH,0BAA0BoqB,GACtBR,eAAeS,WAAW,GAAKD,EAC/B,IAAItD,EAAY8C,eAAeU,YAAY,GACvCT,EAAa/C,GAAK,GAAM,IAC5B,OAAO8C,eAAeE,WAAWD,KAAW,QAAJ/C,IAAmB8C,eAAeG,YAAYF,G,CAO1F7pB,uBAAuBuqB,GACnB,IAAIN,EAAYM,GAAe,GAE/B,OADAX,eAAeU,YAAY,GAAKV,eAAeI,eAAeJ,eAAeO,aAAaF,IAAoB,KAAdM,IAAwBX,eAAeM,eAAeD,GAC/IL,eAAeS,WAAW,E,EAxHtBT,eAAAY,QAAuB,IAAIzH,YAAY,GAEvC6G,eAAUS,WAAiB,IAAIhG,aAAauF,eAAeY,SAE3DZ,eAAWU,YAAgB,IAAIG,YAAYb,eAAeY,SAG1DZ,eAAAE,WAA0B,IAAIW,YAAY,KAE1Cb,eAAAG,YAA2B,IAAIU,YAAY,KAG3Cb,eAAAI,eAA8B,IAAIS,YAAY,MAE9Cb,eAAAM,eAA8B,IAAIO,YAAY,IAE9Cb,eAAAO,aAA4B,IAAIM,YAAY,IJlBnD3P,mDAOX,KALGA,EAAA,iBAEAA,IAAA,uBAEAA,IAAA,yBCTQC,4DAyBX,KAxBGA,EAAA,+CACAA,IAAA,2DACAA,IAAA,2DACAA,IAAA,6CACAA,IAAA,uEACAA,IAAA,uEACAA,IAAA,yDACAA,IAAA,iEACAA,IAAA,2BACAA,IAAA,+CACAA,IAAA,0CACAA,IAAA,kDACAA,IAAA,4DACAA,IAAA,oDACAA,IAAA,kDACAA,IAAA,gDACAA,IAAA,kDACAA,IAAA,gCACAA,IAAA,gBACAA,IAAA,8CACAA,IAAA,4CACAA,IAAA,0BACAA,IAAA,gEACAA,IAAA,wEIpBJ,MAAM2P,EAAsB,UACtBC,EAAc,UACdC,EAAsB,UAKtBC,EAAiB,O,MA8BVC,eAaTvlB,YAAY8L,EAAeC,EAAgBuN,EAAqBkM,EAAiBC,EAAaC,EAAoBC,EAAoBhN,EAAuBiN,EAAqBC,GAC9KpiB,KAAKqI,MAAQA,EACbrI,KAAKsI,OAASA,EACdtI,KAAK6V,YAAcA,EACnB7V,KAAK+hB,OAASA,EACd/hB,KAAKiiB,WAAaA,EAClBjiB,KAAKkiB,WAAaA,EAClBliB,KAAKkV,OAASA,EACdlV,KAAKjB,OAASqjB,EACdpiB,KAAKgiB,IAAMA,EACXhiB,KAAKmiB,WAAaA,C,CAGtBnrB,yBAAyB+H,GACrB,IAAIsjB,EAAS,IAAIC,WAAWvjB,EAAQ,EAtDV,IAwDtBsJ,EAAQga,EAlDa,GAmDrB/Z,EAAS+Z,EApDa,GAsDtBxM,EAAc,EA7DO,OA8DrBwM,EAxDqB,KAyDrBxM,EAActY,KAAKuL,IAAI,EAAGuZ,EAtDC,KAyD/B,IAAIE,EAASF,EAvDgB,IA4DzBG,EA3EgB,MA2EJH,EA7DY,KA+DxBI,EA5EK,QA4EIJ,EA/De,KAgExBK,GAAeL,EAhES,IAgEqBR,KAAoBA,EACjEE,EA7Ea,UA6EHM,EA9Dc,KA+DxBM,EAAgBJ,IAAWb,GAAea,IAAWZ,GAAeY,IAAWX,EAE/EgB,EAAgB5Y,gBAAcuN,KAC9B2K,EAAaG,EA1EO,GA0EmB,EACvCJ,EAAa,EAEjB,OAAQM,GACJ,KAAKb,EACDkB,EAAgB5Y,gBAAcuN,KAC9B0K,EAAa,EACb,MACJ,KAAKN,EACDiB,EAAgB5Y,gBAAcwN,KAC9ByK,EAAa,GACb,MACJ,KAAKL,EACDgB,EAAgB5Y,gBAAcyN,KAC9BwK,EAAa,GACb,MACJ,KAjFwB,IAkFpBW,EAAgB5Y,gBAAckN,aAC9B+K,EAAa,EACb,MACJ,KApFwB,IAqFpBW,EAAgB5Y,gBAAcoN,aAC9B6K,EAAa,EACb,MACJ,QACI,KAAM,uBAvFChkB,EAuFqCskB,EAtFjDxE,OAAOC,aACF,IAAR/f,EACCA,GAAS,EAAK,IACdA,GAAS,GAAM,IACfA,GAAS,GAAM,MALF,IAACA,EA0Ff,GA1GkB,YA0GdokB,EAvGqB,GAwGrB,KAAM,qCAEV,IAAKG,IAAaC,IAAUC,EACxB,KAAM,mEAGV,IAAIljB,EAAMsK,OAAO+Y,aAAaC,WAAW/Q,gBAAcgR,wBAA0BjZ,OAAO+Y,aAAaC,WAAW/Q,gBAAciR,4BAE9H,GAAIL,IAAiBnjB,EACjB,KAAM,0DAGV,OAAO,IAAIsiB,eAAezZ,EAAOC,EAAQuN,EAAakM,EAAQ,EAAGE,EAAYC,EAAYU,EAAeD,EAAc5jB,E,ECnI9H,IAAYkkB,uEAQX,KAPGA,EAAA,iBACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,mCACAA,IAAA,yBACAA,IAAA,mBACAA,IAAA,eCIJ,MAqDMC,EAAiB,KACjBC,EAAgB,KAchBC,EAA4B,K,MAYrBC,eA8IT9mB,YAAmBwC,EAA4BukB,EAA0BC,EAAsB9N,EAAoCpN,EAAsBC,EAAuB4M,EAA8BW,EAA4B2N,EAAoCC,GAA3PzjB,KAAMjB,OAANA,EAA4BiB,KAAQsjB,SAARA,EAA0BtjB,KAAIujB,KAAJA,EAAsBvjB,KAASyV,UAATA,EAAoCzV,KAAKqI,MAALA,EAAsBrI,KAAMsI,OAANA,EAAuBtI,KAAMkV,OAANA,EAA8BlV,KAAW6V,YAAXA,EAA4B7V,KAAmBwjB,oBAAnBA,EAAoCxjB,KAAYyjB,aAAZA,C,CA5I9QzsB,qBAAqB0sB,EAAkBC,EAA0BC,EAAgBC,GAE7E,GAAgB,GAAZH,EA0CC,CACD,GAAIA,GAAYR,GAlEI,OAkEcS,GAA+CC,GAAUR,EACvF,MAAO,CAAElO,OAAQlL,gBAAcgN,SAAUuM,MAAM,GAE9C,GAAIG,GAAYR,GAnEM,OAmEYS,GAAsDC,GAAUR,EACnG,MAAO,CAAElO,OAAQlL,gBAAcgN,SAAUuM,MAAM,GAE9C,GAAIG,GAAYR,GA9EP,OA8EyBS,GA5DzB,MA4DkEC,EAC5E,MAAO,CAAE1O,OAAQlL,gBAAcoN,aAAcmM,MAAM,GAElD,GAAIG,GAAYR,GA/EP,OA+EyBS,GA9DpB,MA8D6DC,EAC5E,MAAO,CAAE1O,OAAQlL,gBAAckN,aAAcqM,MAAM,GAElD,GAAIG,GAAYP,GAnFR,OAmFyBQ,GAlExB,MAkEgEC,EAC1E,MAAO,CAAE1O,OAAQlL,gBAAcmN,UAAWoM,MAAM,GAE/C,GAAIG,GAAYP,GApFR,OAoFyBQ,GApEnB,MAoE2DC,EAC1E,MAAO,CAAE1O,OAAQlL,gBAAciN,UAAWsM,MAAM,GAE/C,GAAIG,GAAYP,GAtFT,OAsF0BQ,GAAuCC,GAAUR,EACnF,MAAO,CAAElO,OAAQlL,gBAAc+M,OAAQwM,MAAM,GAE5C,GAAIG,GAAYP,GAtFF,OAsFmBQ,GAA8CC,GAAUR,EAC1F,MAAO,CAAElO,OAAQlL,gBAAc+M,OAAQwM,MAAM,GAG7C,KAAM,2CAEb,CArEG,OAAQI,GAEJ,KAnFkB,MAoFd,MAAO,CAAEzO,OAAQlL,gBAAc0N,QAAS6L,MAAM,GAGlD,KAhFkB,MAiFd,MAAO,CAAErO,OAAQlL,gBAAc4N,SAAU2L,MAAM,GACnD,KApFa,MAqFT,MAAO,CAAErO,OAAQlL,gBAAc2N,QAAS4L,MAAM,GAClD,KAjFyB,MAkFrB,MAAO,CAAErO,OAAQlL,gBAAc6N,gBAAiB0L,MAAM,GAC1D,KAlFc,MAmFV,MAAO,CAAErO,OAAQlL,gBAAc8N,SAAUyL,MAAM,GAInD,KAnFqB,MAoFjB,MAAO,CAAErO,OAAQlL,gBAAcmO,QAASoL,MAAM,GAClD,KAjFqB,MAkFjB,MAAO,CAAErO,OAAQlL,gBAAcqO,QAASkL,MAAM,GAClD,KAhFqB,MAiFjB,MAAO,CAAErO,OAAQlL,gBAAcuO,QAASgL,MAAM,GAClD,KA9EuB,MA+EnB,MAAO,CAAErO,OAAQlL,gBAAcyO,UAAW8K,MAAM,GACpD,KA9EuB,MA+EnB,MAAO,CAAErO,OAAQlL,gBAAc2O,UAAW4K,MAAM,GACpD,KA/E6B,MAgFzB,MAAO,CAAErO,OAAQlL,gBAAcoO,YAAamL,MAAM,GACtD,KA7E6B,MA8EzB,MAAO,CAAErO,OAAQlL,gBAAcsO,YAAaiL,MAAM,GACtD,KA5E6B,MA6EzB,MAAO,CAAErO,OAAQlL,gBAAcwO,YAAa+K,MAAM,GACtD,KA1E+B,MA2E3B,MAAO,CAAErO,OAAQlL,gBAAc0O,cAAe6K,MAAM,GACxD,KA1E+B,MA2E3B,MAAO,CAAErO,OAAQlL,gBAAc4O,cAAe2K,MAAM,GACxD,QACI,KAAM,sC,CAkCtBvsB,yBAAyB+H,GAGrB,IAAI+kB,EAAiB,IAAItK,WAAWza,EAAQ,EAAG,IAG/C,GAA0B,MAAtB+kB,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,MAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAsC,KAAvBA,EAAe,KAAuC,KAAvBA,EAAe,IAC1V,KAAM,SAGL,GAA0B,MAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,MAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAqC,KAAtBA,EAAe,IAAsC,KAAvBA,EAAe,KAAuC,KAAvBA,EAAe,IAC/V,OAAOT,eAAeU,eAAehlB,GAGrC,KAAM,0C,CAId/H,sBAAsB+H,GAElB,IAAIilB,EAAWvC,YAAYwC,kBAEvBC,EAAiB,IAAIxK,SAAS3a,EAnLf,GACR,GAkLmDilB,GAG1DG,EAA6B,UADhBD,EAAe5H,UAAU,GAAG,GAIzCsH,EAASM,EAAe5H,UAAU,EAAI0H,EAAUG,GAChDN,EAAaK,EAAe5H,UAAU,EAAI0H,EAAUG,GACpDT,EAAWQ,EAAe5H,UAAU,EAAI0H,EAAUG,GAClDR,EAAmBO,EAAe5H,UAAU,EAAI0H,EAAUG,GACnCD,EAAe5H,UAAU,EAAI0H,EAAUG,GAClE,IAAIC,EAAaF,EAAe5H,UAAU,EAAI0H,EAAUG,GACpDE,EAAcH,EAAe5H,UAAU,EAAI0H,EAAUG,GACxCD,EAAe5H,UAAU,EAAI0H,EAAUG,GACxD,IAAIG,EAAwBJ,EAAe5H,UAAU,EAAI0H,EAAUG,GAC/DI,EAAgBL,EAAe5H,UAAU,GAAK0H,EAAUG,GACxDK,EAAuBN,EAAe5H,UAAU,GAAK0H,EAAUG,GAC/DX,EAAsBU,EAAe5H,UAAU,GAAK0H,EAAUG,GAG9DM,EAAapB,eAAeqB,cAAchB,EAAUC,EAAkBC,EAAQC,GAC9Ec,EAAaF,EAAWvP,OACxB0P,EAAWH,EAAWlB,KAGtBsB,EAAe5B,mBAAiB6B,MAChCP,EAAgB,GAAKD,EAAwB,EAC7CO,EAAe5B,mBAAiB8B,UAE3BR,EAAgB,GAAKD,GAAyB,EACnDO,EAAe5B,mBAAiB+B,KAE3BT,GAAiB,GAAKD,EAAwB,IACnDO,EAAe5B,mBAAiBgC,gBAKpC,OAAO,IAAI5B,eAAetkB,EAAoB,GAAZ2kB,EAAekB,EAAUC,EAAcT,EAAYC,EAAaM,EAAYH,GAAwB,EAAGhB,EAFtH0B,G,ECrMrB,MAAOC,kBAAkBlQ,YAoO3B1Y,YAAY8L,EAAeC,EAAgB4M,EAAuBS,GAAkB,EAAMyP,EAAkB7B,GAAgB,EAAO8B,GAA4B,GAC3JhT,MAAMhK,EAAOC,EAAQ4M,GAfzBlV,KAAQslB,UAAY,EAgBhBtlB,KAAK0V,WAAauN,mBAAiB6B,MACnC9kB,KAAKmV,YAAcoO,EACnBvjB,KAAKslB,SAAWF,EAChBplB,KAAK4V,SAAW9L,OAAOyM,eAAegP,sBAAsBvlB,KAAK0V,WAAYrN,EAAOC,EAAQ4M,EAAQS,EAAQ4N,EAAM8B,E,CAvNtHruB,kBACI,IAAIwuB,EAAqB,IAAIhM,WAAW,GAsBxC,GArBAgM,EAAO,GAAK,IACZA,EAAO,GAAK,IACZA,EAAO,GAAK,IACZL,UAAUM,YAAc,IAAIN,UAAU,EAAG,EAAGnb,gBAAc+M,QAAQ,GAAO,GACzEoO,UAAUM,YAAYC,cAAcF,GAAQ,GAAO,GACnDL,UAAUM,YAAY9S,MAAO,EAC7BwS,UAAUM,YAAY1Q,KAAO,eAC7ByQ,EAAO,GAAK,IACZA,EAAO,GAAK,IACZA,EAAO,GAAK,IACZL,UAAUQ,aAAe,IAAIR,UAAU,EAAG,EAAGnb,gBAAc+M,QAAQ,GAAO,GAC1EoO,UAAUQ,aAAaD,cAAcF,GAAQ,GAAO,GACpDL,UAAUQ,aAAahT,MAAO,EAC9BwS,UAAUQ,aAAa5Q,KAAO,gBAC9ByQ,EAAO,GAAK,EACZA,EAAO,GAAK,EACZA,EAAO,GAAK,EACZL,UAAUS,aAAe,IAAIT,UAAU,EAAG,EAAGnb,gBAAc+M,QAAQ,GAAO,GAC1EoO,UAAUS,aAAaF,cAAcF,GAAQ,GAAO,GACpDL,UAAUS,aAAajT,MAAO,EAC9BwS,UAAUS,aAAa7Q,KAAO,gBAC1BjL,OAAO+Y,aAAaC,WAAW/Q,gBAAc8T,4BAA6B,CAC1E,IAAIC,EAAa,IAAIC,YAAY,GACjCD,EAAW,GAAK,MAChBA,EAAW,GAAK,MAChBA,EAAW,GAAK,MAChBX,UAAUa,cAAgB,IAAIb,UAAU,EAAG,EAAGnb,gBAAciN,WAAW,GAAO,GAAO,GACrFkO,UAAUa,cAAcN,cAAcI,GAAY,GAAO,EAC5D,MAEGN,EAAO,GAAK,IACZA,EAAO,GAAK,IACZA,EAAO,GAAK,IACZL,UAAUa,cAAgB,IAAIb,UAAU,EAAG,EAAGnb,gBAAc+M,QAAQ,GAAO,GAAO,GAClFoO,UAAUa,cAAcN,cAAcF,GAAQ,GAAO,GAGzDL,UAAUa,cAAcrT,MAAO,EAC/BwS,UAAUa,cAAcjR,KAAO,iBAC/BoQ,UAAUc,aAAed,UAAUQ,Y,CAWvC3uB,mCAAmCkL,EAAmBgkB,EAAwC,KAAMC,EAA0C,MAC1I,IAGIC,EACAC,EAJAC,EAAa,IAAIpN,KAAKhX,GAK1B,OAJsBokB,EAAK1G,iBAKvB,IAAK,2BACD,IAKI2G,EALAC,EAAuBF,EAAKlK,YAC5BqK,EAA0BH,EAAKlK,YACnCgK,EAAkB,IAAI/K,aAAamL,EAAeA,EAAe,GACjEH,EAAe,IAAIhL,aAAaiL,EAAK3F,gBAAkC,EAAlB8F,IACrDL,EAAgB3L,IAAI4L,EAAc,IAC9BE,EAAqB,IAAIpB,UAAUqB,EAAcA,EAAcxc,gBAAcoN,cAAc,GAAO,IAC9FsO,cAAcU,GAAiB,GAAO,GAC9CG,EAAQxQ,WAAajE,aAAWhK,MAChC,MACJ,IAAK,mCACG0e,EAAuBF,EAAKlK,YAC5BqK,EAA0BH,EAAKlK,YAEnC,GADAgK,EAAkB,IAAIL,YAAYO,EAAK3F,gBAAkC,EAAlB8F,IAClD3c,OAAO+Y,aAAaC,WAAW/Q,gBAAc8T,6BAa9CQ,EAAe,IAAIN,YAAYS,EAAeA,EAAe,IAChD/L,IAAI2L,EAAiB,IAClCG,EAAU,IAAIpB,UAAUqB,EAAcA,EAAcxc,gBAAckN,cAAc,GAAO,IAC/EwO,cAAcW,GAAc,GAAO,GAC3CE,EAAQxQ,WAAajE,aAAWhK,UAjB2C,CAC3ExQ,QAAQovB,IAAI,gEACP5c,OAAO+Y,aAAaC,WAAW/Q,gBAAc4U,6BAC9CrvB,QAAQsvB,MAAM,gEAClBP,EAAe,IAAIhL,aAAamL,EAAeA,EAAe,GAC9D,IAAK,IAAI/nB,EAAI,EAAG+G,EAAI4gB,EAAgBnqB,OAAQwC,EAAI+G,EAAG/G,IAC/C4nB,EAAa5nB,GAAKmiB,eAAeiG,gBAAgBT,EAAgB3nB,KAErE8nB,EAAU,IAAIpB,UAAUqB,EAAcA,EAAcxc,gBAAcoN,cAAc,GAAO,IAC/EsO,cAAcW,GAAc,GAAO,GAC3CE,EAAQxQ,WAAajE,aAAWhK,KAEnC,CAOD,MACJ,QACI,KAAM,yBAGd,OAAOye,C,CAUXvvB,mBAAmB8vB,EAAkBZ,EAAwC,KAAMC,EAA0C,MAEzH,IAAIjR,EAASiR,EAAkBA,EAAgB,GAAKnc,gBAAcgN,SAC9DrB,GAASwQ,GAAkBA,EAAgB,GAC3CY,IAAUZ,GAAkBA,EAAgB,GAC5Ca,IAAOb,GAAkBA,EAAgB,GACzCc,IAAMf,GAAiBA,EAAeb,iBAEtCkB,EAAU,IAAIpB,UAAU2B,EAAYze,MAAOye,EAAYxe,OAAQ4M,EAAQS,EAAQoR,EAASC,EAAMC,GAoBlG,OAlBIf,GACAK,EAAQW,aAAaJ,EAAaG,GAAK,GACvCV,EAAQY,cAAcjB,IAGtBK,EAAQW,aAAaJ,GAAa,GAAO,GAEzCC,IACIxrB,QAAQI,SAAWmrB,EAAYM,WAC/Bb,EAAQc,QAAU,IAAI7N,WAAWsN,EAAYM,WAAWE,aAAa,EAAG,EAAGR,EAAYze,MAAOye,EAAYxe,UAE1GzN,MAAMG,QAAQusB,OAAOxU,KAAK+T,EAAYze,MAAOye,EAAYxe,QACzDzN,MAAMG,QAAQusB,OAAO5c,QACrB9P,MAAMG,QAAQwsB,QAAQC,UAAUX,EAAa,EAAG,EAAGA,EAAYze,MAAOye,EAAYxe,QAClFie,EAAQc,QAAU,IAAI7N,WAAW3e,MAAMG,QAAQwsB,QAAQF,aAAa,EAAG,EAAGR,EAAYze,MAAOye,EAAYxe,QAAQpG,KAAKyX,UAIvH4M,C,CAUXvvB,iBAAiBkL,EAAmBgkB,EAAwC,KAAMC,EAA0C,MAExH,IAAIuB,EAAU5F,eAAe6F,kBAAkBzlB,GAE3CqkB,EAAU,IAAIpB,UAAUuC,EAAQrf,MAAOqf,EAAQpf,OAAQof,EAAQxS,OAAQwS,EAAQ7R,YAAc,GAAG,GAAO,GAM3G,OAJA0Q,EAAQqB,WAAWF,GACfxB,GACAK,EAAQY,cAAcjB,GAEnBK,C,CAUXvvB,iBAAiBkL,EAAmBgkB,EAAwC,KAAMC,EAA0C,MACxH,IAAI0B,EAAUxE,eAAeyE,kBAAkB5lB,GAE3CqkB,EAAU,IAAIpB,UAAU0C,EAAQxf,MAAOwf,EAAQvf,OAAQuf,EAAQ3S,OAAQ2S,EAAQhS,YAAc,GAAG,EAAOgS,EAAQtE,MAKnH,OAHAgD,EAAQwB,WAAWF,GACf3B,GACAK,EAAQY,cAAcjB,GACnBK,C,CASXvvB,iBAAiBkL,EAAmBgkB,EAAwC,KAAMC,EAA0C,MACxH,KAAM,O,CAQVnvB,YAAYmd,EAAa6T,GACrBntB,MAAMK,OAAO+sB,KAAK9T,EAAK6T,EAAU,KAAMntB,MAAMC,OAAOotB,U,CAiCxDhB,aAAanoB,EAA4DsmB,EAA2B8C,GAChG,IAAI5B,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAe6R,oBAAoB7B,EAASxnB,EAAQsmB,EAAkB8C,E,CASjFzC,cAAc3mB,EAAyBsmB,EAA2B8C,GAC9D,IAAI5B,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAe8R,qBAAqB9B,EAASxnB,EAAQsmB,EAAkB8C,E,CAelFG,iBAAiBC,EAAiBC,EAAiBngB,EAAeC,EAAgBkd,EAAyBiD,EAAqBC,EAAyBrD,EAA2B8C,GAChL,IAAI5B,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAeoS,wBAAwBpC,EAASf,EAAQiD,EAAaC,EAAgBH,EAASC,EAASngB,EAAOC,EAAQ+c,EAAkB8C,E,CAOnJP,WAAWF,GACP,IAAInB,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAeqS,kBAAkBrC,EAASmB,E,CAOrDK,WAAWF,GACP,IAAItB,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAesS,kBAAkBtC,EAASsB,E,CAOrDiB,WAAWC,GACP,IAAIxC,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAeyS,kBAAkBzC,EAASwC,E,CAMjD/P,qBACA,OAAOmM,UAAUM,W,CAQrBwD,YACI,GAAIjpB,KAAKslB,UAAYtlB,KAAKqnB,QACtB,OAAOrnB,KAAKqnB,QAGZ,MAAM,IAAI6B,MAAM,+C,CAQhB/B,cAAcjB,GACdA,IACgC,MAA5BA,EAAelQ,YAAmBhW,KAAKgW,UAAYkQ,EAAelQ,WACtC,MAA5BkQ,EAAehQ,YAAmBlW,KAAKkW,UAAYgQ,EAAehQ,WACrC,MAA7BgQ,EAAenQ,aAAoB/V,KAAK+V,WAAamQ,EAAenQ,YACvC,MAA7BmQ,EAAepQ,aAAoB9V,KAAK8V,WAAaoQ,EAAepQ,Y,EA3UzEqP,UAAS+C,UAAW,YAGpB/C,UAAWM,YAAc,KAEzBN,UAAYQ,aAAc,KAE1BR,UAAYS,aAAc,KAE1BT,UAAaa,cAAc,KAE3Bb,UAAYc,aAAc,KCrC/B,MAAOkD,mBAAmBhX,SAI5B5V,cACI8V,O,QCRK+W,cA2BTpyB,oBAAoBqyB,EAAaC,GAC7B,IAAIrI,EAAYoI,EACZE,EAAYD,EAiBhB,OAhBAC,EAAG,GAAKtI,EAAErd,EACV2lB,EAAG,GAAKtI,EAAEpd,EACV0lB,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,GAAKtI,EAAEnd,EACVylB,EAAG,GAAKtI,EAAEld,EACVwlB,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,GAAKH,cAAcI,gBAAgB,GACtCD,EAAG,IAAMH,cAAcI,gBAAgB,IACvCD,EAAG,IAAMH,cAAcI,gBAAgB,IACvCD,EAAG,IAAMtI,EAAEjd,GACXulB,EAAG,IAAMtI,EAAEhd,GACXslB,EAAG,IAAMH,cAAcI,gBAAgB,IACvCD,EAAG,IAAMH,cAAcI,gBAAgB,IAChCF,C,CAGXtyB,0BACIoyB,cAAcK,eAAe,GAAK,EAClCL,cAAcK,eAAe,GAAK,EAClCL,cAAcK,eAAe,GAAK,EAClCL,cAAcK,eAAe,GAAK,EAClCL,cAAcK,eAAe,IAAM,EACnCL,cAAcK,eAAe,IAAM,C,CAGvCzyB,eACIoyB,cAAcM,kBAAmB,EAEjCN,cAAcO,WAAa,C,EC9DnC,IAAYC,ECFAC,ECAAC,EHIDV,cAAQW,SAAW,SAEnBX,cAAAI,gBAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1EJ,cAAAK,eAA2B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzEL,cAAAY,aAAyBZ,cAAcK,eAEvCL,cAAAa,YAAsB,IAAItmB,OAC1BylB,cAAMc,OAAQ,KACdd,cAAUO,WAAW,EAErBP,cAAgBM,kBAAY,EAM5BN,cAAK/gB,MAAW,EAChB+gB,cAAM9gB,OAAW,EAEjB8gB,cAAOe,SAAW,ECrBjBP,2EAeX,KAbGA,EAAA,gBAEAA,IAAA,mBACAA,IAAA,uBACAA,IAAA,gCACAA,IAAA,0BACAA,IAAA,gCACAA,IAAA,0BAEAA,IAAA,wBACAA,IAAA,0BACAA,IAAA,0CACAA,IAAA,wBChBQC,kEAKX,KAJGA,EAAA,qBACAA,IAAA,iBACAA,IAAA,iBACAA,IAAA,qB,MECSO,MAoGT7tB,YAAY8tB,EAAY,EAAGC,EAAY,EAAGzmB,EAAY,EAAGD,EAAY,GACjE5D,KAAKqqB,EAAIA,EACTrqB,KAAKsqB,EAAIA,EACTtqB,KAAK6D,EAAIA,EACT7D,KAAK4D,EAAIA,C,CA1Db5M,0BAA0BiH,GAKtB,OAAIA,GAAS,OACFA,EAAQ,MACVA,EAAQ,EACNV,KAAKgtB,KAAKtsB,EAAQ,MAAS,MAAO,KAElCV,KAAKgtB,IAAItsB,EAAO,I,CAO/BjH,0BAA0BiH,GAOtB,OAAIA,GAAS,EACF,EACFA,GAAS,SACP,MAAQA,EACVA,GAAS,EACP,MAAQV,KAAKgtB,IAAItsB,EAAO,QAAW,KAEnCV,KAAKgtB,IAAItsB,EAAO,O,CA8B/BusB,MAAM1mB,GACF,IAAKA,EAAG,OAAO,EACf,MAAM2mB,QAAU,CAAC7mB,EAAWC,KACxB,IAAIuH,EAAQ,KACZ,OAAQA,EAAQxH,EAAIC,GAAKD,EAAIC,EAAIuH,CAAK,EAE1C,OAAOqf,QAAQ3mB,EAAEumB,EAAGrqB,KAAKqqB,IAAMI,QAAQ3mB,EAAEwmB,EAAGtqB,KAAKsqB,IAAMG,QAAQ3mB,EAAED,EAAG7D,KAAK6D,IAAM4mB,QAAQ3mB,EAAEF,EAAG5D,KAAK4D,E,CAOrG8mB,SAASplB,GACLA,EAAI+kB,EAAID,MAAMO,mBAAmB3qB,KAAKqqB,GACtC/kB,EAAIglB,EAAIF,MAAMO,mBAAmB3qB,KAAKsqB,GACtChlB,EAAIzB,EAAIumB,MAAMO,mBAAmB3qB,KAAK6D,GACtCyB,EAAI1B,EAAI5D,KAAK4D,C,CAOjBgnB,QAAQtlB,GACJA,EAAI+kB,EAAID,MAAMS,mBAAmB7qB,KAAKqqB,GACtC/kB,EAAIglB,EAAIF,MAAMS,mBAAmB7qB,KAAKsqB,GACtChlB,EAAIzB,EAAIumB,MAAMS,mBAAmB7qB,KAAK6D,GACtCyB,EAAI1B,EAAI5D,KAAK4D,C,CAOjBknB,QAAQC,GACJ,IAAIC,EAA2BD,EAC/BC,EAAUX,EAAIrqB,KAAKqqB,EACnBW,EAAUV,EAAItqB,KAAKsqB,EACnBU,EAAUnnB,EAAI7D,KAAK6D,EACnBmnB,EAAUpnB,EAAI5D,KAAK4D,C,CAGvBa,MAAMxG,GAIF,OAHA+B,KAAKqqB,EAAIrqB,KAAKqqB,EAAIpsB,EAClB+B,KAAKsqB,EAAItqB,KAAKsqB,EAAIrsB,EAClB+B,KAAK6D,EAAI7D,KAAK6D,EAAI5F,EACX+B,I,CAGXirB,SAASZ,EAAWC,EAAWzmB,EAAWD,GACtC5D,KAAKqqB,EAAIA,EACTrqB,KAAKsqB,EAAIA,EACTtqB,KAAK6D,EAAIA,EACT7D,KAAK4D,EAAIA,C,CAQbsnB,UAAUlsB,EAAcyhB,EAAiB,GACrCzgB,KAAKqqB,EAAIrrB,EAAMyhB,EAAS,GACxBzgB,KAAKsqB,EAAItrB,EAAMyhB,EAAS,GACxBzgB,KAAK6D,EAAI7E,EAAMyhB,EAAS,GACxBzgB,KAAK4D,EAAI5E,EAAMyhB,EAAS,E,CAO5B0K,UACI,MAAO,CAACnrB,KAAKqqB,EAAGrqB,KAAKsqB,EAAGtqB,KAAK6D,EAAG7D,KAAK4D,E,CAOzC4D,QACI,IAAIjF,EAAc,IAAI6nB,MAEtB,OADApqB,KAAK8qB,QAAQvoB,GACNA,C,EA3LJ6nB,MAAAgB,IAAa,IAAIhB,MAAM,EAAG,EAAG,EAAG,GAIhCA,MAAAiB,MAAe,IAAIjB,MAAM,EAAG,EAAG,EAAG,GAIlCA,MAAAkB,KAAc,IAAIlB,MAAM,EAAG,EAAG,EAAG,GAIjCA,MAAAmB,KAAc,IAAInB,MAAM,EAAG,EAAG,EAAG,GAIjCA,MAAAoB,OAAgB,IAAIpB,MAAM,EAAG,IAAM,KAAO,GAI1CA,MAAAqB,QAAiB,IAAIrB,MAAM,EAAG,EAAG,EAAG,GAIpCA,MAAAsB,KAAc,IAAItB,MAAM,GAAK,GAAK,GAAK,GAIvCA,MAAAuB,MAAe,IAAIvB,MAAM,EAAG,EAAG,EAAG,GAIlCA,MAAAwB,MAAe,IAAIxB,MAAM,EAAG,EAAG,EAAG,GAIlCA,MAAAyB,MAAe,IAAIzB,MAAM,EAAG,EAAG,EAAG,GCjCvC,MAAO0B,8BAA8B7W,YA0FvC1Y,YAAY8L,EAAeC,EAAgB4M,EAAiB0U,qBAAmB7S,OAAQgV,EAA6BnC,qBAAmBoC,SAAUtkB,GAAkB,GAE/J2K,MAAMhK,EAAOC,EAAQ4M,GAjEzBlV,KAAOisB,QAAW,EAkEdjsB,KAAKksB,aAAehX,EACpBlV,KAAKmsB,oBAAsBJ,EACd,GAAT1jB,GAAwB,GAAVC,GAAeZ,GAC7B1H,KAAKosB,UAETpsB,KAAK2S,MAAO,C,CAjFL0Z,2BACP,OAAOP,sBAAsBQ,c,CAe7BP,yBACA,OAAO/rB,KAAKmsB,mB,CAOZnT,qBACA,OAAOmM,UAAUM,W,CAGrB8G,aACI,OAAO,C,CAMPC,kBACA,OAAOxsB,KAAKoV,M,CAMZqX,mBACA,OAAOzsB,KAAKqV,O,CAMZqX,cACA,OAAO,C,CAMPC,cACA,OAAO,C,CA2BP5K,aACA,OAAO/hB,KAAKonB,WAAWrF,M,CAGvB6K,cACA,OAAO5sB,KAAKonB,WAAWwF,O,CAGvBlE,qBACA,OAAO1oB,KAAKonB,WAAWsB,c,CAG3BmE,SACI,MAAM,IAAI3D,MAAM,0B,CAEpB4D,OACI,MAAM,IAAI5D,MAAM,0B,CAEpBkD,UAEIpsB,KAAKonB,WAAa,IAAKxrB,OAAemxB,qBAAsBjjB,OAAO+Y,aAAqBuE,WAAYpnB,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKksB,aAAclsB,KAAK+rB,oBACrJ/rB,KAAK4V,SAAW5V,KAAKonB,WAAW4F,cAAcC,UAAU,E,CAO5Dj2B,gBACI,MAAM,IAAIkyB,MAAM,0B,CAKpBlyB,eACI,MAAM,IAAIkyB,MAAM,0B,CAKpBjO,QACIjb,KAAKonB,WAAWnM,O,CAMpBE,MACInb,KAAKonB,WAAWjM,K,CAMpB+R,UACIltB,KAAKonB,WAAW8F,S,CAIpBviB,MAAM0f,EAAY,EAAKC,EAAY,EAAKzmB,EAAY,EAAKD,EAAY,GACjE5D,KAAKonB,WAAWzc,MAAM0f,EAAGC,EAAGzmB,EAAGD,E,CAYnCupB,QAAQjuB,EAAWC,EAAWkJ,EAAeC,GACzC,OAAOtI,KAAKonB,WAAW+F,QAAQjuB,EAAGC,EAAGkJ,EAAOC,E,CAEhD8kB,U,CAQAzY,mBACI3U,KAAKonB,WAAWzS,kB,EAtLLmX,sBAAAuB,YAAqB,IAAIjD,MAAM,EAAG,EAAG,EAAG,GAOxC0B,sBAAOwB,QAAU,GAEzBxB,sBAAAyB,MAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCzB,sBAAA0B,QAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GCX5C,MAAOC,wBAAwBxY,YAsGjC1Y,YAAY8L,EAAeC,EAAgB4M,EAA6B0U,qBAAmB7S,OAAQgV,EAAyCnC,qBAAmB8D,MAE3Jrb,MAAMhK,EAAOC,EAAQ4M,GAvEzBlV,KAAOisB,QAAW,EAElBjsB,KAAQ2tB,UAAY,EAsEhB3tB,KAAKksB,aAAehX,EACpBlV,KAAKmsB,oBAAsBJ,EACd,GAAT1jB,GAAwB,GAAVC,GACdtI,KAAKosB,UAETpsB,KAAK2S,MAAO,C,CAvFL0Z,2BACP,OAAOoB,gBAAgBnB,c,CAgBvBP,yBACA,OAAO/rB,KAAKmsB,mB,CAOZnT,qBACA,OAAOmM,UAAUM,W,CAOrB8G,aACI,OAAO,C,CAMPC,kBACA,OAAOxsB,KAAKoV,M,CAMZqX,mBACA,OAAOzsB,KAAKqV,O,CAMZqX,cACA,OAAO,C,CAMPC,cACA,OAAO,C,CA6BP5K,aACA,OAAO/hB,KAAKgtB,cAAcY,O,CAI1BhB,cACA,OAAO5sB,KAAKgtB,cAAca,Q,CAM1BnF,qBACA,OAAO1oB,KAAKgtB,cAAcc,e,CAM9BjB,SACI,MAAM,IAAI3D,MAAM,0B,CAMpB4D,OACI,MAAM,IAAI5D,MAAM,0B,CAMpBkD,UAEIpsB,KAAKgtB,cAAgBljB,OAAOyM,eAAewX,2BAA2B/tB,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKksB,aAAclsB,KAAK+rB,oBAAoB,GAAO,EAAO,GACzJ/rB,KAAK4V,SAAW5V,KAAKgtB,cAAcC,UAAU,GAC7CjtB,KAAK4V,SAASa,gBAAkB,G,CAOpCzf,gBACIy2B,gBAAgBH,QAAQjxB,KAAK,CAAE2xB,GAAIP,gBAAgBnB,eAAgB2B,EAAG7E,cAAc/gB,MAAO6lB,EAAG9E,cAAc9gB,Q,CAKhHtR,eACI,IAAIm3B,EAAWV,gBAAgBH,QAAQrwB,MACnCkxB,IACIV,gBAAgBnB,gBAAkB6B,EAAIH,KAClCG,EAAIH,IACJlkB,OAAOyM,eAAe6X,iBAAiBD,EAAIH,GAAGhB,eAC9C5D,cAAce,QAAUgE,EAAIH,GAAGL,WAE/B7jB,OAAOyM,eAAe8X,sBACtBjF,cAAce,SAAU,GAE5BsD,gBAAgBnB,eAAiB6B,EAAIH,IAEzClkB,OAAO+Y,aAAayL,SAAS,EAAG,EAAGH,EAAIF,EAAGE,EAAID,GAC9CpkB,OAAO+Y,aAAa0L,QAAQ,EAAG,EAAGJ,EAAIF,EAAGE,EAAID,GAC7C9E,cAAc/gB,MAAQ8lB,EAAIF,EAC1B7E,cAAc9gB,OAAS6lB,EAAID,E,CAMnCjT,QAEInR,OAAOyM,eAAe6X,iBAAiBpuB,KAAKgtB,eAC5ChtB,KAAKwuB,QAAUf,gBAAgBnB,eAC/BmB,gBAAgBnB,eAAiBtsB,KACjCopB,cAAce,QAAUnqB,KAAK2tB,SAU7B7jB,OAAO+Y,aAAayL,SAAS,EAAG,EAAGtuB,KAAKoV,OAAQpV,KAAKqV,SACrDvL,OAAO+Y,aAAa0L,QAAQ,EAAG,EAAGvuB,KAAKoV,OAAQpV,KAAKqV,SACpDrV,KAAKyuB,WAAarF,cAAc/gB,MAChCrI,KAAK0uB,YAActF,cAAc9gB,OACjC8gB,cAAc/gB,MAAQrI,KAAKoV,OAC3BgU,cAAc9gB,OAAStI,KAAKqV,QAC5B8T,WAAWwF,aAAe,I,CAO9BxT,MACIrR,OAAOyM,eAAeqY,mBAAmB5uB,KAAKgtB,eAC9CS,gBAAgBnB,eAAiB,KACjClD,cAAce,SAAU,C,CAM5B+C,UACQltB,KAAKwuB,SAAWf,gBAAgBnB,iBAE5BtsB,KAAKwuB,SACL1kB,OAAOyM,eAAe6X,iBAAiBpuB,KAAKwuB,QAAQxB,eACpD5D,cAAce,QAAUnqB,KAAKwuB,QAAQb,WAGrC7jB,OAAOyM,eAAeqY,mBAAmB5uB,KAAKgtB,eAC9C5D,cAAce,SAAU,GAG5BsD,gBAAgBnB,eAAiBtsB,KAAKwuB,SAK1C1kB,OAAO+Y,aAAayL,SAAS,EAAG,EAAGtuB,KAAKyuB,WAAYzuB,KAAK0uB,aACzD5kB,OAAO+Y,aAAa0L,QAAQ,EAAG,EAAGvuB,KAAKyuB,WAAYzuB,KAAK0uB,aACxDtF,cAAc/gB,MAAQrI,KAAKyuB,WAC3BrF,cAAc9gB,OAAStI,KAAK0uB,YAC5BvF,WAAWwF,aAAe,I,CAY9BhkB,MAAM0f,EAAY,EAAKC,EAAY,EAAKzmB,EAAY,EAAKD,EAAY,GAEjE6pB,gBAAgBJ,YAAYhD,EAAIA,EAChCoD,gBAAgBJ,YAAY/C,EAAIA,EAChCmD,gBAAgBJ,YAAYxpB,EAAIA,EAChC4pB,gBAAgBJ,YAAYzpB,EAAIA,EAGhCkG,OAAO+Y,aAAagM,mBAAmBhF,kBAAgBO,MAAQP,kBAAgBiF,MAAOrB,gBAAgBJ,YAAa,E,CAWvHF,QAAQjuB,EAAWC,EAAWkJ,EAAeC,GACzC,OAAOwB,OAAOyM,eAAewY,qBAAqB/uB,KAAKgtB,cAAe9tB,EAAGC,EAAGkJ,EAAOC,E,CAMvF8kB,U,CAQAzY,mBAEI3U,KAAKgtB,eAAiBhtB,KAAKgtB,cAAc/T,S,EAjStCwU,gBAAAJ,YAAqB,IAAIjD,MAAM,EAAG,EAAG,EAAG,GACxCqD,gBAAAuB,kBAA2B,IAAI5E,MAOvBqD,gBAAOH,QAAU,GAIzBG,gBAAAF,MAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAIrCE,gBAAAD,QAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAuR7C5xB,OAAeC,QAAWD,OAAeqzB,YAAYC,aAEtDzB,gBAAkB3B,uB,MClTTqD,WAWZn4B,aAAai3B,EAAWC,GAoBvB,OAlBAA,GAAQ,GADRD,GAAQ,IAEC,KACR32B,QAAQsvB,MAAM,0BAcT,IAAI6G,gBAAgBQ,EAAGC,EAAGtE,qBAAmB5S,SAAU4S,qBAAmB8D,K,CAUjF12B,iBAAiBg3B,GAChBA,EAAG7qB,S,EAtCWgsB,WAAIC,KAAQ,GJVhBtF,sDA2BT,KAzBCA,EAAA,eAEAA,IAAA,aAEAA,IAAA,6BAEAA,IAAA,6CAEAA,IAAA,uCAEAA,IAAA,uDAEAA,IAAA,6BAEAA,IAAA,6CAEAA,IAAA,uCAEAA,IAAA,uDAEAA,IAAA,8CAEAA,IAAA,4BAEAA,IAAA,4C,MKdSuF,mBA6CTr4B,kBACIq4B,mBAAmBC,aAAexlB,OAAO+Y,aAAa0M,0BACtDF,mBAAmBG,aAAe1lB,OAAO+Y,aAAa0M,0BACtDF,mBAAmBI,aAAe3lB,OAAO+Y,aAAa0M,0BACtDF,mBAAmBK,eAAiB5lB,OAAO+Y,aAAa0M,0BACxDF,mBAAmBM,eAAiB7lB,OAAO+Y,aAAa0M,0BACxDF,mBAAmBO,eAAiB9lB,OAAO+Y,aAAa0M,0BACxDF,mBAAmBQ,aAAe/lB,OAAO+Y,aAAa0M,0BACtDF,mBAAmBS,SAAWhmB,OAAO+Y,aAAa0M,0BAClDF,mBAAmBU,iBAAmBjmB,OAAO+Y,aAAa0M,0BAC1DF,mBAAmBW,yBAA2BlmB,OAAO+Y,aAAa0M,0BAClEF,mBAAmBY,aAAenmB,OAAO+Y,aAAa0M,0BACtDF,mBAAmBa,qBAAuBpmB,OAAO+Y,aAAa0M,0BAC9DF,mBAAmBc,YAAcrmB,OAAO+Y,aAAa0M,0BACrDF,mBAAmBe,aAAetmB,OAAO+Y,aAAa0M,yB,CAK1Dv4B,oBAAoBiH,GACf6L,OAAO+Y,aAA6BwN,eAAeC,aAAaryB,E,CAMrEjH,oBAAoBiH,GACf6L,OAAO+Y,aAA6BwN,eAAeE,aAAatyB,E,CAMrEjH,oBAAoBiH,GACf6L,OAAO+Y,aAA6BwN,eAAeG,aAAavyB,E,CAMrEjH,sBAAsBiH,GACjB6L,OAAO+Y,aAA6BwN,eAAeI,eAAexyB,E,CAQvEjH,sBAAsBiH,GACjB6L,OAAO+Y,aAA6BwN,eAAeK,eAAezyB,E,CAOvEjH,sBAAsB25B,EAAsBC,GACvC9mB,OAAO+Y,aAA6BwN,eAAeQ,eAAeF,EAAKC,E,CAM5E55B,oBAAoB85B,EAAwBC,EAAyBC,GAChElnB,OAAO+Y,aAA6BwN,eAAeY,aAAaH,EAAMC,EAAOC,E,CAQlFh6B,gBAAgBiH,GACX6L,OAAO+Y,aAA6BwN,eAAea,SAASjzB,E,CAOjEjH,wBAAwBm6B,GACnBrnB,OAAO+Y,aAA6BwN,eAAee,iBAAiBD,E,CAOzEn6B,gCAAgCq6B,EAAyCC,GACpExnB,OAAO+Y,aAA6BwN,eAAekB,yBAAyBF,EAAkBC,E,CAOnGt6B,oBAAoBw6B,EAAsBC,GACrC3nB,OAAO+Y,aAA6BwN,eAAeqB,aAAaF,EAASC,E,CAM9Ez6B,4BAA4B26B,EAAqBC,EAAqBC,EAAuBC,GACxFhoB,OAAO+Y,aAA6BwN,eAAe0B,qBAAqBJ,EAAQC,EAAQC,EAAUC,E,CAOvG96B,mBAAmBiH,GACd6L,OAAO+Y,aAA6BwN,eAAe2B,YAAY/zB,E,CAOpEjH,oBAAoBiH,GACf6L,OAAO+Y,aAA6BwN,eAAe4B,aAAah0B,E,EAtI9DoxB,mBAAA6C,iBAAmB,IAAI7gB,MAAc,GAErCge,mBAAA8C,2BAA6B,IAAI9gB,MAAc,GAE/Cge,mBAAA+C,aAAe,IAAI/gB,MAAM,GAEzBge,mBAAAgD,uBAAyB,IAAIhhB,MAAM,GAEnCge,mBAAAiD,eAAiB,IAAIjhB,MAAc,G,MChDjCkhB,UAmCTv7B,gBACIu7B,UAAUC,IAAY,CAClBD,UAAUE,YACVF,UAAUG,SACVH,UAAUI,cACVJ,UAAUK,YACVL,UAAUM,aACVN,UAAUO,WACVP,UAAUQ,UACVR,UAAUS,oBACVT,UAAUU,aAGdV,UAAUW,UAAY,CAClBX,UAAUY,kBACVZ,UAAUa,eACVb,UAAUc,oBACVd,UAAUe,kBACVf,UAAUgB,mBACVhB,UAAUiB,iBACVjB,UAAUQ,UACVR,UAAUS,oBACVT,UAAUkB,kB,CAIlBz8B,qBAEIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY6J,oB,CAKjE38B,qBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY8J,iB,CAGjE58B,kBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY4J,I,CAGjE18B,uBACIq4B,mBAAmBqC,aAAa5H,cAAY+J,iBAAkB/J,cAAY6J,oB,CAG9E38B,qBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY4J,I,CAGjE18B,sBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY6J,oB,CAGjE38B,oBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAI5J,cAAY4J,I,CAGhE18B,2BACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY6J,oB,CAIjE38B,2BACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY8J,iB,CAEjE58B,wBACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY4J,I,CAGjE18B,6BACIq4B,mBAAmBqC,aAAa5H,cAAY+J,iBAAkB/J,cAAY6J,oB,CAG9E38B,2BACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY4J,I,CAGjE18B,4BACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAYgK,oB,CAGjE98B,0BACIq4B,mBAAmBqC,aAAa5H,cAAY4J,IAAK5J,cAAY4J,I,CAGjE18B,mBACIq4B,mBAAmBqC,aAAa5H,cAAYiK,KAAMjK,cAAYkK,Y,CAGlEh9B,6BACIq4B,mBAAmBqC,aAAa5H,cAAYiK,KAAMjK,cAAYiK,K,EA5H3DxB,UAAmB0B,oBAAa,KAEhC1B,UAAA2B,MAAQ,CACX,SACA,MACA,WACA,SACA,UACA,QACA,OACA,kBACA,WAGG3B,UAAA4B,MAA8B,CACjCC,OAAU,EACVtxB,IAAO,EACPuxB,SAAY,EACZC,OAAU,EACVC,QAAW,EACXC,MAAS,EACTC,KAAQ,EACR,kBAAmB,EACnBC,QAAW,EACXC,YAAe,EACfC,QAAU,GAEFrC,UAAMsC,OAAG,SACPtC,UAAIuC,KAAG,OACVvC,UAAOwC,QAAG,U,MClCZC,kBASTz4B,YAAY04B,EAAeC,EAAiBC,GAN5Cn1B,KAAMo1B,OAAW,EAObp1B,KAAKq1B,UAAYJ,EACjBj1B,KAAKs1B,UAAYJ,EACjBl1B,KAAKu1B,aAAeJ,C,CAIxBryB,IAAI7E,GAMA,OAJI+B,KAAKo1B,QADa,iBAAlB,EACep1B,KAAKq1B,UAAmBp3B,GAExBA,EAEZ+B,KAAKo1B,M,CAGhBI,OAAOv3B,GAEH,OADA+B,KAAKo1B,QAAUn3B,EACR+B,KAAKo1B,M,CAIhBnyB,OAAOhF,GAMH,OAJI+B,KAAKo1B,QADa,iBAAlB,GACiBp1B,KAAKq1B,UAAmBp3B,IAExBA,EAEd+B,KAAKo1B,M,CAIhBK,SAASC,GACL,OAAQ11B,KAAKo1B,OAASM,KAASA,C,CAInCC,WACI,OAAO31B,KAAKo1B,M,CAGhBnK,SAAShtB,GACL+B,KAAKo1B,OAASn3B,C,CAGlB23B,YACI,IAAIvL,EAAYrqB,KAAKu1B,aAAav1B,KAAKo1B,QACvC,OAAO/K,GAAQ2K,kBAAkBa,QAAQ71B,KAAKo1B,OAAQp1B,KAAKs1B,UAAWt1B,KAAKu1B,a,CAG/Ev+B,YAAY+d,EAAc9W,EAAeo3B,EAAgBC,GACrDD,EAAUtgB,GAAQ9W,EAClBq3B,EAAUr3B,GAAS8W,C,CAGvB/d,eAAeiH,EAAeq3B,EAAkBC,GAC5C,IAAIlL,EAAYkL,EAAat3B,GAC7B,GAAIosB,EAAG,OAAOA,EAGd,IAFA,IAAIyL,EAAS,GACT/xB,EAAY,EACPtF,EAAY,EAAGA,EAAI,OACxBsF,EAAI,GAAKtF,GACDR,GAFoBQ,IAG5B,GAAIR,EAAQ8F,EAAG,CACX,IAAIgR,EAAeugB,EAAUvxB,GAC7BgR,IAAS+gB,EAAE/gB,GAAQ,GACtB,CAGL,OADAwgB,EAAat3B,GAAS63B,EACfA,C,CAIX9+B,cAAc++B,EAAeV,GAGzB,IAFA,IAAIW,EAAeD,EAAMx3B,MAAM,KAC3B6iB,EAAc,EACT3iB,EAAY,EAAG+G,EAAYwwB,EAAM/5B,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAIR,EAAgBo3B,EAAUW,EAAMv3B,IACpC,IAAKR,EAAO,MAAM,IAAIirB,MAAM,sBAAwB6M,EAAQ,IAAMC,EAAMv3B,IACxE2iB,GAAOnjB,CACV,CACD,OAAOmjB,C,ECzFT,MAAO6U,wBAAwBjB,kBA4CjCz4B,cACI8V,MAAM4jB,gBAAgBC,WAAYD,gBAAgBE,WAAYF,gBAAgBG,c,CArBlFp/B,kBACIi/B,gBAAgBI,IAAI,YAAaJ,gBAAgB/N,WACjD+N,gBAAgBI,IAAI,YAAaJ,gBAAgBK,WAEjDL,gBAAgBI,IAAI,cAAeJ,gBAAgBM,YACnDN,gBAAgBI,IAAI,cAAeJ,gBAAgBO,YACnDP,gBAAgBI,IAAI,eAAgBJ,gBAAgBQ,aACpDR,gBAAgBI,IAAI,YAAaJ,gBAAgBS,UAEjDT,gBAAgBI,IAAI,WAAYJ,gBAAgBU,UAChDV,gBAAgBI,IAAI,cAAeJ,gBAAgBW,aACnDX,gBAAgBI,IAAI,QAASJ,gBAAgBY,OAE7CZ,gBAAgBI,IAAI,aAAcJ,gBAAgBa,YAElDb,gBAAgBI,IAAI,UAAWJ,gBAAgBc,SAE/Cd,gBAAgBI,IAAI,eAAgBJ,gBAAgBe,a,CAOxDhgC,WAAW+d,EAAc9W,GACrB+B,KAAKi3B,KAAKliB,EAAM9W,EAAOg4B,gBAAgBC,WAAYD,gBAAgBE,W,CAIvEn/B,cAAciH,EAAei3B,EAAiBC,GAC1C,OAAOn1B,KAAK61B,QAAQ53B,EAAOi3B,EAAUC,E,CAIzCn+B,aAAa++B,GACT,OAAO/1B,KAAKk3B,OAAOnB,EAAOE,gBAAgBC,W,EA1DvCD,gBAAS/N,UAAW,EACpB+N,gBAASK,UAAW,EACpBL,gBAAUM,WAAW,EACrBN,gBAAUO,WAAW,GACrBP,gBAAWQ,YAAW,GACtBR,gBAAQS,SAAW,GAEnBT,gBAAQU,SAAW,IACnBV,gBAAWW,YAAW,IACtBX,gBAAQkB,SAAW,IACnBlB,gBAAKY,MAAW,KAEhBZ,gBAAUa,WAAW,KAErBb,gBAAOc,QAAW,KAClBd,gBAAYe,aAAW,MAEvBf,gBAAAmB,UAAoBnB,gBAAgBM,WAAaN,gBAAgBO,WAAaP,gBAAgBQ,YAAcR,gBAAgBW,YAEpHX,gBAAUC,WAAQ,GAClBD,gBAAUE,WAAU,GACpBF,gBAAaG,cAAU,GCf1C,MAAMiB,EAAS,IAAIjvB,UACbkvB,EAAS,IAAIlvB,UAKb,MAAOmvB,gBAAgBplB,SA4NzB5V,YAAYwC,EAAgC,KAAMy4B,EAAwB,KACtEhL,EAAsB,EAAGC,EAAuB,GAChDpa,OAAM,GArNVrS,KAAMy3B,OAAU,CAAC,EAAG,EAAG,EAAG,GAMlBz3B,KAAE03B,GAAW,EAEb13B,KAAE23B,GAAW,EAGrB33B,KAAO0sB,QAAW,EAElB1sB,KAAO2sB,QAAW,EAElB3sB,KAAWwsB,YAAW,EAEtBxsB,KAAYysB,aAAW,EAMvBzsB,KAAS43B,UAAW,EA+LhB,IAAIC,EAAU94B,aAAkBw4B,QAAWx4B,EAAO84B,OAAS94B,EAC3DiB,KAAK+F,MAAM8xB,EAAQL,EAAIhL,EAAaC,E,CAzKxCz1B,cAAc+H,EAA+BG,EAAWC,EAAWkJ,EAAeC,EAC9EokB,EAAkB,EAAGC,EAAkB,EACvCH,EAAsB,EAAGC,EAAuB,GAChD,OAAO8K,QAAQnL,QAAQrtB,EAAQG,EAAGC,EAAGkJ,EAAOC,EAAQokB,EAASC,EAASH,EAAaC,E,CAkBvFz1B,eAAe+H,EAA+BG,EAAWC,EAAWkJ,EAAeC,EAC/EokB,EAAkB,EAAGC,EAAkB,EACvCH,EAAsB,EAAGC,EAAuB,EAAGqL,EAAsB,MACzE,IAQIC,EARAC,EAAgBj5B,aAAkBw4B,QAClCC,EAAKQ,EAAkBj5B,EAASy4B,GAAKD,QAAQU,OAC7CJ,EAASG,EAAkBj5B,EAAS84B,OAAoB94B,EAExD84B,EAAOxvB,OAAUnJ,EAAImJ,EAASwvB,EAAOxvB,QACrCA,EAAQwvB,EAAOxvB,MAAQnJ,GACvB24B,EAAOvvB,QAAWnJ,EAAImJ,EAAUuvB,EAAOvvB,SACvCA,EAASuvB,EAAOvvB,OAASnJ,GAEzB24B,GACAC,EAAMD,GACF/xB,MAAM8xB,EAAQ,KAAMrL,GAAenkB,EAAOokB,GAAgBnkB,GAE9DyvB,EAAM,IAAIR,QAAQM,EAAQ,KAAMrL,GAAenkB,EAAOokB,GAAgBnkB,GAE1EyvB,EAAI1vB,MAAQA,EACZ0vB,EAAIzvB,OAASA,EACbyvB,EAAIrL,QAAUA,EACdqL,EAAIpL,QAAUA,EAEd,IAAIuL,EAAiB,EAAIL,EAAOxvB,MAC5B8vB,EAAkB,EAAIN,EAAOvvB,OACjCpJ,GAAKg5B,EACL/4B,GAAKg5B,EACL9vB,GAAS6vB,EACT5vB,GAAU6vB,EAEV,IAAIC,EAAaL,EAAIP,GAAG,GAAIa,EAAaN,EAAIP,GAAG,GAAIc,EAAaP,EAAIP,GAAG,GAAIe,EAAaR,EAAIP,GAAG,GAC5FgB,EAA0BF,EAAKF,EAAKK,EAA2BF,EAAKF,EACpEK,EAwWZ,SAAgBhM,EAAiBC,EAAiB6K,GAC9C,IAAK,IAAI/4B,EAAY,EAAGA,EAAI,EAAGA,GAAK,EAChC+4B,EAAG/4B,IAAMiuB,EACT8K,EAAG/4B,EAAI,IAAMkuB,EAEjB,OAAO6K,CACX,CA9W2BmB,CAAOnB,EAAG,GAAIA,EAAG,GAAI,CAACt4B,EAAGC,EAAGD,EAAImJ,EAAOlJ,EAAGD,EAAImJ,EAAOlJ,EAAImJ,EAAQpJ,EAAGC,EAAImJ,IAC3FyvB,EAAIP,GAAK,IAAInc,aAAa,CAAC+c,EAAKM,EAAM,GAAKF,EAAgBH,EAAKK,EAAM,GAAKD,EAC3EH,GAAM,EAAII,EAAM,IAAMF,EAAgBH,EAAKK,EAAM,GAAKD,EACtDH,GAAM,EAAII,EAAM,IAAMF,EAAgBD,GAAM,EAAIG,EAAM,IAAMD,EAC5DL,EAAKM,EAAM,GAAKF,EAAgBD,GAAM,EAAIG,EAAM,IAAMD,IAEtD,IAAIG,EAAkCf,EAAiBD,UAYvD,OAXIgB,GAA8B,GAAfA,GACfb,EAAIvL,aAAeoM,EACnBb,EAAItL,cAAgBmM,EACpBb,EAAI1vB,OAASuwB,EACbb,EAAIzvB,QAAUswB,EACdb,EAAIH,UAAYgB,EAChBb,EAAIrL,SAAWkM,EACfb,EAAIpL,SAAWiM,GAEfb,EAAIH,UAAY,EAEbG,C,CAYX/gC,yBAAyBuvB,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,GAC5E,IAAIuwB,EAAuBtS,EAAQqR,UACf,GAAhBiB,IACA35B,GAAK25B,EACL15B,GAAK05B,EACLxwB,GAASwwB,EACTvwB,GAAUuwB,GAEd,IAAIjwB,EAAkBR,UAAUP,KAAK9B,MAAM7G,EAAIqnB,EAAQmG,QAASvtB,EAAIonB,EAAQoG,QAAStkB,EAAOC,GACxFjJ,EAASuJ,EAAKC,aAAawuB,EAAOtxB,MAAM,EAAG,EAAGwgB,EAAQle,MAAOke,EAAQje,QAASgvB,GAClF,OAAIj4B,EACOk4B,QAAQ7vB,OAAO6e,EAASlnB,EAAOH,EAAGG,EAAOF,EAAGE,EAAOgJ,MAAOhJ,EAAOiJ,OAAQjJ,EAAOH,EAAI0J,EAAK1J,EAAGG,EAAOF,EAAIyJ,EAAKzJ,EAAGkJ,EAAOC,GAEtH,I,CAMXkvB,SACA,OAAOx3B,KAAK84B,G,CAGZtB,OAAGv5B,GACH+B,KAAKy3B,OAAO,GAAKl6B,KAAKwL,IAAI9K,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC9D+B,KAAKy3B,OAAO,GAAKl6B,KAAKwL,IAAI9K,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC9D+B,KAAKy3B,OAAO,GAAKl6B,KAAKuL,IAAI7K,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAM+B,KAAKy3B,OAAO,GAChFz3B,KAAKy3B,OAAO,GAAKl6B,KAAKuL,IAAI7K,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAM+B,KAAKy3B,OAAO,GAChFz3B,KAAK84B,IAAM76B,C,CAIXoK,YACA,OAAIrI,KAAK03B,GACE13B,KAAK03B,GACX13B,KAAK63B,OACF73B,KAAKw3B,IAAMx3B,KAAKw3B,KAAOD,QAAQU,QAAWj4B,KAAKw3B,GAAG,GAAKx3B,KAAKw3B,GAAG,IAAMx3B,KAAK63B,OAAOxvB,MAAQrI,KAAK63B,OAAOxvB,MADpF,C,CAIzBA,UAAMpK,GACN+B,KAAK03B,GAAKz5B,EACV+B,KAAKwsB,cAAgBxsB,KAAKwsB,YAAcvuB,E,CAIxCqK,aACA,OAAItI,KAAK23B,GACE33B,KAAK23B,GACX33B,KAAK63B,OACF73B,KAAKw3B,IAAMx3B,KAAKw3B,KAAOD,QAAQU,QAAWj4B,KAAKw3B,GAAG,GAAKx3B,KAAKw3B,GAAG,IAAMx3B,KAAK63B,OAAOvvB,OAAStI,KAAK63B,OAAOvvB,OADrF,C,CAIzBA,WAAOrK,GACP+B,KAAK23B,GAAK15B,EACV+B,KAAKysB,eAAiBzsB,KAAKysB,aAAexuB,E,CAO1C45B,aACA,OAAO73B,KAAK+4B,O,CAOZlB,WAAO55B,GACH+B,KAAK+4B,SAAW96B,IAEpB+B,KAAK+4B,SAAW/4B,KAAK+4B,QAAQvkB,mBAC7BxU,KAAK+4B,QAAU96B,EACfA,GAAUA,EAAMsW,gB,CAkBpBuE,WAAWkgB,EAAiB,MACxB,OAAIh5B,KAAKyS,aAAezS,KAAK+4B,QAClB,MACX/4B,KAAKi5B,cAAcD,GACZh5B,KAAK+4B,QAAQ73B,UAAY,KAAOlB,KAAK63B,OAAO/e,a,CAQvD/S,MAAM8xB,EAAsB,KAAML,EAAwB,KACtDhL,EAAsB,EAAGC,EAAuB,GAChDzsB,KAAK63B,OAASA,EACd73B,KAAKwsB,YAAcA,EACnBxsB,KAAKysB,aAAeA,EAEhBoL,IACA73B,KAAK03B,GAAKG,EAAOxvB,MACjBrI,KAAK23B,GAAKE,EAAOvvB,OACjBtI,KAAKwsB,YAAcxsB,KAAKwsB,aAAeqL,EAAOxvB,MAC9CrI,KAAKysB,aAAezsB,KAAKysB,cAAgBoL,EAAOvvB,QAEpDtI,KAAKw3B,GAAKA,GAAMD,QAAQU,M,CAQ5BhQ,KAAK9T,EAAa6T,GACd,OAAIhoB,KAAKyS,WACEymB,QAAQC,UAEZt+B,MAAMK,OAAO+sB,KAAK9T,GAAKilB,MAAMrB,IAChC,IAAIsB,EAAMtB,EAAIF,OACd73B,KAAK63B,OAASwB,EACdr5B,KAAKwsB,YAAcxsB,KAAK03B,GAAK2B,EAAIhxB,MACjCrI,KAAKysB,aAAezsB,KAAK23B,GAAK0B,EAAI/wB,OAClC0f,GAAYA,EAASsR,MACrBt5B,KAAKmR,MAAMjG,MAAMyD,MAAO3O,KAAK,G,CAYrCu5B,iBAAiBr6B,EAAWC,EAAWkJ,EAAeC,GAClD,IAAIkxB,EAAYC,EAAah7B,EACzBi7B,EAAQ15B,KAAK63B,OAEb8B,EAAO35B,KAAK03B,GACZkC,EAAO55B,KAAK23B,GACZnL,EAAcxsB,KAAKwsB,YACnBC,EAAezsB,KAAKysB,aACpBoN,EAASH,EAAMrxB,MACfyxB,EAASJ,EAAMpxB,OACfokB,EAAU1sB,KAAK0sB,QACfC,EAAU3sB,KAAK2sB,QACnB,IAAIoN,EAAQ1xB,EACR2xB,EAAQ1xB,EAKZ,GAJIpJ,EAAImJ,EAAQsxB,EAAOjN,IAASqN,GAAU76B,EAAImJ,EAASsxB,EAAOjN,GAC1DxtB,EAAImJ,EAAQmkB,IAAankB,GAAUnJ,EAAImJ,EAASmkB,GAChDrtB,EAAImJ,EAASsxB,EAAOjN,IAASqN,GAAU76B,EAAImJ,EAAUsxB,EAAOjN,GAC5DxtB,EAAImJ,EAASmkB,IAAcnkB,GAAWnJ,EAAImJ,EAAUmkB,GACpDpkB,GAAS,GAAKC,GAAU,EAAG,OAAO,KACtC,IAAI2xB,EAAUvN,EAAUxtB,EAAIwtB,EAAUxtB,EAAI,EACtCg7B,EAAUvN,EAAUxtB,EAAIwtB,EAAUxtB,EAAI,EACtCg7B,EAASj7B,EAAIwtB,EAAUxtB,EAAIwtB,EAAU,EACrC0N,EAASj7B,EAAIwtB,EAAUxtB,EAAIwtB,EAAU,EACzCoN,GAASE,EACTD,GAASE,EAET,IAAIG,EAAkB,EAARhyB,EACViyB,EAAkB,KACtB,IACIA,EAAmBZ,EAAoBzQ,WAC1C,CAAC,MAAOpI,GACR,CACD,GAAIyZ,EAAK,CACL,GAAS,GAALp7B,GAAe,GAALC,GAAUkJ,GAASwxB,GAAUvxB,GAAUwxB,EACjD,OAAOQ,EAEX,IAAI9C,EAAMx3B,KAAK84B,IAAsBze,QACjCkgB,EAAYh9B,KAAKoB,MAAM64B,EAAG,GAAKqC,GAC/BW,EAAYj9B,KAAKoB,MAAM64B,EAAG,GAAKsC,GACnC,IAAI1oB,EAAkB,IAAIoI,WAAWnR,EAAQC,EAAS,GAItD,IADAkxB,EAAiB,EAAZe,EAAyB,EAATJ,GADrBV,GAAOe,EAAYJ,IADnBC,EAAmB,EAATR,IAGLp7B,EAAI,EAAGA,EAAIu7B,EAAOv7B,IACnB2S,EAAIqJ,IAAI6f,EAAIjgB,MAAMmf,EAAIA,EAAa,EAARO,GAAoB,EAAR1xB,GAAa5J,EAAIy7B,GAAqB,EAAVD,GACnET,GAAMa,EAEV,OAAOjpB,CACV,CAGD,IAAIqpB,EAAM,IAAI5/B,MAAME,QACpB0/B,EAAI1nB,KAAK1K,EAAOC,GAChBmyB,EAAIC,UAAW,EACf,IAAIlD,EAAe,KACnB,GAAS,GAALt4B,GAAe,GAALC,GAAUkJ,GAASwxB,GAAUvxB,GAAUwxB,EAAQ,CAEzD,IAAIa,GADJnD,EAAMx3B,KAAK84B,IAAiBze,SACf,GACTugB,EAAMpD,EAAG,GAGTqD,GAFMrD,EAAG,GAAKmD,GAEHhB,EACXmB,GAFMtD,EAAG,GAAKoD,GAEHhB,EACfpC,EAAK,CAACmD,EAAMR,EAASU,EAAID,EAAMR,EAASU,EACxCH,GAAOR,EAASJ,GAASc,EAAID,EAAMR,EAASU,EAC5CH,GAAOR,EAASJ,GAASc,EAAID,GAAOR,EAASJ,GAASc,EACtDH,EAAMR,EAASU,EAAID,GAAOR,EAASJ,GAASc,EAC/C,CACDL,EAAIM,cAAc/6B,KAAMi6B,EAASC,EAASH,EAAOC,EAAO,KAAM,EAAKxC,EAAI,YAEvEiD,EAAIO,SAAS/f,QACbwf,EAAIQ,QACJR,EAAIO,SAAS7f,MACbsf,EAAIO,SAAS9N,UACb,IAAIgO,EAAiBT,EAAIO,SAAS7N,QAAQ,EAAG,EAAG9kB,EAAOC,GAMvD,IALAmyB,EAAIt3B,UAEJiO,EAAM,IAAIoI,WAAWnR,EAAQC,EAAS,GACtCkxB,EAAK,EACLC,GAAOnxB,EAAS,GAAK+xB,EAChB57B,EAAI6J,EAAS,EAAG7J,GAAK,EAAGA,IACzB2S,EAAIqJ,IAAIygB,EAAG7gB,MAAMof,EAAKA,EAAMY,GAAUb,GACtCA,GAAMa,EACNZ,GAAOY,EAEX,OAAOjpB,C,CAWX6X,UAAU/pB,EAAWC,EAAWkJ,EAAeC,GAC3C,OAAOtI,KAAKu5B,iBAAiBr6B,EAAGC,EAAGkJ,EAAOC,E,CAO9C2wB,cAAc7uB,GACV,IAAI+J,EAAMnU,KAAK+4B,QAAQ5kB,IAClBnU,KAAKyS,YAAgBzS,KAAK+4B,UAAW/4B,KAAK+4B,QAAQ73B,YAAciT,GACjEtZ,MAAMK,OAAO+sB,KAAK9T,GAAKilB,MAAMrB,IACzB/3B,KAAK63B,OAASE,EAAIF,OAClBztB,GAAYA,GAAU,G,CAQlC+wB,iBACSn7B,KAAKyS,YAAczS,KAAK+4B,SACzB/4B,KAAK+4B,QAAQ51B,S,CAIjBi4B,YACA,OAAQp7B,KAAKyS,YAAczS,KAAK+4B,UAAY/4B,KAAK+4B,QAAQ73B,S,CAMlDwS,eACP,OAAO1T,KAAK2T,YAAc3T,KAAK+4B,SAAW/4B,KAAK+4B,QAAQ73B,WAAalB,KAAK+4B,QAAQrlB,Q,CAG1EA,aAASzV,GAChB+B,KAAK2T,UAAY1V,C,CAMX0W,mBACN,IAAI0kB,EAAMr5B,KAAK+4B,QACf/4B,KAAK+4B,QAAU,KACXM,GACAA,EAAI7kB,kB,CAWL6mB,cAAcn8B,EAAWC,EAAWkJ,EAAeC,GACtD,IAAI8D,EAAM,GAAGlN,KAAKC,KAAKkJ,KAASC,IAC3BtI,KAAKs7B,aACNt7B,KAAKs7B,WAAa,IAAIC,KAE1B,IAAIxD,EAAM/3B,KAAKs7B,WAAWE,IAAIpvB,GAC9B,OAAI2rB,IAEJA,EAAMR,QAAQkE,kBAAkBz7B,KAAMd,EAAGC,EAAGkJ,EAAOC,GAC/CyvB,IACAA,EAAI2D,UAAY17B,KAAK07B,WAErB17B,KAAKs7B,WAAWvoB,KAAO,KACvB/S,KAAKs7B,WAAW3wB,QAEpB3K,KAAKs7B,WAAW7gB,IAAIrO,EAAK2rB,GAElBA,E,EAvcKR,QAAMU,OAAG,IAAI5c,aAAa,CAAC,EAAG,EAAG,EAAK,EAAG,EAAK,EAAK,EAAG,IAEtDkc,QAAKoE,MAAG,IAAItgB,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE/Ckc,QAAMqE,OAAG,IAAIvgB,aAAa,CAAC,EAAG,EAAG,EAAK,EAAG,EAAK,EAAK,EAAG,I,MChB7DwgB,UAAbt/B,cAEYyD,KAAS87B,UAAQ,GACjB97B,KAAS+7B,UAAU,GACnB/7B,KAAOsZ,QAAW,C,CAS1BxW,IAAI/E,GACA,IAAIwM,EAAavK,KAAK87B,UAAU/9B,GAChC,OAAa,MAATwM,EAAsBA,GAE1BvK,KAAK+7B,UAAU/7B,KAAKsZ,SAAWvb,EACxBiC,KAAK87B,UAAU/9B,GAAOiC,KAAKsZ,U,CAStC0iB,MAAMj+B,GACF,IAAIwM,EAAavK,KAAK87B,UAAU/9B,GAChC,OAAgB,MAATwM,GAAiB,EAAIA,C,CAShC0xB,QAAQr7B,GACJ,IAAI7C,EAAWiC,KAAK+7B,UAAUn7B,GAC9B,OAAc,MAAP7C,OAAcwT,EAAYxT,C,QCxC5Bm+B,QAAb3/B,cASIyD,KAAOm8B,QAA2B,GAKlCn8B,KAAao8B,cAA2B,GAKxCp8B,KAAOq8B,QAAwB,E,CAO/BC,YAAYloB,GACR,OAAOpU,KAAKm8B,QAAQ/nB,E,CAQxBmoB,kBAAkBnoB,GACd,OAAO8kB,QAAQC,QAAQ,K,CAQ3BqD,kBAAkBroB,GACd,OAAO+kB,QAAQC,QAAQ,K,CAS3BsD,WAAWtoB,EAAauoB,GACpB,GAAIvoB,EAAIwoB,WAAW,UAAW,CAC1B,IAAIvoB,EAAOD,EAAI7V,UAAU,GACzB,OAAO49B,QAAQU,KAAKL,kBAAkBnoB,GAAMglB,MAAKjlB,IACzCuoB,GACAA,EAAUvoB,GACPA,IAEd,CAIG,OAFIuoB,GACAA,EAAUvoB,GACP+kB,QAAQC,QAAQhlB,E,CAS/B0oB,kBAAkBC,GACd,OAAO98B,KAAKo8B,cAAcU,E,CAG9BC,wBAAwBD,GACpB,OAAO5D,QAAQC,QAAQ,K,CAS3B6D,QAAQ7oB,EAAaC,GACjB,OAAO8kB,QAAQC,QAAQ,K,CAW3B8D,eAAe9oB,EAAaC,EAAc8oB,EAAsBC,GAC5D,OAAID,EACO,GAAGx/B,MAAM0/B,qBAAqBjpB,EAAK,OAAO+oB,KAAgBC,IAE1DhpB,C,EArGR+nB,QAAAU,KAAgB,IAAIV,Q,MCElBmB,IA2CT9gC,YAAY4X,GACRnU,KAAKs9B,KAAOD,IAAIE,UAAUppB,GAC1BnU,KAAKw9B,MAAQH,IAAII,QAAQtpB,E,CAzB7Bnd,kBAIIqmC,IAAIK,SAAWL,IAAIM,SAAYlxB,UAAiC8E,MAArB9E,SAASmxB,UAA8C,IAArBnxB,SAASmxB,SAAkBP,IAAII,QAAQhxB,SAASmxB,SAAW,KAAOnxB,SAASoxB,KAAOpxB,SAASqxB,UAAY,E,CAGxL9mC,wCACQuE,QAAQG,YAGZ2hC,IAAIU,kBAAkB,CAAC,gBAAiB,gBAAiB,WACzDV,IAAIU,kBAAkB,CAAC,cAAe,mBACtCV,IAAIU,kBAAkB,CAAC,MAAO,UAC9BV,IAAIU,kBAAkB,CAAC,OAAQ,YAC/BV,IAAIU,kBAAkB,CAAC,UAAW,eAClCV,IAAIU,kBAAkB,CAAC,UAAW,QAAS,MAAO,UAAW,QAC7DV,IAAIU,kBAAkB,CAAC,OAAQ,YAC/BV,IAAIU,kBAAkB,CAAC,QAAS,YAChCV,IAAIU,kBAAkB,CAAC,QAAS,Y,CAUhC5pB,UACA,OAAOnU,KAAKs9B,I,CAIZh+B,WACA,OAAOU,KAAKw9B,K,CAchBxmC,iBAAiBmd,EAAa6pB,GAC1B,IAAK7pB,EACD,OAAO6pB,GAAQX,IAAIM,UAAY,GAEnC,GAAIxpB,EAAIwoB,WAAW,UAAW,CAC1B,IAAIvoB,EAAOD,EAAI7V,UAAU,GACrB2/B,EAAO/B,QAAQU,KAAKN,YAAYloB,GACpC,IAAK6pB,EACD,OAAO9pB,EAEXA,EAAM8pB,CACT,CAED,IAAIC,EAAQ/pB,EAAI4K,WAAW,GAC3B,IAAyB,GAArB5K,EAAIjW,QAAQ,MAAwB,KAAVggC,EAAc,CAEhB,MAApBb,IAAIc,eACJhqB,EAAMkpB,IAAIc,aAAahqB,IAE3B,IAAIiqB,EAAMf,IAAI7hC,QAAQ2Y,GACtB,GAAW,MAAPiqB,EAAa,CACb,IAAI3/B,EAAI0V,EAAI5U,YAAY,KACxB4U,EAAMA,EAAI7V,UAAU,EAAGG,GAAK,IAAM2/B,EAAMjqB,EAAI7V,UAAUG,EACzD,CAED,GAAc,MAAVy/B,EACA/pB,EAAMkpB,IAAI9e,KAAK8e,IAAIK,SAAUvpB,EAAI7V,UAAU,QAC1C,CACD,GAAY,MAAR0/B,EAAc,CACdA,EAAOX,IAAIM,SACX,IAAK,IAAIh+B,KAAK09B,IAAIgB,UACd,GAAIlqB,EAAIwoB,WAAWh9B,GAAI,CACnBq+B,EAAOX,IAAIgB,UAAU1+B,GACrB,KACH,CAER,CACDwU,EAAMkpB,IAAI9e,KAAKyf,EAAM7pB,EACxB,CACJ,CAED,OAAOA,C,CAQXnd,qBAAqBmd,GACjB,GAAIkpB,IAAIiB,gBAAiB,CACrB,IAAIC,EAAS7gC,MAAM8gC,iBAAiBrqB,GAChC3U,EAAM69B,IAAIoB,iBAAiBF,GACpB,MAAP/+B,IACA2U,EAAMzW,MAAM0/B,qBAAqBjpB,EAAK3U,GAC7C,CAED,OAAO2U,C,CAMXnd,iBAAiBmd,GACb,IAA0B,GAAtBA,EAAIjW,QAAQ,MACZ,OAAOiW,EAEX,IAAIuqB,EAAQvqB,EAAI5V,MAAM,KAClBC,EAAMkgC,EAAMziC,OACZwC,EAAI,EACR,KAAOA,EAAID,GACP,GAAgB,KAAZkgC,EAAMjgC,GAAV,CAKK,GAAgB,MAAZigC,EAAMjgC,GAAY,CACvB,IAAI8L,EAAgB9L,EAAI,EACxB,GAAI8L,GAAS,GAAsB,OAAjBm0B,EAAMn0B,GAAiB,CACrCm0B,EAAMh0B,OAAOH,EAAO,GACpB/L,GAAO,EACPC,IACA,QACH,CACJ,CAEDA,GAFC,MAZGigC,EAAMh0B,OAAOjM,EAAG,GAChBD,IAgBR,OADAkgC,EAAMziC,OAASuC,EACRkgC,EAAMngB,KAAK,I,CAGtBvnB,uBAAuBmd,GACnB,OAAIA,EAAIlY,QAAU,IAA4B,KAAtBkY,EAAI4K,WAAW,IAAoC,KAAvB5K,EAAI4K,WAAW,IACxD,SAAW5K,EAEXA,C,CAQfnd,YAAYgnC,EAAc1+B,GACtB,IAAKA,EAAM,MAAO,GAGlB,GAAIA,EAAKpB,QAAQ,KAAO,EACpB,OAAOoB,EAEX,GAAI0+B,EAAM,CACN,IAAIE,EAAQ5+B,EAAKyf,WAAW,GACd,MAAVmf,GAA2B,KAAVA,IAEb5+B,EADqC,KAArC0+B,EAAKjf,WAAWif,EAAK/hC,OAAS,GACvB+hC,EAAO,IAAM1+B,EAEb0+B,EAAO1+B,EAEzB,CAED,OAAO+9B,IAAIp1B,UAAU3I,E,CASzBtI,eAAemd,GACX,IAAIwqB,EAAcxqB,EAAI5U,YAAY,KAClC,OAAOo/B,EAAM,EAAIxqB,EAAI7V,UAAU,EAAGqgC,EAAM,GAAK,E,CAQjD3nC,mBAAmBmd,GACf,IAAIwqB,EAAcxqB,EAAI5U,YAAY,KAClC,OAAOo/B,EAAM,EAAIxqB,EAAI7V,UAAUqgC,EAAM,GAAKxqB,C,CAQ9Cnd,oBAAoBmd,GAChB,IAAI5J,EAAgB4J,EAAIjW,QAAQ,KAChC,OAAOqM,GAAS,EAAI4J,EAAI7V,UAAUiM,GAAS,I,CAQ/CvT,yBAAyB4nC,EAA6BC,GAClD,IAAK,IAAIr/B,KAAOo/B,EACZvB,IAAIoB,iBAAiBj/B,GAAOq/B,EAChCxB,IAAIiB,iBAAkB,C,EAtOnBjB,IAAO7hC,QAA2B,GAGlC6hC,IAAQM,SAAW,GAEnBN,IAASgB,UAA2B,GAGpChB,IAAQK,SAAW,GAOXL,IAAgBoB,iBAA2B,GA0CnDpB,IAAYc,aAAa,SAAUhqB,GACtC,OAAOA,CACX,E,MCpES2qB,YAoDTviC,YAAYwiC,GALZ/+B,KAAKg/B,MAAQ,GACbh/B,KAAIi/B,KAAQ,GACZj/B,KAAQk/B,UAAY,EACpBl/B,KAAQm/B,SAAW,GAGfn/B,KAAKo/B,OAASL,EAEd,IADA,IAAuBJ,EAAaxjB,EAAhCkkB,EAAgB,KAEhBA,EAAQN,EAAI7gC,QAAQ,SAAUmhC,IAClB,IAFH,CAKT,IADAlkB,EAAMkkB,EAAQ,KAEVlkB,EAAM4jB,EAAI7gC,QAAQ,OAAQid,IAChB,IACkB,MAAxB4jB,EAAIngC,OAAOuc,EAAM,IACjBA,GAAO,EAIf,GAAIA,EAAM,EACN,KAAM,2BAA6B4jB,EAGvCJ,EAAMI,EAAI7gC,QAAQ,KAAMmhC,GACxB,IAAIrJ,EAAe8I,YAAYQ,aAAaP,EAAIQ,OAAOF,EAAOV,EAAMU,GAAQ,MAC5D,QAAZrJ,EAAM,GACNh2B,KAAKg/B,MAAMhJ,EAAM,IAAM+I,EAAIQ,OAAOZ,EAAM,EAAGxjB,EAAMwjB,EAAM,GACpC,YAAZ3I,EAAM,KAEb2I,EAAMI,EAAI7gC,QAAQ,WAAYmhC,GAC9BV,GAAO,WAAW1iC,OAClB+D,KAAKi/B,KAAKjJ,EAAM,IAAM+I,EAAIQ,OAAOZ,EAAM,EAAGxjB,EAAMwjB,EAAM,GACtD3+B,KAAKm/B,UAAYnJ,EAAM,GAAK,KAGhCqJ,EAAQlkB,EAAM,CACjB,C,CApFLnkB,oBAAoB+G,EAAayhC,GAU7B,IATA,IAMI17B,EAEA27B,EARAn6B,EAAa,GAObq5B,GAAe,EAEVlgC,EAAY,EAAG+G,EAAYzH,EAAI9B,OAAQwC,EAAI+G,EAAG/G,IAEnD,GADAqF,EAAI/F,EAAIa,OAAOH,GACX,uBAAuBP,QAAQ4F,IAAM,EAAzC,CAKI,GAJI66B,GAAO,GAAMlgC,EAAIkgC,EAAO,IACxBc,EAAO1hC,EAAIwhC,OAAOZ,EAAKlgC,EAAIkgC,GAC3Br5B,EAAIjJ,KAAKojC,IAEJ,KAAL37B,GAAiB,KAALA,EAAU,CACtB,IAAI47B,EAAe3hC,EAAIG,QAAQ4F,EAAGrF,EAAI,GACtC,GAAIihC,EAAO,EACP,KAAM,eAAiB3hC,EAE3BuH,EAAIjJ,KAAK0B,EAAIwhC,OAAO9gC,EAAI,EAAGihC,EAAOjhC,EAAI,IACtCA,EAAIihC,EACJf,GAAO,EACP,QACH,CACQ,KAAL76B,GAAY07B,GAASl6B,EAAIrJ,OAAS,IAClCwjC,EAAOn6B,EAAIA,EAAIrJ,OAAS,GAAK,IACzB,aAAaiC,QAAQuhC,GAAQ,IAC7BD,EAAMG,SAAWF,IAEzBd,GAAO,CAEV,MACGA,EAAM,IAAGA,EAAMlgC,GAMvB,OAJIkgC,EAAMn5B,GAAMA,EAAIm5B,EAAO,IACvBc,EAAO1hC,EAAIwhC,OAAOZ,EAAKn5B,EAAIm5B,GAC3Br5B,EAAIjJ,KAAKojC,IAENn6B,C,CA8CXs6B,QAAQ7qB,EAAsB,MAC1B,IAAIsV,EAAYtV,EAAO/U,KAAKg/B,MAAMjqB,GAAQ/U,KAAKo/B,OAC/C,IAAK/U,EACD,KAAM,kBAAoBtV,EAE9B,OAAOsV,C,CAGXwV,cAAcC,GACV,IAAIzV,EAAY,GAChB,IAAK,IAAI5rB,KAAKuB,KAAKi/B,KACXa,EAAQ5hC,QAAQO,EAAI,MAAQ,IAC5B4rB,GAAKrqB,KAAKi/B,KAAKxgC,IAGvB,OAAO4rB,C,QC1GF0V,WAiBTxjC,YAAYyjC,GAZZhgC,KAAMigC,OAAU,GAChBjgC,KAAIkgC,KAAW,GAOflgC,KAAO2/B,QAAW,GAClB3/B,KAACmgC,EAAW,EAIRngC,KAAKggC,aAAeA,C,CAGxBI,UAAUC,GACNA,EAAOJ,OAAO5jC,KAAK2D,MACnBA,KAAKmgC,EAAIE,EAAOF,EAAI,EACpBngC,KAAKqgC,OAASA,C,CAGlBC,aAAaC,EAAmBh1B,GACxBg1B,IACAvgC,KAAKwgC,cAAgBj1B,EACrBg1B,EAAYA,EAAUE,QAAQ,UAAW,IACzCzgC,KAAKugC,UAAY,WACb,OAAQvgC,KAAaugC,EACzB,EACAvgC,KAAKugC,UAAUG,YAAcH,E,CAIrCI,SAASjL,EAAUpwB,GACf,OAAOtF,KAAK4gC,UAAUlL,EAAKpwB,IAAOy6B,WAAWc,K,CAGzCD,UAAUlL,EAAUpwB,EAAY1E,GACpC,GAAIZ,KAAKigC,OAAOhkC,OAAS,IAAM+D,KAAKkgC,KAAM,OAAO56B,EAEjD,GADuBA,EAAIrJ,OACvB+D,KAAKugC,UAAW,CAChB,IAAIO,IAAmB9gC,KAAKugC,UAAUnjC,KAAKs4B,GAE3C,GADuB,IAAvB11B,KAAKwgC,gBAAsBM,GAASA,IAC/BA,GAAOf,WAAWgB,kBAAmB,OAAOz7B,CACpD,CAOD,IANGtF,KAAKghC,WAAYjB,WAAWgB,mBAC/B/gC,KAAKkgC,MAAQ56B,EAAIjJ,KAAK2D,KAAKkgC,MAC3BlgC,KAAKigC,OAAOhkC,OAAS,GAAK+D,KAAKigC,OAAOr1B,SAAQ,SAAUkrB,EAAevrB,EAAelM,GAClFy3B,EAAE8K,UAAUlL,EAAKpwB,EAAK1E,EAC1B,IAEIZ,KAAKggC,aAAa/jC,OAAS,GAAK+D,KAAK2/B,QAAQ1jC,OAAS,EAEtD,IADA,IAAIglC,EACKxiC,EAAY,EAAG+G,EAAYxF,KAAKggC,aAAa/jC,OAAQwC,EAAI+G,EAAG/G,IAE7DuB,KAAKggC,aAAavhC,GAAGygC,UAAYt+B,IAGrCqgC,EAAWjhC,KAAKggC,aAAavhC,GAAGyiC,KAAKrB,cAAc7/B,KAAK2/B,UAC3C1jC,OAAS,IAClB+D,KAAKggC,aAAavhC,GAAGygC,SAAWt+B,EAChC0E,EAAI,GAAK27B,EAAW37B,EAAI,IAKpC,OAAOA,C,EAtEIy6B,WAAIc,KAAW,EAEfd,WAAiBgB,mBAAG,ECWvC,MAAMI,EAAmB,IAAIC,OAAO,KAAM,KAIpCC,EAA4B,IAAID,OAAO,gCAAmC,K,MAMnEE,cAUTtqC,kBAAkBuqC,EAAkBxC,EAAayC,GAC7C,IAAKzC,GAAsB,IAAfA,EAAI9iC,OAEZ,OADA3E,QAAQsvB,MAAM,2BAA6B2a,GACpC,KAGX,IAAKC,GAAgBF,cAAcG,SAASF,GAExC,OADAjqC,QAAQC,KAAK,sCAAwCgqC,GAC9CD,cAAcG,SAASF,GAGlCxC,EAAMA,EAAI0B,QAAQU,EAAU,IAC5B,IAAID,EAAO,IAAIpC,YAAYC,GAE3B,OADAuC,cAAcG,SAASF,GAAYL,EAC5BA,C,CAGXlqC,eAAe0qC,EAAYC,EAAYhE,GACnC,IAAIt+B,EAA6B,CAC7BuiC,OAAQ,IAAI7B,WAAW,IACvB8B,OAAQ,IAAI9B,WAAW,IACvB+B,aAAc,IAAIlxB,IAClBmxB,KAAM,IAAInxB,KAGV6wB,EAA+B,GAEnCC,EAAKA,EAAGjB,QAAQU,EAAU,IAC1BQ,EAAKA,EAAGlB,QAAQU,EAAU,IAE1BG,cAAcU,eAAe3iC,EAAOuiC,OAAQF,EAAIriC,EAAO0iC,KAAMN,EAAU9D,GACvE2D,cAAcU,eAAe3iC,EAAOwiC,OAAQF,EAAItiC,EAAO0iC,KAAMN,EAAU9D,GAEvE,IAAK,IAAIsE,KAAOR,EACRQ,EAAIf,KACJ7hC,EAAOyiC,aAAah/B,IAAIm/B,EAAIltB,MAE5Bzd,QAAQC,KAAK,8BAA8B0qC,EAAIltB,QAGvD,OAAO1V,C,CAGXrI,oBAAoB0qC,EAAYC,EAAYhE,GACxC,IAAIt+B,EAA6B,CAC7BuiC,OAAQ,IAAI7B,WAAW,IACvB8B,OAAQ,IAAI9B,WAAW,IACvB+B,aAAc,IAAIlxB,IAClBmxB,KAAM,IAAInxB,KAGV6wB,EAA+B,GAQnC,OANAC,EAAKA,EAAGjB,QAAQU,EAAU,IAC1BQ,EAAKA,EAAGlB,QAAQU,EAAU,IAE1BG,cAAcU,eAAe3iC,EAAOuiC,OAAQF,EAAIriC,EAAO0iC,KAAMN,EAAU9D,GACvE2D,cAAcU,eAAe3iC,EAAOwiC,OAAQF,EAAItiC,EAAO0iC,KAAMN,EAAU9D,GAEhE39B,KAAKkiC,kBAAkB7iC,EAAQoiC,EAAU,E,CAG5CzqC,yBAAyBqI,EAA4BoiC,EAA8Bl3B,GACvF,IAAI43B,EACAC,EAAcX,EAASxlC,OAC3B,IAAK,IAAIwC,EAAI8L,EAAO9L,EAAI2jC,EAAa3jC,IAAK,CACtC,IAAIwjC,EAAMR,EAAShjC,GACfwjC,EAAIf,KACJ7hC,EAAOyiC,aAAah/B,IAAIm/B,EAAIltB,OAEvBotB,IAAQA,EAAS,IACtBA,EAAO9lC,KAAK4lC,GAEnB,CAED,OAAKE,EAGEtnC,MAAMK,OAAO+sB,KAAKka,EAAOE,KAAIC,GAAMA,EAAGvtB,QAAOqkB,MAAKmJ,IACrD,IAAIv3B,EAAMm3B,EAAOlmC,OACjB,IAAK,IAAIwC,EAAI,EAAGA,EAAIuM,EAAKvM,IAAK,CAC1B,IAAIwjC,EAAME,EAAO1jC,GACbyiC,EAAOqB,EAAM9jC,GACjB,GAAKyiC,EAIA,CACD7hC,EAAOyiC,aAAah/B,IAAIm/B,EAAIltB,MAE5B,IAAImrB,EAAOgB,EAAKtB,QAAQqC,EAAIO,UACxBP,EAAI1gC,KAAKg/B,UACT0B,EAAI1gC,KAAK2+B,KAAOA,GAEhBoB,cAAcU,eAAeC,EAAI1gC,KAAM2+B,EAAM7gC,EAAO0iC,KAAMN,EAAUpE,IAAII,QAAQwE,EAAIltB,OACpFktB,EAAI1gC,KAAK2+B,KAAO,GAEvB,KAdU,CACP,IAAID,EAASgC,EAAI1gC,KAAK8+B,OAAOJ,OAC7BA,EAAOv1B,OAAOu1B,EAAO/hC,QAAQ+jC,EAAI1gC,MAAO,EAC3C,CAYJ,CACD,OAAIkgC,EAASxlC,OAASmmC,EACXd,cAAcY,kBAAkB7iC,EAAQoiC,EAAUW,GAElD/iC,CAAM,IA1BV65B,QAAQC,QAAQ95B,E,CAiCvBrI,sBAAsBqpC,EAAoBjB,EAAgB2C,EAAmBN,EAA8B9D,GAC/G,IAAIp8B,EAAkBkhC,EAClBvC,EAAcnrB,EAAc2tB,EAC5B/D,EAAa3I,EACbv3B,EAAW+G,EAAW9F,EACtBijC,EAAQvD,EAAO7gC,MAAM,MAEzB,IAAKE,EAAI,EAAGA,EAAIkkC,EAAM1mC,OAAQwC,IAE1B,GADAyhC,EAAOyC,EAAMlkC,KACTyhC,EAAKjkC,OAAS,KAClB0iC,EAAMuB,EAAKhiC,QAAQ,MACP,IAARygC,GAGJ,GAFIA,GAAO,IAAGuB,EAAOA,EAAKX,OAAO,EAAGZ,KAE/BA,EAAMuB,EAAKhiC,QAAQ,MAAQ,EAAhC,CACIukC,EAAUpC,EAAOJ,OAAOI,EAAOJ,OAAOhkC,OAAS,GAC/C,IAAI+jC,EAAeK,EAAOL,aAC1B,GAAIyC,IAAYA,EAAQ1tB,KAAM,CAC1BirB,EAAa/jC,OAAS,GAAK6iC,YAAYQ,aAAaY,EAAMuC,GAC1DA,EAAQvC,MAAQ,KAAOA,EACvB,QACH,CAED3+B,EAAO,IAAIw+B,WAAWC,GACtBz+B,EAAK2+B,KAAOA,EACZ3+B,EAAKy/B,WAAY,EACjBhB,EAAa/jC,OAAS,GAAK6iC,YAAYQ,aAAaY,EAAM3+B,GAC1DA,EAAK6+B,UAAUC,EAElB,KAfD,CAsBA,IALA9+B,EAAO,IAAIw+B,WAAWM,EAAOL,cAC7Bz+B,EAAK2+B,KAAOA,EACZ3+B,EAAKy/B,WAAY,EAEjBjsB,EAAO,IACFrV,EAAIi/B,EAAM,EAAGn5B,EAAI06B,EAAKjkC,OAAQyD,EAAI8F,EAAG9F,IAAK,CAC3C,IAAIoE,EAAYo8B,EAAKthC,OAAOc,GAC5B,GAAU,MAANoE,GAAmB,OAANA,GAAoB,MAANA,EAAW,MAC1CiR,GAAQjR,CACX,CAED,OADAvC,EAAKwT,KAAOA,EACJA,GACJ,IAAK,SACL,IAAK,UAcD,IAbAxT,EAAKqhC,IAAM1C,EACX3+B,EAAKy/B,UAAwC,MAA5Bd,EAAK2C,MAAM,cACvBthC,EAAKy/B,UAKN1pC,QAAQovB,IAAI,6BAA+BwZ,EAAKX,OAAOZ,EAAMp9B,EAAKwT,KAAK9Y,QAAU,MAJjF+5B,EAAQkK,EAAKO,QAAQ,OAAQ,IAAIliC,MAAM,OACvCgD,EAAK++B,aAAatK,EAAM,GAAa,WAATjhB,EAAoBusB,cAAcwB,UAAYxB,cAAcyB,YACxFxhC,EAAK2+B,KAAO3+B,EAAK2+B,MAIrB3+B,EAAK6+B,UAAUC,GACfA,EAAS9+B,EAETy0B,EAAQkK,EAAKX,OAAO7/B,GAAGnB,MAAM8iC,GACxB3hC,EAAI,EAAGA,EAAIs2B,EAAM/5B,OAAQyD,IAC1BwgC,EAAOlK,EAAMt2B,GACbwgC,EAAKjkC,QAAU8lC,EAAKj/B,IAAIo9B,GAE5B,MAEJ,IAAK,MACL,IAAK,QAeD,IAdA3+B,EAAKqhC,IAAM1C,EACX3+B,EAAKy/B,WAAY,EACL,SAARjsB,IAEA0tB,GADApC,EAASA,EAAOA,QACCJ,OAAOI,EAAOJ,OAAOhkC,OAAS,GAE/CwmC,EAAQvC,KAAOuC,EAAQG,IACvBH,EAAQzB,WAAY,EACpByB,EAAQlC,UAAY,MAExBh/B,EAAK6+B,UAAUC,GACfA,EAAS9+B,EAETy0B,EAAQkK,EAAKX,OAAO7/B,GAAGnB,MAAM8iC,GACxB3hC,EAAI,EAAGA,EAAIs2B,EAAM/5B,OAAQyD,IAC1BwgC,EAAOlK,EAAMt2B,GACbwgC,EAAKjkC,QAAkB,WAARikC,GAAqB6B,EAAKj/B,IAAIo9B,GAEjD,MAEJ,IAAK,QACD3+B,EAAKqhC,IAAM1C,EAEXuC,GADApC,EAASA,EAAOA,QACCJ,OAAOI,EAAOJ,OAAOhkC,OAAS,GAC/CsF,EAAKy/B,UAAYyB,EAAQzB,UACpBz/B,EAAKy/B,YACNz/B,EAAKg/B,UAAYkC,EAAQlC,UACzBh/B,EAAKi/B,cAAgBiC,EAAQjC,eAAiBc,cAAcwB,UAAYxB,cAAcyB,WAAazB,cAAcwB,WAIrHvhC,EAAK6+B,UAAUC,GACfA,EAAS9+B,EACT,MAEJ,IAAK,SAEDkhC,GADApC,EAASA,EAAOA,QACCJ,OAAOI,EAAOJ,OAAOhkC,OAAS,GAC/CsF,EAAKy/B,UAAYyB,EAAQzB,UACpBz/B,EAAKy/B,YACNz/B,EAAK2+B,KAAO3+B,EAAK2+B,MAErB3+B,EAAK6+B,UAAUC,GACf,MAEJ,IAAK,WACDrK,EAAQ8I,YAAYQ,aAAaY,EAAM,MACvC,IACI8C,EADAC,EAAsBjN,EAAM,GAE5BiN,EAAYtG,WAAW,KACvBsG,EAAc5F,IAAI9e,KAAKof,EAAUsF,GAC5BA,EAAYtG,WAAW,KAC5BsG,EAAc5F,IAAIE,UAAU0F,EAAY3kC,UAAU,KAGlD0kC,EAAc1B,cAAcG,SAASwB,GAChCD,IACDC,EAAc,YAAcA,IAEpCD,EAAc1B,cAAcG,SAASwB,IAEhCD,GAAe1B,cAAc4B,sBAC9B5B,cAAc4B,oBAAoBD,GAClCD,EAAc1B,cAAcG,SAASwB,IAGzC,IAAIT,EAAuB,QAAZxM,EAAM,GAAeA,EAAM,GAAK,KAC/CyL,EAASplC,KAAK,CAAE0Y,KAAMkuB,EAAaT,SAAUA,EAAUjhC,KAAMA,EAAM2/B,KAAM8B,IACzEzhC,EAAK6+B,UAAUC,IAEV1B,EAAM3I,EAAM,GAAG93B,QAAQ,MAAQ,GAC5B8kC,IACA9C,EAAO8C,EAAYpD,QAAQ4C,GAC3BxiC,KAAKgiC,eAAezgC,EAAM2+B,EAAM6B,EAAMN,EAAUpE,IAAII,QAAQwF,KAEhE1hC,EAAK2+B,KAAO,KAGZ3+B,EAAK++B,aAAatK,EAAM,GAAGuJ,OAAOZ,EAAM,GAAI2C,cAAcwB,WAEtDE,IACAzhC,EAAK2+B,KAAO8C,EAAYpD,QAAQ4C,KAExC,MAEJ,IAAK,UACDxM,EAAQ8I,YAAYQ,aAAaY,EAAM,MACvCwC,EAAQ1M,EAAM,GACdz0B,EAAKy+B,aAAa3jC,KAAK,CAAEkF,KAAMA,EAAM2/B,KAAMI,cAAcG,SAASiB,GAAQ/D,IAAKp9B,EAAK2+B,KAAKjkC,SACzF,MAEJ,QACIsF,EAAK6+B,UAAUC,GAjItB,C,EAnJFiB,cAAQ6B,SAAW,EACnB7B,cAASwB,UAAW,EACpBxB,cAAUyB,WAAW,EACrBzB,cAAY8B,aAAW,EAEvB9B,cAAQG,SAAgC,GCtB7C,MAAO4B,eAAela,WA8HxB5sB,YAAYmlC,EAAYC,EAAY2B,EAAgB,KAAMC,EAAe,KAAMC,EAA2B,MAEtG,GADAnxB,QA3HIrS,KAAWyjC,YAAiB,KAiG5BzjC,KAAe0jC,gBAAW,EAKlC1jC,KAAG2jC,IAAQ,GAMX3jC,KAAQ4jC,SAAQ,KAEhB5jC,KAAO6jC,QAAU,KAEjB7jC,KAAU8jC,WAAQ,IAYRpC,IAASC,EAAK,KAAM,eAC1B3hC,KAAKyjC,YAAcD,EACnBxjC,KAAKK,MAAQgjC,OAAOU,OACpB/jC,KAAKgkC,IAAMtC,EACX1hC,KAAKikC,IAAMtC,EACX3hC,KAAKkkC,SAAWX,GAAoB,GACxB,MAAZD,IAAqBD,OAAOc,SAASb,GAAYtjC,MACjDA,KAAKokC,mBACLpkC,KAAK2S,MAAO,EACZ3S,KAAKqkC,iBAAmBv6B,OAAOw6B,e,CA3HnCttC,cAAc0qC,EAAYC,EAAY2B,EAAgB,KAAMC,EAAe,KAAMC,EAAoB,MACjG,OAAO,IAAIH,OAAO3B,EAAIC,EAAI2B,EAAUC,EAASC,E,CA8BjDxsC,qBAAqButC,EAAgBC,EAAgBC,EAAa3H,EAAiB4H,EAAwBlB,EAAoB,MAC3H,GAAI1G,GAAcuG,OAAOc,SAASrH,GAC9B,OAAOuG,OAAOc,SAASrH,GAE3B,IAAI6H,EAA0BtB,OAAOuB,kBAAkBvB,OAAOwB,cAAgBN,EAASC,GACvF,IAAKG,EACD,MAAM,IAAIzb,MAAM,0BAA4Bqb,EAAS,IAAMC,GAE/D,IAAIM,EAAc,GACdC,EAAoB,GACxB,GAAIN,EACA,IAAK,IAAIhmC,KAAKgmC,EACVM,GAAa,WAAatmC,EAAI,KAC9BqmC,EAAOrmC,IAAK,EAGpB,IAAIijC,EAAYiD,EAAI/C,OAAOjB,SAASmE,EAAQ,IACxCnD,EAAYgD,EAAI9C,OAAOlB,SAASmE,EAAQ,IAC5C,OAAmBJ,GACDrB,OAAO37B,QAASq9B,EAAYrD,EAAGnjB,KAAK,MAAOwmB,EAAYpD,EAAGpjB,KAAK,MAAOue,EAAkB6H,EAAKpB,QAASC,E,CAG5HxsC,kBAAkBuqC,EAAkBxC,GAChCuC,cAAc0D,WAAWzD,EAAUxC,E,CAUvC/nC,kBAAkButC,EAAgB7C,EAAYC,EAAY4B,GACtD,IAAI3iC,EAAayiC,OAAOwB,cAAgBN,EACpCU,EAAM3D,cAAc4D,QAAQxD,EAAIC,GAC9BsD,EAAK1B,QAAUA,EACrBF,OAAOuB,kBAAkBhkC,GAAMqkC,C,CASnCjuC,oBAAoButC,EAAgBC,EAAgB9C,EAAYC,EAAY4B,GACxE,IAAI3iC,EAAayiC,OAAOwB,cAAgBN,EAASC,EAC7CS,EAAM3D,cAAc4D,QAAQxD,EAAIC,GAC9BsD,EAAK1B,QAAUA,EACrBF,OAAOuB,kBAAkBhkC,GAAMqkC,C,CA6CzBb,mBACNpkC,KAAKmlC,WACLnlC,KAAKgU,cAAc,E,CAObW,mBACN0a,mBAAmB+V,YAAYC,aAAarlC,KAAKslC,UACjDjW,mBAAmB+V,YAAYC,aAAarlC,KAAKulC,UACjDlW,mBAAmB+V,YAAYI,cAAcxlC,KAAK4jC,UAClD5jC,KAAKslC,SAAWtlC,KAAKulC,SAAWvlC,KAAK4jC,SAAW,KAChD5jC,KAAK6jC,QAAU,KACf7jC,KAAK8jC,WAAa,GAClB9jC,KAAKgU,cAAc,GACnBhU,KAAK0jC,gBAAkB,C,CAGnByB,WACJ,GAAKnlC,KAAKgkC,KAAQhkC,KAAKikC,MAAOjkC,KAAK6jC,QAAnC,CAEA7jC,KAAKylC,YAAa,EAClBzlC,KAAK6jC,QAAU,GAIf,IAQI6B,EAAUjnC,EAAsB+G,EARhCmgC,EAA4BtW,mBAAmB+V,YACnDplC,KAAK4jC,SAAW+B,EAAGC,gBACnB5lC,KAAKslC,SAAWjC,OAAOwC,cAAcF,EAAI3lC,KAAKgkC,IAAK2B,EAAGG,eACtD9lC,KAAKulC,SAAWlC,OAAOwC,cAAcF,EAAI3lC,KAAKikC,IAAK0B,EAAGI,iBAEtDJ,EAAGK,aAAahmC,KAAK4jC,SAAU5jC,KAAKslC,UACpCK,EAAGK,aAAahmC,KAAK4jC,SAAU5jC,KAAKulC,UAMpC,IAAIU,EAAwBjmC,KAAKyjC,YAAczjC,KAAKyjC,YAAYxnC,OAAS,EACzE,IAAKwC,EAAI,EAAGA,EAAIwnC,EAAexnC,GAAK,EAChCknC,EAAGO,mBAAmBlmC,KAAK4jC,SAAU5jC,KAAKyjC,YAAYhlC,EAAI,GAAIuB,KAAKyjC,YAAYhlC,IAInF,GADAknC,EAAGQ,YAAYnmC,KAAK4jC,WACf+B,EAAGS,oBAAoBpmC,KAAK4jC,SAAU+B,EAAGU,aAC1C,MAAMV,EAAGW,kBAAkBtmC,KAAK4jC,UAGpC,IAAI2C,EAAsBZ,EAAGS,oBAAoBpmC,KAAK4jC,SAAU+B,EAAGa,iBAEnE,IAAK/nC,EAAI,EAAGA,EAAI8nC,EAAa9nC,IAAK,CAC9B,IAAIgoC,EAAed,EAAGe,iBAAiB1mC,KAAK4jC,SAAUnlC,IAEtDinC,EAAM,CAAEiB,QAAS,UAAWC,MAAO,KAAMC,SAAU,EAAGp6B,SAD3Ck5B,EAAGmB,mBAAmB9mC,KAAK4jC,SAAU6C,EAAQ1xB,MACkBA,KAAM0xB,EAAQ1xB,KAAMxJ,KAAMk7B,EAAQl7B,KAAM+F,SAAS,EAAOy1B,QAAQ,EAAOC,SAAU,KAAMC,cAAe,IACxKlyB,KAAK7W,QAAQ,OAAS,IAC1BwnC,EAAI3wB,KAAO2wB,EAAI3wB,KAAKwqB,OAAO,EAAGmG,EAAI3wB,KAAK9Y,OAAS,GAChDypC,EAAIp0B,SAAU,EACdo0B,EAAIj5B,SAAWk5B,EAAGmB,mBAAmB9mC,KAAK4jC,SAAU8B,EAAI3wB,OAE5D/U,KAAK6jC,QAAQxnC,KAAKqpC,EACrB,CAED,IAAKjnC,EAAI,EAAG+G,EAAIxF,KAAK6jC,QAAQ5nC,OAAQwC,EAAI+G,EAAG/G,IAWxC,QAVAinC,EAAM1lC,KAAK6jC,QAAQplC,IACfwoC,cAAgBxoC,EACpBinC,EAAIn7B,MAAQ,EACZm7B,EAAIznC,MAAQ,CAACynC,EAAIj5B,SAAU,MAC3Bi5B,EAAIwB,SAAWxB,EAAI3wB,KACnB2wB,EAAI3wB,KAAO/U,KAAKkkC,SAASwB,EAAIwB,UAAYlnC,KAAKkkC,SAASwB,EAAIwB,UAAYxB,EAAIwB,SAC3ElnC,KAAK8jC,WAAW4B,EAAI3wB,MAAQ2wB,EAC5BA,EAAIyB,MAAQnnC,KACZ0lC,EAAI0B,cAAgB,GAEZ1B,EAAIn6B,MACR,KAAKo6B,EAAG0B,IACJ3B,EAAI/U,IAAM+U,EAAIp0B,QAAUtR,KAAKsnC,YAActnC,KAAKunC,WAChD,MACJ,KAAK5B,EAAG6B,MACJ9B,EAAI/U,IAAM+U,EAAIp0B,QAAUtR,KAAKynC,YAAcznC,KAAK0nC,WAChD,MACJ,KAAK/B,EAAGgC,WACJjC,EAAI/U,IAAM+U,EAAIp0B,QAAUtR,KAAK4nC,eAAiB5nC,KAAK6nC,cACnD,MACJ,KAAKlC,EAAGmC,WACJpC,EAAI/U,IAAM+U,EAAIp0B,QAAUtR,KAAK+nC,eAAiB/nC,KAAKgoC,cACnD,MACJ,KAAKrC,EAAGsC,WACJvC,EAAI/U,IAAM+U,EAAIp0B,QAAUtR,KAAKkoC,eAAiBloC,KAAKmoC,cACnD,MACJ,KAAKxC,EAAGyC,WACJ1C,EAAI/U,IAAM3wB,KAAKqoC,mBACf,MACJ,KAAK1C,EAAG2C,aACJ5C,EAAI/U,IAAM3wB,KAAKuoC,qBACf,MACJ,KAAK5C,EAAG6C,WACJ9C,EAAIkB,MAAQjB,EAAG8C,iBACf/C,EAAI/U,IAAM3wB,KAAK0oC,kBACf,MACJ,KAAK/C,EAAGgD,KACJjD,EAAI/U,IAAM3wB,KAAKunC,WACf,MACJ,KAAK5B,EAAGiD,WACR,KAAKjD,EAAGkD,WAGR,QACI,MAAM,IAAI3f,MAAM,uBAvFxB,C,CA4FAlyB,qBAAqB2uC,EAA2B5nC,EAAawN,GACjE,IAAIu9B,EAAcnD,EAAGjB,aAAan5B,GAGlC,OAFAo6B,EAAGoD,aAAaD,EAAQ/qC,GACxB4nC,EAAGqD,cAAcF,GACbnD,EAAGsD,mBAAmBH,EAAQnD,EAAGuD,gBAC1BJ,GAEPxxC,QAAQovB,IAAIif,EAAGwD,iBAAiBL,IACzB,K,CAUfM,WAAWr0B,GACP,OAAO/U,KAAK8jC,WAAW/uB,E,CAInB2yB,WAAWhC,EAAUznC,GACzB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,GACrBoxB,mBAAmB+V,YAAYiE,UAAU3D,EAAIj5B,SAAU26B,EAAc,GAAKnpC,GACnE,GAEJ,C,CAIHwpC,YAAY/B,EAAUznC,GAC1B,GAAIA,EAAMhC,OAAS,EAAG,CAClB,IAAImrC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9HoxB,mBAAmB+V,YAAYkE,WAAW5D,EAAIj5B,SAAUxO,GACxDmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GAClB,GAEJ,CACV,CAEG,OADAoxB,mBAAmB+V,YAAYkE,WAAW5D,EAAIj5B,SAAUxO,GACjD,C,CAIP4pC,cAAcnC,EAAUznC,GAC5B,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC5DoxB,mBAAmB+V,YAAYmE,UAAU7D,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IACtG,GAEJ,C,CAIH2pC,eAAelC,EAAUznC,GAC7B,GAAIA,EAAMhC,OAAS,EAAG,CAClB,IAAImrC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9HoxB,mBAAmB+V,YAAYoE,WAAW9D,EAAIj5B,SAAUxO,GACxDmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GAClB,GAEJ,CACV,CAEG,OADAoxB,mBAAmB+V,YAAYoE,WAAW9D,EAAIj5B,SAAUxO,GACjD,C,CAKP+pC,cAActC,EAAUznC,GAC5B,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC7FoxB,mBAAmB+V,YAAYqE,UAAU/D,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IACnI,GAEJ,C,CAIH8pC,eAAerC,EAAUznC,GAE7B,OADAoxB,mBAAmB+V,YAAYsE,WAAWhE,EAAIj5B,SAAUxO,GACjD,C,CAGHkqC,cAAczC,EAAUznC,GAC5B,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9HoxB,mBAAmB+V,YAAYuE,UAAUjE,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IAChK,GAEJ,C,CAIHiqC,eAAexC,EAAUznC,GAE7B,OADAoxB,mBAAmB+V,YAAYwE,WAAWlE,EAAIj5B,SAAUxO,GACjD,C,CAGHyqC,kBAAkBhD,EAAUznC,GAEhC,OADAoxB,mBAAmB+V,YAAYqD,iBAAiB/C,EAAIj5B,UAAU,EAAOxO,GAC9D,C,CAIHspC,WAAW7B,EAAUznC,GACzB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,GACrBoxB,mBAAmB+V,YAAYyE,UAAUnE,EAAIj5B,SAAU26B,EAAc,GAAKnpC,GACnE,GAEJ,C,CAIHqpC,YAAY5B,EAAUznC,GAE1B,OADAoxB,mBAAmB+V,YAAY0E,WAAWpE,EAAIj5B,SAAUxO,GACjD,C,CAGHoqC,mBAAmB3C,EAAUznC,GACjC,IAAI0nC,EAA4BtW,mBAAmB+V,YAC/CgC,EAAuB1B,EAAI0B,cAC/B,OAAwB,MAApBA,EAAc,IACdA,EAAc,GAAKpnC,KAAK0jC,gBACxBiC,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChC1jC,KAAKqkC,iBAAiB0F,cAAcpE,EAAGqE,SAAWhqC,KAAK0jC,iBACvD1jC,KAAKqkC,iBAAiB4F,YAAYtE,EAAGuE,WAAYjsC,GAGjD+B,KAAK0jC,kBACE,IAEP1jC,KAAKqkC,iBAAiB0F,cAAcpE,EAAGqE,SAAW5C,EAAc,IAChEpnC,KAAKqkC,iBAAiB4F,YAAYtE,EAAGuE,WAAYjsC,GAC1C,E,CAKPsqC,qBAAqB7C,EAAUznC,GACnC,IAAI0nC,EAA4BtW,mBAAmB+V,YAC/CgC,EAAuB1B,EAAI0B,cAC/B,OAAwB,MAApBA,EAAc,IACdA,EAAc,GAAKpnC,KAAK0jC,gBACxBiC,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChC1jC,KAAKqkC,iBAAiB0F,cAAcpE,EAAGqE,SAAWhqC,KAAK0jC,iBACvD1jC,KAAKqkC,iBAAiB4F,YAAYtE,EAAGwE,iBAAkBlsC,GACvD+B,KAAK0jC,kBACE,IAEP1jC,KAAKqkC,iBAAiB0F,cAAcpE,EAAGqE,SAAW5C,EAAc,IAChEpnC,KAAKqkC,iBAAiB4F,YAAYtE,EAAGwE,iBAAkBlsC,GAChD,E,CAIfmsC,gBAAgBnsC,GAQZ+B,KAAKqkC,iBAAiB4F,YAAY5a,mBAAmB+V,YAAY8E,WAAYjsC,E,CASjFosC,OAAOC,EAA0BC,EAAgB,MAC7CphB,WAAWwF,aAAexF,WAAWqhB,WAAaxqC,KAElDA,KAAKqkC,iBAAiBoG,eAAezqC,KAAK4jC,UAEtC5jC,KAAKylC,YACL8E,EAASvqC,KAAK6jC,QACd7jC,KAAKylC,YAAa,GAElB8E,EAASA,GAAUvqC,KAAK6jC,QAM5B,IAFA,IAAI6B,EAAUznC,EAAYuH,EAAY+kC,EAAOtuC,OAEpCwC,EAAY,EAAGA,EAAI+G,EAAG/G,IAEsB,QAA5CR,EAASqsC,GADd5E,EAAM6E,EAAO9rC,IACyBsW,QAEpB2wB,EAAI/U,IAAIvzB,KAAK4C,KAAM0lC,EAAKznC,E,EAzcnColC,OAAMU,OAAW,EAEzBV,OAAiBuB,kBAAuC,GAGxDvB,OAAawB,cAAW,KAGxBxB,OAAAqH,QAAqB,IAAI7O,UAEzBwH,OAAAc,SAAkB,IAAI9yB,MAAM,IChBjC,MAAOs5B,iBAAiBtH,OAK1B9mC,YAAYmlC,EAAYC,EAAY2B,EAAgB,KAAMC,EAAe,KAAMC,EAAyB,MACpGnxB,MAAMqvB,EAAIC,EAAI2B,EAAUC,EAASC,GALrCxjC,KAAe4qC,gBAAe,KAC9B5qC,KAAiB6qC,kBAAW,EAC5B7qC,KAAkB8qC,mBAAW,C,CAUnBn2B,mBACNtC,MAAMsC,mBACN3U,KAAK4qC,gBAAkB,I,CAI3BG,eAAeT,GACXtqC,KAAKqqC,OAAOC,EAAatqC,KAAK4qC,iBAAmB5qC,KAAKgrC,gB,CAI1DA,gBACI,IAAKhrC,KAAK4qC,gBAAiB,CACvB5qC,KAAK4qC,gBAAkB,GAGvB,IADA,IAAkClF,EAA9B6E,EAAgBvqC,KAAK6jC,QAChBplC,EAAY,EAAG+G,EAAY+kC,EAAOtuC,OAAQwC,EAAI+G,EAAG/G,IAErC,UADjBinC,EAAM6E,EAAO9rC,IACLsW,MAAiB/U,KAAK4qC,gBAAgBvuC,KAAKqpC,EAE1D,CACD,OAAO1lC,KAAK4qC,e,CAGhB5zC,cAAc0qC,EAAYC,EAAY2B,EAAgB,KAAMC,EAAe,KAAMC,EAAyB,MACtG,OAAO,IAAImH,SAASjJ,EAAIC,EAAI2B,EAAUC,EAASC,E,QC7B1CyH,QA2DT1uC,YAAYioC,EAAgB0G,GAnC5BlrC,KAAAmrC,QAA2B,IAAIlV,gBAG/Bj2B,KAAA+S,KAAc,CAAC,EAAG,GAElB/S,KAAKorC,MAAW,EAKhBprC,KAAKqrC,MAAW,EAKhBrrC,KAAKkrC,MAAW,EAShBlrC,KAAG4wB,IAAW,EAIN5wB,KAAQsrC,SAAW,EAC3BtrC,KAAAurC,WAAoB,CAAC1yC,MAAMM,cAAe,EAAG,EAAGN,MAAMM,eACtD6G,KAAAwrC,WAAoB,CAAC,EAAG,GACxBxrC,KAAAyrC,QAAiB,CAAC,EAAG,GAKjBzrC,KAAKwkC,OAASA,EACdxkC,KAAKkrC,MAAQA,EAEblrC,KAAK0rC,YAAc,KACnB1rC,KAAKumB,QAAU,KAEfvmB,KAAKnC,MAAQ,KAEbmC,KAAK2rC,SAAW,KAChB3rC,KAAK4rC,QAAU,KAEf5rC,KAAKsrC,SAAW9G,EAAS0G,EACzBlrC,KAAK6rC,cAAgBZ,QAAQa,OAAO9rC,KAAKsrC,UACrC9G,EAAS,IAAMxkC,KAAK6rC,gBACpB7rC,KAAK6rC,cAAgBZ,QAAQa,OAAO9rC,KAAKsrC,UAAY,GACrDtrC,KAAK6rC,cAAcvyB,QAAU,GAEjCtZ,KAAK2K,O,CAvEF3T,gBAAgBuU,EAAcwgC,GACjCd,QAAQe,WAAWzgC,GAAQwgC,EAC3Bd,QAAQa,OAAOvgC,GAAQ,GACvB0/B,QAAQa,OAAOvgC,GAAM+N,QAAU,C,CAGnCtiB,cAAci1C,EAAkBC,GAC5B,IAAIC,EAAalB,QAAQa,OAAOG,EAAWC,GAC3C,OAAIC,EAAM7yB,QACC6yB,IAAQA,EAAM7yB,SAEd,IAAI2xB,QAAQe,WAAWC,EAAWC,GAASA,E,CAI1Dl1C,kB,CA4DAi0B,SAAShtB,GAAe,CAMhBmuC,qBAGJ,OAF+B/I,OAAOgJ,cAAc,EAAGrsC,KAAKwkC,OAAQxkC,KAAKmrC,QAAQvV,YAAa51B,KAAKwkC,OAASxkC,KAAKmrC,QAAQ/V,OAAQuV,SAASjjC,OAAQ1H,KAAKssC,gB,CAIpJC,mBACH,IAAIC,EAAqBpjB,cAEzBA,cAAcY,eAAiBZ,cAAcK,gBAAkBzpB,KAAKmrC,QAAQ3V,OAAOS,gBAAgBU,UACnG32B,KAAKysC,KAAOD,EAAcxiB,aAEtBZ,cAAcc,SACdlqB,KAAKmrC,QAAQ3V,OAAOS,gBAAgBY,OACpC72B,KAAK0sC,YAActjB,cAAcc,OAAOyiB,UAE5C,IAAIC,GAAyBnf,gBAA6B,eAAkE,GAA3DA,gBAA6B,cAAE7X,SAASa,gBAErGo2B,GAA4B,EAC5B7sC,KAAK0rC,cACD1rC,KAAK0rC,uBAAuBje,gBAC5Bof,EAA4E,GAAxD7sC,KAAK0rC,YAAgCj1B,gBAClDzW,KAAK0rC,uBAAuBnU,UACnCsV,EAA2E,GAAvD7sC,KAAK0rC,YAAwB7T,OAAOphB,kBAI5Do2B,EACA7sC,KAAKmrC,QAAQ3V,OAAOS,gBAAgBe,cAEpCh3B,KAAKmrC,QAAQloC,OAAOgzB,gBAAgBe,cAGpC4V,EACA5sC,KAAKmrC,QAAQ3V,OAAOS,gBAAgBa,YAEpC92B,KAAKmrC,QAAQloC,OAAOgzB,gBAAgBa,YAGpC1N,cAAce,QACdnqB,KAAKmrC,QAAQ3V,OAAOS,gBAAgBc,SAEpC/2B,KAAKmrC,QAAQloC,OAAOgzB,gBAAgBc,Q,CAG5CsT,SACI,IAAImC,EAAqBpjB,cAEzBppB,KAAKusC,mBAGL,IAAIO,EAAezJ,OAAOc,SAASnkC,KAAKwkC,OAASxkC,KAAKmrC,QAAQ/V,SAAWp1B,KAAKosC,qBAE1EU,EAAGjC,oBAAsB2B,EAAcnkC,OAASykC,EAAGhC,qBAAuB0B,EAAclkC,QACxFtI,KAAK+S,KAAK,GAAKy5B,EAAcnkC,MAC7BrI,KAAK+S,KAAK,GAAKy5B,EAAclkC,OAC7BwkC,EAAGjC,kBAAoB2B,EAAcnkC,MACrCykC,EAAGhC,mBAAqB0B,EAAclkC,OACtCwkC,EAAGzC,OAAqBrqC,KAAO,OAG/B8sC,EAAGzC,OAAqBrqC,KAAO8sC,EAAGlC,iBAAmBkC,EAAG9B,gB,CAKhE+B,WAAW9uC,GAEP,GADA+B,KAAKgtC,QAAU/uC,EACVA,EAIL,IADA,IAA8B6f,EAA1BtY,EAAYvH,EAAMhC,OACbwC,EAAY,EAAGA,EAAI+G,EAAG/G,KAC3Bqf,EAAI7f,EAAMQ,MAENuB,KAAKmrC,QAAQroC,IAAIgb,EAAEvS,MACnBuS,EAAEmvB,OAAOhiB,SAASjrB,M,CAK9B2K,QACI3K,KAAKmrC,QAAQ/V,OAASp1B,KAAKkrC,MAC3BlrC,KAAKyrC,QAAQ,GAAK,C,CAGtByB,YACWltC,KAAK4wB,IAAO,IACf5wB,KAAK6rC,gBAAkB7rC,KAAK6rC,cAAc7rC,KAAK6rC,cAAcvyB,WAAatZ,MAG1EA,KAAK2K,QACL3K,KAAKgtC,QAAU,KACfhtC,KAAK4wB,IAAM,EACX5wB,KAAKyrC,QAAQ,GAAK,E,EAnLTR,QAAMa,OAAU,GAChBb,QAAUe,WAAQ,GAE5Bf,QAAAxhB,eAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,MCZpE0jB,UAKT5wC,cACIyD,KAAK2K,O,CAGTA,QACI3K,KAAKotC,YAAc,EACnBptC,KAAKqtC,YAAcrtC,KAAKstC,MAAQ,C,CAKpC7kC,SAASm6B,GACL5iC,KAAKstC,MAAQ1K,EAAI0K,MACjBttC,KAAKqtC,YAAczK,EAAIyK,YACvBrtC,KAAKotC,WAAaxK,EAAIwK,U,CAI1BG,UAAU3K,EAAgBwK,EAAoBE,GAG1CttC,KAAKstC,MAAQA,EACbttC,KAAKotC,WAAaA,C,CAKtBI,SAASC,EAAiBL,EAAoBE,GAC1C,OAAOttC,KAAKotC,aAAeA,GAAcptC,KAAKstC,QAAUA,GAASttC,KAAKqtC,cAAgBI,EAAKJ,W,CAK/FK,SAASD,EAAiBL,EAAoBE,GAC1C,OAAOttC,KAAKotC,aAAeA,GAAcptC,KAAKstC,QAAUA,GAASttC,KAAKqtC,cAAgBI,EAAKJ,W,CAK/FM,QAAQF,GACJ,OAAOztC,KAAKotC,aAAeK,EAAKL,YAAcptC,KAAKqtC,cAAgBI,EAAKJ,W,CAI5E7iB,MAAMijB,GACF,OAAOztC,KAAKstC,QAAUG,EAAKH,OAASttC,KAAKotC,aAAeK,EAAKL,YAAcptC,KAAKqtC,cAAgBI,EAAKJ,W,QCpDhGO,UAUTrxC,cAJAyD,KAAI6tC,KAAW,EAEf7tC,KAAA8tC,KAAkB,IAAIX,S,CAKtBY,eAEI,OADA/tC,KAAK2wB,IAAIqd,MAAMhuC,KAAKmnC,MAAOnnC,KAAKsK,MACzB,C,CAGX2jC,gBACI,OAAO,C,CAGXC,gBACI,KAAOluC,KAAK6tC,KAAQ,EAAG,CACnB,IAAI7wC,EAAY4wC,UAAUO,KAC1BnxC,EAAKA,EAAKsc,WAAatZ,KACvBA,KAAKsK,KAAO,KACZtK,KAAK2wB,IAAM,KACX3wB,KAAKmnC,MAAQ,IAChB,C,CAGLnwC,cAAcsT,EAAaqmB,EAAeyd,GACtC,IAAItY,EAAgB8X,UAAUO,KAAa70B,QAAUs0B,UAAUO,OAAQP,UAAUO,KAAa70B,SAAW,IAAIs0B,UAM7G,OALA9X,EAAEnF,IAAMA,EACRmF,EAAExrB,KAAOA,EACTwrB,EAAEqR,MAAQiH,EACVtY,EAAE+X,KAAO,EACT/X,EAAEgY,KAAKnjC,QACAmrB,C,EAtCJ8X,UAAIO,KAAgB,GAyC5BP,UAAUO,KAAa70B,QAAU,E,MCzBvB+0B,OAaT9xC,cAAA,CAGIgP,WAAiB,OAAQ,CAAC,EAdvB8iC,OAAIh/B,KAAW,GAEfg/B,OAAKC,MAAW,GAEhBD,OAAIE,KAAW,EAYfF,OAAOG,QAAG,SAA4BC,EAAgBjnB,EAAkBtoB,EAAWC,GACtF,IAAIuvC,EAAoBlnB,EACpBimB,EAA4BztC,KAAO2uC,MACvC,GAAIlB,EAAM,CACN,IAAIT,EAAiByB,EAAOzB,QAASxuC,EAAcwuC,EAAQ/wC,OAE3D,GAAW,GAAPuC,GAAawuC,EAAQ,GAAGzhC,MAAQ8iC,OAAOC,MAKvC,OAJA9mB,EAAQonB,OACRpnB,EAAQqnB,eAAe7B,EAAQ,IAC/BS,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,QACzCqoB,EAAQ0F,UAIZ,IACIrpB,EADAkrC,EAAgB9D,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GAG1D8mB,EAAWlnC,MAAMD,KACjBonC,EAAkBP,EAASQ,QAC3B7lB,EAAc1lB,OAAO+D,SACzBunC,EAAQtnC,OAAO0hB,GACf,IAAI8lB,EAAmB,EACnBC,EAAuB,EAGvBrwC,EAA0B,KAC1BuG,EAAuBmpC,EAAOY,YAAYC,aAAe,KAC7D,GAAKhqC,GAA8B,GAAvBmpC,EAAOc,aAoEZ,CASH,IANoBd,EAAOe,sBAAuB,KAE9CL,EAAW,GACXC,EAAe,KAEnBvrC,EAAI4qC,EAAOgB,aACLpnC,OAAS,GAAKxE,EAAEyE,QAAU,EAC5B,OAGJzE,EAAEwE,OAAU8mC,EAAW,EACvBtrC,EAAEyE,QAAW6mC,EAAW,EACxBtrC,EAAE3E,GAAKuvC,EAAOiB,OAAS,EACvB7rC,EAAE1E,GAAKsvC,EAAOkB,OAAS,EACvBX,EAAE9vC,EAAI2E,EAAE3E,EAAImqB,EAAIzlB,EAAIC,EAAE1E,EAAIkqB,EAAIvlB,EAC9BkrC,EAAE7vC,EAAI0E,EAAE1E,EAAIkqB,EAAItlB,EAAIF,EAAE3E,EAAImqB,EAAIxlB,EAC9BA,EAAE3E,EAAI8vC,EAAE9vC,EACR2E,EAAE1E,EAAI6vC,EAAE7vC,EACR6vC,EAAE9vC,EAAI2E,EAAEwE,MAAQghB,EAAIzlB,EAAIC,EAAEyE,OAAS+gB,EAAIvlB,EACvCkrC,EAAE7vC,EAAI0E,EAAEyE,OAAS+gB,EAAItlB,EAAIF,EAAEwE,MAAQghB,EAAIxlB,EACvCA,EAAEwE,MAAQ2mC,EAAE9vC,EACZ2E,EAAEyE,OAAS0mC,EAAE7vC,CAEhB,KA9FqC,CACdsvC,EAAOe,sBAGvBL,EAAW,GACXC,EAAe,KAEnBvrC,EAAI,IAAIuE,WACNK,SAASgmC,EAAOmB,iBAClB/rC,EAAE3E,GAAKuvC,EAAOvvC,EACd2E,EAAE1E,GAAKsvC,EAAOtvC,EACd0E,EAAE3E,GAAKuvC,EAAOiB,OAAS,EACvB7rC,EAAE1E,GAAKsvC,EAAOkB,OAAS,EACvB,IAAIE,EAAchsC,EAAE3E,EAChB4wC,EAAcjsC,EAAE1E,EAYpB,GAVA0E,EAAEwE,OAAU8mC,EAAW,EACvBtrC,EAAEyE,QAAW6mC,EAAW,EACxBH,EAAE9vC,EAAI2E,EAAE3E,EAAImqB,EAAIzlB,EAAIC,EAAE1E,EAAIkqB,EAAIvlB,EAC9BkrC,EAAE7vC,EAAI0E,EAAE1E,EAAIkqB,EAAItlB,EAAIF,EAAE3E,EAAImqB,EAAIxlB,EAC9BA,EAAE3E,EAAI8vC,EAAE9vC,EACR2E,EAAE1E,EAAI6vC,EAAE7vC,EACR6vC,EAAE9vC,EAAI2E,EAAEwE,MAAQghB,EAAIzlB,EAAIC,EAAEyE,OAAS+gB,EAAIvlB,EACvCkrC,EAAE7vC,EAAI0E,EAAEyE,OAAS+gB,EAAItlB,EAAIF,EAAEwE,MAAQghB,EAAIxlB,EACvCA,EAAEwE,MAAQ2mC,EAAE9vC,EACZ2E,EAAEyE,OAAS0mC,EAAE7vC,EACT0E,EAAEwE,OAAS,GAAKxE,EAAEyE,QAAU,EAC5B,OAEJhD,GAAO6pB,WAAW4gB,UAAUzqC,GAC5BvG,EAASowB,WAAW6gB,MAAMnsC,EAAEwE,MAAOxE,EAAEyE,QACrC,IAAI2nC,EAAyB3qC,EAAM6pB,WAAW6gB,MAAMnsC,EAAEwE,MAAOxE,EAAEyE,QAC/DmmC,EAAOyB,iBAAiBZ,YAAchqC,EAEtCopC,EAASyB,SACTzB,EAAS0B,MAAMrxC,GACf,IAAIsxC,EAAa5B,EAAOvvC,EAAI2wC,EAAMT,EAC9BkB,EAAa7B,EAAOtvC,EAAI2wC,EAAMV,EAElC3B,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAS6oB,EAAIC,GAC1C5B,EAAS0B,MAAMH,GACf,IAAK,IAAIxxC,EAAY,EAAGA,EAAID,EAAKC,IAAK,CACzB,GAALA,IAGAiwC,EAAS0B,MAAMrxC,GACf2vC,EAAS6B,WAAWN,EAAO,EAAG,EAAGpsC,EAAEwE,MAAOxE,EAAEyE,OAAQ3E,OAAOkE,KAAKvD,WAAYyqC,EAAM,KAAMxc,UAAU4B,MAAMI,SACxGma,EAAS0B,MAAMH,IAEnB,IAAIO,EAAcxD,EAAQvuC,GAE1B,OAAQ+xC,EAAIjlC,MACR,KAAK8iC,OAAOh/B,KAIZ,KAAKg/B,OAAOE,KAERiC,EAAIC,WAAaD,EAAIC,UAAUC,OAAO3xC,EAAQyoB,EAAS3jB,EAAEwE,MAAOxE,EAAEyE,OAAQkoC,GAC1E,MACJ,KAAKnC,OAAOC,MACRI,EAASG,eAA6B2B,GACtC9B,EAAS6B,WAAWxxC,EAAQ,EAAG,EAAG8E,EAAEwE,MAAOxE,EAAEyE,OAAQ3E,OAAOiE,MAAMtD,WAAY2mC,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IACxHwmB,EAASG,eAAe,MAGnC,CACDH,EAASiC,OACZ,CAsCD,GAXAzxC,EAAIA,EAAIkwC,EAAeX,EAAOvvC,EAC9BC,EAAIA,EAAIiwC,EAAeX,EAAOtvC,EAC9B6vC,EAAEjpC,MAAM7G,EAAGC,GACXkqB,EAAIrjB,eAAegpC,GACnB9vC,EAAI8vC,EAAE9vC,EAAI2E,EAAE3E,EACZC,EAAI6vC,EAAE7vC,EAAI0E,EAAE1E,EAEZuvC,EAASkC,mBAAmBtrC,EAAKpG,EAAGC,EAAG0E,EAAEwE,MAAOxE,EAAEyE,OAAQ3E,OAAOkE,KAAKvD,WAAY,EAAKmpB,gBAAgBF,OAInGxuB,EAAQ,CACR,IAAI8xC,EAAoBjD,UAAUlmC,OAAO,CAAC3I,IAAS,SAAU+xC,GACzDA,EAAE3tC,S,GACHnD,MACHjB,EAAS,KACTyoB,EAAQupB,gBAAgBF,EAC3B,CACDxnB,EAAIlmB,SACP,CACL,ECjLJ,MAAM6tC,EAAqC,CAAEC,OAAU,UAAWC,OAAU,UAAWC,MAAS,UAAWC,IAAO,UAAWC,MAAS,UAAWC,KAAQ,UAAWC,MAAS,UAAWC,OAAU,UAAWC,KAAQ,W,MAMxMC,WAwBTn1C,YAAY0B,GACR,GAbJ+B,KAAQ2xC,SAAU,GAaD,MAAT1zC,GAA0B,QAATA,EAIjB,OAHA+B,KAAK4xC,SAAW,YAChB5xC,KAAK6xC,SAAW,OAChB7xC,KAAK2xC,SAAW,CAAC,EAAG,EAAG,EAAG,IAI9B,IAAI9zC,EACkB,iBAAlB,GACAA,EAAQH,MAAMo0C,gBAAgB7zC,GAC9B+B,KAAK4xC,SAAW3zC,IAEhBJ,EAAQI,EACR+B,KAAK4xC,SAAWl0C,MAAMq0C,WAAWl0C,IAGjCmC,KAAK4xC,SAAS1zC,QAAQ,SAAW,GAA8B,IAAzB8B,KAAK4xC,SAAS31C,QAEpD+D,KAAK2xC,SAAW,GAAG,WAAa9zC,KAAW,IAAM,MAAO,SAAWA,IAAU,IAAM,MAAO,MAASA,IAAU,GAAK,KAAM,IAAOA,GAAS,KACxImC,KAAK6xC,UAAY,WAAah0C,KAAW,IAAc,SAARA,IAAqB,GAAa,MAARA,IAAqB,GAAc,IAARA,IAAiB,KAErHmC,KAAK2xC,SAAW,GAAG,SAAW9zC,IAAU,IAAM,MAAO,MAASA,IAAU,GAAK,KAAM,IAAOA,GAAS,IAAK,GACxGmC,KAAK6xC,SAAW,YAAsB,SAARh0C,IAAqB,GAAc,MAARA,GAA6B,IAARA,IAAiB,G,CAKvG7G,sBAEI,IAAK,IAAIyH,KADTizC,WAAWM,SAAW,GACRhB,EAAYU,WAAWO,MAAMxzC,GAAKizC,WAAWM,SAASvzC,GAAK,IAAIizC,WAAWV,EAAWvyC,IACnG,OAAOizC,WAAWM,Q,CAItBh7C,sBACI06C,WAAWQ,WAAa,EACxBR,WAAWO,MAAQp9B,OAAOs9B,OAAO,GAAIT,WAAWM,S,CAQpDh7C,cAAciH,GACV,IAAImO,EAAcnO,EAAQ,GACtBJ,EAAoB6zC,WAAWO,MAAM7lC,GACzC,OAAa,MAATvO,EAAsBA,GACtB6zC,WAAWQ,WAAa,KAAKR,WAAWU,eAC5CV,WAAWQ,aACJR,WAAWO,MAAM7lC,GAAO,IAAIslC,WAAWzzC,G,EAzE3CyzC,WAAKO,MAAQ,GAEbP,WAAUQ,WAAW,EAIbR,WAAAM,SAAgBN,WAAWW,eCX9C,MAAMC,EAAqB,CAAC,EAAG,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,GAAK,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAK,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,EAAK,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,EAAK,IAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,EAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,EAAK,IAAK,IAAK,EAAK,IAAK,IAAK,IAAK,IAE9kBC,EAAqB,CAAC,MAAQ,MAAQ,KAAO,EAAG,EAAG,MAAQ,MAAQ,KAAO,EAAG,EAAG,MAAQ,MAAQ,KAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzHC,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAQlG,MAAOC,oBAAoBpE,OAa7B9xC,YAAY8sB,EAAa,MACrBhX,QACKgX,IAAKA,EAAMrpB,KAAK0yC,YAAYF,IACjCxyC,KAAK2yC,KAAO,IAAIt3B,aAAa,IAC7Brb,KAAK4yC,OAAS,IAAIv3B,aAAa,GAC/Brb,KAAK6yC,YAAYxpB,E,CAMrBooB,OACI,OAAOzxC,KAAK6yC,YAAYN,E,CAU5B10C,MAAMuzC,EAAc,EAAGC,EAAgB,EAAGC,EAAe,EAAGlG,EAAgB,GACxE,OAAOprC,KAAK6yC,YAAY,CAACzB,EAAK,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAO,EAAG,EAAG,EAAG,EAAG,EAAGC,EAAM,EAAG,EAAG,EAAG,EAAG,EAAGlG,EAAO,G,CAOnG0H,SAASj1C,GACL,IAAIQ,EAAaqzC,WAAWhqC,OAAO7J,GAAO8zC,SACtCoB,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM10C,EAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAMA,EAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAMA,EAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAC3G,OAAO2B,KAAK6yC,YAAYE,E,CAQ5BF,YAAYtsC,GACJvG,KAAKgzC,SAAWzsC,GAAQvG,KAAK0yC,YAAYnsC,GAG7C,IAFA,IAAI7G,EAAY,EACZygC,EAAY,EACP1hC,EAAY,EAAGA,EAAI,GAAIA,IACxBA,EAAI,GAAK,EACTuB,KAAK2yC,KAAKjzC,KAAO6G,EAAO9H,GAExBuB,KAAK4yC,OAAOzS,KAAO55B,EAAO9H,GAGlC,OAAOuB,I,CAOPuL,WACA,OAAO8iC,OAAOC,K,CAWlB2E,YAAYC,EAAoBC,EAAkBC,EAAoBC,GAKlE,OAJArzC,KAAKszC,UAAUD,GACfrzC,KAAKuzC,eAAeJ,GACpBnzC,KAAKwzC,iBAAiBN,GACtBlzC,KAAKyzC,iBAAiBL,GACfpzC,I,CAQXwzC,iBAAiBN,GAEb,OAAkB,IADlBA,EAAalzC,KAAK0zC,YAAYR,EAAY,OACnBp1C,MAAMo1C,GAAoBlzC,KAC1CA,KAAK2zC,gBAAgB,CAAC,EAAG,EAAG,EAAG,EAAGT,EAAY,EAAG,EAAG,EAAG,EAAGA,EAAY,EAAG,EAAG,EAAG,EAAGA,EAAY,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,CAQpIK,eAAeJ,GAEX,GAAgB,IADhBA,EAAWnzC,KAAK0zC,YAAYP,EAAU,OACjBr1C,MAAMq1C,GAAW,OAAOnzC,KAC7C,IAAId,EAYA00C,GAVA10C,EADAi0C,EAAW,EACP,IAAMA,EAAW,IAAM,IAQnB,KAJJj0C,EADK,IADTA,EAAIi0C,EAAW,GAEPb,EAAYa,GAEZb,EAAaa,GAAY,IAAO,EAAIj0C,GAAKozC,EAA8B,GAAjBa,GAAY,IAAUj0C,GAEtE,KAEG,IACjB20C,EAAyB,IAAX,IAAM30C,GACxB,OAAOc,KAAK2zC,gBAAgB,CAACC,EAAI,EAAG,EAAG,EAAGC,EAAI,EAAGD,EAAI,EAAG,EAAGC,EAAI,EAAG,EAAGD,EAAI,EAAGC,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,CAQ/GJ,iBAAiBL,GAEb,GAAkB,IADlBA,EAAapzC,KAAK0zC,YAAYN,EAAY,OACnBt1C,MAAMs1C,GAAa,OAAOpzC,KACjD,IAAId,EAAY,GAAMk0C,EAAa,EAAK,EAAIA,EAAa,IAAMA,EAAa,KACxEU,EAAa,EAAI50C,EACjBmrB,EAAY,MAASypB,EACrBxpB,EAAY,MAASwpB,EACrBjwC,EAAY,KAASiwC,EAEzB,OAAO9zC,KAAK2zC,gBAAgB,CAACtpB,EAAInrB,EAAGorB,EAAGzmB,EAAG,EAAG,EAAGwmB,EAAGC,EAAIprB,EAAG2E,EAAG,EAAG,EAAGwmB,EAAGC,EAAGzmB,EAAI3E,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,CAQrHo0C,UAAUD,GAEN,GAAW,IADXA,EAAMrzC,KAAK0zC,YAAYL,EAAK,KAAO,IAAM91C,KAAKC,KAC9BM,MAAMu1C,GAAM,OAAOrzC,KACnC,IAAI2E,EAAcpH,KAAKoH,IAAI0uC,GACvBzuC,EAAcrH,KAAKqH,IAAIyuC,GACvBhpB,EAAY,KACZC,EAAY,KACZzmB,EAAY,KAChB,OAAO7D,KAAK2zC,gBAAgB,CAACtpB,EAAI1lB,GAAO,EAAI0lB,GAAKzlB,GAAQylB,EAAIC,EAAI3lB,GAAQ2lB,EAAK1lB,GAAQ0lB,EAAIzmB,EAAIc,GAAQd,EAAKe,GAAO,EAAIf,GAAI,EAAG,EAAGwmB,EAAI1lB,GAAQ0lB,EAAQ,KAAHzlB,EAAe0lB,EAAI3lB,GAAO,EAAI2lB,GAAQ,IAAH1lB,EAAef,EAAIc,GAAQd,GAAa,KAARe,EAAgB,EAAG,EAAGylB,EAAI1lB,GAAQ0lB,GAAQ,KAAHzlB,EAAkB0lB,EAAI3lB,GAAQ2lB,EAAK1lB,EAAG,EAAQf,EAAIc,GAAO,EAAId,GAAKe,EAAG,EAAQ,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,G,CAM7WmD,QACI,OAAO/H,KAAK6yC,YAAY7yC,KAAK0yC,YAAYF,G,CAQrCmB,gBAAgBptC,GACpB,IAAIwtC,EAAa,GACjB/zC,KAAKgzC,QAAUhzC,KAAKg0C,WAAWh0C,KAAKgzC,SACpC,IAAK,IAAIv0C,EAAY,EAAGA,EAAI,EAAGA,IAAK,CAChC,IAAK,IAAIiB,EAAY,EAAGA,EAAI,EAAGA,IAC3Bq0C,EAAIr0C,GAAKM,KAAKgzC,QAAQtzC,EAAQ,EAAJjB,GAE9B,IAAKiB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAEpB,IADA,IAAIu0C,EAAc,EACTt0C,EAAY,EAAGA,EAAI,EAAGA,IAC3Bs0C,GAAO1tC,EAAO7G,EAAQ,EAAJC,GAASo0C,EAAIp0C,GAEnCK,KAAKgzC,QAAQtzC,EAAQ,EAAJjB,GAASw1C,CAC7B,CACJ,CACD,OAAOj0C,KAAK6yC,YAAY7yC,KAAKgzC,Q,CAQzBU,YAAYO,EAAaC,GAC7B,OAAO32C,KAAKwL,IAAImrC,EAAO32C,KAAKuL,KAAKorC,EAAOD,G,CAOpCD,WAAWztC,EAAgB,MAC/B,OAAc,MAAVA,EAAuBisC,GACvBjsC,EAAOtK,OApNI,GAoNasK,EAASA,EAAO8T,MAAM,EAAG9T,EAAOtK,QAAQqK,OAAOksC,EAAgBn4B,MAAM9T,EAAOtK,OApNzF,KAqNNsK,EAAOtK,OArND,KAqNkBsK,EAASA,EAAO8T,MAAM,EArNxC,KAsNR9T,E,CAMHmsC,YAAYnsC,GAEXvG,KAAKgzC,UAAShzC,KAAKgzC,QAAU,IAClC,IAAK,IAAIv0C,EAAY,EAAGA,EA/NT,GA+NkBA,IAC7BuB,KAAKgzC,QAAQv0C,GAAK8H,EAAO9H,GAE7B,OAAOuB,KAAKgzC,O,CAGhBmB,qBACI,IAAI91C,EAAaqzC,WAAWhqC,OAAa1H,KAAMo0C,QAAU,WAAWzC,SACpE3xC,KAAKnC,MAAMQ,EAAI,GAAIA,EAAI,GAAIA,EAAI,GAAIA,EAAI,IACvC2B,KAAKizC,YAAkBjzC,KAAMq0C,aAAe,EAASr0C,KAAMs0C,WAAa,EAASt0C,KAAMu0C,aAAe,EAASv0C,KAAMw0C,MAAQ,E,QC5OxHC,WAOTz9C,gBAAgBmH,EAAWC,EAAWs2C,GAClC,OAASv2C,EAAGe,EAAIw1C,EAAGx1C,IAAMd,EAAGe,EAAIu1C,EAAGv1C,IAAMf,EAAGc,EAAIw1C,EAAGx1C,IAAMf,EAAGgB,EAAIu1C,EAAGv1C,E,CASvEnI,WAAWmH,EAAWC,GAClB,OAAQD,EAAGe,EAAId,EAAGc,IAAMf,EAAGe,EAAId,EAAGc,IAAMf,EAAGgB,EAAIf,EAAGe,IAAMhB,EAAGgB,EAAIf,EAAGe,E,CAG9DnI,kBAAkB8T,EAAe6pC,GAAmB,EAAO53C,EAAkB,MAEjF,IADK03C,WAAWG,cAAaH,WAAWG,YAAc,IAC/CH,WAAWG,YAAY34C,OAAS6O,GAAO2pC,WAAWG,YAAYv4C,KAAK,IAAIyL,OAU9E,OATK/K,IAAKA,EAAM,IAChBA,EAAId,OAAS,EACT04C,EAEAF,WAAWI,QAAQ93C,EAAK03C,WAAWG,YAAa9pC,GAGhD2pC,WAAWK,SAAS/3C,EAAK03C,WAAWG,YAAa9pC,GAE9C/N,C,CAUX/F,eAAe+F,EAAY6lC,EAAY93B,GACnC,IAAIrM,EACJ,IAAKA,EAAI,EAAGA,EAAIqM,EAAOrM,IACnB1B,EAAIV,KAAKumC,EAAInkC,IAEjB,OAAO1B,C,CAUX/F,gBAAgB+F,EAAY6lC,EAAY93B,GACpC,IAAIrM,EACJ,IAAKA,EAAI,EAAGA,EAAIqM,EAAOrM,IACnB1B,EAAIV,KAAKumC,EAAI3lC,OAEjB,OAAOF,C,CAQX/F,wBAAwB+9C,EAAcJ,GAAmB,GACrD,IAAIl2C,EAAWD,EAAcu2C,EAAM94C,OAAS,EAAGc,EAAa03C,WAAWO,WAAWx2C,EAAKm2C,EAASF,WAAWQ,gBAC3G,IAAKx2C,EAAI,EAAGA,EAAID,EAAKC,IACjB1B,EAAI0B,GAAGsH,MAAMgvC,EAAMt2C,EAAIA,GAAIs2C,EAAMt2C,EAAIA,EAAI,IAE7C,OAAO1B,C,CAQX/F,wBAAwBuS,GACpB,IAAI9K,EAA8EmL,EAAnEpL,EAAc+K,EAAUtN,OAAQc,EAAa03C,WAAWS,UAEvE,IADAn4C,EAAId,OAAS,EACRwC,EAAI,EAAGA,EAAID,EAAKC,IACjBmL,EAASL,EAAU9K,GACnB1B,EAAIV,KAAKuN,EAAO1K,EAAG0K,EAAOzK,GAE9B,OAAOpC,C,CAQX/F,iBAAiB+9C,GACb,OAAOr3C,MAAMy3C,UAAUJ,EAAON,WAAWW,iBAAiBX,WAAWY,KAAKZ,WAAWa,iBAAiBP,GAAO,K,CAQjH/9C,YAAYu+C,GACJ,IAAA92C,EAAWiB,EAA2C81C,EAAyCC,EAE/FrpC,EAFsBzM,EAAY,EAAgC6F,EAAY+vC,EAASt5C,OACvFy5C,EAAe,GAKnB,KAHAD,EAAKhB,WAAWkB,SACb15C,OAAS,EAEPwC,GADL+G,EAAI+vC,EAASt5C,QACA,EAAGwC,GAAK,EAAGA,KAEpB2N,GADAopC,EAAMD,EAAS92C,IACLS,EAAI,IAAMs2C,EAAIr2C,KACXu2C,IACTA,EAAQtpC,IAAO,EACfqpC,EAAGp5C,KAAKm5C,IAQhB,IALAhwC,EAAIiwC,EAAGx5C,OACPyB,MAAMy3C,UAAUI,EAAUE,GAIrBh3C,EAAI,EAAGA,EAAI+G,EAAG/G,KACV82C,EAAS92C,GAAGU,EAAIo2C,EAAS51C,GAAGR,GAAQo2C,EAAS92C,GAAGU,GAAKo2C,EAAS51C,GAAGR,GAAOo2C,EAAS92C,GAAGS,EAAIq2C,EAAS51C,GAAGT,KACrGS,EAAIlB,GAMZ,IAJA+2C,EAAMD,EAAS,GACfA,EAAS,GAAKA,EAAS51C,GACvB41C,EAAS51C,GAAK61C,EAET/2C,EAAI,EAAGA,EAAI+G,EAAI,EAAG/G,IAAK,CAExB,IADAkB,EAAIlB,EACCiB,EAAIjB,EAAI,EAAGiB,EAAI8F,EAAG9F,KACd+0C,WAAWpgB,SAASkhB,EAAS71C,GAAI61C,EAAS51C,GAAI41C,EAAS,IAAM,GAAsE,GAA9Dd,WAAWpgB,SAASkhB,EAAS71C,GAAI61C,EAAS51C,GAAI41C,EAAS,KAAcd,WAAWmB,IAAIL,EAAS,GAAIA,EAAS71C,IAAM+0C,WAAWmB,IAAIL,EAAS,GAAIA,EAAS51C,OAC3NA,EAAID,GACZ81C,EAAMD,EAAS92C,GACf82C,EAAS92C,GAAK82C,EAAS51C,GACvB41C,EAAS51C,GAAK61C,CACjB,CAKD,IAHAC,EAAKhB,WAAWkB,SACb15C,OAAS,EAERs5C,EAASt5C,OAAS,EAClB,OAAOyB,MAAMy3C,UAAUM,EAAIF,GAK/B,IAHAE,EAAGp5C,KAAKk5C,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAGtC92C,EAAI,EAAGA,EAAI+G,EAAG/G,IAAK,CAEpB,KAAOg3C,EAAGx5C,QAAU,GAAKw4C,WAAWpgB,SAASkhB,EAAS92C,GAAIg3C,EAAGA,EAAGx5C,OAAS,GAAIw5C,EAAGA,EAAGx5C,OAAS,KAAO,GAAGw5C,EAAGx4C,MAEzGs4C,EAAS92C,IAAMg3C,EAAGp5C,KAAKk5C,EAAS92C,GACnC,CACD,OAAOg3C,C,EA9JIhB,WAAcQ,eAAU,GACxBR,WAASS,UAAU,GACnBT,WAAOkB,QAAU,G,MCTvBE,aCAb,IAAYC,ECHAC,ECAAC,EAgBCC,EChBDC,EJKDL,YAAKxK,MAAW,EAEhBwK,YAASM,UAAW,EAEpBN,YAAKO,MAAW,EAEhBP,YAAMQ,OAAW,EAEjBR,YAAOS,QAAW,GAElBT,YAAI/gB,KAAW,GAEf+gB,YAAIU,KAAW,GAEfV,YAAKW,MAAW,IAEhBX,YAAOY,QAAW,IAElBZ,YAAQa,SAAW,IAEnBb,YAAQc,SAAW,KAEnBd,YAAMe,OAAW,KAEjBf,YAAQgB,SAAW,KAEnBhB,YAAOiB,QAAW,KAElBjB,YAAMkB,OAAW,MAGjBlB,YAAYmB,aAAW,EAEvBnB,YAAYoB,aAAW,EAEvBpB,YAAaqB,cAAW,EAExBrB,YAAWsB,YAAW,ECvCrBrB,iFASX,KARGA,EAAA,uBACAA,IAAA,uCACAA,IAAA,uBACAA,IAAA,iCACAA,IAAA,yBACAA,IAAA,mCACAA,IAAA,6CACAA,IAAA,+B,MILS96C,QAkHThE,kBACI,IAAIiE,EAAaW,OAAeX,MAAQJ,MAAMI,KAC9C,GAAID,QAAQo8C,QAAS,OAAOp8C,QAAQo8C,QACpC,IAAIC,EAAWr8C,QAAQo8C,QAAUx7C,OAC7B07C,EAAWt8C,QAAQu8C,UAAYF,EAAIG,SACnCv5B,EAAYjjB,QAAQy8C,UAAYJ,EAAIK,UAAUD,UAC9CE,EAAyBN,EAAIK,UAAUC,gBAAkB,EACzDC,EAAmBP,EAAIK,UAAUE,SAE9Bh8C,OAAeC,OAAS,sBAAuBb,QAAQY,SACzDA,OAAei8C,WAAW58C,EAAMA,GACjCA,EAAiB,WAAE68C,UAGnB,OAAQ98C,QAAQY,SACZqiB,EAAE/f,QAAQ,QAAU,GAAK+f,EAAE/f,QAAQ,YAAc,GAAK+f,EAAE/f,QAAQ,QAAU,GAEzEtC,OAAem8C,WAAW98C,EAAMA,GAC5BA,EAAoB,cAGrBA,EAAoB,cAAE68C,SAFtBxgD,QAAQsvB,MAAM,cAIX3I,EAAE/f,QAAQ,mBAAqB,IAErCtC,OAAeo8C,eAAe/8C,EAAMA,GAChCA,EAAqB,eAGtBA,EAAqB,eAAE68C,SAFvBxgD,QAAQsvB,MAAM,oBAOE,GAAtB3I,EAAE/f,QAAQ,SAAiB+f,EAAE/f,QAAQ,aAAe,IAA+B,GAAzB+f,EAAE/f,QAAQ,aAAkD,GAA7B+f,EAAE/f,QAAQ,gBAAyBtC,OAAeq8C,WAAc,OAAQj9C,QAAQY,SACvK,OAAQZ,QAAQY,QAEfA,OAAes8C,WAAWj9C,EAAMA,GAC5BA,EAAoB,cAIrBA,EAAoB,cAAE68C,SAFtBxgD,QAAQsvB,MAAM,0FAIX,OAAQ5rB,QAAQY,QAEtBA,OAAeu8C,aAAal9C,EAAMA,GAC9BA,EAAoB,cAGrBA,EAAoB,cAAE68C,SAFtBxgD,QAAQsvB,MAAM,uBAKb,OAAQ5rB,QAAQY,QAEpBA,OAAew8C,WAAWn9C,EAAMA,GAC5BA,EAAoB,cAGrBA,EAAoB,cAAE68C,SAFtBxgD,QAAQsvB,MAAM,oBAOjBhrB,OAAei8C,WAAW58C,EAAMA,GAC5BA,EAAiB,WAIlBA,EAAiB,WAAE68C,SAHnBxgD,QAAQsvB,MAAM,sFAQtB,QAAS5rB,QAAQY,SAChBA,OAAey8C,WAAWp9C,EAAMA,GAC5BA,EAAoB,cAIrBA,EAAoB,cAAE68C,SAHtBxgD,QAAQsvB,MAAM,gBAQlB3I,EAAE/f,QAAQ,aAAe,IACxBtC,OAAe08C,WAAWr9C,EAAMA,GAC5BA,EAAmB,aAIpBA,EAAmB,aAAE68C,SAHrBxgD,QAAQsvB,MAAM,iBAQlB3I,EAAE/f,QAAQ,cAAgB,IACzBtC,OAAe28C,WAAWt9C,EAAMA,GAC5BA,EAAoB,cAGrBA,EAAoB,cAAE68C,SAFtBxgD,QAAQsvB,MAAM,uFAOlB3I,EAAE/f,QAAQ,SAAW,GAAK+f,EAAE/f,QAAQ,aAAe,IAClDtC,OAAe48C,WAAWv9C,EAAMA,GAC5BA,EAAoB,eAIrBxD,OAAOkB,aAAc,EACrBsC,EAAoB,cAAE68C,UAJtBxgD,QAAQsvB,MAAM,uFASlB3I,EAAE/f,QAAQ,WAAa,IACtBtC,OAAe68C,WAAWx9C,EAAMA,GAC5BA,EAAoB,eAIrBxD,OAAOkB,aAAc,EACrBsC,EAAoB,cAAE68C,UAJtBxgD,QAAQsvB,MAAM,uFAStBywB,EAAIqB,MAAQphD,QAAQovB,IAGpB2wB,EAAIsB,sBAAwBtB,EAAIsB,uBAAyBtB,EAAIuB,6BAA+BvB,EAAIwB,0BAA4BxB,EAAIyB,wBAA0BzB,EAAI0B,yBAA2B,SAAUpoB,GAC/L,OAAO0mB,EAAI2B,WAAWroB,EAAK,IAAO,GACtC,EAGA,IAAIsoB,EAAiB3B,EAAI4B,KAAKC,MAC9BF,EAAUG,OAAS,EACnBH,EAAUI,SAAW,SACrBJ,EAAU,uBAAyB,OACnCA,EAAU,+BAAiC,sBAK3C,IAFA,IAAIK,EAAehC,EAAIiC,qBAAqB,QACxC96C,EAAY,EAAGkC,GAAgB,EAAO64C,EAAe,4FAClD/6C,EAAI66C,EAAMr9C,QAAQ,CACrB,IAAIw9C,EAAYH,EAAM76C,GACtB,GAAiB,YAAbg7C,EAAK1kC,KAAoB,CACzB0kC,EAAKD,QAAUA,EACf74C,GAAO,EACP,KACH,CACDlC,GACH,CAgED,OA/DKkC,KACD84C,EAAOnC,EAAIoC,cAAc,SACpB3kC,KAAO,WAAY0kC,EAAKD,QAAUA,EACvClC,EAAIiC,qBAAqB,QAAQ,GAAGI,YAAYF,IAIpDz+C,QAAQ4+C,WAAYh+C,OAAeC,OAAeoiB,EAAE/f,QAAQ,WAAa,EACzElD,QAAQ6+C,QAAU57B,EAAE4kB,MAAM,iCAC1B7nC,QAAQ8+C,SAAW77B,EAAE/f,QAAQ,WAAa,EAC1ClD,QAAQ++C,MAAQ97B,EAAE/f,QAAQ,aAAe,EACzClD,QAAQg/C,OAAS/7B,EAAE/f,QAAQ,SAAW,GAAmB,aAAb05C,GAA2BD,EAAiB,EACxF38C,QAAQi/C,UAAYh8B,EAAE/f,QAAQ,YAAc,GAAK+f,EAAE/f,QAAQ,QAAU,EACrElD,QAAQk/C,KAAOj8B,EAAE/f,QAAQ,kBAAoB,EAC7ClD,QAAQm/C,YAAcl8B,EAAE/f,QAAQ,cAAgB,EAChDlD,QAAQo/C,aAAen8B,EAAE/f,QAAQ,eAAiB,GAAM+f,EAAE/f,QAAQ,WAAa,GAAK+f,EAAE/f,QAAQ,OAAS,EACvGlD,QAAQq/C,OAAShD,EAAIiD,eAAiB,kBAAmBjD,EACzDr8C,QAAQu/C,SAAWt8B,EAAE/f,QAAQ,mBAAqB,EAClDlD,QAAQw/C,SAAWv8B,EAAE/f,QAAQ,WAAa,IAA8B,IAAzB+f,EAAE/f,QAAQ,UACzDlD,QAAQy/C,SAAWx8B,EAAE/f,QAAQ,WAAa,EAC1ClD,QAAQ0/C,MAAQ1/C,QAAQ4+C,SACxB5+C,QAAQ2/C,UAAY18B,EAAE/f,QAAQ,YAAc,EAC5ClD,QAAQ4/C,OAAS38B,EAAE/f,QAAQ,SAAW,GAAK+f,EAAE/f,QAAQ,QAAU,EAC/DlD,QAAQ6/C,WAAa58B,EAAE/f,QAAQ,aAAe,EAC9ClD,QAAQ8/C,aAAe78B,EAAE/f,QAAQ,aAAe,EAChDlD,QAAQ+/C,gBAAmBn/C,OAAeC,MACtCoiB,EAAE/f,QAAQ,SAAW,GAAK+f,EAAE/f,QAAQ,aAAe,GACnDlD,QAAQggD,cAAe,EACvBhgD,QAAQ6/C,YAAa,GACd,OAAQ7/C,QAAQY,QAAUqiB,EAAE/f,QAAQ,aAAe,GAC1DlD,QAAQigD,cAAe,EACvBjgD,QAAQ6/C,YAAa,GACd,OAAQ7/C,QAAQY,QAAUqiB,EAAE/f,QAAQ,aAAe,GAC1DlD,QAAQkgD,cAAe,EACvBlgD,QAAQ6/C,YAAa,GACd,OAAQ7/C,QAAQY,QAAUqiB,EAAE/f,QAAQ,aAAe,IAC1DlD,QAAQmgD,cAAe,EACvBngD,QAAQ6/C,YAAa,GAGzB7/C,QAAQogD,aAAe,QAASpgD,QAAQY,OACxCZ,QAAQqgD,aAAep9B,EAAE/f,QAAQ,WAAa,EAC9ClD,QAAQsgD,aAAer9B,EAAE/f,QAAQ,cAAgB,EAC7C+f,EAAE/f,QAAQ,mBAAqB,IAC/BlD,QAAQugD,kBAAmB,EAC3BvgD,QAAQ6/C,YAAa,IAErB58B,EAAE/f,QAAQ,QAAU,GAAK+f,EAAE/f,QAAQ,YAAc,GAAK+f,EAAE/f,QAAQ,QAAU,KAC1ElD,QAAQwgD,cAAe,IAGvBxgD,QAAQi/C,WAAaj/C,QAAQ6+C,UAEzBjC,IAAyC,GAA5BA,EAAS15C,QAAQ,SAA4C,GAA5B05C,EAAS15C,QAAQ,QAE1DlD,QAAQi/C,UACbj/C,QAAQ48C,SAAW58C,QAAQygD,iBAE3BzgD,QAAQ48C,SAAW58C,QAAQ0gD,aAG/B1gD,QAAQ48C,SAAW58C,QAAQ2gD,YAExBtE,C,CAMAuE,yBACP,OAAO5gD,QAAQ6/C,YAAc7/C,QAAQ8/C,cAAgB9/C,QAAQggD,cAAgBhgD,QAAQsgD,cAAgBtgD,QAAQqgD,cAAgBrgD,QAAQugD,kBAAoBvgD,QAAQigD,cAAgBjgD,QAAQkgD,cAAgBlgD,QAAQmgD,cAAgBngD,QAAQogD,cAAgBpgD,QAAQwgD,cAAiBxgD,QAAQY,QAAUZ,QAAQY,OAAOq8C,Q,CAOvTjhD,qBAAqBuU,GAEjB,OADAvQ,QAAQ6gD,WACD7gD,QAAQu8C,UAAUmC,cAAcnuC,E,CAQ3CvU,sBAAsBuU,GAElB,OADAvQ,QAAQ6gD,WACD7gD,QAAQu8C,UAAUuE,eAAevwC,E,CAO5CvU,qBAAqB+kD,GACbA,GAAOA,EAAIC,YAAYD,EAAIC,WAAWC,YAAYF,E,CAM1D/kD,aACI,OAAOklD,KAAKC,K,CAOLC,yBAEP,OADAphD,QAAQ6gD,WACD7gD,QAAQqhD,cAAgBrhD,QAAQo8C,QAAQkF,YAActhD,QAAQu8C,UAAU2B,KAAKkD,W,CAG7EA,uBAAYn+C,GACnBjD,QAAQqhD,aAAep+C,C,CAOhBs+C,0BAEP,OADAvhD,QAAQ6gD,WACD7gD,QAAQwhD,eAAiBxhD,QAAQo8C,QAAQqF,aAAezhD,QAAQu8C,UAAU2B,KAAKqD,cAAgBvhD,QAAQu8C,UAAUmF,gBAAgBH,Y,CAGjIA,wBAAat+C,GACpBjD,QAAQwhD,cAAgBv+C,C,CAIjBoK,mBAEP,OADArN,QAAQ6gD,YACChhD,MAAMS,OAAST,MAAMS,MAAMqhD,eAAkB3hD,QAAQuhD,aAAevhD,QAAQohD,aAAephD,QAAQ4hD,U,CAIrGt0C,oBAEP,OADAtN,QAAQ6gD,YACChhD,MAAMS,OAAST,MAAMS,MAAMqhD,eAAkB3hD,QAAQohD,YAAcphD,QAAQuhD,cAAgBvhD,QAAQ4hD,U,CAIrGA,wBASP,OARI5hD,QAAQ6hD,YAAc,IACtB7hD,QAAQ6gD,WACJ7gD,QAAQy8C,UAAUv5C,QAAQ,0EAA4E,EAAGlD,QAAQ6hD,YAAc,GAE/H7hD,QAAQ6hD,YAAe7hD,QAAQo8C,QAAQ0F,kBAAoB,EACvD9hD,QAAQ6hD,YAAc,IAAG7hD,QAAQ6hD,YAAc,KAGpD7hD,QAAQ6hD,W,CAIRE,uBAOP,OANK/hD,QAAQgiD,aACThiD,QAAQ6gD,WACR7gD,QAAQgiD,WAAahiD,QAAQ0+C,cAAc,OAC3C1+C,QAAQgiD,WAAWp8C,GAAK,gBACxB5F,QAAQu8C,UAAU2B,KAAKS,YAAY3+C,QAAQgiD,aAExChiD,QAAQgiD,U,CAGRD,qBAAU9+C,GACjBjD,QAAQgiD,WAAa/+C,C,CAIdrC,oBACP,OAAOZ,QAAQo8C,SAAWp8C,QAAQ6gD,U,CAI3BrE,sBAEP,OADAx8C,QAAQ6gD,WACD7gD,QAAQu8C,S,CAQnBvgD,sBAAsB+d,GAClB,GAAI/Z,QAAQ6/C,WAAY,OAAO,KAC/B,IAAKj/C,OAAO6Q,WAAa7Q,OAAO6Q,SAASwwC,OACrC,OAAO,KACX,IAAI5mB,EAAc,IAAI+K,OAAO,QAAUrsB,EAAO,iBAC1CsV,EAASzuB,OAAO6Q,SAASwwC,OAAO3+C,UAAU,GAAGukC,MAAMxM,GACvD,OAAS,MAALhM,EAAkB6yB,SAAS7yB,EAAE,IAC1B,I,EAnZJrvB,QAAW2gD,YAAG,EACd3gD,QAAgBygD,iBAAG,EACnBzgD,QAAY0gD,aAAG,EAmBP1gD,QAAW6hD,aAAY,EAQ/B7hD,QAAUmiD,WAAQ,KAGVniD,QAAAoiD,MAAgB,IAAIhc,OAAO,WAE3BpmC,QAAOqiD,QAA8B,GAE7CriD,QAAAsiD,YAAwB,SAAUve,EAAawe,GAClD,IAAIC,EAAqBxiD,QAAQoiD,MAAMK,KAAK1e,GAC5C,GAAIye,GAAaxiD,QAAQqiD,QAAQE,GAC7B,OAAOviD,QAAQqiD,QAAQE,GAG3B,IAAI9iB,EAAgCz/B,QAAQwsB,QAC5CiT,EAAI8iB,KAAOA,EAEX,IAAIlzB,EAASoQ,EAAI6iB,YAAYve,GAE7B,OADIye,IAAWxiD,QAAQqiD,QAAQE,GAAQlzB,GAChCA,CACX,E,MCpGSqzB,KA8LT1mD,YAAYkI,EAAYC,EAAYw+C,GAC3BD,KAAKE,YAEV59C,KAAK69C,OAELH,KAAKI,OAAQ,EACbJ,KAAKK,kBAAoBJ,GAAOD,KAAKM,QACrCN,KAAKO,QAAQC,KAAKh/C,EAAGC,EAAGu+C,KAAKK,mBAC7BljD,MAAMO,YAAY+X,UAAU,EAAG,KAAMuqC,KAAKS,M,CAG9CnnD,kBAAkBkI,EAAYC,EAAYw+C,GACjCD,KAAKE,YAEV59C,KAAK69C,OAELH,KAAKI,OAAQ,EACbJ,KAAKU,oBAAsBT,EAC3BD,KAAKO,QAAQI,WAAWn/C,EAAGC,EAAGw+C,GAC9B9iD,MAAMO,YAAY+X,UAAU,EAAG,KAAMuqC,KAAKS,M,CAGtCnnD,iBACJ,IAAK0mD,KAAKO,QAAS,CACf,IAAIrhD,EAAM7F,WAAWM,SAAS,UAC9B,IAAKuF,EAED,OADAtF,QAAQsvB,MAAM,qBACP,EAEX82B,KAAKO,QAAU,IAAIrhD,CACtB,CAED,OAAO,C,CAMX5F,cACS0mD,KAAKI,QAGVJ,KAAKI,OAAQ,EACbJ,KAAKK,kBAAoB,KACzBL,KAAKU,oBAAsB,KAC3BvjD,MAAMO,YAAYuP,MAAM,KAAM+yC,KAAKS,MAC/BT,KAAKO,SACLP,KAAKO,QAAQJ,O,CAOrB7mD,cACI0mD,KAAK3Z,SACL,IAAI5oC,EAAgBH,QAAQmhD,MAC5B,GAAIhhD,EAAQuiD,KAAKY,OAAS,IAAM,OAEhC,IAAIxzC,EAAgB4yC,KAAK3Z,OAIzB,GAFA2Z,KAAK9lD,IAAM2F,KAAKoB,MAAe,IAARmM,GAAiB3P,EAAQuiD,KAAKY,SAEjDZ,KAAKI,MAAO,CACZJ,KAAKa,mBACL,IAAIC,EAAgBd,KAAK9lD,IAAM,EAAI2F,KAAKgd,MAAM,IAAOmjC,KAAK9lD,KAAKoG,WAAa,IAC5E0/C,KAAKe,QAAUf,KAAK9lD,KAAO8lD,KAAKgB,WAAa,QAAU,IAAM,IAAMF,EAAQ,KAC3Ed,KAAKO,QAAQU,SACbjB,KAAK/yC,OACR,CAED+yC,KAAK3Z,OAAS,EACd2Z,KAAKY,OAASnjD,C,CAGlBnE,0BACI0mD,KAAKkB,eAAiB90C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqBgJ,UACjFpB,KAAKqB,SAAWj1C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqBkJ,UAC3EtB,KAAKuB,iBAAmBn1C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqBoJ,kBAEnFxB,KAAK5qC,UAAYhJ,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqBqJ,WAC5EzB,KAAK0B,cAAgBt1C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqBuJ,gBAChF3B,KAAK4B,oBAAsBx1C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqByJ,qBACtF7B,KAAK8B,aAAe11C,OAAO+Y,aAAag8B,kBAAkB/I,uBAAqB2J,a,CAOnFzoD,eACS0mD,KAAKK,oBAEVL,KAAKK,kBAAkBnzC,SAAQ80C,IACP,WAAhBA,EAAQC,OACPjC,KAAagC,EAAQzhD,OAAS,EAAC,IAExC6L,OAAO+Y,aAAa+8B,oBAAoB9J,uBAAqBgJ,UAC7Dh1C,OAAO+Y,aAAa+8B,oBAAoB9J,uBAAqBkJ,UAC7Dl1C,OAAO+Y,aAAa+8B,oBAAoB9J,uBAAqBoJ,kB,CAGjEloD,cAAcyjC,EAAUv7B,EAAWC,GAC3Bu+C,KAAKI,OACLJ,KAAKO,QAAQvN,OAAOjW,EAAKv7B,EAAGC,E,EApStBu+C,KAAemC,gBAAiB,CAAEC,MAAO,MAAO7hD,MAAO,UAAWJ,MAAO,SAAUkiD,MAAO,MAAOJ,KAAM,UAEvGjC,KAAgBsC,iBAAiB,CAAEF,MAAO,OAAQ7hD,MAAO,cAAeJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,UAE5GjC,KAAoBuC,qBAAiB,CAAEH,MAAO,WAAY7hD,MAAO,gBAAiBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,UAEtHjC,KAAQsB,SAAiB,CAAEc,MAAO,WAAY7hD,MAAO,WAAYJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAErGjC,KAAYwC,aAAiB,CAAEJ,MAAO,eAAgB7hD,MAAO,iBAAkBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEnHjC,KAAUyC,WAAiB,CAAEL,MAAO,aAAc7hD,MAAO,aAAcJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,UAE3GjC,KAAc0C,eAAiB,CAAEN,MAAO,iBAAkB7hD,MAAO,iBAAkBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,UAEvHjC,KAAkB2C,mBAAiB,CAAEP,MAAO,qBAAsB7hD,MAAO,qBAAsBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,UAEnIjC,KAAc4C,eAAiB,CAAER,MAAO,iBAAkB7hD,MAAO,iBAAkBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEvHjC,KAAa6C,cAAiB,CAAET,MAAO,gBAAiB7hD,MAAO,gBAAiBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEpHjC,KAAc8C,eAAiB,CAAEV,MAAO,iBAAkB7hD,MAAO,iBAAkBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEvHjC,KAAa+C,cAAiB,CAAEX,MAAO,gBAAiB7hD,MAAO,gBAAiBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEpHjC,KAAiBgD,kBAAiB,CAAEZ,MAAO,oBAAqB7hD,MAAO,oBAAqBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEhIjC,KAAgBwB,iBAAiB,CAAEY,MAAO,mBAAoB7hD,MAAO,mBAAoBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAE7HjC,KAAWiD,YAAiB,CAAEb,MAAO,cAAe7hD,MAAO,cAAeJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAE9GjC,KAAYkD,aAAiB,CAAEd,MAAO,eAAgB7hD,MAAO,eAAgBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAEjHjC,KAASyB,UAAiB,CAAEW,MAAO,YAAa7hD,MAAO,YAAaJ,MAAO,QAASkiD,MAAO,IAAKJ,KAAM,UAEtGjC,KAAc2B,eAAiB,CAAES,MAAO,gBAAiB7hD,MAAO,gBAAiBJ,MAAO,QAASkiD,MAAO,IAAKJ,KAAM,UAEnHjC,KAAmB6B,oBAAiB,CAAEO,MAAO,sBAAuB7hD,MAAO,sBAAuBJ,MAAO,QAASkiD,MAAO,IAAKJ,KAAM,UAEpIjC,KAAY+B,aAAiB,CAAEK,MAAO,eAAgB7hD,MAAO,eAAgBJ,MAAO,QAASkiD,MAAO,IAAKJ,KAAM,UAE/GjC,KAAgBmD,iBAAiB,CAAEf,MAAO,mBAAoB7hD,MAAO,gBAAiBJ,MAAO,QAASkiD,MAAO,MAAOJ,KAAM,WAE1HjC,KAAAM,QAA+B,CAACN,KAAKmC,gBAAiBnC,KAAKsC,iBAAkBtC,KAAKuC,qBAAsBvC,KAAKsB,SAAUtB,KAAKwC,aAAcxC,KAAKyC,WAAYzC,KAAK0C,eAAgB1C,KAAK2C,mBAC7L3C,KAAK4C,eAAgB5C,KAAK8C,eAAgB9C,KAAK+C,cAAe/C,KAAKgD,kBAAmBhD,KAAKwB,iBAAkBxB,KAAKiD,YAAajD,KAAKkD,aAAclD,KAAKyB,UAAWzB,KAAK2B,eAAgB3B,KAAK6B,oBAAqB7B,KAAK+B,aAAc/B,KAAKmD,kBAEjOnD,KAAAoD,WAAkC,CAACpD,KAAKyB,UAAWzB,KAAK2B,eAAgB3B,KAAK6B,oBAAqB7B,KAAK+B,cAEvG/B,KAAAqD,WAAkC,CAACrD,KAAKsB,SAAUtB,KAAKwC,aAAcxC,KAAK8C,eAAgB9C,KAAK+C,cAAe/C,KAAKgD,kBAAmBhD,KAAKwB,iBAAkBxB,KAAKiD,YAAajD,KAAKkD,cAGpLlD,KAAAsD,cAAoC,CAAElB,MAAO,SAAU7hD,MAAO,eAAgBJ,MAAO,SAErF6/C,KAAAuD,gBAAsC,CAAEnB,MAAO,WAAY7hD,MAAO,iBAAkBJ,MAAO,SAE3F6/C,KAAAwD,aAAmC,CAAEpB,MAAO,QAAS7hD,MAAO,cAAeJ,MAAO,SAElF6/C,KAAAyD,mBAAyC,CAAErB,MAAO,cAAe7hD,MAAO,oBAAqBJ,MAAO,SAEpG6/C,KAAA0D,sBAA4C,CAAEtB,MAAO,iBAAkB7hD,MAAO,uBAAwBJ,MAAO,SAE7G6/C,KAAA2D,qBAA2C,CAAEvB,MAAO,gBAAiB7hD,MAAO,sBAAuBJ,MAAO,SAE1G6/C,KAAA4D,YAAkC,CAAExB,MAAO,OAAQ7hD,MAAO,aAAcJ,MAAO,SAE/E6/C,KAAA6D,mBAAyC,CAAEzB,MAAO,cAAe7hD,MAAO,oBAAqBJ,MAAO,SAEpG6/C,KAAA8D,gBAAsC,CAAE1B,MAAO,WAAY7hD,MAAO,iBAAkBJ,MAAO,SAE3F6/C,KAAA+D,YAAkC,CAAE3B,MAAO,OAAQ7hD,MAAO,aAAcJ,MAAO,SAE/E6/C,KAAAgE,iBAAuC,CAAE5B,MAAO,YAAa7hD,MAAO,kBAAmBJ,MAAO,SAE9F6/C,KAAAiE,cAAoC,CAAE7B,MAAO,SAAU7hD,MAAO,eAAgBJ,MAAO,SAGrF6/C,KAASkE,UAA8B,CAAClE,KAAKsD,cAAetD,KAAKwD,aAAcxD,KAAKuD,gBAAiBvD,KAAKyD,mBAAoBzD,KAAK0D,sBAAuB1D,KAAK2D,qBAAsB3D,KAAKiE,cAAejE,KAAK6D,mBAAoB7D,KAAKgE,iBAAkBhE,KAAK4D,YAAa5D,KAAK8D,gBAAiB9D,KAAK+D,aAEtS/D,KAAgBmE,iBAA8B,CAACnE,KAAKsD,cAAetD,KAAKwD,aAAcxD,KAAKuD,gBAAiBvD,KAAKyD,mBAAoBzD,KAAK0D,sBAAuB1D,KAAK2D,sBAEtK3D,KAAgBoE,iBAA8B,CAACpE,KAAKiE,cAAejE,KAAK6D,mBAAoB7D,KAAKgE,iBAAkBhE,KAAK4D,YAAa5D,KAAK8D,gBAAiB9D,KAAK+D,aAGhK/D,KAAG9lD,IAAW,EAEd8lD,KAASqE,UAAW,EAEpBrE,KAAyBsE,0BAAW,EAG3CtE,KAAYuE,aAAW,EAEvBvE,KAAYwE,aAAW,EAEvBxE,KAAayE,cAAW,EAExBzE,KAAUgB,YAAY,EAMfhB,KAAMY,OAAW,EAEjBZ,KAAM3Z,OAAW,EAGjB2Z,KAAOe,QAAW,GAElBf,KAAW0E,YAAW,EAEtB1E,KAAa2E,cAAW,EAExB3E,KAAQqB,SAAW,EAEnBrB,KAAckB,eAAW,EAEzBlB,KAAU4E,WAAW,EAErB5E,KAAc6E,eAAW,EAEzB7E,KAAkB8E,mBAAW,EAE7B9E,KAAc+E,eAAW,EAEzB/E,KAAagF,cAAW,EAExBhF,KAAciF,eAAW,EAEzBjF,KAAakF,cAAW,EAExBlF,KAAiBmF,kBAAW,EAE5BnF,KAAgBuB,iBAAW,EAE3BvB,KAAWoF,YAAW,EAEtBpF,KAAYqF,aAAW,EAIvBrF,KAAa0B,cAAW,EAExB1B,KAAmB4B,oBAAW,EAE9B5B,KAAY8B,aAAW,EAEvB9B,KAAasF,cAAW,EAIxBtF,KAAYuF,cAAY,EAExBvF,KAAcwF,gBAAY,EAE1BxF,KAAWyF,aAAY,EAEvBzF,KAAe0F,iBAAY,EAE3B1F,KAAiB2F,mBAAY,EAE7B3F,KAAU4F,YAAY,EAEtB5F,KAAiB6F,mBAAY,EAE7B7F,KAAc8F,gBAAY,EAE1B9F,KAAoB+F,sBAAY,EAEhC/F,KAAmBgG,qBAAY,EAE/BhG,KAAUiG,YAAY,EAEtBjG,KAAYkG,cAAY,EA4HzChoD,OAAe8hD,KAAOA,K,MCtTVmG,WA4DTtnD,YAAYunD,EAAqBD,WAAWE,SA/B5C/jD,KAAUgkD,YAAY,EAEtBhkD,KAAKikD,MAAgB,KAErBjkD,KAAQkkD,SAAa,KACXlkD,KAAGK,IAAW,EAExBL,KAAWmkD,YAAW,EAEtBnkD,KAAOokD,QAAY,KAGnBpkD,KAAA8tC,KAAkB,IAAIX,UAItBntC,KAASqkD,UAAW,EAEpBrkD,KAAOskD,QAAW,EAElBtkD,KAAI6tC,KAAW,EAEf7tC,KAAWsqC,YAAY,KAUnBtqC,KAAKmkD,YAAcL,EACnB9jD,KAAKK,MAAQwjD,WAAWU,E,CAT5BvtD,kBACI,IAAI85C,EAAgB+S,WAAWW,WAAa,IAAIX,YAAY,GAC5D/S,EAAExG,YAAc,IAAIW,QAAQ,EAAG,GAC/B6F,EAAExG,YAAYe,MAAQ,EACtByF,EAAEjD,KAAO,U,CAQb7R,QACI,OAAOh8B,KAAKK,G,CAIhB4tC,gBACI,OAAOjuC,KAAKmkD,W,CAGhBnmD,WACI,MAAO,WAAagC,KAAKqkD,UAAY,QAAUrkD,KAAKskD,QAAU,QAAUtkD,KAAK8tC,I,CAGjFC,eAAyB,OAAO,CAAE,CAClCG,gBAAa,EA7EN2V,WAAOE,QAAW,IAClBF,WAAWY,YAAW,MACtBZ,WAAaa,cAAW,MACxBb,WAAWc,YAAW,MACtBd,WAAWe,YAAW,MACtBf,WAAoBgB,qBAAW,MAC/BhB,WAAmBiB,oBAAW,MAC9BjB,WAAckB,eAAW,MACzBlB,WAAcmB,eAAW,MACzBnB,WAAOoB,QAAW,MAClBpB,WAAYqB,aAAW,MACvBrB,WAAWsB,YAAW,MACtBtB,WAAiBuB,kBAAW,MAC5BvB,WAAUwB,WAAW,MACrBxB,WAAYyB,aAAW,MACvBzB,WAAgB0B,iBAAW,MAE3B1B,WAAQ2B,UAAY,EACpB3B,WAAY4B,aAAW,EACvB5B,WAAe6B,gBAAW,EAC1B7B,WAAM8B,OAAW,EACjB9B,WAAa+B,cAAW,EAGxB/B,WAAEU,GAAW,EACbV,WAASgC,UAAY,KLhCpB9P,yDAWX,KAVGA,EAAA,uDACAA,IAAA,yCACAA,IAAA,+CACAA,IAAA,uCACAA,IAAA,mDACAA,IAAA,mDACAA,IAAA,iBACAA,IAAA,iCACAA,IAAA,eACAA,IAAA,mC,MMHS+P,oBAqCZ9uD,kBACC8uD,oBAAoBC,cAAgB,CACnCC,OAAU,CAAC,EAAGl8C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GACjE0e,QAAW,CAAC,EAAGp8C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GAClE2e,QAAW,CAAC,EAAGr8C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GAClE4e,QAAW,CAAC,EAAGt8C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GAClE3pC,MAAS,CAAC,EAAGiM,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GAChE6e,MAAS,CAAC,EAAGv8C,OAAO+Y,aAAaojC,UAAUlQ,eAAauQ,eAAgB,GACxEC,MAAS,CAAC,EAAIz8C,OAAO+Y,aAAaojC,UAAUlQ,eAAauQ,eAAgB,GACzEE,MAAS,CAAC,EAAI18C,OAAO+Y,aAAaojC,UAAUlQ,eAAauQ,eAAgB,GACzEhgC,KAAQ,CAAC,EAAIxc,OAAO+Y,aAAaojC,UAAUlQ,eAAauQ,eAAgB,GACxEG,OAAU,CAAC,EAAI38C,OAAO+Y,aAAaojC,UAAUlQ,eAAa2Q,gBAAiB,GAC3EC,OAAU,CAAC,EAAG78C,OAAO+Y,aAAaojC,UAAUlQ,eAAa2Q,gBAAiB,GAC1EE,iBAAoB,CAAC,EAAG98C,OAAO+Y,aAAaojC,UAAUlQ,eAAa2Q,gBAAiB,GACpFG,iBAAoB,CAAC,EAAG/8C,OAAO+Y,aAAaojC,UAAUlQ,eAAa2Q,gBAAiB,GACpFI,YAAe,CAAC,EAAGh9C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GACtEuf,YAAe,CAAC,EAAGj9C,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAAQ,GACtEwf,OAAS,CAAC,EAAEl9C,OAAO+Y,aAAaojC,UAAUlQ,eAAakR,MAAM,G,CAS/DjwD,uBAAuB0oD,GACtB,IAAIwH,EAAcpB,oBAAoBC,cAAcrG,GACpD,GAAIwH,EACH,OAAOA,EAEP,KAAM,iE,EAlEDpB,oBAAMqB,OAAW,SAEjBrB,oBAAOsB,QAAW,UAElBtB,oBAAOuB,QAAW,UAElBvB,oBAAOwB,QAAW,UAElBxB,oBAAK17B,MAAW,QAEhB07B,oBAAKyB,MAAW,QAEhBzB,oBAAK0B,MAAW,QAEhB1B,oBAAK2B,MAAW,QAEhB3B,oBAAO4B,QAAU,OAEjB5B,oBAAM6B,OAAW,SAEjB7B,oBAAM8B,OAAW,SAEjB9B,oBAAgB+B,iBAAW,mBAE3B/B,oBAAgBgC,iBAAW,mBAE3BhC,oBAAWiC,YAAW,cAEtBjC,oBAAWkC,YAAW,cAEtBlC,oBAAQmC,SAAW,S,MCjCdC,kBA2CT3rD,YAAY4rD,EAAsBC,GAC9BpoD,KAAKK,MAAQ6nD,kBAAkBG,iBAC/BroD,KAAKsoD,mBAAqB,GAC1BtoD,KAAKuoD,cAAgBJ,EACrBnoD,KAAKwoD,gBAAkBJ,EACvB,IAAIt9C,EAAgBs9C,EAAensD,OACnC+D,KAAKyoD,cAAgB,GAErB,IAAK,IAAI/oD,EAAY,EAAGA,EAAIoL,EAAOpL,IAAK,CACpC,IAAIgpD,EAA+BN,EAAe1oD,GAC9CqV,EAAe2zC,EAAcC,cACjC3oD,KAAKsoD,mBAAmBvzC,GAAQ2zC,EAChC,IAAIzqD,EAAoB,IAAIqkB,WAAW,GACnCsmC,EAAoB9C,oBAAoB+C,gBAAgBH,EAAcI,gBAC1E7qD,EAAM,GAAK2qD,EAAW,GACtB3qD,EAAM,GAAK2qD,EAAW,GACtB3qD,EAAM,GAAK2qD,EAAW,GACtB3qD,EAAM,GAAK+B,KAAKuoD,cAChBtqD,EAAM,GAAKyqD,EAActqC,QACzBpe,KAAKyoD,cAAc1zC,GAAQ9W,CAC9B,C,CA3CD2C,SACA,OAAOZ,KAAKK,G,CAMZ8nD,mBACA,OAAOnoD,KAAKuoD,a,CAMZQ,yBACA,OAAO/oD,KAAKwoD,gBAAgBvsD,M,CAmChC+sD,wBAAwBz+C,GACpB,OAAOvK,KAAKwoD,gBAAgBj+C,E,CAMhC0+C,wBAAwBC,GACpB,OAAOlpD,KAAKsoD,mBAAmBY,E,EA5EpBhB,kBAAgBG,iBAAW,E,MCLjCc,cAmCT5sD,YAAYkkB,EAAgB2oC,EAAuBC,GAC/CrpD,KAAKoe,QAAUqC,EACfzgB,KAAK8oD,eAAiBM,EACtBppD,KAAK2oD,cAAgBU,C,CA1BrB5oC,aACA,OAAOzgB,KAAKoe,O,CAKZgrC,oBACA,OAAOppD,KAAK8oD,c,CAMZO,mBACA,OAAOrpD,KAAK2oD,a,EP7BR3S,qEAUX,KATGA,EAAA,+BACAA,IAAA,+CAEAA,IAAA,mCACAA,IAAA,uCACAA,IAAA,yCACAA,IAAA,yDACAA,IAAA,yCACAA,IAAA,6CAOSC,sDAOV,KALCA,EAAA,mBAEAA,IAAA,qBAEAA,IAAA,mB,MQZSqT,YAcZ/sD,cACCyD,KAAKupD,yBAA2Bz/C,OAAO+Y,aAAa2mC,mB,CAG3CC,qBACTzpD,KAAKupD,yBAAyBG,kBAAkB1pD,KAAK2pD,e,CAG5CC,oBACT5pD,KAAKupD,yBAAyBM,iBAAiB7pD,KAAK8pD,mB,CAIrDC,WAAWC,EAA+BC,GACzCjqD,KAAK2pD,eAAiBK,EACtBhqD,KAAK8pD,mBAAqBG,EAC1BA,GAAeA,EAAYC,SAC3BlqD,KAAKmqD,OACLnqD,KAAKypD,qBACLzpD,KAAK4pD,oBACL5pD,KAAKoqD,SACLH,GAAeA,EAAYC,Q,CAM5BC,OACCnqD,KAAKupD,yBAAyBc,kBAC9Bf,YAAYgB,sBAAwBtqD,I,CAMrCoqD,SACC,GAAId,YAAYgB,uBAAuBtqD,KAItC,KAAM,gDAHNA,KAAKupD,yBAAyBgB,oBAC9BjB,YAAYgB,sBAAwB,I,CAMtCE,SACC,OAAQlB,YAAYgB,uBAAuBtqD,I,CAG5ChJ,8BACC8S,OAAO+Y,aAAa4nC,oBACpBnB,YAAYgB,sBAAwB,I,CAMrCnnD,UACCnD,KAAKupD,yBAAyBpmD,UAC9BnD,KAAKupD,yBAA2B,I,EPlFtBrT,sDAOX,KALGA,EAAA,iBAEAA,IAAA,mBAEAA,IAAA,mB,MQFSwU,OAcZnuD,YAAYouD,EAA8BC,GAN1C5qD,KAAW6qD,YAAW,EAOrB7qD,KAAK8qD,UAAYhhD,OAAO+Y,aAAakoC,aAAaJ,EAAWC,GAC7D5qD,KAAKgrD,YAAcL,EACnB3qD,KAAKirD,aAAeL,C,CAPjBM,kBACH,OAAOlrD,KAAKirD,Y,CAYbd,OACC,OAAOnqD,KAAK8qD,UAAUK,Y,CAGvBjB,SACC,OAAOlqD,KAAK8qD,UAAUM,c,CAMvBjoD,UACKnD,KAAK8qD,YACR9qD,KAAK8qD,UAAU3nD,UACfnD,KAAK8qD,UAAY,K,ECpCd,MAAOO,oBAAoBX,OAO7BnuD,YAAYouD,EAA8BC,GACtCv4C,MAAMs4C,EAAYC,GANZ5qD,KAAAsrD,WAA0BpV,cAAYqV,M,CAYhDC,cAActpD,EAAuDupD,GACjE,IAAIC,EAAyBpC,YAAYgB,sBAErCoB,EACIA,EAAU5B,qBAAuB9pD,KACjCA,KAAK8qD,UAAUa,cAAc,IAE7BD,EAAUtB,SACVpqD,KAAKmqD,OACe,iBAATjoD,EACPlC,KAAK8qD,UAAUa,cAAczpD,GAE7BlC,KAAK8qD,UAAUc,QAAQ1pD,EAAMupD,GACjCC,EAAUvB,SAGdnqD,KAAKmqD,OACe,iBAATjoD,EACPlC,KAAK8qD,UAAUa,cAAczpD,GAE7BlC,KAAK8qD,UAAUc,QAAQ1pD,EAAMupD,G,QCnChCI,YAEFA,WAAQC,SAAW,EAEnBD,WAAS9J,UAAW,E,MCJlBgK,SA+CTxvD,YAAYod,GA1CF3Z,KAAQgsD,SAAW,EAE7BhsD,KAAOisD,SAAY,EACTjsD,KAAWksD,YAAW,EACtBlsD,KAAWmsD,YAAW,EACtBnsD,KAAQosD,SAAe,KAsC7BpsD,KAAKqsD,YAAc1yC,C,CA/BnB2yC,mBACA,OAAOtsD,KAAKqsD,YAAY7qC,QAAQ5H,U,CAGhCA,eAAW3b,GACX+B,KAAKusD,cAActuD,E,CAGvBsuD,cAActuD,GACN+B,KAAKqsD,YAAYxB,cAAgB5sD,IACjCA,GAAS+B,KAAKmsD,aAAgBnsD,KAAK6Z,cAAsB,EAAR5b,EAAY,KAAK,GAClE+B,KAAKqsD,YAAYxB,YAAc5sD,E,CASvCuuD,SAAS1tC,GACL,IAAI2tC,EAAczsD,KAAKqsD,YAAYxB,YACnC,GAAI/rC,EAAI,CACJ,IAAI4tC,EAAiB1sD,KAAKqsD,YAAYxB,YAAc/rC,EACpD4tC,GAAU1sD,KAAKmsD,aAAgBnsD,KAAK6Z,cAAc6yC,GAAU,GAAG,GAC/D1sD,KAAKqsD,YAAYxB,YAAc6B,CAClC,CACD,OAAOD,C,CAOXzxC,kBAII,OAHKhb,KAAK2sD,gBACN3sD,KAAK2sD,cAAgB,IAAItxC,aAAarb,KAAKqsD,YAAY7qC,QAAQ7H,SAE5D3Z,KAAK2sD,a,CAGNC,cAEN,GADA5sD,KAAKgsD,SAAWzuD,KAAKuL,IAAI9I,KAAKgsD,SAAUhsD,KAAKqsD,YAAYxB,aACrDgB,WAAW9J,UAAY,IAAM,EAAG,CAChC,GAAI/hD,KAAKqsD,YAAY7qC,QAAQ5H,WAAc5Z,KAAKgsD,SAAW,GAAK,CAE5DhsD,KAAKqsD,YAAY7qC,QAAUxhB,KAAKqsD,YAAY7qC,QAAQnH,MAAM,EAAGra,KAAKgsD,SAAW,IAC7EhsD,KAAKmsD,YAAcnsD,KAAKqsD,YAAY7qC,QAAQ5H,WAC5C5Z,KAAK6sD,iBACL,IAAIC,EAAO9sD,KAAKqsD,YAAY7qC,QAAQ7H,OAClC3Z,KAAKmsD,YAAc,GAAM,IAAOnsD,KAAK2sD,cAAgB,IAAItxC,aAAayxC,IACtE9sD,KAAKmsD,YAAc,GAAM,IAAOnsD,KAAK+sD,aAAe,IAAItrC,YAAYqrC,IACtE9sD,KAAKgtD,aAAe,IAAIjnC,YAAY+mC,EACvC,CACD9sD,KAAKgsD,SAAWhsD,KAAKqsD,YAAYxB,WACpC,CACG7qD,KAAKksD,YAAclsD,KAAKqsD,YAAY7qC,QAAQ5H,aAC5C5Z,KAAKksD,YAAclsD,KAAKqsD,YAAY7qC,QAAQ5H,WAE5C5Z,KAAKqsD,YAAYvB,UAAUa,cAAc3rD,KAAKksD,cAElDlsD,KAAKqsD,YAAYvB,UAAUc,QAAQ,IAAIpyC,WAAWxZ,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ,EAAG3Z,KAAKqsD,YAAYxB,aAAc,GACrH7qD,KAAKqsD,YAAYnC,Q,CAIX+C,eAAexsC,EAAiB,EAAGysC,EAAoB,EAAGC,EAAqB,GAkBrF,GAjBAntD,KAAKgsD,SAAWzuD,KAAKuL,IAAI9I,KAAKgsD,SAAUhsD,KAAKqsD,YAAYxB,aACrDgB,WAAW9J,UAAY,IAAM,IACzB/hD,KAAKqsD,YAAY7qC,QAAQ5H,WAAc5Z,KAAKgsD,SAAW,KAEvDhsD,KAAKqsD,YAAY7qC,QAAUxhB,KAAKqsD,YAAY7qC,QAAQnH,MAAM,EAAGra,KAAKgsD,SAAW,IAC7EhsD,KAAKmsD,YAAcnsD,KAAKqsD,YAAY7qC,QAAQ5H,WAC5C5Z,KAAK6sD,kBAET7sD,KAAKgsD,SAAWhsD,KAAKqsD,YAAYxB,aAGjC7qD,KAAKksD,YAAclsD,KAAKqsD,YAAY7qC,QAAQ5H,aAC5C5Z,KAAKksD,YAAclsD,KAAKqsD,YAAY7qC,QAAQ5H,WAC5C5Z,KAAKqsD,YAAYvB,UAAUa,cAAc3rD,KAAKksD,cAI9CgB,GAAaC,EAAY,CACzB,IAAIC,EAAyBptD,KAAKqsD,YAAY7qC,QAAQ7H,OAAOU,MAAM6yC,EAAWC,GAC9EntD,KAAKqsD,YAAYvB,UAAUc,QAAQwB,EAAW3sC,EACjD,MACGzgB,KAAKqsD,YAAYvB,UAAUc,QAAQ5rD,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ8G,E,CAOlEosC,iB,CAiBVQ,eACI,QAAKrtD,KAAKisD,UAEVjsD,KAAKisD,SAAU,EACfjsD,KAAKqsD,YAAYlC,OACjBnqD,KAAK4sD,eACE,E,CAIXU,gBAAgB7sC,EAAiB,EAAGysC,EAAoB,EAAGC,EAAqB,GAC5E,QAAKntD,KAAKisD,UAGVjsD,KAAKisD,SAAU,EACfjsD,KAAKqsD,YAAYlC,OACjBnqD,KAAKitD,eAAexsC,EAAQysC,EAAWC,IAChC,E,CASXtzC,cAAc0zC,EAAarlD,GAEvB,IAAI4kD,EAAY9sD,KAAKqsD,YAAY7qC,QACjC,GAAIsrC,GAAQS,GAAOT,EAAKlzC,WACpB,OAAO5Z,KAGX,GAFwBA,KAAKosD,SAEzBlkD,GAAQ4kD,GAAQA,EAAKlzC,WAAa,EAAG,CACrC,IAAI4zC,EAAuB,IAAIh0C,WAAWszC,EAAKnzC,QAC3C8zC,EAAwB,IAAIj0C,WAAW+zC,GAC3CE,EAAUhzC,IAAI+yC,EAAU,GACxBV,EAAO9sD,KAAKqsD,YAAY7qC,QAAUisC,EAClCztD,KAAKosD,SAAW,IAAI5yC,WAAWxZ,KAAKqsD,YAAY7qC,QAAQ7H,OAC3D,KAAM,CACH,IAAIzX,EAAO,IAAI6X,YAAYwzC,GAC3BT,EAAO9sD,KAAKqsD,YAAY7qC,QAAU,IAAIhI,WAAWtX,GACjDlC,KAAKosD,SAAW,IAAI5yC,WAAWszC,EAAKnzC,OACvC,CAQD,OAPAmzC,EAAO9sD,KAAKqsD,YAAY7qC,QAAQ7H,OAC9B4zC,EAAM,GAAM,IAAOvtD,KAAK2sD,cAAgB,IAAItxC,aAAayxC,IACzDS,EAAM,GAAM,IAAOvtD,KAAK+sD,aAAe,IAAItrC,YAAYqrC,IACzD9sD,KAAKgtD,aAAe,IAAIjnC,YAAY+mC,GACpC9sD,KAAK6sD,iBACL7sD,KAAKisD,SAAU,EACfjsD,KAAKmsD,YAAcW,EAAKlzC,WACjB5Z,I,CAGX0tD,OAAOxrD,GAEH,IAAIyrD,EAAiBnoD,EADrBxF,KAAKisD,SAAU,EAEf0B,EAAUzrD,EAAK0X,WACX1X,aAAgBsX,YAChBxZ,KAAK6Z,cAAc7Z,KAAKqsD,YAAYxB,YAAc8C,GAAS,GAC3DnoD,EAAI,IAAIgU,WAAWxZ,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ3Z,KAAKqsD,YAAYxB,cAC9D3oD,aAAgB6jB,aACvB/lB,KAAK6Z,cAAc7Z,KAAKqsD,YAAYxB,YAAc8C,GAAS,GAC3DnoD,EAAI,IAAIugB,YAAY/lB,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ3Z,KAAKqsD,YAAYxB,cAC/D3oD,aAAgBmZ,eACvBrb,KAAK6Z,cAAc7Z,KAAKqsD,YAAYxB,YAAc8C,GAAS,GAC3DnoD,EAAI,IAAI6V,aAAarb,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ3Z,KAAKqsD,YAAYxB,cAE3ErlD,EAAEiV,IAAIvY,EAAM,GACZlC,KAAKqsD,YAAYxB,aAAe8C,EAChC3tD,KAAK6sD,gB,CAQTe,eAAe1rD,EAAmB1D,GAC9BwB,KAAK6Z,cAAc7Z,KAAKqsD,YAAYxB,YAAoB,EAANrsD,GAAS,GAG3D,IAAIyf,EAAiB,IAAI8H,YAAY/lB,KAAKqsD,YAAY7qC,QAAQ7H,OAAQ3Z,KAAKqsD,YAAYxB,YAAarsD,GACpG,GAAW,GAAPA,EACAyf,EAAE,GAAK/b,EAAK,GAAI+b,EAAE,GAAK/b,EAAK,GAAI+b,EAAE,GAAK/b,EAAK,GAC5C+b,EAAE,GAAK/b,EAAK,GAAI+b,EAAE,GAAK/b,EAAK,GAAI+b,EAAE,GAAK/b,EAAK,QACzC,GAAI1D,GAAO,IACdyf,EAAExD,IAAI,IAAIsL,YAAY7jB,EAAKyX,OAAQ,EAAGnb,SAEtC,IAAK,IAAIC,EAAY,EAAGA,EAAID,EAAKC,IAC7Bwf,EAAExf,GAAKyD,EAAKzD,GAGpBuB,KAAKqsD,YAAYxB,aAAqB,EAANrsD,EAChCwB,KAAK6sD,gB,CAITgB,YACI,OAAO7tD,KAAKqsD,YAAY7qC,QAAQ7H,M,CAGpCm0C,gBACI9tD,KAAKisD,SAAU,C,CAKnB8B,UAAUttC,EAAiB,EAAGysC,EAAoB,EAAGC,EAAqB,GACtE,IAAIa,EAAkBhuD,KAAKstD,kBAM3B,OALAttD,KAAKqsD,YAAYnC,SAIjB/gC,WAAWwF,aAAe,KACnBq/B,C,CAGXr5C,mBACI3U,KAAKisD,SAAU,EACfjsD,KAAKksD,YAAc,EACnBlsD,KAAK2sD,cAAgB,KACrB3sD,KAAK+sD,aAAe,KACpB/sD,KAAKosD,SAAW,I,CAOpBzhD,QACI3K,KAAKqsD,YAAYxB,YAAc,EAC/B7qD,KAAKisD,SAAU,C,EAnQZF,SAAOkC,QAAW,EAClBlC,SAAKmC,MAAW,ECHrB,MAAOC,sBAAsB9C,YAO/B9uD,YAAY2uD,EAAsBjV,cAAYmY,QAC1C/7C,MAAM2jC,mBAAiBqY,qBAAqBnD,GAC5ClrD,KAAKsuD,SAAW,IAAIvC,SAAS/rD,MAC7BA,KAAKirD,aAAeC,EACpBlrD,KAAKwhB,QAAU,IAAIhI,WAAW,E,CAiBlC+0C,cAEIvuD,KAAK8qD,UAAUK,Y,CAGnBqD,UACIxuD,KAAKgtD,aAAe,KACpBhtD,KAAKwhB,QAAU,I,CAGnBitC,kBACIzuD,KAAKsuD,SAAS35C,kB,EAtCXw5C,cAAAzmD,OAAmB,SAAUwjD,EAAsBjV,cAAYmY,QAClE,OAAO,IAAID,cAAcjD,EAC7B,ECHE,MAAOwD,qBAAqBhE,OAsBjCnuD,YAAYouD,EAA8BC,GACzCv4C,MAAMs4C,EAAYC,GAtBX5qD,KAAe2uD,iBAAY,EAEnC3uD,KAAkB4uD,mBAA6B,I,CAK3CC,wBACH,OAAO7uD,KAAK4uD,kB,CAGTC,sBAAkB5wD,GACrB+B,KAAK4uD,mBAAqB3wD,C,CAEvB6wD,qBACH,OAAO9uD,KAAK2uD,e,CAGTG,mBAAe7wD,GAClB+B,KAAK2uD,gBAAkB1wD,C,ECpBnB,MAAO8wD,uBAAuBL,aAahCnyD,YAAY4rD,EAAsB+C,GAC9B74C,MAAM2jC,mBAAiBgZ,aAAc9D,GACrClrD,KAAKsuD,SAAW,IAAIvC,SAAS/rD,MAC7BA,KAAKuoD,cAAgBJ,EACrBnoD,KAAKirD,aAAeC,C,CARpB/C,mBACA,OAAOnoD,KAAKuoD,a,CAahBvtC,kBACI,OAAOhb,KAAKsuD,SAAS3B,a,CAGrBA,oBACA,OAAO3sD,KAAKsuD,SAAS3B,a,CAGrBI,mBACA,OAAO/sD,KAAKsuD,SAASvB,Y,CAQzBkC,YAAY/sD,GACR,IAAIgtD,EAAiBlvD,KAAK6qD,aAAe,EACzC7qD,KAAKsuD,SAAS/B,cAAcvsD,KAAK6qD,YAA4B,EAAd3oD,EAAKjG,QACzB+D,KAAKgb,kBACzBP,IAAIvY,EAAMgtD,GACjBlvD,KAAKsuD,SAASrC,SAAU,C,CAW5BkD,eACInvD,KAAKsuD,SAAS35C,kB,CAOlB45C,cACIvuD,KAAK8qD,UAAUK,Y,CAMnBhoD,UACIkP,MAAMlP,UACNnD,KAAK6qD,YAAc,EACnB7qD,KAAKsuD,SAASrC,SAAU,EACxBjsD,KAAKwhB,QAAU,I,EA1EZutC,eAAArnD,OAAmB,SAAUygD,EAAsB+C,EAAsBjV,cAAYmZ,SACxF,OAAO,IAAIL,eAAe5G,EAAc+C,EAC5C,E,MCESmE,OAoBT9yD,YAAY+yD,EAAgBC,EAAiBC,GAnB7CxvD,KAAOyvD,QAAG,EACVzvD,KAAO0vD,QAAG,EACV1vD,KAAQ2vD,SAAG,EACD3vD,KAAQ4vD,UAAG,EAMX5vD,KAAQ6vD,SAAG,EAErB7vD,KAAQ8vD,UAAG,EASP9vD,KAAKyvD,QAAUH,EACftvD,KAAK+vD,IAAM,IAAIhB,eAAeO,EAAQrZ,cAAYmZ,SAC9CG,EACAvvD,KAAK+vD,IAAIzB,SAASz0C,cAAc01C,GAAS,GAEzC93D,OAAOM,yBAA2BiI,KAAK+vD,IAAIzB,SAASz0C,cAAc,MAAYy1C,GAAQ,GAE1FtvD,KAAKgwD,IAAM,IAAI7B,cACXqB,GACAxvD,KAAKgwD,IAAI1B,SAASz0C,cAAc21C,GAAS,E,CASjDS,aAAaC,GACTlwD,KAAK6vD,SAAWK,EAChBlwD,KAAKgwD,IAAI1B,SAASz0C,cAAwB,EAAVq2C,EAAc,GAAG,GACjDlwD,KAAKgwD,IAAI1B,SAAS10C,WAAa5Z,KAAKgwD,IAAI1B,SAAShC,aAKjD,IAHA,IAAInlD,EAAkBnH,KAAKgwD,IAAI1B,SAAStB,aACpCmD,EAAc,EACdC,EAAkB,EACb3xD,EAAY,EAAGA,EAAIyxD,EAASzxD,IACjC0I,EAAGgpD,KAASC,EACZjpD,EAAGgpD,KAASC,EAAU,EACtBjpD,EAAGgpD,KAASC,EAAU,EACtBjpD,EAAGgpD,KAASC,EACZjpD,EAAGgpD,KAASC,EAAU,EACtBjpD,EAAGgpD,KAASC,EAAU,EACtBA,GAAW,EAGfpwD,KAAKgwD,IAAI1B,SAASR,e,CAStBuC,cAAcC,GAEV,GADAtwD,KAAKyjC,YAAc6sB,EACftwD,KAAKyjC,YAAYxnC,OAAS,GAAK,EAC/B,KAAM,6B,CAQNs0D,YACAvwD,KAAK4vD,WAET5vD,KAAK4vD,UAAW,EACX5vD,KAAKwwD,OAENxwD,KAAKwwD,KAAO,IAAIlH,aAGpBtpD,KAAKwwD,KAAKzG,WAAW,CAAC/pD,KAAK+vD,KAAK/vD,KAAKgwD,K,CAmBzCS,WACQzwD,KAAKwwD,OAAOxwD,KAAKwwD,KAAKhG,UAAWxqD,KAAKgwD,IAAI1B,SAASrC,SAASjsD,KAAK+vD,IAAIzB,SAASrC,UAC9E3C,YAAYgB,uBAAuBhB,YAAYgB,sBAAsBF,SAGzEpqD,KAAK4vD,UAAY5vD,KAAKuwD,YACtBvwD,KAAKgwD,IAAI1B,SAASjB,eAClBrtD,KAAK+vD,IAAIzB,SAASjB,eAClBrtD,KAAKwwD,KAAKrG,M,CAWduG,cAAW,CAKXvtD,U,CAMAwtD,UACI3wD,KAAK+vD,IAAIzB,SAAS3jD,O,EAhIP0kD,OAAOuB,QAAG,ECPvB,MAAOC,wBAAwBxB,OAgBpC9yD,cACC8V,MAAMw+C,gBAAgBC,aAAc,EAAG,GACvC9wD,KAAK8vD,UAAW,EAChB9vD,KAAKqwD,cAAcQ,gBAAgBE,eAC9BF,gBAAgBG,QAIpBhxD,KAAKgwD,IAAMa,gBAAgBG,OAC3BhxD,KAAK6vD,SAAWgB,gBAAgBI,SAJhCjxD,KAAKiwD,aAAaY,gBAAgBI,QAClCJ,gBAAgBG,OAAShxD,KAAKgwD,KAK1Ba,gBAAgBK,oBACpBL,gBAAgBK,kBAAoB,IAAIhJ,kBAAkB,GAAI,CAC7D,IAAIiB,cAAc,EAAGrD,oBAAoBwB,QAAS,GAClD,IAAI6B,cAAc,GAAIrD,oBAAoByB,MAAO,GACjD,IAAI4B,cAAc,GAAIrD,oBAAoByB,MAAO,MAEnDvnD,KAAK+vD,IAAIlB,kBAAoBgC,gBAAgBK,iB,CAzB9Cl6D,iBAEC65D,gBAAgBE,cAAgB,CAAC,KAAkB,EAAG,EACrD,KAA0B,EAAG,GAC7B,KAA0B,EAAG,G,CA2B/B/5D,gBAAgBm6D,GAEf,IAAI//C,EAAuB,KAO3B,OALCA,EADGy/C,gBAAgBO,MAAMn1D,OACnB40D,gBAAgBO,MAAMn0D,MAEtB,IAAI4zD,gBAEXM,GAAW//C,EAAI2+C,IAAIzB,SAASz0C,cAAc,MAAYg3C,gBAAgBC,cAAc,GAC7E1/C,C,CAORs/C,cACC1wD,KAAK+vD,IAAIzB,SAAS/B,cAAc,GAChCvsD,KAAK0vD,QAAU,EACf1vD,KAAK2vD,SAAW,EAEhBkB,gBAAgBO,MAAM/0D,KAAK2D,K,CAK5BmD,UAECnD,KAAK+vD,IAAI5sD,UACTnD,KAAK+vD,IAAIZ,c,CAUVkC,QAAQ7zC,EAAwBga,EAAuB35B,EAAeyzD,GACrE,IAAIC,EAAqBvxD,KAAK+vD,IAC1ByB,EAAgBD,EAAG1G,aAAe,EAEtC0G,EAAGjD,SAAS/B,cAAeiF,EAAOX,gBAAgBC,cAAiB,GACnE,IAAIW,EAAuBF,EAAG5E,eAAiB4E,EAAGv2C,kBAC9C02C,EAAwBH,EAAGxE,aAC3B4E,EAAeH,EACfI,EAAoBN,EAAS,IAAO,EACxCG,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn6B,EAAG,GAAIi6B,EAAOE,KAAUn6B,EAAG,GAAIk6B,EAASC,KAAU9zD,EAAO6zD,EAASC,KAAUC,EAC/IH,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn6B,EAAG,GAAIi6B,EAAOE,KAAUn6B,EAAG,GAAIk6B,EAASC,KAAU9zD,EAAO6zD,EAASC,KAAUC,EAC/IH,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn6B,EAAG,GAAIi6B,EAAOE,KAAUn6B,EAAG,GAAIk6B,EAASC,KAAU9zD,EAAO6zD,EAASC,KAAUC,EAC/IH,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn0C,EAAI,GAAIi0C,EAAOE,KAAUn6B,EAAG,GAAIi6B,EAAOE,KAAUn6B,EAAG,GAAIk6B,EAASC,KAAU9zD,EAAO6zD,EAASC,KAAUC,EAC/IL,EAAGjD,SAASrC,SAAU,C,EA1FhB4E,gBAAYC,aAAW,GAEfD,gBAAAI,OAAiB,MAEjBJ,gBAAKO,MAAU,GCJzB,MAAOS,oBAAoBxC,OAe7B9yD,cACI8V,MAAMw/C,YAAYf,aAAc,EAAG,GACnC9wD,KAAK8vD,UAAW,EAChB9vD,KAAKqwD,cAAcwB,YAAYd,eAC3Bc,YAAYX,oBACfW,YAAYX,kBAAoB,IAAIhJ,kBAAkB,GAAG,CACtD,IAAIiB,cAAc,EAAErD,oBAAoBwB,QAAQ,GAChD,IAAI6B,cAAc,GAAGrD,oBAAoByB,MAAM,GAC/C,IAAI4B,cAAc,GAAGrD,oBAAoByB,MAAM,MAEnDvnD,KAAK+vD,IAAIlB,kBAAoBgD,YAAYX,iB,CAhB7Cl6D,kBACI66D,YAAYd,cAAgB,CAAC,KAAkB,EAAG,EAC9C,KAA0B,EAAG,GAC7B,KAA0B,EAAG,G,CAoBrC/5D,gBAAgBm6D,GAEZ,IAAI//C,EAMJ,OAJIA,EADAygD,YAAYT,MAAMn1D,OACZ41D,YAAYT,MAAMn0D,MAEjB,IAAI40D,YACfV,GAAW//C,EAAI2+C,IAAIzB,SAASz0C,cAAc,MAAYg4C,YAAYf,cAAc,GACzE1/C,C,CAGX0gD,QAAQC,EAAwBC,EAAmB7B,EAAkB5pD,EAAgB0rD,GAEjF,IAAIV,EAAqBvxD,KAAK+vD,IAC1BmC,EAAoBlyD,KAAKgwD,IACzBmC,EAAiBJ,EAAS91D,QAAU,EAEpCm2D,EADmBb,EAAGjD,SAAS9B,SAAS2F,EAASN,YAAYf,eAChC,EAC7BW,EAAuBF,EAAG5E,eAAiB4E,EAAGv2C,kBAC9C02C,EAAwBH,EAAGxE,aAC3BsF,EAAa,EACbC,EAAc/rD,EAAO3C,EACrB2uD,EAAchsD,EAAO1C,EACrB2uD,EAAcjsD,EAAOzC,EACrB2uD,EAAclsD,EAAOxC,EACrBC,EAAauC,EAAOvC,GACpBC,EAAasC,EAAOtC,GACpBxF,EAAY,EAEhB,IAAKA,EAAI,EAAGA,EAAI0zD,EAAQ1zD,IAAK,CACzB,IAAIS,EAAY6yD,EAASM,GAAKlzD,EAAY4yD,EAASM,EAAK,GACxDZ,EAAOW,GAAUlzD,EAAIozD,EAAMnzD,EAAIqzD,EAAMxuD,EACrCytD,EAAOW,EAAS,GAAKlzD,EAAIqzD,EAAMpzD,EAAIszD,EAAMxuD,EACzCwtD,EAAOW,EAAS,GAAKJ,EAAIK,GACzBZ,EAAOW,EAAS,GAAKJ,EAAIK,EAAK,GAC9BX,EAASU,EAAS,GAAKH,EACvBP,EAASU,EAAS,GAAK,IACvBA,GAAU,EAIVC,GAAM,CACT,CACDd,EAAGjD,SAASR,gBAEZ,IAAI4E,EAAgB1yD,KAAK0vD,QACrB5wC,EAAaqxC,EAAIl0D,OACjB02D,EAAeT,EAAG5D,SAAS9B,SAAS2D,EAAIv2C,YACxCg5C,EAAoBV,EAAG5D,SAAStB,aAEhC6F,EAAiBF,GAAQ,EAC7B,GAAID,EAAQ,EAAG,CACX,IAAIv3C,EAAc03C,EAAS/zC,EACvBg0C,EAAa,EACjB,IAAKr0D,EAAIo0D,EAAQp0D,EAAI0c,EAAK1c,IAAMq0D,IAC5BF,EAAKn0D,GAAK0xD,EAAI2C,GAAMJ,CAE3B,MACGE,EAAKn4C,IAAI01C,EAAK0C,GAElBX,EAAG5D,SAASR,gBAEZ9tD,KAAK0vD,SAAWyC,EAChBnyD,KAAK2vD,UAAYQ,EAAIl0D,M,CAOby0D,cACR1wD,KAAK+vD,IAAIzB,SAAS/B,cAAc,GAChCvsD,KAAKgwD,IAAI1B,SAAS/B,cAAc,GAChCvsD,KAAK0vD,QAAU,EACf1vD,KAAK2vD,SAAW,EAEhBkC,YAAYT,MAAM/0D,KAAK2D,K,CAKfmD,UACRnD,KAAKgwD,IAAI7sD,UACTnD,KAAK+vD,IAAI5sD,UACTnD,KAAKgwD,IAAIvB,kBACTzuD,KAAK+vD,IAAIZ,c,EApHN0C,YAAYf,aAAW,GAEfe,YAAKT,MAAU,GCL5B,MAAO2B,eAAe1D,OAWxB9yD,cACI8V,MAAM0gD,OAAOjC,aAAc,EAAG,GAC9B9wD,KAAK8vD,UAAW,EAChB9vD,KAAKqwD,cAAc0C,OAAOhC,eACrBgC,OAAOlE,oBACRkE,OAAOlE,kBAAoB,IAAI3G,kBAAkB,GAAI,CACjD,IAAIiB,cAAc,EAAGrD,oBAAoBsB,QAAS,GAClD,IAAI+B,cAAc,EAAGrD,oBAAoByB,MAAO,MAExDvnD,KAAK+vD,IAAIlB,kBAAoBkE,OAAOlE,iB,CAdxC73D,kBACI+7D,OAAOhC,cAAgB,CAAC,KAAkB,EAAG,EACzC,KAA0B,EAAG,E,CAerC/5D,gBAAgBm6D,GAEZ,IAAI//C,EAMJ,OAJIA,EADA2hD,OAAO3B,MAAMn1D,OACP82D,OAAO3B,MAAMn0D,MAEb,IAAI81D,OACd5B,GAAW//C,EAAI2+C,IAAIzB,SAASz0C,cAAc,MAAYk5C,OAAOjC,cAAc,GACpE1/C,C,CASX4hD,mBAAmBv4B,EAAcx7B,EAAegzD,EAAcC,GAS1D,IARA,IACIE,EADmBpyD,KAAK+vD,IAAIzB,SAAS9B,SAASvtD,EAAOhD,OAAS,EAAI82D,OAAOjC,eAC5C,EAC7BW,EAAuBzxD,KAAK+vD,IAAIpD,eAAiB3sD,KAAK+vD,IAAI/0C,kBAC1D02C,EAAwB1xD,KAAK+vD,IAAIhD,aACjCsF,EAAa,EAGbvzC,EAAa7f,EAAOhD,OAAS,EACxBwC,EAAY,EAAGA,EAAIqgB,EAAIrgB,IAC5BgzD,EAAOW,KAAYnzD,EAAOozD,GAAKZ,EAAOW,KAAYnzD,EAAOozD,EAAK,GAAIA,GAAM,EACxEX,EAASU,KAAYH,EAOzBjyD,KAAK+vD,IAAIzB,SAASR,gBAIlB9tD,KAAKgwD,IAAI1B,SAASZ,OAAO,IAAI3nC,YAAYmsC,IACzClyD,KAAKgwD,IAAI1B,SAASR,gBAElB9tD,KAAK0vD,SAAW5wC,EAChB9e,KAAK2vD,UAAYuC,EAAGj2D,M,CAOxBy0D,cACI1wD,KAAK+vD,IAAIzB,SAAS/B,cAAc,GAChCvsD,KAAKgwD,IAAI1B,SAAS/B,cAAc,GAChCvsD,KAAK0vD,QAAU,EACf1vD,KAAK2vD,SAAW,EAEhBoD,OAAO3B,MAAM/0D,KAAK2D,K,CAKtBmD,UACInD,KAAKgwD,IAAI7sD,UACTnD,KAAK+vD,IAAI5sD,UACTnD,KAAKgwD,IAAIvB,kBACTzuD,KAAK+vD,IAAIZ,c,EAvFN4D,OAAYjC,aAAW,GAEfiC,OAAK3B,MAAU,GACvB2B,OAAiBlE,kBAAsB,K,MCbrCoE,+BAGT12D,YAAYk+B,EAAUpxB,GAElBrJ,KAAKkzD,SAAWz4B,EAChBz6B,KAAKonB,WAAa,IAAKxrB,OAAeu3D,+BAA+B14B,EAAIrT,WAAY,E,CAEzFgsC,WACIpzD,KAAKonB,WAAWgsC,U,CAEpBC,SACIrzD,KAAKonB,WAAWisC,Q,CAEpBC,eACI,OAAOtzD,KAAKonB,WAAWksC,c,CAE3BC,oBACI,OAAOvzD,KAAKonB,WAAWmsC,mB,CAEvB/rC,cACA,OAAOxnB,KAAKkzD,Q,QCLPM,yBA+BTj3D,YAAYk+B,EAAcpxB,GA9B1BrJ,KAAcyzD,eAAW,EACzBzzD,KAAY0zD,aAAW,EAEvB1zD,KAAO6L,QAAU,GACjB7L,KAAO2zD,QAAU,GACjB3zD,KAAMyuC,OAAgB,KAOtBzuC,KAAQ4zD,SAAU,GASV5zD,KAAA6zD,eAAyB,IAAIlwD,OAE7B3D,KAAK8zD,MAAW,EAChB9zD,KAAK+zD,MAAW,EAIxB/zD,KAAAg0D,OAAiB,IAAIrwD,OAGjB3D,KAAKwnB,QAAUiT,EACfz6B,KAAKyuC,OAASplC,EACdoxB,EAAIw5B,kBAAkBtsD,OAAO3H,KAAK6zD,e,CAGtCT,WACF,IAAI5rC,EAAUxnB,KAAKwnB,QAETA,EAAQ0sC,kBAAoB1sC,EAAQ0sC,iBAAiBC,UACrD3sC,EAAQ0sC,iBAAiBpc,QAAO,EAAOtwB,GACvCA,EAAQ0sC,iBAAiBpc,QAAO,EAAMtwB,IAE1CA,EAAQ4sC,UAAW,EACnBp0D,KAAK6L,QAAQ5P,OAAS,EAEfurB,EAAU3b,QAAU7L,KAAK6L,QAChC2b,EAAQysC,kBAAkBtsD,OAAO3H,KAAK6zD,gBAEtC7zD,KAAK2zD,QAAQ13D,OAAS,EACtB+D,KAAKyzD,eAAiBjsC,EAAQ6sC,SAAS/6C,QAGvC,IAAK,IAAI7a,EAAY,EAAGqgB,EAAa9e,KAAK4zD,SAAS33D,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CACpE,IAAI61D,EAAet0D,KAAK4zD,SAASn1D,GACjC61D,EAAKxE,SAAYwE,EAAK5D,cAAkB4D,EAAKnxD,SAChD,CACDnD,KAAK4zD,SAAS33D,OAAS,EAEvB+D,KAAKikD,MAAQ4M,gBAAgB0D,UAAS,GACtCv0D,KAAKw0D,UAAYzB,OAAOwB,UAAS,GACjCv0D,KAAKy0D,cAAgB5C,YAAY0C,UAAS,GAE1Cv0D,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,OACxBjkD,KAAK4zD,SAASv3D,KAAK2D,KAAKw0D,WACxBx0D,KAAK4zD,SAASv3D,KAAK2D,KAAKy0D,eAGxBjtC,EAAQktC,WAAa7Q,WAAWW,WAEhCxkD,KAAK20D,SAAWntC,EAAQy8B,MACxBjkD,KAAK40D,aAAeptC,EAAQgtC,UAC5Bx0D,KAAK60D,YAAcrtC,EAAQitC,cAC3Bz0D,KAAK80D,aAAettC,EAAQosC,SAE5BpsC,EAAQy8B,MAAQjkD,KAAKikD,MACrBz8B,EAAQgtC,UAAYx0D,KAAKw0D,UACzBhtC,EAAQitC,cAAgBz0D,KAAKy0D,cAC7BjtC,EAAQosC,SAAW5zD,KAAK4zD,SAGxB5zD,KAAK8zD,MAAQtsC,EAAQ0nB,QAAQlrC,GAC7BhE,KAAK+zD,MAAQvsC,EAAQ0nB,QAAQjrC,GAC7BujB,EAAQ0nB,QAAQlrC,GAAK,EACrBwjB,EAAQ0nB,QAAQjrC,GAAK,EAGrBujB,EAAQ0nB,QAAQvnC,OAAO3H,KAAKg0D,QAC5Bh0D,KAAKg0D,OAAO3tD,Q,CAKhBgtD,SACF,IAAI7rC,EAAUxnB,KAAKwnB,QAETA,EAAQ0sC,kBAAoB1sC,EAAQ0sC,iBAAiBC,UACrD3sC,EAAQ0sC,iBAAiBpc,QAAO,EAAOtwB,GACvCA,EAAQ0sC,iBAAiBpc,QAAO,EAAMtwB,IAG1C,IAAIutC,EAAkBvtC,EAAQ6sC,SAC9Br0D,KAAK0zD,aAAeqB,EAAWz7C,QAE/B,IADA,IAAI8H,EAAcphB,KAAK0zD,aAAe1zD,KAAKyzD,eAClCh1D,EAAY,EAAGA,EAAI2iB,EAAK3iB,IAC7BuB,KAAK2zD,QAAQt3D,KAAK04D,EAAW/0D,KAAKyzD,eAAiBh1D,IAEvDs2D,EAAWz7C,SAAW8H,EAGtBoG,EAAQy8B,MAAQjkD,KAAK20D,SACrBntC,EAAQgtC,UAAYx0D,KAAK40D,aACzBptC,EAAQitC,cAAgBz0D,KAAK60D,YAC7BrtC,EAAQosC,SAAW5zD,KAAK80D,aAGxBttC,EAAQktC,WAAa7Q,WAAWW,WAGhCh9B,EAAQ0nB,QAAQlrC,GAAKhE,KAAK8zD,MAC1BtsC,EAAQ0nB,QAAQjrC,GAAKjE,KAAK+zD,MACnBvsC,EAAU3b,QAAU,KAC3B2b,EAAQ4sC,UAAW,C,CAOvBd,eACI,IAAI0B,EAAkBh1D,KAAKwnB,QAAQysC,kBACnC,OAAIe,EAAQpxD,GAAK5D,KAAK6zD,eAAejwD,GAAKoxD,EAAQnxD,GAAK7D,KAAK6zD,eAAehwD,GAAKmxD,EAAQlxD,GAAK9D,KAAK6zD,eAAe/vD,GAC1GkxD,EAAQjxD,GAAK/D,KAAK6zD,eAAe9vD,GAAKixD,EAAQhxD,IAAMhE,KAAK6zD,eAAe7vD,IAAMgxD,EAAQ/wD,IAAMjE,KAAK6zD,eAAe5vD,E,CAI3HsvD,oBACI,IAAI0B,GAA2B,EAC3BC,EAAiBl1D,KAAK6L,QAChC,GAAIqpD,EACH,IAAK,IAAI7C,EAAa,EAAGA,EAAK6C,EAAQj5D,OAAQo2D,IAC7C,GAAI6C,EAAQ7C,GAAI8C,QAAS,CACxBF,GAAkB,EAClB,KACA,CAGG,OAAOA,C,CAEXG,cACI,IAAIC,EAAwBxR,WAAWW,WACvCxkD,KAAK2zD,QAAQ/oD,SAAQ,SAAU0qD,GACvBA,GAAQzR,WAAWW,aACvBX,WAAWgC,UAAYwP,EACvBA,EAAYC,EACZA,EAAKvnB,eACT,G,CAGJwnB,a,EAtIe/B,yBAAAgC,KAAe,IAAI7xD,OA2IjC/H,OAAeC,QAAWD,OAAeqzB,YAAYC,aAEzDskC,yBAA2BP,gC,MCxKfwC,kBAKTz+D,kBAkBIy+D,kBAAkBpzB,IAAIwT,YAAYxK,MAAQwK,YAAYM,UAAYN,YAAYa,UAAY+e,kBAAkBC,2BAE5GD,kBAAkBpzB,IAAIwT,YAAYxK,MAAQwK,YAAYa,UAAY+e,kBAAkBE,iBACpFF,kBAAkBpzB,IAAIwT,YAAYM,UAAYN,YAAYa,UAAY+e,kBAAkBG,qBACxFH,kBAAkBpzB,IAAIwT,YAAYM,UAAYN,YAAYkB,QAAU0e,kBAAkBI,oBAEtFJ,kBAAkBpzB,IAAIwT,YAAYxK,MAAQwK,YAAYM,UAAYN,YAAYY,SAAWgf,kBAAkBK,4BAC3GL,kBAAkBpzB,IAAIwT,YAAYxK,MAAQwK,YAAYY,SAAWgf,kBAAkBM,kBACnFN,kBAAkBpzB,IAAIwT,YAAYM,UAAYN,YAAYY,SAAWgf,kBAAkBO,sBACvFP,kBAAkBpzB,IAAIwT,YAAYa,SAAWb,YAAYkB,QAAU0e,kBAAkBQ,oB,CAGzFj/D,6BAA6By3C,EAAgBjnB,EAAkBtoB,EAAWC,GAC7CsvC,EAAOynB,OAChC,IAAIn+B,EAAe0W,EAAOloB,QAc1BiB,EAAQ2uC,cAAcV,kBAAkBW,QACxC5uC,EAAQ6uC,kBAAkB5nB,EAAO6nB,UAAWp3D,EAAGC,GAE/C,IAAIkJ,EAAgBomC,EAAO8nB,YAAc9nB,EAAOr5B,OAAS2iB,EAAIvL,YACzDlkB,EAAiBmmC,EAAO+nB,aAAe/nB,EAAOp5B,QAAU0iB,EAAItL,aAC5DgqC,EAAgBpuD,EAAQ0vB,EAAIvL,YAC5BkqC,EAAgBpuD,EAASyvB,EAAItL,aAGjC,GAFApkB,EAAQ0vB,EAAI1vB,MAAQouD,EACpBnuD,EAASyvB,EAAIzvB,OAASouD,EAClBruD,GAAS,GAAKC,GAAU,EAAG,OAAO,KACtC,IAAIquD,GAAcloB,EAAOiB,OAAS3X,EAAIrL,QAAU+pC,EAC5CG,GAAcnoB,EAAOkB,OAAS5X,EAAIpL,QAAU+pC,EAC3CjoB,EAAOooB,QAAQz9D,UAAUkB,iBAC1BktB,EAAQsvC,YAAY/+B,EAAK4+B,EAAIC,EAAIvuD,EAAOC,GAE5Ckf,EAAQuvC,iBAAiBtB,kBAAkBW,O,CAsC/Cp/D,yBAAyBy3C,EAAgBjnB,EAAkBtoB,EAAWC,GAClE,IACIisC,EADA+N,EAAqB1K,EAAOynB,OAE5Bn+B,EAAe0W,EAAOloB,QAC1B,IAAK6kB,EAAQ+N,EAAM/N,OAAS,KAAQqD,EAAOuoB,eAAgB,CACvD,IAAIn4D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe7rB,EACvB,IAAI/iC,EAAgBomC,EAAO8nB,YAAc9nB,EAAOr5B,OAAS2iB,EAAIvL,YACzDlkB,EAAiBmmC,EAAO+nB,aAAe/nB,EAAOp5B,QAAU0iB,EAAItL,aAC5DgqC,EAAgBpuD,EAAQ0vB,EAAIvL,YAC5BkqC,EAAgBpuD,EAASyvB,EAAItL,aAGjC,GAFApkB,EAAQ0vB,EAAI1vB,MAAQouD,EACpBnuD,EAASyvB,EAAIzvB,OAASouD,EAClBruD,GAAS,GAAKC,GAAU,EAAG,OAAO,KACtC,IAAIquD,EAAaz3D,EAAIi6C,EAAMzJ,OAAS3X,EAAIrL,QAAU+pC,EAC9CG,EAAaz3D,EAAIg6C,EAAMxJ,OAAS5X,EAAIpL,QAAU+pC,EAC7CjoB,EAAOooB,QAAQz9D,UAAUkB,iBAC1BktB,EAAQsvC,YAAY/+B,EAAK4+B,EAAIC,EAAIvuD,EAAOC,GAC5Ckf,EAAQyvC,YAAcp4D,CACzB,C,CAGL7H,mCAAmCy3C,EAAgBjnB,EAAkBtoB,EAAWC,GAC5E,IACIisC,EADA+N,EAAqB1K,EAAOynB,OAE5Bn+B,EAAe0W,EAAOloB,QAC1B,IAAK6kB,EAAQ+N,EAAM/N,OAAS,KAAQqD,EAAOuoB,eAAgB,CACvD,IAAIn4D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe7rB,EAEvB5jB,EAAQ2uC,cAAcV,kBAAkBW,QACxC5uC,EAAQ6uC,kBAAkB5nB,EAAO6nB,UAAWp3D,EAAGC,GAC/C,IAAIkJ,EAAgBomC,EAAO8nB,YAAc9nB,EAAOr5B,OAAS2iB,EAAIvL,YACzDlkB,EAAiBmmC,EAAO+nB,aAAe/nB,EAAOp5B,QAAU0iB,EAAItL,aAC5DgqC,EAAgBpuD,EAAQ0vB,EAAIvL,YAC5BkqC,EAAgBpuD,EAASyvB,EAAItL,aAGjC,GAFApkB,EAAQ0vB,EAAI1vB,MAAQouD,EACpBnuD,EAASyvB,EAAIzvB,OAASouD,EAClBruD,GAAS,GAAKC,GAAU,EAAG,OAAO,KACtC,IAAIquD,GAAcxd,EAAMzJ,OAAS3X,EAAIrL,QAAU+pC,EAC3CG,GAAczd,EAAMxJ,OAAS5X,EAAIpL,QAAU+pC,EAC1CjoB,EAAOooB,QAAQz9D,UAAUkB,iBAC1BktB,EAAQsvC,YAAY/+B,EAAK4+B,EAAIC,EAAIvuD,EAAOC,GAC5Ckf,EAAQuvC,iBAAiBtB,kBAAkBW,QAE3C5uC,EAAQyvC,YAAcp4D,CACzB,C,CAGL7H,kCAAkCy3C,EAAgBjnB,EAAkBtoB,EAAWC,GAC3E,IACIisC,EADA+N,EAAqB1K,EAAOynB,OAEhC,IAAK9qB,EAAQ+N,EAAM/N,OAAS,KAAQqD,EAAOuoB,eAAgB,CACvD,IAAIn4D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe7rB,EAEvB5jB,EAAQ2uC,cAAcV,kBAAkBW,QACxC5uC,EAAQ6uC,kBAAkB5nB,EAAO6nB,UAAWp3D,EAAGC,GAC1CsvC,EAAOooB,QAAQz9D,UAAUkB,iBAC1Bm0C,EAAOyoB,WAAazoB,EAAOyoB,UAAUC,QAAQ1oB,EAAQjnB,GAAU2xB,EAAMzJ,QAASyJ,EAAMxJ,QACxFnoB,EAAQuvC,iBAAiBtB,kBAAkBW,QAE3C5uC,EAAQyvC,YAAcp4D,CACzB,C,CAGL7H,wBAAwBy3C,EAAgBjnB,EAAkBtoB,EAAWC,GACjE,IACIisC,EADA+N,EAAqB1K,EAAOynB,OAEhC,IAAK9qB,EAAQ+N,EAAM/N,OAAS,KAAQqD,EAAOuoB,eAAgB,CACvD,IAAIn4D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe7rB,EAClBqD,EAAOooB,QAAQz9D,UAAUkB,iBAC1Bm0C,EAAOyoB,WAAazoB,EAAOyoB,UAAUC,QAAQ1oB,EAAQjnB,EAAStoB,EAAIi6C,EAAMzJ,OAAQvwC,EAAIg6C,EAAMxJ,QAC9FnoB,EAAQyvC,YAAcp4D,CACzB,C,CAOL7H,4BAA4By3C,EAAgBjnB,EAAkBtoB,EAAWC,GACrE,IAAIg6C,EAAqB1K,EAAOynB,OAKhC1uC,EAAQ2uC,cAAcV,kBAAkBW,QACxC5uC,EAAQ6uC,kBAAkB5nB,EAAO6nB,UAAWp3D,EAAGC,GAC1CsvC,EAAOooB,QAAQz9D,UAAUkB,iBAC1Bm0C,EAAOyoB,WAAazoB,EAAOyoB,UAAUC,QAAQ1oB,EAAQjnB,GAAU2xB,EAAMzJ,QAASyJ,EAAMxJ,QACxFnoB,EAAQuvC,iBAAiBtB,kBAAkBW,O,CAM/Cp/D,2BAA2By3C,EAAgBjnB,EAAkBtoB,EAAWC,GAEpE,IAAIi4D,EAA0B3oB,EAAOooB,QAAQz9D,UAAUS,oBAAsB2tB,EAAQ6vC,kBAAiB,GACtG,IAAIC,EAAmB9vC,EAAQ+vC,kBAE/B,IAAIpe,EAAqB1K,EAAOynB,OAChC1uC,EAAQ2uC,cAAcV,kBAAkBW,QACxC5uC,EAAQ6uC,kBAAkB5nB,EAAO6nB,UAAWp3D,EAAGC,GAK/CD,GAAKi6C,EAAMzJ,OACXvwC,GAAKg6C,EAAMxJ,OAEX,IAAI1P,EAAgBwO,EAAO+oB,UAAWhyD,EAAYy6B,EAAOhkC,OACzD,IAAI2M,EACA6uD,EAActpC,EAAa5lB,EAAeC,EAAgBkvD,EAAYC,EAEtExe,EAAM7qB,WACN1lB,EAAOuwC,EAAM7qB,SACbmpC,EAAO7uD,EAAK1J,EACZivB,EAAMvlB,EAAKzJ,EACXoJ,EAAQK,EAAKL,MACbC,EAASI,EAAKJ,QAGlB,IAAK,IAAI/J,EAAI,EAAGA,EAAI+G,IAAK/G,EAAG,CACxB,IACIm5D,EADA7b,EAAM9b,EAAOxhC,GAGbm5D,EADAN,EACUvb,EAAI8b,WAAa9b,EAAI8a,QAAQz9D,UAAUa,2BAEvC8hD,EAAI8b,UAAY9b,EAAI8a,QAAQz9D,UAAUgB,oBAChDwO,KAAU8uD,EAAK3b,EAAI2b,KAAOnvD,GAAUmvD,EAAK3b,EAAI1zC,OAAUovD,IAASE,EAAK5b,EAAI4b,KAAOnvD,GAAWmvD,EAAK5b,EAAIzzC,QAAW6lB,KAC/GypC,GAAU,GAEVA,GACA7b,EAAIrL,OAAOlpB,EAAStoB,EAAGC,EAC9B,CAEDqoB,EAAQuvC,iBAAiBtB,kBAAkBW,QAC3CgB,GAAkB5vC,EAAQ6vC,kBAAiB,E,CAG/CrgE,4BAA4By3C,EAAgBjnB,EAAkBtoB,EAAWC,GAErE,IAAIi4D,EAA0B3oB,EAAOooB,QAAQz9D,UAAUS,oBAAsB2tB,EAAQ6vC,kBAAiB,GACtG,IAAIC,EAAmB9vC,EAAQ+vC,kBAE/B,IAAIpe,EAAqB1K,EAAOynB,OAChCh3D,GAAQi6C,EAAMzJ,OACdvwC,GAAQg6C,EAAMxJ,OACTlB,EAAOooB,QAAQz9D,UAAUkB,iBAC1Bm0C,EAAOyoB,WAAazoB,EAAOyoB,UAAUC,QAAQ1oB,EAAQjnB,EAAStoB,EAAGC,GAErE,IAAI8gC,EAAgBwO,EAAO+oB,UAAWhyD,EAAYy6B,EAAOhkC,OACzD,IAAI2M,EACA6uD,EAActpC,EAAa5lB,EAAeC,EAAgBkvD,EAAYC,EAEtExe,EAAM7qB,WACN1lB,EAAOuwC,EAAM7qB,SACbmpC,EAAO7uD,EAAK1J,EACZivB,EAAMvlB,EAAKzJ,EACXoJ,EAAQK,EAAKL,MACbC,EAASI,EAAKJ,QAGlB,IAAK,IAAI/J,EAAI,EAAGA,EAAI+G,IAAK/G,EAAG,CACxB,IACIm5D,EADA7b,EAAM9b,EAAOxhC,GAGbm5D,EADAN,EACUvb,EAAI8b,WAAa9b,EAAI8a,QAAQz9D,UAAUa,2BAEvC8hD,EAAI8b,UAAY9b,EAAI8a,QAAQz9D,UAAUgB,oBAChDwO,KAAU8uD,EAAK3b,EAAI2b,KAAOnvD,GAAUmvD,EAAK3b,EAAI1zC,OAAUovD,IAASE,EAAK5b,EAAI4b,KAAOnvD,GAAWmvD,EAAK5b,EAAIzzC,QAAW6lB,KAC/GypC,GAAU,GAEVA,GACA7b,EAAIrL,OAAOlpB,EAAStoB,EAAGC,EAE9B,CAEDi4D,GAAkB5vC,EAAQ6vC,kBAAiB,E,EA3RxC5B,kBAAGpzB,IAAsB,GACjBozB,kBAAAW,OAAiB,IAAIzyD,O,MCD3Bm0D,aAaTv7D,cAAA,CAGIgP,WAAiB,OAAQ,CAAC,EAdvBusD,aAAIzoD,KAAW,GAEfyoD,aAAKxpB,MAAW,GAEhBwpB,aAAIvpB,KAAW,EAYfupB,aAAOtpB,QAAG,SAA4BC,EAAgBjnB,EAActoB,EAAWC,GAClF,IAAIuvC,EAAgBlnB,EAChBimB,EAA4BztC,KAAO2uC,MACvC,GAAIlB,EAAM,CACN,IAAIT,EAAiByB,EAAOzB,QAASxuC,EAAcwuC,EAAQ/wC,OAE3D,GAAW,GAAPuC,GAAawuC,EAAQ,GAAGzhC,MAAQusD,aAAaxpB,MAK7C,OAJA9mB,EAAQonB,OACRpnB,EAAQqnB,eAAe7B,EAAQ,IAC/BS,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,QACzCqoB,EAAQ0F,UAIZ,IACIrpB,EADAkrC,EAAgB9D,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GAG1D8mB,EAAWlnC,MAAMD,KACjBonC,EAAkBP,EAASQ,QAC3B7lB,EAAc1lB,OAAO+D,SACzBunC,EAAQtnC,OAAO0hB,GACf,IAAI8lB,EAAmB,EACnBC,EAAuB,EAGvBrwC,EAAc,KACduG,EAAWmpC,EAAOY,YAAYC,aAAe,KACjD,GAAKhqC,GAA8B,GAAvBmpC,EAAOc,aAwEZ,CASH,IANoBd,EAAOe,sBAAuB,KAE9CL,EAAW,GACXC,EAAe,KAEnBvrC,EAAI4qC,EAAOgB,aACLpnC,OAAS,GAAKxE,EAAEyE,QAAU,EAC5B,OAGJzE,EAAEwE,OAAU8mC,EAAW,EACvBtrC,EAAEyE,QAAW6mC,EAAW,EACxBtrC,EAAE3E,GAAKuvC,EAAOiB,OAAS,EACvB7rC,EAAE1E,GAAKsvC,EAAOkB,OAAS,EACvBX,EAAE9vC,EAAI2E,EAAE3E,EAAImqB,EAAIzlB,EAAIC,EAAE1E,EAAIkqB,EAAIvlB,EAC9BkrC,EAAE7vC,EAAI0E,EAAE1E,EAAIkqB,EAAItlB,EAAIF,EAAE3E,EAAImqB,EAAIxlB,EAC9BA,EAAE3E,EAAI8vC,EAAE9vC,EACR2E,EAAE1E,EAAI6vC,EAAE7vC,EACR6vC,EAAE9vC,EAAI2E,EAAEwE,MAAQghB,EAAIzlB,EAAIC,EAAEyE,OAAS+gB,EAAIvlB,EACvCkrC,EAAE7vC,EAAI0E,EAAEyE,OAAS+gB,EAAItlB,EAAIF,EAAEwE,MAAQghB,EAAIxlB,EACvCA,EAAEwE,MAAQ2mC,EAAE9vC,EACZ2E,EAAEyE,OAAS0mC,EAAE7vC,CAEhB,KAlGqC,CACdsvC,EAAOe,sBAGvBL,EAAW,GACXC,EAAe,KAEnBvrC,EAAI,IAAIuE,WACNK,SAASgmC,EAAOmB,iBAClB/rC,EAAE3E,GAAKuvC,EAAOvvC,EACd2E,EAAE1E,GAAKsvC,EAAOtvC,EACd0E,EAAE3E,GAAKuvC,EAAOiB,OAAS,EACvB7rC,EAAE1E,GAAKsvC,EAAOkB,OAAS,EACvB,IAAIE,EAAchsC,EAAE3E,EAChB4wC,EAAcjsC,EAAE1E,EAYpB,GAVA0E,EAAEwE,OAAU8mC,EAAW,EACvBtrC,EAAEyE,QAAW6mC,EAAW,EACxBH,EAAE9vC,EAAI2E,EAAE3E,EAAImqB,EAAIzlB,EAAIC,EAAE1E,EAAIkqB,EAAIvlB,EAC9BkrC,EAAE7vC,EAAI0E,EAAE1E,EAAIkqB,EAAItlB,EAAIF,EAAE3E,EAAImqB,EAAIxlB,EAC9BA,EAAE3E,EAAI8vC,EAAE9vC,EACR2E,EAAE1E,EAAI6vC,EAAE7vC,EACR6vC,EAAE9vC,EAAI2E,EAAEwE,MAAQghB,EAAIzlB,EAAIC,EAAEyE,OAAS+gB,EAAIvlB,EACvCkrC,EAAE7vC,EAAI0E,EAAEyE,OAAS+gB,EAAItlB,EAAIF,EAAEwE,MAAQghB,EAAIxlB,EACvCA,EAAEwE,MAAQ2mC,EAAE9vC,EACZ2E,EAAEyE,OAAS0mC,EAAE7vC,EACT0E,EAAEwE,OAAS,GAAKxE,EAAEyE,QAAU,EAC5B,OAGJhD,GAAOA,EAAInC,UAEXpE,EAAS,IAAKnD,OAAemxB,qBAAsBjjB,OAAO+Y,aAAqBuE,WAAYvjB,EAAEwE,MAAOxE,EAAEyE,OAAQshB,qBAAmB5S,SAAU4S,qBAAmB8D,MAE9J,IAAIuiB,EAAa3qC,EAAM,IAAK1J,OAAemxB,qBAAsBjjB,OAAO+Y,aAAqBuE,WAAYvjB,EAAEwE,MAAOxE,EAAEyE,OAAQshB,qBAAmB5S,SAAU4S,qBAAmB8D,MAC5K+gB,EAAOyB,iBAAiBZ,YAAchqC,EAEtCopC,EAASyB,SACTzB,EAAS0B,MAAMrxC,GACf,IAAIsxC,EAAa5B,EAAOvvC,EAAI2wC,EAAMT,EAC9BkB,EAAa7B,EAAOtvC,EAAI2wC,EAAMV,EAElC3B,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAS6oB,EAAIC,GAC1C5B,EAAS0B,MAAMH,GACf,IAAK,IAAIxxC,EAAY,EAAGA,EAAID,EAAKC,IAAK,CACzB,GAALA,IAGAiwC,EAAS0B,MAAMrxC,GACf2vC,EAAS6B,WAAWN,EAAO,EAAG,EAAGpsC,EAAEwE,MAAOxE,EAAEyE,OAAQ3E,OAAOkE,KAAKvD,WAAYyqC,EAAM,KAAMxc,UAAU4B,MAAMI,SACxGma,EAAS0B,MAAMH,IAEnB,IAAIO,EAAoBxD,EAAQvuC,GAEhC,OAAQ+xC,EAAIjlC,MACR,KAAKusD,aAAazoD,KAGdq/B,EAASqpB,qBAAqBh5D,EAAQ,EAAG,EAAG8E,EAAEwE,MAAOxE,EAAEyE,OAASkoC,EAAmBwnB,UACnF,MACJ,KAAKF,aAAavpB,KAEdiC,EAAIC,WAAaD,EAAIC,UAAUC,OAAO3xC,EAAQyoB,EAAS3jB,EAAEwE,MAAOxE,EAAEyE,OAAQkoC,GAC1E,MACJ,KAAKsnB,aAAaxpB,MACdI,EAASG,eAA6B2B,GACtC9B,EAAS6B,WAAWxxC,EAAQ,EAAG,EAAG8E,EAAEwE,MAAOxE,EAAEyE,OAAQ3E,OAAOiE,MAAMtD,WAAY2mC,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IACxHwmB,EAASG,eAAe,MAGnC,CACDH,EAASiC,OACZ,CA2BDzxC,EAAIA,EAAIkwC,EAAeX,EAAOvvC,EAC9BC,EAAIA,EAAIiwC,EAAeX,EAAOtvC,EAC9B6vC,EAAEjpC,MAAM7G,EAAGC,GACXkqB,EAAIrjB,eAAegpC,GACnB9vC,EAAI8vC,EAAE9vC,EAAI2E,EAAE3E,EACZC,EAAI6vC,EAAE7vC,EAAI0E,EAAE1E,EAaZuvC,EAASupB,WAAW3yD,EAAKvG,EAAQG,EAAGC,EAAG0E,EAAEwE,MAAOxE,EAAEyE,QAClD+gB,EAAIlmB,SACP,CACL,E,MC/IS+0D,aAyCT37D,YAAYgP,EAAckiC,GAEtB,GAAIgoB,kBAAkBpzB,IAAI92B,IAAShQ,QAAQE,UAGvC,OAFAuE,KAAK8uC,KAAO2mB,kBAAkBpzB,IAAI92B,QAClCvL,KAAK2uC,MAAQupB,aAAaC,UAI9B,OADAn4D,KAAK2uC,MAAQlB,GAAQyqB,aAAaC,SAC1B5sD,GACJ,KAAK,EAED,YADAvL,KAAK8uC,KAAO9uC,KAAKo4D,KAErB,KAAKviB,YAAYxK,MAEb,YADArrC,KAAK8uC,KAAO9uC,KAAK4yC,QAErB,KAAKiD,YAAYM,UAEb,YADAn2C,KAAK8uC,KAAO9uC,KAAKq4D,YAErB,KAAKxiB,YAAYO,MAEb,YADAp2C,KAAK8uC,KAAO9uC,KAAKs4D,QAErB,KAAKziB,YAAYQ,OAEb,YADAr2C,KAAK8uC,KAAO9uC,KAAKu4D,SAErB,KAAK1iB,YAAY/gB,KAOb,YANIv5B,QAAQI,UAAaC,OAAeqzB,YAAYC,WAChDlvB,KAAK8uC,KAAO9uC,KAAKw4D,YAGjBx4D,KAAK8uC,KAAO9uC,KAAKy4D,OAGzB,KAAK5iB,YAAYU,KAEb,YADAv2C,KAAK8uC,KAAO9uC,KAAK04D,OAErB,KAAK7iB,YAAYW,MAEb,YADAx2C,KAAK8uC,KAAO9uC,KAAKk2D,QAErB,KAAKrgB,YAAYa,SAEb,YADA12C,KAAK8uC,KAAO9uC,KAAKk3D,WAErB,KAAKrhB,YAAYkB,OAEb,YADA/2C,KAAK8uC,KAAO9uC,KAAKw3D,WAErB,KAAK3hB,YAAYe,OAEb,YADA52C,KAAK8uC,KAAO9uC,KAAK24D,SAErB,KAAK9iB,YAAYY,QAEb,YADAz2C,KAAK8uC,KAAO9uC,KAAK4V,UAErB,KAAKigC,YAAYS,QAOb,YANI/6C,QAAQI,UAAaC,OAAeqzB,YAAYC,WAChDlvB,KAAK8uC,KAAOgpB,aAAatpB,QAGzBxuC,KAAK8uC,KAAOT,OAAOG,SAG3B,KAAKqH,YAAYiB,QAEb,YADA92C,KAAK8uC,KAAO9uC,KAAK44D,UAErB,KA3GC,MA6GG,YADA54D,KAAK8uC,KAAOopB,aAAaW,gBAIjC74D,KAAK84D,SAASvtD,E,CAhGlBvU,kBAEI,IAAIyH,EAAWD,EACXu6D,EAGJ,IALAtD,kBAAkB5Z,WAGlBkd,EAAa,IAAIb,aApBZ,MAoB+B,MACpC15D,EAAM05D,aAAac,QAAQ/8D,OAA8B,EAArB45C,YAAYkB,OAC3Ct4C,EAAI,EAAGA,EAAID,EAAKC,IACjBy5D,aAAac,QAAQv6D,GAAKs6D,EAE9Bb,aAAac,QAAQ,GAAK,IAAId,aAAa,EAAG,K,CAG1ClhE,sBAAsBy3C,EAAgBjnB,EAAkBtoB,EAAWC,GACvE,IAAIoM,EAAekjC,EAAO0V,aACJ+T,aAAac,QAAQztD,GAAQ2sD,aAAae,eAAe1tD,IAC7EujC,KAAKL,EAAQjnB,EAAStoB,EAAGC,E,CAGvBnI,sBAAsBuU,GAC1B,GAAIkqD,kBAAkBpzB,IAAI92B,IAAShQ,QAAQE,UAAW,OAAO,IAAIy8D,aAAa3sD,EAAM,MAGpF,IAFA,IAAIxO,EAA2B,KAC3Bm8D,EAAgBrjB,YAAYkB,OACzBmiB,EAAQ,GACPA,EAAQ3tD,IACRxO,EAAM,IAAIm7D,aAAagB,EAAOn8D,IAClCm8D,IAAiB,EAErB,OAAOn8D,C,CAwED+7D,SAASvtD,G,CAKnB2qD,OAAOznB,EAAgBjnB,EAAkBtoB,EAAWC,G,CAKpDi5D,IAAI3pB,EAAgBjnB,EAAkBtoB,EAAWC,G,CAIjDw5D,QAAQlqB,EAAgBjnB,EAAkBtoB,EAAWC,GACjDsvC,EAAO0qB,aAAa3xC,EAAStoB,EAAGC,GAChCa,KAAK2uC,MAAMG,KAAK1xC,KAAK4C,KAAK2uC,MAAOF,EAAQjnB,EAAS,EAAG,E,CAIzDkxC,MAAMjqB,EAAgBjnB,EAAkBtoB,EAAWC,GAC/C,IAAIsuC,EAAqBztC,KAAK2uC,MAC9B,GAAIlB,GAAQyqB,aAAaC,SAAU,OAEnC,GAAI1pB,EAAOooB,QAAQz9D,UAAUc,0BAA4BstB,EAAQ+vC,kBAE7D,YADA9pB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,GAI7C,IAAIkrB,EAAIokB,EAAOynB,OAAOkD,WAClB/wD,EAAQgiB,EAAEhiB,MACVC,EAAS+hB,EAAE/hB,OACD,IAAVD,IACAA,EAAQ,MACG,IAAXC,IACAA,EAAS,MACbkf,EAAQonB,OACRpnB,EAAQ6xC,SAASn6D,EAAGC,EAAGkJ,EAAOC,GAC9BmlC,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAImrB,EAAEnrB,EAAGC,EAAIkrB,EAAElrB,GACrDqoB,EAAQ0F,S,CAIZtX,SAAS64B,EAAgBjnB,EAAkBtoB,EAAWC,GAClD,IAAKsvC,EAAOooB,QAAQz9D,UAAUkB,gBAAiB,CAC3C,IAAIy9B,EAAe0W,EAAOloB,QAC1B,GAAIwR,EAAIjf,aAAc,CAClB,IAAIzQ,EAAgBomC,EAAO8nB,YAAc9nB,EAAOr5B,OAAS2iB,EAAIvL,YACzDlkB,EAAiBmmC,EAAO+nB,aAAe/nB,EAAOp5B,QAAU0iB,EAAItL,aAC5DgqC,EAAgBpuD,EAAQ0vB,EAAIvL,YAC5BkqC,EAAgBpuD,EAASyvB,EAAItL,aAGjC,GAFApkB,EAAQ0vB,EAAI1vB,MAAQouD,EACpBnuD,EAASyvB,EAAIzvB,OAASouD,EAClBruD,EAAQ,GAAKC,EAAS,EAAG,CACzB,IAAIquD,EAAKz3D,EAAIuvC,EAAOiB,OAAS3X,EAAIrL,QAAU+pC,EACvCG,EAAKz3D,EAAIsvC,EAAOkB,OAAS5X,EAAIpL,QAAU+pC,EAE3ClvC,EAAQsvC,YAAY/+B,EAAK4+B,EAAIC,EAAIvuD,EAAOC,EAAQ,WACnD,CACJ,CACJ,CACD,IAAImlC,EAAqBztC,KAAK2uC,MAC1BlB,GAAQyqB,aAAaC,UACrB1qB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,E,CAIjD+3D,UAAUzoB,EAAgBjnB,EAAkBtoB,EAAWC,GACnD,IAAKsvC,EAAOooB,QAAQz9D,UAAUkB,gBAAiB,CAC3C,IAAI6+C,EAAQ1K,EAAOynB,OACf5rC,EAAImkB,EAAOyoB,UACf5sC,GAAKA,EAAE6sC,QAAQ1oB,EAAQjnB,EAAStoB,EAAIi6C,EAAMzJ,OAAQvwC,EAAIg6C,EAAMxJ,OAC/D,CACD,IAAIlC,EAAOztC,KAAK2uC,MACZlB,GAAQyqB,aAAaC,UACrB1qB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,E,CAIjDy5D,SAASnqB,EAAgBjnB,EAAkBtoB,EAAWC,GAClD,IAAKqoB,EAAQ+vC,mBAAqB9oB,EAAO6qB,QAAS,CAC9C,IAAIngB,EAAQ1K,EAAOynB,OACf5rC,EAAcmkB,EAAO6qB,QAASC,KAC9B16D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe,GACvB3sC,GAAKA,EAAE6sC,QAAQ1oB,EAAQjnB,EAAStoB,EAAIi6C,EAAMzJ,OAAQvwC,EAAIg6C,EAAMxJ,SAC5DrlB,EAAcmkB,EAAO6qB,QAASE,SACzBlvC,EAAE6sC,QAAQ1oB,EAAQjnB,EAAStoB,EAAIi6C,EAAMzJ,OAAQvwC,EAAIg6C,EAAMxJ,QAC5DnoB,EAAQyvC,YAAcp4D,CACzB,CACD,IAAI4uC,EAAOztC,KAAK2uC,MACZlB,GAAQyqB,aAAaC,UACrB1qB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,E,CAKjDyzC,OAAOnE,EAAgBjnB,EAAkBtoB,EAAWC,GAChD,IACIisC,EACJ,IAAKA,EAFoBqD,EAAOynB,OAEb9qB,OAAS,KAAQqD,EAAOuoB,eAAgB,CACvD,IAAIn4D,EAAe2oB,EAAQyvC,YAC3BzvC,EAAQyvC,aAAe7rB,EACvB,IAAIqC,EAAqBztC,KAAK2uC,MAC9BlB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,GACzCqoB,EAAQyvC,YAAcp4D,CACzB,C,CAILw5D,WAAW5pB,EAAgBjnB,EAAkBtoB,EAAWC,GACpD,IAAIm3D,EAAoB7nB,EAAO6nB,UAAW3nB,EAAsB3uC,KAAK2uC,MACjE2nB,GAAa3nB,GAASupB,aAAaC,UACnC3wC,EAAQonB,OACRpnB,EAAQ8uC,UAAUA,EAAU1yD,EAAG0yD,EAAUzyD,EAAGyyD,EAAUxyD,EAAGwyD,EAAUvyD,EAAGuyD,EAAUtyD,GAAK9E,EAAGo3D,EAAUryD,GAAK9E,GACvGwvC,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQjnB,EAAS,EAAG,GAC3CA,EAAQ0F,WAEJyhB,GAASupB,aAAaC,UACtBxpB,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQjnB,EAAStoB,EAAGC,E,CAKvDq4D,UAAU/oB,EAAgBjnB,EAAkBtoB,EAAWC,GACnD,IAAIg6C,EAAqB1K,EAAOynB,OAC5Bj2B,EAAmBwO,EAAO+oB,UAAWhyD,EAAYy6B,EAAOhkC,OAC5DiD,GAAQuvC,EAAOiB,OACfvwC,GAAQsvC,EAAOkB,OACf,IAEI/mC,EACA6uD,EAActpC,EAAa5lB,EAAeC,EAAgBqrC,EAAY4lB,EAHtErC,EAA0B3oB,EAAOooB,QAAQz9D,UAAUS,oBAAsB2tB,EAAQ6vC,kBAAiB,GAClGC,EAAmB9vC,EAAQ+vC,kBAI3Bpe,EAAM7qB,WACN1lB,EAAOuwC,EAAM7qB,SACbmpC,EAAO7uD,EAAK1J,EACZivB,EAAMvlB,EAAKzJ,EACXoJ,EAAQK,EAAKL,MACbC,EAASI,EAAKJ,QAGlB,IAAK,IAAI/J,EAAI,EAAGA,EAAI+G,IAAK/G,EAAG,CACxB,IACIm5D,EADA7b,EAAM9b,EAAOxhC,GAGbm5D,EADAN,EACUvb,EAAI8b,WAAa9b,EAAI8a,QAAQz9D,UAAUa,2BAEvC8hD,EAAI8b,UAAY9b,EAAI8a,QAAQz9D,UAAUgB,oBAChDw9D,IACIhvD,KAAUirC,EAAKkI,EAAI2b,KAAOnvD,GAAUsrC,EAAKkI,EAAI1zC,OAAUovD,IAASgC,EAAK1d,EAAI4b,KAAOnvD,GAAWixD,EAAK1d,EAAIzzC,QAAW6lB,GAC/GypC,GAAU,EACLnpB,EAAOY,YAAY5a,MAAQsnB,GAAQA,EAAI8a,QAAQz9D,UAAUgB,sBAC9Dw9D,GAAU,IAGdA,IACI7b,EAAI8a,QAAQz9D,UAAUe,yBACtBqtB,EAAQ6xC,SAAS,EAAG,EAAG,EAAG,GAAG,GAEjCtd,EAAIrL,OAAOlpB,EAAStoB,EAAGC,GAE9B,CACDi4D,GAAkB5vC,EAAQ6vC,kBAAiB,E,CAI/CkB,QAAQ9pB,EAAgBjnB,EAAkBtoB,EAAWC,GAEjD,IAAIkwC,EAA0BZ,EAAOY,YACjCV,EAAsB3uC,KAAK2uC,MAE/B,IAAKU,EAAYqqB,qBAAuBlyC,EAAQ+vC,mBAAqBloB,EAAY5a,MAAQ4a,EAAY5a,KAAKoiC,QAAQz9D,UAAUgB,oBACxHu0C,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQjnB,EAAStoB,EAAGC,OAD/C,CAIwB,WAAxBkwC,EAAYsqB,QAAwBjc,KAAKwE,eAAmBxE,KAAKuE,eAGjE,IAAI2X,GAA4B,EAC5B3E,GAA2B,EAE/B,GAAI5lB,EAAY9nB,OAAQ,CAEpB,IAAIsyC,EAAYxqB,EAAY9nB,OAC5B0tC,EAAkB4E,EAAKtG,mBAAqBsG,EAAKtG,oBACjDqG,EAAmBC,EAAKvG,eAAiBuG,EAAKvG,cACjD,CAED,GAAI7kB,EAAOuoB,iBAAoB3nB,EAAY9nB,QAAW0tC,GAAmB2E,GAAoB/+D,MAAMS,MAAMw+D,kBACrG,GAA4B,WAAxBzqB,EAAYsqB,QAAsB,CAClC,GAAInyC,EAAQwT,SAER,YADA2T,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQjnB,EAAStoB,EAAGC,GAG3Ca,KAAK+5D,6BAA6BtrB,EAAQjnB,EAEjD,MACGxnB,KAAKg6D,gBAAgBvrB,EAAQjnB,EAAStoB,EAAGC,GAGjD,IAAI86D,EAAkB5qB,EAAY6qB,UAElC1yC,EAAQ2yC,WAAW9qB,EAAY9nB,OAAQroB,EAAI+6D,EAAK/6D,EAAGC,EAAI86D,EAAK96D,EAAG86D,EAAK5xD,MAAO4xD,EAAK3xD,OA5B/E,C,CAgCL0xD,gBAAgBvrB,EAAgBjnB,EAAkBtoB,EAAWC,GAEzD,IAEI6E,EAEAyzD,EACAtpC,EACA8rC,EAGAhsC,EAAWC,EACXksC,EAAgBC,EAEhBC,EAZAjrB,EAA0BZ,EAAOY,YACjCV,EAAsB3uC,KAAK2uC,MAE3BpnB,EAAqB8nB,EAAY9nB,OAIjCgzC,EAAqBlrB,EAAYsqB,QAmBrC,GAZAS,GADAE,EAAYjrB,EAAYmrB,oBAAoB/rB,EAAQ8rB,EAAYr7D,EAAGC,IAChDD,EACnBm7D,EAASC,EAAUn7D,EAMnB8uB,GAHAgsC,EAAO5qB,EAAY6qB,WAGV7xD,MAAQ+xD,EACjBlsC,EAAI+rC,EAAK3xD,OAAS+xD,EAClB5C,EAAOwC,EAAK/6D,EACZivB,EAAM8rC,EAAK96D,EAEQ,WAAfo7D,IAA4BtsC,EAAI,MAAQC,EAAI,MAI5C,OAHA52B,QAAQC,KAAK,qDACb83C,EAAYorB,sBACZ9rB,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQjnB,EAAStoB,EAAGC,GAqB/C,GAlBKooB,IACD8nB,EAAYqrB,gBACZnzC,EAAS8nB,EAAY9nB,SAEzBvjB,EAAKujB,EAAOC,SAGTinB,OAASA,GAEXlnB,EAAOlf,OAAS4lB,GAAK1G,EAAOjf,QAAU4lB,IAAM3G,EAAOxU,KAAKkb,EAAGC,GAEzC,WAAfqsC,EAAyBv2D,EAAG02B,UAAW,EACnB,WAAf6/B,IAAyBv2D,EAAG02B,UAAW,GAGhD12B,EAAG2G,QAGW,GAAVyvD,GAAyB,GAAVC,EAAa,CAC5B,IAAI5/B,EAAWz2B,EACfy2B,EAAImU,OACJnU,EAAIh2B,MAAM21D,EAAQC,GAClB1rB,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQzqC,GAAKyzD,GAAOtpC,GAC3CsM,EAAIvN,UACJuhB,EAAOksB,eACV,MACGlgC,EAAMz2B,EACN2qC,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQzqC,GAAKyzD,GAAOtpC,GAC3CsgB,EAAOksB,gBAGPtrB,EAAYurB,cAAavrB,EAAYwrB,SAAU,GACnDnd,KAAKyE,e,CAIT4X,6BAA6BtrB,EAAgBjnB,GAEzC,IAAI6nB,EAA0BZ,EAAOY,YACjCV,EAAsB3uC,KAAK2uC,MAC3BpnB,EAAmC8nB,EAAY9nB,OAE/CgzC,EAAqBlrB,EAAYsqB,QACrCtqB,EAAYmrB,oBAAoB/rB,EAAQ8rB,EAAY,EAAG,GAElDhzC,IACDA,EAAS,IAAIisC,yBAAyBhsC,EAASinB,GAC/CY,EAAY9nB,OAAWA,GAE3B,IAAIvjB,EAAcujB,EAAOC,QAGzBD,EAAO6rC,WACPzkB,EAAMG,KAAK1xC,KAAKuxC,EAAOF,EAAQzqC,EAAIyqC,EAAOiB,OAAQjB,EAAOkB,QACzDlB,EAAOksB,gBAEPjd,KAAKyE,gBACL56B,EAAO8rC,Q,CAMXiF,OAAO7pB,EAAgBjnB,EAAkBtoB,EAAWC,GAChD,IAAIg6C,EAAqB1K,EAAOynB,OAC5BzoB,EAAqBztC,KAAK2uC,MAC1BwK,EAAM2hB,WACNtzC,EAAQonB,OACRpnB,EAAQuzC,yBAA2B5hB,EAAM2hB,UACzCrtB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,GACzCqoB,EAAQ0F,WAERugB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQjnB,EAAStoB,EAAGC,E,CAYjDs5D,MAAMhqB,EAAgBhU,EAAcv7B,EAAWC,GAC3C,IAAIsuC,EAAOztC,KAAK2uC,MACZla,EAAOga,EAAOha,KAClB,IAAIA,GAAUA,EAAKoiC,QAAQz9D,UAAUgB,sBAAuBqgC,EAAI88B,kBA0D5D9pB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQhU,EAAKv7B,EAAGC,OA1D2C,CAChFs7B,EAAImU,OAEJ,IAAIosB,EAAuBvgC,EAAIsgC,yBAC3BE,EAAmB,IAAI7yD,UAE3B6yD,EAAMxyD,SAASgsB,EAAKgb,aAEpB,IAAIxhB,EAAIgtC,EAAM5yD,MAAQ9K,KAAKoB,MAAMs8D,EAAM5yD,OACnC6lB,EAAI+sC,EAAM3yD,OAAS/K,KAAKoB,MAAMs8D,EAAM3yD,QAIxC,GAHA2yD,EAAM/7D,EAAI3B,KAAKoB,MAAMs8D,EAAM/7D,GAC3B+7D,EAAM97D,EAAI5B,KAAKoB,MAAMs8D,EAAM97D,GAEvB8uB,EAAI,GAAKC,EAAI,EAAG,CAChB,IAAIgtC,EAAyB/rC,WAAW6gB,MAAM/hB,EAAGC,GAEjDuM,EAAI0gC,iBAEJ1gC,EAAI0V,SACJ1V,EAAIsW,gBAAgBnD,UAAUlmC,OAAO,CAAC+yB,EAAKygC,EAAOjtC,EAAGC,GAAIgqC,aAAakD,UAAWp7D,OACjFy0B,EAAKic,OAAOjW,GAAMwgC,EAAM/7D,GAAI+7D,EAAM97D,GAClCs7B,EAAI0gC,iBACJ1gC,EAAIkW,QAEJlW,EAAImU,OAMJ,IAAIysB,EAAS,GACb5gC,EAAI4+B,SAASn6D,EAAI+7D,EAAM/7D,EAAIuvC,EAAO6sB,WAAW5rB,OAAS2rB,EAAQl8D,EAAI87D,EAAM97D,EAAIsvC,EAAO6sB,WAAW3rB,OAAS0rB,EAAQptC,EAAa,EAATotC,EAAYntC,EAAa,EAATmtC,GAInI5tB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQhU,EAAKv7B,EAAGC,GACrCs7B,EAAIvN,UAGJ8tC,EAAevgC,EAAIsgC,yBACnBtgC,EAAIsW,gBAAgBnD,UAAUlmC,OAAO,CAAC,QAASwwD,aAAaqD,aAAcv7D,OAE1E,IAAIsqC,EAAuBW,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GACjEsP,EAAKD,QAAQqE,OAMjBnB,EAAI8V,WAAW2qB,EAAOh8D,EAAI+7D,EAAM/7D,EAAIuvC,EAAO6sB,WAAW5rB,OAAQvwC,EAAI87D,EAAM97D,EAAIsvC,EAAO6sB,WAAW3rB,OAAQ1hB,EAAGC,EAAGvqB,OAAOkE,KAAKvD,WAAYgmC,EAAa9S,EAAI,GACrJiD,EAAIsW,gBAAgBnD,UAAUlmC,OAAO,CAACwzD,GAAQhD,aAAasD,cAAex7D,MAC7E,CAGDy6B,EAAIsW,gBAAgBnD,UAAUlmC,OAAO,CAACszD,GAAe9C,aAAaqD,aAAcv7D,OAEhFy6B,EAAIvN,SACP,C,CAKLsrC,YAAY/pB,EAAgBhU,EAAcv7B,EAAWC,GACjD,IAAIsuC,EAAqBztC,KAAK2uC,MAC1Bla,EAAega,EAAOha,KAC1B,GAAIA,EAAM,CACNgG,EAAImU,OACuBnU,EAAIsgC,yBAC/B,IAAIE,EAAmB,IAAI7yD,UAE3B6yD,EAAMxyD,SAASgsB,EAAKgb,aAEpB,IAAIxhB,EAAIgtC,EAAM5yD,MAAQ9K,KAAKoB,MAAMs8D,EAAM5yD,OACnC6lB,EAAI+sC,EAAM3yD,OAAS/K,KAAKoB,MAAMs8D,EAAM3yD,QAIxC,GAHA2yD,EAAM/7D,EAAI3B,KAAKoB,MAAMs8D,EAAM/7D,GAC3B+7D,EAAM97D,EAAI5B,KAAKoB,MAAMs8D,EAAM97D,GAEvB8uB,EAAI,GAAKC,EAAI,EAAG,CAChB,IAAIgtC,EAAczgC,EAAYghC,SAASxtC,EAAGC,GAO1CuG,EAAKic,OAAOjW,GAAMwgC,EAAM/7D,GAAI+7D,EAAM97D,GAClC,IAAIk8D,EAAS,GACZ5gC,EAAYihC,WAAWx8D,EAAI+7D,EAAM/7D,EAAIuvC,EAAO6sB,WAAW5rB,OAAS2rB,EAAQl8D,EAAI87D,EAAM97D,EAAIsvC,EAAO6sB,WAAW3rB,OAAS0rB,EAAQptC,EAAa,EAATotC,EAAYntC,EAAa,EAATmtC,GAe9I5tB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQhU,EAAKv7B,EAAGC,GAEpCs7B,EAAYkhC,kBAAkBT,EAAOh8D,EAAI+7D,EAAM/7D,EAAIuvC,EAAO6sB,WAAW5rB,OAAQvwC,EAAI87D,EAAM97D,EAAIsvC,EAAO6sB,WAAW3rB,OAAQ1hB,EAAGC,EAmB5H,CACDuM,EAAIvN,SACP,MACGugB,EAAKqB,KAAK1xC,KAAKqwC,EAAMgB,EAAQhU,EAAKv7B,EAAGC,E,CAM7CnI,iBAAiByjC,EAAczM,EAAqBC,EAAWC,GAC3DF,EAAG/S,QACH+S,EAAGrjB,MAAM,EAAG,EAAG,EAAG,E,CAGtB3T,qBAAqBg3B,GACjBmB,WAAW4gB,UAAU/hB,E,CAGzBh3B,oBAAoB8jE,GAChBvoC,UAAUW,UAAUX,UAAU4B,MAAM2mC,K,EAlkBjC5C,aAAOc,QAAmB,GAEhBd,aAAQC,SAAiB,IAAID,aAAa,EAAG,M,MCrCrD0D,OAAbr/D,cAOYyD,KAAA67D,eAAwB,CAAC,IAAI/zD,MAAS,IAAIA,MAAS,IAAIA,OAEvD9H,KAAA87D,QAAoB97D,KAAK+7D,S,CAGzBC,aAAa98D,EAAWC,GAC5B,IAAIyK,EAAgB5J,KAAK67D,eAAeI,QACxCryD,EAAO7D,MAAM7G,EAAGC,GAChBa,KAAK67D,eAAex/D,KAAKuN,E,CAM7BmyD,UAAUG,EAAWn/D,GAEjB,IAAIoB,EAAY6B,KAAK67D,eAAe,GAChCz9D,EAAY4B,KAAK67D,eAAe,GAChCM,EAAYn8D,KAAK67D,eAAe,GAChCO,EAAgB7+D,KAAKgtB,IAAK,EAAI2xC,EAAI,GAAK/9D,EAAGe,EAAI,EAAIg9D,GAAK,EAAIA,GAAK99D,EAAGc,EAAI3B,KAAKgtB,IAAI2xC,EAAG,GAAKC,EAAGj9D,EAC3Fm9D,EAAgB9+D,KAAKgtB,IAAK,EAAI2xC,EAAI,GAAK/9D,EAAGgB,EAAI,EAAI+8D,GAAK,EAAIA,GAAK99D,EAAGe,EAAI5B,KAAKgtB,IAAI2xC,EAAG,GAAKC,EAAGh9D,EAC/FpC,EAAIV,KAAK+/D,EAAOC,E,CAMpBC,UAAUJ,EAAWn/D,GAEjB,IAAIoB,EAAY6B,KAAK67D,eAAe,GAChCz9D,EAAY4B,KAAK67D,eAAe,GAChCM,EAAYn8D,KAAK67D,eAAe,GAChCU,EAAYv8D,KAAK67D,eAAe,GAChCO,EAAgB7+D,KAAKgtB,IAAK,EAAI2xC,EAAI,GAAK/9D,EAAGe,EAAI,EAAId,EAAGc,EAAIg9D,GAAK,EAAIA,IAAM,EAAIA,GAAK,EAAIC,EAAGj9D,EAAIg9D,EAAIA,GAAK,EAAIA,GAAKK,EAAGr9D,EAAI3B,KAAKgtB,IAAI2xC,EAAG,GACjIG,EAAgB9+D,KAAKgtB,IAAK,EAAI2xC,EAAI,GAAK/9D,EAAGgB,EAAI,EAAIf,EAAGe,EAAI+8D,GAAK,EAAIA,IAAM,EAAIA,GAAK,EAAIC,EAAGh9D,EAAI+8D,EAAIA,GAAK,EAAIA,GAAKK,EAAGp9D,EAAI5B,KAAKgtB,IAAI2xC,EAAG,GACrIn/D,EAAIV,KAAK+/D,EAAOC,E,CAMpBG,aAAa1xD,EAAe/N,GACxB,IAAI0B,EAEAg+D,EAEJ,IADAA,EAAO,GAFP3xD,EAAQA,EAAQ,EAAIA,EAAQ,GAGvBrM,EAAI,EAAGA,GAAK,EAAGA,GAAKg+D,EACrBz8D,KAAK87D,QAAQr9D,EAAG1B,E,CASxB2/D,gBAAgB3nB,EAAc4nB,EAAsB,EAAG7xD,EAAgB,GACnE,IAAIrM,EAAWD,EAEf,IADAA,EAAMu2C,EAAM94C,QACY,GAAb6O,EAAQ,GAAQ,MAAO,GAClC,IAAI/N,EAAa,GACjB,OAAQ+N,GACJ,KAAK,EACD9K,KAAK87D,QAAU97D,KAAK+7D,UACpB,MACJ,KAAK,EACD/7D,KAAK87D,QAAU97D,KAAKs8D,UACpB,MACJ,QACI,MAAO,GAEf,KAAOt8D,KAAK67D,eAAe5/D,QAAU6O,GACjC9K,KAAK67D,eAAex/D,KAAKyL,MAAMJ,UAEnC,IAAKjJ,EAAI,EAAGA,EAAY,EAARqM,EAAWrM,GAAK,EAC5BuB,KAAKg8D,aAAajnB,EAAMt2C,GAAIs2C,EAAMt2C,EAAI,IAE1C,IAAKA,EAAY,EAARqM,EAAWrM,EAAID,EAAKC,GAAK,EAC9BuB,KAAKg8D,aAAajnB,EAAMt2C,GAAIs2C,EAAMt2C,EAAI,IACjCA,EAAI,EAAKqM,GAAS,GAAG9K,KAAKw8D,aAAaG,EAAa5/D,GAE7D,OAAOA,C,EC9Ff,IAAY6/D,ECAAC,ECAAC,EHWDlB,OAAAmB,EAAY,IAAInB,OCXfgB,oFAOX,KANGA,EAAA,aACAA,IAAA,uBACAA,IAAA,uCAEAA,IAAA,aACAA,IAAA,aCNQC,6CAOT,KALCA,EAAA,aAEAA,IAAA,iBAEAA,IAAA,eCNQC,kEAeX,KAdGA,EAAA,yBACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,6BACAA,IAAA,6BACAA,IAAA,6BACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,iCACAA,IAAA,iDACAA,IAAA,0BACAA,IAAA,0CACAA,IAAA,wBACAA,IAAA,0B,MCZSE,UAaTzgE,YAAY0B,GACR+B,KAAKirB,SAAShtB,E,CATlBjH,cAAciH,GACV,GAAIA,EAAO,CACP,IAAIJ,EAAqBI,aAAiByzC,WAA4BzzC,EAAUyzC,WAAWhqC,OAAOzJ,GAClG,OAAOJ,EAAMo/D,aAAep/D,EAAMo/D,WAAa,IAAID,UAAU/+D,GAChE,CACD,OAAO++D,UAAUE,O,CAOrBjyC,SAAShtB,GAED+B,KAAKo0C,OADLn2C,EACeA,aAAiByzC,WAA4BzzC,EAAUyzC,WAAWhqC,OAAOzJ,GAEzEyzC,WAAWhqC,OAAO,U,CAGzCK,QACI/H,KAAKo0C,OAAS1C,WAAWhqC,OAAO,U,CAGpCy1D,QACI,OAAOn9D,KAAKo0C,OAAOvC,Q,CAGvBrnB,MAAMvsB,GACF,MAAsB,iBAAlB,EAAmC+B,KAAKo0C,OAAOxC,WAAsB3zC,EACrEA,aAAiByzC,YAAmB1xC,KAAKo0C,OAAOvC,WAA2B5zC,EAAQ4zC,Q,CAI3FurB,aACI,OAAOp9D,KAAKo0C,OAAOxC,Q,EAtChBorB,UAAAE,QAAqB,IAAIF,UAAU,W,MCFjCK,KAWT9gE,cAPAyD,KAASs9D,UAAW,EAEpBt9D,KAASu9D,UAAW,EACpBv9D,KAAKw9D,MAAU,GACPx9D,KAAQy9D,SAAe,I,CAM/BC,UAAUC,GACN39D,KAAKw9D,MAAMvhE,OAAS,EACpB+D,KAAKy9D,SAAWz9D,KAAKw9D,MAAM,GAAK,IAAII,WACpC59D,KAAKy9D,SAASE,OAASA,C,CAI3BE,YACI79D,KAAKy9D,SAAStf,MAAO,C,CAGzB2f,UACI99D,KAAKy9D,SAAW,IAAIG,WACpB59D,KAAKw9D,MAAMnhE,KAAK2D,KAAKy9D,S,CAGzBx0D,SAAS80D,EAAgBC,GAErBh+D,KAAKy9D,SAASn+D,KAAKjD,KAAK0hE,EAAQC,E,CAIpC3hE,KAAK4C,EAAe0+D,GACX39D,KAAKy9D,SAGCz9D,KAAKy9D,SAASn+D,KAAKrD,OAAS,IACnC+D,KAAKy9D,SAAW,IAAIG,WACpB59D,KAAKw9D,MAAMnhE,KAAK2D,KAAKy9D,YAJrBz9D,KAAKy9D,SAAW,IAAIG,WACpB59D,KAAKw9D,MAAMnhE,KAAK2D,KAAKy9D,WAKzB,IAAIQ,EAAiBj+D,KAAKy9D,SAC1BQ,EAAG3+D,KAAOL,EAAOob,QACjB4jD,EAAGN,OAASA,C,CAGhB51D,QACI/H,KAAKw9D,MAAMvhE,OAAS,C,EAM5B,MAAM2hE,WAANrhE,cACIyD,KAAIV,KAAU,GACdU,KAAIm+C,MAAY,EAChBn+C,KAAM29D,QAAY,C,QCxDTO,SA6DT3hE,c,CAjCAvF,sBACI,IAAIiH,EAAa,GAEjB,OADAA,EAAMqb,QAAU,EACTrb,C,CAGXjH,eACI,IAAImnE,EAAeD,SAASE,SAAW,GAkBvC,OAhBAD,EAAQD,SAASG,YAAc,QAC/BF,EAAQD,SAASI,gBAAkB,YACnCH,EAAQD,SAASK,WAAa,OAC9BJ,EAAQD,SAASM,gBAAkB,YACnCL,EAAQD,SAASO,kBAAoB,cAErCN,EAAQD,SAASQ,kBAAoB,WAErCP,EAAQD,SAASS,WAAaR,EAAQD,SAASU,gBAAkBT,EAAQD,SAASW,gBAAkB,GAEpGV,EAAQD,SAASY,mBAAqB,eACtCX,EAAQD,SAASa,gBAAkB,YACnCZ,EAAQD,SAASc,+BAAiC,cAClDb,EAAQD,SAASe,aAAe,SAChCd,EAAQD,SAASgB,cAAgB,UACjCf,EAAQD,SAASiB,kBAAoB,cAC9BhB,C,CAWXiB,aAAwB,OAAO,CAAM,CAErClyC,QAAQ1F,GACJxnB,KAAKq/D,SAASr/D,KAAKs/D,YAAct/D,KAAKo1B,OACtC8oC,SAAS/vB,KAAK+vB,SAAS/vB,KAAK70B,WAAatZ,KACzCA,KAAKu/D,aAAe/3C,EAAQktC,WAAa7Q,WAAWW,W,CAGxDxtD,YAAYwwB,EAAkBjc,EAAci0D,EAAcC,GACtD,IAAKj4C,EAAQk4C,UAAUC,SAAWp0D,KAAUA,EAAM,CAC9Cic,EAAQk4C,UAAUC,UAAYp0D,EAC9B,IAAIq0D,EAAa1B,SAAS/vB,KACtBrY,EAAS8pC,EAAMtmD,QAAU,EAAIsmD,IAAQA,EAAMtmD,SAAQ,IAAQ4kD,SAC/DpoC,EAAEV,OAASoqC,EAAQ1pC,EAAEwpC,WAAapB,SAASE,SAAS7yD,IACpDuqB,EAAEupC,SAAWG,EACb1pC,EAAEypC,WAAaE,EACf,IAAII,EAAar4C,EAAQq4C,MACzBA,EAAMA,EAAMvmD,WAAawc,CAC5B,C,EA9EEooC,SAAUG,WAAW,EACrBH,SAAcI,eAAW,EACzBJ,SAASK,UAAW,EACpBL,SAAcM,eAAW,IACzBN,SAAgBO,iBAAW,IAC3BP,SAASS,UAAW,KACpBT,SAAcU,eAAW,KACzBV,SAAcW,eAAW,KACzBX,SAAgBQ,iBAAW,KAE3BR,SAAiBY,kBAAW,MAC5BZ,SAAca,eAAW,MACzBb,SAA6Bc,8BAAW,MACxCd,SAAa4B,cAAW,OACxB5B,SAAqB6B,sBAAW,OAChC7B,SAAS8B,UAAW,OACpB9B,SAAWe,YAAW,QACtBf,SAAYgB,aAAW,QACvBhB,SAAiB+B,kBAAW,QAC5B/B,SAAgBiB,iBAAW,QAEnBjB,SAAA/vB,KAAY+vB,SAASgC,eACrBhC,SAAAE,SAAgBF,SAASiC,Q,MCxB/BC,aAAb7jE,cAIIyD,KAAAi0D,kBAA4B,IAAItwD,OAChC3D,KAAWqgE,aAAY,EACvBrgE,KAAAsgE,UAAuB,IAAIl4D,UAC3BpI,KAAOugE,SAAY,C,CAEnBnB,aAAwB,OAAO,CAAM,CAErClyC,QAAQ1F,GACJxnB,KAAKi0D,kBAAkBtsD,OAAO6f,EAAQysC,mBACtCj0D,KAAKsgE,UAAU94D,MAAMggB,EAAQ84C,WAC7B94C,EAAQ64C,YAAcrgE,KAAKqgE,YAC3BD,aAAajyB,KAAKiyB,aAAajyB,KAAK70B,WAAatZ,KACjDwnB,EAAQg5C,aAAexgE,KAAKugE,O,CAGhCvpE,YAAYwwB,GACR,IAAKA,EAAQk4C,UAAUC,SAAWzB,SAAS4B,gBAAkB5B,SAAS4B,cAAtE,CACAt4C,EAAQk4C,UAAUC,UAAYzB,SAAS4B,cACvC,IAAIF,EAAaQ,aAAajyB,KAC1BrY,EAAkB8pC,EAAMtmD,QAAU,EAAIsmD,IAAQA,EAAMtmD,SAAQ,IAAQ8mD,aACxE54C,EAAQysC,kBAAkBtsD,OAAOmuB,EAAEm+B,mBACnCzsC,EAAQ84C,UAAU94D,MAAMsuB,EAAEwqC,WAC1BxqC,EAAEuqC,YAAc74C,EAAQ64C,YACxBvqC,EAAEyqC,QAAU/4C,EAAQg5C,aACpB,IAAIX,EAAar4C,EAAQq4C,MACzBA,EAAMA,EAAMvmD,WAAawc,CAT4D,C,EAlB1EsqC,aAAAjyB,KAAY+vB,SAASgC,e,MCJ3BO,SAQTlkE,cAJAyD,KAAQ2/D,SAAW,C,CAOnBP,aACI,OAAO,C,CAGXlyC,QAAQ1F,GACJA,EAAQk4C,UAAY1/D,KAAK0gE,aACzBD,SAAStyB,KAAKsyB,SAAStyB,KAAK70B,WAAatZ,I,CAG7ChJ,cAAcwwB,GACV,IAAIm5C,EAAUF,SAAStyB,KACnBrY,EAAc6qC,EAAGrnD,QAAU,EAAIqnD,IAAKA,EAAGrnD,SAAQ,IAAQmnD,SAI3D,OAHA3qC,EAAE6pC,SAAW,EACb7pC,EAAE4qC,aAAel5C,EAAQk4C,UACzBl4C,EAAQk4C,UAAY5pC,EACbA,C,EAxBI2qC,SAAAtyB,KAAY+vB,SAASgC,e,MCD3BU,cASTrkE,cAFAyD,KAAAgzC,QAAkB,IAAIrvC,M,CAKtBy7D,aAAwB,OAAO,CAAM,CAErClyC,QAAQ1F,GACJA,EAAQ0nB,QAAUlvC,KAAK6gE,YACvBD,cAAczyB,KAAKyyB,cAAczyB,KAAK70B,WAAatZ,I,CAGvDhJ,YAAYwwB,GACR,IAAIk4C,EAAiBl4C,EAAQk4C,UAC7B,IAAKA,EAAUC,SAAWzB,SAASU,kBAAoBV,SAASU,eAAhE,CACAc,EAAUC,UAAYzB,SAASU,eAC/B,IAAI+B,EAAUC,cAAczyB,KACxBrY,EAAmB6qC,EAAGrnD,QAAU,EAAIqnD,IAAKA,EAAGrnD,SAAQ,IAAQsnD,cAChE9qC,EAAE+qC,YAAcr5C,EAAQ0nB,QACxB1nB,EAAQ0nB,QAAU1nB,EAAQ0nB,QAAQvnC,OAAOmuB,EAAEkd,SAC3C,IAAI6sB,EAAar4C,EAAQq4C,MACzBA,EAAMA,EAAMvmD,WAAawc,CAPuD,C,EAlBrE8qC,cAAAzyB,KAAY+vB,SAASgC,e,MCH3BY,cAAbvkE,cAKIyD,KAAA2yC,KAAe,IAAIhvC,M,CACnBy7D,aAAwB,OAAO,CAAM,CAErClyC,QAAQ1F,GACJxnB,KAAK2yC,KAAKhrC,OAAO6f,EAAQ0nB,SACzB4xB,cAAc3yB,KAAK2yB,cAAc3yB,KAAK70B,WAAatZ,I,CAGvDhJ,YAAYwwB,GACR,IAAIm5C,EAAUG,cAAc3yB,KACxBrY,EAAmB6qC,EAAGrnD,QAAU,EAAIqnD,IAAKA,EAAGrnD,SAAQ,IAAQwnD,cAChEt5C,EAAQ0nB,QAAQvnC,OAAOmuB,EAAE6c,MACzB,IAAIktB,EAAar4C,EAAQq4C,MACzBA,EAAMA,EAAMvmD,WAAawc,C,EAfdgrC,cAAA3yB,KAAY+vB,SAASgC,eCRxC,ICGaa,ECADC,EFHZC,EAAe,2xDGAfC,EAAe,4iKCAfC,EAAe,mrCCAfC,EAAe,6uBCAfC,EAAe,sgBCAfC,EAAe,62B,MCWFC,SAAbhlE,cACIyD,KAAKqrC,MAAW,EAGhBrrC,KAAAmrC,QAAU,IAAIlV,gBACdj2B,KAAUwhE,WAAW,EAErBxhE,KAAAyhE,UAAYzE,UAAUE,QACtBl9D,KAAA0hE,YAAe1E,UAAUE,O,CACzB/5D,UAEFnD,KAAKmrC,QAAU,KAETnrC,KAAKgtC,QAAU,I,CAGnBh2C,kBACS4E,OAAeC,QAAWD,OAAeqzB,YAAYC,YACrDtzB,OAAe+lE,aAAa1rC,gBAAgB/N,UAAW+4C,EAAYC,GACnEtlE,OAAe+lE,aAAa1rC,gBAAgBK,UAAW6qC,EAAUC,GACjExlE,OAAe+lE,aAAa1rC,gBAAgBkB,SAAUkqC,EAASC,KAGhEj+B,OAAOs+B,aAAa,EAAG1rC,gBAAgB/N,UAAW+4C,EAAYC,EAAY,MAC1E79B,OAAOs+B,aAAa,EAAG1rC,gBAAgBK,UAAW6qC,EAAUC,EAAU,MACtE/9B,OAAOs+B,aAAa,EAAG1rC,gBAAgBkB,SAAUkqC,EAASC,EAAS,M,QChClEM,eAQTrlE,cACIyD,KAAKkyD,GAAK/D,cAAczmD,OAAOuuC,cAAYmZ,SAC3CpvD,KAAKuxD,GAAKxC,eAAernD,OAAO,E,CAIpC1Q,qBACI,OAAO4qE,eAAetlE,SAAWslE,eAAetlE,UAAY,IAAIslE,c,CAIpEC,YAAYC,GAERA,EAASC,SAAS/hE,KAAKuxD,GAAIvxD,KAAKkyD,GAAIlyD,KAAKuxD,GAAG1G,YAAc,G,CAI9D9iD,QACI/H,KAAKuxD,GAAGjD,SAAS3jD,QACjB3K,KAAKkyD,GAAG5D,SAAS3jD,O,QC/BZq3D,SAaThrE,mBAAmBg4C,EAAUizB,EAAgBC,EAAmBC,EAAmBC,EAAkBjkB,GAEjG,GAAInP,EAAE/yC,OAAS,EAAG,OAAO,KACzB,IAAIgD,EAAgB+iE,SAASK,SAASpmE,OAAU+yC,EAAE/yC,OAAS,EAAK+lE,SAASK,SAAW,IAAIhxD,MAAM29B,EAAE/yC,OAAS,GACzGgD,EAAO,GAAK+vC,EAAE,GAAI/vC,EAAO,GAAK+vC,EAAE,GAOhC,IAAIszB,EAAiB,EACjB7jE,EAAY,EACZxC,EAAiB+yC,EAAE/yC,OAEvB,IAAKwC,EAAI,EAAGA,EAAIxC,EAAQwC,GAAK,EACrBlB,KAAKglE,IAAIvzB,EAAEvwC,GAAKuwC,EAAEvwC,EAAI,IAAMlB,KAAKglE,IAAIvzB,EAAEvwC,EAAI,GAAKuwC,EAAEvwC,EAAI,IAAM,MAC5DQ,EAAOqjE,KAAYtzB,EAAEvwC,GAAIQ,EAAOqjE,KAAYtzB,EAAEvwC,EAAI,IAItD0/C,GAAQ5gD,KAAKglE,IAAIvzB,EAAE,GAAK/vC,EAAOqjE,EAAS,IAAM/kE,KAAKglE,IAAIvzB,EAAE,GAAK/vC,EAAOqjE,EAAS,IAAM,MACpFrjE,EAAOqjE,KAAYtzB,EAAE,GAAI/vC,EAAOqjE,KAAYtzB,EAAE,IAGlD,IAAI3vC,EAAgB+iE,EACpBnmE,EAASqmE,EAAS,EAClB,IAEI3L,EAAYC,EAAY4L,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EACzFC,EAAeC,EAAeC,EAAgBC,EAC9Cp+D,EAAYO,EAAYN,EAAYW,EAAYC,EAAYC,EAC5Du9D,EAA8BC,EAL9Bl1C,EAAYi0C,EAAY,EAmB5B,IAZAM,EAAMvjE,EAAO,GACbwjE,EAAMxjE,EAAO,GAKb8jE,EAAQP,GAJRE,EAAMzjE,EAAO,IAMb6jE,GAHAA,IAAUL,GAFVE,EAAM1jE,EAAO,OAIbkkE,EAAO5lE,KAAK4I,KAAK28D,EAAQA,EAAQC,EAAQA,IAClB90C,EACvB80C,EAAQA,EAAQI,EAAOl1C,EAEvB5uB,EAAOhD,KAAKmmE,EAAMM,EAAOL,EAAMM,EAAOP,EAAMM,EAAOL,EAAMM,GACpDtkE,EAAI,EAAGA,EAAIxC,EAAS,EAAGwC,IACxB+jE,EAAMvjE,EAAiB,GAATR,EAAI,IAClBgkE,EAAMxjE,EAAiB,GAATR,EAAI,GAAS,GAC3BikE,EAAMzjE,EAAa,EAAN,GACb0jE,EAAM1jE,EAAa,EAAN,EAAU,GACvB2jE,EAAM3jE,EAAiB,GAATR,EAAI,IAClBokE,EAAM5jE,EAAiB,GAATR,EAAI,GAAS,GAG3BskE,EAAQP,EAAME,EAMdO,EAASP,EAAME,EAOf99D,KAXAg+D,GAHAA,IAAUL,EAAME,KAEhBQ,EAAO5lE,KAAK4I,KAAK28D,EAAQA,EAAQC,EAAQA,IAClB90C,GAWRu0C,MAVfO,EAAQA,EAAQI,EAAOl1C,GAUS00C,KAASG,EAAQJ,KAASK,EAAQN,GAGlE98D,KARAq9D,GAHAA,IAAWL,EAAME,KAEjBM,EAAO5lE,KAAK4I,KAAK68D,EAASA,EAASC,EAASA,IACnBh1C,GAQT20C,MAPhBK,EAASA,EAASE,EAAOl1C,GAOS00C,KAASK,EAASN,KAASO,EAASJ,GACtEK,GANAr+D,GAAOk+D,EAAQN,IAASM,EAAQJ,KAIhCj9D,GAAOs9D,EAASN,IAASM,EAASJ,KADlCn9D,GAAOw9D,EAASJ,IAASI,EAASN,KAFlCv9D,GAAO09D,EAAQJ,IAASI,EAAQN,IAM5BjlE,KAAKglE,IAAIW,GAAS,IAClBA,GAAS,KACT7jE,EAAOhD,KAAKqmE,EAAMI,EAAOH,EAAMI,EAAOL,EAAMI,EAAOH,EAAMI,KAG7DpM,GAAMvxD,EAAKO,EAAKD,EAAKZ,GAAMo+D,EAC3BtM,GAAMnxD,EAAKX,EAAKD,EAAKc,GAAMu9D,EAE3B7jE,EAAOhD,KAAKs6D,EAAIC,EAAI8L,GAAO/L,EAAK+L,GAAMC,GAAO/L,EAAK+L,KAetD,IAZAH,EAAMvjE,EAAOqjE,EAAS,GACtBG,EAAMxjE,EAAOqjE,EAAS,GAKtBS,EAAQP,GAJRE,EAAMzjE,EAAOqjE,EAAS,IAMtBQ,GAHAA,IAAUL,GAFVE,EAAM1jE,EAAOqjE,EAAS,OAItBa,EAAO5lE,KAAK4I,KAAK28D,EAAQA,EAAQC,EAAQA,IAClB90C,EACvB80C,EAAQA,EAAQI,EAAOl1C,EAEvB5uB,EAAOhD,KAAKqmE,EAAMI,EAAOH,EAAMI,EAAOL,EAAMI,EAAOH,EAAMI,GACpDtkE,EAAI,EAAGA,EAAIxC,EAAQwC,IACpBwjE,EAAQ5lE,KAAK8lE,EAAsB,GAAT1jE,EAAI,GAAQ0jE,EAAsB,GAAT1jE,EAAI,GAAS,EAAG0jE,EAAgB,EAAJ1jE,EAAQ,EAAG0jE,EAAgB,EAAJ1jE,EAAQ,EAAG0jE,EAAgB,EAAJ1jE,EAAO0jE,EAAsB,GAAT1jE,EAAI,IAGzJ,OAAOY,C,CAgCXrI,0BAA0BsI,EAAazB,EAAewK,EAAe81C,EAAeilB,EAAqBC,EAAkBC,GAEvH,IAAIrkE,EAAgBK,EAAK+a,QACrBkpD,EAAgBtkE,EAAOhD,OACvBumE,EAAcvjE,EAAO,GAAIwjE,EAAcxjE,EAAO,GAC9CyjE,EAAczjE,EAAO,GACrBT,GADuCS,EAAO,GAChC,GACdg/D,EAAa,EACbnqB,EAAa,EAAG0vB,EAAa,EAO7BC,EAAmBF,EAAQ,EAC/B,KAAIE,GAAY,IACA,GAAZA,EAAJ,CASA,IAJA,IAAIC,EAAiB,IAAIryD,MAAiB,EAAXoyD,GAC3BE,EAAoB,EAEpBtR,EAAa,EACR5zD,EAAY,EAAGA,EAAIglE,EAAW,EAAGhlE,IACtC+jE,EAAMvjE,EAAOozD,KAAOoQ,EAAMxjE,EAAOozD,KACjCqQ,EAAMzjE,EAAOozD,KACGmR,EADUvkE,EAAOozD,KACNoQ,EACjB,IADV3uB,EAAK4uB,EAAMF,IACU,GAANgB,IACXhlE,EAAMjB,KAAK4I,KAAK2tC,EAAKA,EAAK0vB,EAAKA,IACrB,OAENE,EADAzF,EAAiB,EAAZ0F,GACSnB,EACdkB,EAAQzF,EAAK,GAAKwE,EAClBiB,EAAQzF,EAAK,GAAKnqB,EAAKt1C,EACvBklE,EAAQzF,EAAK,GAAKuF,EAAKhlE,EACvBmlE,KAkCZ,IA9BIxlB,GACAqkB,EAAMvjE,EAAOskE,EAAQ,GAAId,EAAMxjE,EAAOskE,EAAQ,GAC9Cb,EAAMzjE,EAAO,GACGukE,EADOvkE,EAAO,GACHwjE,EACjB,IADV3uB,EAAK4uB,EAAMF,IACU,GAANgB,IACXhlE,EAAMjB,KAAK4I,KAAK2tC,EAAKA,EAAK0vB,EAAKA,IACrB,OAENE,EADAzF,EAAiB,EAAZ0F,GACSnB,EACdkB,EAAQzF,EAAK,GAAKwE,EAClBiB,EAAQzF,EAAK,GAAKnqB,EAAKt1C,EACvBklE,EAAQzF,EAAK,GAAKuF,EAAKhlE,EACvBmlE,OAKRD,EADAzF,EAAiB,EAAZ0F,GACSnB,EACdkB,EAAQzF,EAAK,GAAKwE,EAClBiB,EAAQzF,EAAK,GAAKnqB,EAAKt1C,EACvBklE,EAAQzF,EAAK,GAAKuF,EAAKhlE,EACvBmlE,KAEJtR,EAAK,EAOA5zD,EAAI,EAAGA,EAAIglE,EAAUhlE,IACtB+jE,EAAMvjE,EAAOozD,GAAKoQ,EAAMxjE,EAAOozD,EAAK,GACpCqQ,EAAMzjE,EAAOozD,EAAK,GAAUpzD,EAAOozD,EAAK,EAtD3C,C,EAnKU2P,SAAAK,SAAkB,IAAIhxD,MAAM,K,MCFlCuyD,WAUTrnE,YAAYkC,EAAQS,EAAQC,GAExBa,KAAKvB,EAAIA,EAGTuB,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EAGTa,KAAK6jE,KAAO,KACZ7jE,KAAKytC,KAAO,KAGZztC,KAAKmgC,EAAI,KAGTngC,KAAK8jE,MAAQ,KACb9jE,KAAK+jE,MAAQ,KAGb/jE,KAAKgkE,SAAU,C,QC7BVC,OACTjtE,cAAckL,EAAWgiE,EAAkBC,GAEvCA,EAAMA,GAAO,EAEb,IAOI36D,EAAWE,EAAWD,EAAWE,EAAWzK,EAAQC,EAAQilE,EAP5DC,EAAgBH,GAAeA,EAAYjoE,OAC3CqoE,EAAgBD,EAAWH,EAAY,GAAKC,EAAMjiE,EAAKjG,OACvDsoE,EAAiBN,OAAOO,WAAWtiE,EAAM,EAAGoiE,EAAUH,GAAK,GAC3DM,EAAiB,GAErB,IAAKF,EAAW,OAAOE,EAOvB,GAHIJ,IAAUE,EAAYN,OAAOS,eAAexiE,EAAMgiE,EAAaK,EAAWJ,IAG1EjiE,EAAKjG,OAAS,GAAKkoE,EAAK,CACxB36D,EAAOC,EAAOvH,EAAK,GACnBwH,EAAOC,EAAOzH,EAAK,GAEnB,IAAK,IAAIzD,EAAS0lE,EAAK1lE,EAAI6lE,EAAU7lE,GAAK0lE,GACtCjlE,EAAIgD,EAAKzD,IAED+K,IAAMA,EAAOtK,IADrBC,EAAI+C,EAAKzD,EAAI,IAELiL,IAAMA,EAAOvK,GACjBD,EAAIuK,IAAMA,EAAOvK,GACjBC,EAAIwK,IAAMA,EAAOxK,GAKzBilE,EAAsB,KADtBA,EAAU7mE,KAAKuL,IAAIW,EAAOD,EAAMG,EAAOD,IACb,EAAI06D,EAAU,CAC3C,CAID,OAFAH,OAAOU,aAAaJ,EAAWE,EAAWN,EAAK36D,EAAME,EAAM06D,GAEpDK,C,CAIXztE,kBAAkBkL,EAAW+Y,EAAYE,EAAUgpD,EAAUS,GACzD,IAAInmE,EAAQomE,EAEZ,GAAID,IAAeX,OAAOa,WAAW5iE,EAAM+Y,EAAOE,EAAKgpD,GAAO,EAC1D,IAAK1lE,EAAIwc,EAAOxc,EAAI0c,EAAK1c,GAAK0lE,EAAKU,EAAOZ,OAAOc,WAAWtmE,EAAGyD,EAAKzD,GAAIyD,EAAKzD,EAAI,GAAIomE,QAErF,IAAKpmE,EAAI0c,EAAMgpD,EAAK1lE,GAAKwc,EAAOxc,GAAK0lE,EAAKU,EAAOZ,OAAOc,WAAWtmE,EAAGyD,EAAKzD,GAAIyD,EAAKzD,EAAI,GAAIomE,GAQhG,OALIA,GAAQZ,OAAO/6D,OAAO27D,EAAMA,EAAKp3B,QACjCw2B,OAAOe,WAAWH,GAClBA,EAAOA,EAAKp3B,MAGTo3B,C,CAIX7tE,oBAAoBikB,EAAYE,GAC5B,IAAKF,EAAO,OAAOA,EACdE,IAAKA,EAAMF,GAEhB,IACIgqD,EADAj2B,EAAS/zB,EAEb,GAGI,GAFAgqD,GAAQ,EAEHj2B,EAAEg1B,UAAYC,OAAO/6D,OAAO8lC,EAAGA,EAAEvB,OAA4C,IAAnCw2B,OAAOiB,KAAKl2B,EAAE60B,KAAM70B,EAAGA,EAAEvB,MAOpEuB,EAAIA,EAAEvB,SAP4E,CAGlF,GAFAw2B,OAAOe,WAAWh2B,IAClBA,EAAI7zB,EAAM6zB,EAAE60B,QACF70B,EAAEvB,KAAM,MAClBw3B,GAAQ,CAEX,QAGIA,GAASj2B,IAAM7zB,GAExB,OAAOA,C,CAIXnkB,oBAAoBmuE,EAAUV,EAAgBN,EAAU36D,EAAWE,EAAW06D,EAAcgB,EAAY,MACpG,GAAKD,EAAL,EAGKC,GAAQhB,GAASH,OAAOoB,WAAWF,EAAK37D,EAAME,EAAM06D,GAMzD,IAJA,IACIP,EAAWp2B,EADX63B,EAAYH,EAITA,EAAItB,OAASsB,EAAI13B,MAIpB,GAHAo2B,EAAOsB,EAAItB,KACXp2B,EAAO03B,EAAI13B,KAEP22B,EAAUH,OAAOsB,YAAYJ,EAAK37D,EAAME,EAAM06D,GAAWH,OAAOuB,MAAML,GAEtEV,EAAUpoE,KAAKwnE,EAAKplE,EAAI0lE,GACxBM,EAAUpoE,KAAK8oE,EAAI1mE,EAAI0lE,GACvBM,EAAUpoE,KAAKoxC,EAAKhvC,EAAI0lE,GAExBF,OAAOe,WAAWG,GAGlBA,EAAM13B,EAAKA,KACX63B,EAAO73B,EAAKA,UAQhB,IAHA03B,EAAM13B,KAGM63B,EAAM,CAETF,EAIe,IAATA,GACPD,EAAMlB,OAAOwB,uBAAuBN,EAAKV,EAAWN,GACpDF,OAAOU,aAAaQ,EAAKV,EAAWN,EAAK36D,EAAME,EAAM06D,EAAS,IAG9C,IAATgB,GACPnB,OAAOyB,YAAYP,EAAKV,EAAWN,EAAK36D,EAAME,EAAM06D,GATpDH,OAAOU,aAAaV,OAAO0B,aAAaR,EAAK,MAAOV,EAAWN,EAAK36D,EAAME,EAAM06D,EAAS,GAY7F,KACH,CA/CK,C,CAoDdptE,aAAamuE,GACT,IAAIvhE,EAASuhE,EAAItB,KACbhgE,EAASshE,EACTrhE,EAASqhE,EAAI13B,KAEjB,GAAIw2B,OAAOiB,KAAKthE,EAAGC,EAAGC,IAAM,EAAG,OAAO,EAKtC,IAFA,IAAIkrC,EAASm2B,EAAI13B,KAAKA,KAEfuB,IAAMm2B,EAAItB,MAAM,CACnB,GAAII,OAAO2B,gBAAgBhiE,EAAE1E,EAAG0E,EAAEzE,EAAG0E,EAAE3E,EAAG2E,EAAE1E,EAAG2E,EAAE5E,EAAG4E,EAAE3E,EAAG6vC,EAAE9vC,EAAG8vC,EAAE7vC,IAC5D8kE,OAAOiB,KAAKl2B,EAAE60B,KAAM70B,EAAGA,EAAEvB,OAAS,EAAG,OAAO,EAChDuB,EAAIA,EAAEvB,IACT,CAED,OAAO,C,CAIXz2C,mBAAmBmuE,EAAU37D,EAAWE,EAAW06D,GAC/C,IAAIxgE,EAASuhE,EAAItB,KACbhgE,EAASshE,EACTrhE,EAASqhE,EAAI13B,KAEjB,GAAIw2B,OAAOiB,KAAKthE,EAAGC,EAAGC,IAAM,EAAG,OAAO,EAetC,IAZA,IAAI+hE,EAAajiE,EAAE1E,EAAI2E,EAAE3E,EAAK0E,EAAE1E,EAAI4E,EAAE5E,EAAI0E,EAAE1E,EAAI4E,EAAE5E,EAAM2E,EAAE3E,EAAI4E,EAAE5E,EAAI2E,EAAE3E,EAAI4E,EAAE5E,EACxE4mE,EAAaliE,EAAEzE,EAAI0E,EAAE1E,EAAKyE,EAAEzE,EAAI2E,EAAE3E,EAAIyE,EAAEzE,EAAI2E,EAAE3E,EAAM0E,EAAE1E,EAAI2E,EAAE3E,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EACxE4mE,EAAaniE,EAAE1E,EAAI2E,EAAE3E,EAAK0E,EAAE1E,EAAI4E,EAAE5E,EAAI0E,EAAE1E,EAAI4E,EAAE5E,EAAM2E,EAAE3E,EAAI4E,EAAE5E,EAAI2E,EAAE3E,EAAI4E,EAAE5E,EACxE8mE,EAAapiE,EAAEzE,EAAI0E,EAAE1E,EAAKyE,EAAEzE,EAAI2E,EAAE3E,EAAIyE,EAAEzE,EAAI2E,EAAE3E,EAAM0E,EAAE1E,EAAI2E,EAAE3E,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAGxE8mE,EAAYhC,OAAOiC,OAAOL,EAAOC,EAAOt8D,EAAME,EAAM06D,GACpD+B,EAAYlC,OAAOiC,OAAOH,EAAOC,EAAOx8D,EAAME,EAAM06D,GAGpDp1B,EAASm2B,EAAIpB,MAEV/0B,GAAKA,EAAE7O,GAAKgmC,GAAM,CACrB,GAAIn3B,IAAMm2B,EAAItB,MAAQ70B,IAAMm2B,EAAI13B,MAC5Bw2B,OAAO2B,gBAAgBhiE,EAAE1E,EAAG0E,EAAEzE,EAAG0E,EAAE3E,EAAG2E,EAAE1E,EAAG2E,EAAE5E,EAAG4E,EAAE3E,EAAG6vC,EAAE9vC,EAAG8vC,EAAE7vC,IAC5D8kE,OAAOiB,KAAKl2B,EAAE60B,KAAM70B,EAAGA,EAAEvB,OAAS,EAAG,OAAO,EAChDuB,EAAIA,EAAE+0B,KACT,CAKD,IAFA/0B,EAAIm2B,EAAIrB,MAED90B,GAAKA,EAAE7O,GAAK8lC,GAAM,CACrB,GAAIj3B,IAAMm2B,EAAItB,MAAQ70B,IAAMm2B,EAAI13B,MAC5Bw2B,OAAO2B,gBAAgBhiE,EAAE1E,EAAG0E,EAAEzE,EAAG0E,EAAE3E,EAAG2E,EAAE1E,EAAG2E,EAAE5E,EAAG4E,EAAE3E,EAAG6vC,EAAE9vC,EAAG8vC,EAAE7vC,IAC5D8kE,OAAOiB,KAAKl2B,EAAE60B,KAAM70B,EAAGA,EAAEvB,OAAS,EAAG,OAAO,EAChDuB,EAAIA,EAAE80B,KACT,CAED,OAAO,C,CAKX9sE,8BAA8BikB,EAAYwpD,EAAgBN,GACtD,IAAIn1B,EAAS/zB,EACb,EAAG,CACC,IAAIrX,EAASorC,EAAE60B,KACXhgE,EAASmrC,EAAEvB,KAAKA,MAEfw2B,OAAO/6D,OAAOtF,EAAGC,IAAMogE,OAAOt7D,WAAW/E,EAAGorC,EAAGA,EAAEvB,KAAM5pC,IAAMogE,OAAOmC,cAAcxiE,EAAGC,IAAMogE,OAAOmC,cAAcviE,EAAGD,KAEpH6gE,EAAUpoE,KAAKuH,EAAEnF,EAAI0lE,GACrBM,EAAUpoE,KAAK2yC,EAAEvwC,EAAI0lE,GACrBM,EAAUpoE,KAAKwH,EAAEpF,EAAI0lE,GAGrBF,OAAOe,WAAWh2B,GAClBi1B,OAAOe,WAAWh2B,EAAEvB,MAEpBuB,EAAI/zB,EAAQpX,GAEhBmrC,EAAIA,EAAEvB,I,OACDuB,IAAM/zB,GAEf,OAAO+zB,C,CAKXh4C,mBAAmBikB,EAAYwpD,EAAgBN,EAAU36D,EAAWE,EAAW06D,GAE3E,IAAIxgE,EAASqX,EACb,EAAG,CAEC,IADA,IAAIpX,EAASD,EAAE6pC,KAAKA,KACb5pC,IAAMD,EAAEigE,MAAM,CACjB,GAAIjgE,EAAEnF,IAAMoF,EAAEpF,GAAKwlE,OAAOoC,gBAAgBziE,EAAGC,GAAI,CAE7C,IAAIC,EAASmgE,OAAOqC,aAAa1iE,EAAGC,GASpC,OANAD,EAAIqgE,OAAO0B,aAAa/hE,EAAGA,EAAE6pC,MAC7B3pC,EAAImgE,OAAO0B,aAAa7hE,EAAGA,EAAE2pC,MAG7Bw2B,OAAOU,aAAa/gE,EAAG6gE,EAAWN,EAAK36D,EAAME,EAAM06D,QACnDH,OAAOU,aAAa7gE,EAAG2gE,EAAWN,EAAK36D,EAAME,EAAM06D,EAEtD,CACDvgE,EAAIA,EAAE4pC,IACT,CACD7pC,EAAIA,EAAE6pC,I,OACD7pC,IAAMqX,E,CAKnBjkB,sBAAsBkL,EAAWgiE,EAAkBK,EAAgBJ,GAC/D,IACI1lE,EAAQD,EAAUyc,EAAYE,EAAUorD,EADxCC,EAAa,GAGjB,IAAK/nE,EAAI,EAAGD,EAAM0lE,EAAYjoE,OAAQwC,EAAID,EAAKC,IAC3Cwc,EAAQipD,EAAYzlE,GAAK0lE,EACzBhpD,EAAM1c,EAAID,EAAM,EAAI0lE,EAAYzlE,EAAI,GAAK0lE,EAAMjiE,EAAKjG,QACpDsqE,EAAOtC,OAAOO,WAAWtiE,EAAM+Y,EAAOE,EAAKgpD,GAAK,MACnCoC,EAAK94B,OAAM84B,EAAKvC,SAAU,GACvCwC,EAAMnqE,KAAK4nE,OAAOwC,YAAYF,IAMlC,IAHAC,EAAME,KAAKzC,OAAO0C,UAGbloE,EAAI,EAAGA,EAAI+nE,EAAMvqE,OAAQwC,IAC1BwlE,OAAO2C,cAAcJ,EAAM/nE,GAAI8lE,GAC/BA,EAAYN,OAAO0B,aAAapB,EAAWA,EAAU92B,MAGzD,OAAO82B,C,CAIXvtE,gBAAgB4M,EAAQC,GACpB,OAAOD,EAAE1E,EAAI2E,EAAE3E,C,CAKnBlI,qBAAqB6vE,EAAWtC,GAE5B,GADAA,EAAYN,OAAO6C,eAAeD,EAAMtC,GACzB,CACX,IAAI1gE,EAASogE,OAAOqC,aAAa/B,EAAWsC,GAC5C5C,OAAO0B,aAAa9hE,EAAGA,EAAE4pC,KAC5B,C,CAKLz2C,sBAAsB6vE,EAAWtC,GAC7B,IAIItjD,EAJA+tB,EAASu1B,EACTwC,EAAUF,EAAK3nE,EACf8nE,EAAUH,EAAK1nE,EACf8nE,GAAWC,IAKf,EAAG,CACC,GAAIF,GAAMh4B,EAAE7vC,GAAK6nE,GAAMh4B,EAAEvB,KAAKtuC,GAAK6vC,EAAEvB,KAAKtuC,IAAM6vC,EAAE7vC,EAAG,CACjD,IAAID,EAAS8vC,EAAE9vC,GAAK8nE,EAAKh4B,EAAE7vC,IAAM6vC,EAAEvB,KAAKvuC,EAAI8vC,EAAE9vC,IAAM8vC,EAAEvB,KAAKtuC,EAAI6vC,EAAE7vC,GACjE,GAAID,GAAK6nE,GAAM7nE,EAAI+nE,EAAI,CAEnB,GADAA,EAAK/nE,EACDA,IAAM6nE,EAAI,CACV,GAAIC,IAAOh4B,EAAE7vC,EAAG,OAAO6vC,EACvB,GAAIg4B,IAAOh4B,EAAEvB,KAAKtuC,EAAG,OAAO6vC,EAAEvB,IACjC,CACDxsB,EAAI+tB,EAAE9vC,EAAI8vC,EAAEvB,KAAKvuC,EAAI8vC,EAAIA,EAAEvB,IAC9B,CACJ,CACDuB,EAAIA,EAAEvB,I,OACDuB,IAAMu1B,GAEf,IAAKtjD,EAAG,OAAO,KAEf,GAAI8lD,IAAOE,EAAI,OAAOhmD,EAAE4iD,KAMxB,IAII3+D,EAJAogE,EAAYrkD,EACZkmD,EAAUlmD,EAAE/hB,EACZkoE,EAAUnmD,EAAE9hB,EACZkoE,EAAcH,IAKlB,IAFAl4B,EAAI/tB,EAAEwsB,KAECuB,IAAMs2B,GACLyB,GAAM/3B,EAAE9vC,GAAK8vC,EAAE9vC,GAAKioE,GAAMJ,IAAO/3B,EAAE9vC,GACnC+kE,OAAO2B,gBAAgBoB,EAAKI,EAAKL,EAAKE,EAAID,EAAIG,EAAIC,EAAIJ,EAAKI,EAAKH,EAAKF,EAAIC,EAAIh4B,EAAE9vC,EAAG8vC,EAAE7vC,MAEpF+F,EAAM3H,KAAKglE,IAAIyE,EAAKh4B,EAAE7vC,IAAM4nE,EAAK/3B,EAAE9vC,IAExBmoE,GAAWniE,IAAQmiE,GAAUr4B,EAAE9vC,EAAI+hB,EAAE/hB,IAAO+kE,OAAOmC,cAAcp3B,EAAG63B,KAC3E5lD,EAAI+tB,EACJq4B,EAASniE,GAIjB8pC,EAAIA,EAAEvB,KAGV,OAAOxsB,C,CAKXjqB,kBAAkBikB,EAAYzR,EAAWE,EAAW06D,GAChD,IAAIp1B,EAAS/zB,EACb,GACgB,OAAR+zB,EAAE7O,IAAY6O,EAAE7O,EAAI8jC,OAAOiC,OAAOl3B,EAAE9vC,EAAG8vC,EAAE7vC,EAAGqK,EAAME,EAAM06D,IAC5Dp1B,EAAE80B,MAAQ90B,EAAE60B,KACZ70B,EAAE+0B,MAAQ/0B,EAAEvB,KACZuB,EAAIA,EAAEvB,WACDuB,IAAM/zB,GAEf+zB,EAAE80B,MAAMC,MAAQ,KAChB/0B,EAAE80B,MAAQ,KAEVG,OAAOqD,WAAWt4B,E,CAMtBh4C,kBAAkBuvE,GACd,IAAI9nE,EAAQuwC,EAAQu4B,EAAQ1mD,EAAQ2mD,EAAWC,EAAgBC,EAAYC,EACvEC,EAAc,EAElB,EAAG,CAMC,IALA54B,EAAIu3B,EACJA,EAAO,KACPiB,EAAO,KACPC,EAAY,EAELz4B,GAAG,CAIN,IAHAy4B,IACAF,EAAIv4B,EACJ04B,EAAQ,EACHjpE,EAAI,EAAGA,EAAImpE,IACZF,IACAH,EAAIA,EAAExD,OAFctlE,KAOxB,IAFAkpE,EAAQC,EAEDF,EAAQ,GAAMC,EAAQ,GAAKJ,GAEhB,IAAVG,IAA0B,IAAVC,IAAgBJ,GAAKv4B,EAAE7O,GAAKonC,EAAEpnC,IAC9Ctf,EAAImuB,EACJA,EAAIA,EAAE+0B,MACN2D,MAEA7mD,EAAI0mD,EACJA,EAAIA,EAAExD,MACN4D,KAGAH,EAAMA,EAAKzD,MAAQljD,EAClB0lD,EAAO1lD,EAEZA,EAAEijD,MAAQ0D,EACVA,EAAO3mD,EAGXmuB,EAAIu4B,CACP,CAEDC,EAAKzD,MAAQ,KACb6D,GAAU,C,OAELH,EAAY,GAErB,OAAOlB,C,CAKXvvE,cAAckI,EAAQC,EAAQqK,EAAWE,EAAW06D,GAehD,OAPAllE,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAHrBA,EAAI,OAASA,EAAIsK,GAAQ46D,GAGfllE,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKfC,EAAqB,aADrBA,EAAqB,YADrBA,EAAqB,YADrBA,EAAqB,WAPrBA,EAAI,OAASA,EAAIuK,GAAQ06D,GAOfjlE,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEE,C,CAKrBnI,mBAAmBikB,GACf,IAAI+zB,EAAS/zB,EACT4sD,EAAgB5sD,EACpB,GACQ+zB,EAAE9vC,EAAI2oE,EAAS3oE,IAAG2oE,EAAW74B,GACjCA,EAAIA,EAAEvB,WACDuB,IAAM/zB,GAEf,OAAO4sD,C,CAIX7wE,uBAAuB8wE,EAASC,EAASC,EAASC,EAASC,EAASC,EAASxR,EAASC,GAClF,OAAQsR,EAAKvR,IAAOoR,EAAKnR,IAAOkR,EAAKnR,IAAOwR,EAAKvR,IAAO,IACnDkR,EAAKnR,IAAOsR,EAAKrR,IAAOoR,EAAKrR,IAAOoR,EAAKnR,IAAO,IAChDoR,EAAKrR,IAAOwR,EAAKvR,IAAOsR,EAAKvR,IAAOsR,EAAKrR,IAAO,C,CAKzD5/D,uBAAuB4M,EAAQC,GAC3B,OAAOD,EAAE6pC,KAAKhvC,IAAMoF,EAAEpF,GAAKmF,EAAEigE,KAAKplE,IAAMoF,EAAEpF,IAAMwlE,OAAOmE,kBAAkBxkE,EAAGC,IACxEogE,OAAOmC,cAAcxiE,EAAGC,IAAMogE,OAAOmC,cAAcviE,EAAGD,IAAMqgE,OAAOoE,aAAazkE,EAAGC,E,CAI3F7M,YAAYg4C,EAAQu4B,EAAQl9C,GACxB,OAAQk9C,EAAEpoE,EAAI6vC,EAAE7vC,IAAMkrB,EAAEnrB,EAAIqoE,EAAEroE,IAAMqoE,EAAEroE,EAAI8vC,EAAE9vC,IAAMmrB,EAAElrB,EAAIooE,EAAEpoE,E,CAI9DnI,cAAcmH,EAASC,GACnB,OAAOD,EAAGe,IAAMd,EAAGc,GAAKf,EAAGgB,IAAMf,EAAGe,C,CAKxCnI,kBAAkBmH,EAASmqE,EAASlqE,EAASmqE,GACzC,SAAKtE,OAAO/6D,OAAO/K,EAAImqE,IAAOrE,OAAO/6D,OAAO9K,EAAImqE,IAC3CtE,OAAO/6D,OAAO/K,EAAIoqE,IAAOtE,OAAO/6D,OAAO9K,EAAIkqE,KACzCrE,OAAOiB,KAAK/mE,EAAImqE,EAAIlqE,GAAM,GAAM6lE,OAAOiB,KAAK/mE,EAAImqE,EAAIC,GAAM,GAC7DtE,OAAOiB,KAAK9mE,EAAImqE,EAAIpqE,GAAM,GAAM8lE,OAAOiB,KAAK9mE,EAAImqE,EAAID,GAAM,C,CAKlEtxE,yBAAyB4M,EAAQC,GAC7B,IAAImrC,EAASprC,EACb,EAAG,CACC,GAAIorC,EAAEvwC,IAAMmF,EAAEnF,GAAKuwC,EAAEvB,KAAKhvC,IAAMmF,EAAEnF,GAAKuwC,EAAEvwC,IAAMoF,EAAEpF,GAAKuwC,EAAEvB,KAAKhvC,IAAMoF,EAAEpF,GACjEwlE,OAAOt7D,WAAWqmC,EAAGA,EAAEvB,KAAM7pC,EAAGC,GAAI,OAAO,EAC/CmrC,EAAIA,EAAEvB,I,OACDuB,IAAMprC,GAEf,OAAO,C,CAKX5M,qBAAqB4M,EAAQC,GACzB,OAAOogE,OAAOiB,KAAKthE,EAAEigE,KAAMjgE,EAAGA,EAAE6pC,MAAQ,EACpCw2B,OAAOiB,KAAKthE,EAAGC,EAAGD,EAAE6pC,OAAS,GAAKw2B,OAAOiB,KAAKthE,EAAGA,EAAEigE,KAAMhgE,IAAM,EAC/DogE,OAAOiB,KAAKthE,EAAGC,EAAGD,EAAEigE,MAAQ,GAAKI,OAAOiB,KAAKthE,EAAGA,EAAE6pC,KAAM5pC,GAAK,C,CAKrE7M,oBAAoB4M,EAAQC,GACxB,IAAImrC,EAASprC,EACT4kE,GAAc,EACd7R,GAAW/yD,EAAE1E,EAAI2E,EAAE3E,GAAK,EACxB03D,GAAWhzD,EAAEzE,EAAI0E,EAAE1E,GAAK,EAC5B,GACU6vC,EAAE7vC,EAAIy3D,GAAS5nB,EAAEvB,KAAKtuC,EAAIy3D,GAAQ5nB,EAAEvB,KAAKtuC,IAAM6vC,EAAE7vC,GAClDw3D,GAAM3nB,EAAEvB,KAAKvuC,EAAI8vC,EAAE9vC,IAAM03D,EAAK5nB,EAAE7vC,IAAM6vC,EAAEvB,KAAKtuC,EAAI6vC,EAAE7vC,GAAK6vC,EAAE9vC,IAC3DspE,GAAUA,GACdx5B,EAAIA,EAAEvB,WACDuB,IAAMprC,GAEf,OAAO4kE,C,CAMXxxE,oBAAoB4M,EAAQC,GACxB,IAAI4B,EAAU,IAAIm+D,WAAWhgE,EAAEnF,EAAGmF,EAAE1E,EAAG0E,EAAEzE,GACrCuG,EAAU,IAAIk+D,WAAW//D,EAAEpF,EAAGoF,EAAE3E,EAAG2E,EAAE1E,GACrCspE,EAAU7kE,EAAE6pC,KACZi7B,EAAU7kE,EAAEggE,KAchB,OAZAjgE,EAAE6pC,KAAO5pC,EACTA,EAAEggE,KAAOjgE,EAET6B,EAAGgoC,KAAOg7B,EACVA,EAAG5E,KAAOp+D,EAEVC,EAAG+nC,KAAOhoC,EACVA,EAAGo+D,KAAOn+D,EAEVgjE,EAAGj7B,KAAO/nC,EACVA,EAAGm+D,KAAO6E,EAEHhjE,C,CAIX1O,kBAAkByH,EAAQS,EAAQC,EAAQ0lE,GACtC,IAAI71B,EAAS,IAAI40B,WAAWnlE,EAAGS,EAAGC,GAYlC,OAVK0lE,GAKD71B,EAAEvB,KAAOo3B,EAAKp3B,KACduB,EAAE60B,KAAOgB,EACTA,EAAKp3B,KAAKo2B,KAAO70B,EACjB61B,EAAKp3B,KAAOuB,IAPZA,EAAE60B,KAAO70B,EACTA,EAAEvB,KAAOuB,GAQNA,C,CAGXh4C,kBAAkBg4C,GACdA,EAAEvB,KAAKo2B,KAAO70B,EAAE60B,KAChB70B,EAAE60B,KAAKp2B,KAAOuB,EAAEvB,KAEZuB,EAAE80B,QAAO90B,EAAE80B,MAAMC,MAAQ/0B,EAAE+0B,OAC3B/0B,EAAE+0B,QAAO/0B,EAAE+0B,MAAMD,MAAQ90B,EAAE80B,M,CA+BnC9sE,kBAAkBkL,EAAW+Y,EAAYE,EAAUgpD,GAE/C,IADA,IAAIwE,EAAW,EACNlqE,EAASwc,EAAOvb,EAASyb,EAAMgpD,EAAK1lE,EAAI0c,EAAK1c,GAAK0lE,EACvDwE,IAAQzmE,EAAKxC,GAAKwC,EAAKzD,KAAOyD,EAAKzD,EAAI,GAAKyD,EAAKxC,EAAI,IACrDA,EAAIjB,EAER,OAAOkqE,C,EX7lBF5H,yDAeV,KAbCA,EAAA,mBAEAA,IAAA,iBAEAA,IAAA,uBAEAA,IAAA,yBAEAA,IAAA,yBAEAA,IAAA,iCAEAA,IAAA,6BYNE,MAAO6H,eAAe/kB,WAKxBtnD,YAAYunD,EAAqBD,WAAWE,SACxC1xC,MAAMyxC,E,CAMV/V,eACI,GAAqB,IAAjB/tC,KAAKskD,UAAkBtkD,KAAKikD,OAAyB,GAAhBjkD,KAAKskD,QAAc,OAAO,EAEnE,IAAIukB,EAAO7oE,KAAKsqC,YAAYoB,YAC5B,GAAIm9B,EAAM,CACN,IAAI9pE,EAAc8pE,EAAK/vD,aACvB,IAAK/Z,EACD,OAAO,EACXiB,KAAKsqC,YAAY/jB,QAAUxnB,CAC9B,CAiBD,OAfAiB,KAAKikD,MAAMwM,UAIXzwD,KAAKsqC,YAAYD,SAEb9X,UAAU0B,sBAAwBj0B,KAAKkkD,WACvC70B,mBAAmB6B,UAAS,GAC5BlxB,KAAKkkD,WACL3xB,UAAU0B,oBAAsBj0B,KAAKkkD,UAEzCp6C,OAAOg/D,kBAAkBC,mBAAmBhI,eAAaiI,UAAWhpE,KAAKskD,QAASpO,cAAYqV,OAAQvrD,KAAKqkD,WAIpG,C,CAMXnW,gBACQ2V,WAAWW,YAAcxkD,QAGtBA,KAAK6tC,KAAQ,IAChB+6B,OAAOz6B,KAAKy6B,OAAOK,aAAejpE,KAClCA,KAAKsqC,YAAY4C,UACjBltC,KAAKsqC,YAAc,KAGnBtqC,KAAKikD,MAAQ,KACbjkD,KAAKokD,UAAYpkD,KAAKokD,QAAQlW,gBAAiBluC,KAAKokD,QAAU,M,CAOtEptD,cAAcwwB,EAAkB0hD,EAAcC,GAC1C,IAAIrzC,EAAI8yC,OAAOK,UAAYL,OAAOz6B,OAAOy6B,OAAOK,WAAa,IAAIL,OACjE9yC,EAAE+X,KAAO,EACT/X,EAAEmuB,MAAQilB,EACVpzC,EAAEgY,KAAKnjC,QACPmrB,EAAEuuB,UAAY6kB,EAAKvZ,SAAW92D,MAAMK,WACpC48B,EAAEwuB,QAAU,EACZ,IAAI8kB,EAAY5hD,EAAQ6hD,YACxBvzC,EAAEouB,SAAW18B,EAAQwT,SAAWzI,UAAUW,UAAUk2C,GAAa72C,UAAUC,IAAI42C,GAC/EtzC,EAAEwU,YAAc6+B,EAChBrzC,EAAEwU,YAAYrf,SAASzD,EAAQ8hD,WAC/B,IAAIt8B,EAAiBxlB,EAAQ8hD,UAAUt8B,QAEvC,OADAA,GAAWlX,EAAEwU,YAAYyC,WAAWC,GAC7BlX,C,CAYX9+B,mBAAmByjC,EAAcyuC,EAAcK,EAAgBJ,GAC3D,IAAIrzC,EAAI8yC,OAAOK,UAAYL,OAAOz6B,OAAOy6B,OAAOK,WAAU,IAAQL,OAClE9yC,EAAEmuB,MAAQilB,EACVpzC,EAAEwuB,QAAUilB,EACZzzC,EAAEuuB,UAA4B,EAAhB6kB,EAAKvZ,SACnB75B,EAAE+X,KAAO,EACT/X,EAAEwU,YAAc6+B,EAChBrzC,EAAEwU,YAAYrf,SAASwP,EAAI6uC,WAC3B,IAAIF,EAAY3uC,EAAI4uC,YAGpB,OAFAvzC,EAAEgY,KAAKT,YAAc+7B,EACrBtzC,EAAEouB,SAAWzpB,EAAIO,SAAWzI,UAAUW,UAAUk2C,GAAa72C,UAAUC,IAAI42C,GACpEtzC,C,EAhGM8yC,OAASK,UAAW,EACpBL,OAAIz6B,KAAa,GCLhC,MAAOq7B,qBAAqB3lB,WAqB9BtnD,cACI8V,MAAMwxC,WAAWE,SApBrB/jD,KAAAgzC,QAAkB,IAAIrvC,OAGtB3D,KAAAypE,SAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAkB5DzpE,KAAKsqC,YAAc,IAAIW,QAAQ,EAAG,E,CAdtCj0C,cAAcuwB,EAAa6jB,EAAe4B,GACtC,IAAIlX,EAAO0zC,aAAar7B,KAAa70B,QAAkCkwD,aAAar7B,OAAQq7B,aAAar7B,KAAa70B,SAA1E,IAASkwD,aACrD1zC,EAAE+jC,KAAOtyC,EACTuO,EAAE+X,KAAO,EACT/X,EAAEwuB,QAAU,EACZ,IAAIlpC,EAAa0a,EAAEwU,YAInB,OAHAlvB,EAAEgwB,MAAQA,EACVhwB,EAAE+vB,QAAQlgB,SAAS,GACnB+hB,GAAWA,EAAQ/wC,QAAUmf,EAAE2xB,WAAWC,GACnClX,C,CAWXiY,eAEI,IAAI27B,EAAWtgD,cAAcO,WACzBggD,EAAavgD,cAAcY,aAC3B4/C,EAAYxgD,cAAca,YAE1B4/C,EAAoBzgD,cAAc0gD,aAClCC,EAAwB3gD,cAAc4gD,mBAEtC5uD,EAAIpb,KAAKsqC,YACTrpB,EAAIjhB,KAAKgzC,QACTzpB,EAAKvpB,KAAKypE,SACVQ,EAAOtmE,OAAOkE,KAwBlB,OAvBAlE,OAAOumE,IAAIjpD,EAAG2oD,EAAWK,GACzB1gD,EAAG,GAAK0gD,EAAKrmE,EACb2lB,EAAG,GAAK0gD,EAAKpmE,EACb0lB,EAAG,GAAK0gD,EAAKnmE,EACbylB,EAAG,GAAK0gD,EAAKlmE,EACbwlB,EAAG,IAAM0gD,EAAKjmE,GACdulB,EAAG,IAAM0gD,EAAKhmE,GAEdmlB,cAAca,YAAcggD,EAAKziE,QACjC4hB,cAAcY,aAAeT,EAC7BH,cAAcO,WAAaP,cAAcO,WAAavO,EAAEgwB,MACpDhwB,EAAE4xB,SAAW5xB,EAAE4xB,QAAQ/wC,SACvBmtB,cAAc0gD,aAAe1uD,EAAE4xB,QAC/B5jB,cAAc4gD,mBAAqB5uD,EAAE+vB,SAExCnrC,KAAK65D,KAA0B,cAChCzwC,cAAcO,WAAa+/C,EAC3BtgD,cAAcY,aAAe2/C,EAC7BvgD,cAAca,YAAY9mB,UAC1BimB,cAAca,YAAc2/C,EAE5BxgD,cAAc0gD,aAAeD,EAC7BzgD,cAAc4gD,mBAAqBD,EAC5B,C,CAKX77B,gBACI,KAAOluC,KAAK6tC,KAAQ,EAAG,CACnB,IAAI+xB,EAAQ4J,aAAar7B,KAEzBnuC,KAAKikD,MAAQ,KACb2b,EAAOA,EAActmD,WAAatZ,IACrC,C,CAKLiuC,gBACI,OAAO4V,WAAWY,W,EA3Ef+kB,aAAIr7B,KAAmB,GA+E/Bq7B,aAAar7B,KAAa70B,QAAU,E,MChF1B6wD,aAeT5tE,cAPAyD,KAASopE,UAAW,EAEpBppE,KAAI6tC,KAAW,EAEf7tC,KAAA8tC,KAAkB,IAAIX,S,CAOtBY,eACI/tC,KAAKikD,MAAMwM,UAEX,IAAIpmD,EAASrK,KAAKoqE,MASlB,OARI//D,IACArK,KAAKsqC,YAAY/jB,QAAUlc,EAAOyO,aAClC9Y,KAAKsqC,YAAYD,SACjBrqC,KAAKqqE,QAGLvgE,OAAOg/D,kBAAkBC,mBAAmBhI,eAAaiI,UAAWhpE,KAAKskD,QAASpO,cAAYqV,OAAQvrD,KAAKqkD,YAExG,C,CAGXgmB,QACQ93C,UAAU0B,sBAAwB1B,UAAUC,IAAIxyB,KAAKopE,aACrD/5C,mBAAmB6B,UAAS,GAC5BqB,UAAUC,IAAIxyB,KAAKopE,aACnB72C,UAAU0B,oBAAsB1B,UAAUC,IAAIxyB,KAAKopE,W,CAI3Dn7B,gBACI,OAAO,C,CAGXC,gBACI,KAAOluC,KAAK6tC,KAAQ,EAAG,CACnB,IAAI7wC,EAAYmtE,aAAah8B,KAC7BnxC,EAAKA,EAAKsc,WAAatZ,IAC1B,C,CAGLhJ,cAAcwwB,EAAkB0hD,EAAcC,EAAan7C,GACvD,IAAI8H,EAAmBq0C,aAAah8B,KAAa70B,QAAU6wD,aAAah8B,OAAQg8B,aAAah8B,KAAa70B,SAAW,IAAI6wD,aAWzH,GAVAr0C,EAAEmuB,MAAQilB,EACVpzC,EAAEs0C,MAAQp8C,EACV8H,EAAEuuB,UAAY6kB,EAAKvZ,SAAW92D,MAAMK,WACpC48B,EAAE+X,KAAO,EACT/X,EAAEgY,KAAKnjC,QACPmrB,EAAEwuB,QAAU,EACZxuB,EAAEszC,UAAY5hD,EAAQ6hD,YACtBvzC,EAAEgY,KAAKT,YAAcvX,EAAEszC,UACvBtzC,EAAEwU,YAAc6+B,EAChBrzC,EAAEwU,YAAYrf,SAASzD,EAAQ8hD,WAC3B9hD,EAAQ8iD,YAAa,CACrB,IAAIC,EAAkB/iD,EAAQ8iD,YAC9BnB,EAAGh+B,QAAQroC,IAAIynE,EAAGh/D,MACN49D,EAAIqB,SAAWD,EAAG53B,KAClBw2B,EAAIsB,WAAaF,EAAG33B,MACnC,CACD,OAAO9c,C,EArDJq0C,aAAIh8B,KAAmB,GA0D7Bg8B,aAAah8B,KAAa70B,QAAU,EC3EnC,MAAOoxD,sBAAsB7mB,WAG/BtnD,YAAYunD,EAAqBD,WAAWE,SACxC1xC,MAAMyxC,E,CAKV5V,kBACWluC,KAAK6tC,KAAQ,IAChB68B,cAAcv8B,KAAKu8B,cAAczB,aAAejpE,KAChDA,KAAKsqC,YAAY4C,UAEjBltC,KAAKikD,MAAQ,KACbjkD,KAAKokD,UAAYpkD,KAAKokD,QAAQlW,gBAAiBluC,KAAKokD,QAAU,M,CAItErW,eACI,GAAqB,IAAjB/tC,KAAKskD,QACL,OAAO,EAEX,IAAIvsB,EAAM/3B,KAAKsqC,YAAYoB,YAC3B,GAAI3T,EAAK,CACL,IAAIh5B,EAAcg5B,EAAMA,EAAIjf,aAAe,KAC3C,IAAK/Z,EAAQ,OAAO,CACvB,CAEDiB,KAAKikD,MAAMwM,UACXzwD,KAAKsqC,YAAYiC,mBAEjB,IAAIo+B,EAA4B9mB,WAAWgC,UACvC+kB,EAAuB/mB,WAAWgC,UAAY/X,KAsBlD,OArB8B,IAA1B9tC,KAAK8tC,KAAKT,aAAsBrtC,KAAK8tC,KAAKV,aAAew9B,EAAOx9B,YAAcptC,KAAK8tC,KAAKT,cAAgBu9B,EAAOv9B,aAAgBlkB,WAAWwF,cAC7Hk1B,WAAWgC,UAAW7B,YAAchkD,KAAKgkD,YACtD2mB,EAAWrgC,YAAYa,QAAQ/V,SAAWp1B,KAAKsqC,YAAYa,QAAQ/V,QACF,IAAhEp1B,KAAKsqC,YAAYa,QAAQ/V,OAASa,gBAAgBmB,WAE1CjO,WAAWwF,aAAcyb,gBAAgBrrC,IAG9CwzB,UAAU0B,sBAAwBj0B,KAAKkkD,WACvC70B,mBAAmB6B,UAAS,GAC5BlxB,KAAKkkD,WACL3xB,UAAU0B,oBAAsBj0B,KAAKkkD,UAEzClkD,KAAKsqC,YAAY/jB,QAAUxnB,EAC3BiB,KAAKsqC,YAAYD,UAGrBvgC,OAAOg/D,kBAAkBC,mBAAmBhI,eAAaiI,UAAWhpE,KAAKskD,QAASpO,cAAYqV,OAAQvrD,KAAKqkD,WAIpG,C,CAMXrtD,cAAcwwB,EAAkB0hD,EAAcC,GAC1C,IAAIrzC,EAAI40C,cAAczB,UAAYyB,cAAcv8B,OAAOu8B,cAAczB,WAAa,IAAIyB,cAAc7mB,WAAWyB,cAC/GxvB,EAAEmuB,MAAQilB,EACVpzC,EAAEgY,KAAKnjC,QACPmrB,EAAEgY,KAAKV,WAAayW,WAAW6B,gBAC/B5vB,EAAE+X,KAAO,EACT/X,EAAEuuB,UAAY6kB,EAAKvZ,SAAW92D,MAAMK,WACpC48B,EAAEwuB,QAAU,EACZ,IAAI8kB,EAAY5hD,EAAQ6hD,YAKxB,GAJAvzC,EAAEgY,KAAKT,YAAc+7B,EACrBtzC,EAAEouB,SAAW18B,EAAQwT,SAAWzI,UAAUW,UAAUk2C,GAAa72C,UAAUC,IAAI42C,GAC/EtzC,EAAEwU,YAAc6+B,EAEZ3hD,EAAQ8iD,YAAa,CACrB,IAAIC,EAAkB/iD,EAAQ8iD,YAC9BnB,EAAGh+B,QAAQroC,IAAIynE,EAAGh/D,MACN49D,EAAIqB,SAAWD,EAAG53B,KAClBw2B,EAAIsB,WAAaF,EAAG33B,MACnC,CACD,OAAO9c,C,EA/EI40C,cAASzB,UAAW,EACpByB,cAAIv8B,KAAoB,G,MCL9B08B,gBAeTtuE,cAXQyD,KAAK8qE,MAAU,GACf9qE,KAAM+qE,OAAW,EAGjB/qE,KAAOgrE,SAAY,EACnBhrE,KAAAirE,YAAsB,IAAItnE,OAElC3D,KAAOm0D,SAAY,C,CAQnBxpD,QACI3K,KAAK6oE,KAAO,KACZ7oE,KAAKkrE,QAAU,EACflrE,KAAK+qE,OAAS,EACd/qE,KAAKm0D,SAAU,EACfn0D,KAAKsqE,YAAc,I,CAGvBnnE,UACInD,KAAK2K,QACL3K,KAAK8qE,MAAM7uE,OAAS,EACpB+D,KAAK8qE,MAAQ,I,CAGjBhoE,IAAI23B,EAAc1C,EAAcozC,EAAe3tD,EAAYga,EAAuB35B,GAC1EmC,KAAK+qE,OAAS,IAAM/qE,KAAK6oE,MAAQ9wC,GAAO/3B,KAAKkrE,QAAUC,GACtDnrE,KAAKgrE,SAAW,GAAKhrE,KAAKgrE,SAAWvwC,EAAI4lC,cAC1CrgE,KAAK6wC,OAAOpW,GAGhBz6B,KAAKgrE,QAAUvwC,EAAI4lC,YACnB5lC,EAAIw5B,kBAAkBtsD,OAAO3H,KAAKirE,aAClCjrE,KAAK6oE,KAAO9wC,EACZ/3B,KAAKkrE,OAASC,EACdnrE,KAAKsqE,YAAc7vC,EAAI6vC,YAEvBtqE,KAAK8qE,MAAM9qE,KAAK+qE,QAAUvtD,EAC1Bxd,KAAK8qE,MAAM9qE,KAAK+qE,OAAS,GAAKvzC,EAC9Bx3B,KAAK8qE,MAAM9qE,KAAK+qE,OAAS,GAAKltE,EAC9BmC,KAAK+qE,QAAU,C,CAGnBK,SACI,OAAkC,GAA9BP,gBAAgBQ,WACT,IAAIh6D,MAAM,GACdw5D,gBAAgBS,YAAYT,gBAAgBQ,W,CAGvDvzB,OAAO75C,EAAgBw8B,GACfx8B,IAAU+B,KAAKm0D,UAEnBn0D,KAAKm0D,QAAUl2D,EACf+B,KAAKm0D,SAAWn0D,KAAK6wC,OAAOpW,G,CAGhCoW,OAAOpW,GACH,IAAIj1B,EAAYxF,KAAK+qE,OACrB,GAAKvlE,EAAL,CAGA,IAAIy+C,EAAyBxpB,EAAIwpB,MAE7BsnB,EAA0B9wC,EAAI6vC,YAClC7vC,EAAI6vC,YAActqE,KAAKsqE,YACvB,IAAIz5B,EAAwB65B,cAAchjE,OAAO+yB,EAAKwpB,EAAOhZ,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IACvGuS,EAAI45B,SAAS55B,EAAI45B,SAAS/6C,WAAamhB,EAAIi6B,WAAa7jB,EACxDA,EAAOvG,YAAYoB,YAAc1rC,KAAK6oE,KACtCh4B,EAAO/C,KAAKR,MAAQttC,KAAKkrE,OACzBzwC,EAAI6vC,YAAciB,EAClB9wC,EAAI+wC,cAAc36B,EAAQ7wC,KAAKirE,aAC/Bp6B,EAAOmT,WAAahkD,KAAKgrE,QAEzB,IAAK,IAAIvsE,EAAY,EAAGA,EAAI+G,EAAG/G,GAAK,EAChCwlD,EAAMoN,QAAQrxD,KAAK8qE,MAAMrsE,GAAIuB,KAAK8qE,MAAMrsE,EAAI,GAAIuB,KAAK8qE,MAAMrsE,EAAI,IAAI,GACnEosE,gBAAgBS,UAAUT,gBAAgBQ,cAAgBrrE,KAAK8qE,MAAMrsE,GAGzE+G,GAAK,EACLqrC,EAAOyT,SAAe,EAAJ9+C,EAClBy+C,EAAM0L,UAAgB,EAAJnqD,EAClBy+C,EAAMyL,SAAe,EAAJlqD,EACjBi1B,EAAIgxC,YAAcjmE,EAClBxF,KAAK+qE,OAAS,EAEVlf,WAAW9J,UAAY,KAAO,IAC9B/hD,KAAK8qE,MAAM7uE,OAAS,EA3BpB,C,EAlEO4uE,gBAASS,UAAU,GACnBT,gBAAUQ,WAAW,E,MCZ3BK,UAYTnvE,YAAY8L,EAAgB,EAAGC,EAAiB,EAAG1H,EAAa,GAXhEZ,KAAO2rE,QAAW,EACV3rE,KAAMoV,OAAW,EACjBpV,KAAOqV,QAAW,EAClBrV,KAAS4rE,UAAW,EACpB5rE,KAAQ6rE,SAAe,KACvB7rE,KAAM8rE,OAAe,KAC7B9rE,KAAK+rE,MAAW,EAMZ/rE,KAAK8rE,OAAS,KACd9rE,KAAK6rE,SAAW,KAChB7rE,KAAK2rE,QAAU/qE,EACfZ,KAAKmgE,MAAM93D,EAAOC,E,CAItB0jE,QAAQzgE,EAAclD,EAAeC,EAAgB2jE,GAEjD,QAAKjsE,KAAKksE,KAAK7jE,EAAOC,EAAQ2jE,KAG9BjsE,KAAKmsE,MAAMF,EAAG/sE,EAAG+sE,EAAG9sE,EAAGkJ,EAAOC,EAAQiD,GACtCvL,KAAK4rE,aAEE,E,CAIHQ,WACJpsE,KAAK8rE,OAAS,KACd9rE,KAAK6rE,SAAW,I,CAIZ1L,MAAM93D,EAAeC,GAIzB,OAHAtI,KAAKoV,OAAS/M,EACdrI,KAAKqV,QAAU/M,EACftI,KAAKosE,WACc,GAAfpsE,KAAKoV,SACTpV,KAAK8rE,OAAS,IAAItyD,WAAWxZ,KAAKoV,OAASpV,KAAKqV,QAAU,GAC1DrV,KAAK6rE,SAAW,IAAIryD,WAAWxZ,KAAKqV,SACpCrV,KAAK+rE,MAAQ,EACb/rE,KAAKqsE,UACE,E,CAIHH,KAAK7jE,EAAeC,EAAgB2jE,GACxC,GAAI5jE,EAAQrI,KAAKoV,QAAU9M,EAAStI,KAAKqV,QACrC,OAAO,EAYX,IATA,IAAIi3D,GAAc,EACdC,GAAc,EAEdC,EAAiBxsE,KAAKoV,OACtBq3D,EAAkBzsE,KAAKqV,QAEvBq3D,EAAuB1sE,KAAK8rE,OAGvB3sE,EAAY,EAAGA,EAAIstE,EAASttE,IAEjC,KAAIa,KAAK6rE,SAAS1sE,GAAKkJ,GACvB,IAAK,IAAInJ,EAAY,EAAGA,EAAIstE,GAAS,CAEjC,IAAIG,EAAgC,GAAlBxtE,EAAIqtE,EAASttE,GAE/B,GAAoB,GAAhBwtE,EAASC,IAAYD,EAASC,EAAK,GAAKtkE,GAASqkE,EAASC,EAAK,GAAKrkE,EACpEpJ,GAAKwtE,EAASC,EAAK,OADvB,CAIAL,EAAKptE,EACLqtE,EAAKptE,EAEL,IAAK,IAAIytE,EAAa,EAAGA,EAAKvkE,EAAOukE,IACjC,GAAIF,EAAS,EAAIE,EAAKD,EAAK,GAAKrkE,EAAQ,CACpCgkE,GAAM,EACN,KACH,CAGL,KAAIA,EAAK,GAOT,OAFAL,EAAG/sE,EAAIotE,EACPL,EAAG9sE,EAAIotE,GACA,EANHrtE,GAAKwtE,EAASC,EAAK,EAZtB,CAmBJ,CAEL,OAAO,C,CAIHR,MAAMjtE,EAAWC,EAAW8uB,EAAWC,EAAW3iB,GAEtD,IAAIihE,EAAiBxsE,KAAKoV,OACtBy3D,EAAkB7sE,KAAKqV,QAE3BrV,KAAK8sE,OAAQ5tE,EAAI+uB,GAAMu+C,GAAWrtE,EAAI+uB,GAAM2+C,GAG5C,IAAK,IAAIE,EAAa5tE,EAAG4tE,EAAM7+C,EAAI/uB,IAAM4tE,EAAI,CACzC/sE,KAAK8sE,OAAO9sE,KAAK6rE,SAASkB,IAAO9+C,GACjCjuB,KAAK6rE,SAASkB,IAAO9+C,EACrB,IAAK,IAAI2+C,EAAa,EAAGA,EAAK3+C,EAAG2+C,IAAM,CACnC,IAAID,EAAsC,GAAxBztE,EAAI6tE,EAAKP,EAASI,GACpC5sE,KAAK8sE,OAA0B,GAAnB9sE,KAAK8rE,OAAOa,IACxB3sE,KAAK8rE,OAAOa,GAAMphE,EAClBvL,KAAK8rE,OAAOa,EAAK,GAAK1+C,EACtBjuB,KAAK8rE,OAAOa,EAAK,GAAKz+C,CACzB,CACJ,CAED,GAAIhvB,EAAI,EACJ,IAAK6tE,EAAK,EAAGA,EAAK7+C,IAAK6+C,EAAI,CAEvB,IAAIj8B,EAAY,EAChB,IAAK87B,EAAK1tE,EAAI,EAAG0tE,GAAM,GAC8B,GAA7C5sE,KAAK8rE,OAAkC,IAAzB3sE,EAAI4tE,GAAMP,EAASI,MADbA,IAAM97B,GAGlC,IAAK87B,EAAK97B,EAAG87B,EAAK,IAAKA,EACnB5sE,KAAK8rE,OAAsC,IAA7B3sE,EAAI4tE,GAAMP,EAASttE,EAAI0tE,GAAU,GAAKA,EACpD5sE,KAAK8sE,OAAOF,EAAK,EAExB,CAGL,GAAIztE,EAAI,EACJ,IAAKytE,EAAK1tE,EAAG0tE,EAAM1tE,EAAI+uB,IAAM2+C,EAAI,CAG7B,IADA97B,EAAI,EACCi8B,EAAK5tE,EAAI,EAAG4tE,GAAM,GACwB,GAAvC/sE,KAAK8rE,OAA4B,GAApBc,EAAKG,EAAKP,MADHO,EAAIj8B,KAGhC,IAAKi8B,EAAKj8B,EAAGi8B,EAAK,IAAKA,EACnB/sE,KAAK8rE,OAAkC,GAA1Bc,GAAMztE,EAAI4tE,GAAMP,GAAc,GAAKO,EAChD/sE,KAAK8sE,OAAOC,EAAK,EAExB,CAGL/sE,KAAK+rE,OAAU99C,EAAIC,GAAMluB,KAAKoV,OAASpV,KAAKqV,Q,CAGxCy3D,OAAO17D,GACA,GAAPA,GACA9Z,QAAQovB,IAAI,iB,CAKZ2lD,SACJrsE,KAAK4rE,UAAY,EACjB,IAAK,IAAIzsE,EAAY,EAAGA,EAAIa,KAAKqV,QAASlW,IACtCa,KAAK6rE,SAAS1sE,GAAKa,KAAKoV,OAE5B,IAAK,IAAI3W,EAAY,EAAGA,EAAIuB,KAAKqV,QAAS5W,IACtC,IAAK,IAAIiB,EAAY,EAAGA,EAAIM,KAAKoV,OAAQ1V,IAAK,CAC1C,IAAIitE,EAAqC,GAAvBluE,EAAIuB,KAAKoV,OAAS1V,GACpCM,KAAK8rE,OAAOa,GAAM,EAClB3sE,KAAK8rE,OAAOa,EAAK,GAAK3sE,KAAKoV,OAAS1V,EACpCM,KAAK8rE,OAAOa,EAAK,GAAK3sE,KAAKoV,OAAS3W,CACvC,C,EhBzKDuiE,6CAOX,KALGA,EAAA,mBAEAA,IAAA,iBAEAA,IAAA,uBiBKE,MAAOgM,oBAAoB76D,SAwB7B5V,YAAY0wE,EAAkBC,GAC1B76D,QAhBJrS,KAAKmtE,MAAW,EAEhBntE,KAAKotE,MAAW,EAEhBptE,KAAUqtE,WAAW,EACrBrtE,KAAKstE,MAAW,EAChBttE,KAAM63B,OAAQ,CAAEj3B,GAAI,EAAG2sE,WAAY,MACnCvtE,KAAcwtE,eAAW,EACzBxtE,KAAmBytE,oBAAW,EAC9BztE,KAAW0tE,YAAW,EACtB1tE,KAAE2tE,GAAmB,KAOjB3tE,KAAKmtE,MAAQF,GAAYW,WAAWC,WACpC7tE,KAAKotE,MAAQF,GAAYU,WAAWC,WACpC7tE,KAAK63B,OAAOj3B,GAAKZ,KAAKY,GACtBZ,KAAK2S,MAAO,EACZ3S,KAAKqkC,iBAAmBv6B,OAAOw6B,e,CAT/B7tB,sBACA,OAAQzW,KAAK63B,OAAO01C,WAAmB92D,e,CAW3C2tB,mBACI,IAAIpkC,KAAK8tE,QAAT,CAEA,IAAIC,EAAmB/tE,KAAK8tE,QAAU,IAAI3oD,UAAUnlB,KAAKmtE,MAAOntE,KAAKotE,MAAOpjE,gBAAcgN,UAAU,GAAO,GAAO,GAClH+2D,EAAMroD,cAAc,MAAM,GAAM,GAChCqoD,EAAMp7D,MAAO,EACb3S,KAAK63B,OAAO01C,WAAaQ,EAEzB/tE,KAAK8tE,QAAQ/3D,WAAajE,aAAWk8D,SACrChuE,KAAK8tE,QAAQ93D,UAAYgrD,WAASiN,MAClCjuE,KAAK8tE,QAAQ53D,UAAY8qD,WAASiN,MAG9BL,WAAWM,SACXluE,KAAKmuE,WAZL,C,CAwBRC,QAAQlsE,EAAiBhD,EAAWC,EAAWq4B,EAAY,MAEvD,GAAIo2C,WAAWS,UACX,OAAOruE,KAAKsuE,cAAcpsE,EAAMhD,EAAGC,EAAGq4B,GAE1C,IAMI+2C,EACAC,EACAp2C,EACAC,EATA6C,EAAUh5B,EAAKA,KAmBnB,OAlBIA,EAAKA,gBAAgBusE,oBACrBvzC,EAAK,IAAI1hB,WAAW0hB,EAAGvhB,UAC1B3Z,KAAK8tE,SAAW9tE,KAAKokC,mBAEtBt6B,OAAOyM,eAAeoS,wBAAwB3oB,KAAK8tE,QAAQl4D,SAAUslB,EAAI,GAAG,EAAOh8B,EAAGC,EAAG+C,EAAKmG,MAAOnG,EAAKoG,QAAQ,GAAM,GAKxHimE,EAAKrvE,EAAIc,KAAKmtE,MACdqB,EAAKrvE,EAAIa,KAAKotE,MACdh1C,GAAMl5B,EAAIgD,EAAKmG,OAASrI,KAAKmtE,MAC7B90C,GAAMl5B,EAAI+C,EAAKoG,QAAUtI,KAAKotE,OAC9B51C,EAAKA,GAAM,IAAInmB,MAAM,IAClB,GAAKk9D,EAAI/2C,EAAG,GAAKg3C,EACpBh3C,EAAG,GAAKY,EAAIZ,EAAG,GAAKg3C,EACpBh3C,EAAG,GAAKY,EAAIZ,EAAG,GAAKa,EACpBb,EAAG,GAAK+2C,EAAI/2C,EAAG,GAAKa,EACbb,C,CASX82C,cAAczU,EAAW36D,EAAWC,EAAWq4B,EAAY,MAIvD,IAAI+2C,EACAC,EACAp2C,EACAC,EAiBJ,OAvBCr4B,KAAK8tE,SAAW9tE,KAAKokC,mBAEtBt6B,OAAOyM,eAAem4D,uBAAuB1uE,KAAK8tE,QAAQl4D,SAAUikD,EAAM36D,EAAGC,GAAG,GAAM,GAKlF5D,QAAQI,SACR4yE,EAAKrvE,EAAIc,KAAKmtE,MACdqB,EAAKrvE,EAAIa,KAAKotE,MACdh1C,GAAMl5B,EAAI26D,EAAKxxD,OAASrI,KAAKmtE,MAC7B90C,GAAMl5B,EAAI06D,EAAKvxD,QAAUtI,KAAKotE,QAE9BmB,GAAMrvE,EAAI,GAAKc,KAAKmtE,MACpBqB,GAAMrvE,EAAI,GAAKa,KAAKotE,MACpBh1C,GAAMl5B,EAAI26D,EAAKxxD,MAAQ,GAAKrI,KAAKmtE,MACjC90C,GAAMl5B,EAAI06D,EAAKvxD,OAAS,GAAKtI,KAAKotE,QAEtC51C,EAAKA,GAAM,IAAInmB,MAAM,IAClB,GAAKk9D,EAAI/2C,EAAG,GAAKg3C,EACpBh3C,EAAG,GAAKY,EAAIZ,EAAG,GAAKg3C,EACpBh3C,EAAG,GAAKY,EAAIZ,EAAG,GAAKa,EACpBb,EAAG,GAAK+2C,EAAI/2C,EAAG,GAAKa,EACbb,C,CAMX22C,aACKnuE,KAAK8tE,SAAW9tE,KAAKokC,mBACtB,IAAIlJ,EAAiB,IAAI1hB,WAAWxZ,KAAKmtE,MAAQntE,KAAKotE,MAAQ,GACvDlyC,EAAKyzC,KAAK,KACjB7kE,OAAOyM,eAAe6R,oBAAoBpoB,KAAK8tE,QAAQh1D,aAAcoiB,GAAW,GAAM,E,CAG1F0zC,UAEI/zE,MAAMS,MAAMuzE,mBAEZ7uE,KAAKmD,S,CAITnM,sBAAsBi3B,EAAWC,GAE7B,OAAO,IAAI8+C,YAAY/+C,EAAGC,E,CAKpBvZ,mBAEN3U,KAAK8tE,SAAW9tE,KAAK8tE,QAAQ3qE,UAC7BnD,KAAK8tE,QAAU,I,CAOnB92E,eACI,IAAI83E,EAAgBjjB,WAAWC,SAE/B,GAD4B,IAAxBkhB,YAAY+B,UAAe/B,YAAY+B,QAAUD,GACjDA,EAAQ9B,YAAY+B,SAAWnB,WAAWoB,oBAAqB,CAC/D,IAAK,IAAIvwE,EAAY,EAAGA,EAAIuuE,YAAYiC,QAASxwE,IAAK,CAClD,IAAIuwC,EAAiBg+B,YAAYhwE,KAAKyB,GAClCqwE,EAAQ9/B,EAAEq+B,YAAcO,WAAWsB,yBACnClgC,EAAE7rC,UACF6pE,YAAYhwE,KAAKyB,GAAKuuE,YAAYhwE,KAAKgwE,YAAYiC,QAAU,GAC7DjC,YAAYiC,UACZxwE,IAEP,CACDuuE,YAAY+B,QAAUD,CACzB,C,CAGLK,UAAUxB,EAAoByB,GACtBpvE,KAAK0tE,aAAe0B,IACpBpvE,KAAKwtE,eAAiB,EACtBxtE,KAAKytE,oBAAsB,EAC3BztE,KAAK0tE,YAAc0B,GAEvB,IAAIC,EAAgBzB,WAAWC,WAAaD,WAAWC,WACnDyB,EAAiBC,UAAUC,WAAaD,UAAUC,WACtDxvE,KAAKwtE,gBAAmBG,EAAG8B,SAAW9B,EAAG+B,UAAaL,EACtDrvE,KAAKytE,qBAAwBlwE,KAAKoyE,KAAKhC,EAAG8B,SAAWF,UAAUC,YAAcjyE,KAAKoyE,KAAKhC,EAAG+B,UAAYH,UAAUC,aAAgBH,EAAQC,E,CAIxI/oD,cACA,OAAOvmB,I,CAGX8Y,aACI,OAAO9Y,KAAK8tE,QAAQh1D,Y,CAIxB82D,aAAa1wE,EAAWC,G,EAhMT6tE,YAAAhwE,KAAc,IAAIqU,MAAM,IACxB27D,YAAOiC,QAAW,EAClBjC,YAAO+B,QAAW,E,MCRxBQ,UASThzE,cARAyD,KAAQ6vE,SAAW,KACnB7vE,KAAS8vE,UAAW,KAGpB9vE,KAAOumB,QAAqB,KAC5BvmB,KAAQ+vE,SAAQ,GAIZ/vE,KAAK8vE,UAAY9vE,KAAK6vE,SAAWjC,WAAWC,WAC5C7tE,KAAKumB,QAAUymD,YAAYgD,eAAehwE,KAAK6vE,SAAU7vE,KAAK8vE,WAC1D9vE,KAAK6vE,SAAWN,UAAUC,WAAa,MACvCD,UAAUC,WAAajyE,KAAKoyE,KAAK3vE,KAAK6vE,SAAW,MAErD7vE,KAAKiwE,UAAY,IAAIvE,UAAU1rE,KAAK6vE,SAAWN,UAAUC,WAAYxvE,KAAK8vE,UAAYP,UAAUC,WAAYxvE,KAAKumB,QAAQ3lB,G,CAG7HsvE,gBAAgBnsE,G,CAWhBosE,UAAUliD,EAAWC,EAAW+9C,GAC5B,IAAImE,EAAgBpwE,KAAKiwE,UAAUjE,QAAQ,EAAGzuE,KAAKoyE,KAAK1hD,EAAIshD,UAAUC,YAAajyE,KAAKoyE,KAAKzhD,EAAIqhD,UAAUC,YAAavD,GAKxH,OAJImE,IACAnE,EAAG/sE,GAAKqwE,UAAUC,WAClBvD,EAAG9sE,GAAKowE,UAAUC,YAEfY,C,CAMPC,eACA,OAAOrwE,KAAKiwE,UAAUlE,K,CAS1B5oE,UACI,IAAK,IAAIxD,KAAKK,KAAK+vE,SAAU,CACA/vE,KAAK+vE,SAASpwE,GACpCw1D,SAAU,CAChB,CACDn1D,KAAKumB,QAAQqoD,S,CAGjB0B,iB,EApDOf,UAAUC,WAAW,G,MChBnBe,SAgCTh0E,YAAYghD,GARZv9C,KAAOwwE,QAAW,QAElBxwE,KAAKywE,MAAW,GAEhBzwE,KAAO0wE,SAAY,EAEnB1wE,KAAK2wE,OAAY,EAGb3wE,KAAK4wE,QAAQrzB,GAAQ,a,CAzBzBvmD,aAAaumD,GACT,GAAIA,IAASszB,EACT,OAAOC,EAEX,IAAIzmD,EAAIkmD,SAASzkC,OAAOyR,GAMxB,OALKlzB,IACDA,EAAIkmD,SAASzkC,OAAOyR,GAAQ,IAAIgzB,SAAShzB,IAE7CszB,EAAYtzB,EACZuzB,EAAgBzmD,EACTA,C,CAsBXumD,QAAQ3yE,GACJ+B,KAAK+wE,MAAQ9yE,EACb,IAAI+3B,EAAe/3B,EAAMM,MAAM,KAC3ByyE,EAAYh7C,EAAM/5B,OACtB,GAAI+0E,EAAI,EACK,GAALA,GACIh7C,EAAM,GAAG93B,QAAQ,MAAQ,IACzB8B,KAAKywE,MAAQ3xE,SAASk3B,EAAM,SAHxC,CAQA,IAAIi7C,GAAiB,EAErB,IAAK,IAAIxyE,EAAI,EAAGA,EAAIuyE,EAAGvyE,IACnB,GAAIu3B,EAAMv3B,GAAGP,QAAQ,MAAQ,GAAK83B,EAAMv3B,GAAGP,QAAQ,MAAQ,EAAG,CAC1D+yE,EAAQxyE,EACRuB,KAAKywE,MAAQ3xE,SAASk3B,EAAMv3B,IACxBuB,KAAKywE,OAAS,IACdn5E,QAAQmc,MAAM,oBAAsBxV,GACpC+B,KAAKywE,MAAQ,IAEjB,KACH,CAIL,IAAIS,EAAeD,EAAQ,EACvBE,EAAkBn7C,EAAMk7C,GAE5B,IADAA,IACOA,EAAOF,EAAGE,IACbC,GAAW,IAAMn7C,EAAMk7C,GAE3BlxE,KAAKwwE,QAAWW,EAAQ5yE,MAAM,KAAM,GACpCyB,KAAK0wE,QAAU16C,EAAM93B,QAAQ,WAAa,EAC1C8B,KAAK2wE,MAAQ36C,EAAM93B,QAAQ,SAAW,CAxBrC,C,EAjDUqyE,SAAMzkC,OAA6B,GA6EtD,IACIglC,ECrDCM,EDoDDP,EAAoB,G,ME1EXQ,SAWT90E,cAPAyD,KAAYsxE,aAAY,KAQf11E,OAAeC,QAAWD,OAAeqzB,YAAYC,WACtDlvB,KAAKonB,WAAa,IAAKxrB,OAAe21E,gBAEtCvxE,KAAKqI,OAAS,EACdrI,KAAKwxE,UAAY,GACjBxxE,KAAKyxE,OAAS,EACdzxE,KAAK0xE,OAAS,E,CAItBC,QAAQ5yC,GACJ/+B,KAAKkgC,KAAOnB,EACR/+B,KAAKonB,WACLpnB,KAAKonB,WAAWwqD,MAAQ7yC,EAExB/+B,KAAKqI,OAAS,EAClBrI,KAAK6xE,Y,CAGT7zE,WACI,OAAOgC,KAAKkgC,I,CAGZjkC,aACA,OAAO+D,KAAKkgC,KAAOlgC,KAAKkgC,KAAKjkC,OAAS,C,CAQ1C41E,aACI,GAAI7xE,KAAKonB,WAEL,YADApnB,KAAKonB,WAAWyqD,aAMpB,IAAIC,EAAQ9xE,KAAKwxE,UACjB,GAAIM,EAAM71E,OAAS,EAAG,CAClB,IAAK,IAAI+yC,KAAK8iC,EAAO,CACjB,IAAI/5C,EAAMiX,EAAEjX,IAEQ,GADRiX,EAAEhZ,MACJ/5B,QAAe87B,GAAOA,EAAI41C,IAChC51C,EAAI50B,SAEX,CAEDnD,KAAKwxE,UAAY,EACpB,CACDxxE,KAAKyxE,OAAS,EACdzxE,KAAK0xE,OAAS,C,CAGdK,kBACA,OAAO/xE,KAAKgyE,Y,CAGZD,gBAAY9zE,GACZ+B,KAAKgyE,aAAe/zE,EAChB+B,KAAKonB,aACLpnB,KAAKonB,WAAW2qD,YAAc9zE,E,QC5E7Bg0E,eAAb11E,cACIyD,KAAIkyE,KAAW,GAEflyE,KAAOm1D,SAAY,EACnBn1D,KAAAw3B,GAAY,IAAInmB,MAAM,GACtBrR,KAAGwd,IAAW,EAKdxd,KAAImyE,KAAW,EACfnyE,KAAIoyE,KAAW,EACfpyE,KAASqyE,UAAW,EACpBryE,KAAOsyE,SAAY,C,CACnBC,QACI,IAAIC,EAAkB3mB,WAAW9J,UAC7B/hD,KAAKqyE,WAAaG,GAClBxyE,KAAK+3B,IAAIo3C,UAAUnvE,KAAMwyE,GAE7BxyE,KAAKqyE,UAAYG,C,QCtBZC,YAAbl2E,cACIyD,KAAM0yE,OAAG,E,CACTC,SAASp1B,EAAcx/C,GAAuB,OAAO,CAAE,CAEvD0G,MAAMmuE,EAAYC,G,CAGdC,kBACA,OAAO,C,CAGPA,gBAAY7kD,G,CAUhB8kD,WAAWb,EAAc30B,EAAc2kB,EAAmB8Q,EAAgBC,EAAsBlgE,EAAsBmgE,EAAqBC,EAAoBC,EAAsBC,EAAuBzqE,EAAmB,MAC3N,OAAO,I,ECpBT,MAAO0qE,0BAA0Bb,YAWtCl2E,YAAYg3E,EAAcC,EAAcC,GAAqB,EAAMC,GAAwB,EAAMC,GAAmB,GACnHthE,QAVOrS,KAAGy6B,IAAQ,KACXz6B,KAAU4zE,WAAG,EACb5zE,KAAU6zE,WAAG,EAEb7zE,KAAO8zE,QAAG,EACV9zE,KAAO+zE,QAAG,EACV/zE,KAAag0E,eAAG,EAChBh0E,KAAWi0E,aAAG,EACdj0E,KAAgBk0E,kBAAG,EAG1Bl0E,KAAK8zE,QAAUP,EACfvzE,KAAK+zE,QAAUP,EACfxzE,KAAKg0E,cAAgBP,EACrBzzE,KAAKk0E,iBAAmBR,EACxB1zE,KAAKi0E,YAAcN,EACdL,kBAAkB/rD,SACtB+rD,kBAAkB/rD,OAASvsB,QAAQ0+C,cAAc,UACjD45B,kBAAkB/rD,OAAOlf,MAAQ,KACjCirE,kBAAkB/rD,OAAOjf,OAAS,IAGlCgrE,kBAAkB/rD,OAAO4xB,MAAMse,KAAO,WACtC6b,kBAAkB/rD,OAAO4xB,MAAMg7B,SAAW,WAC1C38B,SAAS0B,KAAKS,YAAY25B,kBAAkB/rD,QAC5CvnB,KAAKy6B,IAAM64C,kBAAkB/rD,OAAO6sD,WAAW,KAAM,CAAEC,oBAAoB,I,CAMzEvB,kBACH,OAAOQ,kBAAkB/rD,OAAOlf,K,CAM7ByqE,gBAAY7kD,GACXqlD,kBAAkB/rD,OAAOlf,OAAS4lB,IAEtCqlD,kBAAkB/rD,OAAOlf,MAAQ4lB,EAC7BA,EAAI,MACP32B,QAAQC,KAAK,sBAGdyI,KAAKy6B,IAAI65C,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACrCt0E,KAAKy6B,IAAIh2B,MAAMzE,KAAK4zE,WAAY5zE,KAAK6zE,Y,CAStClB,SAASp1B,EAAcx/C,GACtB,OAAKiC,KAAKy6B,KAENz6B,KAAKy6B,IAAIo2C,WAAatzB,IACzBv9C,KAAKy6B,IAAI8iB,KAAOA,EAChBv9C,KAAKy6B,IAAIo2C,UAAYtzB,GAGfv9C,KAAKy6B,IAAI6iB,YAAYv/C,GAAKsK,OAPX,C,CAgBvB5D,MAAMmuE,EAAYC,GACjB,IAAK7yE,KAAKk0E,iBAGT,OAFAl0E,KAAK4zE,WAAahB,OAClB5yE,KAAK6zE,WAAahB,GAIf7yE,KAAK4zE,YAAchB,GAAM5yE,KAAK6zE,YAAchB,IAC/C7yE,KAAKy6B,IAAI65C,aAAa1B,EAAI,EAAG,EAAGC,EAAI,EAAG,GACvC7yE,KAAK4zE,WAAahB,EAClB5yE,KAAK6zE,WAAahB,E,CAYpBE,WAAWb,EAAc30B,EAAc2kB,EAAmB8Q,EAAgBC,EAAsBsB,EAC/FrB,EAAqBC,EAAoBC,EAAsBC,EAAuBzqE,EAAqB,MAC3G,IAAK5I,KAAKk0E,iBACT,OAAOl0E,KAAKw0E,cAActC,EAAM30B,EAAM2kB,EAAW8Q,EAAQC,EAAcsB,EAAKrB,EAAaC,EAAYC,EAAcC,GACpH,IAAI54C,EAAWz6B,KAAKy6B,IAEhB3b,EAAK9e,KAAK0yE,OAIVj4C,EAAI8iB,MAAQA,IACf9iB,EAAI8iB,KAAOA,EACX9iB,EAAIo2C,UAAYtzB,GAIjBg3B,EAAIlsE,MAAQoyB,EAAI6iB,YAAY40B,GAAM7pE,MAClC,IAAI4lB,EAAYsmD,EAAIlsE,MAAQrI,KAAK4zE,WAC7B1lD,EAAYqmD,EAAIjsE,OAAStI,KAAK6zE,WAClC5lD,IAAMilD,EAAcE,GAAgBpzE,KAAK4zE,WACzC1lD,IAAMilD,EAAaE,GAAiBrzE,KAAK6zE,WACzC5lD,EAAI1wB,KAAKoyE,KAAK1hD,GACdC,EAAI3wB,KAAKoyE,KAAKzhD,GAId,IAAIumD,GAHJxmD,EAAI1wB,KAAKwL,IAAIklB,EAAGqlD,kBAAkB/rD,OAAOlf,QAGJ,EAAZ65D,EAAgB,EACrCwS,GAHJxmD,EAAI3wB,KAAKwL,IAAImlB,EAAGolD,kBAAkB/rD,OAAOjf,SAGJ,EAAZ45D,EAAgB,EACrCt5D,IACH6rE,EAASl3E,KAAKuL,IAAI2rE,EAAQ7rE,EAAK,GAAKA,EAAK,GAAK,GAC9C8rE,EAASn3E,KAAKuL,IAAI4rE,EAAQ9rE,EAAK,GAAKA,EAAK,GAAK,IAE/C6xB,EAAIk6C,UAAU,EAAG,EAAGF,EAASz0E,KAAK4zE,WAAa,EAAGc,EAAS10E,KAAK6zE,WAAa,GAC7Ep5C,EAAImU,OAEJnU,EAAIm6C,aAAe,SAGf1S,EAAY,IAEfznC,EAAIo6C,SAAW,QACfp6C,EAAIinC,YAAcuR,EAClBx4C,EAAIynC,UAAYA,EAChBznC,EAAIq6C,WAAW5C,EAAMgB,EAAaC,EAAar0D,EAAK,IAEjDk0D,IACHv4C,EAAIgnC,UAAYuR,EAChBv4C,EAAIs6C,SAAS7C,EAAMgB,EAAaC,EAAar0D,EAAK,IAG/C9e,KAAKi0E,cACRx5C,EAAIinC,YAAc,UAClBjnC,EAAIu6C,WAAW,EAAG,EAAG/mD,EAAI,EAAGC,EAAI,GAChCuM,EAAIinC,YAAc,UAClBjnC,EAAIu6C,WAAW9B,EAAaC,EAAYoB,EAAIlsE,MAAOksE,EAAIjsE,SAGpDM,KACa,GAAZA,EAAK,KAAUA,EAAK,GAAKrL,KAAKoyE,MAAM4E,EAAIlsE,MAAoB,EAAZ65D,GAAiBliE,KAAK4zE,aACtEhrE,EAAK,IAAM,IAAGA,EAAK,GAAK,IAE7B,IAAIqsE,EAAmBrsE,EAAQ6xB,EAAInT,aAAa1e,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAK,GAAO6xB,EAAInT,aAAa,EAAG,EAAG2G,EAAGC,EAAI,GAI1H,OAHAuM,EAAIvN,UACJqnD,EAAI9E,SAAWwF,EAAM5sE,MACrBksE,EAAI7E,UAAYuF,EAAM3sE,OACf2sE,C,CAGRT,cAActC,EAAc30B,EAAc2kB,EAAmB8Q,EAAgBC,EAAsBsB,EAAqBrB,EAAqBC,EAAoBC,EAAsBC,GACtL,IAAI54C,EAAWz6B,KAAKy6B,IAKhBA,EAAI8iB,MAAQA,IACf9iB,EAAI8iB,KAAOA,EACX9iB,EAAIo2C,UAAYtzB,GAIjBg3B,EAAIlsE,MAAQoyB,EAAI6iB,YAAY40B,GAAM7pE,MAClC,IAAI4lB,EAAYsmD,EAAIlsE,MAAQrI,KAAK4zE,WAC7B1lD,EAAYqmD,EAAIjsE,OAAStI,KAAK6zE,WAClC5lD,IAAMilD,EAAcE,GAAgBpzE,KAAK4zE,WACzC1lD,IAAOilD,EAAaE,GAAiBrzE,KAAK6zE,WAAa,EACvD5lD,EAAI1wB,KAAKwL,IAAIklB,EAAGjuB,KAAK8zE,SACrB5lD,EAAI3wB,KAAKwL,IAAImlB,EAAGluB,KAAK+zE,SAGrBT,kBAAkB/rD,OAAOlf,MAAQ9K,KAAKwL,IAAIklB,EAAI,EAAGjuB,KAAK8zE,SACtDR,kBAAkB/rD,OAAOjf,OAAS/K,KAAKwL,IAAImlB,EAAI,EAAGluB,KAAK+zE,SACvDt5C,EAAI8iB,KAAOA,EAEX9iB,EAAIk6C,UAAU,EAAG,EAAG1mD,EAAI,EAAIi0C,EAAWh0C,EAAI,EAAIg0C,GAC/CznC,EAAI65C,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC75C,EAAImU,OACA5uC,KAAKg0E,eAERv5C,EAAIh2B,MAAMzE,KAAK4zE,WAAY5zE,KAAK6zE,YAEjCp5C,EAAIj2B,UAAU0uE,EAAaC,GAC3B14C,EAAIy6C,UAAY,OAEhB,IAAIp2D,EAAK9e,KAAK0yE,OA4Bd,OA3BAj4C,EAAIm6C,aAAe,SAGf1S,EAAY,GACfznC,EAAIinC,YAAcuR,EAClBx4C,EAAIgnC,UAAYuR,EAChBv4C,EAAIynC,UAAYA,EAEZznC,EAAI06C,kBACP16C,EAAI06C,kBAAkBjD,EAAM,EAAGpzD,EAAK,IAEpC2b,EAAIq6C,WAAW5C,EAAM,EAAGpzD,EAAK,GAC7B2b,EAAIs6C,SAAS7C,EAAM,EAAGpzD,EAAK,KAElBk0D,IACVv4C,EAAIgnC,UAAYuR,EAChBv4C,EAAIs6C,SAAS7C,EAAM,EAAGpzD,EAAK,IAExB9e,KAAKi0E,cACRx5C,EAAIinC,YAAc,UAClBjnC,EAAIu6C,WAAW,EAAG,EAAG/mD,EAAGC,GACxBuM,EAAIinC,YAAc,UAClBjnC,EAAIu6C,WAAW,EAAG,EAAGT,EAAIlsE,MAAOksE,EAAIjsE,SAErCmyB,EAAIvN,UACJqnD,EAAI9E,SAAW6D,kBAAkB/rD,OAAOlf,MACxCksE,EAAI7E,UAAY4D,kBAAkB/rD,OAAOjf,OAClCgrE,kBAAkB/rD,M,EAnOX+rD,kBAAM/rD,OAAQ,KCDxB,MAAO6tD,0BAA0B3C,YAMtCl2E,cACC8V,QANOrS,KAAQq1E,SAAW,GACnBr1E,KAAU4zE,WAAW,EACrB5zE,KAAU6zE,WAAW,C,CAc5BlB,SAASp1B,EAAcx/C,GACvB,OAAMnC,OAAe05E,iBAGpB15E,OAAe05E,gBAAgB/3B,KAAOA,EACvCv9C,KAAKq1E,SAAW93B,EAIR3hD,OAAe05E,gBAAgBh4B,YAAYv/C,GAAKsK,OARX,C,CAiB9C5D,MAAMmuE,EAAYC,GACjB7yE,KAAK4zE,WAAahB,EAClB5yE,KAAK6zE,WAAahB,C,CAUnBE,WAAWb,EAAc30B,EAAc2kB,EAAmB8Q,EAAgBC,EAAsBlgE,EAC/FmgE,EAAqBC,EAAoBC,EAAsBC,EAAuBzqE,EAAqB,MAE3G,IAAMhN,OAAe05E,gBAAiB,OAAO,KAK5C15E,OAAe05E,gBAAgB/3B,KAAOA,EACvCv9C,KAAKq1E,SAAW93B,EAEAxqC,EAAK1K,MAASzM,OAAe05E,gBAAgBh4B,YAAY40B,GAAM7pE,MAC/D0K,EAAKzK,OAIpB1M,OAAe05E,gBAAgB7wE,OAAU7I,OAAe05E,gBAAgB7wE,MAAMzE,KAAK4zE,WAAY5zE,KAAK6zE,YAErG,IACI0B,EADiB7jC,WAAWhqC,OAAOurE,GACTphC,SAE1B2jC,EADiB9jC,WAAWhqC,OAAOsrE,GACXnhC,SACxB4jC,EAAiB75E,OAAe05E,gBAAgBI,kBAAkBxD,EAAMsD,EAAYtT,EAAY,EAAI,EAAIA,EAAWqT,GAKvH,OAFAxiE,EAAK08D,SAAWgG,EAASptE,MACzB0K,EAAK28D,UAAY+F,EAASntE,OACnBmtE,C,QC5DI7H,WA4DTrxE,cAnCQyD,KAAY21E,aAAQ,GAKpB31E,KAAO41E,QAAQ,GACf51E,KAAM61E,OAAW,EAEjB71E,KAAU81E,WAAW,EACrB91E,KAAU+1E,WAAW,EAIrB/1E,KAAUg2E,WAAW,EAG7Bh2E,KAAWi2E,YAAgB,GACnBj2E,KAAWk2E,YAAkB,GAM7Bl2E,KAAQq1E,SAAoB,KAC5Br1E,KAASm2E,UAAW,EACpBn2E,KAASo2E,UAAW,EACpBp2E,KAAYq2E,aAAW,EACvBr2E,KAAYs2E,aAAW,EAEvBt2E,KAAau2E,eAAY,EACzBv2E,KAAAw2E,YAAqB,IAAI1uE,MACzB9H,KAAUy2E,WAAW,EAKzB,IAAIC,GAAS,EAETC,EAAe97E,MAAMI,KAAiB,WACtC07E,GAAWA,EAAQC,YAAcD,EAAQC,WAAWC,SACpDH,EAAqD,eAA5CC,EAAQC,WAAWC,OAAOp3E,gBAGlC5E,MAAMG,QAAQ6/C,YAAchgD,MAAMG,QAAQmgD,cAAgBtgD,MAAMG,QAAQkgD,cAAgBrgD,MAAMG,QAAQugD,kBAAoB1gD,MAAMG,QAAQwgD,gBAA4Ck7B,IAAQ9I,WAAWS,WAAY,GAExNruE,KAAK82E,WAAav7E,QAAQI,QAAO,IAAQy5E,kBAAmB,IAAS9B,kBAAkB,KAAM,KAAM1F,WAAWmJ,kBAAmBnJ,WAAWS,WAAW,GACvJT,WAAWoJ,eAAiBh3E,KAC5BnF,MAAMI,KAAiB,WAAI+E,KAC3B4tE,WAAWqJ,YAAcrJ,WAAWC,WAAaD,WAAWC,U,CAYhE+C,QAAQrzB,GACJ,GAAIv9C,KAAKq1E,UAAY93B,EAArB,CACAv9C,KAAKq1E,SAAW93B,EAChB,IAAIm1B,EAAS1yE,KAAKk3E,gBAAgB35B,EAAKizB,SACnC2G,EAAOzE,GAAU,GACjB0E,EAAQ1E,GAAU,GAAM,IACxB2E,EAAM3E,GAAU,EAAK,IACrB4E,EAAc,IAAT5E,EACL/yE,EAAI49C,EAAKkzB,MAAQ7C,WAAW2J,iBAChCv3E,KAAKq2E,aAAe94E,KAAKoyE,KAAKwH,EAAOx3E,GACrCK,KAAKs2E,aAAe/4E,KAAKoyE,KAAKyH,EAAOz3E,GACrCK,KAAKm2E,UAAY54E,KAAKoyE,KAAK0H,EAAK13E,GAChCK,KAAKo2E,UAAY74E,KAAKoyE,KAAK2H,EAAK33E,GAC5B49C,EAAKwzB,MAAM7yE,QAAQ,WAAa,EAChC8B,KAAKw3E,QAAUj6B,EAAKwzB,MAAMtwC,QAAQ,SAAU,IAE5CzgC,KAAKw3E,QAAUj6B,EAAKwzB,KAfG,C,CA0B/B0G,YAAY15E,GACR,IAAIS,EAAMT,EAAI9B,OACVgf,EAAQjb,KAAKg2E,WACjB,IAAKj4E,EAAIO,UAAW,OAAO,KAC3B,GAAI2c,GAASzc,EACT,OAAO,KAKX,IAFA,IAAIC,EAAIwc,EACJy8D,EAAQ,EACLj5E,EAAID,EAAKC,IAAK,CACjB,IAAIqF,EAAI/F,EAAIghB,WAAWtgB,GACvB,GAAKqF,IAAM,IAAO,GAAM,CACpB,GAAa,GAAT4zE,EAAY,MAChBA,EAAQ,EACRj5E,GACH,MACI,GAAU,QAANqF,GAAsB,QAANA,QAGpB,GAAS,MAALA,EACL4zE,EAAQ,OAER,GAAa,GAATA,EAAYA,EAAQ,OACnB,GAAa,GAATA,EAAY,KAK5B,CAED,OADA13E,KAAKg2E,WAAav3E,EACXV,EAAIO,UAAU2c,EAAOxc,E,CAGhCk5E,SAASl9C,EAAcv4B,EAAyBhD,EAAWC,EAAWq4E,EAAiB35E,EAAe+5E,EAAqB1V,EAAmBgT,GAC1I,KAAIhzE,EAAKjG,QAAU,GAAnB,CAGA,IAAIshD,EAAOgzB,SAASsH,MAAML,GAEtBM,EAAa,EACjB,OAAQ5C,GACJ,IAAK,SACD4C,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3BgH,KAAK+3E,eAAet9C,EAAKv4B,EAAMhD,EAAGC,EAAGo+C,EAAM1/C,EAAO+5E,EAAa1V,EAAW4V,EAbtE,C,CAgBRC,eAAet9C,EAAcv4B,EAAgChD,EAAWC,EAAWo+C,EAAgB1/C,EAAe+5E,EAA4B1V,EAAmBgT,GAC7J,IAAIhzE,GAAUA,EAAKjG,QAAU,EAA7B,CAIA,GAHIimE,EAAY,IAAGA,EAAY,GAC/BliE,KAAK4wE,QAAQrzB,GACbv9C,KAAK81E,WAAa91E,KAAK+1E,WAAa,EAChCnI,WAAWmJ,iBAAkB,CAC7B,IAAInE,EAAK,EACLC,EAAK,EAOT,GALKt3E,QAAQI,UAAaC,OAAe05E,gBAAqB,QAC1D1C,EAAKn4C,EAAIu9C,eACTnF,EAAKp4C,EAAIw9C,gBAGTrF,EAAK,MAAQC,EAAK,GAClB,OAEAD,EAAK,IAAG5yE,KAAK81E,WAAav4E,KAAKwL,IAAI6kE,WAAWsK,aAActF,IAC5DC,EAAK,IAAG7yE,KAAK+1E,WAAax4E,KAAKwL,IAAI6kE,WAAWsK,aAAcrF,GACnE,CAEDt1B,EAAKmzB,UAAYj2C,EAAI09C,WAAa,IAGlC,IAAIC,EAAel2E,EACfm2E,EAAOn2E,aAAgBmvE,SACvBtzE,EAAMmE,GAAQA,EAAKlE,WAOnBs6E,EAAqBD,EAAOD,EAAG5G,UAAY,GAE3C+G,EAAW,EAYf,OAXIF,GACAt6E,EAAMq6E,EAAGl4C,MACTq4C,EAAWH,EAAG/vE,OACC,IACXkwE,EAAWH,EAAG/vE,MAAQrI,KAAK82E,WAAWnE,SAAS3yE,KAAKw3E,QAASz5E,KAGjEw6E,EAAWx6E,EAAMiC,KAAK82E,WAAWnE,SAAS3yE,KAAKw3E,QAASz5E,GAAO,EAI3Dm3E,GACJ,KAAKr8E,MAAME,sBACPmG,GAAKq5E,EAAW,EAChB,MACJ,KAAK1/E,MAAMG,qBACPkG,GAAKq5E,EAKTF,IAEIr4E,KAAKw4E,aAAaF,IAAgBF,EAAG9G,cAAgB72C,KACrD69C,EAAcF,EAAG5G,UAAY,IAOrC,IAAI7D,EAAqB,KAErB8K,EAAWz4E,KAAKu2E,eAAkB8B,GAASzK,WAAW8K,kBAAqBL,GAAQD,EAAGrG,YAC1F,IAAKuG,GAAeA,EAAYr8E,OAAS,EAAG,CAOxC,GANIo8E,IACAD,EAAG3G,OAASzxE,KAAK81E,WACjBsC,EAAG1G,OAAS1xE,KAAK+1E,YAIjB0C,EAAU,CAEV,IAIIE,EAJAC,EAAM,EAKV,IAFA54E,KAAKg2E,WAAa,GAGd2C,EAAS34E,KAAKy3E,YAAY15E,MAG1B4vE,EAAK3tE,KAAK64E,kBAAkBF,EAAQp7B,EAAM1/C,EAAO+5E,EAAa1V,GAAW,KAKzE,GAAIyL,EAAG2E,aACA,CAEH,IAAIxvE,EAAMw1E,EAAY3K,EAAG51C,IAAIn3B,IAC7B,GAAKkC,EAKDA,EAAMA,EAAIkzB,UALJ,CACN,IAAI8iD,EAAK,CAAEC,OAAuBpL,EAAG51C,IAAMu1C,MAAOv1C,IAAK41C,EAAG51C,IAAK/B,MAAO,IAAI3kB,OAC1EinE,EAAY3K,EAAG51C,IAAIn3B,IAAMk4E,EACzBh2E,EAAMg2E,EAAG9iD,KACZ,CAIDlzB,EAAIzG,KAAK,CAAEsxE,GAAIA,EAAIzuE,EAAG05E,EAAKz5E,EAzBzB,EAyBiC8uB,EAAG0/C,EAAG8B,SAAWzvE,KAAK81E,WAAY5nD,EAAGy/C,EAAG+B,UAAY1vE,KAAK+1E,aAC5F6C,GAAOjL,EAAGtlE,KACb,CAGR,KAAM,CAEH,IAAI+wC,EAAS79C,QAAQI,QAAU,EAAK4hD,EAAKkzB,MAAQ,EAAI,EACjDuI,EAASpL,WAAWqL,UAAYV,EAAWn/B,EAASA,GAAUp5C,KAAK81E,WAAalI,WAAWC,WAC/FF,EAAK3tE,KAAK64E,kBAAkB96E,EAAKw/C,EAAM1/C,EAAO+5E,EAAa1V,EAAW8W,GAEtEV,EAAY,GAAK,CAAES,OAAuBpL,EAAG51C,IAAMu1C,MAAOv1C,IAAK41C,EAAG51C,IAAK/B,MAAO,CAAC,CAAE23C,GAAIA,EAAIzuE,EAAG,EAAGC,EAAG,EAAG8uB,EAAG0/C,EAAG8B,SAAWzvE,KAAK81E,WAAY5nD,EAAGy/C,EAAG+B,UAAY1vE,KAAK+1E,aACjK,CACDsC,IAASD,EAAG9G,aAAe72C,EAE9B,CAEDz6B,KAAKk5E,mBAAmBz+C,EAAKv7B,EAAGC,EAAGm5E,GACnC79C,EAAI09C,WAAa,CA1HgB,C,CAmI3Be,mBAAmBz+C,EAAc0+C,EAAgBC,EAAgBC,GACvE,IAAIC,IAAe7+C,EAAIy5B,kBAAmBz5B,EAAIy5B,iBAAiBC,QAC3D9qC,EAAMoR,EAAIyU,QAGd,IAAK,IAAItuC,KAAMy4E,EAAe,CAE1B,IAAIn+C,EAAKm+C,EAAcz4E,GACvB,GAAKs6B,EAAL,CACA,IAAIq+C,EAAar+C,EAAGlF,MAChBwjD,EAAOD,EAAIt9E,OAAQ,KAAIu9E,GAAQ,GAEnC,IADA,IAAIzhD,EAAqBshD,EAAcz4E,GAAIm3B,IAClCr4B,EAAI,EAAGA,EAAI85E,EAAM95E,IAAK,CAC3B,IAAI+5E,EAAeF,EAAI75E,GACnBiuE,EAAqB8L,EAAQ9L,GACjC,IAAIA,EAAG2E,QAAP,CAIA,GAHA3E,EAAG4E,QACH93C,EAAIi/C,cAAe,EAEfn+E,QAAQI,QACR8+B,EAAIM,cAAwBhD,EAAIxR,QAAU4yD,EAASM,EAAQv6E,EAAIyuE,EAAGwE,KAAMiH,EAASK,EAAQt6E,EAAIwuE,EAAGyE,KAAMqH,EAAQxrD,EAAGwrD,EAAQvrD,EAAG,KAAM,EAAKy/C,EAAGn2C,GAAI,gBAC3I,CACH,IAAI0kC,EAAInkC,EACR0C,EAAIk/C,mBAAmBzd,EAAE31C,QAAS21C,EAAEt7D,GAChCu4E,EAASM,EAAQv6E,EAAIyuE,EAAGwE,KAAMiH,EAASK,EAAQt6E,EAAIwuE,EAAGyE,KAAMqH,EAAQxrD,EAAGwrD,EAAQvrD,EAC/E7E,EAAKskD,EAAGn2C,GAAI,EAAK8hD,EAAc,WACtC,CAES7+C,EAAK5uB,SACL4uB,EAAK5uB,QAAQxP,KAAKsxE,EAdZ,CAgBnB,CAvBQ,CAwBZ,C,CAWL6K,aAAaoB,GACT,IAAK,IAAIn7E,KAAKm7E,EAAM,CAChB,IAAIL,EAAMK,EAAKn7E,GACf,GAAK86E,EAAL,CACA,IAAIxhD,EAAoBwhD,EAAIxhD,IAC5B,GAAIA,EAAI72B,WAAa62B,EAAIu1C,OAASiM,EAAIR,OAClC,OAAO,CAHD,CAKb,CACD,OAAO,C,CAGXF,kBAAkB96E,EAAaw/C,EAAgB1/C,EAAe+5E,EAA4B1V,EAAmB2X,GAAsB,GAC/H,IAAIC,EAAM95E,KAAK41E,QAAQr4B,EAAKizB,SACjBj/D,MAAPuoE,IACA95E,KAAK41E,QAAQr4B,EAAKizB,SAAWsJ,EAAM95E,KAAK61E,UAS5C,IAAIzpE,EAAMrO,EAAM,IAAM+7E,EAAM,IAAMv8B,EAAKkzB,MAAQ,IAAM5yE,EACjDqkE,EAAY,IACZ91D,GAAO,IAAMwrE,EAAe1V,GAC5B3kB,EAAKozB,QACLvkE,GAAO,KACY,GAAnBpM,KAAK81E,YAAsC,GAAnB91E,KAAK+1E,aAC7B3pE,IAA0B,GAAlBpM,KAAK81E,WAAkB,GAAK,KAAyB,GAAlB91E,KAAK+1E,WAAkB,IAGtE,IAGIpI,EACAoM,EAJAt7E,EAAI,EAEJqgB,EAAK9e,KAAKi2E,YAAYh6E,OAG1B,IAAK49E,EACD,IAAKp7E,EAAI,EAAGA,EAAIqgB,EAAIrgB,IAGhB,GADAkvE,GADAoM,EAAQ/5E,KAAKi2E,YAAYx3E,IACdsxE,SAAS3jE,GAGhB,OADAuhE,EAAG4E,QACI5E,EAKnBA,EAAK,IAAIsE,eACTjyE,KAAK82E,WAAWryE,MAAMzE,KAAK81E,WAAY91E,KAAK+1E,YAC5CpI,EAAGuE,KAAOn0E,EACV4vE,EAAGrlE,OAASi1C,EAAKkzB,MACjB,IAAIr3B,EAAS79C,QAAQI,QAAU,EAAK4hD,EAAKkzB,MAAQ,EAAI,EAEjDwE,EAA0B,KAGzB/S,IACDA,EAAY,GAEhB,IAAI8X,EAAKz8E,KAAKoyE,MAAM3vE,KAAK82E,WAAWnE,SAAS3yE,KAAKw3E,QAASz5E,GAAO,EAAImkE,GAAaliE,KAAK81E,YAIxF,GAHIkE,EAAKh6E,KAAK82E,WAAWhE,cACrB9yE,KAAK82E,WAAWhE,YAAcv1E,KAAKwL,IAAI,KAAMixE,EAAc,EAAT5gC,IAElDygC,GAKA,GAHA75E,KAAK82E,WAAWpE,OAASn1B,EAAKkzB,MAC9BwE,EAAQj1E,KAAK82E,WAAW/D,WAAWh1E,EAAKiC,KAAKw3E,QAAStV,EAAWrkE,EAAO+5E,EAAajK,EAAIv0B,EAAQA,EAAQA,EAAQA,EAAQ,MAE9G,CACP,IAAIrhB,EAAMi1C,YAAYgD,eAAeiF,EAAM5sE,MAAO4sE,EAAM3sE,QACxDyvB,EAAIq2C,QAAQ6G,EAAO,EAAG,EAAGtH,EAAGn2C,IAC5Bm2C,EAAG51C,IAAMA,EACT41C,EAAGwE,KAAO/4B,EACVu0B,EAAGyE,KAAOh5B,EACVrhB,EAAI41C,GAAKA,EACT3tE,KAAKk2E,YAAY75E,KAAK07B,EACzB,MACE,CAEH,IAAIv5B,EAAMT,EAAI9B,OAIVg+E,EAAsB,EAAZ/X,EACVmV,EAAK95E,KAAKoyE,MAAM3vE,KAAKm2E,UAAsB,EAAV8D,GAAej6E,KAAK81E,YACrDwB,EAAK/5E,KAAKoyE,MAAM3vE,KAAKo2E,UAAsB,EAAV6D,GAAej6E,KAAK+1E,YACzDnI,WAAWsM,UAAU,IAAO9gC,EAASp5C,KAAKq2E,aAAe4D,GAAWj6E,KAAK81E,WAAc,EACvFlI,WAAWsM,UAAU,IAAO9gC,EAASp5C,KAAKs2E,aAAe2D,GAAWj6E,KAAK+1E,WAAc,EACnF/1E,KAAKu2E,eAAwB,GAAP/3E,GAEtBovE,WAAWsM,UAAU,GAAK38E,KAAKuL,IAAIkxE,EAAI3C,GACvCzJ,WAAWsM,UAAU,GAAK38E,KAAKuL,IAAIkxE,EAAI1C,KAGvC1J,WAAWsM,UAAU,IAAM,EAC3BtM,WAAWsM,UAAU,GAAK5C,GAE9Bt3E,KAAK82E,WAAWpE,OAASn1B,EAAKkzB,OAC9BwE,EAAQj1E,KAAK82E,WAAW/D,WAAWh1E,EAAKiC,KAAKw3E,QAAStV,EAAWrkE,EAAO+5E,EAAajK,EACjFv0B,EAAQA,EAAQA,EAAQA,EAAQw0B,WAAWsM,cAE3CH,EAAQ/5E,KAAKm6E,WAAWlF,EAAOtH,GAC3BC,WAAWS,WAEXV,EAAGwE,KAAO/4B,EACVu0B,EAAGyE,KAAOh5B,IAGVu0B,EAAGwE,KAAQnyE,KAAKq2E,aAAe4D,EAC/BtM,EAAGyE,KAAQpyE,KAAKs2E,aAAe2D,GAEnCF,EAAMhK,SAAS3jE,GAAOuhE,EAE7B,CACD,OAAOA,C,CASXwM,WAAWj4E,EAAiByrE,GAMxB,IALA,IAGIoM,EAHA9rD,EAAI/rB,EAAKmG,MACT6lB,EAAIhsB,EAAKoG,OACTwW,EAAK9e,KAAKi2E,YAAYh6E,OAEtBm0E,GAAO,EACF3xE,EAAI,EAAGA,EAAIqgB,KAEhBsxD,GADA2J,EAAQ/5E,KAAKi2E,YAAYx3E,IACZ0xE,UAAUliD,EAAGC,EAAGluB,KAAKw2E,cAFd/3E,KAOxB,IAAK2xE,EAAM,CAKP,GAHA2J,EAAQ,IAAIxK,UACZvvE,KAAKi2E,YAAY55E,KAAK09E,KACtB3J,EAAO2J,EAAM5J,UAAUliD,EAAGC,EAAGluB,KAAKw2E,cAE9B,KAAM,OAGVx2E,KAAKo6E,cACR,CAKD,OAJIhK,IACA2J,EAAMxzD,QAAQ6nD,QAAQlsE,EAAMlC,KAAKw2E,YAAYt3E,EAAGc,KAAKw2E,YAAYr3E,EAAGwuE,EAAGn2C,IACvEm2C,EAAG51C,IAAMgiD,EAAMxzD,SAEZwzD,C,CAMXM,KAgBI,IAfA,IAAI57E,EAAI,EACJqgB,EAAK9e,KAAKi2E,YAAYh6E,OAEtBq+E,EAAY1M,WAAW2M,eAEvBC,EAAqB,EACrBpL,EAAUvjB,WAAW9J,UAIrB04B,GAAkB,EAClBC,EAAe,EACf3iD,EAAmB,KACnB4iD,EAAsB,KAEnBl8E,EAAIqgB,EAAIrgB,IAAK,CAGhB,GADAs5B,GADA4iD,EAAW36E,KAAKi2E,YAAYx3E,IACb8nB,QACN,CACYwR,EAAIy1C,eACrBgN,GAAsBziD,EAAI01C,oBAG1B,IAAImN,EAAQD,EAAStK,SAAWt4C,EAAI01C,oBAEhCiN,EAAeE,IACfF,EAAeE,EACfH,EAAiBh8E,EAQxB,CAGI2wE,EAAUuL,EAASp0D,QAAQmnD,YACvB4M,IACL1M,WAAWiN,SAAWvjF,QAAQovB,IAA0Ci0D,EAASp0D,QAAQ3lB,IACzF+5E,EAASx3E,UACTnD,KAAKi2E,YAAYx3E,GAAKuB,KAAKi2E,YAAYn3D,EAAK,GAC5CA,IACArgB,IACAg8E,GAAkB,EAEzB,CAMD,IAJAz6E,KAAKi2E,YAAYh6E,OAAS6iB,EAG1BA,EAAK9e,KAAKk2E,YAAYj6E,OACjBwC,EAAI,EAAGA,EAAIqgB,EAAIrgB,IAEX2wE,GADLr3C,EAAM/3B,KAAKk2E,YAAYz3E,IACJivE,YACVE,WAAWsB,yBAChBn3C,EAAI41C,GAAGxY,SAAU,EACjBp9B,EAAI41C,GAAG51C,IAAM,KAEbA,EAAI50B,UACJnD,KAAKk2E,YAAYz3E,GAAKuB,KAAKk2E,YAAYp3D,EAAK,GAC5CA,IACArgB,KAGRuB,KAAKk2E,YAAYj6E,OAAS6iB,EAG1B,IAAIg8D,EAAS96E,KAAKi2E,YAAYh6E,OAAS,GAAK+D,KAAKi2E,YAAYh6E,OAASu+E,GAAsB,GACxF5M,WAAWC,WAAaD,WAAWC,WAAa,EAAI7tE,KAAKi2E,YAAYh6E,OAAS2xE,WAAWmN,UAAYD,GAAUlN,WAAWoN,YAC1HpN,WAAWoN,UAAW,EACtBpN,WAAWiN,SAAWvjF,QAAQovB,IAAI,kBAAmB8zD,EAAoB,IAAKx6E,KAAKi2E,YAAYh6E,OAAQ,QAAUw+E,GAC7GA,GAAkB,KAClBE,EAAW36E,KAAKi2E,YAAYwE,IACnBt3E,UACTnD,KAAKi2E,YAAYwE,GAAkBz6E,KAAKi2E,YAAYj2E,KAAKi2E,YAAYh6E,OAAS,GAC9E+D,KAAKi2E,YAAYh6E,OAAS+D,KAAKi2E,YAAYh6E,OAAS,IAI5D+wE,YAAYiO,O,CAMhBb,e,CAIArH,WAAWjvE,G,CAYHo3E,aAAah5E,EAAiB8uE,EAAW4B,EAAYuI,GACrDn7E,KAAKo7E,UAAUzhE,QAAUzX,EAAKA,KAAKyX,SACnC3Z,KAAKo7E,UAAY,IAAI35D,YAAYvf,EAAKA,KAAKyX,SAG/C,IADA,IAAI0hE,EAAQn5E,EAAKmG,MAAQ2oE,EAAI4B,EACpB1zE,EAAI0zE,EAAI1zE,EAAIi8E,EAAIj8E,IACrB,GAA+B,GAA3Bc,KAAKo7E,UAAUC,KAAe,OAAO,EAE7C,OAAO,C,CAUHC,UAAUp5E,EAAiBq5E,EAAkBC,GAAiB,GAClE,IAAIvtD,EAAI/rB,EAAKmG,MACT6lB,EAAIhsB,EAAKoG,OACTpJ,EAAI,EAEJ2zE,EAAK0I,EAAO,GACZE,EAAK,EACLt8E,EAAI0zE,EACR,GAAI7yE,KAAKk7E,aAAah5E,EAAM2wE,EAAI,EAAG5kD,GAE/B,OAAa,CAET,IADA9uB,GAAK0zE,EAAK4I,GAAM,EAAI,GACZ,GAAK5I,EAAI,CAEb0I,EAAO,GAAKp8E,EACZ,KACH,CACGa,KAAKk7E,aAAah5E,EAAM/C,EAAG,EAAG8uB,GAE9B4kD,EAAK1zE,EAGLs8E,EAAKt8E,CAEZ,CAGL,GAAIo8E,EAAO,GAAKrtD,EAAGqtD,EAAO,GAAKrtD,OAI3B,GAFA/uB,EAAI0zE,EAAK0I,EAAO,GAChBE,EAAKvtD,EACDluB,KAAKk7E,aAAah5E,EAAM2wE,EAAI,EAAG5kD,GAC/B,OAAa,CAET,IADA9uB,GAAK0zE,EAAK4I,GAAM,EAAI,GACZ,GAAK5I,EAAI,CACb0I,EAAO,GAAKp8E,EACZ,KACH,CACGa,KAAKk7E,aAAah5E,EAAM/C,EAAG,EAAG8uB,GAC9B4kD,EAAK1zE,EAELs8E,EAAKt8E,CAEZ,CAIT,IAAIq8E,EAAJ,CAIA,IAAIE,EAAOH,EAAO,GACdF,EAAQptD,EAAIstD,EAAO,GACvB,IAAKp8E,EAAIo8E,EAAO,GAAIp8E,EAAIo8E,EAAO,GAAIp8E,IAAK,CACpC,IAAKD,EAAI,EAAGA,EAAIw8E,EAAMx8E,IAClB,GAAiC,GAA7Bc,KAAKo7E,UAAUC,EAAQn8E,GAAS,CAChCw8E,EAAOx8E,EACP,KACH,CAELm8E,GAASptD,CACZ,CACDstD,EAAO,GAAKG,EAEZ,IAAIC,EAAOJ,EAAO,GAElB,IADAF,EAAQptD,EAAIstD,EAAO,GACdp8E,EAAIo8E,EAAO,GAAIp8E,EAAIo8E,EAAO,GAAIp8E,IAAK,CACpC,IAAKD,EAAIy8E,EAAMz8E,EAAI+uB,EAAG/uB,IAClB,GAAiC,GAA7Bc,KAAKo7E,UAAUC,EAAQn8E,GAAS,CAChCy8E,EAAOz8E,EACP,KACH,CAELm8E,GAASptD,CACZ,CACDstD,EAAO,GAAKI,CA3BR,C,CA8BRzE,gBAAgB35B,GACZ,IAAIq+B,EAAa57E,KAAK21E,aAAap4B,GACnC,GAAahsC,MAATqqE,EACA,OAAOA,EAEX,IAAIC,EAAkB,QAAUjO,WAAW2J,iBAAmB,MAAQh6B,EACtE,GAAIqwB,WAAWS,UAAW,CAEtBruE,KAAKm2E,UAAqD,IAAzCn2E,KAAK82E,WAAWnE,SAASkJ,EAAS,KACnD77E,KAAKo2E,UAA0C,IAA9BxI,WAAW2J,iBAC5B,IAAIuE,EAAiB97E,KAAKm2E,WAAa,EAAIn2E,KAAKo2E,UAEhD,OADAp2E,KAAK21E,aAAap4B,GAAQu+B,EACnBA,CACV,CAEDlO,WAAWmO,SAAS,GAAKnO,WAAW2J,iBAAmB,EACvD3J,WAAWmO,SAAS,GAAKnO,WAAW2J,iBAAmB,EACvD3J,WAAWmO,SAAS,GAAKnO,WAAW2J,iBACpC3J,WAAWmO,SAAS,GAAKnO,WAAW2J,iBAEpC,IAAIpF,EAAe,GACfC,EAAe,GAGnBpyE,KAAK82E,WAAWryE,MAAM,EAAG,GACzBmpE,WAAWoO,MAAM1zE,OAASslE,WAAW2J,iBACrCv3E,KAAK82E,WAAWpE,OAAS9E,WAAW2J,iBACpC,IAAI0E,EAAQj8E,KAAK82E,WAAW/D,WAAW,IAAK8I,EAAS,EAAG,MAAO,KAAMjO,WAAWoO,MAAO7J,EAAMC,EALvE,GACA,IAMlB72E,QAAQI,UAEPsgF,EAAc/5E,KAAO,IAAIusE,kBAAkBwN,EAAM/5E,OAEtDlC,KAAKo7E,UAAY,IAAI35D,YAAYw6D,EAAM/5E,KAAKyX,QAE5C3Z,KAAKs7E,UAAUW,EAAOrO,WAAWmO,UAAU,GAC3CE,EAAQj8E,KAAK82E,WAAW/D,WAAW,IAAK8I,EAAS,EAAG,MAAO,KAAMjO,WAAWoO,MAAO5J,EAAMA,EAdnE,GACA,IAclB72E,QAAQI,UAEPsgF,EAAc/5E,KAAO,IAAIusE,kBAAkBwN,EAAM/5E,OAEtDlC,KAAKo7E,UAAY,IAAI35D,YAAYw6D,EAAM/5E,KAAKyX,QAExCi0D,WAAWmO,SAAS,GAAK5J,EAAOvE,WAAWoO,MAAM3zE,QACjDulE,WAAWmO,SAAS,GAAK5J,EAAOvE,WAAWoO,MAAM3zE,OACrDrI,KAAKs7E,UAAUW,EAAOrO,WAAWmO,UAAU,GAEvCxgF,QAAQI,UAERw2E,EAAO,EACPC,EAAO,GAEX,IAII8J,EAJO3+E,KAAKuL,IAAIqpE,EAAOvE,WAAWmO,SAAS,GAAI,IAI5B,GAHZx+E,KAAKuL,IAAIspE,EAAOxE,WAAWmO,SAAS,GAAI,IAGf,GAFzBnO,WAAWmO,SAAS,GAAKnO,WAAWmO,SAAS,IAEP,EADtCnO,WAAWmO,SAAS,GAAKnO,WAAWmO,SAAS,GAGxD,OADA/7E,KAAK21E,aAAap4B,GAAQ2+B,EACnBA,C,CAGXC,eAII,IAAK,IAAIr+D,KAHTxmB,QAAQovB,IAAI,QAAU1mB,KAAKi2E,YAAYh6E,OAAS,WAAa2xE,WAAWC,WAAa,IAAMD,WAAWC,WAAY,YAAaD,WAAWS,WAC1I/2E,QAAQovB,IAAI,UAAaknD,WAAWC,WAAaD,WAAWC,WAAa,EAAI,KAAO,KAAO7tE,KAAKi2E,YAAYh6E,OAAU,KACtH3E,QAAQovB,IAAI,YACE1mB,KAAK41E,QAAS,CACxB,IAAIlD,EAAS1yE,KAAKk3E,gBAAgBp5D,GAC9Bq5D,EAAOzE,GAAU,GACjB0E,EAAQ1E,GAAU,GAAM,IACxB2E,EAAM3E,GAAU,EAAK,IACrB4E,EAAc,IAAT5E,EACTp7E,QAAQovB,IAAI,OAAS5I,EAAG,QAASq5D,EAAMC,EAAM,SAAUC,EAAIC,EAC9D,CACD,IAAIl2D,EAAM,EACV9pB,QAAQovB,IAAI,SACZ,IAAI01D,EAAgB,EAChB5B,EAAqB,EACzBx6E,KAAKi2E,YAAYrrE,SAAQ,SAAUhH,GAC/B,IAAIhD,EAAKgD,EAAE2iB,QAAQ3lB,GACfs6B,EAAK2wB,WAAW9J,UAAYn+C,EAAE2iB,QAAQmnD,YACtC2O,EAAQnhD,EAAK,EAAUA,EAAK,MAAS,MAIzC,IAAK,IAAIv7B,KAHTy8E,GAAiBx4E,EAAE2iB,QAAQinD,eAC3BgN,GAAsB52E,EAAE2iB,QAAQknD,oBAChCn2E,QAAQovB,IAAI,WAAa9lB,EAAK,WAAwC,IAA3BgD,EAAE2iB,QAAQinD,eAAwB,GAAK,IAAK,YAA6C,IAAhC5pE,EAAE2iB,QAAQknD,oBAA4B,GAAK,IAAK,SAAwB,IAAb7pE,EAAEysE,SAAiB,EAAI,UAAYgM,EAAQ,QAC5Lz4E,EAAEmsE,SAAU,CACtB,IAAIpC,EAAqB/pE,EAAEmsE,SAASpwE,GACpCrI,QAAQovB,IAAI,YAAainD,EAAGwE,KAAMxE,EAAGyE,KAAM,UAAWzE,EAAG8B,SAAU9B,EAAG+B,UAAW,MAAO/B,EAAGxY,QAAS,WAAatJ,WAAW9J,UAAY4rB,EAAG0E,UAAY,MAAO1E,EAAGn2C,GAAG,GAAKo2C,WAAWC,WAAa,EAAGF,EAAGn2C,GAAG,GAAKo2C,WAAWC,WAAa,EACnO,MAAOF,EAAGuE,KAAM,OAAQvyE,GAC5ByhB,GACH,CACL,IACA9pB,QAAQovB,IAAI,UAAY1mB,KAAKk2E,YAAYj6E,OAAS,OAClD+D,KAAKk2E,YAAYtrE,SAAQ,SAAUmtB,GAC/BzgC,QAAQovB,IAAI,YAAaqR,EAAIo1C,MAAOp1C,EAAIq1C,MAAO,WAAavhB,WAAW9J,UAAYhqB,EAAI21C,YAAc,QAAS31C,EAAI41C,GAAGuE,KACzH,IACA56E,QAAQovB,IAAI,OAAQtF,EAAK,QAASg7D,EAAe,YAAa5B,E,CAKlE8B,UAAU92E,EAAW+2E,EAAiBr9E,EAAWC,EAAW8uB,EAAWC,GACnE,IAAKluB,KAAKi2E,YAAYzwE,GAElB,OADAlO,QAAQovB,IAAI,UACL,KAEX,IAAIrd,EAAK,IAAImzE,OACTC,EAAUz8E,KAAKi2E,YAAYzwE,GAAG+gB,QAC9BA,EAAe,CACfle,MAAOulE,WAAWC,WAClBvlE,OAAQslE,WAAWC,WACnBrhD,YAAaohD,WAAWC,WACxBphD,aAAcmhD,WAAWC,WACzBnhD,QAAS,EACTC,QAAS,EACTJ,WAAY,WAAuB,OAAO,CAAK,EAC/ChY,cAAe,aACfC,iBAAkB,aAClBsE,WAAY,WAAmB,OAAO2jE,EAAQ3jE,YAAa,EAC3D+e,OAAQ,CAAEj3B,GAAI67E,EAAQ77E,IACtBk4B,IAAKvB,QAAQU,QAcjB,OAZO5uB,EAAK0J,KAAO,SAAUkb,EAAWC,GAMpC,OALAluB,KAAKqI,MAAQ4lB,EACbjuB,KAAKsI,OAAS4lB,EACd7kB,EAAGqzE,SAAS/xE,QACZtB,EAAGqzE,SAASC,SAAS,EAAG,EAAGtzE,EAAGhB,MAAOgB,EAAGf,OAAQi0E,GAChDlzE,EAAGqzE,SAAS5lB,YAAsBvwC,EAAU,EAAG,EAAGld,EAAGhB,MAAOgB,EAAGf,QAC/CtI,IACpB,EACAqJ,EAAGqzE,SAASC,SAAS,EAAG,EAAG1uD,EAAGC,EAAGquD,GACjClzE,EAAGqzE,SAAS5lB,YAAsBvwC,EAAU,EAAG,EAAG0H,EAAGC,GACrD7kB,EAAGmU,IAAIte,EAAGC,GACVtE,MAAMS,MAAMshF,SAASvzE,GACdA,C,CAIXwzE,gBAAgBpiD,EAAcv4B,EAAyBhD,EAAWC,EAAWq4E,EAAiB35E,EAAe+5E,EAAqB1V,EAAmBgT,GACjJ,KAAIhzE,GAAQA,EAAKjG,QAAU,GAA3B,CAEA,IAAIshD,EAAOgzB,SAASsH,MAAML,GAEtBM,EAAa,EACjB,OAAQ5C,GACJ,IAAK,SACD4C,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,OAAOgH,KAAK+3E,eAAet9C,EAAKv4B,EAAMhD,EAAGC,EAAGo+C,EAAM1/C,EAAO+5E,EAAa1V,EAAW4V,EAbnD,C,EAl0B3BlK,WAAckP,gBAAG,EACjBlP,WAAUC,WAAG,KACbD,WAAOqL,SAAG,EACVrL,WAAgB8K,kBAAG,EACnB9K,WAAgBmP,kBAAG,EACnBnP,WAAgBmJ,kBAAG,EACnBnJ,WAAYsK,aAAG,EACftK,WAAgB2J,iBAAG,GACnB3J,WAAc2M,eAAG,GACjB3M,WAAmBoB,oBAAG,IACtBpB,WAAsBsB,uBAAG,IACzBtB,WAAAmN,SAAW,UACXnN,WAASS,WAAG,EACZT,WAAOiN,SAAG,EACVjN,WAAOM,SAAG,EAYFN,WAAAoO,MAAwB,IAAI/J,eAC5BrE,WAAQmO,SAAa,CAAC,EAAG,EAAG,EAAG,GAgB/BnO,WAASsM,UAAU,CAAC,EAAG,EAAG,EAAG,GAarCtM,WAAQoN,UAAY,E,MCxElBgC,YAaZzgF,c,CASAvF,cAAcokB,GACb,OAAO7d,KAAKglE,IAAInnD,GAAK4hE,YAAYC,a,CAQlCjmF,iBAAiBkmF,EAAYC,GAC5B,QAAIH,YAAYI,OAAOF,EAAKC,E,CAK7BnmF,mBAAmBiH,GAClB,OAAI++E,YAAYI,OAAOn/E,GACfA,EACD,EAAMV,KAAK4I,KAAKlI,E,EAtCjB++E,YAAaC,cAAW,KAExBD,YAAQK,SAAW,aAEnBL,YAAQM,UAAY,aAEpBN,YAAAO,QAAkBhgF,KAAKC,GAAK,I,MCJvB4pD,QAgBT7qD,YAAY2C,EAAY,EAAGC,EAAY,GACnCa,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,C,CAOb8rB,SAAS/rB,EAAWC,GAChBa,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,C,CASbnI,aAAa4M,EAAYC,EAAWyB,GAChCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EACdyB,EAAInG,EAAIyE,EAAEzE,EAAI0E,C,CASlB7M,cAAc4M,EAAYC,GACtB,OAAOm5E,YAAYQ,UAAU55E,EAAE1E,EAAG2E,EAAE3E,IAAM89E,YAAYQ,UAAU55E,EAAEzE,EAAG0E,EAAE1E,E,CAQ3E+rB,UAAUlsB,EAA0ByhB,EAAiB,GACjDzgB,KAAKd,EAAIF,EAAMyhB,EAAS,GACxBzgB,KAAKb,EAAIH,EAAMyhB,EAAS,E,CAO5B0K,UACI,MAAO,CAACnrB,KAAKd,EAAGc,KAAKb,E,CAQzBs+E,QAAQz+E,EAAqByhB,EAAiB,GAC1CzhB,EAAMyhB,EAAS,GAAKzgB,KAAKd,EACzBF,EAAMyhB,EAAS,GAAKzgB,KAAKb,C,CAO7B2rB,QAAQC,GACJ,IAAI2yD,EAAiC3yD,EACrC2yD,EAAYx+E,EAAIc,KAAKd,EACrBw+E,EAAYv+E,EAAIa,KAAKb,C,CASzBnI,WAAW4M,EAAYC,GACnB,OAAQD,EAAE1E,EAAI2E,EAAE3E,EAAM0E,EAAEzE,EAAI0E,EAAE1E,C,CAQlCnI,iBAAiB85C,EAAYxrC,GACzB,IAAIpG,EAAY4xC,EAAE5xC,EAAGC,EAAY2xC,EAAE3xC,EAC/BX,EAAcU,EAAIA,EAAIC,EAAIA,EAC1BX,EAAM,IACNA,EAAM,EAAIjB,KAAK4I,KAAK3H,GACpB8G,EAAIpG,EAAIA,EAAIV,EACZ8G,EAAInG,EAAIA,EAAIX,E,CASpBxH,oBAAoB4M,GAChB,IAAI1E,EAAY0E,EAAE1E,EAAGC,EAAYyE,EAAEzE,EACnC,OAAO5B,KAAK4I,KAAKjH,EAAIA,EAAIC,EAAIA,E,CAOjCqI,QACI,IAAIk2E,EAAuB,IAAIt2B,QAE/B,OADApnD,KAAK8qB,QAAQ4yD,GACNA,C,CAGXC,iBAAiBC,EAAsC,MAE/CA,GACM59E,KAAM2sC,SAAWixC,EACjB59E,KAAM2sC,SAAS,GAAK3sC,KAAKd,EACzBc,KAAM2sC,SAAS,GAAK3sC,KAAKb,GAGzBa,KAAM2sC,SAAW,IAAItxB,aAAa,CAACrb,KAAKd,EAAGc,KAAKb,IAE1DioD,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,E,CAG1ChJ,0BAA0B8mF,EAAY/oE,EAAcxK,GAChDsK,OAAuB,eAAEipE,EAAO/oE,EAAM,CAClCymB,IAAO,WACH,OAAOx7B,KAAK2sC,SAASpiC,E,EAEzBkQ,IAAO,SAAUW,GACbpb,KAAK2sC,SAASpiC,GAAS6Q,C,KAxJnBgsC,QAAI22B,KAAsB,IAAI32B,QAAQ,EAAK,GAE3CA,QAAG42B,IAAsB,IAAI52B,QAAQ,EAAK,G,MCHjDE,QAuCT/qD,YAAY2C,EAAY,EAAGC,EAAY,EAAGghC,EAAY,EAAGlS,EAAY,GACjEjuB,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,EACTngC,KAAKiuB,EAAIA,C,CAUbhD,SAAS/rB,EAAWC,EAAWghC,EAAWlS,GACtCjuB,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,EACTngC,KAAKiuB,EAAIA,C,CAQb/C,UAAU7sB,EAAYoiB,EAAiB,GACnCzgB,KAAKd,EAAIb,EAAIoiB,EAAS,GACtBzgB,KAAKb,EAAId,EAAIoiB,EAAS,GACtBzgB,KAAKmgC,EAAI9hC,EAAIoiB,EAAS,GACtBzgB,KAAKiuB,EAAI5vB,EAAIoiB,EAAS,E,CAO1B0K,UACI,MAAO,CAACnrB,KAAKd,EAAGc,KAAKb,EAAGa,KAAKmgC,EAAGngC,KAAKiuB,E,CAQzCwvD,QAAQp/E,EAAmBoiB,EAAiB,GACxCpiB,EAAIoiB,EAAS,GAAKzgB,KAAKd,EACvBb,EAAIoiB,EAAS,GAAKzgB,KAAKb,EACvBd,EAAIoiB,EAAS,GAAKzgB,KAAKmgC,EACvB9hC,EAAIoiB,EAAS,GAAKzgB,KAAKiuB,C,CAO3BnD,QAAQC,GACJ,IAAIkzD,EAAiClzD,EACrCkzD,EAAY/+E,EAAIc,KAAKd,EACrB++E,EAAY9+E,EAAIa,KAAKb,EACrB8+E,EAAY99C,EAAIngC,KAAKmgC,EACrB89C,EAAYhwD,EAAIjuB,KAAKiuB,C,CAOzBzmB,QACI,IAAIy2E,EAAuB,IAAI32B,QAE/B,OADAtnD,KAAK8qB,QAAQmzD,GACNA,C,CAUXjnF,YAAY4M,EAAYC,EAAYq4D,EAAW52D,GAC3C,IAAIwiE,EAAalkE,EAAE1E,EAAG6oE,EAAankE,EAAEzE,EAAG++E,EAAat6E,EAAEu8B,EAAGg+C,EAAav6E,EAAEqqB,EACzE3oB,EAAIpG,EAAI4oE,EAAK5L,GAAKr4D,EAAE3E,EAAI4oE,GACxBxiE,EAAInG,EAAI4oE,EAAK7L,GAAKr4D,EAAE1E,EAAI4oE,GACxBziE,EAAI66B,EAAI+9C,EAAKhiB,GAAKr4D,EAAEs8B,EAAI+9C,GACxB54E,EAAI2oB,EAAIkwD,EAAKjiB,GAAKr4D,EAAEoqB,EAAIkwD,E,CAS5BnnF,uBAAuBovD,EAAkBg4B,EAAiB94E,GACtD,IAAI+4E,EAAaj4B,EAAQlnD,EACrBo/E,EAAal4B,EAAQjnD,EACrBo/E,EAAan4B,EAAQjmB,EACrBq+C,EAAap4B,EAAQn4B,EAErBwwD,EAAmBL,EAAKzxC,SAE5BrnC,EAAIpG,EAAIm/E,EAAKI,EAAG,GAAKH,EAAKG,EAAG,GAAKF,EAAKE,EAAG,GAAKD,EAAKC,EAAG,IACvDn5E,EAAInG,EAAIk/E,EAAKI,EAAG,GAAKH,EAAKG,EAAG,GAAKF,EAAKE,EAAG,GAAKD,EAAKC,EAAG,IACvDn5E,EAAI66B,EAAIk+C,EAAKI,EAAG,GAAKH,EAAKG,EAAG,GAAKF,EAAKE,EAAG,IAAMD,EAAKC,EAAG,IACxDn5E,EAAI2oB,EAAIowD,EAAKI,EAAG,GAAKH,EAAKG,EAAG,GAAKF,EAAKE,EAAG,IAAMD,EAAKC,EAAG,G,CAS5DznF,cAAc4M,EAAYC,GACtB,OAAOm5E,YAAYQ,UAAUjgF,KAAKglE,IAAI3+D,EAAE1E,GAAI3B,KAAKglE,IAAI1+D,EAAE3E,KAAO89E,YAAYQ,UAAUjgF,KAAKglE,IAAI3+D,EAAEzE,GAAI5B,KAAKglE,IAAI1+D,EAAE1E,KAAO69E,YAAYQ,UAAUjgF,KAAKglE,IAAI3+D,EAAEu8B,GAAI5iC,KAAKglE,IAAI1+D,EAAEs8B,KAAO68C,YAAYQ,UAAUjgF,KAAKglE,IAAI3+D,EAAEqqB,GAAI1wB,KAAKglE,IAAI1+D,EAAEoqB,G,CAQhOzD,MAAMvsB,GACF,OAAOqpD,QAAQp+C,OAAOlJ,KAAK/B,E,CAO/BhC,SACI,OAAOsB,KAAK4I,KAAKnG,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,EAAIngC,KAAKiuB,EAAIjuB,KAAKiuB,E,CAOzFywD,gBAEI,OAAO1+E,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,EAAIngC,KAAKiuB,EAAIjuB,KAAKiuB,C,CAQ/Ej3B,iBAAiB85C,EAAYxrC,GACzB,IAAI9G,EAAcsyC,EAAE70C,SACpB,GAAIuC,EAAM,EAAG,CACT,IAAImgF,EAAkB,EAAMngF,EAC5B8G,EAAIpG,EAAI4xC,EAAE5xC,EAAIy/E,EACdr5E,EAAInG,EAAI2xC,EAAE3xC,EAAIw/E,EACdr5E,EAAI66B,EAAI2Q,EAAE3Q,EAAIw+C,EACdr5E,EAAI2oB,EAAI6iB,EAAE7iB,EAAI0wD,CACjB,C,CASL3nF,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAChBoG,EAAInG,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EAChBmG,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,EAChB76B,EAAI2oB,EAAIrqB,EAAEqqB,EAAIpqB,EAAEoqB,C,CASpBj3B,gBAAgB4M,EAAYC,EAAYyB,GACpCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAChBoG,EAAInG,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EAChBmG,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,EAChB76B,EAAI2oB,EAAIrqB,EAAEqqB,EAAIpqB,EAAEoqB,C,CASpBj3B,gBAAgB4M,EAAYC,EAAYyB,GACpCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAChBoG,EAAInG,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EAChBmG,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,EAChB76B,EAAI2oB,EAAIrqB,EAAEqqB,EAAIpqB,EAAEoqB,C,CASpBj3B,aAAa4M,EAAYC,EAAWyB,GAChCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EACdyB,EAAInG,EAAIyE,EAAEzE,EAAI0E,EACdyB,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EACdyB,EAAI2oB,EAAIrqB,EAAEqqB,EAAIpqB,C,CAUlB7M,aAAaiH,EAAgB8K,EAAcD,EAAcxD,GACrD,IAAIpG,EAAYjB,EAAMiB,EAClBC,EAAYlB,EAAMkB,EAClBghC,EAAYliC,EAAMkiC,EAClBlS,EAAYhwB,EAAMgwB,EAElB2wD,EAAgB71E,EAAI7J,EACpB2/E,EAAgB91E,EAAI5J,EACpB2/E,EAAgB/1E,EAAIo3B,EACpB4+C,EAAgBh2E,EAAIklB,EAEpB+wD,EAAgBl2E,EAAI5J,EACpB+/E,EAAgBn2E,EAAI3J,EACpB+/E,EAAgBp2E,EAAIq3B,EACpBg/C,EAAgBr2E,EAAImlB,EAGxB/uB,GADAA,EAAKA,EAAI8/E,EAASA,EAAQ9/E,GACjB0/E,EAASA,EAAQ1/E,EAG1BC,GADAA,EAAKA,EAAI8/E,EAASA,EAAQ9/E,GACjB0/E,EAASA,EAAQ1/E,EAG1BghC,GADAA,EAAKA,EAAI++C,EAASA,EAAQ/+C,GACjB2+C,EAASA,EAAQ3+C,EAG1BlS,GADAA,EAAKA,EAAIkxD,EAASA,EAAQlxD,GACjB8wD,EAASA,EAAQ9wD,EAE1B3oB,EAAIpG,EAAIA,EACRoG,EAAInG,EAAIA,EACRmG,EAAI66B,EAAIA,EACR76B,EAAI2oB,EAAIA,C,CASZj3B,uBAAuBooF,EAAiBC,GACpC,IAAIngF,EAAYkgF,EAAOlgF,EAAImgF,EAAOngF,EAC9BC,EAAYigF,EAAOjgF,EAAIkgF,EAAOlgF,EAC9BghC,EAAYi/C,EAAOj/C,EAAIk/C,EAAOl/C,EAC9BlS,EAAYmxD,EAAOnxD,EAAIoxD,EAAOpxD,EAElC,OAAQ/uB,EAAIA,EAAMC,EAAIA,EAAMghC,EAAIA,EAAMlS,EAAIA,C,CAS9Cj3B,gBAAgBooF,EAAiBC,GAC7B,IAAIngF,EAAYkgF,EAAOlgF,EAAImgF,EAAOngF,EAC9BC,EAAYigF,EAAOjgF,EAAIkgF,EAAOlgF,EAC9BghC,EAAYi/C,EAAOj/C,EAAIk/C,EAAOl/C,EAC9BlS,EAAYmxD,EAAOnxD,EAAIoxD,EAAOpxD,EAElC,OAAO1wB,KAAK4I,KAAMjH,EAAIA,EAAMC,EAAIA,EAAMghC,EAAIA,EAAMlS,EAAIA,E,CASxDj3B,WAAW4M,EAAYC,GACnB,OAAQD,EAAE1E,EAAI2E,EAAE3E,EAAM0E,EAAEzE,EAAI0E,EAAE1E,EAAMyE,EAAEu8B,EAAIt8B,EAAEs8B,EAAMv8B,EAAEqqB,EAAIpqB,EAAEoqB,C,CAS9Dj3B,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI3B,KAAKwL,IAAInF,EAAE1E,EAAG2E,EAAE3E,GACxBoG,EAAInG,EAAI5B,KAAKwL,IAAInF,EAAEzE,EAAG0E,EAAE1E,GACxBmG,EAAI66B,EAAI5iC,KAAKwL,IAAInF,EAAEu8B,EAAGt8B,EAAEs8B,GACxB76B,EAAI2oB,EAAI1wB,KAAKwL,IAAInF,EAAEqqB,EAAGpqB,EAAEoqB,E,CAS5Bj3B,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI3B,KAAKuL,IAAIlF,EAAE1E,EAAG2E,EAAE3E,GACxBoG,EAAInG,EAAI5B,KAAKuL,IAAIlF,EAAEzE,EAAG0E,EAAE1E,GACxBmG,EAAI66B,EAAI5iC,KAAKuL,IAAIlF,EAAEu8B,EAAGt8B,EAAEs8B,GACxB76B,EAAI2oB,EAAI1wB,KAAKuL,IAAIlF,EAAEqqB,EAAGpqB,EAAEoqB,E,CAG5B0vD,iBAAiBC,EAA+B,MACxCA,GACM59E,KAAM2sC,SAAWixC,EACjB59E,KAAM2sC,SAAS,GAAK3sC,KAAKd,EACzBc,KAAM2sC,SAAS,GAAK3sC,KAAKb,EACzBa,KAAM2sC,SAAS,GAAK3sC,KAAKmgC,EACzBngC,KAAM2sC,SAAS,GAAK3sC,KAAKiuB,GAGzBjuB,KAAM2sC,SAAW,IAAItxB,aAAa,CAACrb,KAAKd,EAAGc,KAAKb,EAAGa,KAAKmgC,EAAGngC,KAAKiuB,IAE1Em5B,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,E,EAnX1BsnD,QAAAy2B,KAA0B,IAAIz2B,QAG9BA,QAAA02B,IAAyB,IAAI12B,QAAQ,EAAK,EAAK,EAAK,GAGpDA,QAAAg4B,MAA2B,IAAIh4B,QAAQ,EAAK,EAAK,EAAK,GAGtDA,QAAAi4B,MAA2B,IAAIj4B,QAAQ,EAAK,EAAK,EAAK,GAGtDA,QAAAk4B,MAA2B,IAAIl4B,QAAQ,EAAK,EAAK,EAAK,GAGtDA,QAAAm4B,MAA2B,IAAIn4B,QAAQ,EAAK,EAAK,EAAK,GAG/DA,QAAAo4B,SAAoB,IAAIp4B,QAAQ,EAAK,EAAK,EAAK,G,MCpB7CD,QAuUT9qD,YAAY2C,EAAY,EAAGC,EAAY,EAAGghC,EAAY,GAClDngC,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,C,CAtTbnpC,uBAAuBooF,EAAiBC,GACpC,IAAIngF,EAAYkgF,EAAOlgF,EAAImgF,EAAOngF,EAC9BC,EAAYigF,EAAOjgF,EAAIkgF,EAAOlgF,EAC9BghC,EAAYi/C,EAAOj/C,EAAIk/C,EAAOl/C,EAClC,OAAQjhC,EAAIA,EAAMC,EAAIA,EAAMghC,EAAIA,C,CASpCnpC,gBAAgBooF,EAAiBC,GAC7B,IAAIngF,EAAYkgF,EAAOlgF,EAAImgF,EAAOngF,EAC9BC,EAAYigF,EAAOjgF,EAAIkgF,EAAOlgF,EAC9BghC,EAAYi/C,EAAOj/C,EAAIk/C,EAAOl/C,EAClC,OAAO5iC,KAAK4I,KAAMjH,EAAIA,EAAMC,EAAIA,EAAMghC,EAAIA,E,CAS9CnpC,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI3B,KAAKwL,IAAInF,EAAE1E,EAAG2E,EAAE3E,GACxBoG,EAAInG,EAAI5B,KAAKwL,IAAInF,EAAEzE,EAAG0E,EAAE1E,GACxBmG,EAAI66B,EAAI5iC,KAAKwL,IAAInF,EAAEu8B,EAAGt8B,EAAEs8B,E,CAS5BnpC,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI3B,KAAKuL,IAAIlF,EAAE1E,EAAG2E,EAAE3E,GACxBoG,EAAInG,EAAI5B,KAAKuL,IAAIlF,EAAEzE,EAAG0E,EAAE1E,GACxBmG,EAAI66B,EAAI5iC,KAAKuL,IAAIlF,EAAEu8B,EAAGt8B,EAAEs8B,E,CAS5BnpC,qBAAqB+H,EAAiB4gF,EAAsBr6E,GACxD,IAAIpG,EAAYH,EAAOG,EAAGC,EAAYJ,EAAOI,EAAGghC,EAAYphC,EAAOohC,EAAG8mC,EAAa0Y,EAASzgF,EAAG0gF,EAAaD,EAASxgF,EAAG0gF,EAAaF,EAASx/C,EAAG2/C,EAAaH,EAAS1xD,EAEnK8xD,EAAaD,EAAK5gF,EAAI0gF,EAAKz/C,EAAI0/C,EAAK1gF,EAAG6gF,EAAaF,EAAK3gF,EAAI0gF,EAAK3gF,EAAI+nE,EAAK9mC,EAAG8/C,EAAaH,EAAK3/C,EAAI8mC,EAAK9nE,EAAIygF,EAAK1gF,EAAGghF,GAAcjZ,EAAK/nE,EAAI0gF,EAAKzgF,EAAI0gF,EAAK1/C,EAE9J76B,EAAIpG,EAAI6gF,EAAKD,EAAKI,GAAMjZ,EAAK+Y,GAAMH,EAAKI,GAAML,EAC9Ct6E,EAAInG,EAAI6gF,EAAKF,EAAKI,GAAMN,EAAKK,GAAMhZ,EAAK8Y,GAAMF,EAC9Cv6E,EAAI66B,EAAI8/C,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAM/Y,C,CAQlDjwE,oBAAoB4M,GAChB,IAAI1E,EAAY0E,EAAE1E,EAAGC,EAAYyE,EAAEzE,EAAGghC,EAAYv8B,EAAEu8B,EACpD,OAAO5iC,KAAK4I,KAAKjH,EAAIA,EAAIC,EAAIA,EAAIghC,EAAIA,E,CAQzCnpC,2BAA2B4M,GACvB,IAAI1E,EAAY0E,EAAE1E,EAAGC,EAAYyE,EAAEzE,EAAGghC,EAAYv8B,EAAEu8B,EACpD,OAAOjhC,EAAIA,EAAIC,EAAIA,EAAIghC,EAAIA,C,CAQ/BnpC,iBAAiB85C,EAAYxrC,GACzB,IAAIpG,EAAY4xC,EAAE5xC,EAAGC,EAAY2xC,EAAE3xC,EAAGghC,EAAY2Q,EAAE3Q,EAChD3hC,EAAcU,EAAIA,EAAIC,EAAIA,EAAIghC,EAAIA,EAClC3hC,EAAM,IACNA,EAAM,EAAIjB,KAAK4I,KAAK3H,GACpB8G,EAAIpG,EAAIA,EAAIV,EACZ8G,EAAInG,EAAIA,EAAIX,EACZ8G,EAAI66B,EAAIA,EAAI3hC,E,CAYpBxH,gBAAgB4M,EAAYC,EAAYyB,GACpCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAChBoG,EAAInG,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EAChBmG,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,C,CASpBnpC,aAAa4M,EAAYC,EAAWyB,GAChCA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EACdyB,EAAInG,EAAIyE,EAAEzE,EAAI0E,EACdyB,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,C,CAUlB7M,YAAY4M,EAAYC,EAAYq4D,EAAW52D,GAC3C,IAAIwiE,EAAalkE,EAAE1E,EAAG6oE,EAAankE,EAAEzE,EAAG++E,EAAat6E,EAAEu8B,EACvD76B,EAAIpG,EAAI4oE,EAAK5L,GAAKr4D,EAAE3E,EAAI4oE,GACxBxiE,EAAInG,EAAI4oE,EAAK7L,GAAKr4D,EAAE1E,EAAI4oE,GACxBziE,EAAI66B,EAAI+9C,EAAKhiB,GAAKr4D,EAAEs8B,EAAI+9C,E,CAS5BlnF,uBAAuBmpF,EAAiB7pB,EAAsBj3D,GAC1D,IAAI+gF,EAAwB/4B,QAAQg5B,aACpCh5B,QAAQi5B,gBAAgBH,EAAQ7pB,EAAW8pB,GAC3C/gF,EAAOH,EAAIkhF,EAAalhF,EACxBG,EAAOF,EAAIihF,EAAajhF,EACxBE,EAAO8gC,EAAIigD,EAAajgD,C,CAS5BnpC,uBAAuBmpF,EAAiB7pB,EAAsBj3D,GAC1D,IAAIkhF,EAAkBJ,EAAOjhF,EACzBshF,EAAkBL,EAAOhhF,EACzBshF,EAAkBN,EAAOhgD,EAEzBugD,EAA8BpqB,EAAU3pB,SAC5CttC,EAAOH,EAAKqhF,EAAUG,EAAc,GAAOF,EAAUE,EAAc,GAAOD,EAAUC,EAAc,GAAMA,EAAc,IACtHrhF,EAAOF,EAAKohF,EAAUG,EAAc,GAAOF,EAAUE,EAAc,GAAOD,EAAUC,EAAc,GAAMA,EAAc,IACtHrhF,EAAO8gC,EAAKogD,EAAUG,EAAc,GAAOF,EAAUE,EAAc,GAAOD,EAAUC,EAAc,IAAOA,EAAc,IACvHrhF,EAAO4uB,EAAKsyD,EAAUG,EAAc,GAAOF,EAAUE,EAAc,GAAOD,EAAUC,EAAc,IAAOA,EAAc,G,CAS3H1pF,uBAAuBo9B,EAAiBkiC,EAAsBj3D,GAC1D,IAAIshF,EAAkBvsD,EAAOl1B,EACzB0hF,EAAkBxsD,EAAOj1B,EACzB0hF,EAAkBzsD,EAAO+L,EAEzBugD,EAA8BpqB,EAAU3pB,SAC5CttC,EAAOH,EAAKyhF,EAAUD,EAAc,GAAOE,EAAUF,EAAc,GAAOG,EAAUH,EAAc,GAClGrhF,EAAOF,EAAKwhF,EAAUD,EAAc,GAAOE,EAAUF,EAAc,GAAOG,EAAUH,EAAc,GAClGrhF,EAAO8gC,EAAKwgD,EAAUD,EAAc,GAAOE,EAAUF,EAAc,GAAOG,EAAUH,EAAc,G,CAStG1pF,2BAA2B8pF,EAAqBxqB,EAAsBj3D,GAClE,IAAI0hF,EAAsBD,EAAW5hF,EACjC8hF,EAAsBF,EAAW3hF,EACjC8hF,EAAsBH,EAAW3gD,EAEjCugD,EAA8BpqB,EAAU3pB,SACxC1e,EAAY8yD,EAAcL,EAAc,GAAKM,EAAcN,EAAc,GAAKO,EAAcP,EAAc,IAAMA,EAAc,IAClIrhF,EAAOH,GAAK6hF,EAAcL,EAAc,GAAKM,EAAcN,EAAc,GAAKO,EAAcP,EAAc,GAAKA,EAAc,KAAOzyD,EACpI5uB,EAAOF,GAAK4hF,EAAcL,EAAc,GAAKM,EAAcN,EAAc,GAAKO,EAAcP,EAAc,GAAKA,EAAc,KAAOzyD,EACpI5uB,EAAO8gC,GAAK4gD,EAAcL,EAAc,GAAKM,EAAcN,EAAc,GAAKO,EAAcP,EAAc,IAAMA,EAAc,KAAOzyD,C,CAUzIj3B,aAAaiH,EAAgB8K,EAAcD,EAAcxD,GACrD,IAAIpG,EAAYjB,EAAMiB,EAClBC,EAAYlB,EAAMkB,EAClBghC,EAAYliC,EAAMkiC,EAElBy+C,EAAgB71E,EAAI7J,EACpB2/E,EAAgB91E,EAAI5J,EACpB2/E,EAAgB/1E,EAAIo3B,EAEpB6+C,EAAgBl2E,EAAI5J,EACpB+/E,EAAgBn2E,EAAI3J,EACpB+/E,EAAgBp2E,EAAIq3B,EAGxBjhC,GADAA,EAAKA,EAAI8/E,EAASA,EAAQ9/E,GACjB0/E,EAASA,EAAQ1/E,EAG1BC,GADAA,EAAKA,EAAI8/E,EAASA,EAAQ9/E,GACjB0/E,EAASA,EAAQ1/E,EAG1BghC,GADAA,EAAKA,EAAI++C,EAASA,EAAQ/+C,GACjB2+C,EAASA,EAAQ3+C,EAE1B76B,EAAIpG,EAAIA,EACRoG,EAAInG,EAAIA,EACRmG,EAAI66B,EAAIA,C,CASZnpC,WAAW4M,EAAYC,EAAYyB,GAC/BA,EAAIpG,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EAChBoG,EAAInG,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EAChBmG,EAAI66B,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,C,CASpBnpC,gBAAgB4M,EAAYC,EAAYiyB,GACpCA,EAAE52B,EAAI0E,EAAE1E,EAAI2E,EAAE3E,EACd42B,EAAE32B,EAAIyE,EAAEzE,EAAI0E,EAAE1E,EACd22B,EAAEqK,EAAIv8B,EAAEu8B,EAAIt8B,EAAEs8B,C,CASlBnpC,aAAa4M,EAAYC,EAAYiyB,GACjC,IAAIgyC,EAAalkE,EAAE1E,EAAG6oE,EAAankE,EAAEzE,EAAG++E,EAAat6E,EAAEu8B,EAAG6nC,EAAankE,EAAE3E,EAAG+oE,EAAapkE,EAAE1E,EAAG+hF,EAAar9E,EAAEs8B,EAC7GrK,EAAE52B,EAAI6oE,EAAKmZ,EAAKhD,EAAKjW,EACrBnyC,EAAE32B,EAAI++E,EAAKlW,EAAKF,EAAKoZ,EACrBprD,EAAEqK,EAAI2nC,EAAKG,EAAKF,EAAKC,C,CASzBhxE,WAAW4M,EAAYC,GACnB,OAAQD,EAAE1E,EAAI2E,EAAE3E,EAAM0E,EAAEzE,EAAI0E,EAAE1E,EAAMyE,EAAEu8B,EAAIt8B,EAAEs8B,C,CAShDnpC,cAAc4M,EAAYC,GACtB,OAAOm5E,YAAYQ,UAAU55E,EAAE1E,EAAG2E,EAAE3E,IAAM89E,YAAYQ,UAAU55E,EAAEzE,EAAG0E,EAAE1E,IAAM69E,YAAYQ,UAAU55E,EAAEu8B,EAAGt8B,EAAEs8B,E,CA2B9G3V,MAAMvsB,GACF,OAAOopD,QAAQn+C,OAAOlJ,KAAM/B,E,CAShCgtB,SAAS/rB,EAAWC,EAAWghC,GAI3B,OAHAngC,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,EACFngC,I,CAUXya,IAAIvb,EAAWC,EAAWghC,GAItB,OAHAngC,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,EACFngC,I,CAQXkrB,UAAU7sB,EAAYoiB,EAAiB,GACnCzgB,KAAKd,EAAIb,EAAIoiB,EAAS,GACtBzgB,KAAKb,EAAId,EAAIoiB,EAAS,GACtBzgB,KAAKmgC,EAAI9hC,EAAIoiB,EAAS,E,CAO1B0K,UACI,MAAO,CAACnrB,KAAKd,EAAGc,KAAKb,EAAGa,KAAKmgC,E,CAQjCs9C,QAAQp/E,EAAmBoiB,EAAiB,GACxCpiB,EAAIoiB,EAAS,GAAKzgB,KAAKd,EACvBb,EAAIoiB,EAAS,GAAKzgB,KAAKb,EACvBd,EAAIoiB,EAAS,GAAKzgB,KAAKmgC,C,CAO3BlkC,SACI,OAAOsB,KAAK4I,KAAKnG,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,E,CAOvEu+C,gBACI,OAAO1+E,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,C,CAS7DghD,KAAKt9E,EAAYyB,GAIb,OAHAA,EAAIpG,EAAIc,KAAKd,EAAI2E,EAAE3E,EACnBoG,EAAInG,EAAIa,KAAKb,EAAI0E,EAAE1E,EACnBmG,EAAI66B,EAAIngC,KAAKmgC,EAAIt8B,EAAEs8B,EACZ76B,C,CASX87E,KAAKv9E,EAAYyB,GAIb,OAHAA,EAAIpG,EAAIc,KAAKd,EAAI2E,EAAE3E,EACnBoG,EAAInG,EAAIa,KAAKb,EAAI0E,EAAE1E,EACnBmG,EAAI66B,EAAIngC,KAAKmgC,EAAIt8B,EAAEs8B,EACZ76B,C,CASXb,MAAMqsC,EAAWxrC,GAIb,OAHAA,EAAIpG,EAAIc,KAAKd,EAAI4xC,EACjBxrC,EAAInG,EAAIa,KAAKb,EAAI2xC,EACjBxrC,EAAI66B,EAAIngC,KAAKmgC,EAAI2Q,EACVxrC,C,CAOX2C,YACI,IAAI/I,EAAIc,KAAKd,EAAGC,EAAIa,KAAKb,EAAGghC,EAAIngC,KAAKmgC,EACrC,IAAI3hC,EAAMU,EAAIA,EAAIC,EAAIA,EAAIghC,EAAIA,EAO9B,OANI3hC,EAAM,IACNA,EAAM,EAAIjB,KAAK4I,KAAK3H,GACpBwB,KAAKd,EAAIA,EAAIV,EACbwB,KAAKb,EAAIA,EAAIX,EACbwB,KAAKmgC,EAAIA,EAAI3hC,GAEVwB,I,CAQXqhF,IAAIx9E,GACA,OAAQ7D,KAAKd,EAAI2E,EAAE3E,EAAMc,KAAKb,EAAI0E,EAAE1E,EAAMa,KAAKmgC,EAAIt8B,EAAEs8B,C,CASzDmhD,MAAMz9E,EAAYiyB,GACd,IAAIgyC,EAAK9nE,KAAKd,EAAG6oE,EAAK/nE,KAAKb,EAAG++E,EAAKl+E,KAAKmgC,EAAG6nC,EAAKnkE,EAAE3E,EAAG+oE,EAAKpkE,EAAE1E,EAAG+hF,EAAKr9E,EAAEs8B,EAItE,OAHArK,EAAE52B,EAAI6oE,EAAKmZ,EAAKhD,EAAKjW,EACrBnyC,EAAE32B,EAAI++E,EAAKlW,EAAKF,EAAKoZ,EACrBprD,EAAEqK,EAAI2nC,EAAKG,EAAKF,EAAKC,EACdlyC,C,CAOXhL,QAAQC,GACJ,IAAIw2D,EAAiCx2D,EACrCw2D,EAAYriF,EAAIc,KAAKd,EACrBqiF,EAAYpiF,EAAIa,KAAKb,EACrBoiF,EAAYphD,EAAIngC,KAAKmgC,C,CAOzB34B,QACI,IAAI+5E,EAAuB,IAAIl6B,QAE/B,OADArnD,KAAK8qB,QAAQy2D,GACNA,C,CAMXC,YACIxhF,KAAKd,EAAI,EACTc,KAAKb,EAAI,EACTa,KAAKmgC,EAAI,C,EAtgBNknB,QAAAg5B,aAAe,IAAI/4B,QAEVD,QAAI02B,KAAsB,IAAI12B,QAAQ,EAAK,EAAK,GAChDA,QAAG22B,IAAsB,IAAI32B,QAAQ,EAAK,EAAK,GAC/CA,QAAao6B,cAAsB,IAAIp6B,SAAS,EAAG,EAAG,GACtDA,QAAKi4B,MAAsB,IAAIj4B,QAAQ,EAAG,EAAG,GAC7CA,QAAKk4B,MAAsB,IAAIl4B,QAAQ,EAAG,EAAG,GAC7CA,QAAKm4B,MAAsB,IAAIn4B,QAAQ,EAAG,EAAG,GAC7CA,QAASq6B,UAAsB,IAAIr6B,QAAQ,EAAG,GAAI,GAClDA,QAASs6B,UAAsB,IAAIt6B,QAAQ,EAAG,EAAG,GACjDA,QAAEu6B,GAAsB,IAAIv6B,QAAQ,EAAG,EAAG,G,MCfjDw6B,SAoDT7qF,qBAAqBqR,EAAeC,GAChCu5E,SAASC,kBAAmB,EAC5BD,SAASE,aAAe15E,EACxBw5E,SAASG,cAAgB15E,C,EAnDtBu5E,SAAkBI,oBAAY,EAI9BJ,SAAiBK,mBAAY,EAI7BL,SAAyBM,2BAAG,EAI5BN,SAAUjlC,WAAW,EAIrBilC,SAAgBC,kBAAY,EAI5BD,SAAoBO,qBAAW,IAI/BP,SAAoBQ,qBAAW,GAI/BR,SAAgBS,kBAAY,EAI5BT,SAAaU,cAAW,GAIxBV,SAAiBW,kBAAY,IAAIn7B,QAAQ,GAAI,GAAI,IAKjDw6B,SAAmBY,oBAAW,GAe9BZ,SAAUa,YAAY,EAEtBb,SAAoBc,qBAAG,EAEvBd,SAAce,eAAG,GAEjBf,SAAkBgB,mBAAG,GAOrBhB,SAAYE,cAAY,EAExBF,SAAaG,eAAY,EAOzBH,SAAmBiB,qBAAY,EAG1CrrF,OAAOc,WAAY,EClFb,MAAOwqF,sBAAsB9tE,YAiK/B1Y,YAAY8L,EAAeC,EAAgB06E,EAAiCC,EAAiCv6D,GAA0B,EAAOw6D,EAAuB,EAAGC,GAAgC,EAAO5/D,GAAgB,GAC3NlR,MAAMhK,EAAOC,EAAQ06E,GA1EzBhjF,KAAOojF,SAAY,EAEnBpjF,KAAeqjF,iBAAY,EAInBrjF,KAAqBsjF,uBAAY,EAsErCtjF,KAAKmV,YAAcoO,EAEnBvjB,KAAKmsB,oBAAsC,MAAf82D,EAAsBr5D,qBAAmB8D,KAAOu1D,EAE5EjjF,KAAK8tB,gBAAkBpF,EACvB1oB,KAAKujF,cAAgBL,EACrBljF,KAAKsjF,sBAAwBH,EAG7BnjF,KAAKwjF,qB,CAxKEn3D,2BACP,OAAO02D,cAAcz2D,c,CAIzBt1B,mCAAmCiH,GAC/B8kF,cAAcU,gBAAkBxlF,C,CAkBpCjH,sBAAsBqR,EAAeC,EAAgB06E,EAAiCC,EAAiCttE,GAAkB,EAAOutE,EAAuB,EAAGQ,GAAwB,EAAOngE,GAAgB,GAGrN5N,EAASA,GAAoC,IAAzBtN,EAASA,EAAQ,IAAyC,IAA3BC,EAAUA,EAAS,GAEtE,IAAI9C,EAAIu9E,cAAcY,MAAM1nF,OAC5B,IAAK,IAAIsO,EAAQ,EAAGA,EAAQ/E,EAAG+E,IAAS,CACpC,IAAIyjB,EAAK+0D,cAAcY,MAAMp5E,GAE7B,GAAIyjB,EAAG3lB,OAASA,GAAS2lB,EAAG1lB,QAAUA,GAAU0lB,EAAGg1D,aAAeA,GAAeh1D,EAAGjC,oBAAsBk3D,GAAej1D,EAAGF,iBAAmBnY,GAAUqY,EAAGk1D,cAAgBA,GAAgBl1D,EAAGm1D,sBAAwBO,GAAgB11D,EAAG7Y,aAAeoO,EAAM,CAC3PyK,EAAGo1D,SAAU,EACb,IAAIjoE,EAAM4nE,cAAcY,MAAMn+E,EAAI,GAIlC,OAHAu9E,cAAcY,MAAMp5E,GAAS4Q,EAC7B4nE,cAAcY,MAAM1nF,QAAU,EAC9B8mF,cAAca,aAAgB51D,EAAGhB,cAAcla,UAAY,KAAO,KAC3Dkb,CACV,CACJ,CAED,IAAIA,EAAK,IAAI+0D,cAAc16E,EAAOC,EAAQ06E,EAAaC,EAAattE,EAAQutE,EAAcQ,EAAcngE,GAExG,OADAyK,EAAGrb,MAAO,EACHqb,C,CAGXh3B,qBAAqBg3B,GACbA,EAAGo1D,SAAWp1D,EAAG9sB,YAErB6hF,cAAcY,MAAMtnF,KAAK2xB,GACzB+0D,cAAca,aAAgB51D,EAAGhB,cAAcla,UAAY,KAAO,KAClEkb,EAAGo1D,SAAU,E,CAGjBpsF,mBACI,KAAI+rF,cAAca,YAAc/B,SAASO,sBAAzC,CAGA,IAAK,IAAI3jF,KAAKskF,cAAcY,MACxBZ,cAAcY,MAAMllF,GAAG0E,UAE3B4/E,cAAcY,MAAQ,GACtBZ,cAAca,YAAc,CAL3B,C,CAaMC,8BACP,OAAOd,cAAce,iB,CAGdD,4BAAiB5lF,GACpBA,GAAS+B,KAAK8jF,oBAEd9jF,KAAK8jF,kBAAoB7lF,E,CAWtBklF,2BACP,OAAOnjF,KAAKsjF,qB,CAELH,yBAAqBllF,GAGxBA,IAAU+B,KAAK+jF,uBAEf/jF,KAAK+jF,qBAAuB,IAAI9uE,YAAYjV,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAK+rB,oBAE1E/rB,KAAK+jF,qBAAqBruE,WAAauN,mBAAiB6B,MAGxD9kB,KAAK+jF,qBAAqBnuE,SAAW9L,OAAOyM,eAAeytE,4BAA4B/gE,mBAAiB6B,MAAO9kB,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAK+rB,oBAAoB,GAAO,GAExKjiB,OAAOyM,eAAe0tE,mCAAmCjkF,KAAKgtB,cAAehtB,KAAK+jF,qBAAqBnuE,WAI3G5V,KAAKsjF,sBAAwBrlF,C,CAK7BimF,0BACA,OAAOlkF,KAAK+jF,oB,CAKZf,kBACA,OAAOhjF,KAAKgtB,cAAcg2D,W,CAI1Bj3D,yBACA,OAAO/rB,KAAKgtB,cAAcjB,kB,CAInBm3D,mBACP,OAAOljF,KAAKgtB,cAAca,Q,CAG1B9L,aACA,OAAO/hB,KAAKgtB,cAAcY,O,CAG1BhB,cACA,OAAO5sB,KAAKgtB,cAAca,Q,CAG1BnF,qBACA,OAAO1oB,KAAKgtB,cAAcc,e,CA4B9B01D,sBACIxjF,KAAK0V,WAAauN,mBAAiB6B,MACnC9kB,KAAKgtB,cAAgBljB,OAAOyM,eAAewX,2BAA2B/tB,KAAKqI,MAAOrI,KAAKsI,OAAiCtI,KAAKsV,QAAStV,KAAKmsB,oBAAqBnsB,KAAK8tB,gBAAiB9tB,KAAKmV,YAAanV,KAAKujF,eAG7MvjF,KAAK8tB,gBAAkB9tB,KAAKgtB,cAAcc,gBAC1C9tB,KAAK4V,SAAW5V,KAAKgtB,cAAcC,UAAU,GAE7CjtB,KAAKmjF,qBAAuBnjF,KAAKsjF,qB,CAIrCa,SAAS97E,EAAeC,EAAgB06E,EAAiCC,EAAiCv6D,GAA0B,EAAOw6D,EAAuB,EAAGC,GAAgC,EAAO5/D,GAAgB,GACxNvjB,KAAKoV,OAAS/M,EACdrI,KAAKqV,QAAU/M,EACftI,KAAKsV,QAA8B0tE,EAEnChjF,KAAKmV,YAAcoO,EAEnBvjB,KAAKmsB,oBAAsC,MAAf82D,EAAsBr5D,qBAAmB8D,KAAOu1D,EAE5EjjF,KAAK8tB,gBAAkBpF,EACvB1oB,KAAKujF,cAAgBL,EACrBljF,KAAKsjF,sBAAwBH,EAE7BnjF,KAAK2U,mBAGL3U,KAAKwjF,qB,CAGT32D,SACIk2D,cAAcU,gBAAgBt7D,QAAUnoB,KAAKqjF,gBACzCN,cAAcz2D,gBAAkBtsB,OAChC+iF,cAAcz2D,gBAAkBy2D,cAAcz2D,eAAeQ,OAC7Di2D,cAAcz2D,eAAiBtsB,KAC/B8J,OAAOyM,eAAe6X,iBAAiBpuB,KAAKgtB,e,CAIpDF,OACIi2D,cAAcz2D,eAAiB,KAE/BxiB,OAAOyM,eAAeqY,mBAAmB5uB,KAAKgtB,eAC7ChtB,KAAoB,kBAAM+iF,cAAcU,gBAAgBt7D,SAAU,E,CAGvEgF,QAAQ5E,EAAiBC,EAAiBngB,EAAeC,EAAgBhD,GAErE,OADAwE,OAAOyM,eAAe6tE,0BAA0BpkF,KAAKgtB,cAAezE,EAASC,EAASngB,EAAOC,EAAQhD,GAC9FA,C,CAGDqP,mB,MAEFouE,cAAcz2D,gBAAkBtsB,MAChCA,KAAK8sB,OAGT9sB,KAAKgtB,cAAc/T,UACnBjZ,KAAKgtB,cAAgB,KACM,QAA3BtqB,EAAA1C,KAAK+jF,4BAAsB,IAAArhF,KAAAS,UAC3BnD,KAAK+jF,qBAAuB,I,EA1OfhB,cAAcz2D,eAAkB,KAMhCy2D,cAAeU,gBAAQ,GAKzBV,cAAKY,MAAoB,GACzBZ,cAAWa,YAAW,EZGzC,SAAKxS,GACDA,IAAA,eACAA,IAAA,iBACAA,IAAA,eACAA,IAAA,yBACAA,IAAA,iBACAA,IAAA,qBACAA,IAAA,2BACAA,IAAA,yBACAA,IAAA,+BACAA,IAAA,2BACAA,IAAA,8BACAA,IAAA,oCACAA,IAAA,oDACAA,IAAA,gCACAA,IAAA,0BACAA,IAAA,0BACAA,IAAA,4BACAA,IAAA,kBACAA,IAAA,0BACAA,IAAA,oBACAA,IAAA,8BACAA,IAAA,wBACAA,IAAA,0BACAA,IAAA,8BACAA,IAAA,4BACAA,IAAA,sBACAA,IAAA,sBACAA,IAAA,oBACAA,IAAA,4BACAA,IAAA,gBACAA,IAAA,oBACAA,IAAA,kCACAA,IAAA,8BACAA,IAAA,kCACAA,IAAA,oEACAA,IAAA,4BACAA,IAAA,+BACH,CAtCD,CAAKA,MAsCJ,K,MAKYiT,cAwBT9nF,cAdQyD,KAAQskF,SAAW,EAQ3BtkF,KAAMyuC,OAAQ,KACNzuC,KAAmBukF,oBAAU,GAErCvkF,KAAAwkF,WAAqB,IAAI7gF,OAIrB3D,KAAKonB,WAAa,IAAKxrB,OAAe6oF,cAAe36E,OAAO+Y,aAAqBuE,YACjFpnB,KAAKskF,SAAW,OAChBtkF,KAAK0kF,qBAAuB,IAAI54D,sBAAsB,EAAG,EAAGlC,qBAAmB5S,SAAU4S,qBAAmB8D,MAAM,GAClH1tB,KAAKmgE,OAAM,E,CANfnpE,kB,CAQAmpE,MAAMwkB,GACF3kF,KAAKwhB,QAAU,IAAIzH,YAAY/Z,KAAKskF,UACpCtkF,KAAK4kF,OAAS,IAAItiE,WAAWtiB,KAAKwhB,SAClCxhB,KAAK6kF,OAAS,IAAIxpE,aAAarb,KAAKwhB,SACpCxhB,KAAK8kF,WAAa,IAAItrE,WAAWxZ,KAAKwhB,SAEtC,IAAIujE,EAAuBnpF,OAAeopF,UAAUC,qBAAqBjlF,KAAKwhB,QAAS6iE,cAAca,sBAAuBP,EAAsBN,cAAcc,4BAChKnlF,KAAKonB,WAAWg+D,uBAAuBL,GAEvC/kF,KAAK4kF,OAAO,GAAK,C,CAErBS,MAAMvmE,GACF,KAAK9e,KAAKskF,UAAYtkF,KAAK4kF,OAAO,IAAM,IAAO9lE,KAC/C9e,KAAKonB,WAAWk+D,eACZxmE,EAAK9e,KAAKskF,UACV,KAAM,S,CAKVzP,eACA,MAAO,E,CAIPA,aAAS52E,G,CAITsnF,cACA,MAAO,E,CAIPA,YAAQtnF,G,CAIRunF,iBACA,MAAO,E,CAIPA,eAAWvnF,G,CAIf02E,UAAUz1E,EAAWC,EAAWkJ,EAAeC,G,CAG3Cm9E,WAAOxnF,GACP+B,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAWq+D,OAASxnF,C,CAEzBwnF,aAEA,OADAzlF,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAWq+D,M,CAEvBzqD,aAAS3wB,GACLA,IACArK,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAWs+D,QAAWr7E,EAAe+c,W,CAG9C4T,eACAh7B,KAAKonB,WAAWk+D,eAChB,IAAIj7E,EAASrK,KAAKonB,WAAWs+D,QAE7B,OAAIr7E,GACArK,KAAK0kF,qBAAqBr8E,MAAQrI,KAAKonB,WAAW/e,MAClDrI,KAAK0kF,qBAAqBp8E,OAAStI,KAAKonB,WAAW9e,OACnDtI,KAAK0kF,qBAAqBt9D,WAAa/c,EACvCrK,KAAK0kF,qBAAqB13D,cAAgB3iB,EAAO2iB,cACjDhtB,KAAK0kF,qBAAqB9uE,SAAWvL,EAAO2iB,cAAcC,UAAU,GAC7DjtB,KAAK0kF,sBAET,I,CAEXt5C,MAAMntC,GAGF+B,KAAKi3D,aAAeh5D,C,CAExBg9B,QACIquB,YAAYgB,uBAAyBhB,YAAYgB,sBAAsBF,SAEvEpqD,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAW6T,O,CAGpBtwB,QAEI3K,KAAK2lF,MAAMvU,EAAsBvlD,OACjC7rB,KAAKonB,WAAWk+D,eAChBtlF,KAAKukF,oBAAoBtoF,OAAS,C,CAMtCkH,QAAQyiF,GAAkB,GACtB5lF,KAAKonB,WAAWk+D,eACZtlF,KAAK0kF,qBAAqBt9D,aAC1BpnB,KAAK0kF,qBAAqBt9D,WAAWy+D,UAAYD,GAErD5lF,KAAKonB,WAAWjkB,QAAQyiF,E,CAI5B5uF,2BAEI,IAAKqtF,cAAcyB,iBAAkB,CACjC,MAAMC,EAAM1B,cAAcyB,iBAAmBh8E,OAAO+Y,aAAa0M,0BACjEw2D,EAAIC,OAAOlpB,kBAAgBmpB,WAAW,GAEtCF,EAAIC,OAAOlpB,kBAAgBopB,cAAetpB,wBAAsBupB,KAChE5zD,UAAU0B,oBAAsB,KAEhC8xD,EAAIC,OAAOlpB,kBAAgBspB,UAAW,CAACt8D,cAAY4J,IAAK5J,cAAY6J,sBAEpEoyD,EAAIC,OAAOlpB,kBAAgBupB,WAAW,GAEtCN,EAAIC,OAAOlpB,kBAAgBwpB,WAAW,GAEtCP,EAAIC,OAAOlpB,kBAAgBypB,UAAU,GAErCR,EAAIC,OAAOlpB,kBAAgB0pB,UAAW3pB,WAAS4pB,MAClD,CACDpC,cAAcyB,iBAAiBY,WAC/B3D,cAAc12D,eAAiB02D,cAAc12D,cAAcS,OAC1DlxB,OAAe+qF,oBAChBr9B,YAAYgB,uBAAyBhB,YAAYgB,sBAAsBF,Q,CAEvE2Q,6BAAyB98D,GAEzB+B,KAAK4mF,aAAaxV,EAAsByV,+BAAgC5oF,E,CAGxE88D,+BAEA,OADA/6D,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAW2zC,wB,CAEvB0G,cAAUxjE,GACV,IAAI6F,EAAgB4tC,WAAWhqC,OAAOzJ,GACtC+B,KAAK8mF,OAAO1V,EAAsB2V,WAAYjjF,EAAE+tC,S,CAGhD4vB,gBAEA,OADAzhE,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAWq6C,S,CAEvBxK,gBAAYh5D,GACZ+B,KAAKgnF,OAAO5V,EAAsB/lC,MAAOptC,E,CAGzCg5D,kBAEA,OADAj3D,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAW6vC,W,CAE3BroB,OAEI5uC,KAAK2lF,MAAMvU,EAAsB6V,K,CAErC/5D,UAEIltB,KAAK2lF,MAAMvU,EAAsB8V,Q,CAErC/wB,cAAc5vD,GAEVvG,KAAK2lF,MAAMvU,EAAsB6V,K,CAErC5wB,kBAAkB9vD,EAAgBvC,EAAYC,GAE1CjE,KAAKmnF,YAAY/V,EAAsBj7B,UAAW5vC,EAAO3C,EAAG2C,EAAO1C,EAAG0C,EAAOzC,EAAGyC,EAAOxC,EAAGwC,EAAOvC,GAAKA,EAAIuC,EAAOtC,GAAKA,E,CAE1H8yD,iBAAiBxwD,GAEbvG,KAAK2lF,MAAMvU,EAAsB8V,Q,CAErC7tB,SAASn6D,EAAWC,EAAWkJ,EAAeC,GAE1CtI,KAAKonF,UAAUhW,EAAsBiW,UAAWnoF,EAAGC,EAAGkJ,EAAOC,E,CAEjEguD,UAAU1yD,EAAWC,EAAWC,EAAWC,EAAWC,EAAYC,GAE9DjE,KAAKmnF,YAAY/V,EAAsBj7B,UAAWvyC,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,E,CAEtEQ,MAAM21D,EAAgBC,GAClBr6D,KAAKsnF,QAAQlW,EAAsBmW,MAAOntB,EAAQC,E,CAGtDvD,YAAY/+B,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgBzK,EAAgB,YACtFmC,KAAKwnF,aAAazvD,IAIvB/3B,KAAKynF,oBAAoBrW,EAAsBsW,aAAe3vD,EAAYF,OAAOjiB,SAAShV,GAAI1B,EAAGC,EAAGkJ,EAAOC,EACpGyvB,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GACfO,EAAYP,GAAG,GAChB35B,E,CAEV8pF,yBAAyB5vD,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgBguD,EAA0BtyD,EAAYC,EAAYmnC,EAAe0vB,EAA0BtjC,EAAe35B,EAAgB,YAClN,GAAKmC,KAAKwnF,aAAazvD,GAAvB,CAaA/3B,KAAK4uC,OACL5uC,KAAKorC,MAAMA,GACX,IAAI4mB,EAAWx6B,GAAOO,EAAYP,GAC9B8+B,GACAt2D,KAAKmnF,YAAY/V,EAAsBj7B,UAAWmgB,EAAU1yD,EAAG0yD,EAAUzyD,EAAGyyD,EAAUxyD,EAAGwyD,EAAUvyD,EAAGuyD,EAAUtyD,GAAKA,EAAIsyD,EAAUryD,GAAKA,GACxIjE,KAAKynF,oBAAoBrW,EAAsBsW,aAAe3vD,EAAYF,OAAOjiB,SAAShV,GAAI1B,EAAGC,EAAGkJ,GAAS0vB,EAAI1vB,MAAOC,GAAUyvB,EAAIzvB,OAChI0pD,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJn0D,IAGNmC,KAAKynF,oBAAoBrW,EAAsBsW,aAAe3vD,EAAYF,OAAOjiB,SAAShV,GAAI1B,EAAI8E,EAAI7E,EAAI8E,EAAIoE,GAAS0vB,EAAI1vB,MAAOC,GAAUyvB,EAAIzvB,OAC1I0pD,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJn0D,GAEVmC,KAAKktB,SAvCJ,C,CA0CL06D,wBAAwB7vD,EAAc/zB,EAAYC,EAAYoE,EAAeC,EAAgBu/E,EAAiBC,EAAYC,EAAYlqF,GAClI,GAAKmC,KAAKwnF,aAAazvD,GAAvB,CAII,IAAAP,EAAKO,EAAIP,GAAgBO,EAAIF,OAAOxvB,MAAmB0vB,EAAIF,OAAOvvB,OAEtE,IAAI6lB,EAAc05D,EAAS,GACvBpwB,EAAeowB,EAAS,GACxBt/E,EAAgBs/E,EAAS,GACzBr/E,EAAiBq/E,EAAS,GAC1BG,EAAkBH,EAAS,GAU/B7nF,KAAKioF,2BACD7W,EAAsB8W,uBACrBnwD,EAAYF,OAAOjiB,SAAShV,GAAIoD,EAAIC,EAAIoE,EAAOC,EAAQ6lB,EAAK5lB,EAAOC,EAAQivD,EAAMuwB,EAAS,EAAI,EAAGF,EAAIC,EACpGvwD,EAAG,GACHA,EAAG,GACHA,EAAG,GACHA,EAAG,GACHA,EAAG,GACHA,EAAG,GACHA,EAAG,GACHA,EAAG,GACH35B,EA7BL,C,CA+BLk9B,cAAchD,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgBguD,EAAmBlrB,EAAe5T,EAAkB35B,GACjI,GAAKmC,KAAKwnF,aAAazvD,GAAvB,CASA/3B,KAAK4uC,OACL5uC,KAAKorC,MAAMA,GACPkrB,GACAt2D,KAAKmnF,YAAY/V,EAAsBj7B,UAAWmgB,EAAU1yD,EAAG0yD,EAAUzyD,EAAGyyD,EAAUxyD,EAAGwyD,EAAUvyD,EAAGuyD,EAAUtyD,GAAIsyD,EAAUryD,IAElI,IAAI+tD,EAAWx6B,GAAOO,EAAYP,GAClCx3B,KAAKynF,oBAAoBrW,EAAsBsW,aAAe3vD,EAAYF,OAAOjiB,SAAShV,GAAI1B,EAAGC,EAAGkJ,GAAS0vB,EAAI1vB,MAAOC,GAAUyvB,EAAIzvB,OAChI0pD,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJA,EAAI,GACJn0D,GACNmC,KAAKktB,SAvBJ,C,CA0BL1oB,UAAUtF,EAAWC,GAEjBa,KAAKsnF,QAAQlW,EAAsB+W,UAAWjpF,EAAGC,E,CAErDk5D,WAAWhvC,EAAoBqmB,EAAgBC,GAI3C3vC,KAAKsnF,QAAQlW,EAAsB+W,UAAWz4C,EAAQC,GACtD3vC,KAAKmnF,YAAY/V,EAAsBj7B,UAAW9sB,EAAIzlB,EAAGylB,EAAIxlB,EAAGwlB,EAAIvlB,EAAGulB,EAAItlB,EAAGslB,EAAIrlB,GAAIqlB,EAAIplB,IAC1FjE,KAAKsnF,QAAQlW,EAAsB+W,WAAYz4C,GAASC,E,CAE5Dy4C,QAAQzqF,EAAe+xC,EAAgBC,GAKnC3vC,KAAKsnF,QAAQlW,EAAsB+W,UAAWz4C,EAAQC,GACtD3vC,KAAKgnF,OAAO5V,EAAsBiX,OAAQ1qF,GAC1CqC,KAAKsnF,QAAQlW,EAAsB+W,WAAYz4C,GAASC,E,CAE5D24C,OAAOluB,EAAgBC,EAAgB3qB,EAAgBC,GAInD3vC,KAAKsnF,QAAQlW,EAAsB+W,UAAWz4C,EAAQC,GACtD3vC,KAAKsnF,QAAQlW,EAAsBmW,MAAOntB,EAAQC,GAClDr6D,KAAKsnF,QAAQlW,EAAsB+W,WAAYz4C,GAASC,E,CAE5D44C,UAAUrpF,EAAWC,EAAWqpF,EAAeC,EAAeC,EAAaC,EAAaC,EAAmB1mB,EAAmB2mB,GAC1H,IAAI/jF,EAAiB4sC,WAAWhqC,OAAOkhF,GAEvC5oF,KAAK8oF,cAAc1X,EAAsB2X,UAAW7pF,EAAGC,EAAGqpF,EAAOC,EAAOC,EAAKC,EAAK7jF,EAAG+sC,SAAUqwB,E,CAEnG8mB,WAAW9pF,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,EAAmB2mB,GAC/E,IAAI/jF,EAAiB4sC,WAAWhqC,OAAOkhF,GAEvC5oF,KAAKipF,aAAa7X,EAAsB8X,WAAYhqF,EAAGC,EAAG2F,EAAG+sC,SAAUqwB,EAAW,IAAI7mD,aAAapc,G,CAEvGkqF,YAAYjqF,EAAWC,EAAWiqF,EAAgBC,EAAgBT,EAAgB1mB,EAAmB2mB,GACjG,IAAI/jF,EAAiB4sC,WAAWhqC,OAAO2hF,GACnC1jF,EAAiB+rC,WAAWhqC,OAAOkhF,GAEvC5oF,KAAKspF,cAAclY,EAAsBmY,YAAarqF,EAAGC,EAAGiqF,EAAQC,EAAY,EAAI,EAAGvkF,EAAG+sC,SAAU+2C,EAAY,EAAI,EAAGjjF,EAAGksC,SAAUqwB,E,CAExIsnB,SAAStqF,EAAWC,EAAWiqF,EAAgBK,EAAoBC,EAAkBL,EAAgBT,EAAgB1mB,EAAmB2mB,GACpI,IAAI/jF,EAAiB4sC,WAAWhqC,OAAO2hF,GACnC1jF,EAAiB+rC,WAAWhqC,OAAOkhF,GAEvC5oF,KAAK2pF,gBAAgBvY,EAAsBwY,SAAU1qF,EAAGC,EAAGiqF,EAAQK,EAAYC,EAAUL,EAAY,EAAI,EAAGvkF,EAAG+sC,SAAU+2C,EAAY,EAAI,EAAGjjF,EAAGksC,SAAUqwB,E,CAE7J2nB,UAAU3qF,EAAWC,EAAWF,EAAeoqF,EAAgBT,EAAgB1mB,EAAmB4nB,EAA0BjB,GACxH,IAAI/jF,EAAiB4sC,WAAWhqC,OAAO2hF,GACnC1jF,EAAiB+rC,WAAWhqC,OAAOkhF,GAEvC5oF,KAAK+pF,iBAAiB3Y,EAAsB4Y,UAAW9qF,EAAGC,EAAGkqF,EAAY,EAAI,EAAGvkF,EAAG+sC,SAAU+2C,EAAY,EAAI,EAAGjjF,EAAGksC,SAAUqwB,EAAW4nB,EAAkB,EAAI,EAAG,IAAIzuE,aAAapc,G,CAEtLgrF,SAAS/qF,EAAWC,EAAWkJ,EAAeC,EAAgB+gF,GAC1D,GAAiB,MAAbA,EAAmB,CACnB,IAAIvlF,EAAgB4tC,WAAWhqC,OAAO2hF,GACtCrpF,KAAK8mF,OAAO1V,EAAsB2V,WAAYjjF,EAAE+tC,SACnD,CACD7xC,KAAK2lF,MAAMvU,EAAsB6V,MACjCjnF,KAAKonF,UAAUhW,EAAsB8Y,UAAWhrF,EAAGC,EAAGkJ,EAAOC,GAC7DtI,KAAK2lF,MAAMvU,EAAsB8V,Q,CAGrCiD,YAAY5jE,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgBiD,EAAckV,EAAe5iB,GAC5G,GAAKmC,KAAKwnF,aAAajhE,GAAvB,CAGA,IAAI6jE,EAAoB,EACxB,OAAQ7+E,GACJ,IAAK,SAAU6+E,EAAY,EAAG,MAC9B,IAAK,WAAYA,EAAY,EAAG,MAChC,IAAK,WAAYA,EAAY,EAAG,MAChC,IAAK,YAAaA,EAAY,EAIlCpqF,KAAKqqF,eAAejZ,EAAsBkZ,aAAe/jE,EAAgBsR,OAAOjiB,SAAShV,GAAI1B,EAAGC,EAAGkJ,EAAOC,EAAQ8hF,EAAW3pE,EAAOvhB,EAAGuhB,EAAOthB,EAAGtB,EAVhJ,C,CAaL8+E,SAASz9E,EAAWC,EAAWkJ,EAAeC,EAAgB+gF,EAAgBT,EAAgB1mB,GAmB1F,GAAiB,MAAbmnB,EAAmB,CACnB,IAAIvkF,EAAiB4sC,WAAWhqC,OAAO2hF,GAEvCrpF,KAAK2lF,MAAMvU,EAAsB6V,MACjCjnF,KAAK8mF,OAAO1V,EAAsB2V,WAAYjiF,EAAG+sC,UACjD7xC,KAAKonF,UAAUhW,EAAsB8Y,UAAWhrF,EAAGC,EAAGkJ,EAAOC,GAC7DtI,KAAK2lF,MAAMvU,EAAsB8V,QACpC,CACD,GAAiB,MAAb0B,EAAmB,CACnB,IAAIjjF,EAAiB+rC,WAAWhqC,OAAOkhF,GACvC5oF,KAAK2lF,MAAMvU,EAAsB6V,MACjCjnF,KAAK8mF,OAAO1V,EAAsBmZ,aAAc5kF,EAAGksC,UACnD7xC,KAAKgnF,OAAO5V,EAAsBoZ,WAAYtoB,GAC9CliE,KAAKonF,UAAUhW,EAAsBqZ,YAAavrF,EAAGC,EAAGkJ,EAAOC,GAC/DtI,KAAK2lF,MAAMvU,EAAsB8V,QACpC,C,CAELwD,UAAUxrF,EAAWC,EAAWq+D,EAAcmtB,EAAYC,GA0CtD5qF,KAAK8mF,OAAO1V,EAAsByZ,WAAY,GAE9C,IAAK,IAAIpsF,EAAY,EAAG+G,EAAYg4D,EAAMvhE,OAAQwC,EAAI+G,EAAG/G,IAAK,CAE1D,IAAIa,EAAck+D,EAAM/+D,GACxB,OAAQa,EAAK,IACT,IAAK,SACDU,KAAKsnF,QAAQlW,EAAsB0Z,QAAS5rF,EAAII,EAAK,GAAIH,EAAIG,EAAK,IAClE,MACJ,IAAK,SACDU,KAAKsnF,QAAQlW,EAAsB2Z,QAAS7rF,EAAII,EAAK,GAAIH,EAAIG,EAAK,IAClE,MACJ,IAAK,QACDU,KAAKgrF,WAAW5Z,EAAsB6Z,OAAQ/rF,EAAII,EAAK,GAAIH,EAAIG,EAAK,GAAIJ,EAAII,EAAK,GAAIH,EAAIG,EAAK,GAAIA,EAAK,IACvG,MACJ,IAAK,YACDU,KAAK2lF,MAAMvU,EAAsB8Z,YAG5C,CAGD,GAAa,MAATP,EAAe,CACf,IAAI7lF,EAAiB4sC,WAAWhqC,OAAOijF,EAAMlpB,WAC7CzhE,KAAK8mF,OAAO1V,EAAsB2V,WAAYjiF,EAAG+sC,UACjD7xC,KAAK2lF,MAAMvU,EAAsB+Z,KACpC,CAGD,GAAW,MAAPP,EAAa,CACb,IAAIjlF,EAAiB+rC,WAAWhqC,OAAOkjF,EAAIlpB,aAC3C1hE,KAAK8mF,OAAO1V,EAAsBmZ,aAAc5kF,EAAGksC,UACnD7xC,KAAKgnF,OAAO5V,EAAsBoZ,WAAYI,EAAI1oB,WAAa,GAI/DliE,KAAK2lF,MAAMvU,EAAsBga,OACpC,C,CAELC,WAAWnsF,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,GAC5D,IAAIp9D,EAAiB4sC,WAAWhqC,OAAOkhF,GAavC5oF,KAAKipF,aAAa7X,EAAsBka,YAAapsF,EAAGC,EAAG2F,EAAG+sC,SAAUqwB,EAAW,IAAI7mD,aAAapc,G,CAExGk7D,WAAW5yC,EAAoBroB,EAAWC,EAAWkJ,EAAeC,GAC3Dif,IACLvnB,KAAKonB,WAAWk+D,eACZ/9D,aAAM,+BACNvnB,KAAKonB,WAAWmkE,iBAAiBhkE,EAAOH,WAAYloB,EAAGC,EAAGkJ,EAAOC,GAIjEtI,KAAKonB,WAAWokE,iBAAkBjkE,EAAOC,QAAgBJ,WAAYloB,EAAGC,EAAGkJ,EAAOC,G,CAI1FysE,SAASh2C,EAAwB7/B,EAAWC,EAAWq4E,EAAiB35E,EAAe4tF,EAAevpB,EAAoB,EAAGwpB,EAAsB,IAC/I,IAAI5T,EAAa,EACjB,OAAQ2T,GACJ,IAAK,SACD3T,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,IAAI8L,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAOgkF,GAClB,iBAAjB,EAEA1rF,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUimC,EAAY54E,EAAGC,EAAG+iE,EAAWnjC,EAAKy4C,GAI7Hx3E,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB/sD,EAAY3X,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAUqwB,EAAW4V,EAAYN,E,CAI1JuU,SAAS7rD,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAe4tF,GACjF,IAAI3T,EAAa,EACjB,OAAQ2T,GACJ,IAAK,SACD3T,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,IAAI8L,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAO,MACjB,iBAAlB,EAEA1H,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUimC,EAAY54E,EAAGC,EAAG,EAAG+gC,EAAMqd,GAItHv9C,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB5rD,EAAa9Y,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAU,EAAGimC,EAAYv6B,E,CAGnJyuC,WAAW9rD,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAeqkE,EAAmBupB,GACtG,IAAI3T,EAAa,EACjB,OAAQ2T,GACJ,IAAK,SACD3T,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,IAAI8L,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAO,MACjB,iBAAlB,EAEA1H,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUimC,EAAY54E,EAAGC,EAAG+iE,EAAWhiC,EAAMqd,GAI9Hv9C,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB5rD,EAAa9Y,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAUqwB,EAAW4V,EAAYv6B,E,CAG3J0uC,eAAeltD,EAAwB7/B,EAAWC,EAAWo+C,EAAc1/C,EAAe6tF,EAAqBxpB,EAAmBupB,GAC9H,IAAI3T,EAAa,EACjB,OAAQ2T,GACJ,IAAK,SACD3T,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,IAAI8L,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAOgkF,GAClB,iBAAjB,EAEA1rF,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUimC,EAAY54E,EAAGC,EAAG+iE,EAAWnjC,EAAKwe,GAI7Hv9C,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB/sD,EAAY3X,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAUqwB,EAAW4V,EAAYv6B,E,CAG1J2uC,WAAWhqF,EAAyBhD,EAAWC,EAAWq4E,EAAiB35E,EAAe+5E,EAAqB1V,EAAmBupB,GAC9H,IAAI3T,EAAa,EACjB,OAAQ2T,GACJ,IAAK,SACD3T,EAAaj/E,MAAME,sBACnB,MACJ,IAAK,QACD++E,EAAaj/E,MAAMG,qBAG3B,IAAI8L,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAOkwE,GACjB,iBAAlB,EAEA53E,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUimC,EAAY54E,EAAGC,EAAG+iE,EAAWhgE,EAAMs1E,GAI9Hx3E,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB5pF,EAAaklB,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAUqwB,EAAW4V,EAAYN,E,CAK3JO,eAAe71E,EAAyBhD,EAAWC,EAAWgtF,EAActuF,EAAe+5E,EAA4B1V,EAAmBgT,EAAmBkX,EAAoB,GAC7K,IAAItnF,EAAiB4sC,WAAWhqC,OAAO7J,GACnC8H,EAAiB+rC,WAAWhqC,OAAOkwE,GAEjB,iBAAlB,EAEA53E,KAAK2rF,0BAA0Bva,EAAsBwa,WAAY9mF,EAAG+sC,SAAUlsC,EAAGksC,SAAUqjC,EAAWh2E,EAAGC,EAAG+iE,EAAWhgE,EAAOiqF,EAAgBpb,OAI9I/wE,KAAK6rF,oBAAoBza,EAAsB0a,eAAiB5pF,EAAaklB,WAAWxmB,GAAI1B,EAAGC,EAAG2F,EAAG+sC,SAAUlsC,EAAGksC,SAAUqwB,EAAWgT,EAAYiX,EAAgBpb,M,CAI3Ksb,cAAct0D,EACV74B,EAAWC,EACX4yD,EACAC,EACAiQ,EACA17D,EAAgB6kC,EAAe0vB,EAAmBwxB,EAAmB,YACrE,GAAKtsF,KAAKwnF,aAAazvD,GAAvB,CAGA,IAAI9W,EAAY1a,GAAkBvG,KAAKwkF,WACtB,MAAb1pB,GAEA96D,KAAK2lF,MAAMvU,EAAsB6V,MAEjCjnF,KAAK4mF,aAAaxV,EAAsByV,+BAAgC/rB,GACxE96D,KAAKusF,0BAA0Bnb,EAAsBob,cAAgBz0D,EAAYF,OAAOjiB,SAAShV,GAAI0rF,EAC/FptF,EACAC,EACAisC,EACAnqB,EAAErd,EAAGqd,EAAEpd,EAAGod,EAAEnd,EAAGmd,EAAEld,EAAGkd,EAAEjd,GAAIid,EAAEhd,GAC3B8tD,aAAoB1gD,MAASgK,aAAaoxE,KAAK16B,GAAYA,EAC3DC,aAAe3gD,MAASgK,aAAaoxE,KAAKz6B,GAAOA,EACjDiQ,aAAmB5wD,MAAS0U,YAAY0mE,KAAKxqB,GAAWA,GAE/DjiE,KAAK2lF,MAAMvU,EAAsB8V,UAGjClnF,KAAKusF,0BAA0Bnb,EAAsBob,cAAgBz0D,EAAYF,OAAOjiB,SAAShV,GAAI0rF,EAC/FptF,EACAC,EACAisC,EACAnqB,EAAErd,EAAGqd,EAAEpd,EAAGod,EAAEnd,EAAGmd,EAAEld,EAAGkd,EAAEjd,GAAIid,EAAEhd,GAC3B8tD,aAAoB1gD,MAASgK,aAAaoxE,KAAK16B,GAAYA,EAC3DC,aAAe3gD,MAASgK,aAAaoxE,KAAKz6B,GAAOA,EACjDiQ,aAAmB5wD,MAAS0U,YAAY0mE,KAAKxqB,GAAWA,EA1BlE,C,CA8BLxG,SAASxtC,EAAWC,GAGhB,OADAluB,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAWq0C,SAASxtC,EAAGC,E,CAEvCwtC,WAAWx8D,EAAWC,EAAW8uB,EAAWC,GAExCluB,KAAKonF,UAAUhW,EAAsBsb,YAAaxtF,EAAGC,EAAG8uB,EAAGC,E,CAE/DytC,kBAAkB3tC,EAAS9uB,EAAWC,EAAW8uB,EAAWC,GAExDluB,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAWu0C,kBAAkB3tC,EAAI9uB,EAAGC,EAAG8uB,EAAGC,E,CAE/CwM,aAASz8B,GAET+B,KAAK8mF,OAAO1V,EAAsBub,cAAe1uF,EAAQ,EAAI,E,CAEjE8U,KAAKkb,EAAWC,GAEZluB,KAAK4sF,QAAQxb,EAAsByb,KAAM5+D,EAAGC,E,CAEhD2gB,eAAei+C,GAOX9sF,KAAKonB,WAAWk+D,eACZwH,EACA9sF,KAAKonB,WAAWynB,gBAAe,EAAMi+C,EAAOl6C,OAAQk6C,EAAOn6C,MAG3D3yC,KAAKonB,WAAWynB,gBAAe,EAAO,KAAM,K,CAGpD0B,WAAWviB,EAAqB9uB,EAAWC,EAAWkJ,EAAeC,EAAgB/B,EAAgB+jC,EAAsB9S,EAA+B,KAAM6yC,GAAgB,GAG5K,OADArqE,KAAKonB,WAAWk+D,eACTtlF,KAAKonB,WAAWmpB,WAAWviB,EAAI9uB,EAAGC,EAAGkJ,EAAOC,EAAQ/B,EAAO3C,EAAG2C,EAAO1C,EAAG0C,EAAOzC,EAAGyC,EAAOxC,EAAGwC,EAAOvC,GAAIuC,EAAOtC,GAAIomE,E,CAE7HtS,qBAAqB/pC,EAAqB9uB,EAAWC,EAAWkJ,EAAeC,EAAgB0vD,GAE3Fh4D,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAW2wC,qBAAqB/pC,EAAI9uB,EAAGC,EAAGkJ,EAAOC,EAAQ0vD,E,CAE9D9oB,cAUAlvC,KAAKonB,WAAWk+D,eAEhB,IAAIpjF,EAAYlC,KAAKonB,WAAW8nB,QAC5B7lB,EAAc1lB,OAAO+D,SAQzB,OAPA2hB,EAAIzlB,EAAI1B,EAAK,GACbmnB,EAAIxlB,EAAI3B,EAAK,GACbmnB,EAAIvlB,EAAI5B,EAAK,GACbmnB,EAAItlB,EAAI7B,EAAK,GACbmnB,EAAIrlB,GAAK9B,EAAK,GACdmnB,EAAIplB,GAAK/B,EAAK,GAEPmnB,C,CAEX0jE,kBAAkBC,GAEdhtF,KAAKukF,oBAAoBloF,KAAM2wF,EAAgB5lE,YAC/CpnB,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAW2lE,kBAAmBC,EAAgB5lE,W,CAEvD+oB,SAGInwC,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAW+oB,Q,CAEpBQ,QAGI3wC,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAWupB,O,CAEpBP,MAAMpiB,GAGFhuB,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAWgpB,MAAMpiB,E,CAE1BiqC,WAAW3yD,EAAsBs9B,EAAsB1jC,EAAWC,EAAWkJ,EAAeC,GAGxFtI,KAAKonB,WAAWk+D,eAChBtlF,KAAKonB,WAAW6wC,WAAW3yD,EAAKs9B,EAAK1jC,EAAGC,EAAGkJ,EAAOC,E,CAE5Ck/E,aAAazvD,GAEnB,IAAIk1D,EAAKjtF,KAAKyuC,OACd,QAAK1W,EAAIjf,YAAW,WACZm0E,GACAA,EAAGC,SAEX,G,CAKJvH,MAAMlnF,GACFuB,KAAKqlF,MAAM,GACXrlF,KAAK4kF,OAAO5kF,KAAK4kF,OAAO,MAAQnmF,C,CAEpCqoF,OAAOljF,EAAWC,GACd7D,KAAKqlF,MAAM,GACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GAC5B5kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK4kF,OAAOnmF,KAAOoF,EACnB7D,KAAK4kF,OAAO,GAAKnmF,C,CAErBuoF,OAAOpjF,EAAWC,GACd7D,KAAKqlF,MAAM,GACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GAC5B5kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK6kF,OAAOpmF,KAAOoF,EACnB7D,KAAK4kF,OAAO,GAAKnmF,C,CAErB6oF,QAAQ1jF,EAAWC,EAAWC,GAC1B9D,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GAC5B5kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK6kF,OAAOpmF,KAAOoF,EACnB7D,KAAK6kF,OAAOpmF,KAAOqF,EACnB9D,KAAK4kF,OAAO,GAAKnmF,C,CAGrB0uF,UAAUvpF,EAAWC,EAAWC,EAAWC,EAAW8c,GAClD7gB,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnBwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACb9D,KAAK4kF,OAAOnmF,KAAOsF,EACnBqpF,EAAM3uF,KAAOoiB,EACb7gB,KAAK4kF,OAAO,GAAKnmF,C,CAGrB2oF,UAAUxjF,EAAWC,EAAWC,EAAWC,EAAW8c,GAClD7gB,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnBwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACb7gB,KAAK4kF,OAAO,GAAKnmF,C,CAErBmuF,QAAQhpF,EAAWC,EAAWC,GAC1B9D,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBnmF,EAAYuB,KAAK4kF,OAAO,GAC5ByI,EAAM5uF,KAAOmF,EACbypF,EAAM5uF,KAAOoF,EACbwpF,EAAM5uF,KAAOqF,EACb9D,KAAK4kF,OAAO,GAAKnmF,C,CAErB6uF,WAAW1pF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,GAC9D9d,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK4kF,OAAOnmF,KAAOoF,EACnBupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACb9d,KAAK4kF,OAAO,GAAKnmF,C,CAErBusF,WAAWpnF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,GAC9D9d,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnBwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACb9d,KAAK4kF,OAAO,GAAKnmF,C,CAErB0oF,YAAYvjF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,GAC1EtqB,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnBwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACbtqB,KAAK4kF,OAAO,GAAKnmF,C,CAErB6qF,cAAc1lF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,GAClGvtF,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBnmF,EAAY4uF,EAAM,GAClBD,EAAsBptF,KAAK6kF,OAC/BwI,EAAM5uF,KAAOmF,EACbwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbspF,EAAM5uF,KAAOoiB,EACbwsE,EAAM5uF,KAAOqf,EACbuvE,EAAM5uF,KAAO6rB,EACb+iE,EAAM5uF,KAAOyvB,EACbk/D,EAAM3uF,KAAO8uF,EACbF,EAAM,GAAK5uF,C,CAEfkrF,gBAAgB/lF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY7tF,EAAWC,GAC3HK,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBnmF,EAAY4uF,EAAM,GAClBD,EAAsBptF,KAAK6kF,OAC/BwI,EAAM5uF,KAAOmF,EACbwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbuvE,EAAM5uF,KAAO6rB,EACb+iE,EAAM5uF,KAAOyvB,EACbm/D,EAAM5uF,KAAO8uF,EACbF,EAAM5uF,KAAOiB,EACb0tF,EAAM3uF,KAAOkB,EACb0tF,EAAM,GAAK5uF,C,CAEfqqF,cAAcllF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,GAClGvtF,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBnmF,EAAY4uF,EAAM,GAClBD,EAAsBptF,KAAK6kF,OAC/BwI,EAAM5uF,KAAOmF,EACbwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACb+iE,EAAM5uF,KAAOyvB,EACbk/D,EAAM3uF,KAAO8uF,EACbF,EAAM,GAAK5uF,C,CAEf+uF,WAAW7mF,GACP,IAAInI,EAAcmI,EAAGiT,WAGrB,GAFA5Z,KAAKqlF,MAAM7mF,EAAM,GACjBwB,KAAK4kF,OAAO5kF,KAAK4kF,OAAO,MAAQpmF,EACrB,GAAPA,EAAJ,CACA,IAAIkiB,EAAyB,IAAIlH,WAAW7S,GAC5C3G,KAAK8kF,WAAWrqE,IAAIiG,EAA6B,EAAjB1gB,KAAK4kF,OAAO,IAC5C5kF,KAAK4kF,OAAO,IAAMpmF,EAAM,CAHV,C,CAKlBivF,cAAc7pF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,GAClGvtF,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnBwpF,EAAM3uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACb9D,KAAK4kF,OAAOnmF,KAAOsF,EACnB/D,KAAK4kF,OAAOnmF,KAAOoiB,EACnB7gB,KAAK4kF,OAAOnmF,KAAOqf,EACnB9d,KAAK4kF,OAAOnmF,KAAO6rB,EACnB8iE,EAAM3uF,KAAOyvB,EACbluB,KAAK4kF,OAAOnmF,KAAO8uF,EACnBvtF,KAAK4kF,OAAO,GAAKnmF,C,CAErBivF,aAAa9pF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,GACtFluB,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK4kF,OAAOnmF,KAAOoF,EACnBupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACb/D,KAAK4kF,OAAOnmF,KAAOoiB,EACnB7gB,KAAK4kF,OAAOnmF,KAAOqf,EACnBsvE,EAAM3uF,KAAO6rB,EACbtqB,KAAK4kF,OAAOnmF,KAAOyvB,EACnBluB,KAAK4kF,OAAO,GAAKnmF,C,CAErBmoF,aAAahjF,EAAW7F,GACpB,IAAI4I,EAAmB/K,OAAeC,MAAM8xF,WAAW5vF,GACvDiC,KAAKqlF,MAAM,EAAI1+E,EAAGiT,WAAa,GAC/B5Z,KAAK2lF,MAAM/hF,GACX5D,KAAKwtF,WAAW7mF,E,CAEpBinF,YAAYhqF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,GAC1EtqB,KAAKqlF,MAAM,IACX,IAAI5mF,EAAYuB,KAAK4kF,OAAO,GACxBwI,EAAsBptF,KAAK6kF,OAC/B7kF,KAAK4kF,OAAOnmF,KAAOmF,EACnB5D,KAAK4kF,OAAOnmF,KAAOoF,EACnB7D,KAAK4kF,OAAOnmF,KAAOqF,EACnB9D,KAAK4kF,OAAOnmF,KAAOsF,EACnBqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACbtqB,KAAK4kF,OAAO,GAAKnmF,C,CAErBotF,oBAAoBjoF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWnwB,GACxG,IAAI4I,EAAmB/K,OAAeC,MAAM8xF,WAAW5vF,GACvDiC,KAAKqlF,MAAM,GAAK1+E,EAAGiT,WAAa,GAChC5Z,KAAK0tF,aAAa9pF,EAAGC,EAAGC,EAAGC,EAAG8c,EAAG/C,EAAGwM,EAAG4D,GACvCluB,KAAKwtF,WAAW7mF,E,CAEpBglF,0BAA0B/nF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAWujE,EAAcC,GACjH,IAAIC,EAAoBnyF,OAAeC,MAAM8xF,WAAWE,GACpDG,EAAoBpyF,OAAeC,MAAM8xF,WAAWG,GACxD9tF,KAAKqlF,MAAM,IAAM0I,EAAIn0E,WAAa,IAAMo0E,EAAIp0E,WAAa,IAEzD5Z,KAAK4tF,YAAYhqF,EAAGC,EAAGC,EAAGC,EAAG8c,EAAG/C,EAAGwM,GACnCtqB,KAAKwtF,WAAWO,GAChB/tF,KAAKwtF,WAAWQ,E,CAEpBvG,oBAAoB7jF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY7tF,EAAWC,EAAWqxE,EAAW/vD,EAAWzb,EAAWswB,GAC3K91B,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBnmF,EAAY4uF,EAAM,GAClBD,EAAsBptF,KAAK6kF,OAC/BwI,EAAM5uF,KAAOmF,EACbypF,EAAM5uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACb8iE,EAAM3uF,KAAOyvB,EACbk/D,EAAM3uF,KAAO8uF,EACbH,EAAM3uF,KAAOiB,EACb0tF,EAAM3uF,KAAOkB,EACbytF,EAAM3uF,KAAOuyE,EACboc,EAAM3uF,KAAOwiB,EACbmsE,EAAM3uF,KAAO+G,EACb6nF,EAAM5uF,KAAOq3B,EACbu3D,EAAM,GAAK5uF,C,CAEfwpF,2BAA2BrkF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY7tF,EACzHC,EAAWqxE,EAAW/vD,EAAWzb,EAAWswB,EAAWkZ,EAAWu4B,EAAWl9C,EAAWymB,EAAWorB,EACnGj+C,EAAW7C,GACbpb,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBwI,EAAsBptF,KAAK6kF,OAC3BpmF,EAAY4uF,EAAM,GACtBA,EAAM5uF,KAAOmF,EACbypF,EAAM5uF,KAAOoF,EACbupF,EAAM3uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACb8iE,EAAM3uF,KAAOyvB,EACbk/D,EAAM3uF,KAAO8uF,EACbH,EAAM3uF,KAAOiB,EACb2tF,EAAM5uF,KAAOkB,EACbytF,EAAM3uF,KAAOuyE,EACboc,EAAM3uF,KAAOwiB,EACbmsE,EAAM3uF,KAAO+G,EACb4nF,EAAM3uF,KAAOq3B,EACbs3D,EAAM3uF,KAAOuwC,EACbo+C,EAAM3uF,KAAO8oE,EACb6lB,EAAM3uF,KAAO4rB,EACb+iE,EAAM3uF,KAAOqyC,EACbs8C,EAAM3uF,KAAOy9D,EACbkxB,EAAM3uF,KAAOwf,EACbovE,EAAM5uF,KAAO2c,EACbiyE,EAAM,GAAK5uF,C,CAEfwvF,iBAAiBrqF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY7tF,EAC/GC,EAAWqxE,GACbhxE,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBwI,EAAsBptF,KAAK6kF,OAC3BpmF,EAAY4uF,EAAM,GACtBA,EAAM5uF,KAAOmF,EACbypF,EAAM5uF,KAAOoF,EACbwpF,EAAM5uF,KAAOqF,EACbspF,EAAM3uF,KAAOsF,EACbqpF,EAAM3uF,KAAOoiB,EACbusE,EAAM3uF,KAAOqf,EACbsvE,EAAM3uF,KAAO6rB,EACb8iE,EAAM3uF,KAAOyvB,EACbk/D,EAAM3uF,KAAO8uF,EACbH,EAAM3uF,KAAOiB,EACb0tF,EAAM3uF,KAAOkB,EACbytF,EAAM3uF,KAAOuyE,EACbqc,EAAM,GAAK5uF,C,CAEf4rF,eAAezmF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWzvB,EAAWiB,GAC9GM,KAAKqlF,MAAM,IACX,IAAIgI,EAAoBrtF,KAAK4kF,OACzBwI,EAAsBptF,KAAK6kF,OAC/B,IAAI10B,EAAck9B,EAAM,GACxBA,EAAMl9B,KAASvsD,EACfypF,EAAMl9B,KAAStsD,EACfupF,EAAMj9B,KAASrsD,EACfspF,EAAMj9B,KAASpsD,EACfqpF,EAAMj9B,KAAStvC,EACfusE,EAAMj9B,KAASryC,EACfuvE,EAAMl9B,KAAS7lC,EACf8iE,EAAMj9B,KAASjiC,EACfk/D,EAAMj9B,KAAS1xD,EACf4uF,EAAMl9B,KAASzwD,EACf2tF,EAAM,GAAKl9B,C,CAGfo8B,0BAA0B3oF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY7tF,EACxHC,EAAWqxE,EAAWkd,EAAmBC,EAAmBC,GAE9D,IAAIC,EAAgBruF,KAAKsuF,eAAeJ,GACpCK,EAAgBvuF,KAAKsuF,eAAeH,GACpCK,EAAgBxuF,KAAKsuF,eAAeF,GAExCpuF,KAAKqlF,MAAM,IAAMgJ,EAAgB,IAAME,EAAgB,IAAMC,EAAgB,IAE7ExuF,KAAKiuF,iBAAiBrqF,EAAGC,EAAGC,EAAGC,EAAG8c,EAAG/C,EAAGwM,EAAG4D,EAAGq/D,EAAI7tF,EAAGC,EAAGqxE,GACxDhxE,KAAKyuF,IAAIP,EAAcA,EAAat0E,WAAYy0E,EAAe,GAC/DruF,KAAKyuF,IAAIN,EAAcA,EAAav0E,WAAY20E,EAAe,GAC/DvuF,KAAKyuF,IAAIL,EAAcA,EAAax0E,WAAY40E,EAAe,E,CAGnEC,IAAIjuE,EAAkBvkB,EAAgByyF,EAAsBjuE,GACxDA,EAASA,GAAkB,EAC3BzgB,KAAKqlF,MAAMqJ,EAAe,GAE1B1uF,KAAK4kF,OAAO5kF,KAAK4kF,OAAO,MAAQ3oF,EAEhC,IAAIykB,EAAyB,KAC7B,GAAIF,aAAuBnF,cAA0B,GAAVoF,EACvCzgB,KAAK6kF,OAAOpqE,IAAI+F,EAAaxgB,KAAK4kF,OAAO,QAExC,CACD,GAAIpkE,aAAuBzG,YACvB2G,EAAa,IAAIlH,WAAWgH,EAAaC,EAAQxkB,OAEhD,KAAIukB,EAAY7G,OAKjB,YADAriB,QAAQovB,IAAI,4BAHZhG,EAAa,IAAIlH,WAAWgH,EAAY7G,OAAQ8G,EAASD,EAAYmuE,WAAY1yF,EAKpF,CACD+D,KAAK8kF,WAAWrqE,IAAIiG,EAA6B,EAAjB1gB,KAAK4kF,OAAO,GAC/C,CACD5kF,KAAK4kF,OAAO,IAAM8J,EAAe,C,CAErCJ,eAAepsF,GAEX,OADiBA,EAAK0X,WACD,EAAK,U,CAE9Bg1E,WAAWhrF,EAAWC,EAAWC,EAAW0c,GACxC,IAAIkuE,EAAe1uF,KAAKsuF,eAAe9tE,GACvCxgB,KAAKqlF,MAAM,GAAKqJ,EAAe,GAC/B1uF,KAAKsnF,QAAQ1jF,EAAGC,EAAGC,GACnB9D,KAAKyuF,IAAIjuE,EAAaA,EAAY5G,WAAY80E,EAAc,E,CAEhEzF,aAAarlF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAWL,GAChE,IAAIkuE,EAAe1uF,KAAKsuF,eAAe9tE,GACvCxgB,KAAKqlF,MAAM,GAAKqJ,EAAe,GAC/B1uF,KAAKmtF,UAAUvpF,EAAGC,EAAGC,EAAGC,EAAG8c,GAC3B7gB,KAAKyuF,IAAIjuE,EAAaA,EAAY5G,WAAY80E,EAAc,E,CAEhE3E,iBAAiBnmF,EAAWC,EAAWC,EAAWC,EAAW8c,EAAW/C,EAAWwM,EAAW4D,EAAWq/D,EAAY/sE,GACjH,IAAIkuE,EAAe1uF,KAAKsuF,eAAe9tE,GACvCxgB,KAAKqlF,MAAM,GAAKqJ,EAAe,GAC/B1uF,KAAKytF,cAAc7pF,EAAGC,EAAGC,EAAGC,EAAG8c,EAAG/C,EAAGwM,EAAG4D,EAAGq/D,GAC3CvtF,KAAKyuF,IAAIjuE,EAAaA,EAAY5G,WAAY80E,EAAc,E,EA7rCzCrK,cAAsBwK,uBAAG,EACzBxK,cAAqBa,sBAAG,EACxBb,cAA0Bc,2BAAG,EAC7Bd,cAAqByK,sBAAG,EASxCzK,cAAsBvrF,uBAAW,EACjCurF,cAAqBtrF,sBAAW,EAChCsrF,cAAoBrrF,qBAAW,EazB1C,MAAM+1F,EAAoB,IAAIprF,OAAO9K,MAAMM,cAAe,EAAG,EAAGN,MAAMM,cAAe,EAAG,G,MAM3E4B,QA4aTwB,cAII,GA9ZJyD,KAAAwkF,WAAqB,IAAI7gF,OAMjB3D,KAAAgvF,uBAAuC,IAAI3zE,aAAa,GACxDrb,KAAAivF,wBAAuC,IAAIlpE,YAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IACvE/lB,KAAAkvF,QAAwB,IAAI7zE,aAAa,GACzCrb,KAAoBmvF,sBAAY,EAkTxCnvF,KAAAK,MAAgBtF,QAAQq0F,OAEhBpvF,KAAMqvF,OAAyB,KAC/BrvF,KAAsBsvF,uBAAW,EAEjCtvF,KAAKw9B,MAAgB,KAE7Bx9B,KAAUyrE,WAAW,EACbzrE,KAAAoV,OAAiBvc,MAAMM,cACvB6G,KAAAqV,QAAkBxc,MAAMM,cACxB6G,KAAYuvF,aAAW,EAE/BvvF,KAAQq0D,SAAQ,KAEhBr0D,KAAU00D,WAAQ,KAElB10D,KAAAwvF,WAAwB,IAAIriD,UAK5BntC,KAASw0D,UAAkB,KAE3Bx0D,KAAay0D,cAAuB,KAEpCz0D,KAAQ4zD,SAAU,GAGV5zD,KAAAyvF,eAAwB,IAAIp+E,MAAM,GAClCrR,KAAA0vF,aAAsB,IAAIr+E,MAAM,GAGxCrR,KAAAsgE,UAAuBvlE,QAAQ40F,YAG/B3vF,KAAAi0D,kBAA4B86B,EAAkBvnF,QAE9CxH,KAAYwgE,cAAY,EAExBxgE,KAAWqgE,YAAW,EACdrgE,KAAW4vF,YAAW,EAM9B5vF,KAAc6vF,eAAW,EAEzB7vF,KAAc8vF,eAAW,EACjB9vF,KAAU+vF,WAAW,EACrB/vF,KAAUgwF,WAAW,EACrBhwF,KAAUiwF,WAAW,EACrBjwF,KAAUkwF,WAAW,EAE7BlwF,KAAWqpE,YAAW,EAEtBrpE,KAAK6/D,MAAuC,KAE5C7/D,KAAQg7B,SAA2B,KAEnCh7B,KAAgBk0D,iBAA2B,KAE3Cl0D,KAAS0/D,UAAoB,KAE7B1/D,KAAAspE,UAAsB,IAAI/H,SAO1BvhE,KAAMyuC,OAAkB,KAKxBzuC,KAAUm4E,WAAW,EAErBn4E,KAAQmwF,SAAmB,KAEnBnwF,KAAUowF,WAAW,EACrBpwF,KAASqwF,UAAW,EAEpBrwF,KAAUswF,WAAmB,KAErCtwF,KAAWsqE,YAAuB,KAElCtqE,KAAY05E,cAAY,EAExB15E,KAAQo0D,UAAY,EAEpBp0D,KAAMylF,QAAY,EAElBzlF,KAAAuwF,WAAoB,IAAInmE,MAGpBrvB,QAAQy1F,gBACRz1F,QAAQ01F,YAAc11F,QAAQ01F,aAAe,IAAI7iB,YAE5C5tE,KAAKswF,WAAY,CAClB,IAAII,EAAsB,IAAIvrE,UAAU,EAAG,EAAGnb,gBAAcgN,UAAU,GAAM,GAAO,GACnF05E,EAAShrE,cAAc,IAAIlM,WAAW,KAAK,GAAO,GAClDk3E,EAAS/9E,MAAO,EAChB3S,KAAKswF,WAAa,IAAI/4D,QAAQm5D,EACjC,CACD1wF,KAAKmwF,SAAWnwF,KAAKswF,WACrBtwF,KAAK2K,O,CA1ZT3T,kBACI+D,QAAQ40F,YAAc,IAAIvnF,UAAU,EAAG,EAAGvP,MAAMM,cAAeN,MAAMM,eACrEw3F,cAAczzB,QAAU,IAAIyzB,a,CAKhClpE,aAAand,G,CAIbgd,gBAAgBhd,G,CAIhBgzC,YAAYpd,GACR,OAAO,I,CAIXo0C,gBAAgBhqE,G,CAKhBsmF,WAAWhtF,EAAWC,EAAWC,EAAWC,EAAWC,EAAYC,G,CAK/D4wE,eACA,MAAO,E,CAIPA,aAAS52E,G,CAITsnF,cACA,MAAO,E,CAIPA,YAAQtnF,G,CAIRunF,iBACA,MAAO,E,CAIPA,eAAWvnF,G,CAIf02E,UAAUz1E,EAAWC,EAAWkJ,EAAeC,G,CAK/CuoF,UAAU3xF,EAAWC,EAAWkJ,EAAeC,EAAgB6wC,GAC3DA,IAAUn5C,KAAKyhE,UAAYtoB,GAC3Bn5C,KAAKiqF,SAAS/qF,EAAGC,EAAGkJ,EAAOC,EAAQ,K,CAgBvCwoF,aAAa5xF,EAAWC,EAAWuwC,EAAgBC,EAAgB1uB,EAAW8vE,G,CAI9E16B,kBAAkB9vD,EAAgBvC,EAAYC,GAC1CjE,KAAKs2D,UAAU/vD,EAAO3C,EAAG2C,EAAO1C,EAAG0C,EAAOzC,EAAGyC,EAAOxC,EAAGwC,EAAOvC,GAAKA,EAAIuC,EAAOtC,GAAKA,E,CAGvFkyD,cAAc5vD,GACVvG,KAAK4uC,M,CAGTmoB,iBAAiBxwD,GACbvG,KAAKktB,S,CAGTyvD,SAASz9E,EAAWC,EAAWkJ,EAAeC,EAAgB+gF,EAAgBT,EAAgB1mB,GAC1F,IAAIznC,EAAWz6B,KAGE,MAAbqpF,IACA5uD,EAAIgnC,UAAY4nB,EAChB5uD,EAAIwvD,SAAS/qF,EAAGC,EAAGkJ,EAAOC,IAIb,MAAbsgF,IACAnuD,EAAIinC,YAAcknB,EAClBnuD,EAAIynC,UAAYA,EAChBznC,EAAIu6C,WAAW91E,EAAGC,EAAGkJ,EAAOC,G,CAIpC8iC,MAAMntC,GACF+B,KAAKi3D,aAAeh5D,C,CAKxBo6D,WAAWhvC,EAAaqmB,EAAgBC,GACpC3vC,KAAKwE,UAAUkrC,EAAQC,GACvB3vC,KAAKs2D,UAAUjtC,EAAIzlB,EAAGylB,EAAIxlB,EAAGwlB,EAAIvlB,EAAGulB,EAAItlB,EAAGslB,EAAIrlB,GAAIqlB,EAAIplB,IACvDjE,KAAKwE,WAAWkrC,GAASC,E,CAI7By4C,QAAQzqF,EAAe+xC,EAAgBC,GACnC3vC,KAAKwE,UAAUkrC,EAAQC,GACvB3vC,KAAK0E,OAAO/G,GACZqC,KAAKwE,WAAWkrC,GAASC,E,CAI7B24C,OAAOluB,EAAgBC,EAAgB3qB,EAAgBC,GACnD3vC,KAAKwE,UAAUkrC,EAAQC,GACvB3vC,KAAKyE,MAAM21D,EAAQC,GACnBr6D,KAAKwE,WAAWkrC,GAASC,E,CAI7B44C,UAAUrpF,EAAWC,EAAWqpF,EAAeC,EAAeC,EAAaC,EAAaC,EAAmB1mB,EAAmB2mB,GAC1H7oF,KAAK09D,YACL19D,KAAK0hE,YAAcknB,EACnB5oF,KAAKkiE,UAAYA,EACjBliE,KAAKgxF,OAAO9xF,EAAIspF,EAAOrpF,EAAIspF,GAC3BzoF,KAAKixF,OAAO/xF,EAAIwpF,EAAKvpF,EAAIwpF,GACzB3oF,KAAKkxF,Q,CAITlI,WAAW9pF,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,EAAmB2mB,GAC/E7oF,KAAK09D,YAEL19D,KAAK0hE,YAAcknB,EACnB5oF,KAAKkiE,UAAYA,EAEjBliE,KAAKmxF,QAAQlyF,EAAOob,SAAS,GAAO,EAAOnb,EAAGC,GAC9Ca,KAAKkxF,Q,CAGT7F,WAAWnsF,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,GAC5DliE,KAAK09D,YACL19D,KAAK0hE,YAAcknB,EACnB5oF,KAAKkiE,UAAYA,EAGjBliE,KAAKgxF,OAAO9xF,EAAID,EAAO,GAAIE,EAAIF,EAAO,IAEtC,IADA,IAAIR,EAAY,EAAG+G,EAAYvG,EAAOhD,OAC/BwC,EAAI+G,GACPxF,KAAKoxF,iBAAiBlyF,EAAID,EAAOR,KAAMU,EAAIF,EAAOR,KAAMS,EAAID,EAAOR,KAAMU,EAAIF,EAAOR,MAExFuB,KAAKkxF,Q,CAGDG,eAAehI,EAAmBzR,EAAqB1V,EAAmB4nB,GAA2B,GAExF,MAAbT,IACArpF,KAAKyhE,UAAY4nB,EACjBrpF,KAAK2uE,QAIU,MAAfiJ,GAAuB1V,EAAY,IACnCliE,KAAK0hE,YAAckW,EACnB53E,KAAKkiE,UAAYA,EACjBliE,KAAKkxF,S,CAMb/H,YAAYjqF,EAAWC,EAAWiqF,EAAgBC,EAAgBT,EAAgB1mB,EAAmB2mB,GACjG7oF,KAAK09D,WAAU,GACf19D,KAAKsxF,IAAIpyF,EAAGC,EAAGiqF,EAAQ,EAAGruF,QAAQw2F,KAClCvxF,KAAK69D,YAEL79D,KAAKqxF,eAAehI,EAAWT,EAAW1mB,E,CAK9CsnB,SAAStqF,EAAWC,EAAWiqF,EAAgBK,EAAoBC,EAAkBL,EAAgBT,EAAgB1mB,EAAmB2mB,GAIpI7oF,KAAK09D,YACL19D,KAAKgxF,OAAO9xF,EAAGC,GACfa,KAAKsxF,IAAIpyF,EAAGC,EAAGiqF,EAAQK,EAAYC,GACnC1pF,KAAK69D,YAEL79D,KAAKqxF,eAAehI,EAAWT,EAAW1mB,E,CAM9C2nB,UAAU3qF,EAAWC,EAAWF,EAAeoqF,EAAgBT,EAAgB1mB,EAAmB4nB,EAA0BjB,GAExH7oF,KAAK09D,YAEL19D,KAAKmxF,QAAQlyF,EAAOob,SAAS,EAAMyvE,EAAiB5qF,EAAGC,GACvDa,KAAK69D,YACL79D,KAAKqxF,eAAehI,EAAWT,EAAW1mB,EAAW4nB,E,CAIzDY,UAAUxrF,EAAWC,EAAWq+D,EAAcmtB,EAAYC,GAEtD5qF,KAAK09D,YAIL,IAAK,IAAIj/D,EAAY,EAAG+G,EAAYg4D,EAAMvhE,OAAQwC,EAAI+G,EAAG/G,IAAK,CAE1D,IAAIa,EAAck+D,EAAM/+D,GACxB,OAAQa,EAAK,IACT,IAAK,SACDU,KAAKgxF,OAAO9xF,EAAII,EAAK,GAAIH,EAAIG,EAAK,IAClC,MACJ,IAAK,SACDU,KAAKixF,OAAO/xF,EAAII,EAAK,GAAIH,EAAIG,EAAK,IAClC,MACJ,IAAK,QACDU,KAAKwxF,MAAMtyF,EAAII,EAAK,GAAIH,EAAIG,EAAK,GAAIJ,EAAII,EAAK,GAAIH,EAAIG,EAAK,GAAIA,EAAK,IACpE,MACJ,IAAK,YACDU,KAAK69D,YAGhB,CAGY,MAAT8sB,IACA3qF,KAAKyhE,UAAYkpB,EAAMlpB,UACvBzhE,KAAK2uE,QAIE,MAAPic,IACA5qF,KAAK0hE,YAAckpB,EAAIlpB,YACvB1hE,KAAKkiE,UAAY0oB,EAAI1oB,WAAa,EAClCliE,KAAK60E,SAAW+V,EAAI/V,SACpB70E,KAAKulF,QAAUqF,EAAIrF,QACnBvlF,KAAKwlF,WAAaoF,EAAIpF,WACtBxlF,KAAKkxF,S,CAKbl6F,2BACI,IAAK+D,QAAQ+qF,iBAAkB,CAC3B,MAAMC,EAAMhrF,QAAQ+qF,iBAAmBh8E,OAAO+Y,aAAa0M,0BAC3Dw2D,EAAIC,OAAOlpB,kBAAgBmpB,WAAW,GAEtCF,EAAIC,OAAOlpB,kBAAgBopB,cAAetpB,wBAAsBupB,KAChE5zD,UAAU0B,oBAAsB,KAEhC8xD,EAAIC,OAAOlpB,kBAAgBspB,UAAW,CAACt8D,cAAY4J,IAAK5J,cAAY6J,sBAEpEoyD,EAAIC,OAAOlpB,kBAAgBupB,WAAW,GAEtCN,EAAIC,OAAOlpB,kBAAgBwpB,WAAW,GAEtCP,EAAIC,OAAOlpB,kBAAgBypB,UAAU,GAErCR,EAAIC,OAAOlpB,kBAAgB0pB,UAAW3pB,WAAS4pB,MAClD,CACD1rF,QAAQ+qF,iBAAiBY,WACzB3D,cAAc12D,eAAiB02D,cAAc12D,cAAcS,OAS3DW,gBAAgBpB,eAAiBoB,gBAAgBpB,cAAclR,MAC/DrR,OAAO+Y,aAAayL,SAAS,EAAG,EAAGlF,cAAc/gB,MAAO+gB,cAAc9gB,QACtEwB,OAAO+Y,aAAa4uE,aAAY,GAChC3nF,OAAO+Y,aAAa0L,QAAQ,EAAG,EAAGnF,cAAc/gB,MAAO+gB,cAAc9gB,O,CAiHzEopF,QAAQrnE,EAAWC,EAAWzmB,EAAWD,GAErC5D,KAAKuwF,WAAWlmE,EAAIA,EACpBrqB,KAAKuwF,WAAWjmE,EAAIA,EACpBtqB,KAAKuwF,WAAW1sF,EAAIA,EACpB7D,KAAKuwF,WAAW3sF,EAAIA,EACpBkG,OAAO+Y,aAAagM,mBAAmBhF,kBAAgBO,MAAOpqB,KAAKuwF,WAAY,E,CAOnFoB,cACI,OAAO3xF,KAAKq0D,Q,CAORu9B,YAAYhM,GAAkB,GAClC,GAAK5lF,KAAKq0D,SAAV,CAGAr0D,KAAKkvC,SAAWlvC,KAAKkvC,QAAQ/rC,UAE7BnD,KAAKkvC,QAAU,KACflvC,KAAKspE,UAAUnmE,UAEfnD,KAAKspE,UAAY,KAEjBtpE,KAAKk0D,iBAAiBvpD,QAEtB,IAAK,IAAIlM,EAAY,EAAG+G,EAAYxF,KAAKq0D,SAAS/6C,QAAS7a,EAAI+G,EAAG/G,IAC9DuB,KAAKq0D,SAAS51D,GAAGyvC,gBAWrB,IAAIpvB,EACJ,IAVA9e,KAAKq0D,SAASp4D,OAAS,EACvB+D,KAAKq0D,SAAS/6C,QAAU,EACxBtZ,KAAKq0D,SAAW,KAChBr0D,KAAK00D,WAAa,KAElB10D,KAAKw9B,MAAQ,KAEbx9B,KAAK6/D,MAAQ,KAGRphE,EAAI,EAAGqgB,EAAK9e,KAAK4zD,SAAS33D,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CAC7BuB,KAAK4zD,SAASn1D,GAC5B0E,SACR,CACDnD,KAAK4zD,SAAS33D,OAAS,EAEvB+D,KAAKyuC,OAAS,KACTm3C,IACD5lF,KAAKg7B,UAAah7B,KAAKg7B,SAAS73B,UAChCnD,KAAKg7B,SAAW,KAjChB,C,CA0CR73B,QAAQyiF,GAAkB,KACpB7qF,QAAQy1F,cACVxwF,KAAKyuC,OAAS,KACdzuC,KAAK4xF,YAAYhM,GACjB5lF,KAAKk0D,kBAAoBl0D,KAAKk0D,iBAAiB/wD,UAE/CnD,KAAKikD,MAAM9gD,UACNyiF,IACD5lF,KAAKg7B,UAAYh7B,KAAKg7B,SAAS73B,UAC/BnD,KAAKg7B,SAAW,MAEhBh7B,KAAKswF,aACLtwF,KAAKswF,WAAWz4D,QAAU73B,KAAKswF,WAAWz4D,OAAO10B,UACjDnD,KAAKswF,WAAWntF,U,CAKxBwH,QACS3K,KAAKq0D,WACNr0D,KAAKqvF,OAASsB,cAAczzB,QAC5Bl9D,KAAKkvC,QAAUvrC,OAAO+D,SACtB1H,KAAKk0D,iBAAmB,IAAI2W,gBAE5B7qE,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,OACxBjkD,KAAKw0D,UAAYzB,OAAOwB,SAASv0D,KAAKylF,QACtCzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKw0D,WACxBx0D,KAAKy0D,cAAgB5C,YAAY0C,SAASv0D,KAAKylF,QAC/CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKy0D,eAExBz0D,KAAKq0D,SAAW,GAChBr0D,KAAK6/D,MAAQ,CAACY,SAASoxB,OAAO7xF,OAC9BA,KAAK6/D,MAAM5jE,OAAS,GACpB+D,KAAKspE,UAAY,IAAI/H,UAGzBvhE,KAAKwvF,WAAW7kF,QAIhB3K,KAAKikD,MAAM0M,UAIX3wD,KAAKyrE,WAAa,EAElBzrE,KAAKqvF,OAASsB,cAAczzB,QAC5Bl9D,KAAKqvF,OAAOntB,UAAYliE,KAAKspE,UAAUj+B,MAAQ,EAE/CrrC,KAAKqpE,YAAc,EAEnBrpE,KAAKsgE,UAAYvlE,QAAQ40F,YAEzB3vF,KAAK00D,WAAa7Q,WAAWW,WAC7BX,WAAWW,WAAW3W,KAAO,SAC7BgW,WAAWW,WAAWF,QAAU,EAEhCtkD,KAAKspE,UAAU7H,UAAYzhE,KAAKspE,UAAU5H,YAAc1E,UAAUE,QAElE,IAAK,IAAIz+D,EAAI,EAAG+G,EAAIxF,KAAKq0D,SAAS/6C,QAAS7a,EAAI+G,EAAG/G,IAC9CuB,KAAKq0D,SAAS51D,GAAGyvC,gBAErBluC,KAAKq0D,SAAS/6C,QAAU,EAExBtZ,KAAKkvC,QAAQ5qC,WACbtE,KAAKqvF,OAAO1kF,QAEZ3K,KAAK0/D,UAAsB1/D,KAAK6/D,MAAM,GACtC7/D,KAAK6/D,MAAMvmD,QAAU,C,CAQzBvG,KAAKkb,EAAWC,GACRluB,KAAKoV,QAAU6Y,GAAKjuB,KAAKqV,SAAW6Y,IACpCluB,KAAKoV,OAAS6Y,EACdjuB,KAAKqV,QAAU6Y,EAGXluB,KAAKg7B,WACLh7B,KAAKg7B,SAAS73B,UACdnD,KAAKg7B,SAAW,IAAIvN,gBAAgBQ,EAAGC,EAAGtE,qBAAmB5S,UAAW,IAIxEhX,KAAKylF,SACL37E,OAAO+Y,aAAayL,SAAS,EAAG,EAAGL,EAAGC,GACtCpkB,OAAO+Y,aAAa0L,QAAQ,EAAG,EAAGN,EAAGC,GACrC9E,cAAc/gB,MAAQ4lB,EACtB7E,cAAc9gB,OAAS4lB,IAGrB,IAAND,GAAiB,IAANC,GAASluB,KAAK4xF,a,CAS7Bl3D,aAASz8B,GACT,GAAIA,EAAO,CAGP,IAAI+vB,EAAKhuB,KAAKg7B,SACd,IAAKh7B,KAAKoV,SAAWpV,KAAKqV,QACtB,MAAM6T,MAAM,qBACX8E,GAAMA,EAAG3lB,OAASrI,KAAKoV,QAAU4Y,EAAG1lB,QAAUtI,KAAKqV,UAChD2Y,GACAA,EAAG7qB,UAEPnD,KAAKg7B,SAAW,IAAIvN,gBAAgBztB,KAAKoV,OAAQpV,KAAKqV,QAASuU,qBAAmB5S,UAEzF,MACGhX,KAAKg7B,UAAYh7B,KAAKg7B,SAAS73B,UAC/BnD,KAAKg7B,SAAW,I,CASxBg9C,eACI,OAAIh4E,KAAK+vF,YAAc/vF,KAAKkvC,QAAQtrC,GAAK5D,KAAKgwF,YAAchwF,KAAKkvC,QAAQrrC,IAEzE7D,KAAK6vF,eAAiB7vF,KAAKkvC,QAAQhpC,YACnClG,KAAK+vF,WAAa/vF,KAAKkvC,QAAQtrC,EAC/B5D,KAAKgwF,WAAahwF,KAAKkvC,QAAQrrC,GAHpB7D,KAAK6vF,c,CAOpB5X,eACI,OAAIj4E,KAAKiwF,YAAcjwF,KAAKkvC,QAAQprC,GAAK9D,KAAKkwF,YAAclwF,KAAKkvC,QAAQnrC,IAEzE/D,KAAK8vF,eAAiB9vF,KAAKkvC,QAAQ9oC,YACnCpG,KAAKiwF,WAAajwF,KAAKkvC,QAAQprC,EAC/B9D,KAAKkwF,WAAalwF,KAAKkvC,QAAQnrC,GAHpB/D,KAAK8vF,c,CAQpBgC,aAAaj0F,GACTmC,KAAKowF,WAAavyF,C,CAEtBk0F,eACI,OAAO/xF,KAAKowF,U,CAGZ3uB,cAAUxjE,GACL+B,KAAKspE,UAAU7H,UAAUj3C,MAAMvsB,KAChCigE,SAAStvB,KAAK5uC,KAAMk+D,SAASI,eAAgBt+D,KAAKspE,WAAW,GAC7DtpE,KAAKspE,UAAU7H,UAAYzE,UAAUt1D,OAAOzJ,GAC5C+B,KAAKwvF,WAAWliD,OAASttC,KAAKspE,UAAU7H,UAAUtE,Q,CAItDsE,gBACA,OAAOzhE,KAAKspE,UAAU7H,S,CAGtBxK,gBAAYh5D,IACZA,EAAQV,KAAKgd,MAAc,IAARtc,GAAgB,MACtB+B,KAAKspE,UAAUj+B,QACxB6yB,SAAStvB,KAAK5uC,KAAMk+D,SAASG,WAAYr+D,KAAKspE,WAAW,GACzDtpE,KAAKspE,UAAUj+B,MAAQptC,E,CAI3Bg5D,kBACA,OAAOj3D,KAAKspE,UAAUj+B,K,CAGtB6pC,cAAUj3E,GACT+B,KAAKqvF,OAAOna,YAAcj3E,IAAW+B,KAAKqvF,OAASrvF,KAAKqvF,OAAO2C,OAAQ9zB,SAAStvB,KAAK5uC,KAAMk+D,SAASa,eAAgB/+D,KAAKqvF,QAAQ,GAAQrvF,KAAKqvF,OAAOna,UAAYj3E,E,CAGlKi3E,gBACA,OAAOl1E,KAAKqvF,OAAOna,S,CAGnBN,iBAAa32E,GACZ+B,KAAKqvF,OAAOza,eAAiB32E,IAAW+B,KAAKqvF,OAASrvF,KAAKqvF,OAAO2C,OAAQ9zB,SAAStvB,KAAK5uC,KAAMk+D,SAASY,kBAAmB9+D,KAAKqvF,QAAQ,GAAQrvF,KAAKqvF,OAAOza,aAAe32E,E,CAG3K22E,mBACA,OAAO50E,KAAKqvF,OAAOza,Y,CAGnB7Z,6BAAyB98D,GACzB,IAAIuH,EAAI+sB,UAAU4B,MAAMl2B,GACnB,MAALuH,GAAcxF,KAAKqpE,cAAgB7jE,IAAO04D,SAAStvB,KAAK5uC,KAAMk+D,SAASc,8BAA+Bh/D,MAAM,GAAOA,KAAK00D,WAAa7Q,WAAWW,WAAYxkD,KAAKqpE,YAAc7jE,E,CAG/Ku1D,+BACA,OAAOxoC,UAAU2B,MAAMl0B,KAAKqpE,Y,CAG5B3H,gBAAYzjE,GACZ+B,KAAKspE,UAAU5H,YAAYl3C,MAAMvsB,KAAWigE,SAAStvB,KAAK5uC,KAAMk+D,SAASO,iBAAkBz+D,KAAKspE,WAAW,GAAQtpE,KAAKspE,UAAU5H,YAAc1E,UAAUt1D,OAAOzJ,GAAQ+B,KAAKwvF,WAAWliD,OAASttC,KAAKspE,UAAU5H,YAAYvE,Q,CAG7NuE,kBACA,OAAO1hE,KAAKspE,UAAU5H,W,CAG1Bl9D,UAAUtF,EAAWC,GACP,IAAND,GAAiB,IAANC,IACX2hE,cAAclyB,KAAK5uC,MACfA,KAAKkvC,QAAQ/qC,aACby8D,cAAchyB,KAAK5uC,MAKnBA,KAAKkvC,QAAQlrC,IAAO9E,EAAIc,KAAKkvC,QAAQtrC,EAAIzE,EAAIa,KAAKkvC,QAAQprC,EAC1D9D,KAAKkvC,QAAQjrC,IAAO/E,EAAIc,KAAKkvC,QAAQrrC,EAAI1E,EAAIa,KAAKkvC,QAAQnrC,IAE1D/D,KAAKkvC,QAAQlrC,GAAK9E,EAClBc,KAAKkvC,QAAQjrC,GAAK9E,G,CAK1B+iE,cAAUjkE,GACT+B,KAAKqvF,OAAOntB,YAAcjkE,IAAW+B,KAAKqvF,OAASrvF,KAAKqvF,OAAO2C,OAAQ9zB,SAAStvB,KAAK5uC,KAAMk+D,SAASM,eAAgBx+D,KAAKqvF,QAAQ,GAAQrvF,KAAKqvF,OAAOntB,UAAYjkE,E,CAGlKikE,gBACA,OAAOliE,KAAKqvF,OAAOntB,S,CAGvBtzB,OACI5uC,KAAK6/D,MAAM7/D,KAAK6/D,MAAMvmD,WAAamnD,SAASoxB,OAAO7xF,K,CAGvDktB,UACI,IAAIpO,EAAa9e,KAAK6/D,MAAMvmD,QACxB24E,EAAoBjyF,KAAKqpE,YAC7B,KAAIvqD,EAAK,GAAT,CAEA,IAAK,IAAIrgB,EAAYqgB,EAAK,EAAGrgB,GAAK,EAAGA,IAAK,CACtC,IAAIq3B,EAAe91B,KAAK6/D,MAAMphE,GAE9B,GADAq3B,EAAE5I,QAAQltB,MACN81B,EAAEspC,aAEF,YADAp/D,KAAK6/D,MAAMvmD,QAAU7a,EAG5B,CACGwzF,GAAajyF,KAAKqpE,cAElBrpE,KAAK00D,WAAa7Q,WAAWW,WAX7B,C,CAeJjH,SAAKx/C,GAGLiC,KAAKqvF,OAASrvF,KAAKqvF,OAAO2C,OAC1B9zB,SAAStvB,KAAK5uC,KAAMk+D,SAASK,UAAWv+D,KAAKqvF,QAAQ,E,CAIzDta,SAASh2C,EAAwB7/B,EAAWC,EAAWq4E,EAAiB35E,EAAe4tF,EAAevpB,EAAoB,EAAGwpB,EAAsB,IAC/I3wF,QAAQ01F,YAAa9Y,SAAS33E,KAAM++B,EAAK7/B,EAAGC,EAAGq4E,EAAS35E,EAAO6tF,EAAaxpB,EAAWupB,E,CAG3FM,SAAS7rD,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAeq3E,GACjFn6E,QAAQ01F,YAAa9Y,SAAS33E,KAAMkgC,EAAMhhC,EAAGC,EAAGo+C,EAAM1/C,EAAO,KAAM,EAAGq3E,E,CAE1E8W,WAAW9rD,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAeqkE,EAAmBgT,GACtGn6E,QAAQ01F,YAAa9Y,SAAS33E,KAAMkgC,EAAMhhC,EAAGC,EAAGo+C,EAAM,KAAM1/C,EAAOqkE,EAAWgT,E,CAElF+W,eAAeltD,EAAwB7/B,EAAWC,EAAWo+C,EAAc1/C,EAAe6tF,EAAqBxpB,EAAmBgT,GAC9Hn6E,QAAQ01F,YAAa9Y,SAAS33E,KAAM++B,EAAK7/B,EAAGC,EAAGo+C,EAAM1/C,EAAO6tF,EAAaxpB,EAAWgT,E,CAIxF6C,eAAe71E,EAAyBhD,EAAWC,EAAWgtF,EAAmBtuF,EAAe+5E,EAA4B1V,EAAmBgT,GAC3In6E,QAAQ01F,YAAa1Y,eAAe/3E,KAAMkC,EAAMhD,EAAGC,EAAGgtF,EAAStuF,EAAO+5E,EAAa1V,EAAWgT,E,CAGlGgX,WAAWhqF,EAAyBhD,EAAWC,EAAWq4E,EAAiB35E,EAAe+5E,EAAqB1V,EAAmBgT,GAC9Hn6E,QAAQ01F,YAAa9Y,SAAS33E,KAAMkC,EAAMhD,EAAGC,EAAGq4E,EAAS35E,EAAO+5E,EAAa1V,EAAWgT,E,CAGpFgd,UAAUhzF,EAAWC,EAAWkJ,EAAeC,EAAgB2pD,GACnE,IAAIphB,EAAiB7wC,KAAK00D,WACtBy9B,EAAmBthD,GAAWA,EAAO/C,KAAKV,aAAeyW,WAAW6B,iBAAmB7U,EAAO/C,KAAKT,cAAgBrtC,KAAKqpE,YACxHrpE,KAAKikD,MAAMyL,QAAU,EAAI30D,QAAQq3F,cACjCpyF,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,OACxBkuC,GAAU,GAIdA,IAAYA,EAAUA,GAAWnyF,KAAKqyF,eAAexhD,IAErD7wC,KAAKsyF,cAAcpzF,EAAGC,EAAGkJ,EAAOC,EAAQ,EAAGtI,KAAKkvC,QAASlvC,KAAKyvF,gBACzDzvF,KAAKuyF,UAAUvyF,KAAKyvF,kBACrBzvF,KAAKikD,MAAMoN,QAAQrxD,KAAKyvF,eAAgBl4D,QAAQoE,MAAOs2B,GAAM,GAExDkgC,IACDthD,EAAS7wC,KAAK00D,WAAagW,cAAchjE,OAAO1H,KAAMA,KAAKikD,MAAOhZ,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IAC5GloB,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EACzC7wC,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,oBAC3Bj0D,KAAKmwF,UAAYnwF,KAAKmwF,SAASjvF,UAChC2vC,EAAOvG,YAAYoB,YAAc1rC,KAAKswF,WAEtCz/C,EAAOvG,YAAYoB,YAAc1rC,KAAKmwF,SAI1Ct/C,EAAO/C,KAAKR,MAASttC,KAAKmwF,UAAYnwF,KAAKmwF,SAASt4D,OAAW73B,KAAKmwF,SAASt4D,OAAqBj3B,IAAM,EACxGiwC,EAAOsT,YAAcN,WAAWyB,cAEpCtlD,KAAK00D,WAAWpQ,SAAW,EAC3BtkD,KAAKikD,MAAM0L,UAAY,EACvB3vD,KAAKikD,MAAMyL,SAAW,E,CAI9Bu6B,SAAS/qF,EAAWC,EAAWkJ,EAAeC,EAAgBm5D,GAC1D,IAAI+wB,EAAuB/wB,EAAYzE,UAAUt1D,OAAO+5D,GAAazhE,KAAKspE,UAAU7H,UAIhFxP,EAAejyD,KAAKyyF,eAAeD,EAAUr1B,SACjDn9D,KAAKkyF,UAAUhzF,EAAGC,EAAGkJ,EAAOC,EAAQ2pD,E,CAIxCk4B,YAAY5jE,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgBiD,EAAckV,EAAe5iB,GAUvG0oB,EAAQzN,aAIb9Y,KAAK0yF,aAAansE,EAASA,EAAQle,MAAOke,EAAQje,OAAQie,EAAQkR,OAAQv4B,EAAGC,EAAGkJ,EAAOC,EAAQiD,EAAMkV,EAAOvhB,EAAGuhB,EAAOthB,EAAGtB,GAHrHmC,KAAKyuC,QAAU5zC,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK4yF,e,CAO9DF,aAAansE,EAAkBoT,EAAcC,EAAci5D,EAAkB3zF,EAAWC,EAAWkJ,EAAeC,EAAgBiD,EAAcunF,EAAiBC,EAAiBl1F,GAC9K,IAAIgzC,EAAiB7wC,KAAK00D,WAEtB10D,KAAKikD,MAAMyL,QAAU,EAAI30D,QAAQq3F,cACjCpyF,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,QAK5B,IAAI+uC,GAAmB,EACnBC,GAAmB,EACvB,OAAQ1nF,GACJ,IAAK,SAAU,MACf,IAAK,WAAY0nF,GAAU,EAAO,MAClC,IAAK,WAAYD,GAAU,EAAO,MAClC,IAAK,YAAaA,EAAUC,GAAU,EAI1C,IAAIz7D,EAAYx3B,KAAK0vF,aACjB/0D,EAAc,EACdC,EAAc,EACdg+C,EAAc,EAAGsa,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAkBrE,GAjBIN,EAAU,GACVla,EAAM15E,EACNy7B,GAAQm4D,EAAUn5D,EAAQA,GAE1Bi/C,EAAM15E,EAAI4zF,EAEVC,EAAU,GACVG,EAAM/zF,EACNy7B,GAAQm4D,EAAUn5D,EAAQA,GAE1Bs5D,EAAM/zF,EAAI4zF,EAGdI,EAAMj0F,EAAImJ,EACV+qF,EAAMj0F,EAAImJ,GACR0qF,IAAaG,EAAM51F,KAAKwL,IAAIoqF,EAAKj0F,EAAI4zF,EAAUn5D,KAC/Cs5D,IAAaG,EAAM71F,KAAKwL,IAAIqqF,EAAKj0F,EAAI4zF,EAAUn5D,MAC7Cu5D,EAAMj0F,GAAKk0F,EAAMj0F,GAEjBy5E,EAAMua,GAAOD,EAAME,GAAvB,CAIA,IAAIC,GAAeF,EAAMj0F,EAAI4zF,GAAWn5D,EACpC25D,GAAeF,EAAMj0F,EAAI4zF,GAAWn5D,EAKxC,GAHA55B,KAAKsyF,cAAc1Z,EAAKsa,EAAKC,EAAMva,EAAKwa,EAAMF,EAAK,EAAGlzF,KAAKkvC,QAASlvC,KAAKyvF,gBAEzEj4D,EAAG,GAAKmD,EAAKnD,EAAG,GAAKoD,EAAKpD,EAAG,GAAK67D,EAAK77D,EAAG,GAAKoD,EAAKpD,EAAG,GAAK67D,EAAK77D,EAAG,GAAK87D,EAAK97D,EAAG,GAAKmD,EAAKnD,EAAG,GAAK87D,GAC9FtzF,KAAKuyF,UAAUvyF,KAAKyvF,gBAAiB,CAMtC,IAAIx9B,EAAejyD,KAAKuzF,gBAAgB11F,EAAOmC,KAAKspE,UAAUj+B,OAE9DrrC,KAAKikD,MAAMoN,QAAQrxD,KAAKyvF,eAAgBj4D,EAAIy6B,GAAM,GAElD,IAAIkX,EAAcl+B,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GAG5DihD,EAAGh+B,QAAQroC,IAAImzB,gBAAgBW,aACxBuyC,EAAKqqB,WAAaX,EAAUvsF,SACnCuqC,EAAS7wC,KAAK00D,WAAagW,cAAchjE,OAAO1H,KAAMA,KAAKikD,MAAOklB,GAClEnpE,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EACzC7wC,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,mBAChCpjB,EAAOvG,YAAYoB,YAAcnlB,EACjCsqB,EAAOsT,YAAcN,WAAWyB,aAChCtlD,KAAK00D,WAAWpQ,SAAW,EAC3BtkD,KAAKikD,MAAM0L,UAAY,EACvB3vD,KAAKikD,MAAMyL,SAAW,CACzB,CACD1vD,KAAKm7D,gBAjCD,C,CAyCRtsB,eAAei+C,GACX5uB,SAAStvB,KAAK5uC,KAAMk+D,SAASiB,iBAAkBn/D,MAAM,GAErDA,KAAKsqE,YAAcwiB,EACnB9sF,KAAK00D,WAAa7Q,WAAWW,U,CAIjCsS,YAAY/+B,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgBzK,EAAgB,YAC3FmC,KAAK+6B,cAAchD,EAAK74B,EAAGC,EAAGkJ,EAAOC,EAAQ,KAAM,EAAG,KAAMzK,E,CAGhE41F,aAAa17D,EAAcva,EAAwBxZ,EAAYC,EAAYyvF,GACvE,GAAK37D,EAAIjf,aAUT,IAHA,IAAItT,EAAYgY,EAAIvhB,OAAS,EACzB03F,EAAe,EACfC,EAAiB77D,EAAIF,OAAqBj3B,GACrCnC,EAAY,EAAGA,EAAI+G,EAAG/G,IAAK,CAChC,MAAMZ,EAA6B,iBAAd61F,EAAOj1F,GAAkBi1F,EAAOj1F,GAAK,WAC1DuB,KAAK25E,mBAAmB5hD,EAAK67D,EAAOp2E,EAAIm2E,KAAU3vF,EAAIwZ,EAAIm2E,KAAU1vF,EAAI,EAAG,EAAG,KAAM,KAAM,GAAK,EAAOpG,EACzG,MAXGmC,KAAKyuC,QAAU5zC,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK4yF,e,CAgDtDiB,sBAAsB1oB,EAAepzC,GAIzC,IAAI8Y,EAAwB,KAC5BA,EAAS65B,cAAchjE,OAAO1H,KAAMA,KAAKikD,MAAOhZ,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IAC1FloB,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EACzCA,EAAOvG,YAAYoB,YAAc3T,EAEjC8Y,EAAO/C,KAAKR,MAAQ69B,EAEpBt6B,EAAOsT,YAAcN,WAAWyB,aAChCtlD,KAAK00D,WAAa7jB,C,CAMtB9V,cAAchD,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgB2Y,EAAWmqB,EAAe5T,EAAkB35B,GAEzH,IAAIovF,EAAKjtF,KAAKyuC,OACd,QAAK1W,EAAIjf,YAAW,WACZm0E,GACAA,EAAGC,SAEX,KAGOltF,KAAK25E,mBAAmB5hD,EAAMA,EAAIF,OAAqBj3B,GAAI1B,EAAGC,EAAGkJ,EAAOC,EAAQ2Y,EAAGuW,EAAI4T,GAAO,EAAOvtC,E,CAIhH+yC,mBAAmB7Y,EAAsB74B,EAAWC,EAAWkJ,EAAeC,EAAgB2Y,EAAWmqB,EAAe5T,EAAW35B,EAAgB,YAC/I,OAAOmC,KAAK25E,mBAA8B5hD,GAAe,EAAG74B,EAAGC,EAAGkJ,EAAOC,EAAQ2Y,EAAGuW,EAAI4T,GAAO,EAAOvtC,E,CAI1Gi2F,iBACI9zF,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAas0B,UAAUlmC,OAAO,IAAI,WAA6B,GAAI1H,K,CAanGwrE,cAAc36B,EAAoBkjD,GAC9B,IAAIC,EAAYnjD,EAAOvG,YAAYiB,WACnCyoD,EAAG,GAAKD,EAASnwF,EAAGowF,EAAG,GAAKD,EAASlwF,EAAGmwF,EAAG,GAAKD,EAASjwF,EAAGkwF,EAAG,GAAKD,EAAShwF,EAC7E,IAAIkwF,EAAapjD,EAAOvG,YAAYkB,WACpCyoD,EAAI,GAAKF,EAAS/vF,GAAIiwF,EAAI,GAAKF,EAAS9vF,GACxC4sC,EAAOmT,WAAahkD,KAAKqgE,YAErBrgE,KAAKwgE,eACL3vB,EAAOvG,YAAYmB,QAAQ,GAAK,E,CAKhC4mD,eAAexhD,GACnB,OAAQA,EAAOmT,aAAehkD,KAAKqgE,W,CAiBvC6zB,mBAAmBn8D,EAAco8D,GAGzBn0F,KAAKikD,MAAMyL,QAAUykC,EAAap5F,QAAQq3F,cAC1CpyF,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,QAI5B,IAAIpT,EAAwB65B,cAAchjE,OAAO1H,KAAMA,KAAKikD,MAAOhZ,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IAC7GloB,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAatZ,KAAK00D,WAAa7jB,EAC3DA,EAAOvG,YAAYoB,YAAc3T,EACjC/3B,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,kB,CAOpCmgC,aAAal1F,EAAWC,EAAW8uB,EAAWC,EAAWsJ,GACrDx3B,KAAKsyF,cAAcpzF,EAAGC,EAAG8uB,EAAGC,EAAGluB,KAAKm4E,WAAYn4E,KAAKkvC,QAASlvC,KAAKyvF,gBAEnE,IAAI4E,EAAar0F,KAAKyvF,eACtB4E,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAC1BA,EAAI,GAAMA,EAAI,GAAK,GAAO,EAErBr0F,KAAKuyF,UAAUvyF,KAAKyvF,kBACrBzvF,KAAKikD,MAAMoN,QAAQrxD,KAAKyvF,eAAgBj4D,EAAIx3B,KAAKowF,YAAY,GAC7DpwF,KAAK00D,WAAWpQ,SAAW,EAC3BtkD,KAAKikD,MAAM0L,UAAY,EACvB3vD,KAAKikD,MAAMyL,SAAW,E,CAI9B2H,iBAAiBvf,GAEb,OADA93C,KAAKk0D,iBAAiBpc,OAAOA,EAAQ93C,MAC9B83C,C,CAgBX6hC,mBAAmB5hD,EAAcozC,EAAejsE,EAAWC,EAAWkJ,EAAeC,EAAgB2Y,EAAWuW,EAA8B4T,EAAekpD,EAAqBz2F,GAC9K,GAAIwK,GAAS,GAAKC,GAAU,EACxB,OAAO,EAEX,IAAIisF,EAAoBv0F,KAAK00D,WAAW5mB,KAIxC,GAHAtW,EAAKA,GAAMO,EAAIe,IAGXy7D,EAAOnnD,aAAeyW,WAAW+B,eAAiB2uC,EAAOjnD,QAAU69B,EAAO,CAC1E,IAAIqpB,EAAmBx0F,KAAKgvF,uBAC5BwF,EAAG,GAAKt1F,EAAGs1F,EAAG,GAAKr1F,EAAGq1F,EAAG,GAAKt1F,EAAImJ,EAAOmsF,EAAG,GAAKr1F,EAAGq1F,EAAG,GAAKt1F,EAAImJ,EAAOmsF,EAAG,GAAKr1F,EAAImJ,EAAQksF,EAAG,GAAKt1F,EAAGs1F,EAAG,GAAKr1F,EAAImJ,EAClHtI,KAAKmvF,sBAAuB,EAC5B,IAAIsF,EAAoBz0F,KAAKkvF,QAI7B,OAHAuF,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAC5Hx3B,KAAKqsF,cAAct0D,EAAK,EAAG,EAAGy8D,EAAIC,EAAKz0F,KAAKivF,wBAAyBhuE,GAAKjhB,KAAKkvC,QAAS9D,EAAO,KAAM,MACrGprC,KAAKmvF,sBAAuB,GACrB,CACV,CAED,IAAIjmB,EAAOlpE,KAAKikD,MACZpT,EAAwB7wC,KAAK00D,WAC7B2/B,EAAaC,EAAat0F,KAAKk0D,iBAAiBkX,SAAWprE,KAAKyvF,eAKpE,GAFAzvF,KAAKsyF,cAAcpzF,EAAGC,EAAGkJ,GAAS0vB,EAAI1vB,MAAOC,GAAUyvB,EAAIzvB,OAAQtI,KAAKm4E,WAAYl3D,GAAKjhB,KAAKkvC,QAASmlD,GAEnGr0F,KAAK05E,aAAc,CACnB,IAAI/6E,EAAkBpB,KAAKoB,MAC3B01F,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBA,EAAI,GAAK11F,EAAM01F,EAAI,IACnBr0F,KAAK05E,cAAe,CACvB,CAED,IAAIznB,EAAejyD,KAAKuzF,gBAAgB11F,EAAOmC,KAAKspE,UAAUj+B,MAAQD,GAGtE,GAAIkpD,EAEA,OADAt0F,KAAKk0D,iBAAiBpxD,IAAI9C,KAAM+3B,EAAKozC,EAAOkpB,EAAK78D,EAAIy6B,IAC9C,EAGXjyD,KAAKyrE,aAEL,IAAI0mB,EAAmBhnB,GAAS,GAAKopB,EAAOnnD,aAAeyW,WAAW6B,iBAAmB6uC,EAAOjnD,QAAU69B,EAwBtG,OArBJgnB,IAAYA,EAAUA,GAAWnyF,KAAKqyF,eAAexhD,IAErD7wC,KAAKmwF,SAAWp4D,EAEZmxC,EAAKxZ,QAAU,EAAI30D,QAAQq3F,cAC3BlpB,EAAOlpE,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAClDzlF,KAAK4zD,SAASv3D,KAAK6sE,GACnBipB,GAAU,GAIVjpB,EAAK7X,QAAQgjC,EAAK78D,EAAIy6B,GAAM,GACvBkgC,IACDnyF,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAatZ,KAAK00D,WAAa7jB,EAAS65B,cAAchjE,OAAO1H,KAAMkpE,EAAMj+B,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IAC/I2oB,EAAOvG,YAAYoB,YAAc3T,EACjC8Y,EAAO/C,KAAKR,MAAQ69B,EACpBnrE,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,oBAEpCpjB,EAAOyT,SAAW,EAClB4kB,EAAKvZ,UAAY,EACjBuZ,EAAKxZ,SAAW,GACT,C,CAUfglC,iBAAiB9wF,EAAUqd,EAAW3b,GAalC,IAAItB,EAAaid,EAAEjd,GACfC,EAAagd,EAAEhd,GACf0wF,EAAa1zE,EAAErd,EACfgxF,EAAa3zE,EAAEpd,EACfgxF,EAAa5zE,EAAEnd,EACfgxF,EAAa7zE,EAAEld,EACfgxF,EAAanxF,EAAE,GACfiB,EAAajB,EAAE,GACf6B,EAAa7B,EAAE,GACfoxF,EAAapxF,EAAE,GACfqxF,EAAarxF,EAAE,GACfsxF,EAAatxF,EAAE,GACfuxF,EAAavxF,EAAE,GACfwxF,EAAaxxF,EAAE,GACfqd,EAAE9c,aACFmB,EAAI,GAAKyvF,EAAKJ,EAAK9vF,EAAKgwF,EAAK7wF,EAAIsB,EAAI,GAAKyvF,EAAKH,EAAK/vF,EAAKiwF,EAAK7wF,EAC9DqB,EAAI,GAAKG,EAAKkvF,EAAKK,EAAKH,EAAK7wF,EAAIsB,EAAI,GAAKG,EAAKmvF,EAAKI,EAAKF,EAAK7wF,EAC9DqB,EAAI,GAAK2vF,EAAKN,EAAKO,EAAKL,EAAK7wF,EAAIsB,EAAI,GAAK2vF,EAAKL,EAAKM,EAAKJ,EAAK7wF,EAC9DqB,EAAI,GAAK6vF,EAAKR,EAAKS,EAAKP,EAAK7wF,EAAIsB,EAAI,GAAK6vF,EAAKP,EAAKQ,EAAKN,EAAK7wF,IAE9DqB,EAAI,GAAKyvF,EAAK/wF,EAAIsB,EAAI,GAAKT,EAAKZ,EAChCqB,EAAI,GAAKG,EAAKzB,EAAIsB,EAAI,GAAK0vF,EAAK/wF,EAChCqB,EAAI,GAAK2vF,EAAKjxF,EAAIsB,EAAI,GAAK4vF,EAAKjxF,EAChCqB,EAAI,GAAK6vF,EAAKnxF,EAAIsB,EAAI,GAAK8vF,EAAKnxF,E,CASxCsuF,UAAUtmB,GAEN,OAAIjsE,KAAKsgE,UAAUj4D,OAAS,GAAKrI,KAAKsgE,UAAUh4D,QAAU,C,CAa9DgqF,cAAcpzF,EAAWC,EAAW8uB,EAAWC,EAAWmnE,EAAmBp0E,EAAW3b,GAQpF,IAAIgwF,EAAe,EACF,GAAbD,IACAC,EAAO/3F,KAAK2H,IAAImwF,EAAY93F,KAAKC,GAAK,KAAO0wB,GAEjD,IAAIytD,EAAez8E,EAAI+uB,EAAOsnE,EAAep2F,EAAI+uB,EAE7ClqB,EAAaid,EAAEjd,GACfC,EAAagd,EAAEhd,GACf0wF,EAAa1zE,EAAErd,EACfgxF,EAAa3zE,EAAEpd,EACfgxF,EAAa5zE,EAAEnd,EACfgxF,EAAa7zE,EAAEld,EACfgxF,EAAa71F,EAAIo2F,EACjBzwF,EAAa1F,EACbsG,EAAak2E,EAAO2Z,EACpBN,EAAa71F,EACb81F,EAAatZ,EACbuZ,EAAaK,EACbJ,EAAaj2F,EACbk2F,EAAaG,EACbt0E,EAAE9c,aACFmB,EAAI,GAAKyvF,EAAKJ,EAAK9vF,EAAKgwF,EAAK7wF,EAAIsB,EAAI,GAAKyvF,EAAKH,EAAK/vF,EAAKiwF,EAAK7wF,EAC9DqB,EAAI,GAAKG,EAAKkvF,EAAKK,EAAKH,EAAK7wF,EAAIsB,EAAI,GAAKG,EAAKmvF,EAAKI,EAAKF,EAAK7wF,EAC9DqB,EAAI,GAAK2vF,EAAKN,EAAKO,EAAKL,EAAK7wF,EAAIsB,EAAI,GAAK2vF,EAAKL,EAAKM,EAAKJ,EAAK7wF,EAC9DqB,EAAI,GAAK6vF,EAAKR,EAAKS,EAAKP,EAAK7wF,EAAIsB,EAAI,GAAK6vF,EAAKP,EAAKQ,EAAKN,EAAK7wF,IAe9DqB,EAAI,GAAKyvF,EAAK/wF,EAAIsB,EAAI,GAAKT,EAAKZ,EAChCqB,EAAI,GAAKG,EAAKzB,EAAIsB,EAAI,GAAK0vF,EAAK/wF,EAChCqB,EAAI,GAAK2vF,EAAKjxF,EAAIsB,EAAI,GAAK4vF,EAAKjxF,EAChCqB,EAAI,GAAK6vF,EAAKnxF,EAAIsB,EAAI,GAAK8vF,EAAKnxF,E,CAIxCksC,SACInwC,KAAK+wC,gBAAgBnD,UAAUlmC,OAAO,KAAM+lB,gBAAgB0iB,OAAQnwC,M,CAExE2wC,QACI3wC,KAAK+wC,gBAAgBnD,UAAUlmC,OAAO,KAAM+lB,gBAAgBkjB,MAAO3wC,OACnEA,KAAKm7D,gB,CAIT/qB,MAAMpiB,GAWFhuB,KAAK+wC,gBAAgBnD,UAAUlmC,OAAO,CAACsmB,IATvC,SAAcA,GACV,IAAKA,EACD,KAAM,cAENA,EAAG/S,QACH+S,EAAGrjB,MAAM,EAAG,EAAG,EAAG,E,GAIwB3K,OAClDA,KAAKm7D,gB,CAQTq6B,UAAUxnE,GAINhuB,KAAK+wC,gBAAgBnD,UAAUlmC,OAAO,CAACsmB,IAHvC,SAAkBA,GACdA,EAAGd,S,GAE+CltB,OACtDA,KAAKm7D,gB,CAOTA,iBACIn7D,KAAK00D,WAAa7Q,WAAWW,U,CAIzBouC,iBACJ5yF,KAAKyuC,QAAUzuC,KAAKyuC,OAAOy+C,S,CAe/BvF,yBAAyB5vD,EAAc74B,EAAWC,EAAWkJ,EAAeC,EAAgBguD,EAA0BtyD,EAAYC,EAAYmnC,EAAe0vB,EAA0BtjC,EAAe35B,EAAQ,YAC1M,IAAI43F,EACAr/B,EAAiBp2D,KAAKkvC,QAM1B,GALI4rB,IACA26B,EAAUz1F,KAAK+6D,yBACf/6D,KAAK+6D,yBAA2BD,IAG/BxE,EAKD,OAJAt2D,KAAK+6B,cAAchD,EAAK74B,EAAI8E,EAAI7E,EAAI8E,EAAIoE,EAAOC,EAAQ8tD,EAAQhrB,EAAO5T,EAAI35B,QACtEi9D,IACA96D,KAAK+6D,yBAA2B06B,IAIxC,IAAIC,EAAiB11F,KAAKwkF,WAE1BkR,EAAO9xF,EAAI0yD,EAAU1yD,EAAG8xF,EAAO7xF,EAAIyyD,EAAUzyD,EAAG6xF,EAAO5xF,EAAIwyD,EAAUxyD,EAAG4xF,EAAO3xF,EAAIuyD,EAAUvyD,EAAG2xF,EAAO1xF,GAAKsyD,EAAUtyD,GAAKA,EAAI0xF,EAAOzxF,GAAKqyD,EAAUryD,GAAKA,EAC1JyxF,EAAOvxF,YAAcmyD,EAAUnyD,YAE3BmyD,GAAaF,EAAOjyD,aAEpBR,OAAOumE,IAAIwrB,EAAQt/B,EAAQs/B,IAC3Bp/B,EAAYo/B,GACFvxF,aAAc,IAGxBuxF,EAAO1xF,IAAMoyD,EAAOpyD,GACpB0xF,EAAOzxF,IAAMmyD,EAAOnyD,GACpBqyD,EAAYo/B,GAEhB11F,KAAK+6B,cAAchD,EAAK74B,EAAGC,EAAGkJ,EAAOC,EAAQguD,EAAWlrB,EAAO5T,EAAI35B,GAC/Di9D,IACA96D,KAAK+6D,yBAA2B06B,E,CAQhCE,eAAenuE,EAAkBnd,GAIrC+e,cAAcM,kBAAmB,EACjC5f,OAAO+Y,aAAa4uE,aAAY,GAEhC,IAAI/nB,EAAmBtgD,cAAcO,WACjCggD,EAAoBvgD,cAAcY,aAClC4/C,EAAoBxgD,cAAca,YAEEb,cAAc4gD,mBAEtD5gD,cAAca,YAActmB,OAAOiE,MAEnCwhB,cAAcwsE,mBACdxsE,cAAcY,aAAeZ,cAAcK,eAC3CL,cAAcO,WAAa,EAG3BR,WAAWwF,aAAe,KAE1BtkB,EAAO4Q,QAIHuM,EAAQ6sC,SAAS/6C,QAAU,GAC3BjP,EAAOM,MAAM,EAAG,EAAG,EAAG,GAE1B6c,EAAQktC,WAAa7Q,WAAWW,WAChCh9B,EAAQyT,QACRzT,EAAQ7c,QACRN,EAAO6iB,UACP1F,EAAQktC,WAAa7Q,WAAWW,WAEhCr7B,WAAWwF,aAAe,KAC1BvF,cAAcO,WAAa+/C,EAC3BtgD,cAAcY,aAAe2/C,EAC7BvgD,cAAca,YAAc2/C,C,CAKhCzP,WAAW5yC,EAAoBroB,EAAWC,EAAWkJ,EAAeC,GAChE,GAAKif,EAAL,CACA,IACIspB,EADAjO,EAAerb,EAAOC,QAE1B,GAAIob,EAAI5H,SASA4H,EAAIyxB,SAAS/6C,QAAU,IACvBu3B,EAASjD,UAAUlmC,OAAO,CAACk7B,EAAKA,EAAI5H,UAAWh7B,KAAK21F,eAAgB31F,MACpEA,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,GAG7C7wC,KAAK4wC,mBAAmBhO,EAAI5H,SAAU97B,EAAGC,EAAGkJ,EAAOC,EAAQ,KAAM,EAAKmlB,gBAAgBD,SACtFxtB,KAAK00D,WAAa7Q,WAAWW,eAS1B,CACH,IAAIqV,EAA6DtyC,EAC7DsyC,EAAKhuD,SACIguD,EAAKhuD,QAAUjB,SAAQ,SAAUwQ,GAA2BA,EAAEm3D,OAAQ,IAGnF1hC,EAAS24B,aAAa9hE,OAAO6f,EAAQvnB,KAAKspE,UAAUj+B,MAAOrrC,KAAKspE,UAAUt8B,SAC1EhtC,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EACzBA,EAAS/C,KAAKnjC,QAG9B,IAAI0e,EAA8BwnB,EAASmC,QAC3ChzC,KAAKkvC,QAAQvnC,OAAO0hB,GAGpB,IAAIrlB,EAAaqlB,EAAIrlB,GAAIC,EAAaolB,EAAIplB,GAC1ColB,EAAIrlB,GAAKqlB,EAAIplB,GAAK,EAClBolB,EAAIrjB,eAAe8B,MAAMD,KAAK9B,MAAM7G,EAAGC,IACvCkqB,EAAI7kB,UAAUsD,MAAMD,KAAK3I,EAAI8E,EAAI8D,MAAMD,KAAK1I,EAAI8E,GAEhDN,OAAOumE,IAAIrQ,EAAK7F,OAAQ3qC,EAAKA,GAE7BrpB,KAAK00D,WAAa7Q,WAAWW,UAChC,CAlDY,C,CAqDjBjU,WAAWviB,EAAqB9uB,EAAWC,EAAWkJ,EAAeC,EAAgB2Y,EAAWqpB,EAAsB9S,EAA+B,KAAM6yC,GAAgB,EAAIxsE,EAAgB,YAS3L,GARAmC,KAAKyrE,aACDzrE,KAAKikD,MAAMyL,QAAU,EAAI30D,QAAQq3F,cACjCpyF,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,QAI5BjkD,KAAKsyF,cAAcpzF,EAAGC,EAAGkJ,EAAOC,EAAQ,EAAG2Y,GAAKjhB,KAAKkvC,QAASlvC,KAAKyvF,iBAC9DzvF,KAAKuyF,UAAUvyF,KAAKyvF,gBAAiB,CACtCzvF,KAAKikD,MAAMoN,QAAQrxD,KAAKyvF,eAAgBj4D,GAAMD,QAAQU,OAAQp6B,GAAO,GAErE,IAAIgzC,EAAuB7wC,KAAK00D,WAAayV,aAAaziE,OAAO1H,KAAMA,KAAKikD,MAAO3Z,EAAatc,GAShG,OARA6iB,EAAOu4B,WAAuB,GAAViB,EAAerqE,KAAKqpE,YAAcgB,EACtDrqE,KAAKwrE,cAA4B36B,EAAiB7wC,KAAKi0D,mBACvDpjB,EAAOyT,QAAU,EACjBtkD,KAAKikD,MAAM0L,UAAY,EACvB3vD,KAAKikD,MAAMyL,SAAW,EACtB1vD,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EAEzC7wC,KAAK00D,WAAa7Q,WAAWW,YACtB,CACV,CAGD,OADAxkD,KAAK00D,WAAa7Q,WAAWW,YACtB,C,CAGX6nC,cAAct0D,EACV74B,EAAWC,EACX4yD,EACAC,EACAiQ,EACA17D,EAAgB6kC,EAAe0vB,EAAmBwxB,EAAmB,YAErE,GAAKv0D,EAAIjf,aAAT,CAMA,IAAI28E,EAAyB,KACzB36B,IACA26B,EAAUz1F,KAAK+6D,yBACf/6D,KAAK+6D,yBAA2BD,GAEpC96D,KAAKyrE,aAGL,IAAIiqB,EAAS11F,KAAKwkF,WACdqR,EAAU71F,KAAKy0D,cAEfqhC,EAAW/9D,EAAIF,OACf08D,EAAoBv0F,KAAK00D,WAAW5mB,KACpCqkD,EAAmBoC,EAAOnnD,aAAeyW,WAAW+B,eAAiB2uC,EAAOjnD,QAAUwoD,EAASl1F,IAAM2zF,EAAOlnD,aAAertC,KAAKqpE,YASpI,GALIwsB,EAAQnmC,QAAUqC,EAAS91D,OAAS,EAAIlB,QAAQq3F,cAChDyD,EAAU71F,KAAKy0D,cAAgB5C,YAAY0C,SAASv0D,KAAKylF,QACzDzlF,KAAK4zD,SAASv3D,KAAKw5F,GACnB1D,GAAU,IAETA,EAAS,CAEV,IAAIthD,EAAwB7wC,KAAK00D,WAAagW,cAAchjE,OAAO1H,KAAM61F,EAAS5qD,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,IAC5H2oB,EAAOvG,YAAYoB,YAAc3T,EACjC8Y,EAAOsT,YAAcN,WAAWyB,aAChCzU,EAAO/C,KAAKV,WAAayW,WAAW+B,cACpC/U,EAAO/C,KAAKR,MAAQwoD,EAASl1F,GAC7BZ,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,mBAChCj0D,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,CAC5C,CAED,IAAIohB,EAAejyD,KAAKuzF,gBAAgBjH,EAAUtsF,KAAKspE,UAAUj+B,MAAQD,GACpEprC,KAAKmvF,qBAUN0G,EAAQ/jC,QAAQC,EAAUC,EAAKiQ,EAAS17D,EAAQ0rD,IAT3C1rD,GAGDmvF,EAAO9xF,EAAI2C,EAAO3C,EAAG8xF,EAAO7xF,EAAI0C,EAAO1C,EAAG6xF,EAAO5xF,EAAIyC,EAAOzC,EAAG4xF,EAAO3xF,EAAIwC,EAAOxC,EAAG2xF,EAAO1xF,GAAKuC,EAAOvC,GAAK9E,EAAGw2F,EAAOzxF,GAAKsC,EAAOtC,GAAK9E,IAFvIu2F,EAAO9xF,EAAI,EAAG8xF,EAAO7xF,EAAI,EAAG6xF,EAAO5xF,EAAI,EAAG4xF,EAAO3xF,EAAI,EAAG2xF,EAAO1xF,GAAK9E,EAAGw2F,EAAOzxF,GAAK9E,GAIvFwE,OAAOumE,IAAIwrB,EAAQ11F,KAAKkvC,QAASwmD,GACjCG,EAAQ/jC,QAAQC,EAAUC,EAAKiQ,EAASyzB,GAAU11F,KAAKkvC,QAAS+iB,IAKpEjyD,KAAK00D,WAAWpQ,SAAW2d,EAAQhmE,OAE/B6+D,IACA96D,KAAK+6D,yBAA2B06B,EAlDnC,MAJOz1F,KAAKyuC,QACL5zC,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK4yF,e,CA0DnDt8B,UAAU1yD,EAAWC,EAAWC,EAAWC,EAAWC,EAAYC,GAC9D28D,cAAchyB,KAAK5uC,MACnB2D,OAAOumE,IAAIvmE,OAAOkE,KAAK9B,MAAMnC,EAAGC,EAAGC,EAAGC,EAAGC,EAAIC,GAAKjE,KAAKkvC,QAASlvC,KAAKkvC,SACrElvC,KAAKkvC,QAAQ7qC,iB,CAKjB0xF,mBAAmBxvF,EAAgBvC,EAAYC,GAC3CsC,EAAOhC,aAAaP,EAAIC,GACxBN,OAAOumE,IAAI3jE,EAAQvG,KAAKkvC,QAASlvC,KAAKkvC,SACtC3oC,EAAOhC,aAAa,EAAG,GACvBvE,KAAKkvC,QAAQ/qC,aAAc,C,CAI/B6xF,qBAAqB/3F,GACjBA,EAAM0J,OAAO3H,KAAKkvC,Q,CAGtBxqC,OAAO/G,GACHijE,cAAchyB,KAAK5uC,MACnBA,KAAKkvC,QAAQ3nC,SAAS5J,E,CAG1B8G,MAAM21D,EAAgBC,GAClBuG,cAAchyB,KAAK5uC,MACnBA,KAAKkvC,QAAQ5nC,QAAQ8yD,EAAQC,E,CAGjChB,SAASn6D,EAAWC,EAAWkJ,EAAeC,EAAgB2tF,GAgB1D,GAfA71B,aAAaxxB,KAAK5uC,MACdA,KAAKsgE,WAAavlE,QAAQ40F,YAC1B3vF,KAAKsgE,UAAY,IAAIl4D,UAAUlJ,EAAGC,EAAGkJ,EAAOC,IAE5CtI,KAAKsgE,UAAUj4D,MAAQA,EACvBrI,KAAKsgE,UAAUh4D,OAASA,EAGxBtI,KAAKsgE,UAAUphE,EAAIA,EACnBc,KAAKsgE,UAAUnhE,EAAIA,GAEvBa,KAAK4vF,cACL5vF,KAAK4vF,aAAe,IACpB5vF,KAAKqgE,YAAcrgE,KAAK4vF,YAEpBqG,EACAlH,EAAkBpnF,OAAO3H,KAAKi0D,uBADlC,CAKA,IAAI+/B,EAAah0F,KAAKi0D,kBAElBynB,EAAesY,EAAGhwF,GAClBkyF,EAAelC,EAAG/vF,GAClB03E,EAAeD,EAAOsY,EAAGpwF,EACzB2xF,EAAeW,EAAOlC,EAAGjwF,EA4B7B,GAzBI/D,KAAKsgE,UAAUj4D,OAASxP,MAAMM,eAC9B66F,EAAGpwF,EAAIowF,EAAGjwF,EAAIlL,MAAMM,cACpB66F,EAAGnwF,EAAImwF,EAAGlwF,EAAIkwF,EAAGhwF,GAAKgwF,EAAG/vF,GAAK,IAG1BjE,KAAKkvC,QAAQ/qC,aACb6vF,EAAGhwF,GAAKhE,KAAKsgE,UAAUphE,EAAIc,KAAKkvC,QAAQtrC,EAAI5D,KAAKsgE,UAAUnhE,EAAIa,KAAKkvC,QAAQprC,EAAI9D,KAAKkvC,QAAQlrC,GAC7FgwF,EAAG/vF,GAAKjE,KAAKsgE,UAAUphE,EAAIc,KAAKkvC,QAAQrrC,EAAI7D,KAAKsgE,UAAUnhE,EAAIa,KAAKkvC,QAAQnrC,EAAI/D,KAAKkvC,QAAQjrC,GAC7F+vF,EAAGpwF,EAAI5D,KAAKsgE,UAAUj4D,MAAQrI,KAAKkvC,QAAQtrC,EAC3CowF,EAAGnwF,EAAI7D,KAAKsgE,UAAUj4D,MAAQrI,KAAKkvC,QAAQrrC,EAC3CmwF,EAAGlwF,EAAI9D,KAAKsgE,UAAUh4D,OAAStI,KAAKkvC,QAAQprC,EAC5CkwF,EAAGjwF,EAAI/D,KAAKsgE,UAAUh4D,OAAStI,KAAKkvC,QAAQnrC,IAE5CiwF,EAAGhwF,GAAKhE,KAAKsgE,UAAUphE,EAAIc,KAAKkvC,QAAQlrC,GACxCgwF,EAAG/vF,GAAKjE,KAAKsgE,UAAUnhE,EAAIa,KAAKkvC,QAAQjrC,GACxC+vF,EAAGpwF,EAAI5D,KAAKsgE,UAAUj4D,MACtB2rF,EAAGnwF,EAAImwF,EAAGlwF,EAAI,EACdkwF,EAAGjwF,EAAI/D,KAAKsgE,UAAUh4D,QAEtBtI,KAAKo0D,WACLp0D,KAAKwgE,cAAe,IAKxBwzB,EAAGpwF,EAAI,GAAKowF,EAAGjwF,EAAI,EAAG,CACtB,IAAIoyF,EAAgBnC,EAAGhwF,GAAKgwF,EAAGpwF,EAC3BwyF,EAAgBpC,EAAG/vF,GAAK+vF,EAAGjwF,EAC3BoyF,GAASza,GAAQ0a,GAASF,GAAQlC,EAAGhwF,IAAM23E,GAAQqY,EAAG/vF,IAAMsxF,GAE5DvB,EAAGpwF,GAAK,GAAKowF,EAAGjwF,GAAK,KAEjBiwF,EAAGhwF,GAAK03E,IACRsY,EAAGpwF,GAAM83E,EAAOsY,EAAGhwF,GACnBgwF,EAAGhwF,GAAK03E,GAERya,EAAQxa,IACRqY,EAAGpwF,GAAMuyF,EAAQxa,GAEjBqY,EAAG/vF,GAAKiyF,IACRlC,EAAGjwF,GAAMmyF,EAAOlC,EAAG/vF,GACnB+vF,EAAG/vF,GAAKiyF,GAERE,EAAQb,IACRvB,EAAGjwF,GAAMqyF,EAAQb,GAEjBvB,EAAGpwF,GAAK,IAAGowF,EAAGpwF,GAAK,IACnBowF,EAAGjwF,GAAK,IAAGiwF,EAAGjwF,GAAK,IAE9B,CA3DA,C,CA+DLgtC,gBAAgBjb,GACZ91B,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAawc,C,CAQ7CugE,cAAcp7E,EAAeE,GACFnb,KAAKylF,OAC5B,IAAI6Q,EAAoBt2F,KAAKq0D,SACzBjjD,EAAqBklF,EAAah9E,QACtC6B,EAAM,IAAMA,EAAam7E,EAAah9E,SAEtC,IADA,IAAIu3B,EAAiBgT,WAAWW,WACzBvpC,EAAQE,GACXnb,KAAKsvF,uBAAyBr0E,EAAQ,EAClCq7E,EAAWr7E,KAAW4oC,WAAWW,YAIrCX,WAAWgC,UAAYhV,EAGvB51B,IAFA41B,EAASylD,EAAWr7E,IAEJ8yB,gBANZ9yB,IAWR,OAAO7J,C,CAGX6pB,QACIj7B,KAAK4vF,YAAc,EACnB,IAAIx+E,EAAcpR,KAAKq2F,cAAc,EAAGr2F,KAAKq0D,SAAS/6C,SACtDtZ,KAAKw9B,OAASx9B,KAAKw9B,MAAMz1B,QACzB65D,eAAetlE,UAAYslE,eAAe20B,cAAcxuF,QAGxD/H,KAAK00D,WAAa7Q,WAAWW,WAE7B,IAAK,IAAI/lD,EAAY,EAAGqgB,EAAa9e,KAAK4zD,SAAS33D,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CACpE,IAAI61D,EAAet0D,KAAK4zD,SAASn1D,GACjC61D,EAAKxE,SAAYwE,EAAK5D,cAAkB4D,EAAKnxD,SAChD,CAeD,OAdAnD,KAAK4zD,SAAS33D,OAAS,EAEvB+D,KAAKikD,MAAQ4M,gBAAgB0D,SAASv0D,KAAKylF,QAC3CzlF,KAAKw0D,UAAYzB,OAAOwB,SAASv0D,KAAKylF,QACtCzlF,KAAKy0D,cAAgB5C,YAAY0C,SAASv0D,KAAKylF,QAC/CzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKikD,MAAOjkD,KAAKw0D,UAAWx0D,KAAKy0D,eAEpDz0D,KAAKqwF,YAEDrwF,KAAKqwF,UAAY,IAAM,GAAKrwF,KAAKylF,QAC7B7X,WAAWoJ,gBACXpJ,WAAWoJ,eAAeqD,KAG3BjpE,C,CAKXssD,UAAUC,GAAkB,GACN39D,KAAKw2F,WACjB94B,UAAUC,E,CAGpBE,YAEI79D,KAAKw9B,MAAMqgC,W,CAWfszB,QAAQlyF,EAAew3F,EAAgB94B,EAAiB7pB,EAAY0vB,GAChE,IAAI1kD,EAAK7f,EAAOhD,OAChB,IAAK,IAAIwC,EAAI,EAAGA,EAAIqgB,EAAK,EAAGrgB,GAAK,EAC7BQ,EAAOR,IAAMq1C,EACb70C,EAAOR,EAAI,IAAM+kE,EAEjBizB,GAAS33E,EAAK,IAAM7f,EAAO6f,EAAK,IAAM7f,EAAO,IAAMA,EAAO6f,EAAK,IAAM7f,EAAO,KAC5EA,EAAO5C,KAAK4C,EAAO,GAAIA,EAAO,IAElCe,KAAKw2F,WAAWn6F,KAAK4C,EAAQ0+D,E,CAGjCgR,OACI,IAAI1tD,EAAYjhB,KAAKkvC,QACjBwnD,EAAc12F,KAAKw2F,WACnB3lD,EAAiB7wC,KAAK00D,WACtBy9B,EAAoBthD,EAAO/C,KAAKV,aAAeyW,WAAW8B,QAAU9U,EAAO/C,KAAKT,cAAgBrtC,KAAKqpE,YACzG8oB,IAAYA,EAAUA,GAAWnyF,KAAKqyF,eAAexhD,IAChDshD,IACDnyF,KAAK00D,WAAa10D,KAAK22F,YAAY32F,KAAKw0D,YAM5C,IAJA,IAEIrE,EAFA8B,EAAejyD,KAAKyyF,eAAezyF,KAAKyhE,UAAUtE,SAClDy5B,EAAoB,EAGfn4F,EAAY,EAAGqgB,EAAa43E,EAAMl5B,MAAMvhE,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CAClE,IAAIuwC,EAAS0nD,EAAMl5B,MAAM/+D,GACrBixD,EAAkB1gB,EAAE1vC,KAAKrD,OAAS,EACtC,KAAIyzD,EAAU,GAAiB,GAAXA,IAAiB1gB,EAAE2uB,QAAvC,CAEA,IAGIk5B,EAAYC,EACZp/B,EAAYC,EAJZo/B,EAAe/nD,EAAE1vC,KAAKgH,SAEtB0wF,EAAa,EAGjB,GAAI/1E,EAAE9c,YACF,IAAK6yF,EAAK,EAAGA,EAAKtnC,EAASsnC,IAEvBF,GADAD,EAAKG,GAAM,GACD,EACVt/B,EAAKq/B,EAAMF,GACXl/B,EAAKo/B,EAAMD,GAEXC,EAAMF,GAAM51E,EAAErd,EAAI8zD,EAAKz2C,EAAEnd,EAAI6zD,EAAK12C,EAAEjd,GACpC+yF,EAAMD,GAAM71E,EAAEpd,EAAI6zD,EAAKz2C,EAAEld,EAAI4zD,EAAK12C,EAAEhd,QAGxC,IAAK+yF,EAAK,EAAGA,EAAKtnC,EAASsnC,IAEvBF,GADAD,EAAKG,GAAM,GACD,EACVt/B,EAAKq/B,EAAMF,GACXl/B,EAAKo/B,EAAMD,GACXC,EAAMF,GAAMn/B,EAAKz2C,EAAEjd,GACnB+yF,EAAMD,GAAMn/B,EAAK12C,EAAEhd,GAIvBjE,KAAKw0D,UAAU9E,QAAUA,EAAU30D,QAAQq3F,cAG3CpyF,KAAK00D,WAAWpQ,SAAWsyC,EAC3BA,EAAY,EAEZ52F,KAAKw0D,UAAYzB,OAAOwB,SAASv0D,KAAKylF,QACtCzlF,KAAK00D,WAAa10D,KAAK22F,YAAY32F,KAAKw0D,YAG5C,IAAIpE,EAAkBpwD,KAAKw0D,UAAU9E,QAErC,GAAI1gB,EAAE2uB,OAAQ,CACV,IAAIs5B,EAAkBvnC,EAAU,EAChCS,EAAM,IAAI9+C,MAAgB,EAAV4lF,GAEhB,IADA,IAAIC,EAAiB,EACZC,EAAa,EAAGA,EAAKF,EAASE,IACnChnC,EAAI+mC,KAAY9mC,EAChBD,EAAI+mC,KAAYC,EAAK,EAAI/mC,EACzBD,EAAI+mC,KAAYC,EAAK,EAAI/mC,CAEhC,MAGG,GADAD,EAAM8T,OAAOmzB,OAAOL,EAAO,KAAM,GAC7B3mC,EAAU,EAEV,IAAK,IAAIm9B,EAAa,EAAGA,EAAKp9B,EAAIl0D,OAAQsxF,IACtCp9B,EAAIo9B,IAAOn9B,EAKvBpwD,KAAKw0D,UAAUxB,mBAAmBhzD,KAAM+2F,EAAO9kC,EAAM9B,GACrDymC,GAAazmC,EAAIl0D,MA5Db,CA6DP,CACD+D,KAAK00D,WAAWpQ,SAAWsyC,C,CAGvBD,YAAYztB,GAEhB,IAAIr4B,EAAiB+3B,OAAOyuB,YAAYr3F,KAAMkpE,EAAM,EAAGj+B,QAAQvjC,OAAOuuB,gBAAgBK,UAAW,IAMjG,OAHAua,EAAO/C,KAAKV,WAAayW,WAAW8B,OACpC3lD,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAau3B,EACzC7wC,KAAKwrE,cAAc36B,EAAQ7wC,KAAKi0D,mBACzBpjB,C,CAGXqgD,SACI,GAAIlxF,KAAKkiE,UAAY,EAAG,CACpB,IAAIjQ,EAAejyD,KAAKyyF,eAAezyF,KAAK0hE,YAAYttB,OAAOvC,UAC3D6kD,EAAc12F,KAAKw2F,WACnB3lD,EAAiB7wC,KAAK00D,WACtBy9B,EAAoBthD,EAAO/C,KAAKV,aAAeyW,WAAW8B,QAAU9U,EAAO/C,KAAKT,cAAgBrtC,KAAKqpE,YACzG8oB,IAAYA,EAAUA,GAAWnyF,KAAKqyF,eAAexhD,IAEhDshD,IACDnyF,KAAK00D,WAAa10D,KAAK22F,YAAY32F,KAAKw0D,YAI5C,IAFA,IAAIoiC,EAAoB,EAEfn4F,EAAY,EAAGqgB,EAAa43E,EAAMl5B,MAAMvhE,OAAQwC,EAAIqgB,EAAIrgB,IAAK,CAClE,IAAIuwC,EAAS0nD,EAAMl5B,MAAM/+D,GACzB,KAAIuwC,EAAE1vC,KAAKrD,QAAU,GAArB,CAEA,IAAIk0D,EAAa,GACbmnC,EAAgB,GAGhBC,EAAuC,EAAhBvoD,EAAE1vC,KAAKrD,OAClC,KAAIs7F,EAAe,GAAnB,CAEIv3F,KAAKw0D,UAAU9E,QAAU6nC,EAAex8F,QAAQq3F,cAGhDpyF,KAAK00D,WAAWpQ,SAAWsyC,EAC3BA,EAAY,EAEZ52F,KAAKw0D,UAAYzB,OAAOwB,SAASv0D,KAAKylF,QACtCzlF,KAAK4zD,SAASv3D,KAAK2D,KAAKw0D,WACxBx0D,KAAK00D,WAAa10D,KAAK22F,YAAY32F,KAAKw0D,YAG5CwN,SAASw1B,YAAYxoD,EAAE1vC,KAAM6wD,EAAKnwD,KAAKkiE,UAAWliE,KAAKw0D,UAAU9E,QAAS4nC,EAAQtoD,EAAEmP,MAEpF,IAGI04C,EAAYC,EACZp/B,EAAYC,EAJZ8/B,EAAgBH,EAAOr7F,OAAS,EAChCglB,EAAYjhB,KAAKkvC,QACjB8nD,EAAa,EAGjB,GAAI/1E,EAAE9c,YACF,IAAK6yF,EAAK,EAAGA,EAAKS,EAAOT,IAErBF,GADAD,EAAKG,GAAM,GACD,EACVt/B,EAAK4/B,EAAOT,GACZl/B,EAAK2/B,EAAOR,GAEZQ,EAAOT,GAAM51E,EAAErd,EAAI8zD,EAAKz2C,EAAEnd,EAAI6zD,EAAK12C,EAAEjd,GACrCszF,EAAOR,GAAM71E,EAAEpd,EAAI6zD,EAAKz2C,EAAEld,EAAI4zD,EAAK12C,EAAEhd,QAGzC,IAAK+yF,EAAK,EAAGA,EAAKS,EAAOT,IAErBF,GADAD,EAAKG,GAAM,GACD,EACVt/B,EAAK4/B,EAAOT,GACZl/B,EAAK2/B,EAAOR,GACZQ,EAAOT,GAAMn/B,EAAKz2C,EAAEjd,GACpBszF,EAAOR,GAAMn/B,EAAK12C,EAAEhd,GAM5BjE,KAAKw0D,UAAUxB,mBAAmBhzD,KAAMs3F,EAAQrlC,EAAM9B,GACtDymC,GAAazmC,EAAIl0D,MA3Cb,CAPA,CAmDP,CACD+D,KAAK00D,WAAWpQ,SAAWsyC,CAC9B,C,CAGL5F,OAAO9xF,EAAWC,GACd,IAAIu3F,EAAc12F,KAAKw2F,WACvBE,EAAM54B,UACN44B,EAAMp5B,UAAYp+D,EAClBw3F,EAAMn5B,UAAYp+D,EAClBu3F,EAAMztF,SAAS/J,EAAGC,E,CAStB8xF,OAAO/xF,EAAWC,GACd,IAAIu3F,EAAc12F,KAAKw2F,WACnBj5F,KAAKglE,IAAIrjE,EAAIw3F,EAAMp5B,WAAa,MAAQ//D,KAAKglE,IAAIpjE,EAAIu3F,EAAMn5B,WAAa,OAE5Em5B,EAAMp5B,UAAYp+D,EAClBw3F,EAAMn5B,UAAYp+D,EAClBu3F,EAAMztF,SAAS/J,EAAGC,G,CAmBtBqyF,MAAM59C,EAAY8jD,EAAY7jD,EAAY4lB,EAAYpvC,GAQlD,IAAI5rB,EAAY,EACZS,EAAY,EAAGC,EAAY,EAC3B20C,EAAa9zC,KAAKw9B,MAAM8/B,UAAY1pB,EACpC4vB,EAAaxjE,KAAKw9B,MAAM+/B,UAAYm6B,EACpCC,EAAep6F,KAAK4I,KAAK2tC,EAAKA,EAAK0vB,EAAKA,GAC5C,KAAIm0B,GAAQ,MAAZ,CAGA,IAAIC,EAAc9jD,EAAK6jD,EACnBE,EAAcr0B,EAAKm0B,EACnBG,EAAcjkD,EAAKD,EACnBmkD,EAAct+B,EAAKi+B,EACnBM,EAAgBF,EAAMA,EAAMC,EAAMA,EAClCE,EAAe16F,KAAK4I,KAAK6xF,GAC7B,KAAIC,GAAQ,MAAZ,CAGA,IAAIC,EAAeJ,EAAMG,EACrBE,EAAeJ,EAAME,EACrBG,EAAcR,EAAMM,EACpBG,EAAcR,EAAMM,EACpBG,EAAe/6F,KAAK4I,KAAKiyF,EAAMA,EAAMC,EAAMA,GAC/C,KAAIC,GAAQ,MAAZ,CAIA,IAAIC,EAAeH,EAAME,EACrBE,EAAeH,EAAMC,EAErBltD,EAAgB7tC,KAAKk7F,KAAKF,EAAOX,EAAMY,EAAOX,GAC9Ca,EAAkBn7F,KAAKC,GAAK,EAAI4tC,EAGhCutD,GADJhB,EAAOttE,EAAI9sB,KAAK2H,IAAIwzF,IACMd,EAAMhkD,EAC5BglD,EAAejB,EAAOE,EAAMH,EAE5BmB,EAAiBt7F,KAAK4I,KAAKwxF,EAAOA,EAAOttE,EAAIA,GAE7C8nD,EAAev+B,EAAK2kD,EAAOM,EAC3BzmB,EAAeslB,EAAKc,EAAOK,EAQ3BC,EAAe,EACfC,EAAe,EACnB,GALkBnB,EAAMO,EAAON,EAAMK,GAK1B,EAAG,CAEV,IAAIc,EADgB,EAAVN,EACkB39F,QAAQk+F,OACpCH,EAAOv7F,KAAKqH,IAAIo0F,GAChBD,EAAOx7F,KAAKoH,IAAIq0F,EACnB,MAGGA,EADqB,GAAVN,EACK39F,QAAQk+F,OACxBH,EAAOv7F,KAAKqH,IAAIo0F,GAChBD,EAAOx7F,KAAKoH,IAAIq0F,GAKpB,IAAIE,EAAgBl5F,KAAKw9B,MAAM8/B,UAAW67B,EAAgBn5F,KAAKw9B,MAAM+/B,UACjE67B,EAAcT,EAAMU,EAAcT,GAClCr7F,KAAKglE,IAAI62B,EAAMp5F,KAAKw9B,MAAM8/B,WAAa,IAAO//D,KAAKglE,IAAI82B,EAAMr5F,KAAKw9B,MAAM+/B,WAAa,MACrFr+D,EAAIk6F,EACJj6F,EAAIk6F,EACJH,EAAQE,EACRD,EAAQE,EACRr5F,KAAKw9B,MAAM8/B,UAAYp+D,EACvBc,KAAKw9B,MAAM+/B,UAAYp+D,EACvBa,KAAKw9B,MAAMv0B,SAAS/J,EAAGC,IAE3B,IAAIm6F,EAAcX,EAAOxmB,EACrBonB,EAAcX,EAAOxmB,EAGzB,IAAK3zE,EAAI,EAAGA,EAAI1D,QAAQk+F,OAAQx6F,IAAK,CACjC,IAAIypE,EAAaoxB,EAAMP,EAAOQ,EAAMT,EAChC3wB,GAAcmxB,EAAMR,EAAOS,EAAMR,EACrC75F,EAAIgpE,EAAKiK,EACThzE,EAAIgpE,EAAKiK,GAML70E,KAAKglE,IAAI22B,EAAQh6F,GAAK,IAAO3B,KAAKglE,IAAI42B,EAAQh6F,GAAK,MAInDa,KAAKw9B,MAAM8/B,UAAYp+D,EACvBc,KAAKw9B,MAAM+/B,UAAYp+D,EACvBa,KAAKw9B,MAAMv0B,SAAS/J,EAAGC,GACvB+5F,EAAQh6F,EACRi6F,EAAQh6F,GAEZm6F,EAAMpxB,EACNqxB,EAAMpxB,CACT,CA7EA,CARA,CATA,C,CAiGLmpB,IAAIppB,EAAYC,EAAY99C,EAAWo/D,EAAoBC,EAAkB8P,GAA4B,EAAO31F,GAAa,GAYzH,IAGIpF,EAAWg7F,EAHX71F,EAAY,EAAG81F,EAAa,EAC5B5lD,EAAa,EAAmB50C,EAAY,EAAGC,EAAY,EAM/D,GADAu6F,EAAKhQ,EAAWD,EACX+P,EASD,GAAIj8F,KAAKglE,IAAIm3B,IAAiB,EAAVn8F,KAAKC,GACrBk8F,EAAgB,GAAVn8F,KAAKC,QAEX,KAAOk8F,EAAK,GACRA,GAAgB,EAAVn8F,KAAKC,QAZnB,GAAID,KAAKglE,IAAIm3B,IAAiB,EAAVn8F,KAAKC,GACrBk8F,EAAe,EAAVn8F,KAAKC,QAEV,KAAOk8F,EAAK,GACRA,GAAgB,EAAVn8F,KAAKC,GAYvB,IAAIo1E,EAAa5yE,KAAKg4E,eAClBnF,EAAa7yE,KAAKi4E,eAClB0hB,EAAatvE,GAAKuoD,EAAKC,EAAKD,EAAKC,GACjC+mB,EAAa,EAAIr8F,KAAKC,GAAKm8F,EAC/BF,EAAkC,EAAzBl8F,KAAKuL,IAAI8wF,EAAK,GAAI,IAQ3B,IAAIlD,EAAc12F,KAAKw2F,WAEvB,IAAK/3F,EAAI,EAAGA,GAAKg7F,EAAOh7F,IACpBmF,EAAI6lF,EAAaiQ,GAAMj7F,EAAIg7F,GAC3B3lD,EAAKv2C,KAAKoH,IAAIf,GAGdzE,EAAIgpE,EAFC5qE,KAAKqH,IAAIhB,GAEAymB,GADdnrB,EAAIgpE,EAAKp0B,EAAKzpB,IAELrqB,KAAKw9B,MAAM8/B,WAAan+D,GAAKa,KAAKw9B,MAAM+/B,WAI7Cm5B,EAAMztF,SAAS/J,EAAGC,GAG1B20C,EAAKv2C,KAAKoH,IAAI+kF,GAGdvqF,EAAIgpE,EAFC5qE,KAAKqH,IAAI8kF,GAEAr/D,GADdnrB,EAAIgpE,EAAKp0B,EAAKzpB,IAELrqB,KAAKw9B,MAAM8/B,WAAan+D,GAAKa,KAAKw9B,MAAM+/B,WAI7Cm5B,EAAMztF,SAAS/J,EAAGC,E,CAI1BiyF,iBAAiByI,EAAaC,EAAa56F,EAAWC,GAUlD,IATA,IAQI46F,EARkBn+B,OAAOmB,EAQDL,gBAAgB,CAAC18D,KAAKw9B,MAAM8/B,UAAWt9D,KAAKw9B,MAAM+/B,UAAWs8B,EAAKC,EAAK56F,EAAGC,GAAI,GAAI,GACrGV,EAAY,EAAG+G,EAAYu0F,EAAO99F,OAAS,EAAGwC,EAAI+G,EAAG/G,IAC1DuB,KAAKixF,OAAO8I,EAAW,EAAJt7F,GAAQs7F,EAAW,EAAJt7F,EAAQ,IAE9CuB,KAAKixF,OAAO/xF,EAAGC,E,CAQnBszF,eAAe50F,GACX,OAAOmC,KAAKuzF,gBAAgB11F,EAAOmC,KAAKspE,UAAUj+B,M,CAGtDkoD,gBAAgB11F,EAAeutC,GAC3B,GAAIA,GAAS,EACT,OAAOvtC,EAEX,IAAI+F,GAAsB,WAAR/F,KAAwB,GAO1C,OALS,GAAL+F,EACAA,GAAKwnC,EAELxnC,EAAY,IAARwnC,EAEQ,SAARvtC,EAAuB+F,GAAK,E,CAGxCoxE,WAAW91E,EAAWC,EAAWkJ,EAAeC,EAAgB0xF,GAmB5D,GAAIh6F,KAAKkiE,UAAY,EAAG,CACpB,IAAIjQ,EAAejyD,KAAKyyF,eAAezyF,KAAK0hE,YAAYttB,OAAOvC,UAC3DooD,EAAaj6F,KAAKkiE,UAAY,EAClCliE,KAAKkyF,UAAUhzF,EAAI+6F,EAAI96F,EAAI86F,EAAI5xF,EAAQrI,KAAKkiE,UAAWliE,KAAKkiE,UAAWjQ,GACvEjyD,KAAKkyF,UAAUhzF,EAAI+6F,EAAI96F,EAAI86F,EAAK3xF,EAAQD,EAAQrI,KAAKkiE,UAAWliE,KAAKkiE,UAAWjQ,GAChFjyD,KAAKkyF,UAAUhzF,EAAI+6F,EAAI96F,EAAI86F,EAAIj6F,KAAKkiE,UAAW55D,EAAStI,KAAKkiE,UAAWjQ,GACxEjyD,KAAKkyF,UAAUhzF,EAAI+6F,EAAK5xF,EAAOlJ,EAAI86F,EAAIj6F,KAAKkiE,UAAW55D,EAAStI,KAAKkiE,UAAWjQ,EACnF,C,CAGLioC,O,CAKAC,aAAaj7F,EAAWC,EAAW8sE,GAC/BA,EAAG/sE,EAAIA,EACP+sE,EAAG9sE,EAAIA,EACPa,KAAKq0D,SAASr0D,KAAKq0D,SAAS/6C,WAAa2yD,C,CAGrCuqB,WACJ,OAAOx2F,KAAKw9B,QAAUx9B,KAAKw9B,MAAQ,IAAI6/B,K,CAKvC91C,aACA,OAAOvnB,KAAKu4D,O,CAkDR6hC,eAAeriE,EAAcozC,EAAe3zC,EAAuB6iE,EAAcC,EAAcp7F,EAAWC,EAAW8uB,EAAWpwB,GAChIw8F,GAAQ,GACR/iG,QAAQsvB,MAAM,qCAKlB,IAHA,IAAIgyD,EAAc15E,EACdkiB,EAAc7jB,KAAKgd,MAAM0T,EAAIosE,GAC7B5iC,EAAexpC,EAAIosE,EACd57F,EAAY,EAAGA,EAAI2iB,EAAK3iB,IAC7BuB,KAAK25E,mBAAmB5hD,EAAKozC,EAAOyN,EAAKz5E,EAAGk7F,EAAMC,EAAMt6F,KAAKkvC,QAAS1X,EAAI,GAAG,EAAO35B,GACpF+6E,GAAOyhB,EAGX,GAAI5iC,EAAO,EAAG,CACV,IAAI8iC,EAAa/iE,EAAG,GAAKA,EAAG,GACxBgjE,EAAchjE,EAAG,GAAK+iE,GAAM9iC,EAAO4iC,GACnC5F,EAAa15F,QAAQ0/F,OACzBhG,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAK+F,EAAK/F,EAAI,GAAKj9D,EAAG,GAC1Di9D,EAAI,GAAK+F,EAAK/F,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAC1Dx3B,KAAK25E,mBAAmB5hD,EAAKozC,EAAOyN,EAAKz5E,EAAGs4D,EAAM6iC,EAAMt6F,KAAKkvC,QAASulD,EAAK,GAAG,EAAO52F,EACxF,C,CAcG68F,eAAe3iE,EAAcozC,EAAe3zC,EAAuB6iE,EAAcC,EAAcp7F,EAAWC,EAAW+uB,EAAWrwB,GAChIy8F,GAAQ,GACRhjG,QAAQsvB,MAAM,qCAIlB,IAHA,IAAIssE,EAAc/zF,EACdiiB,EAAc7jB,KAAKgd,MAAM2T,EAAIosE,GAC7B7iC,EAAevpC,EAAIosE,EACd77F,EAAY,EAAGA,EAAI2iB,EAAK3iB,IAC7BuB,KAAK25E,mBAAmB5hD,EAAKozC,EAAOjsE,EAAGg0F,EAAKmH,EAAMC,EAAMt6F,KAAKkvC,QAAS1X,EAAI,GAAG,EAAO35B,GACpFq1F,GAAOoH,EAGX,GAAI7iC,EAAO,EAAG,CACV,IAAIkjC,EAAanjE,EAAG,GAAKA,EAAG,GACxBojE,EAAcpjE,EAAG,GAAKmjE,GAAMljC,EAAO6iC,GACnC7F,EAAa15F,QAAQ0/F,OACzBhG,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKj9D,EAAG,GAC5Di9D,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKmG,EAAKnG,EAAI,GAAKj9D,EAAG,GAAIi9D,EAAI,GAAKmG,EACvD56F,KAAK25E,mBAAmB5hD,EAAKozC,EAAOjsE,EAAGg0F,EAAKmH,EAAM5iC,EAAMz3D,KAAKkvC,QAASulD,EAAK,GAAG,EAAO52F,EACxF,C,CAKL+pF,wBAAwB7vD,EAAc/zB,EAAYC,EAAYoE,EAAeC,EAAgBu/E,EAAiBC,EAAYC,EAAYlqF,GAClI,GAAKk6B,EAAIjf,aAAT,CAEA9U,GAAM8jF,EACN7jF,GAAM8jF,EAEN,IAAIvwD,EAAKO,EAAIP,GAAIvJ,EAAY8J,EAAIF,OAAOxvB,MAAO6lB,EAAY6J,EAAIF,OAAOvvB,OAElE6lB,EAAc05D,EAAS,GACvBpwB,EAAeowB,EAAS,GACxBt/E,EAAgBs/E,EAAS,GACzBr/E,EAAiBq/E,EAAS,GAC1BG,EAAkBH,EAAS,GAG3Bx/E,GAAS0vB,EAAI1vB,QACbovD,EAAOlvD,EAAQ,GAEfD,GAAUyvB,EAAIzvB,SACd6lB,EAAM3lB,EAAS,GAGnB,IAAIqyF,EAAgB1sE,EAAMD,EACtB4sE,EAAiBrjC,EAAOxpC,EACxB8sE,EAAkBxyF,EAAQ0lB,EAC1B+sE,EAAmBxyF,EAAS0lB,EAW5Bi9C,EAAiBpzC,EAAIF,OAAqBj3B,GAC1CyoB,EAAcrpB,KAAKkvC,QACnBulD,EAAMz0F,KAAKkvF,QAGX+L,EAAU,EACVC,EAAU,EACVzjC,EAAOlvD,EAAQF,IAAO4yF,EAAU5yF,GAASovD,EAAOlvD,IAChD4lB,EAAM3lB,EAASF,IAAQ4yF,EAAU5yF,GAAU6lB,EAAM3lB,IACrDivD,GAAQwjC,EACR1yF,GAAS0yF,EACT9sE,GAAO+sE,EACP1yF,GAAU0yF,EAIV,IAAIC,EAAM3jE,EAAG,GACT4jE,EAAM5jE,EAAG,GACTgjE,EAAMhjE,EAAG,GACTojE,EAAMpjE,EAAG,GAGT6jE,EAAOF,EACPG,EAAOF,EACPG,EAAOf,EACPgB,EAAOZ,EAoFX,GAhFInjC,GAAQtpC,IACRotE,EAAOJ,EAAML,EACbU,EAAOJ,EAAMP,EACbpG,EAAI,GAAK0G,EAAK1G,EAAI,GAAK2G,EAAK3G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK2G,EAChD3G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK0G,EAAK1G,EAAI,GAAK+G,EACzDx7F,KAAK25E,mBAAmB5hD,EAAKozC,EAAOnnE,EAAIC,EAAIwzD,EAAMtpC,EAAK9E,EAAKorE,EAAK,GAAG,EAAO52F,IAE3E0K,GAAS4lB,IACTktE,EAAOb,EAAMO,EAASO,EAAOF,EAC7BG,EAAOf,EAAKgB,EAAOJ,EAAMP,EACzBpG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EAC1Dx7F,KAAK25E,mBAAmB5hD,EAAKozC,EAAO9iE,EAAQE,EAAQvE,EAAI,EAAIC,EAAIsE,EAAO4lB,EAAK9E,EAAKorE,EAAK,GAAG,EAAO52F,IAEhG45D,GAAQjvD,IACR6yF,EAAOF,EAAKG,EAAOV,EAAMI,EACzBO,EAAOJ,EAAML,EAAQU,EAAOZ,EAC5BnG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EAC1Dx7F,KAAK25E,mBAAmB5hD,EAAKozC,EAAO,EAAInnE,EAAIsE,EAASE,EAASvE,EAAIwzD,EAAMjvD,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,IAEpG0K,GAASC,IACT6yF,EAAOb,EAAMO,EAASO,EAAOV,EAAMI,EACnCO,EAAOf,EAAKgB,EAAOZ,EACnBnG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EAC1Dx7F,KAAK25E,mBAAmB5hD,EAAKozC,EAAO9iE,EAAQE,EAAQvE,EAAIsE,EAASE,EAASvE,EAAIsE,EAAOC,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,IAGjHswB,IACAktE,EAAOF,EAAML,EAAQQ,EAAOF,EAC5BG,EAAOf,EAAMO,EAASS,EAAOJ,EAAMP,EACnCpG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EACtDxT,EACAhoF,KAAKo6F,eAAeriE,EAAKozC,EAAOspB,EAAK18D,EAAI1vB,MAAQovD,EAAOlvD,EAAO4lB,EAAKspC,EAAOzzD,EAAIC,EAAIoE,EAAQovD,EAAOlvD,EAAO1K,GAEzGmC,KAAK25E,mBAAmB5hD,EAAKozC,EAAO1T,EAAOzzD,EAAIC,EAAIoE,EAAQovD,EAAOlvD,EAAO4lB,EAAK9E,EAAKorE,EAAK,GAAG,EAAO52F,IAItG2K,IACA6yF,EAAOF,EAAML,EAAQQ,EAAOV,EAAMI,EAClCO,EAAOf,EAAMO,EAASS,EAAOZ,EAC7BnG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EACtDxT,EACAhoF,KAAKo6F,eAAeriE,EAAKozC,EAAOspB,EAAK18D,EAAI1vB,MAAQovD,EAAOlvD,EAAOC,EAAQivD,EAAOzzD,EAAIsE,EAASE,EAASvE,EAAIoE,EAAQovD,EAAOlvD,EAAO1K,GAE9HmC,KAAK25E,mBAAmB5hD,EAAKozC,EAAO1T,EAAOzzD,EAAIsE,EAASE,EAASvE,EAAIoE,EAAQovD,EAAOlvD,EAAOC,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,IAI3H45D,IACA4jC,EAAOF,EAAKG,EAAOF,EAAMP,EACzBU,EAAOJ,EAAML,EAAQU,EAAOZ,EAAMI,EAClCvG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EACtDxT,EACAhoF,KAAK06F,eAAe3iE,EAAKozC,EAAOspB,EAAKh9B,EAAM1/B,EAAIzvB,OAAS6lB,EAAM3lB,EAAQxE,EAAImqB,EAAMlqB,EAAIqE,EAAS6lB,EAAM3lB,EAAQ3K,GAE3GmC,KAAK25E,mBAAmB5hD,EAAKozC,EAAOnnE,EAAImqB,EAAMlqB,EAAIwzD,EAAMnvD,EAAS6lB,EAAM3lB,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,IAGvG0K,IACA8yF,EAAOb,EAAMO,EAASO,EAAOF,EAAMP,EACnCU,EAAOf,EAAKgB,EAAOZ,EAAMI,EACzBvG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EACtDxT,EACAhoF,KAAK06F,eAAe3iE,EAAKozC,EAAOspB,EAAKlsF,EAAOwvB,EAAIzvB,OAAS6lB,EAAM3lB,EAAQH,EAAQE,EAAQvE,EAAImqB,EAAMlqB,EAAIqE,EAAS6lB,EAAM3lB,EAAQ3K,GAE5HmC,KAAK25E,mBAAmB5hD,EAAKozC,EAAO9iE,EAAQE,EAAQvE,EAAImqB,EAAMlqB,EAAIsE,EAAOD,EAAS6lB,EAAM3lB,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,IAI5Hw9F,EAAOF,EAAML,EAAQQ,EAAOF,EAAMP,EAClCU,EAAOf,EAAMO,EAASS,EAAOZ,EAAMI,EACnCvG,EAAI,GAAK4G,EAAM5G,EAAI,GAAK6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK6G,EAClD7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAK4G,EAAM5G,EAAI,GAAK+G,EACtDxT,EAAQ,CACR,IAAIyT,EAAc1gG,QAAQ2gG,UAC1BD,EAAK,GAAKJ,EAAMI,EAAK,GAAKH,EAC1BG,EAAK,GAAKF,EAAOF,EAAMI,EAAK,GAAKD,EAAOF,EAExCt7F,KAAK0yF,aAAa36D,EAAKA,EAAI1vB,MAAQovD,EAAOlvD,EAAOwvB,EAAIzvB,OAAS6lB,EAAM3lB,EAAQizF,EAAMhkC,EAAOzzD,EAAImqB,EAAMlqB,EAAIoE,EAAQovD,EAAOlvD,EAAOD,EAAS6lB,EAAM3lB,EAAQ,SAAU,EAAG,EAAG3K,EACvK,MACGmC,KAAK25E,mBAAmB5hD,EAAKozC,EAAO1T,EAAOzzD,EAAImqB,EAAMlqB,EAAIoE,EAAQovD,EAAOlvD,EAAOD,EAAS6lB,EAAM3lB,EAAQ6gB,EAAKorE,EAAK,GAAG,EAAO52F,EAtJ1H,C,CA2JRkvF,kBAAkBC,GACdhtF,KAAK00D,WAAa7Q,WAAWW,WAC7BxkD,KAAK+wC,gBAAgBi8C,E,EAthFlBjyF,QAAa4gG,cAAW,KAEhB5gG,QAAWq3F,YAAW,MAE9Br3F,QAAW40F,YAAc,KAEzB50F,QAAMq0F,OAAW,EAKTr0F,QAAMk+F,OAAW,GAEjBl+F,QAAay1F,cAAW,EAoMhCz1F,QAAAw2F,IAAc,EAAIh0F,KAAKC,GA6LhBzC,QAAW01F,YAAsB,KAq6DhC11F,QAAA0/F,OAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAkEtC1/F,QAAA6gG,MAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACrC7gG,QAAS2gG,UAAU,CAAC,EAAG,EAAG,EAAG,GAsKhD,MAAM/K,cAANp0F,cAGIyD,KAASkiE,UAAW,C,CAIpBv3D,QACI3K,KAAKkiE,UAAY,EACjBliE,KAAKk1E,UAAYl1E,KAAK40E,aAAe,I,CAGzCod,OACI,OAAOhyF,OAAS2wF,cAAczzB,QAAU,IAAIyzB,cAAkB3wF,I,EAIjEpE,OAAeC,QAAWD,OAAeqzB,YAAYC,aAEtDn0B,QAAUspF,eC9mFR,MAAOwX,mBAAmB1pF,SAkD5B5V,YAAYu/F,GAAwB,GAChCzpF,QAEIrS,KAAK8tE,QADLguB,EACe9gG,QAAQ0+C,cAAc,UAEtB15C,KAEnBA,KAAK2S,MAAO,C,CA1CZ5T,aACA,OAAOiB,KAAK8tE,O,CAMZzlE,YACA,OAAOrI,KAAKoV,M,CAGZ/M,UAAMA,GACNrI,KAAKoV,OAAS/M,C,CAMdC,aACA,OAAOtI,KAAKqV,O,CAGZ/M,WAAOA,GACPtI,KAAKqV,QAAU/M,C,CAMnBwQ,aACI,OAAO9Y,KAAK8tE,O,CAkBhBnjE,QACQ3K,KAAK+7F,OACD/7F,KAAK+7F,KAAKpxF,MACV3K,KAAK+7F,KAAKpxF,QAEV3K,KAAK+7F,KAAKpnB,UAAU,EAAG,EAAG30E,KAAKoV,OAAQpV,KAAKqV,UAGhDrV,KAAK4V,WACL5V,KAAK4V,SAASzS,UACdnD,KAAK4V,SAAW,K,CAQxBzS,UACIkP,MAAMlP,UACNnD,KAAK6T,cAAc,GACnB7T,KAAK+7F,MAAQ/7F,KAAK+7F,KAAK54F,SAAWnD,KAAK+7F,KAAK54F,UAC5CnD,KAAK+7F,KAAO,I,CAMhB7uD,U,CAMI1lB,cACA,OAAIxnB,KAAK+7F,OAEL/7F,KAAK8tE,SAAW9tE,KAEhBA,KAAK+7F,KAAO,IAAIhhG,QAGhBiF,KAAK+7F,KAAO/7F,KAAK8tE,QAAQsG,WAAW74E,QAAQI,QAAU,SAAW,MAErEqE,KAAK+7F,KAAKxjC,QAAUv4D,MATEA,KAAK+7F,I,CAkB/BC,YAAYx0E,GACRxnB,KAAK+7F,KAAOv0E,C,CAShB4sD,WAAW6nB,EAAmB3uD,EAAa,MACvC,OAAOttC,KAAKwnB,O,CAShB00E,aACI,OAAO,C,CAQXnpF,KAAKkb,EAAWC,IACRluB,KAAKoV,QAAU6Y,GAAKjuB,KAAKqV,SAAW6Y,GAAMluB,KAAK8tE,UAAY9tE,KAAK8tE,QAAQzlE,OAAS4lB,GAAKjuB,KAAK8tE,QAAQxlE,QAAU4lB,MAC7GluB,KAAKoV,OAAS6Y,EACdjuB,KAAKqV,QAAU6Y,EACfluB,KAAK6T,cAAcoa,EAAIC,EAAI,GAC3BluB,KAAK+7F,MAAQ/7F,KAAK+7F,KAAKhpF,MAAQ/S,KAAK+7F,KAAKhpF,KAAKkb,EAAGC,GAC7CluB,KAAK8tE,UACL9tE,KAAK8tE,QAAQxlE,OAAS4lB,EACtBluB,KAAK8tE,QAAQzlE,MAAQ4lB,GAErBjuB,KAAK4V,WACL5V,KAAK4V,SAASzS,UACdnD,KAAK4V,SAAW,M,CAQ5BumF,aACI,IAAKn8F,KAAK4V,SAAU,CAChB,IAAIiiB,EAAoB,IAAI1S,UAAUnlB,KAAKjB,OAAOsJ,MAAOrI,KAAKjB,OAAOuJ,OAAQ0B,gBAAcgN,UAAU,GAAM,GAAO,GAClH6gB,EAAO3Q,aAAalnB,KAAKjB,QAAQ,GAAO,GACxCiB,KAAK4V,SAAW,IAAI2hB,QAAQM,EAC/B,CACD,OAAO73B,KAAK4V,Q,CAQhBwmF,SAAS7wF,EAAc8wF,GACnB,GAAIr8F,KAAK8tE,QAAS,CACd,GAAIvyE,QAAQI,QAAS,CACjB,IAAI07C,EAAWz7C,OACXyM,EAAgBrI,KAAK+7F,KAAK/gE,SAASxO,YACnClkB,EAAiBtI,KAAK+7F,KAAK/gE,SAASvO,aACpCvqB,EAAYlC,KAAK+7F,KAAK/gE,SAAS7N,QAAQ,EAAG,EAAG9kB,EAAOC,GACxD,OAAO+uC,EAAIilD,mBAAqBjlD,EAAIilD,mBAAmB/wF,EAAM8wF,EAAgBn6F,EAAKyX,OAAQtR,EAAOC,GAAU+uC,EAAIklD,cAAchxF,EAAM8wF,EAAgBn6F,EAAKyX,OAAQtR,EAAOC,EAC1K,CAEG,OAAQtI,KAAK8tE,QAA8B0uB,UAAUjxF,EAAM8wF,EAElE,CACD,OAAO,I,CASXI,cAAclxF,EAAc8wF,EAAwBK,GAChD,IAAIr0F,EAAgBrI,KAAK+7F,KAAK/gE,SAASxO,YACnClkB,EAAiBtI,KAAK+7F,KAAK/gE,SAASvO,aACxCzsB,KAAK+7F,KAAK/gE,SAAS2hE,aAAa,EAAG,EAAGt0F,EAAOC,GAAQ,SAAUpG,GAC3D,IAAIm1C,EAAMz7C,OACV,IAAIghG,EAASvlD,EAAIilD,mBAAqBjlD,EAAIilD,mBAAmB/wF,EAAM8wF,EAAgBn6F,EAAKyX,OAAQtR,EAAOC,GAAU+uC,EAAIklD,cAAchxF,EAAM8wF,EAAgBn6F,EAAKyX,OAAQtR,EAAOC,GAC7Ko0F,EAASE,EACb,G,QCrNKC,YAWT90F,QAMI,OALI/H,KAAK88F,QAAQ98F,KAAK88F,OAAOrgG,UACzBuD,KAAK+8F,YAAY/8F,KAAK+8F,WAAWtgG,UACrCuD,KAAK88F,OAAS,KACd98F,KAAK+8F,WAAa,KAClB/8F,KAAKg9F,MAAQ,KACNh9F,I,CAMXvD,UACIX,KAAKW,QAAQ,cAAeuD,KAAK+H,Q,CAMrC/Q,gBACI,OAAO8E,KAAKe,eAAe,cAAeggG,Y,QC3BrCI,WAgCT1gG,cACIyD,KAAK+H,O,CAOTm1F,kBACI,OAAOl9F,KAAKm9F,mBAAqBn9F,KAAKy0B,I,CAM1C2oE,yBACI,MAA4B,QAArBp9F,KAAKq9F,cAA0Br9F,KAAKm9F,mBAAqBn9F,KAAKy0B,I,CAMzEgmC,iBACI,GAAIz6D,KAAKunB,QAAiBvnB,KAAKunB,OAASxU,KAAM,CAC1CjX,KAAKW,QAAQ,cAAeuD,KAAKunB,QACjCvnB,KAAKunB,OAAOxU,KAAK,EAAG,GAGpB,IACW/S,KAAKunB,OAASlf,MAAQ,EACtBrI,KAAKunB,OAASjf,OAAS,CACjC,CAAC,MAAOuY,GAER,CACJ,CACD7gB,KAAKunB,OAAS,I,CAGlBmzC,gBACI,IAAK16D,KAAKunB,OAAQ,CACdvnB,KAAKunB,OAASzrB,KAAKwhG,QAAQ,gBAAkB,IAAIzB,YAAW,GAC5D,IAAI73F,EAAchE,KAAKunB,OAAOC,QACzBxjB,IACDA,EAAKhE,KAAKunB,OAAO6sD,WAAW,MAEnC,C,CAKLmpB,qBACI,IAAIC,EAAUx9F,KAAKsvC,YACfkuD,IACAA,EAAGr6F,UACHq6F,EAAGpwE,UACHptB,KAAKsvC,YAAc,K,CAO3B7yC,UACQuD,OAASi9F,WAAWr1F,OACxB9L,KAAKW,QAAQ,cAAeuD,KAAK+H,Q,CAMrCA,QAgBI,OAfA/H,KAAKy6D,iBACLz6D,KAAKu9F,qBACLv9F,KAAK25D,QAAU,OACf35D,KAAK05D,oBAAqB,EAC1B15D,KAAKq9F,aAAe,OACpBr9F,KAAKm9F,iBAAkB,EACvBn9F,KAAK46D,aAAc,EACnB56D,KAAK66D,SAAU,EACf76D,KAAKy0B,KAAO,KACZz0B,KAAKy9F,WAAa,KAClBz9F,KAAKsvC,YAAc,KACnBtvC,KAAKgtC,QAAU,KACfhtC,KAAK09F,eAAgB,EACjB19F,KAAKk6D,WAAWl6D,KAAKk6D,UAAUz9D,UACnCuD,KAAKk6D,UAAY,KACVl6D,I,CAMXhJ,gBACI,OAAO8E,KAAKe,eAAe,cAAeogG,W,CAQ9CziC,oBAAoB/rB,EAAgB8rB,EAAoBr7D,EAAWC,GAC/D,IAGI86D,EAHA5qB,EAA0BZ,EAAOY,YA0BrC,GAzBKA,EAAY6qB,YACb7qB,EAAY6qB,UAAY9xD,UAAUV,UAInB,WAAf6yD,IACAN,EAAOxrB,EAAOmB,iBACTvnC,MAAQ4xD,EAAK5xD,MAAwC,EAAhC40F,WAAWU,mBACrC1jC,EAAK3xD,OAAS2xD,EAAK3xD,OAAyC,EAAhC20F,WAAWU,mBACvC1jC,EAAK/6D,EAAI+6D,EAAK/6D,EAAIuvC,EAAOiB,OACzBuqB,EAAK96D,EAAI86D,EAAK96D,EAAIsvC,EAAOkB,OACzBsqB,EAAK/6D,EAAI+6D,EAAK/6D,EAAI+9F,WAAWU,mBAC7B1jC,EAAK96D,EAAI86D,EAAK96D,EAAI89F,WAAWU,mBAC7B1jC,EAAK/6D,EAAI3B,KAAKgd,MAAM0/C,EAAK/6D,EAAIA,GAAKA,EAClC+6D,EAAK96D,EAAI5B,KAAKgd,MAAM0/C,EAAK96D,EAAIA,GAAKA,EAClC86D,EAAK5xD,MAAQ9K,KAAKgd,MAAM0/C,EAAK5xD,OAC7B4xD,EAAK3xD,OAAS/K,KAAKgd,MAAM0/C,EAAK3xD,QAC9B+mC,EAAY6qB,UAAUzxD,SAASwxD,IAE/B5qB,EAAY6qB,UAAUn0D,OAAO0oC,EAAOynB,OAAOxmB,QAASjB,EAAOynB,OAAOvmB,OAAQ,EAAG,GAEjFsqB,EAAO5qB,EAAY6qB,UAIfzrB,EAAOynB,OAAOkD,WAAY,CAC1B,IAAIA,EAAwB3qB,EAAOynB,OAAOkD,WAC1Ca,EAAK/6D,GAAKk6D,EAAWl6D,EACrB+6D,EAAK96D,GAAKi6D,EAAWj6D,CACxB,CAGD,OAFA89F,WAAWW,WAAW73F,MAAM,EAAG,GAExBk3F,WAAWW,U,EArKfX,WAAAr1F,MAAoB,IAAIq1F,WA8HhBA,WAAAW,WAAoB,IAAI91F,MAChCm1F,WAAkBU,mBAAW,G,MCpI3BE,YA+BTthG,cACIyD,KAAK+H,O,CAMTA,QAYI,OAXA/H,KAAKo6D,OAASp6D,KAAKq6D,OAAS,EAC5Br6D,KAAK89F,MAAQ99F,KAAK+9F,MAAQ,EAC1B/9F,KAAK0vC,OAAS1vC,KAAK2vC,OAAS3vC,KAAK2/E,SAAW,EAC5C3/E,KAAKorC,MAAQ,EACTprC,KAAKo5D,YAAYp5D,KAAKo5D,WAAW38D,UACrCuD,KAAKo5D,WAAa,KACdp5D,KAAKsuB,UAAUtuB,KAAKsuB,SAAS7xB,UACjCuD,KAAKsuB,SAAW,KAChBtuB,KAAKs5D,QAAU,KACft5D,KAAKg+F,SAAW,KAChBh+F,KAAK86D,UAAY,KACV96D,I,CAMXvD,UACQuD,OAAS69F,YAAYj2F,OACzB9L,KAAKW,QAAQ,cAAeuD,KAAK+H,Q,CAMrC/Q,gBACI,OAAO8E,KAAKe,eAAe,cAAeghG,Y,EA/D9BA,YAAAj2F,MAA+B,IAAIi2F,Y,MCJ1CI,SASTjnG,cAAco0C,GACV,IAAI26C,EAAgBjqF,KAAKe,eAAe,WAAYohG,UAEpD,OADAlY,EAAI36C,MAAQA,EACL26C,C,CAMXtpF,UACIX,KAAKW,QAAQ,WAAYuD,K,CAI7Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ4jB,MAAMprC,KAAKorC,M,CAInB8yD,YACA,OAAOD,SAAS15C,E,EA5Bb05C,SAAE15C,GAAW,Q,MCCX45C,cAAb5hG,cA0BIyD,KAASkiE,UAAW,C,CAQpBlrE,cAAckI,EAAWC,EAAWiqF,EAAgBC,EAAgBT,EAAgB1mB,GAChF,IAAI6jB,EAAqBjqF,KAAKe,eAAe,gBAAiBshG,eAO9D,OANApY,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAIqD,OAASA,EACbrD,EAAIsD,UAAYA,EAChBtD,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIuD,KAAKqpF,UAAY,KACjBrpF,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,gBAAiBuD,K,CAIlCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAItnE,EAAUzgB,KAAKkiE,WAAa,GAAKliE,KAAK4oF,UAAa5oF,KAAKkiE,UAAY,EAAI,EAC5E,GAAIliE,KAAKo+F,SAAW52E,EAAQinB,OAAQ,CAChC,IAAIxgB,EAAIzG,EAAQinB,OAAOpmC,MACnB6lB,EAAI1G,EAAQinB,OAAOnmC,OACvBkf,EAAQ2hE,YAAYnpF,KAAKd,EAAI+uB,EAAI65D,EAAI9nF,KAAKb,EAAI+uB,EAAI65D,EAAI/nF,KAAKopF,OAAS7rF,KAAKwL,IAAIklB,EAAGC,GAAKzN,EAAQzgB,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,EAChJ,MAEG16C,EAAQ2hE,YAAYnpF,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKopF,OAAS3oE,EAAQzgB,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,E,CAIxHg8B,YACA,OAAOC,cAAc55C,E,CAGzB85C,eAAeh1F,GACX,OAAOjB,UAAUk2F,gBAAgBt+F,KAAKd,EAAIc,KAAKopF,OAAQppF,KAAKb,EAAIa,KAAKopF,OAAQppF,KAAKopF,OAASppF,KAAKopF,OAAQppF,KAAKopF,OAASppF,KAAKopF,OAAQppF,KAAKo+F,QAAU/0F,EAAK,K,EAvEpJ80F,cAAE55C,GAAW,aA2ExBxtD,WAAWwnG,SAAS,gBAAiBJ,e,MC5ExBK,cAyBTxnG,cAAckI,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,GAC/D,IAAI6jB,EAAqBjqF,KAAKe,eAAe,gBAAiB2hG,eAM9D,OALAzY,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI9mF,OAASA,EACb8mF,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIuD,KAAKf,OAAS,KACde,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,gBAAiBuD,K,CAIlCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC1B/nF,KAAKf,QACLuoB,EAAQ6jE,WAAWrrF,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKf,OAAQe,KAAK4oF,UAAW5oF,KAAKkiE,U,CAInFg8B,YACA,OAAOM,cAAcj6C,E,CAGzB85C,eAAeh1F,GACX,OAAOuyD,OAAOmB,EAAEL,gBAAgB18D,KAAKf,O,EAvDlCu/F,cAAEj6C,GAAW,aA2DxBxtD,WAAWwnG,SAAS,gBAAiBC,e,MC5DxBC,aAAbliG,cAyBIyD,KAAKnC,MAAW,U,CAGhB7G,cAAcuvB,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgBzK,GACpE,MAATwK,IAAeA,EAAQke,EAAQiG,aACrB,MAAVlkB,IAAgBA,EAASie,EAAQkG,cAErC,IAAIgqC,EAAQpuD,EAAQke,EAAQiG,YACxBkqC,EAAQpuD,EAASie,EAAQkG,aAC7BpkB,EAAQke,EAAQle,MAAQouD,EACxBnuD,EAASie,EAAQje,OAASouD,EAE1Bx3D,GAAKqnB,EAAQmG,QAAU+pC,EACvBt3D,GAAKonB,EAAQoG,QAAU+pC,EAEvB,IAAIqvB,EAAoBjqF,KAAKe,eAAe,eAAgB4hG,cAQ5D,OAPA1Y,EAAIx/D,QAAUA,EACdA,EAAQhS,gBACRwxE,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACby9E,EAAIloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WACzDk0C,C,CAMXtpF,UACIuD,KAAKumB,SAAWvmB,KAAKumB,QAAQ/R,mBAC7BxU,KAAKumB,QAAU,KACfzqB,KAAKW,QAAQ,eAAgBuD,K,CAIjCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC1B/nF,KAAKumB,SACLiB,EAAQsvC,YAAY92D,KAAKumB,QAASvmB,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKnC,M,CAK9FqgG,YACA,OAAOO,aAAal6C,E,EApEjBk6C,aAAEl6C,GAAW,Y,MCFXm6C,YAAbniG,cA0BIyD,KAASkiE,UAAW,C,CAQpBlrE,cAAcwxF,EAAeC,EAAeC,EAAaC,EAAaC,EAAmB1mB,GACrF,IAAI6jB,EAAmBjqF,KAAKe,eAAe,cAAe6hG,aAO1D,OANA3Y,EAAIyC,MAAQA,EACZzC,EAAI0C,MAAQA,EACZ1C,EAAI2C,IAAMA,EACV3C,EAAI4C,IAAMA,EACV5C,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIX,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAItnE,EAAUzgB,KAAKkiE,UAAY,GAAKliE,KAAKkiE,UAAY,GAAM,EAAK,EAAI,GACpE,GAAIliE,KAAKo+F,SAAW52E,EAAQinB,OAAQ,CAChC,IAAIxgB,EAAIzG,EAAQinB,OAAOpmC,MACnB6lB,EAAI1G,EAAQinB,OAAOnmC,OACvBkf,EAAQ+gE,UAAUT,EAAIC,EAAI/nF,KAAKwoF,MAAQv6D,EAAIxN,EAAQzgB,KAAKyoF,MAAQv6D,EAAIzN,EAAQzgB,KAAK0oF,IAAMz6D,EAAIxN,EAAQzgB,KAAK2oF,IAAMz6D,EAAIzN,EAAQzgB,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,EAC7J,MAEG16C,EAAQ+gE,UAAUT,EAAIC,EAAI/nF,KAAKwoF,MAAQ/nE,EAAQzgB,KAAKyoF,MAAQhoE,EAAQzgB,KAAK0oF,IAAMjoE,EAAQzgB,KAAK2oF,IAAMloE,EAAQzgB,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,E,CAI9Ig8B,YACA,OAAOQ,YAAYn6C,E,CAGvB85C,eAAeh1F,GAEX,IAAI64D,EADJy8B,EAAY1iG,OAAS,EAErBimE,EAA6B,GAAjBliE,KAAKkiE,UAEjB,IAAIsmB,EAAQxoF,KAAKwoF,MAAOC,EAAQzoF,KAAKyoF,MAAOC,EAAM1oF,KAAK0oF,IAAKC,EAAM3oF,KAAK2oF,IAgBvE,OAfI3oF,KAAKo+F,UACL5V,GAASn/E,EAAGhB,MACZogF,GAASp/E,EAAGf,OACZogF,GAAOr/E,EAAGhB,MACVsgF,GAAOt/E,EAAGf,QAGVkgF,GAASE,EACTiW,EAAYtiG,KAAKmsF,EAAQtmB,EAAWumB,EAAOC,EAAMxmB,EAAWymB,EAAKH,EAAQtmB,EAAWumB,EAAOC,EAAMxmB,EAAWymB,GACrGF,GAASE,EAChBgW,EAAYtiG,KAAKmsF,EAAOC,EAAQvmB,EAAWwmB,EAAKC,EAAMzmB,EAAWsmB,EAAOC,EAAQvmB,EAAWwmB,EAAKC,EAAMzmB,GAEtGy8B,EAAYtiG,KAAKmsF,EAAOC,EAAOC,EAAKC,GAGjCgW,C,EAzFJD,YAAEn6C,GAAW,WA4FxB,MAAMo6C,EAAqB,GAE3B5nG,WAAWwnG,SAAS,cAAeG,a,MC/FtBE,aAAbriG,cAsBIyD,KAASkiE,UAAW,C,CAGpBlrE,cAAckI,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,GAC/D,IAAI6jB,EAAoBjqF,KAAKe,eAAe,eAAgB+hG,cAO5D,OALA7Y,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI9mF,OAASA,EACb8mF,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIuD,KAAKf,OAAS,KACde,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,eAAgBuD,K,CAIjCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAItnE,EAAUzgB,KAAKkiE,UAAY,GAAKliE,KAAKkiE,UAAY,GAAM,EAAK,EAAI,GACpEliE,KAAKf,QAAUuoB,EAAQwhE,WAAWhpF,KAAKd,EAAIuhB,EAASqnE,EAAI9nF,KAAKb,EAAIshB,EAASsnE,EAAI/nF,KAAKf,OAAQe,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,E,CAI3Hg8B,YACA,OAAOU,aAAar6C,E,EApDjBq6C,aAAEr6C,GAAW,YAyDxBxtD,WAAWwnG,SAAS,eAAgBK,c,MC1DvBC,YAyBT7nG,cAAckI,EAAWC,EAAWq+D,EAAcmtB,EAAYC,GAC1D,IAAI7E,EAAmBjqF,KAAKe,eAAe,cAAegiG,aAM1D,OALA9Y,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAIvoB,MAAQA,EACZuoB,EAAI4E,MAAQA,EACZ5E,EAAI6E,IAAMA,EACH7E,C,CAMXtpF,UACIuD,KAAKw9D,MAAQ,KACbx9D,KAAK2qF,MAAQ,KACb3qF,KAAK4qF,IAAM,KACX9uF,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B/nF,KAAKw9D,OAASh2C,EAAQkjE,UAAU1qF,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKw9D,MAAOx9D,KAAK2qF,MAAO3qF,KAAK4qF,I,CAIvFsT,YACA,OAAOW,YAAYt6C,E,CAGvB85C,eAAeh1F,GACX,IAAItM,EAAa4hG,EACjB5hG,EAAId,OAAS,EACb,IAAIuhE,EAAQx9D,KAAKw9D,MACbh/D,EAAMg/D,EAAMvhE,OAChB,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC1B,IAAIqgG,EAAOthC,EAAM/+D,GACbqgG,EAAK7iG,OAAS,IACdc,EAAIV,KAAKyiG,EAAK,GAAIA,EAAK,IACnBA,EAAK7iG,OAAS,GACdc,EAAIV,KAAKyiG,EAAK,GAAIA,EAAK,IAGlC,CACD,OAAO/hG,C,EApEJ8hG,YAAEt6C,GAAW,WAwExB,MAAMo6C,EAAqB,GAE3B5nG,WAAWwnG,SAAS,cAAeM,a,MC3EtBE,WAAbxiG,cAcIyD,KAAMopF,OAAW,EAajBppF,KAASkiE,UAAW,C,CAMpBlrE,cAAckI,EAAWC,EAAWiqF,EAAgBK,EAAoBC,EAAkBL,EAAgBT,EAAgB1mB,GACtH,IAAI6jB,EAAkBjqF,KAAKe,eAAe,aAAckiG,YASxD,OARAhZ,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAIqD,OAASA,EACbrD,EAAIiZ,YAAcvV,EAClB1D,EAAIkZ,UAAYvV,EAChB3D,EAAIsD,UAAYA,EAChBtD,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIuD,KAAKqpF,UAAY,KACjBrpF,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,aAAcuD,K,CAI/Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAItnE,EAAUzgB,KAAKkiE,WAAa,GAAKliE,KAAK4oF,UAAa5oF,KAAKkiE,UAAY,EAAI,EACxEg9B,EAAal/F,KAAK4oF,UAAY5oF,KAAKkiE,UAAY,EACnD16C,EAAQgiE,SAASxpF,KAAKd,EAAIuhB,EAASqnE,EAAI9nF,KAAKb,EAAIshB,EAASsnE,EAAI/nF,KAAKopF,OAAS8V,EAAYl/F,KAAKg/F,YAAah/F,KAAKi/F,UAAWj/F,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,UAAW,E,CAIzKg8B,YACA,OAAOa,WAAWx6C,E,CAMlBklC,iBACA,OAA0B,IAAnBzpF,KAAKg/F,YAAoBzhG,KAAKC,E,CAGrCisF,eAAWxrF,GACX+B,KAAKg/F,YAAc/gG,EAAQV,KAAKC,GAAK,G,CAMrCksF,eACA,OAAwB,IAAjB1pF,KAAKi/F,UAAkB1hG,KAAKC,E,CAGnCksF,aAASzrF,GACT+B,KAAKi/F,UAAYhhG,EAAQV,KAAKC,GAAK,G,CAGvC6gG,eAAeh1F,GACX,IAAItM,EAAa4hG,GACjBA,GAAY1iG,OAAS,EACrB,IAAI0D,EAAYpC,KAAKC,GAAK,IACtB+H,EAAavF,KAAK0pF,SAAW1pF,KAAKypF,WAClCvqF,EAAIc,KAAKd,EAAGC,EAAIa,KAAKb,EAAGiqF,EAASppF,KAAKopF,OAC1C,GAAI7jF,GAAM,KAAOA,IAAO,IAMpB,OAJAxI,EAAIV,KAAK6C,EAAIkqF,EAAQjqF,EAAIiqF,GACzBrsF,EAAIV,KAAK6C,EAAIkqF,EAAQjqF,EAAIiqF,GACzBrsF,EAAIV,KAAK6C,EAAIkqF,EAAQjqF,EAAIiqF,GACzBrsF,EAAIV,KAAK6C,EAAIkqF,EAAQjqF,EAAIiqF,GAClBrsF,EAGXA,EAAIV,KAAK6C,EAAGC,GAEZ,IAAIiM,EAAgB7F,EAAK,IACrB6F,EAAQ,IAAGA,GAAS,KAGxB,IAAI+zF,EAAen/F,KAAKypF,WAAar+E,EAGjCouB,EAAax5B,KAAKypF,WAAa9pF,EAC/By/F,EAAaD,EAAOx/F,EAGxB5C,EAAIV,KAAK6C,EAAIkqF,EAAS7rF,KAAKoH,IAAI60B,GAAKr6B,EAAIiqF,EAAS7rF,KAAKqH,IAAI40B,IAE1Dz8B,EAAIV,KAAK6C,EAAIkqF,EAAS7rF,KAAKoH,IAAIy6F,GAAKjgG,EAAIiqF,EAAS7rF,KAAKqH,IAAIw6F,IAM1D,IAFA,IAAIC,EAA+C,GAAlC9hG,KAAKoyE,KAAK3vE,KAAKypF,WAAa,IACzC6V,EAAqC,GAAxB/hG,KAAKgd,MAAM4kF,EAAO,IAC1BlS,EAAaoS,EAAIpS,GAAMqS,EAAIrS,GAAM,GAAI,CAC1C,IAAIsS,EAActS,EAAKttF,EACvB5C,EAAIV,KAAK6C,EAAIkqF,EAAS7rF,KAAKoH,IAAI46F,GAAMpgG,EAAIiqF,EAAS7rF,KAAKqH,IAAI26F,GAC9D,CACD,OAAOxiG,C,EAhIJgiG,WAAEx6C,GAAW,UAoIxB,MAAMo6C,GAAqB,GAE3B5nG,WAAWwnG,SAAS,aAAcQ,Y,MCvIrBS,YA6BTxoG,cAAckI,EAAWC,EAAWF,EAAeoqF,EAAgBT,EAAgB1mB,GAC/E,IAAI6jB,EAAmBjqF,KAAKe,eAAe,cAAe2iG,aAO1D,OANAzZ,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI9mF,OAASA,EACb8mF,EAAIsD,UAAYA,EAChBtD,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EACT6jB,C,CAMXtpF,UACIuD,KAAKf,OAAS,KACde,KAAKqpF,UAAY,KACjBrpF,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAI+B,EAAkB9pF,KAAKf,OAAOhD,QAAU,EACxCwkB,EAAUzgB,KAAKkiE,WAAa,GAAKliE,KAAK4oF,UAAc5oF,KAAKkiE,UAAY,GAAM,EAAI,EAAI,GAAO,EAC9FliE,KAAKf,QAAUuoB,EAAQqiE,UAAU7pF,KAAKd,EAAIuhB,EAASqnE,EAAI9nF,KAAKb,EAAIshB,EAASsnE,EAAI/nF,KAAKf,OAAQe,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,UAAW4nB,EAAiB,E,CAI3JoU,YACA,OAAOsB,YAAYj7C,E,EA1DhBi7C,YAAEj7C,GAAW,WA8DxBxtD,WAAWwnG,SAAS,cAAeiB,a,MC9DtBC,YAAbljG,cA8BIyD,KAASkiE,UAAW,C,CAQpBlrE,cAAckI,EAAWC,EAAWkJ,EAAeC,EAAgB+gF,EAAgBT,EAAgB1mB,EAAmBk8B,GAClH,IAAIrY,EAAmBjqF,KAAKe,eAAe,cAAe4iG,aAS1D,OARA1Z,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACby9E,EAAIsD,UAAYA,EAChBtD,EAAI6C,UAAYA,EAChB7C,EAAI7jB,UAAYA,EAChB6jB,EAAIqY,QAAUA,EACPrY,C,CAMXtpF,UACIuD,KAAKqpF,UAAY,KACjBrpF,KAAK4oF,UAAY,KACjB9sF,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,IAAItnE,EAAUzgB,KAAKkiE,WAAa,GAAKliE,KAAK4oF,UAAa5oF,KAAKkiE,UAAY,EAAI,EACxEg9B,EAAal/F,KAAK4oF,UAAY5oF,KAAKkiE,UAAY,EACnD,GAAIliE,KAAKo+F,SAAW52E,EAAQinB,OAAQ,CAChC,IAAIxgB,EAAIzG,EAAQinB,OAAOpmC,MACnB6lB,EAAI1G,EAAQinB,OAAOnmC,OACvBkf,EAAQm1D,SAAS38E,KAAKd,EAAI+uB,EAAIxN,EAASqnE,EAAI9nF,KAAKb,EAAI+uB,EAAIzN,EAASsnE,EAAI/nF,KAAKqI,MAAQ4lB,EAAIixE,EAAYl/F,KAAKsI,OAAS4lB,EAAIgxE,EAAYl/F,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,UACxK,MAEG16C,EAAQm1D,SAAS38E,KAAKd,EAAIuhB,EAASqnE,EAAI9nF,KAAKb,EAAIshB,EAASsnE,EAAI/nF,KAAKqI,MAAQ62F,EAAYl/F,KAAKsI,OAAS42F,EAAYl/F,KAAKqpF,UAAWrpF,KAAK4oF,UAAW5oF,KAAKkiE,U,CAIzJg8B,YACA,OAAOuB,YAAYl7C,E,CAGvB85C,eAAeh1F,GACX,OAAOjB,UAAUk2F,gBAAgBt+F,KAAKd,EAAGc,KAAKb,EAAGa,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKo+F,QAAU/0F,EAAK,K,EA9E3Fo2F,YAAEl7C,GAAW,WAkFxBxtD,WAAWwnG,SAAS,cAAekB,a,MChFtBC,eAAbnjG,cAkCIyD,KAAKnC,MAAW,WAMhBmC,KAAEw3B,GAAoB,I,CAGtBxgC,cAAcuvB,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgB/B,EAAuB6kC,EAAevtC,EAAsBi9D,EAA0BtjC,GAC1J,MAATnvB,IAAeA,EAAQke,EAAQiG,aACrB,MAAVlkB,IAAgBA,EAASie,EAAQkG,cAErC,IAAIgqC,EAAQpuD,EAAQke,EAAQiG,YACxBkqC,EAAQpuD,EAASie,EAAQkG,aAC7BpkB,EAAQke,EAAQle,MAAQouD,EACxBnuD,EAASie,EAAQje,OAASouD,EAE1Bx3D,GAAKqnB,EAAQmG,QAAU+pC,EACvBt3D,GAAKonB,EAAQoG,QAAU+pC,EAEvB,IAAIqvB,EAAsBjqF,KAAKe,eAAe,iBAAkB6iG,gBAYhE,OAXA3Z,EAAIx/D,QAAUA,EACdA,EAAQhS,gBACRwxE,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACby9E,EAAIx/E,OAASA,EACbw/E,EAAI36C,MAAQA,EACZ26C,EAAIjrB,UAAYA,EAChBirB,EAAIvuD,GAAKA,GAAM,KACfuuD,EAAIloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WACzDk0C,C,CAMXtpF,UACIuD,KAAKumB,SAAWvmB,KAAKumB,QAAQ/R,mBAC7BxU,KAAKumB,QAAU,KACfvmB,KAAKuG,OAAS,KACdzK,KAAKW,QAAQ,iBAAkBuD,K,CAInCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B/nF,KAAKumB,SAAWiB,EAAQmgE,yBAAyB3nF,KAAKumB,QAASvmB,KAAKd,EAAGc,KAAKb,EAAGa,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKuG,OAAQuhF,EAAIC,EAAI/nF,KAAKorC,MAAOprC,KAAK86D,UAAW96D,KAAKw3B,GAAIx3B,KAAKnC,M,CAIvKqgG,YACA,OAAOwB,eAAen7C,E,EAtFnBm7C,eAAEn7C,GAAW,cA0FxBxtD,WAAWwnG,SAAS,iBAAkBmB,gB,MC3FzBC,eAAbpjG,cAsCIyD,KAAKnC,MAAW,U,CAGhB7G,cAAcuvB,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgBiD,EAAckV,EAAe5iB,GAC9G,IAAIkoF,EAAsBjqF,KAAKe,eAAe,iBAAkB8iG,gBAShE,OARA5Z,EAAIx/D,QAAUA,EACdw/D,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACby9E,EAAIx6E,KAAOA,EACXw6E,EAAItlE,OAASA,EACbslE,EAAIloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WACzDk0C,C,CAMXtpF,UACIuD,KAAKumB,QAAU,KACfvmB,KAAKygB,OAAS,KACd3kB,KAAKW,QAAQ,iBAAkBuD,K,CAInCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,GAAI/nF,KAAKumB,QACL,GAAIvmB,KAAKo+F,SAAW52E,EAAQinB,OAAQ,CAChC,IAAIxgB,EAAIzG,EAAQinB,OAAOpmC,MACnB6lB,EAAI1G,EAAQinB,OAAOnmC,OACvBkf,EAAQ2iE,YAAYnqF,KAAKumB,QAASvmB,KAAKd,EAAI+uB,EAAI65D,EAAI9nF,KAAKb,EAAI+uB,EAAI65D,EAAI/nF,KAAKqI,MAAQ4lB,EAAGjuB,KAAKsI,OAAS4lB,EAAGluB,KAAKuL,KAAMvL,KAAKygB,QAAU3Y,MAAMF,MAAO5H,KAAKnC,MACpJ,MAEG2pB,EAAQ2iE,YAAYnqF,KAAKumB,QAASvmB,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKuL,KAAMvL,KAAKygB,QAAU3Y,MAAMF,MAAO5H,KAAKnC,M,CAKzIqgG,YACA,OAAOyB,eAAep7C,E,CAG1B85C,eAAeh1F,GACX,OAAIrJ,KAAKqI,OAASrI,KAAKsI,OACZF,UAAUk2F,gBAAgBt+F,KAAKd,EAAGc,KAAKb,EAAGa,KAAKqI,MAAOrI,KAAKsI,OAAQtI,KAAKo+F,QAAU/0F,EAAK,MAEvFjB,UAAUk2F,gBAAgBt+F,KAAKd,EAAGc,KAAKb,EAAGa,KAAKumB,QAAQle,MAAOrI,KAAKumB,QAAQje,O,EApFnFq3F,eAAEp7C,GAAW,cAwFxBxtD,WAAWwnG,SAAS,iBAAkBoB,gB,MC9FzBC,WAMT5oG,gBAGI,OAFsB8E,KAAKe,eAAe,aAAc+iG,W,CAQ5DnjG,UAEIX,KAAKW,QAAQ,aAAcuD,K,CAI/Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ0F,S,CAIRgxE,YACA,OAAO0B,WAAWr7C,E,EA1Bfq7C,WAAEr7C,GAAW,U,MCDXs7C,UAiBT7oG,cAAc2G,EAAe+xC,EAAgBC,GACzC,IAAIo2C,EAAiBjqF,KAAKe,eAAe,YAAagjG,WAItD,OAHA9Z,EAAIpoF,MAAQA,EACZooF,EAAIr2C,OAASA,EACbq2C,EAAIp2C,OAASA,EACNo2C,C,CAMXtpF,UAEIX,KAAKW,QAAQ,YAAauD,K,CAI9Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ4gE,QAAQpoF,KAAKrC,MAAOqC,KAAK0vC,OAASo4C,EAAI9nF,KAAK2vC,OAASo4C,E,CAI5DmW,YACA,OAAO2B,UAAUt7C,E,EAvCds7C,UAAEt7C,GAAW,S,MCFXu7C,SAqBT9oG,cAAcojE,EAAgBC,EAAgB3qB,EAAgBC,GAC1D,IAAIo2C,EAAgBjqF,KAAKe,eAAe,WAAYijG,UAKpD,OAJA/Z,EAAI3rB,OAASA,EACb2rB,EAAI1rB,OAASA,EACb0rB,EAAIr2C,OAASA,EACbq2C,EAAIp2C,OAASA,EACNo2C,C,CAMXtpF,UAEIX,KAAKW,QAAQ,WAAYuD,K,CAI7Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ8gE,OAAOtoF,KAAKo6D,OAAQp6D,KAAKq6D,OAAQr6D,KAAK0vC,OAASo4C,EAAI9nF,KAAK2vC,OAASo4C,E,CAIzEmW,YACA,OAAO4B,SAASv7C,E,EA5Cbu7C,SAAEv7C,GAAW,Q,MCCXw7C,aAiBT/oG,cAAcuP,EAAgBmpC,EAAgBC,GAC1C,IAAIo2C,EAAoBjqF,KAAKe,eAAe,eAAgBkjG,cAI5D,OAHAha,EAAIx/E,OAASA,EACbw/E,EAAIr2C,OAASA,EACbq2C,EAAIp2C,OAASA,EACNo2C,C,CAMXtpF,UACIuD,KAAKuG,OAAS,KACdzK,KAAKW,QAAQ,eAAgBuD,K,CAIjCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ6wC,WAAWr4D,KAAKuG,OAAQvG,KAAK0vC,OAASo4C,EAAI9nF,KAAK2vC,OAASo4C,E,CAIhEmW,YACA,OAAO6B,aAAax7C,E,EAvCjBw7C,aAAEx7C,GAAW,Y,MCHXy7C,aAaThpG,cAAcgN,EAAYC,GACtB,IAAI8hF,EAAoBjqF,KAAKe,eAAe,eAAgBmjG,cAG5D,OAFAja,EAAI/hF,GAAKA,EACT+hF,EAAI9hF,GAAKA,EACF8hF,C,CAMXtpF,UAEIX,KAAKW,QAAQ,eAAgBuD,K,CAIjCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQhjB,UAAUxE,KAAKgE,GAAIhE,KAAKiE,G,CAIhCi6F,YACA,OAAO8B,aAAaz7C,E,EAlCjBy7C,aAAEz7C,GAAW,Y,MCKX07C,iBA8CTjpG,cAAcuvB,EAAkBrnB,EAAWC,EAAW4yD,EAAwBC,EAAmBiQ,EAC7F17D,EAAuB6kC,EAAevtC,EAAwBi9D,GAC9D,IAAIirB,EAAwBjqF,KAAKe,eAAe,mBAAoBojG,kBAWpE,OAVAla,EAAIx/D,QAAUA,EACdw/D,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAIh0B,SAAWA,EACfg0B,EAAI/zB,IAAMA,EACV+zB,EAAI9jB,QAAUA,EACd8jB,EAAIx/E,OAASA,EACbw/E,EAAI36C,MAAQA,EACZ26C,EAAIloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WAChEk0C,EAAIjrB,UAAYA,EACTirB,C,CAMXtpF,UACIuD,KAAKumB,QAAU,KACfvmB,KAAK+xD,SAAW,KAChB/xD,KAAKgyD,IAAM,KACXhyD,KAAKiiE,QAAU,KACfjiE,KAAKuG,OAAS,KACdzK,KAAKW,QAAQ,mBAAoBuD,K,CAIrCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ6kE,cAAcrsF,KAAKumB,QAASvmB,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAK+xD,SAAU/xD,KAAKgyD,IAAKhyD,KAAKiiE,QAASjiE,KAAKuG,OAAQvG,KAAKorC,MAAOprC,KAAK86D,UAAW96D,KAAKnC,M,CAInJqgG,YACA,OAAO+B,iBAAiB17C,E,CAG5B85C,eAAeh1F,GACX,IAAI62F,EAAOlgG,KAAK+xD,SAChB,IAAIouC,EAAOD,EAAKjkG,OAChB,GAAIkkG,EAAO,EAAG,MAAO,GAKrB,IAJA,IAAIzkB,EAAOwkB,EAAK,GACZhK,EAAOgK,EAAK,GACZvkB,EAAOD,EACP6Z,EAAOW,EACFz3F,EAAI,EAAGA,EAAI0hG,GAAO,CACvB,IAAIj4B,EAAKg4B,EAAKzhG,KACV0pE,EAAK+3B,EAAKzhG,KACVi9E,EAAOxT,IAAIwT,EAAOxT,GAClBguB,EAAO/tB,IAAI+tB,EAAO/tB,GAClBwT,EAAOzT,IAAIyT,EAAOzT,GAClBqtB,EAAOptB,IAAIotB,EAAOptB,EACzB,CAED,MAAO,CAACuT,EAAMwa,EAAMva,EAAMua,EAAMva,EAAM4Z,EAAM7Z,EAAM6Z,E,EApG/C0K,iBAAE17C,GAAW,gBAwGxBxtD,WAAWwnG,SAAS,mBAAoB0B,kB,MC1G3BG,oBAAb7jG,cA0BIyD,KAAKnC,MAAW,U,CAQhB7G,cAAcuvB,EAAkBrnB,EAAWC,EAAWkJ,EAAeC,EAAgBu/E,EAAoBuW,GAAmB,EAAOvgG,EAAuB,MACtJ,IAAIkoF,EAA2BjqF,KAAKe,eAAe,sBAAuBujG,qBAU1E,OATAra,EAAIx/D,QAAUA,EACdA,EAAQhS,gBACRwxE,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACby9E,EAAI8B,SAAWA,EACf9B,EAAIqY,QAAUA,EACdrY,EAAIloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WACzDk0C,C,CAMXtpF,UACIuD,KAAKumB,QAAQ/R,mBACb1Y,KAAKW,QAAQ,sBAAuBuD,K,CAIxCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9B,GAAI/nF,KAAKumB,QAAS,CACd,IAAIshE,EAAW7nF,KAAK6nF,UAAY7nF,KAAKumB,QAAQmV,WAAa2kE,GAC1D,GAAIrgG,KAAKo+F,SAAW52E,EAAQinB,OAAQ,CAChC,IAAIxgB,EAAIzG,EAAQinB,OAAOpmC,MACnB6lB,EAAI1G,EAAQinB,OAAOnmC,OACvBkf,EAAQogE,wBAAwB5nF,KAAKumB,QAASvmB,KAAKd,EAAI+uB,EAAGjuB,KAAKb,EAAI+uB,EAAGluB,KAAKqI,MAAQ4lB,EAAGjuB,KAAKsI,OAAS4lB,EAAG25D,EAAUC,EAAIC,EAAI/nF,KAAKnC,MACjI,MAEG2pB,EAAQogE,wBAAwB5nF,KAAKumB,QAASvmB,KAAKd,EAAGc,KAAKb,EAAGa,KAAKqI,MAAOrI,KAAKsI,OAAQu/E,EAAUC,EAAIC,EAAI/nF,KAAKnC,MACrH,C,CAIDqgG,YACA,OAAOkC,oBAAoB77C,E,CAG/B85C,eAAeh1F,GACX,IAAIqyE,EAAO17E,KAAKd,EACZg3F,EAAOl2F,KAAKb,EACZw8E,EAAO37E,KAAKqI,MACZktF,EAAOv1F,KAAKsI,OAQhB,OAPItI,KAAKo+F,UACL1iB,GAAQryE,EAAGhB,MACX6tF,GAAQ7sF,EAAGf,OACXqzE,GAAQtyE,EAAGhB,MACXktF,GAAQlsF,EAAGf,QAGR,CAACozE,EAAMwa,EAAMva,EAAMua,EAAMva,EAAM4Z,EAAM7Z,EAAM6Z,E,EAtF/C6K,oBAAE77C,GAAW,mBA0FxB,MAAM87C,GAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,GACrCtpG,WAAWwnG,SAAS,sBAAuB6B,qB,MChG9BE,QAMTtpG,gBAGI,OAFmB8E,KAAKe,eAAe,UAAWyjG,Q,CAQtD7jG,UAEIX,KAAKW,QAAQ,UAAWuD,K,CAI5Bs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQonB,M,CAIRsvD,YACA,OAAOoC,QAAQ/7C,E,EA1BZ+7C,QAAE/7C,GAAW,OCqBxB,MAAMg8C,GAAsB,IAAI58F,OAC1B68F,GAAsB,IAAI78F,OAC1B88F,GAA2B,G,MAMpBC,eAAbnkG,cAQYyD,KAAgB2gG,kBAAY,C,CASpCx9F,UACInD,KAAKk3D,UAAY,KACjBl3D,KAAK2gG,kBAAmB,EACpB3gG,KAAK4gG,QAAO5gG,KAAK4gG,MAAM3kG,OAAS,GAChC+D,KAAK6gG,kBAAiB7gG,KAAK6gG,gBAAgB5kG,OAAS,GACpD+D,KAAK8gG,SAAS9gG,KAAK8gG,QAAQrkG,UAC/BuD,KAAK8gG,QAAU,KACfhlG,KAAKW,QAAQ,iBAAkBuD,K,CAMnChJ,gBACI,OAAO8E,KAAKe,eAAe,iBAAkB6jG,e,CAMjD34F,QACI/H,KAAK4gG,QAAU5gG,KAAK4gG,MAAM3kG,OAAS,E,CAQvCwzC,UAAUsxD,GAAoB,GAK1B,QAJK/gG,KAAK8gG,UAAY9gG,KAAK4gG,OAAS5gG,KAAK4gG,MAAM3kG,OAAS,GAAK8kG,GAAY/gG,KAAK2gG,oBAC1E3gG,KAAK8gG,QAAU14F,UAAU44F,YAAYhhG,KAAKq+F,eAAe0C,GAAW/gG,KAAK8gG,UAE7E9gG,KAAK2gG,iBAAmBI,EACjB/gG,KAAK8gG,O,CAQhBzC,eAAe0C,GAAoB,GAI/B,QAHK/gG,KAAK4gG,OAAS5gG,KAAK4gG,MAAM3kG,OAAS,GAAK8kG,GAAY/gG,KAAK2gG,oBACzD3gG,KAAK4gG,MAAQ5gG,KAAKihG,cAAcF,IACpC/gG,KAAK2gG,iBAAmBI,EACjB/gG,KAAK6gG,gBAAkBnjG,MAAMy3C,UAAUn1C,KAAK6gG,gBAAiB7gG,KAAK4gG,M,CAGrEK,cAAcF,GAAoB,GACtC,IAAIG,EAAOlhG,KAAKk3D,UAAUgqC,KACtB73F,EAAKrJ,KAAKk3D,UAAUiqC,IACxBnhG,KAAKohG,eAAgB,EAErB,IAAIrkG,EAAMiD,KAAK4gG,QAAU5gG,KAAK4gG,MAAQ,IAEtC,GADA7jG,EAAId,OAAS,EACM,GAAfilG,EAAKjlG,OAAa,OAAOc,EAE7B,IAAIskG,EAAiBZ,GACrBY,EAAQplG,OAAS,EACjB,IAAIgzC,EAAkBuxD,GACtBvxD,EAAQ3qC,WACR,IAAIg9F,EAAqBf,GACzB,IAAK,IAAI9hG,EAAI,EAAG+G,EAAI07F,EAAKjlG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACzC,IAAIsnF,EAAMmb,EAAKziG,GAGf,OAFIsnF,EAAIqY,UACJp+F,KAAKohG,eAAgB,GACjBrb,EAAImY,OACR,KAAKD,SAAS15C,GACd,KAAK+7C,QAAQ/7C,GACT88C,EAAQhlG,KAAK4yC,GACbA,EAAUA,EAAQznC,QAClB,MACJ,KAAKo4F,WAAWr7C,GACZtV,EAAUoyD,EAAQpkG,MAClB,MACJ,KAAK6iG,SAASv7C,GACV+8C,EAAWh9F,WACXg9F,EAAW98F,WAAWuhF,EAAIr2C,QAASq2C,EAAIp2C,QACvC2xD,EAAW78F,MAAMshF,EAAI3rB,OAAQ2rB,EAAI1rB,QACjCinC,EAAW98F,UAAUuhF,EAAIr2C,OAAQq2C,EAAIp2C,QAErC3vC,KAAKuhG,cAActyD,EAASqyD,GAC5B,MACJ,KAAKzB,UAAUt7C,GACX+8C,EAAWh9F,WACXg9F,EAAW98F,WAAWuhF,EAAIr2C,QAASq2C,EAAIp2C,QACvC2xD,EAAW58F,OAAOqhF,EAAIpoF,OACtB2jG,EAAW98F,UAAUuhF,EAAIr2C,OAAQq2C,EAAIp2C,QAErC3vC,KAAKuhG,cAActyD,EAASqyD,GAC5B,MACJ,KAAKtB,aAAaz7C,GACd+8C,EAAWh9F,WACXg9F,EAAW98F,UAAUuhF,EAAI/hF,GAAI+hF,EAAI9hF,IAEjCjE,KAAKuhG,cAActyD,EAASqyD,GAC5B,MACJ,KAAKvB,aAAax7C,GACd+8C,EAAWh9F,WACXg9F,EAAW98F,WAAWuhF,EAAIr2C,QAASq2C,EAAIp2C,QACvC2xD,EAAWh7F,OAAOy/E,EAAIx/E,QACtB+6F,EAAW98F,UAAUuhF,EAAIr2C,OAAQq2C,EAAIp2C,QAErC3vC,KAAKuhG,cAActyD,EAASqyD,GAC5B,MACJ,KAAK7C,aAAal6C,GAClB,KAAKo7C,eAAep7C,GAChBi9C,iBAAiBzkG,EAAKqL,UAAUk2F,gBAAgBvY,EAAI7mF,EAAG6mF,EAAI5mF,EAAG4mF,EAAI19E,MAAO09E,EAAIz9E,QAAS2mC,GACtF,MACJ,KAAKywD,eAAen7C,GAChBtV,EAAQtnC,OAAO25F,GACXvb,EAAIx/E,QACJ+6F,EAAWh7F,OAAOy/E,EAAIx/E,QAC1Bi7F,iBAAiBzkG,EAAKqL,UAAUk2F,gBAAgBvY,EAAI7mF,EAAG6mF,EAAI5mF,EAAG4mF,EAAI19E,MAAO09E,EAAIz9E,QAASg5F,GACtF,MACJ,KAAK7B,YAAYl7C,GAGjB,KAAK45C,cAAc55C,GAGnB,KAAKm6C,YAAYn6C,GACbi9C,iBAAiBzkG,EAAmBgpF,EAAKsY,eAAeh1F,GAAK4lC,GAC7D,MACJ,KAAKuvD,cAAcj6C,GACfi9C,iBAAiBzkG,EAAqBgpF,EAAKsY,eAAeh1F,GAAK4lC,EAAS82C,EAAI7mF,EAAG6mF,EAAI5mF,GACnF,MACJ,KAAKy/F,aAAar6C,GAClB,KAAKi7C,YAAYj7C,GACbi9C,iBAAiBzkG,EAAKgpF,EAAI9mF,OAAQgwC,EAAS82C,EAAI7mF,EAAG6mF,EAAI5mF,GACtD,MACJ,KAAK0/F,YAAYt6C,GACbi9C,iBAAiBzkG,EAAmBgpF,EAAKsY,eAAeh1F,GAAK4lC,EAAS82C,EAAI7mF,EAAG6mF,EAAI5mF,GACjF,MACJ,KAAK4/F,WAAWx6C,GAGhB,KAAK07C,iBAAiB17C,GAGtB,KAAK67C,oBAAoB77C,GACrBi9C,iBAAiBzkG,EAA2BgpF,EAAKsY,eAAeh1F,GAAK4lC,GAGhF,CAKD,OAJIlyC,EAAId,OAAS,IACbc,EAAMW,MAAMy3C,UAAUp4C,EAAKqL,UAAU44F,YAAYjkG,GAAKoM,mBAC/CpM,EAAId,OAAS,IACpBc,EAAM03C,WAAWgtD,UAAU1kG,IACxBA,C,CAGHwkG,cAAcG,EAAgBJ,GAClCA,EAAWh7F,OAAOo7F,GAClBJ,EAAW35F,OAAO+5F,E,EAI1B,SAASF,iBAAiBzkG,EAAYkC,EAAesH,EAAgButC,EAAa,EAAG0vB,EAAa,GAC9F,IAAIhlE,EAAMS,EAAOhD,OACjB,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAC1BkjG,cAAc5kG,EAAKkC,EAAOR,GAAKq1C,EAAI70C,EAAOR,EAAI,GAAK+kE,EAAIj9D,EAE/D,CAEA,SAASo7F,cAAc5kG,EAAYmC,EAAWC,EAAWoH,GACrD,IAAIq7F,EAAoB95F,MAAMD,KAC9B+5F,EAAW77F,MAAM7G,GAAQ,EAAGC,GAAQ,GACpCoH,EAAOP,eAAe47F,GACtB7kG,EAAIV,KAAKulG,EAAW1iG,EAAG0iG,EAAWziG,EACtC,C,MC1Na0iG,YAsBT7qG,cAAckI,EAAWC,EAAWkJ,EAAeC,GAC/C,IAAIy9E,EAAmBjqF,KAAKe,eAAe,cAAeglG,aAK1D,OAJA9b,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASA,EACNy9E,C,CAMXtpF,UAEIX,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQ6xC,SAASr5D,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKqI,MAAOrI,KAAKsI,O,CAI5D41F,YACA,OAAO2D,YAAYt9C,E,EA7ChBs9C,YAAEt9C,GAAW,W,MCAXu9C,gBAgBT9qG,cAAcuvB,EAAkB/I,EAAYk2E,GACxC,IAAI3N,EAAuBjqF,KAAKe,eAAe,kBAAmBilG,iBAKlE,OAJA/b,EAAIx/D,QAAUA,EACdA,EAAQhS,gBACRwxE,EAAIvoE,IAAMA,EACVuoE,EAAI2N,OAASA,GAAU,GAChB3N,C,CAMXtpF,UACIuD,KAAKumB,QAAQ/R,mBACbxU,KAAKumB,QAAU,KACfvmB,KAAKwd,IAAM,KACX1hB,KAAKW,QAAQ,kBAAmBuD,K,CAIpCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC9BvgE,EAAQisE,aAAazzF,KAAKumB,QAASvmB,KAAKwd,IAAKsqE,EAAIC,EAAI/nF,KAAK0zF,O,CAI1DwK,YACA,OAAO4D,gBAAgBv9C,E,EAzCpBu9C,gBAAEv9C,GAAW,e,MCIXw9C,YAqBT/qG,cAAckpC,EAAgChhC,EAAWC,EAAWo+C,EAAc1/C,EAAsBq3E,EAAmBhT,EAAmBwpB,GAC1I,IAAI3F,EAAmBjqF,KAAKe,eAAe,cAAeklG,aAU1D,OATAhc,EAAInU,MAAQ,KACZmU,EAAIic,UAAY,KAChBjc,EAAI7mF,EAAIA,EACR6mF,EAAI5mF,EAAIA,EACR4mF,EAAIxoC,KAAOA,EACXwoC,EAAIloF,MAAQA,EACZkoF,EAAIkc,WAAa//B,EACjB6jB,EAAImc,aAAexW,EAEXxW,GACJ,IAAK,SACD6Q,EAAIoc,WAAatpG,MAAME,sBACvB,MACJ,IAAK,QACDgtF,EAAIoc,WAAatpG,MAAMG,qBACvB,MACJ,QACI+sF,EAAIoc,WAAatpG,MAAMC,uBAU/B,OAPIonC,aAAgBmxC,UAChB0U,EAAIic,UAAY9hE,EAChBA,EAAK2xC,cAGLkU,EAAInU,MAAQ1xC,EAET6lD,C,CAMXtpF,UACIX,KAAKW,QAAQ,cAAeuD,K,CAIhCs5B,IAAI9R,EAAkBsgE,EAAYC,GAC1BltF,MAAMS,MAAMw+D,mBACZ95D,KAAKgiG,WAAahiG,KAAKgiG,UAAUnwB,aAGrCrqD,EAAQuwD,eAAe/3E,KAAKgiG,WAAahiG,KAAK4xE,MAAO5xE,KAAKd,EAAI4oF,EAAI9nF,KAAKb,EAAI4oF,EAAI/nF,KAAKoiG,SAAUpiG,KAAKo0C,OAAQp0C,KAAKkiG,aAAcliG,KAAKiiG,WAAYjiG,KAAKmiG,W,CAIpJjE,YACA,OAAO6D,YAAYx9C,E,CAMnBhH,WACA,OAAOv9C,KAAK+wE,K,CAGZxzB,SAAKt/C,GACL+B,KAAK+wE,MAAQ9yE,EACRA,IACDA,EAAQxG,OAAOO,gBAAkB,MAAQP,OAAOQ,aACpD+H,KAAKoiG,SAAW7xB,SAASsH,MAAM55E,GAC/B+B,KAAKgiG,WAAahiG,KAAKgiG,UAAUnwB,Y,CAMjCh0E,YACA,OAAOmC,KAAKo0C,M,CAGZv2C,UAAMI,GACN+B,KAAKo0C,OAASn2C,EACd+B,KAAKgiG,WAAahiG,KAAKgiG,UAAUnwB,Y,EAjG9BkwB,YAAEx9C,GAAW,WAqGxBxtD,WAAWwnG,SAAS,cAAewD,a,MC7GtBM,YAgBT9lG,c,CAUAvF,0BAA0BsrG,EAA2BC,GAEjD,IAAI3iC,EADJyiC,YAAYG,qBAAqBF,EAAiBC,GAElD3iC,EAAQ,CAAE6iC,WAAYH,EAAiBI,aAAcH,GACrDF,YAAYM,WAAWtmG,KAAKujE,E,CAShC5oE,4BAA4BsrG,EAA2BC,GACnD,IAAI9jG,EAAWD,EAEf,IADAA,EAAM6jG,YAAYM,WAAW1mG,OACxBwC,EAAI,EAAGA,EAAID,EAAKC,IACjB,GAAI4jG,YAAYM,WAAWlkG,GAAGgkG,YAAcH,GAAmBD,YAAYM,WAAWlkG,GAAGikG,cAAgBH,EAErG,YADAF,YAAYM,WAAWj4F,OAAOjM,EAAG,E,CAW7CzH,sBACI,IAAIyH,EAAWD,EAAc6jG,YAAYM,WAAW1mG,OACpD,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IACjB4jG,YAAYM,WAAWlkG,GAAGgkG,YAAW,E,CAS7CzrG,kBAAkB4rG,EAAmB,MACjC/nG,MAAMO,YAAY+iD,KAAKykD,EAAU,KAAMP,YAAYQ,W,CAQvD7rG,mBACI6D,MAAMO,YAAYuP,MAAM,KAAM03F,YAAYQ,W,CAOtC7rG,oBACJ,IAAI8rG,EAAmBT,YAAYM,WACnC,KAAIG,EAAU7mG,OAAS,GAAvB,CACA,IACI6O,EACAtM,EAFAukG,EAAgBloG,MAAMG,QAAQmhD,MAIlC,IADA39C,EAAMsM,EAAQg4F,EAAU7mG,OACjB6O,EAAQ,IACXu3F,YAAYW,SACZX,YAAYW,OAASX,YAAYW,OAASxkG,EAC1CskG,EAAUT,YAAYW,QAAQP,YAAW,KACrC5nG,MAAMG,QAAQmhD,MAAQ4mD,EAAQV,YAAYY,iBAC9Cn4F,GAVsB,C,EAjFvBu3F,YAAaY,cAAW,EAIhBZ,YAAUM,WAAU,GAKpBN,YAAMW,OAAW,E,MCbvBE,mBAYT3mG,cARAyD,KAAMmjG,OAAQ,GACdnjG,KAAQojG,SAAQ,GAChBpjG,KAAYqjG,aAAQ,GAEZrjG,KAAGK,IAAW,EACdL,KAASsjG,WAAY,EACrBtjG,KAAYujG,aAAU,GAG1BlB,YAAYmB,mBAAmBxjG,KAAKyjG,aAAat5C,KAAKnqD,MAAOA,KAAK0iG,aAAav4C,KAAKnqD,M,CAGxFhJ,qBACI,OAAOksG,mBAAmB5mG,SAAW4mG,mBAAmB5mG,UAAY,IAAI4mG,kB,CAO5EQ,QAII,OAAO1jG,KAAKK,K,CAQhBsjG,SAAS/iG,EAAYgjG,GACjB5jG,KAAKojG,SAASxiG,GAAMgjG,EACf5jG,KAAKmjG,OAAOviG,KACbZ,KAAKmjG,OAAOviG,IAAM,E,CAS1BijG,QAAQjjG,EAAYkjG,GAChB9jG,KAAKqjG,aAAaziG,GAAMkjG,EACnB9jG,KAAKqjG,aAAaziG,KACnBZ,KAAKqjG,aAAaziG,IAAM,E,CAQhCmjG,SAASnjG,GACDZ,KAAKsjG,WACkB,MAAnBtjG,KAAKmjG,OAAOviG,KACZZ,KAAKmjG,OAAOviG,IAAM,E,CAS9BojG,YAAYpjG,GACJZ,KAAKojG,SAASxiG,KACdZ,KAAKojG,SAASxiG,GAAM,YACbZ,KAAKojG,SAASxiG,IAErBZ,KAAKqjG,aAAaziG,KAClBZ,KAAKqjG,aAAaziG,GAAM,YACjBZ,KAAKqjG,aAAaziG,IAEN,MAAnBZ,KAAKmjG,OAAOviG,WACLZ,KAAKmjG,OAAOviG,E,CAS3B8hG,eACI,IAAI3kG,EACAwoE,EAAc,GAClB,IAAKxoE,KAAOiC,KAAKojG,SACb78B,EAAKlqE,KAAK2D,KAAKojG,SAASrlG,IAE5B,IAAKA,KAAOiC,KAAKqjG,aACb98B,EAAKlqE,KAAK2D,KAAKqjG,aAAatlG,IAEhC,OAAOwoE,C,CAMXk9B,aAAar3F,GACT,IAAIrO,EACJ,IAAKA,KAAOiC,KAAKmjG,OACbnjG,KAAKmjG,OAAOplG,IAAO,EAEvBiC,KAAKsjG,WAAY,C,CAMrBW,aACI,GAAIjkG,KAAKsjG,UAAW,CAChB,IAAIvlG,EACJ,IAAKA,KAAOiC,KAAKmjG,OACRnjG,KAAKmjG,OAAOplG,IACbiC,KAAKgkG,YAAYjmG,GAGzBiC,KAAKsjG,WAAY,CACpB,C,QCzFIY,SAYT3nG,cAVAyD,KAAGmhG,IAAkB,KAErBnhG,KAAAm3D,QAA4En3D,KAAKmkG,aAEzEnkG,KAAKokG,MAAU,GAEbpkG,KAAiBqkG,kBAAiB,KAEpCrkG,KAAcskG,eAA0B,KAG5CtkG,KAAKukG,a,CAITA,c,CAKAC,a,CAKAC,e,CAOAthG,UACInD,KAAK2K,OAAM,GACP3K,KAAKskG,gBAAgBtkG,KAAKskG,eAAenhG,UAC7CnD,KAAKskG,eAAiB,KACtBtkG,KAAKqkG,kBAAoB,KACrBrkG,KAAKmhG,MACLnhG,KAAKmhG,IAAIh9C,YAAc,EACvBnkD,KAAKmhG,IAAM,MAEfnhG,KAAKykG,c,CAOT95F,MAAM+5F,GAAuB,GAEzB,GAAIA,EACA,IAAK,IAAIjmG,EAAI,EAAGD,EAAMwB,KAAKokG,MAAMnoG,OAAQwC,EAAID,EAAKC,IAC9CuB,KAAKokG,MAAM3lG,GAAGhC,UAWtB,GAPAuD,KAAKokG,MAAMnoG,OAAS,EACpB+D,KAAKm3D,QAAUn3D,KAAKmkG,aACpBnkG,KAAKwkG,aACDxkG,KAAKmhG,MACLnhG,KAAKmhG,IAAIh9C,cAAgBtO,YAAYa,UAEzC12C,KAAK2kG,WACD3kG,KAAKqkG,kBAAmB,CACxB,IAAK,IAAI5lG,EAAI,EAAGD,EAAMwB,KAAKqkG,kBAAkBpoG,OAAQwC,EAAID,EAAKC,IAC1DykG,mBAAmB3M,cAAcyN,YAAYhkG,KAAKqkG,kBAAkB5lG,IAExEuB,KAAKqkG,kBAAkBpoG,OAAS,CACnC,C,CAIL2oG,kBAAkBC,GACV7kG,KAAKskG,iBACAO,IAAiB7kG,KAAKskG,eAAelD,eACtCphG,KAAKskG,eAAev8F,Q,CAKxB+8F,qBACC9kG,KAAKskG,iBACNtkG,KAAKskG,eAAiB5D,eAAeh5F,SACrC1H,KAAKskG,eAAeptC,UAAYl3D,K,CAQxC2kG,WACI3kG,KAAK4kG,oBACL5kG,KAAKmhG,KAAOnhG,KAAKmhG,IAAIjU,S,CAKzB6X,aACI,OAA6B,IAAtB/kG,KAAKokG,MAAMnoG,M,CAMlBilG,WACA,OAAOlhG,KAAKokG,K,CAGZlD,SAAKjjG,GACD+B,KAAKmhG,MACLnhG,KAAKmhG,IAAIh9C,aAAetO,YAAYa,UAGxC12C,KAAKokG,MAAQnmG,EAEb,IAAIO,EAAMP,EAAMhC,OAChB+D,KAAKm3D,QAAkB,IAAR34D,EAAYwB,KAAKmkG,aAAwB,IAAR3lG,EAAYwB,KAAKglG,WAAahlG,KAAKilG,WACnFjlG,KAAK2kG,U,CAMTO,OAAOnf,GACH,GAAW,MAAPA,EAWJ,OANI/lF,KAAKmhG,MACLnhG,KAAKmhG,IAAIh9C,aAAetO,YAAYa,UAExC12C,KAAKokG,MAAM/nG,KAAK0pF,GAChB/lF,KAAKm3D,QAAgC,IAAtBn3D,KAAKokG,MAAMnoG,OAAe+D,KAAKglG,WAAahlG,KAAKilG,WAChEjlG,KAAK2kG,WACE5e,EAVHzuF,QAAQC,KAAK,W,CAarB4tG,UAAUpf,GACN,IAAItnF,EAAIuB,KAAKkhG,KAAKhjG,QAAQ6nF,GAC1B,IAAU,GAANtnF,EAAS,CACTuB,KAAKokG,MAAM15F,OAAOjM,EAAG,GAErB,IAAID,EAAMwB,KAAKokG,MAAMnoG,OACrB+D,KAAKm3D,QAAkB,IAAR34D,EAAYwB,KAAKmkG,aAAwB,IAAR3lG,EAAYwB,KAAKglG,WAAahlG,KAAKilG,WACnFjlG,KAAK2kG,UACR,C,CAQLl1D,UAAUsxD,GAAoB,GAE1B,OADA/gG,KAAK8kG,qBACE9kG,KAAKskG,eAAgB70D,UAAUsxD,E,CAQ1C1C,eAAe0C,GAAoB,GAE/B,OADA/gG,KAAK8kG,qBACE9kG,KAAKskG,eAAgBjG,eAAe0C,E,CAY/Ct5E,UAAUlB,EAAkBrnB,EAAY,EAAGC,EAAY,EAAGkJ,EAAgB,KAAMC,EAAiB,KAAMzK,EAAgB,MACnH,OAAK0oB,GACAA,EAAQsR,OACN73B,KAAKklG,OAAOzG,aAAa/2F,OAAO6e,EAASrnB,EAAGC,EAAGkJ,EAAOC,EAAQzK,IAFhD,I,CAiBzBi5D,YAAYvwC,EAAyBrnB,EAAY,EAAGC,EAAY,EAAGkJ,EAAgB,KAAMC,EAAiB,KAAM/B,EAAwB,KAAM6kC,EAAgB,EAAGvtC,EAAuB,KAAMi9D,EAA2B,KAAMtjC,GAC3N,OAAKjR,GAAW6kB,EAAQ,IAAa,KAChC7kB,EAAQsR,OACN73B,KAAKklG,OAAOxF,eAAeh4F,OAAO6e,EAASrnB,EAAGC,EAAGkJ,EAAOC,EAAQ/B,EAAQ6kC,EAAOvtC,EAAOi9D,EAAWtjC,IAD5E,I,CAUhCi8D,aAAaltE,EAAkB/I,EAAYk2E,GACvC,OAAKntE,EACEvmB,KAAKklG,OAAOpD,gBAAgBp6F,OAAO6e,EAAS/I,EAAKk2E,IADnC,I,CAiBzBrH,cAAc9lE,EAAkBrnB,EAAWC,EAAW4yD,EAAwBC,EAAmBiQ,EAAsB17D,EAAwB,KAC3I6kC,EAAgB,EAAGvtC,EAAyB,KAAMi9D,EAA2B,MAC7E,OAAO96D,KAAKklG,OAAOjF,iBAAiBv4F,OAAO6e,EAASrnB,EAAGC,EAAG4yD,EAAUC,EAAKiQ,EAAS17D,EAAQ6kC,EAAOvtC,EAAOi9D,G,CAe5GqvB,YAAY5jE,EAAkBrnB,EAAWC,EAAWkJ,EAAgB,EAAGC,EAAiB,EAAGiD,EAAe,SAAUkV,EAAuB,KAAM5iB,EAAgB,MAC7J,OAAI0oB,GAAWA,EAAQsR,OACZ73B,KAAKklG,OAAOvF,eAAej4F,OAAO6e,EAASrnB,EAAGC,EAAGkJ,EAAOC,EAAQiD,EAAMkV,GAAU3Y,MAAMF,MAAO/J,IAE7F,I,CAUfw7D,SAASn6D,EAAWC,EAAWkJ,EAAeC,GAC1C,OAAOtI,KAAKklG,OAAOrD,YAAYn6F,OAAOxI,EAAGC,EAAGkJ,EAAOC,G,CAYvDysE,SAAS70C,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAeq3E,GACjF,OAAOl1E,KAAKklG,OAAOnD,YAAYr6F,OAAOw4B,EAAMhhC,EAAGC,EAAGo+C,EAAM1/C,EAAOq3E,EAAW,EAAG,I,CAcjF+W,eAAe/rD,EAAyBhhC,EAAWC,EAAWo+C,EAAc8rC,EAAmBnU,EAAmBhT,EAAmBwpB,GACjI,OAAO1rF,KAAKklG,OAAOnD,YAAYr6F,OAAOw4B,EAAMhhC,EAAGC,EAAGo+C,EAAM8rC,EAAWnU,EAAWhT,EAAWwpB,G,CAa7F5W,WAAW50C,EAAyBhhC,EAAWC,EAAWo+C,EAAc1/C,EAAeqkE,EAAmBgT,GACtG,OAAOl1E,KAAKklG,OAAOnD,YAAYr6F,OAAOw4B,EAAMhhC,EAAGC,EAAGo+C,EAAM,KAAM23B,EAAWhT,EAAWrkE,G,CAOxFutC,MAAMA,GACF,OAAOprC,KAAKklG,OAAOjH,SAASv2F,OAAO0jC,G,CASvCkrB,UAAU/vD,EAAgBmpC,EAAiB,EAAGC,EAAiB,GAC3D,OAAO3vC,KAAKklG,OAAOnF,aAAar4F,OAAOnB,EAAQmpC,EAAQC,G,CAS3DjrC,OAAO/G,EAAe+xC,EAAiB,EAAGC,EAAiB,GACvD,OAAO3vC,KAAKklG,OAAOrF,UAAUn4F,OAAO/J,EAAO+xC,EAAQC,G,CAUvDlrC,MAAM21D,EAAgBC,EAAgB3qB,EAAiB,EAAGC,EAAiB,GACvE,OAAO3vC,KAAKklG,OAAOpF,SAASp4F,OAAO0yD,EAAQC,EAAQ3qB,EAAQC,G,CAQ/DnrC,UAAUR,EAAYC,GAClB,OAAOjE,KAAKklG,OAAOlF,aAAat4F,OAAO1D,EAAIC,G,CAM/C2qC,OACI,OAAO5uC,KAAKklG,OAAO5E,QAAQ54F,S,CAM/BwlB,UACI,OAAOltB,KAAKklG,OAAOtF,WAAWl4F,S,CAQlC09F,iBAAiBvnG,GACbmC,KAAK2kG,WACL,IAAIzD,EAAOlhG,KAAKokG,MAChB,IAAK,IAAI3lG,EAAIyiG,EAAKjlG,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACvC,IAAIsnF,EAAMmb,EAAKziG,GAEf,OADoBsnF,EAAImY,OAEpB,KAAK6D,YAAYx9C,GACZwhC,EAAoBloF,MAAQA,EAC7B,MACJ,KAAK4gG,aAAal6C,GACbwhC,EAAqBloF,MAAiB,MAATA,EAAgB6zC,WAAWhqC,OAAO7J,GAAOg0C,SAAW,WAG7F,C,CAYLwzD,UAAUlxF,EAAajV,EAAY,EAAGC,EAAY,EAAGkJ,EAAgB,KAAMC,EAAiB,KAAM0f,EAA4B,MAC1H,IAAI+P,EAAel9B,MAAMK,OAAOoqG,OAAOnxF,GACnC4jB,GACA/3B,KAAKynB,UAAUsQ,EAAK74B,EAAGC,EAAGkJ,EAAOC,GACjC0f,GAAYA,EAAS5qB,KAAK4C,KAAKmhG,MAG/BtmG,MAAMK,OAAO+sB,KAAK9T,GAAKilB,MAAMrB,IACzB/3B,KAAKynB,UAAUsQ,EAAK74B,EAAGC,EAAGkJ,EAAOC,GACjC0f,GAAYA,EAAS5qB,KAAK4C,KAAKmhG,IAAI,G,CAQ/CgD,aAAa11D,EAAgBjnB,EAAkBtoB,EAAWC,G,CAM1D8lG,WAAWx2D,EAAgBjnB,EAAkBtoB,EAAWC,GACpDqoB,EAAQinB,OAASA,EACjB,IAAIyyD,EAAOlhG,KAAKokG,MAChB,IAAK,IAAI3lG,EAAI,EAAG+G,EAAI07F,EAAKjlG,OAAQwC,EAAI+G,EAAG/G,IACpCyiG,EAAKziG,GAAG66B,IAAI9R,EAAStoB,EAAGC,E,CAOhC6lG,WAAWv2D,EAAgBjnB,EAAkBtoB,EAAWC,GACpDqoB,EAAQinB,OAASA,EACjBzuC,KAAKokG,MAAM,GAAG9qE,IAAI9R,EAAStoB,EAAGC,E,CAYlComG,SAAS/c,EAAeC,EAAeC,EAAaC,EAAaC,EAAmB1mB,EAAoB,GACpG,OAAOliE,KAAKklG,OAAOxG,YAAYh3F,OAAO8gF,EAAOC,EAAOC,EAAKC,EAAKC,EAAW1mB,G,CAW7EsjC,UAAUtmG,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,EAAoB,GAC/E,OAAKjjE,GAAUA,EAAOhD,OAAS,EAAU,KAClC+D,KAAKklG,OAAOtG,aAAal3F,OAAOxI,EAAGC,EAAGF,EAAQ2pF,EAAW1mB,G,CAWpEmpB,WAAWnsF,EAAWC,EAAWF,EAAe2pF,EAAgB1mB,EAAoB,GAChF,OAAOliE,KAAKklG,OAAO1G,cAAc92F,OAAOxI,EAAGC,EAAGF,EAAQ2pF,EAAW1mB,G,CAcrEya,SAASz9E,EAAWC,EAAWkJ,EAAeC,EAAgB+gF,EAAgBT,EAAiB,KAAM1mB,EAAoB,EAAGk8B,GACxH,OAAOp+F,KAAKklG,OAAOzF,YAAY/3F,OAAOxI,EAAGC,EAAGkJ,EAAOC,EAAQ+gF,EAAWT,EAAW1mB,EAAWk8B,G,CAYhGqH,WAAWvmG,EAAWC,EAAWiqF,EAAgBC,EAAgBT,EAAiB,KAAM1mB,EAAoB,GACxG,OAAOliE,KAAKklG,OAAO/G,cAAcz2F,OAAOxI,EAAGC,EAAGiqF,EAAQC,EAAWT,EAAW1mB,G,CAchFwjC,QAAQxmG,EAAWC,EAAWiqF,EAAgBK,EAAoBC,EAAkBL,EAAgBT,EAAiB,KAAM1mB,EAAoB,GAC3I,OAAOliE,KAAKklG,OAAOnG,WAAWr3F,OAAOxI,EAAGC,EAAGiqF,EAAQ1rF,MAAMioG,SAASlc,GAAa/rF,MAAMioG,SAASjc,GAAWL,EAAWT,EAAW1mB,G,CAYnI0jC,SAAS1mG,EAAWC,EAAWF,EAAeoqF,EAAgBT,EAAiB,KAAM1mB,EAAoB,GACrG,OAAOliE,KAAKklG,OAAO1F,YAAY93F,OAAOxI,EAAGC,EAAGF,EAAQoqF,EAAWT,EAAW1mB,G,CAW9E2jC,SAAS3mG,EAAWC,EAAWq+D,EAAcmtB,EAAa,KAAMC,EAAW,MACvE,OAAO5qF,KAAKklG,OAAOrG,YAAYn3F,OAAOxI,EAAGC,EAAGq+D,EAAOmtB,EAAOC,G,CAc9Dkb,UAAUv/E,EAAkBrnB,EAAY,EAAGC,EAAY,EAAGkJ,EAAgB,EAAGC,EAAiB,EAAGu/E,EAAiBhqF,GAC9GmC,KAAKklG,OAAO9E,oBAAoB14F,OAAO6e,EAASrnB,EAAGC,EAAGkJ,EAAOC,EAAQu/E,GAAU,EAAOhqF,G,EC5kB9F,MAAMkoG,GAAqB,GA0BrB,MAAOC,aAAal1F,gBA2DtBvU,cACI8V,QA1DIrS,KAAKimG,MAAW,EAEhBjmG,KAAUC,WAAW,EAG7BD,KAASw3D,UAAWuuC,GAEpB/lG,KAAOokD,QAAS,KAEhBpkD,KAAUyS,YAAY,EAWtBzS,KAAI+U,KAAW,GAwCX/U,KAAKO,a,CAhCL4T,UACA,OAAOnU,KAAKs9B,I,CAMZnpB,QAAI7U,GACJU,KAAKs9B,KAAOh+B,C,CAGZkB,gBACA,OAAOR,KAAKC,U,CAGZO,cAAUvC,GACV+B,KAAKC,WAAahC,C,CAIlBioG,WACA,OAAOlmG,KAAK2C,K,CAIZzB,gBACA,OAAOlB,KAAKyS,U,CAUhBlS,cACIP,KAAKS,OAAS,E,CAIlBe,QAAQ+J,EAActN,GACdsN,IAASnS,UAAUK,UACKuG,KAAK62D,QAAQtrD,IACrBtN,GAAO+B,KAAKmmG,2BAE5BloG,EAAO+B,KAAKimG,OAAS16F,EACpBvL,KAAKimG,QAAU16F,C,CAIxBsrD,QAAQtrD,GACJ,OAA8B,IAAtBvL,KAAKimG,MAAQ16F,E,CAIzB66F,oBACQpmG,KAAK62D,QAAQz9D,UAAUK,UAAUuG,KAAKqmG,UAAUjtG,UAAUK,Q,CAIlE4sG,UAAU96F,GACN,IAAIwwC,EAAY/7C,KAGhB,IAFA+7C,EAAIv6C,QAAQ+J,GAAM,GAClBwwC,EAAMA,EAAIqI,QACHrI,GAAK,CACR,GAAIA,EAAI8a,QAAQtrD,GAAO,OACvBwwC,EAAIv6C,QAAQ+J,GAAM,GAClBwwC,EAAMA,EAAIqI,OACb,C,CAGKrzC,uBAAuBxF,GACzBA,IAASL,MAAMzR,SAAW8R,IAASL,MAAMqD,WACpCvO,KAAK62D,QAAQz9D,UAAUK,UAAUuG,KAAKqmG,UAAUjtG,UAAUK,Q,CAIvE6sG,YAAY/6F,EAAcrJ,GACtB,IAAI7D,EAAmBkoG,GAAiBtqG,OAAS,EAAIsqG,GAAiBtpG,MAAQ,GAC9EoB,EAAIpC,OAAS,EAEb,IAAIgpC,EAAYjlC,KAChB,KAAOilC,GACCA,EAAIjkC,mBACJ3C,EAAIhC,KAAK4oC,GACbA,EAAMA,EAAI5E,OAGd,GAAIn+B,aAAgBgJ,MAAO,CACvBhJ,EAAK0J,UAAW,EAChB,IAAK,IAAIq5B,KAAO5mC,EAGZ,GAFA6D,EAAK6D,MAAMwF,EAAM05B,EAAKjlC,MACtBilC,EAAI9zB,MAAM5F,EAAMrJ,GACZA,EAAK0J,SACL,KAEX,MAEG,IAAK,IAAIq5B,KAAO5mC,EACZ4mC,EAAI9zB,MAAM5F,EAAMrJ,GAGxBqkG,GAAiBlqG,KAAKgC,E,CAG1BqC,YAAYC,GACR,OAAmC,IAA3BX,KAAKC,WAAaU,E,CAQ9BwC,QAAQqjG,GAAwB,GAC5BxmG,KAAKyS,YAAa,EAClBzS,KAAKymG,sBACLzmG,KAAKokD,SAAWpkD,KAAKokD,QAAQnI,YAAYj8C,MAGrCA,KAAKw3D,YACDgvC,EAAcxmG,KAAK0mG,kBAClB1mG,KAAK2mG,kBAEd3mG,KAAKuD,YAELvD,KAAKw3D,UAAY,KAGjBx3D,KAAK6R,Q,CAOTtO,Y,CAOAmjG,kBAEI,GAAI1mG,KAAKw3D,UAEL,IAAK,IAAI/4D,EAAI,EAAG+G,EAAIxF,KAAKw3D,UAAUv7D,OAAQwC,EAAI+G,EAAG/G,IAC9CuB,KAAKw3D,UAAU,IAAMx3D,KAAKw3D,UAAU,GAAGr0D,SAAQ,E,CAW3Dy5E,SAAyBr7E,GACrB,IAAKA,GAAQvB,KAAKyS,YAAclR,IAAgBvB,KAAM,OAAOuB,EAE7D,GADUA,EAAMqlG,SAAS5mG,KAAKwB,QAAQpI,UAAUM,YAAY,GACxD6H,EAAK6iD,UAAYpkD,KAAM,CACvB,IAAIuK,EAAgBvK,KAAK6mG,cAActlG,GACnCgJ,IAAUvK,KAAKw3D,UAAUv7D,OAAS,IAClC+D,KAAKw3D,UAAU9sD,OAAOH,EAAO,GAC7BvK,KAAKw3D,UAAUn7D,KAAKkF,GACpBvB,KAAK8mG,gBAEZ,MACGvlG,EAAK6iD,SAAW7iD,EAAK6iD,QAAQnI,YAAY16C,GACzCvB,KAAKw3D,YAAcuuC,KAAgB/lG,KAAKw3D,UAAY,IACpDx3D,KAAKw3D,UAAUn7D,KAAKkF,GACpBA,EAAKwlG,WAAW/mG,MAGpB,OAAOuB,C,CAOXylG,eAAe18F,GAEX,IADA,IAAI7L,EAAY,EAAG+G,EAAY8E,EAAKrO,OAC7BwC,EAAI+G,GACPxF,KAAK48E,SAAStyE,EAAK7L,K,CAU3BwoG,WAAW1lG,EAAYgJ,GACnB,IAAKhJ,GAAQvB,KAAKyS,YAAclR,IAASvB,KAAM,OAAOuB,EAEtD,GADUA,EAAMqlG,SAAS5mG,KAAKwB,QAAQpI,UAAUM,YAAY,GACxD6Q,GAAS,GAAKA,GAASvK,KAAKw3D,UAAUv7D,OAAQ,CAC9C,GAAIsF,EAAK6iD,UAAYpkD,KAAM,CACvB,IAAIknG,EAAmBlnG,KAAK6mG,cAActlG,GAC1CvB,KAAKw3D,UAAU9sD,OAAOw8F,EAAU,GAChClnG,KAAKw3D,UAAU9sD,OAAOH,EAAO,EAAGhJ,GAChCvB,KAAK8mG,eACR,MACGvlG,EAAK6iD,SAAW7iD,EAAK6iD,QAAQnI,YAAY16C,GACzCvB,KAAKw3D,YAAcuuC,KAAgB/lG,KAAKw3D,UAAY,IACpDx3D,KAAKw3D,UAAU9sD,OAAOH,EAAO,EAAGhJ,GAChCA,EAAKwlG,WAAW/mG,MAEpB,OAAOuB,CACV,CACG,MAAM,IAAI2nB,MAAM,2C,CASxB29E,cAActlG,GACV,OAAOvB,KAAKw3D,UAAUt5D,QAAQqD,E,CAQlC4lG,eAAepyF,GACX,IAAK,IAAIqyF,KAASpnG,KAAKw3D,UACnB,GAAI4vC,GAASA,EAAMryF,OAASA,EACxB,OAAOqyF,EAEf,OAAO,I,CAQXC,WAAW98F,GACP,OAAOvK,KAAKw3D,UAAUjtD,IAAU,I,CASpC+8F,cAAc/lG,EAAYgJ,GACtB,IAAI01B,EAAgBjgC,KAAKw3D,UACzB,GAAIjtD,EAAQ,GAAKA,GAAS01B,EAAOhkC,OAC7B,MAAM,IAAIitB,MAAM,6CAGpB,IAAIg+E,EAAmBlnG,KAAK6mG,cAActlG,GAC1C,GAAI2lG,EAAW,EAAG,MAAM,IAAIh+E,MAAM,oDAIlC,OAHA+W,EAAOv1B,OAAOw8F,EAAU,GACxBjnE,EAAOv1B,OAAOH,EAAO,EAAGhJ,GACxBvB,KAAK8mG,gBACEvlG,C,CAQDulG,cAAcM,EAAc,M,CAStCnrD,YAAY16C,GACR,IAAKvB,KAAKw3D,UAAW,OAAOj2D,EAC5B,IAAIgJ,EAAgBvK,KAAKw3D,UAAUt5D,QAAQqD,GAC3C,OAAOvB,KAAKunG,cAAch9F,E,CAO9Bi9F,aAEI,OADAxnG,KAAKokD,SAAWpkD,KAAKokD,QAAQnI,YAAYj8C,MAClCA,I,CAQXynG,kBAAkB1yF,GACd,IAAIxT,EAAavB,KAAKmnG,eAAepyF,GAErC,OADAxT,GAAQvB,KAAKi8C,YAAY16C,GAClBA,C,CAQXgmG,cAAch9F,GACV,IAAIhJ,EAAavB,KAAKqnG,WAAW98F,GAKjC,OAJIhJ,IACAvB,KAAKw3D,UAAU9sD,OAAOH,EAAO,GAC7BhJ,EAAKwlG,WAAW,OAEbxlG,C,CASXolG,eAAee,EAAqB,EAAGC,EAAmB,YACtD,GAAI3nG,KAAKw3D,WAAax3D,KAAKw3D,UAAUv7D,OAAS,EAAG,CAC7C,IAAIgkC,EAAgBjgC,KAAKw3D,UACzB,GAAmB,IAAfkwC,GAAoBC,GAAY1nE,EAAOhkC,OAAS,EAAG,CACnD,IAAIoC,EAAa4hC,EACjBjgC,KAAKw3D,UAAYuuC,EACpB,MACG1nG,EAAM4hC,EAAOv1B,OAAOg9F,EAAYC,EAAWD,EAAa,GAE5D,IAAK,IAAIjpG,EAAY,EAAG+G,EAAYnH,EAAIpC,OAAQwC,EAAI+G,EAAG/G,IACnDJ,EAAII,GAAGsoG,WAAW,KAEzB,CACD,OAAO/mG,I,CAUX4nG,aAAaC,EAAeC,GACxB,IAAIv9F,EAAgBvK,KAAKw3D,UAAUt5D,QAAQ4pG,GAC3C,OAAIv9F,GAAS,GACTvK,KAAKw3D,UAAU9sD,OAAOH,EAAO,EAAGs9F,GAChCC,EAAQf,WAAW,MACnBc,EAAQd,WAAW/mG,MACZ6nG,GAEJ,I,CAMPE,kBACA,OAAO/nG,KAAKw3D,UAAYx3D,KAAKw3D,UAAUv7D,OAAS,C,CAIhDokC,aACA,OAAOrgC,KAAKokD,O,CAOhB4jD,aAAazmG,GACT,IAAIytC,EAAIztC,EAAK8+B,OACb,KAAO2O,GAAG,CACN,GAAIA,GAAKhvC,KACL,OAAO,EAEXgvC,EAAIA,EAAE3O,MACT,CACD,OAAO,C,CAID0mE,WAAW9oG,GACjB,GAAI+B,KAAKokD,UAAYnmD,EACjB,GAAIA,EACA+B,KAAKokD,QAAUnmD,EAEf+B,KAAKyB,WACLzB,KAAKmR,MAAMjG,MAAMmD,OACbrO,KAAK62D,QAAQz9D,UAAUK,WACvBuG,KAAKomG,oBACLnoG,EAAMgqG,kBAAoBjoG,KAAKkoG,cAAcloG,MAAM,IAEvD/B,EAAM6oG,cAAc9mG,UACjB,CAEHA,KAAKmoG,aACLnoG,KAAKmR,MAAMjG,MAAMoD,SACjB,IAAI0gC,EAAIhvC,KAAKokD,QACTpkD,KAAK62D,QAAQz9D,UAAUK,UAAUuG,KAAKkoG,cAAcloG,MAAM,GAC9DA,KAAKokD,QAAUnmD,EACf+wC,EAAE83D,cAAc9mG,KACnB,C,CAKLioG,uBACA,OAAIjoG,KAAK62D,QAAQz9D,UAAUK,UAC3BuG,KAAKqmG,UAAUjtG,UAAUK,SADmBuG,KAAK62D,QAAQz9D,UAAUQ,kB,CAM/DusG,0BACJ,IAAIpqD,EACJA,EAAM/7C,KAGN,IAFA,IAAI1E,EAAcT,MAAMS,MACpB2sG,GAA4B,EACzBlsD,GAAK,CACR,GAAIA,EAAI8a,QAAQz9D,UAAUK,SAAU,CAChCwuG,EAAmBlsD,EAAI8a,QAAQz9D,UAAUQ,mBACzC,KACH,CACD,GAAImiD,IAAQzgD,GAASygD,EAAI8a,QAAQz9D,UAAUQ,mBAAoB,CAC3DquG,GAAmB,EACnB,KACH,CACDlsD,EAAMA,EAAIqI,OACb,CACDpkD,KAAKwB,QAAQpI,UAAUQ,kBAAmBquG,E,CAI9CG,YAAYnqG,GACJ+B,KAAK62D,QAAQz9D,UAAUQ,qBAAuBqE,IAC9C+B,KAAKwB,QAAQpI,UAAUQ,kBAAmBqE,GACtCA,EAAO+B,KAAKmR,MAAMjG,MAAMzR,SACvBuG,KAAKmR,MAAMjG,MAAMqD,W,CAUtB25F,cAAc3mG,EAAY8mG,GAC9B,IAAIpoE,EAAgB1+B,EAAKi2D,UACzB,GAAIv3B,EACA,IAAK,IAAIxhC,EAAY,EAAG+G,EAAYy6B,EAAOhkC,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC3D,IAAI2oG,EAAcnnE,EAAOxhC,GACpB2oG,IACAA,EAAMvwC,QAAQz9D,UAAUK,WACzB2tG,EAAM5vC,UAAUv7D,OAAS,EACzB+D,KAAKkoG,cAAcd,EAAOiB,GAE1BjB,EAAMgB,YAAYC,IAEzB,CAEL9mG,EAAK6mG,YAAYC,E,CAQrB3/F,SAASnH,GACL,GAAIA,IAASvB,KAAM,OAAO,EAC1B,KAAOuB,GAAM,CACT,GAAIA,EAAK6iD,UAAYpkD,KAAM,OAAO,EAClCuB,EAAOA,EAAK6iD,OACf,CACD,OAAO,C,CAYXkkD,UAAU9pD,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,EAAMC,GAAqB,GAC1HzoG,KAAK7E,MAAMgjD,KAAKK,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,EAAaC,E,CAW9DC,UAAUlqD,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC/FxoG,KAAK7E,MAAMixB,SAAQ,GAAO,EAAOoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAWlEr1F,UAAUqrC,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC/FxoG,KAAK7E,MAAMixB,SAAQ,GAAM,EAAMoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAWhEG,UAAUnqD,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC/FxoG,KAAK7E,MAAMixB,SAAQ,GAAM,EAAOoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAQjEI,WAAWzrG,EAAaorG,GACpBvoG,KAAK7E,MAAMwP,MAAMxN,EAAQorG,E,CAW7B5V,UAAU4V,EAAkBj+F,EAAc,MACtCtK,KAAK7E,MAAMw3F,UAAU3yF,KAAMuoG,EAAQj+F,E,CAQvCu+F,aAAaN,GACTvoG,KAAK7E,MAAM0tG,aAAa7oG,KAAMuoG,E,CAgB9BO,YACA,OAAO9oG,KAAK4C,M,CAOZmmG,aACA,OAAQ/oG,KAAK62D,QAAQz9D,UAAUI,aAAewG,KAAK62D,QAAQz9D,UAAUC,W,CAOrE0vG,WAAO9qG,GAEP,GADAA,IAAUA,GACL+B,KAAK62D,QAAQz9D,UAAUC,cAAgB4E,EAAO,CAC/C,GAAI+B,KAAKgpG,sBAA6D,IAArChpG,KAAKgpG,qBAAqB/sG,OACvD,MAAIgC,EACM,gJAEA,6IAEV+B,KAAKwB,QAAQpI,UAAUC,YAAa4E,GAChC+B,KAAKokD,SACDpkD,KAAKokD,QAAQpjD,mBACbhB,KAAKipG,eAAehrG,GAAO,EAI1C,C,CAOD+C,wBACA,OAAOhB,KAAK62D,QAAQz9D,UAAUE,mB,CAMxB4vG,YACNxrD,KAAK0E,a,CAMC+mD,cACNzrD,KAAK0E,a,CAMCgnD,mB,CAOAC,qB,CAQV5mG,U,CAQAZ,W,CAQAE,Y,CAOAE,OAAOC,EAAWG,G,CAOlBinG,gBAAgBR,GACZ,IAAK9oG,KAAK4C,QAAU5C,KAAK8oG,OAASA,EAAO,CACrC9oG,KAAK4C,OAASkmG,EACd9oG,KAAKopG,mBACL,IAAK,IAAI3qG,EAAI,EAAG+G,EAAIxF,KAAKw3D,UAAUv7D,OAAQwC,EAAI+G,EAAG/G,IAC9CuB,KAAKw3D,UAAU/4D,GAAG6qG,gBAAgBR,EACzC,C,CAMLS,oBACI,GAAIvpG,KAAK4C,SAAW5C,KAAM,CACtBA,KAAKqpG,qBACLrpG,KAAK4C,OAAS,KACd,IAAK,IAAInE,EAAI,EAAG+G,EAAIxF,KAAKw3D,UAAUv7D,OAAQwC,EAAI+G,EAAG/G,IAC9CuB,KAAKw3D,UAAU/4D,GAAG8qG,mBACzB,C,CAGLN,eAAeF,EAAiBS,GAC3BxpG,KAAyB,uBAAMA,KAAKgpG,qBAAuB,IAC5D,IAAI3qG,EAAM2B,KAAKgpG,qBAEXD,EACA/oG,KAAKypG,iBAAiBprG,EAAKmrG,GAE3BxpG,KAAK0pG,mBAAmBrrG,EAAKmrG,GAEjC,IAAK,IAAI/qG,EAAI,EAAG+G,EAAInH,EAAIpC,OAAQwC,EAAI+G,EAAG/G,IAAK,CACxC,IAAIkrG,EAAOtrG,EAAII,GACfkrG,EAAK7oG,OAAS6oG,EAAK5oG,WAAWgoG,EACjC,CAED1qG,EAAIpC,OAAS,C,CAMjBwtG,iBAAiBG,EAA4BJ,GAEzC,GADAxpG,KAAKwB,QAAQpI,UAAUE,oBAAoB,GACvC0G,KAAK6pG,YACL,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAIkrG,EAAO3pG,KAAK6pG,YAAYprG,GACxBkrG,EAAKxoG,YACJwoG,EAAa,UAAMC,EAAoBvtG,KAAKstG,GAE7CA,EAAK5oG,YAAW,EACvB,CAGLf,KAAKkpG,YACL,IAAK,IAAIzqG,EAAI,EAAG+G,EAAIxF,KAAKw3D,UAAUv7D,OAAQwC,EAAI+G,EAAG/G,IAAK,CACnD,IAAI2oG,EAAQpnG,KAAKw3D,UAAU/4D,IACzB2oG,EAAMvwC,QAAQz9D,UAAUC,cAAgB+tG,EAAMvwC,QAAQz9D,UAAUI,YAAgB4tG,EAAMqC,iBAAiBG,EAAqBJ,EACjI,CACIxpG,KAAK62D,QAAQz9D,UAAUG,UACxByG,KAAKwB,QAAQpI,UAAUG,QAAQ,GAC/ByG,KAAKyC,WAETzC,KAAK6B,U,CAMT6nG,mBAAmBE,EAA4BJ,GAE3C,GADAxpG,KAAKmpG,cACDnpG,KAAK6pG,YACL,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAIkrG,EAAO3pG,KAAK6pG,YAAYprG,GACxBkrG,EAAKxoG,YACLwoG,EAAKxpG,UAAaypG,EAAoBvtG,KAAKstG,GAE3CA,EAAK5oG,YAAW,EACvB,CAELf,KAAKwB,QAAQpI,UAAUE,oBAAoB,GAE3C,IAAK,IAAImF,EAAI,EAAG+G,EAAIxF,KAAKw3D,UAAUv7D,OAAQwC,EAAI+G,EAAG/G,IAAK,CACnD,IAAI2oG,EAAQpnG,KAAKw3D,UAAU/4D,GAC1B2oG,IAAUA,EAAMvwC,QAAQz9D,UAAUC,aAAiB+tG,EAAMsC,mBAAmBE,EAAqBJ,EACrG,CACDxpG,KAAK+B,W,CAMCN,WACN,GAAIzB,KAAKgpG,sBAA6D,IAArChpG,KAAKgpG,qBAAqB/sG,OACvD,KAAM,gJACH,CACH,IAAI6tG,EAAc9pG,KAAKokD,QAAQ0kD,MAC/BgB,GAAe9pG,KAAKspG,gBAAgBQ,GACnC9pG,KAAKokD,QAAQpjD,mBAAqBhB,KAAK+oG,QAAW/oG,KAAKipG,gBAAe,EAC1E,C,CAMKd,aACN,GAAInoG,KAAKgpG,sBAA6D,IAArChpG,KAAKgpG,qBAAqB/sG,OACvD,KAAM,6IAEL+D,KAAKokD,QAAQpjD,mBAAqBhB,KAAK+oG,QAAW/oG,KAAKipG,gBAAe,GACvEjpG,KAAKokD,QAAQ0kD,OAAS9oG,KAAKupG,mB,CAOnCQ,sBAAsBJ,G,MACb3pG,KAAK6pG,cACN7pG,KAAK6pG,YAAc,IACvB7pG,KAAK6pG,YAAYxtG,KAAKstG,GAEtBA,EAAKroG,UAAUtB,MACXA,KAAKgB,mBACL2oG,EAAK5oG,YAAW,GACG,QAAvB2B,EAAA1C,KAAKgqG,0BAAkB,IAAAtnG,KAAAtF,KAAA4C,KAAG2pG,EAAM,E,CAMpCvmG,kBAAkBumG,G,MACd,IAAK3pG,KAAK6pG,YACN,OAEJ,IAAIprG,EAAIuB,KAAK6pG,YAAY3rG,QAAQyrG,IACvB,GAANlrG,IACAuB,KAAK6pG,YAAYn/F,OAAOjM,EAAG,GAC3BkrG,EAAKtmG,WACkB,QAAvBX,EAAA1C,KAAKgqG,0BAAkB,IAAAtnG,KAAAtF,KAAA4C,KAAG2pG,EAAM,G,CAOhClD,sB,MACJ,GAAKzmG,KAAK6pG,YAAV,CAGA,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAIvC,EAAO8D,KAAK6pG,YAAYprG,GAC5BvC,IAASA,EAAKgF,WAAahF,EAAKmH,UACnC,CACDrD,KAAK6pG,YAAY5tG,OAAS,EACH,QAAvByG,EAAA1C,KAAKgqG,0BAAkB,IAAAtnG,KAAAtF,KAAA4C,KAAG,KAAM,EAP5B,C,CAoBRsC,SAASyoB,EAAiBk/E,EAAeC,GACrC,IAAIC,EAAwBp/E,EAC5B,GAAI/qB,KAAK6pG,YACL,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAI2rG,EAAgBD,EAASE,aAAcrqG,KAAK6pG,YAAYprG,GAAWlC,aACvEyD,KAAK6pG,YAAYprG,GAAG6D,SAAS8nG,EAChC,C,CAUTE,qBAAqBC,GACjB,GAAIA,EAAUzpG,MACV,KAAM,+CAKV,OAJIypG,EAAUnqG,YAAcJ,KAAKwqG,aAAoBD,EAAYhuG,aAC7DjF,QAAQC,KAAK,6DAA8DgzG,GAE3EvqG,KAAK+pG,sBAAsBQ,GACxBA,C,CAQXF,aAAkCI,GAC9B,IAAId,EAAU7tG,KAAK4uG,cAAcD,GACjC,IAAKd,EACD,KAAM,WAAac,EAAczsG,WAOrC,OAJI2rG,EAAKvpG,YAAcJ,KAAKwqG,aAAaC,GACrCnzG,QAAQC,KAAK,6DAA8DoyG,GAE3E3pG,KAAK+pG,sBAAsBJ,GACxBA,C,CAQXa,aAAkCC,GAC9B,GAAIzqG,KAAK6pG,YACL,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAIkrG,EAAO3pG,KAAK6pG,YAAYprG,GAC5B,GAAIkrG,aAAgBc,EAChB,OAAOd,CACd,CAEL,OAAO,I,CAOPgB,iBACA,OAAO3qG,KAAK6pG,aAAe9D,E,CAQ/B6E,cAAcH,GACV,IAAIpsG,EACJ,GAAI2B,KAAK6pG,YACL,IAAK,IAAIprG,EAAI,EAAG+G,EAAIxF,KAAK6pG,YAAY5tG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrD,IAAIkrG,EAAO3pG,KAAK6pG,YAAYprG,GACxBkrG,aAAgBc,IAChBpsG,EAAMA,GAAO,IACThC,KAAKstG,EAEhB,CAEL,OAAOtrG,C,CAMPlD,YACA,OAAO6E,KAAK4C,OAAS5C,KAAK4C,OAAOzH,MAAQN,MAAMM,K,CAMnDg5C,qBAAkB,EAGtB,MAAMoyD,GAAuC,GCz/BvCsE,GAAoB,GAAVttG,KAAKC,GACf+zF,GAAgB,EAAVh0F,KAAKC,G,MAKJstG,KAST9zG,kBAAkBklE,EAAWr4D,EAAWC,EAAWC,GAC/C,OAAOD,EAAIo4D,EAAIn4D,EAAIF,C,CAWvB7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAOD,EAAIo4D,EAAIn4D,EAAIF,C,CAWvB7M,mBAAmBklE,EAAWr4D,EAAWC,EAAWC,GAChD,OAAOD,EAAIo4D,EAAIn4D,EAAIF,C,CAWvB7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAOD,EAAIo4D,EAAIn4D,EAAIF,C,CAYvB7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAOD,EAAIgnG,KAAKC,UAAUhnG,EAAIm4D,EAAG,EAAGp4D,EAAGC,GAAKF,C,CAYhD7M,mBAAmBklE,EAAWr4D,EAAWC,EAAWC,GAChD,OAAIm4D,EAAQ,GAAJn4D,EAAgD,GAAhC+mG,KAAKE,SAAa,EAAJ9uC,EAAO,EAAGp4D,EAAGC,GAAUF,EACZ,GAArCinG,KAAKC,UAAc,EAAJ7uC,EAAQn4D,EAAG,EAAGD,EAAGC,GAAc,GAAJD,EAASD,C,CAYnE7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAKm4D,GAAKn4D,GAAM,EAAI,KAAcD,GAAK,OAASo4D,EAAIA,GAAKr4D,EAChDq4D,EAAK,EAAI,KAAcp4D,GAAK,QAAUo4D,GAAM,IAAM,MAASA,EAAI,KAAOr4D,EACtEq4D,EAAK,IAAM,KAAcp4D,GAAK,QAAUo4D,GAAM,KAAO,MAASA,EAAI,OAASr4D,EACxEC,GAAK,QAAUo4D,GAAM,MAAQ,MAASA,EAAI,SAAWr4D,C,CAYrE7M,cAAcklE,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAY,SAClE,OAAOhtC,GAAKo4D,GAAKn4D,GAAKm4D,IAAMprB,EAAI,GAAKorB,EAAIprB,GAAKjtC,C,CAYlD7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAY,SACrE,OAAKorB,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,GAAWo4D,EAAIA,IAAuB,GAAhBprB,GAAC,QAAoBorB,EAAIprB,IAAMjtC,EAC7EC,EAAI,IAAMo4D,GAAK,GAAKA,IAAuB,GAAhBprB,GAAC,QAAoBorB,EAAIprB,GAAK,GAAKjtC,C,CAYzE7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAY,SACnE,OAAOhtC,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,IAAMprB,EAAI,GAAKorB,EAAIprB,GAAK,GAAKjtC,C,CAc/D7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAY,EAAGorC,EAAY,GAEpF,IAAI8B,EACJ,OAAS,GAALorB,EAAer4D,EACH,IAAXq4D,GAAKn4D,GAAgBF,EAAIC,GACzBkrC,IAAGA,EAAQ,GAAJjrC,IACPH,GAAME,EAAI,GAAKF,EAAIE,GAAOA,EAAI,GAAKF,GAAKE,GACzCF,EAAIE,EACJgtC,EAAI9B,EAAI,GACL8B,EAAI9B,EAAIuiD,GAAMh0F,KAAK0tG,KAAKnnG,EAAIF,IAC1BA,EAAIrG,KAAKgtB,IAAI,EAAG,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,GAAKygD,GAAMviD,GAAMnrC,E,CAcjF7M,oBAAoBklE,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAY,EAAGorC,EAAY,GAEvF,IAAI8B,EACJ,OAAS,GAALorB,EAAer4D,EACG,IAAjBq4D,GAAS,GAAJn4D,GAAsBF,EAAIC,GAC/BkrC,IAAGA,EAAIjrC,GAAK,GAAK,OACjBH,GAAME,EAAI,GAAKF,EAAIE,GAAOA,EAAI,GAAKF,GAAKE,GACzCF,EAAIE,EACJgtC,EAAI9B,EAAI,GACL8B,EAAI9B,EAAIuiD,GAAMh0F,KAAK0tG,KAAKnnG,EAAIF,GAC/Bs4D,EAAI,EAAiBt4D,EAAIrG,KAAKgtB,IAAI,EAAG,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,GAAKygD,GAAMviD,IAApE,GAA0EnrC,EACtFD,EAAIrG,KAAKgtB,IAAI,GAAI,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,GAAKygD,GAAMviD,GAAK,GAAKlrC,EAAID,E,CAcxF7M,kBAAkBklE,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAY,EAAGorC,EAAY,GAErF,IAAI8B,EACJ,OAAS,GAALorB,EAAer4D,EACH,IAAXq4D,GAAKn4D,GAAgBF,EAAIC,GACzBkrC,IAAGA,EAAQ,GAAJjrC,IACPH,GAAME,EAAI,GAAKF,EAAIE,GAAOA,EAAI,GAAKF,GAAKE,GACzCF,EAAIE,EACJgtC,EAAI9B,EAAI,GACL8B,EAAI9B,EAAIuiD,GAAMh0F,KAAK0tG,KAAKnnG,EAAIF,GAC3BA,EAAIrG,KAAKgtB,IAAI,GAAI,GAAK2xC,GAAK3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,GAAKygD,GAAMviD,GAAKlrC,EAAID,E,CAW7E7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAIr4D,C,CAW1C7M,mBAAmBklE,EAAWr4D,EAAWC,EAAWC,GAChD,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUo4D,EAAIA,EAAIA,EAAIA,EAAIA,EAAIr4D,EAClD,GAAJC,IAAYo4D,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAWtD7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAOD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAYvD7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,MAAY,IAAJD,GAAWvG,KAAKoH,IAAIpH,KAAKC,GAAK0+D,EAAIn4D,GAAK,GAAKF,C,CAYxD7M,cAAcklE,EAAWr4D,EAAWC,EAAWC,GAC3C,OAAQD,EAAIvG,KAAKoH,IAAIu3D,EAAIn4D,EAAI8mG,IAAW/mG,EAAID,C,CAYhD7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAOD,EAAIvG,KAAKqH,IAAIs3D,EAAIn4D,EAAI8mG,IAAWhnG,C,CAY3C7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAIr4D,C,CAY1C7M,kBAAkBklE,EAAWr4D,EAAWC,EAAWC,GAC/C,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUo4D,EAAIA,EAAIA,EAAIA,EAAIA,EAAIr4D,EAClD,GAAJC,IAAYo4D,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAYtD7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAOD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAYvD7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIA,EAAIr4D,C,CAYtC7M,kBAAkBklE,EAAWr4D,EAAWC,EAAWC,GAC/C,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUo4D,EAAIA,EAAIA,EAAIA,EAAIr4D,EAC7C,IAAJC,IAAYo4D,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAYnD7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAQD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAIA,EAAI,GAAKr4D,C,CAYpD7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIr4D,C,CAYlC7M,kBAAkBklE,EAAWr4D,EAAWC,EAAWC,GAC/C,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUo4D,EAAIA,EAAIA,EAAIr4D,EAC1C,GAAJC,IAAYo4D,GAAK,GAAKA,EAAIA,EAAI,GAAKr4D,C,CAY9C7M,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GAC7C,OAAOD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAI,GAAKr4D,C,CAY/C7M,cAAcklE,EAAWr4D,EAAWC,EAAWC,GAC3C,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIr4D,C,CAY9B7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUo4D,EAAIA,EAAIr4D,EACrC,IAAJC,KAAco4D,GAAMA,EAAI,GAAK,GAAKr4D,C,CAY9C7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAQD,GAAKo4D,GAAKn4D,IAAMm4D,EAAI,GAAKr4D,C,CAYrC7M,cAAcklE,EAAWr4D,EAAWC,EAAWC,GAC3C,OAAa,GAALm4D,EAAUr4D,EAAIC,EAAIvG,KAAKgtB,IAAI,EAAG,IAAM2xC,EAAIn4D,EAAI,IAAMF,EAAQ,KAAJC,C,CAYlE9M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAS,GAALm4D,EAAer4D,EACfq4D,GAAKn4D,EAAUF,EAAIC,GAClBo4D,GAAS,GAAJn4D,GAAW,EAAc,GAAJD,EAAUvG,KAAKgtB,IAAI,EAAG,IAAM2xC,EAAI,IAAMr4D,EAC1D,GAAJC,GAAqC,EAAzBvG,KAAKgtB,IAAI,GAAI,KAAO2xC,IAAUr4D,C,CAYrD7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAQm4D,GAAKn4D,EAAKF,EAAIC,EAAIA,GAAiC,EAA3BvG,KAAKgtB,IAAI,GAAI,GAAK2xC,EAAIn4D,IAAUF,C,CAYpE7M,cAAcklE,EAAWr4D,EAAWC,EAAWC,GAC3C,OAAQD,GAAKvG,KAAK4I,KAAK,GAAK+1D,GAAKn4D,GAAKm4D,GAAK,GAAKr4D,C,CAYpD7M,iBAAiBklE,EAAWr4D,EAAWC,EAAWC,GAC9C,OAAKm4D,GAAS,GAAJn4D,GAAW,EAAe,IAAJD,GAAWvG,KAAK4I,KAAK,EAAI+1D,EAAIA,GAAK,GAAKr4D,EAC5D,GAAJC,GAAWvG,KAAK4I,KAAK,GAAK+1D,GAAK,GAAKA,GAAK,GAAKr4D,C,CAYzD7M,eAAeklE,EAAWr4D,EAAWC,EAAWC,GAC5C,OAAOD,EAAIvG,KAAK4I,KAAK,GAAK+1D,EAAIA,EAAIn4D,EAAI,GAAKm4D,GAAKr4D,C,QC1gB3CqnG,QA0BT3uG,YAAYY,EAAwB,KAAMorG,EAA0B,KAAMj+F,EAAqB,KAAMG,GAAgB,GAZrHzK,KAAIyK,MAAG,EAGGzK,KAAGK,IAAG,EAUZL,KAAK+F,MAAM5I,EAAQorG,EAAQj+F,EAAMG,E,CAWrC1E,MAAM5I,EAAaorG,EAAyBj+F,EAAoBG,GAAO,GAMnE,OALAzK,KAAKK,IAAM6qG,QAAQ7tG,OACnB2C,KAAK7C,OAASA,EACd6C,KAAKuoG,OAASA,EACdvoG,KAAKsK,KAAOA,EACZtK,KAAKyK,KAAOA,EACLzK,I,CAMXs5B,MACI,GAAmB,MAAft5B,KAAKuoG,OAAgB,OAAO,KAChC,IAAI3nG,EAAaZ,KAAKK,IAClBhB,EAAcW,KAAKuoG,OAAOv6D,MAAMhuC,KAAK7C,OAAQ6C,KAAKsK,MAEtD,OADAtK,KAAKK,MAAQO,GAAMZ,KAAKyK,MAAQzK,KAAKvD,UAC9B4C,C,CAOX8rG,QAAQjpG,GACJ,GAAmB,MAAflC,KAAKuoG,OAAgB,OAAO,KAChC,IAAI3nG,EAAaZ,KAAKK,IACtB,GAAY,MAAR6B,EACA,IAAI7C,EAAcW,KAAKuoG,OAAOv6D,MAAMhuC,KAAK7C,OAAQ6C,KAAKsK,WAEtCjL,EADVW,KAAKsK,MAASpI,EAAKkpG,QACpBprG,KAAKsK,KAAetK,KAAKuoG,OAAOv6D,MAAMhuC,KAAK7C,OAAQ6C,KAAKsK,KAAKhE,OAAOpE,IAC/DlC,KAAKuoG,OAAOv6D,MAAMhuC,KAAK7C,OAAQ+E,GAFElC,KAAKuoG,OAAOnrG,KAAK4C,KAAK7C,OAAQ+E,GAI7E,OADAlC,KAAKK,MAAQO,GAAMZ,KAAKyK,MAAQzK,KAAKvD,UAC9B4C,C,CAMXsL,QAII,OAHA3K,KAAK7C,OAAS,KACd6C,KAAKuoG,OAAS,KACdvoG,KAAKsK,KAAO,KACLtK,I,CAMXvD,UACQuD,KAAKK,IAAM,IACXL,KAAKK,IAAM,EACX6qG,QAAQvnB,MAAMtnF,KAAK2D,KAAK2K,S,CAYhC3T,cAAcmG,EAAaorG,EAAyBj+F,EAAqB,KAAMG,GAAgB,GAC3F,OAAIygG,QAAQvnB,MAAM1nF,OACNivG,QAAQvnB,MAAM1mF,MAAkB8I,MAAM5I,EAAQorG,EAAQj+F,EAAMG,GACjE,IAAIygG,QAAQ/tG,EAAQorG,EAAQj+F,EAAMG,E,EAtG5BygG,QAAKvnB,MAAc,GAErBunB,QAAI7tG,KAAW,E,MCDrBguG,MAAb9uG,cAwBIyD,KAAGsrG,IAAW,EAIdtrG,KAAMgoF,OAAW,EAEThoF,KAAM+jC,OAAW,C,CAczB/sC,UAAUqT,EAAakhG,EAAYC,EAAkBC,EAAsB,KAAMzjF,EAAyB,KAAMw2B,EAAgB,EAAGgqD,GAAuB,EAAOkD,GAAuB,GACpL,OAAO5vG,KAAKe,eAAe,QAASwuG,OAAOj/E,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMzjF,EAAUw2B,EAAOgqD,GAAa,EAAMkD,GAAa,E,CAevI10G,YAAYqT,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMzjF,EAAoB,KAAMw2B,EAAgB,EAAGgqD,GAAuB,EAAOkD,GAAuB,GAC5K,OAAO5vG,KAAKe,eAAe,QAASwuG,OAAOj/E,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMzjF,EAAUw2B,EAAOgqD,GAAa,EAAOkD,GAAa,E,CAcxIC,GAAGthG,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMzjF,EAAoB,KAAMw2B,EAAgB,EAAGgqD,GAAuB,GACrI,OAAOxoG,KAAKosB,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMzjF,EAAUw2B,EAAOgqD,GAAa,GAAM,GAAO,E,CAclG/b,KAAKpiF,EAAakhG,EAAYC,EAAkBC,EAAsB,KAAMzjF,EAAyB,KAAMw2B,EAAgB,EAAGgqD,GAAuB,GACjJ,OAAOxoG,KAAKosB,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMzjF,EAAUw2B,EAAOgqD,GAAa,GAAO,GAAO,E,CAInGp8E,QAAQ/hB,EAAakhG,EAAYC,EAAkBC,EAAqBzjF,EAAwBw2B,EAAegqD,EAAsBoD,EAAeC,EAAkBC,GAClK,IAAKzhG,EAAQ,MAAM,IAAI6e,MAAM,wBAC7BlpB,KAAK0lF,QAAUr7E,EACfrK,KAAK+rG,UAAYP,EACjBxrG,KAAKgsG,MAAQP,GAAQF,EAAME,MAAQJ,MAAMY,SACzCjsG,KAAKksG,UAAYlkF,GAAYujF,EAAMvjF,SACnChoB,KAAKmsG,OAAS3tD,EACdx+C,KAAKosG,OAAS,GACdpsG,KAAKqsG,WAAa,EAClBrsG,KAAKssG,YAActxG,QAAQmhD,MAC3Bn8C,KAAKusG,UAAYV,EACjB7rG,KAAKwsG,YAAc,KACnBxsG,KAAK2+C,OAAS4sD,EAAM5sD,OAGpB,IAAI2sD,EAAejhG,EAAOoiG,QAAUpiG,EAAOoiG,MAAQ/uG,MAAM4C,UAiBzD,OAhBK+qG,MAAMqB,SAASpB,IAGZ9C,GAAa6C,MAAMsB,WAAWtiG,GAClCghG,MAAMqB,SAASpB,GAAKjvG,KAAK2D,OAHzBqrG,MAAMqB,SAASpB,GAAO,CAACtrG,MAMvB8rG,EACIttD,GAAS,EAAGx+C,KAAK4sG,WAAWviG,EAAQkhG,EAAOK,IAE3C5rG,KAAKwsG,YAAc,CAACniG,EAAQkhG,EAAOK,GACnC/wG,MAAMM,MAAMsP,KAAK+zC,EAAOx+C,KAAMA,KAAK4sG,WAAY5sG,KAAKwsG,cAGxDxsG,KAAK6sG,WAAWxiG,EAAQkhG,EAAOK,GAE5B5rG,I,CAGH4sG,WAAWviG,EAAakhG,EAAYK,GACxC5rG,KAAKwsG,YAAc,KACfniG,EAAOnJ,UACPlB,KAAK2K,SAGT3K,KAAK6sG,WAAWxiG,EAAQkhG,EAAOK,GAC/B5rG,KAAK8sG,a,CAGDD,WAAWxiG,EAAakhG,EAAYK,GAExC,IAAK,IAAI58D,KAAKu8D,EACV,GAA0B,iBAAdlhG,EAAO2kC,GAAiB,CAChC,IAAI/zB,EAAgB2wF,EAAOvhG,EAAO2kC,GAAKu8D,EAAMv8D,GACzC7zB,EAAcywF,EAAOL,EAAMv8D,GAAK3kC,EAAO2kC,GAC3ChvC,KAAKosG,OAAO/vG,KAAK,CAAC2yC,EAAG/zB,EAAOE,EAAMF,IAC7B2wF,IAAMvhG,EAAO2kC,GAAK/zB,EAC1B,C,CAID6xF,aACJjyG,MAAMM,MAAMgY,UAAU,EAAGnT,KAAMA,KAAK+sG,Q,CAIhCA,UACJ/sG,KAAKgtG,YAAYhyG,QAAQmhD,M,CAI7B6wD,YAAYC,GACR,IAAI5iG,EAAcrK,KAAK0lF,QACvB,GAAKr7E,EAAL,CAGA,GAAIA,EAAOnJ,UAAW,OAAOmqG,MAAMsB,WAAWtiG,GAE9C,IAAI6iG,EAAoBltG,KAAKqsG,WAAaY,EAAOjtG,KAAKssG,YAActsG,KAAKmsG,OACzE,KAAIe,EAAY,GAAhB,CACA,GAAIA,GAAaltG,KAAK+rG,UAAW,OAAO/rG,KAAKgoB,WAI7C,IAFA,IAAImlF,EAAgBD,EAAY,EAAIltG,KAAKgsG,MAAMkB,EAAW,EAAG,EAAGltG,KAAK+rG,WAAa,EAC9ER,EAAevrG,KAAKosG,OACf3tG,EAAY,EAAG+G,EAAY+lG,EAAMtvG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAI2uG,EAAc7B,EAAM9sG,GACxB4L,EAAO+iG,EAAK,IAAMA,EAAK,GAAMD,EAAQC,EAAK,EAC7C,CACGptG,KAAK2+C,QAAQ3+C,KAAK2+C,OAAOrlB,KATV,CANN,C,CAmBb+zE,aAASjyF,GACT,IAAIkyF,EAAgBlyF,EAAIpb,KAAK+rG,UAC7B/rG,KAAKssG,YAActxG,QAAQmhD,MAAQn8C,KAAKmsG,OAASmB,C,CAMrDtlF,WACI,GAAKhoB,KAAK0lF,QAAV,CAGA7qF,MAAMM,MAAMoyG,SAASvtG,KAAMA,KAAK4sG,YAOhC,IAJA,IAAIviG,EAAcrK,KAAK0lF,QACnB6lB,EAAavrG,KAAKosG,OAClBoB,EAAmBxtG,KAAKksG,UAEnBztG,EAAY,EAAG+G,EAAY+lG,EAAMtvG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAI2uG,EAAc7B,EAAM9sG,GACxB4L,EAAO+iG,EAAK,IAAMA,EAAK,GAAKA,EAAK,EACpC,CACGptG,KAAK2+C,QAAQ3+C,KAAK2+C,OAAOrlB,MAE7Bt5B,KAAK+jC,SACc,GAAf/jC,KAAKgoF,QAAehoF,KAAK+jC,QAAU/jC,KAAKgoF,QAExChoF,KAAK2K,QAEL6iG,GAAWA,EAAQl0E,OAEnBt5B,KAAKytG,SAvBU,C,CA8BvBC,QAII,IACIC,EAJJ9yG,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK8sG,YAC7BjyG,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK+sG,SAC7BlyG,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK4sG,aAG7Be,EAFmB3yG,QAAQmhD,MAEZn8C,KAAKssG,YAActsG,KAAKmsG,QAC3B,IACRnsG,KAAKqsG,WAAasB,E,CAQ1BC,aAAaC,GACT7tG,KAAKssG,YAAcuB,C,CAOvB72G,gBAAgBqT,GACZ,GAAKA,GAAWA,EAAOoiG,MAAvB,CACA,IAAIqB,EAAgBzC,MAAMqB,SAASriG,EAAOoiG,OAC1C,GAAIqB,EAAQ,CACR,IAAK,IAAIrvG,EAAY,EAAG+G,EAAYsoG,EAAO7xG,OAAQwC,EAAI+G,EAAG/G,IACtDqvG,EAAOrvG,GAAG4tE,SAEdyhC,EAAO7xG,OAAS,CACnB,CAP6B,C,CAclCjF,aAAa+2G,GACTA,EAAMpjG,O,CAIV3T,kBAAkBqT,GACdghG,MAAM2C,SAAS3jG,E,CAMnBM,QACQ3K,KAAK0lF,UACL1lF,KAAKiuG,UACLjuG,KAAKqsE,S,CAObA,SACIrsE,KAAK0tG,QACL7yG,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK4sG,YAC7B5sG,KAAKksG,UAAY,KACjBlsG,KAAK0lF,QAAU,KACf1lF,KAAKgsG,MAAQ,KACbhsG,KAAKosG,OAAS,KACdpsG,KAAKwsG,YAAc,KACvBxsG,KAAKgoF,OAAS,EAENhoF,KAAKusG,YACLvsG,KAAK2+C,OAAS,KACd7iD,KAAKW,QAAQ,QAASuD,M,CAK9BvD,UACIuD,KAAKusG,WAAY,EACjBvsG,KAAKqsE,Q,CAGD4hC,UACJ,IAAIH,EAAgBzC,MAAMqB,SAAS1sG,KAAK0lF,QAAQ+mB,OAChD,GAAIqB,EACA,IAAK,IAAIrvG,EAAY,EAAG+G,EAAYsoG,EAAO7xG,OAAQwC,EAAI+G,EAAG/G,IACtD,GAAIqvG,EAAOrvG,KAAOuB,KAAM,CACpB8tG,EAAOpjG,OAAOjM,EAAG,GACjB,KACH,C,CAQbgvG,UAII,GAHAztG,KAAK0tG,QACL1tG,KAAKqsG,WAAa,EAClBrsG,KAAKssG,YAActxG,QAAQmhD,MACvBn8C,KAAKwsG,YACL3xG,MAAMM,MAAMsP,KAAKzK,KAAKmsG,OAAQnsG,KAAMA,KAAK4sG,WAAY5sG,KAAKwsG,iBAD9D,CAKA,IADA,IAAIjB,EAAevrG,KAAKosG,OACf3tG,EAAY,EAAG+G,EAAY+lG,EAAMtvG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAI2uG,EAAc7B,EAAM9sG,GACxBuB,KAAK0lF,QAAQ0nB,EAAK,IAAMA,EAAK,EAChC,CACDvyG,MAAMM,MAAMsP,KAAKzK,KAAKmsG,OAAQnsG,KAAMA,KAAK8sG,WANxC,C,CAYLoB,SACQluG,KAAKqsG,YAAcrsG,KAAK+rG,YAC5B/rG,KAAKssG,YAActxG,QAAQmhD,MAAQn8C,KAAKqsG,WAAarsG,KAAKmsG,OACtDnsG,KAAKwsG,YACDxsG,KAAKqsG,WAAa,EAClBxxG,MAAMM,MAAMsP,MAAMzK,KAAKqsG,WAAYrsG,KAAMA,KAAK4sG,WAAY5sG,KAAKwsG,aAE/DxsG,KAAK4sG,WAAW5+D,MAAMhuC,KAAWA,KAAKwsG,aAG1CxsG,KAAK8sG,a,CAIL91G,gBAAgBklE,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,EAAIo4D,EAAIn4D,EAAIF,C,EAhWRwnG,MAAQqB,SAAU,G,MCExByB,SAAb5xG,cAIIyD,KAAKmtG,MAAW,IAEhBntG,KAASouG,UAAW,GAYZpuG,KAASquG,WAAY,EACrBruG,KAAUsuG,YAAY,C,CAqB9BrzF,MAAM5Q,EAAgB66D,EAAiBqpC,EAAqBC,EAAyBC,EAAyBvsG,EAAWirG,EAAgB,KACrIntG,KAAK4oG,aAEL5oG,KAAKqK,OAASA,EACdrK,KAAKklE,KAAOA,EACZllE,KAAKuuG,WAAaA,EAClBvuG,KAAKwuG,gBAAkBtpC,EAAOspC,EAAkB,EAChDxuG,KAAKyuG,gBAAkBA,EACvBzuG,KAAKkC,KAAOA,EACZlC,KAAKmtG,MAAQA,EAEbntG,KAAKokD,QAAW/5C,EAAOg2B,OAEvBrgC,KAAKsuG,YAAa,EAClBtuG,KAAKquG,WAAY,EACjBruG,KAAK0uG,cAAgB1uG,KAAK2uG,cAAgB,EAC1C3uG,KAAK4uG,OAAS5uG,KAAKokD,QAAQyqD,OAC3B7uG,KAAK8uG,OAAS9uG,KAAKokD,QAAQ2qD,OAE3Bl0G,MAAMS,MAAMmW,GAAGvG,MAAM2B,SAAU7M,KAAMA,KAAKgvG,gBAC1Cn0G,MAAMS,MAAMmW,GAAGvG,MAAMkC,UAAWpN,KAAMA,KAAKgvG,gBAE3Cn0G,MAAMO,YAAY+X,UAAU,EAAGnT,KAAMA,KAAKm+C,K,CAMtCyqD,aACJ/tG,MAAMO,YAAYuP,MAAM3K,KAAMA,KAAKm+C,MACnCtjD,MAAMO,YAAYuP,MAAM3K,KAAMA,KAAKivG,WAC/BjvG,KAAKkvG,SACLlvG,KAAKkvG,OAAOzyG,UACZuD,KAAKkvG,OAAS,K,CAOtB5pC,OACQtlE,KAAKquG,YACLxzG,MAAMS,MAAMsW,IAAI1G,MAAM2B,SAAU7M,KAAMA,KAAKgvG,gBAC3Cn0G,MAAMS,MAAMsW,IAAI1G,MAAMkC,UAAWpN,KAAMA,KAAKgvG,gBAC5ChvG,KAAKquG,WAAY,EACjBruG,KAAKqK,QAAUrK,KAAKklE,MAAQllE,KAAKmvG,aACjCnvG,KAAK2K,Q,CAOLwzC,OACJ,IAAIh2C,EAAenI,KAAKokD,QAAQgrD,gBAC5BP,EAAiB1mG,EAAMjJ,EACvB6vG,EAAiB5mG,EAAMhJ,EACvButB,EAAkBmiF,EAAS7uG,KAAK4uG,OAChCjiF,EAAkBoiF,EAAS/uG,KAAK8uG,OAEpC,GAAI9uG,KAAKsuG,WAAY,CACjB,KAAI/wG,KAAKglE,IAAI71C,EAAU7xB,MAAMS,MAAM+zG,iBAAiBnpG,aAAe,GAAK3I,KAAKglE,IAAI51C,EAAU9xB,MAAMS,MAAM+zG,iBAAiBjpG,aAAe,GAOhI,OANHpG,KAAKsuG,YAAa,EAClBtuG,KAAKsvG,WAAatvG,KAAKsvG,SAAW,IAClCtvG,KAAKsvG,SAASrzG,OAAS,EACvB+D,KAAKqK,OAAO8G,MAAMjG,MAAMyC,WAAY3N,KAAKkC,KAIhD,MACGlC,KAAKsvG,SAASjzG,KAAKqwB,EAASC,GAEhB,IAAZD,GAA6B,IAAZC,IAErB3sB,KAAK4uG,OAASC,EACd7uG,KAAK8uG,OAASC,EACd/uG,KAAKqK,OAAOnL,GAAKwtB,EAAU1sB,KAAK0uG,cAChC1uG,KAAKqK,OAAOlL,GAAKwtB,EAAU3sB,KAAK2uG,cAEhC3uG,KAAKklE,MAAQllE,KAAKuvG,YAElBvvG,KAAKqK,OAAO8G,MAAMjG,MAAM0C,UAAW5N,KAAKkC,M,CAMpCqtG,YACJ,GAAIvvG,KAAKwuG,iBAAmB,EACxBxuG,KAAKmvG,iBACF,CACH,GAAInvG,KAAKqK,OAAOqtD,GAAK13D,KAAKklE,KAAKhmE,EAC3B,IAAIwtB,EAAkB1sB,KAAKklE,KAAKhmE,EAAIc,KAAKqK,OAAOqtD,QAEhDhrC,EADO1sB,KAAKqK,OAAOqtD,GAAK13D,KAAKklE,KAAKhmE,EAAIc,KAAKklE,KAAK78D,MACtCrI,KAAKqK,OAAOqtD,GAAK13D,KAAKklE,KAAKhmE,EAAIc,KAAKklE,KAAK78D,MAEzC,EAId,GAFArI,KAAK0uG,cAAgBnxG,KAAKuL,IAAI,EAAG,EAAK4jB,EAAU1sB,KAAKwuG,iBAEjDxuG,KAAKqK,OAAOstD,GAAK33D,KAAKklE,KAAK/lE,EAC3B,IAAIwtB,EAAkB3sB,KAAKklE,KAAK/lE,EAAIa,KAAKqK,OAAOlL,OAEhDwtB,EADO3sB,KAAKqK,OAAOstD,GAAK33D,KAAKklE,KAAK/lE,EAAIa,KAAKklE,KAAK58D,OACtCtI,KAAKqK,OAAOstD,GAAK33D,KAAKklE,KAAK/lE,EAAIa,KAAKklE,KAAK58D,OAEzC,EAEdtI,KAAK2uG,cAAgBpxG,KAAKuL,IAAI,EAAG,EAAK6jB,EAAU3sB,KAAKwuG,gBACxD,C,CAMGW,aACJnvG,KAAKqK,OAAOnL,EAAI3B,KAAKwL,IAAIxL,KAAKuL,IAAI9I,KAAKqK,OAAOqtD,GAAI13D,KAAKklE,KAAKhmE,GAAIc,KAAKklE,KAAKhmE,EAAIc,KAAKklE,KAAK78D,OACxFrI,KAAKqK,OAAOlL,EAAI5B,KAAKwL,IAAIxL,KAAKuL,IAAI9I,KAAKqK,OAAOstD,GAAI33D,KAAKklE,KAAK/lE,GAAIa,KAAKklE,KAAK/lE,EAAIa,KAAKklE,KAAK58D,O,CAOpF0mG,eAAenuF,GAMnB,GALAhmB,MAAMS,MAAMsW,IAAI1G,MAAM2B,SAAU7M,KAAMA,KAAKgvG,gBAC3Cn0G,MAAMS,MAAMsW,IAAI1G,MAAMkC,UAAWpN,KAAMA,KAAKgvG,gBAE5Cn0G,MAAMO,YAAYuP,MAAM3K,KAAMA,KAAKm+C,OAE/Bn+C,KAAKsuG,YAAetuG,KAAKqK,OAG7B,GAAIrK,KAAKuuG,WAAY,CAEbvuG,KAAKsvG,SAASrzG,OAAS,GACvB+D,KAAKsvG,SAASjzG,KAAK2D,KAAKokD,QAAQyqD,OAAS7uG,KAAK4uG,OAAQ5uG,KAAKokD,QAAQ2qD,OAAS/uG,KAAK8uG,QAGrF9uG,KAAKwvG,SAAWxvG,KAAKyvG,SAAW,EAIhC,IAHA,IAAIjxG,EAAcwB,KAAKsvG,SAASrzG,OAC5BuJ,EAAYjI,KAAKwL,IAAIvK,EAAK,GAC1ByiB,EAAYjhB,KAAKsvG,SAASrzG,OAASuJ,EAC9B/G,EAAYD,EAAM,EAAGC,EAAIwiB,EAAGxiB,IACjCuB,KAAKyvG,UAAYzvG,KAAKsvG,SAAS7wG,KAC/BuB,KAAKwvG,UAAYxvG,KAAKsvG,SAAS7wG,GAGnCuB,KAAKwvG,SAAWxvG,KAAKwvG,SAAWhqG,EAAI,EACpCxF,KAAKyvG,SAAWzvG,KAAKyvG,SAAWjqG,EAAI,EAEhCjI,KAAKglE,IAAIviE,KAAKwvG,UAAYxvG,KAAKouG,YAAWpuG,KAAKwvG,SAAWxvG,KAAKwvG,SAAW,EAAIxvG,KAAKouG,WAAapuG,KAAKouG,WACrG7wG,KAAKglE,IAAIviE,KAAKyvG,UAAYzvG,KAAKouG,YAAWpuG,KAAKyvG,SAAWzvG,KAAKyvG,SAAW,EAAIzvG,KAAKouG,WAAapuG,KAAKouG,WACzGvzG,MAAMO,YAAY+X,UAAU,EAAGnT,KAAMA,KAAKivG,UAC7C,MAAUjvG,KAAKwuG,gBAAkB,EAC9BxuG,KAAK0vG,eAEL1vG,KAAK2K,O,CAOL+kG,eACJ,IAAI1rG,EAAa2rG,IACb1rG,EAAa0rG,IAOjB,GANI3vG,KAAKqK,OAAOnL,EAAIc,KAAKklE,KAAKhmE,EAAG8E,EAAKhE,KAAKklE,KAAKhmE,EACvCc,KAAKqK,OAAOqtD,GAAK13D,KAAKklE,KAAKhmE,EAAIc,KAAKklE,KAAK78D,QAAOrE,EAAKhE,KAAKklE,KAAKhmE,EAAIc,KAAKklE,KAAK78D,OAElFrI,KAAKqK,OAAOlL,EAAIa,KAAKklE,KAAK/lE,EAAG8E,EAAKjE,KAAKklE,KAAK/lE,EACvCa,KAAKqK,OAAOstD,GAAK33D,KAAKklE,KAAK/lE,EAAIa,KAAKklE,KAAK58D,SAAQrE,EAAKjE,KAAKklE,KAAK/lE,EAAIa,KAAKklE,KAAK58D,QAElFxK,MAAMkG,IAAQlG,MAAMmG,GAMrBjE,KAAK2K,YANqB,CAC1B,IAAIs6B,EAAW,GACVnnC,MAAMkG,KAAKihC,EAAI/lC,EAAI8E,GACnBlG,MAAMmG,KAAKghC,EAAI9lC,EAAI8E,GACxBjE,KAAKkvG,OAAS7D,MAAMM,GAAG3rG,KAAKqK,OAAQ46B,EAAKjlC,KAAKyuG,gBAAiB3D,KAAK8E,QAAS1E,QAAQxjG,OAAO1H,KAAMA,KAAK2K,OAAQ,GAAG,GAAO,EAC5H,C,CAQGskG,YACJjvG,KAAKwvG,UAAYxvG,KAAKmtG,MAAQntG,KAAK0uG,cACnC1uG,KAAKyvG,UAAYzvG,KAAKmtG,MAAQntG,KAAK2uG,cAEnC3uG,KAAKqK,OAAOnL,GAAKc,KAAKwvG,SACtBxvG,KAAKqK,OAAOlL,GAAKa,KAAKyvG,SAEtBzvG,KAAKklE,MAAQllE,KAAKuvG,YAElBvvG,KAAKqK,OAAO8G,MAAMjG,MAAM0C,UAAW5N,KAAKkC,OAEnC3E,KAAKglE,IAAIviE,KAAKwvG,UAAY,GAAKjyG,KAAKglE,IAAIviE,KAAKyvG,UAAY,GAAMzvG,KAAK0uG,cAAgB,IAAO1uG,KAAK2uG,cAAgB,MACjH9zG,MAAMO,YAAYuP,MAAM3K,KAAMA,KAAKivG,WAC/BjvG,KAAKwuG,gBAAkB,EAAGxuG,KAAK0vG,eAC9B1vG,KAAK2K,Q,CAOVA,QACJ,GAAI3K,KAAKqK,OAAQ,CACbrK,KAAK4oG,aACL,IAAIv/F,EAAKrJ,KAAKqK,OACdrK,KAAKqK,OAAS,KACdrK,KAAKokD,QAAU,KACf/6C,EAAG8H,MAAMjG,MAAM2C,SAAU7N,KAAKkC,KACjC,C,QCnQI2tG,YAWT74G,4BAA4By3C,EAAgBqhE,EAAYC,EAAYn8D,EAAY8jD,GAC5E,IAAIsY,EAGAC,EAFJD,EAAaloG,MAAMJ,SAAS3B,MAAM+pG,EAAIC,GACtCC,EAAavhE,EAAOyhE,cAAcF,GAElCC,EAAanoG,MAAMJ,SAAS3B,MAAM6tC,EAAI8jD,GACtCuY,EAAaxhE,EAAOyhE,cAAcD,GAClC,IAAIlzG,EAAiBqL,UAAU44F,YAAY,CAACgP,EAAW9wG,EAAG8wG,EAAW7wG,EAAG8wG,EAAW/wG,EAAG+wG,EAAW9wG,IAGjG,OAFA6wG,EAAWvzG,UACXwzG,EAAWxzG,UACJM,C,CAQX/F,4BAA4By3C,GACxB,OAAOohE,YAAYM,qBAAqB1hE,EAAQ,EAAG,EAAG,EAAG,E,CAU7Dz3C,oCAAoCo5G,EAAyBlxG,EAAWC,GACpE,IAAI7D,EAAQT,MAAMS,MAGd+0G,EAA6BR,YAAYS,qBAAqBF,GAE9DG,EAAuBj1G,EAAM+zG,iBAAiB7nG,QAE9CgpG,EAAqBD,EAAavsG,GAClCysG,EAAoBF,EAAatsG,GAGrCssG,EAAa7rG,QAAQnH,KAAKC,GAAK,IAAMlC,EAAMo1G,cAE3CH,EAAa9rG,MAAMnJ,EAAMq1G,aAAcr1G,EAAMs1G,cAE7C,IACI5sG,EAAYC,EA6CZ4sG,EAAmBC,EA9CnBC,EAA0Bz1G,EAAMo1G,aAAe,KAAO,EAuD1D,OApDIK,GAEA/sG,EAAK7E,EAAIkxG,EAAgBlxG,EACzB8E,EAAK/E,EAAImxG,EAAgBnxG,EAGzB8E,GAAMusG,EAAaxsG,EACnBE,GAAMssG,EAAa3sG,EAGO,IAAtBtI,EAAMo1G,cAGN1sG,EAAKwsG,EAAaxsG,EAClBC,GAAMwsG,IAMNzsG,GAAMwsG,EACNvsG,EAAKwsG,EAAYxsG,KAMrBD,EAAK9E,EAAImxG,EAAgBnxG,EACzB+E,EAAK9E,EAAIkxG,EAAgBlxG,EAGzB6E,GAAMusG,EAAa3sG,EACnBK,GAAMssG,EAAaxsG,EAGnBC,GAAMwsG,EACNvsG,GAAMwsG,GAIVxsG,GAAM3I,EAAsB,eAIxBy1G,GACAF,EAAYN,EAAaxsG,EAAIssG,EAAgB/nG,OAC7CwoG,EAAYP,EAAa3sG,EAAIysG,EAAgBhoG,QAE7CwoG,EAAYN,EAAa3sG,EAAIysG,EAAgBhoG,MAC7CyoG,EAAYP,EAAaxsG,EAAIssG,EAAgB/nG,QAG1C,CAAEpJ,EAAG8E,EAAI7E,EAAG8E,EAAIm2D,OAAQy2C,EAAWx2C,OAAQy2C,E,CAYtD95G,2BAA2Bg6G,EAAUZ,EAAyBlxG,EAAWC,EAAWkJ,EAAeC,GAC1F0oG,EAAIC,yBACLD,EAAIC,wBAAyB,EAC7BD,EAAI73D,MAAM+3D,gBAAkBF,EAAI73D,MAAMg4D,sBAAwB,WAC9DH,EAAI73D,MAAMg7B,SAAW,YAGzB,IAAI7d,EAAiBu5C,YAAYuB,6BAA6BhB,EAAiBlxG,EAAGC,GAGlF6xG,EAAI73D,MAAMmd,UAAY06C,EAAI73D,MAAMk4D,gBAAkB,SAAW/6C,EAAU8D,OAAS,IAAM9D,EAAU+D,OAAS,YAAex/D,MAAMS,MAAkB,aAAI,OACpJ01G,EAAI73D,MAAM9wC,MAAQA,EAAQ,KAC1B2oG,EAAI73D,MAAM7wC,OAASA,EAAS,KAC5B0oG,EAAI73D,MAAMse,KAAOnB,EAAUp3D,EAAI,KAC/B8xG,EAAI73D,MAAMhrB,IAAMmoC,EAAUn3D,EAAI,I,CAUlCnI,mBAAmBgI,GACf,IAAKA,GAASA,EAAM/C,OAAS,EAAG,OAAO,EAEvC,IADA,IAAmByD,EAAuC0M,EAAatI,EAAnErF,EAAY,EAAcD,EAAcQ,EAAM/C,OAC3CwC,EAAID,GAAK,CAIZ,IAFAsF,EAAI9E,EADJU,EAAIjB,GAEJ2N,EAAMpN,EAAMU,GAAGknG,UACNlnG,GAAK,GACNV,EAAMU,GAAGknG,QAAUx6F,GAAKpN,EAAMU,EAAI,GAAKV,EAAMU,GAGrDV,EAAMU,EAAI,GAAKoE,EACfrF,GACH,CACD,OAAO,C,ECyCT,MAAO+9E,eAAewpB,KAwFxBzpG,cACI8V,QAvFJrS,KAAE03D,GAAW,EAEb13D,KAAE23D,GAAW,EAEb33D,KAAMoV,OAAW,EAEjBpV,KAAOqV,QAAW,EAElBrV,KAAQsxG,SAAW,EAEnBtxG,KAAQuxG,SAAW,EAEnBvxG,KAAQ63D,UAAY,EAEpB73D,KAAWwxG,YAAW,EAEtBxxG,KAAO4mG,QAAW,EAElB5mG,KAAWmkD,YAAW,EAEtBnkD,KAAUq4D,WAAkB,KAElBr4D,KAAUyxG,YAAY,EAEtBzxG,KAAA2kG,SAAmB9uD,YAAYmB,aAEjCh3C,KAAQ4V,SAAmB,KAE3B5V,KAAS0xG,UAAW,EAI5B1xG,KAAAk2D,OAAsB2nC,YAAYj2F,MAElC5H,KAAAqvC,YAA0B4tD,WAAWr1F,MAErC5H,KAAW2xG,YAAuB,KAElC3xG,KAASk3D,UAAoB,KAE7Bl3D,KAAY4xG,cAAY,EAQxB5xG,KAAY6xG,cAAY,EAKxB7xG,KAAQ8xG,UAAY,EAQpB9xG,KAAY+xG,cAAY,C,CASxB5uG,QAAQqjG,GAAwB,GAC5Bn0F,MAAMlP,QAAQqjG,GACdxmG,KAAKk2D,QAAUl2D,KAAKk2D,OAAOz5D,UAC3BuD,KAAKqvC,aAAervC,KAAKqvC,YAAY5yC,UACrCuD,KAAK2xG,aAAe3xG,KAAK2xG,YAAYl1G,UACrCuD,KAAKq4D,YAAcr4D,KAAKq4D,WAAW57D,UACnCuD,KAAKk2D,OAAS,KACdl2D,KAAKqvC,YAAc,KACnBrvC,KAAK2xG,YAAc,KACnB3xG,KAAKq4D,WAAa,KAClBr4D,KAAK4V,UAAY5V,KAAK4V,SAASpB,mBAC/BxU,KAAK4V,SAAW,KAChB5V,KAAKk3D,WAAal3D,KAAK4xG,cAAgB5xG,KAAKk3D,UAAU/zD,UACtDnD,KAAKk3D,UAAY,I,CAOjB4xC,YACA,OAAc9oG,KAAK4C,M,CAIvBovG,eACInC,YAAYoC,YAAYjyG,KAAKw3D,YAAcx3D,KAAKktF,S,CAMpDglB,kBAEI,OADKlyG,KAAK2xG,cAAa3xG,KAAK2xG,YAAc9U,YAAYn1F,UAC/C1H,KAAK2xG,W,CAIhBQ,mB,CAOIC,uBAAmBvuG,GACfA,IACA7D,KAAKmkD,aAAetO,YAAYe,OAChC52C,KAAKmyG,mB,CAaTx4C,cACA,OAAO35D,KAAKqvC,YAAYguD,Y,CAI5BgV,YAAYp0G,G,CAIR07D,YAAQ17D,GACJA,IAAU+B,KAAKqvC,YAAYguD,eAC3B,UAAYp/F,GAAW+B,KAAKqvC,YAAY9nB,kBAAkBs0E,aAC1D77F,KAAKqvC,YAAY9nB,OAAS,MAG9BvnB,KAAKkwC,iBAAiBmtD,aAAep/F,EAEjC+B,KAAKy0B,MAAkB,WAAVx2B,IACjB+B,KAAKqyG,YAAYp0G,GACjB+B,KAAKsyG,qBACLtyG,KAAKktF,W,CAMDolB,qBACJ,IAAIC,EAAmBvyG,KAAKqvC,YAAY+tD,yBACxCp9F,KAAKkwC,iBAAiBwpB,mBAAqB64C,EACvCA,GACIvyG,KAAKqvC,YAAY6tD,kBACjBl9F,KAAKqvC,YAAYsqB,QAAU,SAE3B35D,KAAKqvC,YAAYsqB,QAAU35D,KAAKqvC,YAAYguD,aAEhDr9F,KAAKqvC,YAAYwrB,SAAU,EAC3B76D,KAAKmkD,aAAetO,YAAYQ,SAEhCr2C,KAAKqvC,YAAYsqB,QAAU,OAC3B35D,KAAKqvC,YAAYorB,iBACjBz6D,KAAKmkD,cAAgBtO,YAAYQ,QAErCr2C,KAAKqyG,YAAYryG,KAAKqvC,YAAYsqB,Q,CAIlCiB,kBACA,OAAO56D,KAAKqvC,YAAYurB,W,CAGxBA,gBAAY38D,GACZ+B,KAAKkwC,iBAAiB0qB,YAAc38D,EAC/BA,GAAO+B,KAAK66D,S,CAIrBA,UACI76D,KAAKqvC,YAAYwrB,SAAU,EAC3B76D,KAAK2kG,UAAY9uD,YAAYqB,a,CAGjC3H,aACI,OAAOvvC,KAAK2kG,Q,CAIhB6N,MAAMv0G,GACF+B,KAAK03D,GAAKz5D,C,CAIdw0G,MAAMx0G,GACF+B,KAAK23D,GAAK15D,C,CAIViB,QACA,OAAOc,KAAK03D,E,CAGZx4D,MAAEjB,GACF,IAAI+B,KAAKyS,YACLzS,KAAK03D,KAAOz5D,EAAO,CACnB+B,KAAKwyG,MAAMv0G,GAEX+B,KAAK0yG,cAAc78D,YAAYqB,eAC/B,IAAIlI,EAAYhvC,KAAKqvC,YAAYouD,WAC7BzuD,GACAA,EAAEk+C,QAAQr3C,YAAYqB,cAE7B,C,CAID/3C,QACA,OAAOa,KAAK23D,E,CAGZx4D,MAAElB,GACF,IAAI+B,KAAKyS,YACLzS,KAAK23D,KAAO15D,EAAO,CACnB+B,KAAKyyG,MAAMx0G,GAEX+B,KAAK0yG,cAAc78D,YAAYqB,eAC/B,IAAIlI,EAAYhvC,KAAKqvC,YAAYouD,WAC7BzuD,GACAA,EAAEk+C,QAAQr3C,YAAYqB,cAE7B,C,CAQD7uC,YACA,OAAOrI,KAAK2yG,W,CAGZtqG,UAAMpK,GACN+B,KAAK4yG,UAAU30G,E,CAGnB20G,UAAU30G,GACN,IAAI0C,EAAOX,KAAK0xG,UACH,MAATzzG,GACAA,EAAQ,EACR+B,KAAK0xG,YAAa,GAEJ,GAATzzG,EACL+B,KAAK0xG,WAAa,EAElB1xG,KAAK0xG,YAAa,EAClB1xG,KAAKoV,SAAWnX,GAAS0C,GAAQX,KAAK0xG,YACtC1xG,KAAKoV,OAASnX,EACd+B,KAAK6yG,UAAU50G,GACf+B,KAAK8yG,WAAW9yG,KAAKsxG,SAAWrzG,GAC5B+B,KAAKk3D,WAAWl3D,KAAKk3D,UAAU0tC,mBAAkB,GACrD5kG,KAAK+yG,qBACL/yG,KAAKgzG,uB,CAIbL,YACI,OAAK3yG,KAAK8xG,SACN9xG,KAAKumB,QAAgBvmB,KAAKumB,QAAQle,MACjCrI,KAAKk3D,WAAuC,IAA1Bl3D,KAAKw3D,UAAUv7D,OAC/B+D,KAAK4vC,gBAAgBvnC,MAD+B,EAFhB,GAAfrI,KAAKoV,QAAuC,IAAN,EAAjBpV,KAAK0xG,YAAuB1xG,KAAKumB,QAAWvmB,KAAKumB,QAAQle,MAAQrI,KAAKoV,M,CAWvH9M,aACA,OAAOtI,KAAKizG,Y,CAGZ3qG,WAAOrK,GACP+B,KAAKkzG,WAAWj1G,E,CAIpBi1G,WAAWj1G,GACP,IAAI0C,EAAOX,KAAK0xG,UACH,MAATzzG,GACAA,EAAQ,EACR+B,KAAK0xG,YAAa,GAEJ,GAATzzG,EACL+B,KAAK0xG,WAAa,EAElB1xG,KAAK0xG,YAAa,EAClB1xG,KAAKqV,UAAYpX,GAAS0C,GAAQX,KAAK0xG,YACvC1xG,KAAKqV,QAAUpX,EACf+B,KAAKmzG,WAAWl1G,GAChB+B,KAAKozG,WAAWpzG,KAAKuxG,SAAWtzG,GAC5B+B,KAAKk3D,WAAWl3D,KAAKk3D,UAAU0tC,mBAAkB,GACrD5kG,KAAK+yG,qBACL/yG,KAAKgzG,uB,CAGbC,aACI,OAAKjzG,KAAK8xG,SACN9xG,KAAKumB,QAAgBvmB,KAAKumB,QAAQje,OACjCtI,KAAKk3D,WAAuC,IAA1Bl3D,KAAKw3D,UAAUv7D,OAC/B+D,KAAK4vC,gBAAgBtnC,OAD+B,EAFf,GAAhBtI,KAAKqV,SAAwC,IAAN,EAAjBrV,KAAK0xG,YAAuB1xG,KAAKumB,QAAWvmB,KAAKumB,QAAQje,OAAStI,KAAKqV,O,CAMzHkhD,kBACA,OAAsB,GAAfv2D,KAAKoV,QAAuC,IAAN,EAAjBpV,KAAK0xG,U,CAGjCl7C,mBACA,OAAuB,GAAhBx2D,KAAKqV,SAAwC,IAAN,EAAjBrV,KAAK0xG,U,CAItCmB,UAAU50G,G,CAIVk1G,WAAWl1G,G,CAGD+0G,uB,CAMNK,mBACA,OAAOrzG,KAAKqI,MAAQrI,KAAKo6D,M,CAMzBk5C,oBACA,OAAOtzG,KAAKsI,OAAStI,KAAKq6D,M,CAO9Bk5C,cAAcC,GACVxzG,KAAKkyG,kBAAkBnV,WAAayW,C,CAQxC/jE,YACI,OAAOzvC,KAAKkyG,kBAAkBpV,OAAS10F,UAAU44F,YAAYhhG,KAAKyzG,uB,CAQtE7jE,gBACI,OAAI5vC,KAAK2xG,aAAe3xG,KAAK2xG,YAAY5U,WAAmB/8F,KAAK2xG,YAAY5U,WACxE/8F,KAAKk3D,WAAuC,IAA1Bl3D,KAAKw3D,UAAUv7D,QAAiB+D,KAAK4V,SAErD5V,KAAKkyG,kBAAkBpV,OAAS10F,UAAU44F,YAAYhhG,KAAK0zG,kBAAiB,IADxEtrG,UAAUP,KAAK9B,MAAM,EAAG,EAAG/F,KAAKqI,MAAOrI,KAAKsI,O,CAW3DmrG,qBAAqBE,GAAoB,GACrC,IAAIC,EAAa,EAAGC,EAAa,EAC7B7zG,KAAKk2D,SACL09C,EAAK5zG,KAAK0vC,OACVmkE,EAAK7zG,KAAK2vC,OACVgkE,EAAWA,GAAsC,IAAzB3zG,KAAKk2D,OAAOypB,SAChC3/E,KAAKk2D,OAAOkD,aACZw6C,GAAM5zG,KAAKk2D,OAAOkD,WAAWl6D,EAC7B20G,GAAM7zG,KAAKk2D,OAAOkD,WAAWj6D,IAGrC,IAAI41C,EAAe/0C,KAAK0zG,iBAAiBC,GACzC,IAAK5+D,GAASA,EAAM94C,OAAS,EAAG,OAAO84C,EAMvC,GAJoB,GAAhBA,EAAM94C,SACN84C,EAAQ4+D,EAAWl/D,WAAWgtD,UAAU1sD,GAAS3sC,UAAU44F,YAAYjsD,EAAO3sC,UAAUP,MAAMsB,oBAG7FnJ,KAAKs2D,UAEN,OADA54D,MAAMo2G,eAAe/+D,EAAO/0C,KAAK03D,GAAKk8C,EAAI5zG,KAAK23D,GAAKk8C,GAC7C9+D,EAEX,IAAInrC,EAAS9B,MAAMD,KACfrJ,EAAMu2C,EAAM94C,OAChB,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,GAAK,EAC1BmL,EAAO1K,EAAI61C,EAAMt2C,GACjBmL,EAAOzK,EAAI41C,EAAMt2C,EAAI,GACrBuB,KAAK+zG,cAAcnqG,GACnBmrC,EAAMt2C,GAAKmL,EAAO1K,EAClB61C,EAAMt2C,EAAI,GAAKmL,EAAOzK,EAE1B,OAAO41C,C,CAQXi/D,iBAAiBjT,GAAoB,GACjC,OAAK/gG,KAAKk3D,UACHl3D,KAAKk3D,UAAUznB,UAAUsxD,GADJ34F,UAAUP,KAAK9B,MAAM,EAAG,EAAG,EAAG,E,CAU9D2tG,iBAAiBC,GAAoB,GACjC,GAAI3zG,KAAK2xG,aAAe3xG,KAAK2xG,YAAY5U,WAAY,OAAO/8F,KAAK2xG,YAAY5U,WAAW5zF,kBACnFnJ,KAAK2xG,aAAa3xG,KAAKkyG,kBAC5B,IASIn9D,EATAh4C,EAAMiD,KAAK2xG,YAAY3U,MAE3B,GADKjgG,IAAKA,EAAMiD,KAAK2xG,YAAY3U,MAAQ,IACrCh9F,KAAKk2D,OAAOkD,WAAY,CACxBr8D,EAAId,OAAS,EACb,IAAIg4G,EAAiB7rG,UAAUP,KAG/B,OAFAosG,EAAIxrG,SAASzI,KAAKk2D,OAAOkD,YACzBr8D,EAAIV,QAAQ43G,EAAI9qG,mBACTpM,CACV,CAEGiD,KAAKk3D,UACLniB,EAAQ/0C,KAAKk3D,UAAUmnC,kBAEvBthG,EAAId,OAAS,EACb84C,EAAQh4C,GAERiD,KAAK4V,YACLq+F,EAAM7rG,UAAUP,MACZ9B,MAAM,EAAG,EAAG/F,KAAKqI,OAASrI,KAAK4V,SAASvN,MAAOrI,KAAKsI,QAAUtI,KAAK4V,SAAStN,QAChFysC,EAAM14C,QAAQ43G,EAAI9qG,oBAGtB,IAAI+qG,EAAUl0G,KAAKw3D,UACnB,IAAK,IAAI/4D,EAAI,EAAG+G,EAAI0uG,EAAQj4G,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC5C,IAAI2oG,EAAgB8M,EAAQz1G,GAC5B,IAAuB,IAAnB2oG,EAAMvvC,UAAqBuvC,EAAM/3D,YAAYouD,YAAcz9F,KAAM,CACjE,IAAIm0G,EAAQ/M,EAAMqM,qBAAqBE,GACnCQ,IACIp/D,EACAA,EAAM14C,QAAQ83G,GAEdp/D,EAAQo/D,EAEnB,CACJ,CACD,OAAOp/D,C,CAQX7E,iBAEI,OADAlwC,KAAKqvC,cAAgB4tD,WAAWr1F,QAAU5H,KAAKqvC,YAAc4tD,WAAWv1F,UACjE1H,KAAKqvC,W,CAQhBisB,WAEI,OADAt7D,KAAKk2D,SAAW2nC,YAAYj2F,QAAU5H,KAAKk2D,OAAS2nC,YAAYn2F,UACzD1H,KAAKk2D,M,CAQhBk+C,SAASn2G,GACL+B,KAAKk2D,OAASj4D,C,CAIdm8D,aACA,OAAOp6D,KAAKk2D,OAAOkE,M,CAGnBA,WAAOn8D,GACP+B,KAAKq0G,WAAWp2G,E,CAIhBo8D,aACA,OAAOr6D,KAAKk2D,OAAOmE,M,CAGnBA,WAAOp8D,GACP+B,KAAKs0G,WAAWr2G,E,CAGpBo2G,WAAWp2G,GACkB+B,KAAKs7D,WACpBlB,SAAWn8D,IACjB+B,KAAKu0G,WAAWt2G,GAChB+B,KAAK+yG,qBACL/yG,KAAKgzG,uB,CAGbwB,aACI,OAAOx0G,KAAKk2D,OAAOkE,M,CAGvBk6C,WAAWr2G,GACkB+B,KAAKs7D,WACpBjB,SAAWp8D,IACjB+B,KAAKy0G,WAAWx2G,GAChB+B,KAAK+yG,qBACL/yG,KAAKgzG,uB,CAGb0B,aACI,OAAO10G,KAAKk2D,OAAOmE,M,CAKvBk6C,WAAWt2G,GACP+B,KAAKk2D,OAAOkE,OAASn8D,C,CAIzBw2G,WAAWx2G,GACP+B,KAAKk2D,OAAOmE,OAASp8D,C,CAIrB0hF,eACA,OAAO3/E,KAAKk2D,OAAOypB,Q,CAGnBA,aAAS1hF,GACgB+B,KAAKs7D,WACpBqkB,WAAa1hF,IACnB+B,KAAK20G,aAAa12G,GAClB+B,KAAK+yG,qB,CAKb4B,aAAa12G,GACT+B,KAAKk2D,OAAOypB,SAAW1hF,C,CAIvB6/F,YACA,OAAO99F,KAAKk2D,OAAO4nC,K,CAGnBA,UAAM7/F,GACmB+B,KAAKs7D,WACpBwiC,QAAU7/F,IAChB+B,KAAK40G,UAAU32G,GACf+B,KAAK+yG,qB,CAKb6B,UAAU32G,GACN+B,KAAKk2D,OAAO4nC,MAAQ7/F,C,CAIpB8/F,YACA,OAAO/9F,KAAKk2D,OAAO6nC,K,CAGnBA,UAAM9/F,GACmB+B,KAAKs7D,WACpByiC,QAAU9/F,IAChB+B,KAAK60G,UAAU52G,GACf+B,KAAK+yG,qB,CAKb8B,UAAU52G,GACN+B,KAAKk2D,OAAO6nC,MAAQ9/F,C,CAIxB62G,mBACI,OAAOnxG,OAAO+D,Q,CAIRqtG,mBACN/0G,KAAKyxG,YAAa,EAClB,IAAIt4D,EAAqBn5C,KAAKk2D,OAC1B0c,EAAaz5B,EAAMihB,OAAQyY,EAAa15B,EAAMkhB,OAC9C26C,EAAe77D,EAAM2kD,MACrBmX,EAAe97D,EAAM4kD,MACrBmX,EAAc/7D,EAAMwmC,SACpB1+D,EAAYjhB,KAAKq4D,aAAer4D,KAAKq4D,WAAar4D,KAAK80G,oBAC3D,GAAII,GAAc,IAAPtiC,GAAmB,IAAPC,GAAqB,IAATmiC,GAAuB,IAATC,EAAY,CACzDh0F,EAAE9c,aAAc,EAChB,IAAIgxG,EAA6B,mBAAdD,EAAMF,GACrBI,EAA6B,mBAAdF,EAAMD,GACrB/sC,EAAa3qE,KAAKoH,IAAIywG,GACtBC,EAAc93G,KAAKqH,IAAIwwG,GACvBjtC,EAAa5qE,KAAKqH,IAAIuwG,GACtBG,EAAc/3G,KAAKoH,IAAIwwG,GAC3Bl0F,EAAErd,EAAIgvE,EAAK1K,EACXjnD,EAAEpd,EAAI+uE,EAAKyiC,EACXp0F,EAAEnd,GAAK+uE,EAAK1K,EACZlnD,EAAEld,EAAI8uE,EAAKyiC,EACXr0F,EAAEjd,GAAKid,EAAEhd,GAAK,CACjB,MACGgd,EAAE3c,WACFtE,KAAKmkD,cAAgBtO,YAAYM,UAErC,OAAOl1B,C,CAIXs0F,cAAct3G,G,CAQVq4D,gBACA,OAAOt2D,KAAKyxG,WAAazxG,KAAK+0G,mBAAqB/0G,KAAKq4D,U,CAGxD/B,cAAUr4D,GACV+B,KAAKw1G,cAAcv3G,E,CAGvBw3G,gBACI,OAAOz1G,KAAKyxG,WAAazxG,KAAK+0G,mBAAqB/0G,KAAKq4D,U,CAG5Dm9C,cAAcv3G,GACV+B,KAAKyxG,YAAa,EAClB,IAAIxwF,EAAYjhB,KAAKq4D,aAAer4D,KAAKq4D,WAAar4D,KAAK80G,oBAC3D72G,EAAM0J,OAAOsZ,GACbjhB,KAAKu1G,cAAct0F,GAEfhjB,IACA+B,KAAK03D,GAAKz2C,EAAEjd,GACZhE,KAAK23D,GAAK12C,EAAEhd,GACZgd,EAAEjd,GAAKid,EAAEhd,GAAK,GAEdhG,EAAO+B,KAAKmkD,aAAetO,YAAYM,UAEvCn2C,KAAKmkD,cAAgBtO,YAAYM,UAErCn2C,KAAK0yG,e,CAITI,WAAW70G,GACkB+B,KAAKs7D,WACxB5rB,OAASzxC,C,CAInBy3G,aACI,OAAO11G,KAAKk2D,OAAOxmB,M,CAIvB0jE,WAAWn1G,GACkB+B,KAAKs7D,WACxB3rB,OAAS1xC,C,CAInB03G,aACI,OAAO31G,KAAKk2D,OAAOvmB,M,CAInBD,aACA,OAAO1vC,KAAK01G,Y,CAGZhmE,WAAOzxC,GAEP,GADyB+B,KAAKs7D,WACpB5rB,QAAUzxC,EAAO,CACvB+B,KAAK8yG,WAAW70G,GAChB,IAAIi+D,EAAIl8D,KAAKqI,MACJ,GAAL6zD,IAAQl8D,KAAKsxG,SAAWrzG,EAAQi+D,GACpCl8D,KAAKgzG,uBACLhzG,KAAKktF,SACR,C,CAIDv9C,aACA,OAAO3vC,KAAK21G,Y,CAGZhmE,WAAO1xC,GAEP,GADyB+B,KAAKs7D,WACpB3rB,QAAU1xC,EAAO,CACvB+B,KAAKozG,WAAWn1G,GAChB,IAAIi+D,EAAIl8D,KAAKsI,OACJ,GAAL4zD,IAAQl8D,KAAKuxG,SAAWtzG,EAAQi+D,GACpCl8D,KAAKgzG,uBACLhzG,KAAKktF,SACR,C,CAID0oB,cACA,OAAO51G,KAAK61G,a,CAGhBA,cACI,OAAO71G,KAAKsxG,Q,CAGZsE,YAAQ33G,GACR+B,KAAK81G,YAAY73G,E,CAGrB63G,YAAY73G,GACJH,MAAMG,KACNA,EAAQ,MACR+B,KAAKsxG,UAAYrzG,IACjB+B,KAAKsxG,SAAWrzG,EACH,MAATA,IACA+B,KAAK8yG,WAAW70G,EAAQ+B,KAAKqI,OAC7BrI,KAAKgzG,uBACLhzG,KAAKktF,W,CAMb6oB,cACA,OAAO/1G,KAAKg2G,a,CAGhBA,cACI,OAAOh2G,KAAKuxG,Q,CAGZwE,YAAQ93G,GACR+B,KAAKi2G,YAAYh4G,E,CAGrBg4G,YAAYh4G,GACJH,MAAMG,KACNA,EAAQ,MACR+B,KAAKuxG,UAAYtzG,IACjB+B,KAAKuxG,SAAWtzG,EACH,MAATA,IACA+B,KAAKozG,WAAWn1G,EAAQ+B,KAAKsI,QAC7BtI,KAAKgzG,uBACLhzG,KAAKktF,W,CAMjBgpB,UAAUj4G,GACF+B,KAAKk2D,OAAO9qB,QAAUntC,IACG+B,KAAKs7D,WACxBlwB,MAAQntC,EACA,IAAVA,EAAa+B,KAAKmkD,aAAetO,YAAYxK,MAC5CrrC,KAAKmkD,cAAgBtO,YAAYxK,MACtCrrC,KAAK0yG,gB,CAKbyD,YACI,OAAOn2G,KAAKk2D,OAAO9qB,K,CAInBA,YACA,OAAOprC,KAAKm2G,W,CAGZ/qE,UAAMntC,GACNA,EAAQA,EAAQ,EAAI,EAAKA,EAAQ,EAAI,EAAIA,EACzC+B,KAAKk2G,UAAUj4G,E,CAIfm4G,cACA,OAAOp2G,KAAKq2G,a,CAGZD,YAAQn4G,GACR+B,KAAKs2G,YAAYr4G,E,CAGrBo4G,cACI,OAAOr2G,KAAK63D,Q,CAGhBy+C,YAAYr4G,GACJ+B,KAAK63D,WAAa55D,IAClB+B,KAAK63D,SAAW55D,EAChB+B,KAAK0yG,cAAc78D,YAAYsB,a,CAKnC2jB,gBACA,OAAO96D,KAAKk2D,OAAO4E,S,CAGnBA,cAAU78D,GACN+B,KAAKs7D,WAAWR,WAAa78D,IAC7B+B,KAAKs7D,WAAWR,UAAY78D,EACxBA,GAAkB,eAATA,EACT+B,KAAKmkD,aAAetO,YAAYO,MAEhCp2C,KAAKmkD,cAAgBtO,YAAYO,MACrCp2C,KAAK0yG,gB,CAKTh2B,eAKA,OAJK18E,KAAKk3D,YACNl3D,KAAK08E,SAAW,IAAIwnB,SACpBlkG,KAAK4xG,cAAe,GAEjB5xG,KAAKk3D,S,CAGZwlB,aAASz+E,GACT+B,KAAKu2G,YAAYt4G,GAAO,E,CAG5Bs4G,YAAYt4G,EAAiBu4G,GACrBx2G,KAAKk3D,YACLl3D,KAAKk3D,UAAUiqC,IAAM,KACjBnhG,KAAK4xG,cACL5xG,KAAKk3D,UAAU/zD,WAEvBnD,KAAK4xG,aAAe4E,EACpBx2G,KAAKk3D,UAAYj5D,EACbA,GACA+B,KAAKmkD,aAAetO,YAAYa,SAChCz4C,EAAMkjG,IAAMnhG,MAEZA,KAAKmkD,cAAgBtO,YAAYa,SAErC12C,KAAKktF,S,CASL9zB,iBACA,OAAOp5D,KAAKk2D,OAAOkD,U,CAGnBA,eAAWn7D,GACuB,MAA9B+B,KAAKs7D,WAAWlC,YAA+B,MAATn7D,IAG1C+B,KAAKs7D,WAAWlC,WAAan7D,EAEzBA,EACA+B,KAAKmkD,aAAetO,YAAYU,KAEhCv2C,KAAKmkD,cAAgBtO,YAAYU,KAErCv2C,KAAKktF,U,CAWT1vE,IAAIte,EAAWC,EAAWs3G,GAAqB,GAC3C,GAAIz2G,KAAK03D,KAAOx4D,GAAKc,KAAK23D,KAAOx4D,EAAG,CAChC,GAAIa,KAAKyS,WAAY,OAAOzS,KAC5B,GAAIy2G,EAAW,CACXz2G,KAAKwyG,MAAMtzG,GACXc,KAAKyyG,MAAMtzG,GACXa,KAAK0yG,cAAc78D,YAAYqB,eAC/B,IAAIlI,EAAYhvC,KAAKqvC,YAAYouD,WAC7BzuD,GACAA,EAAEk+C,QAAQr3C,YAAYqB,cAE7B,MACGl3C,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,CAEhB,CACD,OAAOa,I,CAUX02G,MAAMx3G,EAAWC,GAGb,OAFAa,KAAK0vC,OAASxwC,EACdc,KAAK2vC,OAASxwC,EACPa,I,CAUX+S,KAAK1K,EAAeC,GAGhB,OAFAtI,KAAKqI,MAAQA,EACbrI,KAAKsI,OAASA,EACPtI,I,CAWXyE,MAAM21D,EAAgBC,EAAgBo8C,GAClC,GAAIz2G,KAAKyS,WAAY,OAAOzS,KAC5B,IAAIm5C,EAAqBn5C,KAAKs7D,WAY9B,OAXIniB,EAAMihB,QAAUA,GAAUjhB,EAAMkhB,QAAUA,IACtCo8C,GACAz2G,KAAKu0G,WAAWn6C,GAChBp6D,KAAKy0G,WAAWp6C,GAChBr6D,KAAK+yG,qBACL/yG,KAAKgzG,yBAELhzG,KAAKo6D,OAASA,EACdp6D,KAAKq6D,OAASA,IAGfr6D,I,CAUXgF,KAAK84F,EAAeC,GAGhB,OAFA/9F,KAAK89F,MAAQA,EACb99F,KAAK+9F,MAAQA,EACN/9F,I,CASX0wC,OAAOjW,EAAcv7B,EAAWC,GAC5B+4D,aAAac,QAAQh5D,KAAKmkD,aAAarV,KAAK9uC,KAAMy6B,EAAKv7B,EAAIc,KAAK03D,GAAIv4D,EAAIa,KAAK23D,IAC7E33D,KAAK2kG,SAAW,C,CAuBpBgS,aAAa7jC,EAAqB8jC,EAAsBlqF,EAAiBC,GAErE,OAAO6vD,OAAOm6B,aAAa32G,KAAMA,KAAKmkD,YAAa2uB,EAAa8jC,EAAclqF,EAASC,E,CAU3FkqF,cAAc/jC,EAAqB8jC,EAAsBlqF,EAAiBC,EAAiBqB,EAA6B,MAEpH,OADUwuD,OAAOq6B,cAAc72G,KAAMA,KAAKmkD,YAAa2uB,EAAa8jC,EAAclqF,EAASC,EAASqB,E,CAUxG8oF,gBAAgB3/B,EAAcC,EAAcr/C,GACxC,KAAM,e,CAQV/gC,oBAAoBy3C,EAAgB0V,EAAqB2uB,EAAqB8jC,EAAsBlqF,EAAiBC,GACjHD,GAAW+hB,EAAOvvC,EAClBytB,GAAW8hB,EAAOtvC,EAClButB,GAAW,EACXC,GAAW,EACXmmD,GAAe,EACf8jC,GAAgB,EAChB,IAAIn8E,EAAe,IAAI1/B,QACvB0/B,EAAI1nB,KAAK+/D,EAAa8jC,GACtBn8E,EAAIC,UAAW,EACfD,EAAIO,SAAS/f,QACbwf,EAAIO,SAASrwB,MAAM,EAAG,EAAG,EAAG,GAC5ButD,aAAac,QAAQ7U,GAAarV,KAAKL,EAAQhU,EAAK/N,EAASC,GAC7D8N,EAAIQ,QACJR,EAAIO,SAAS7f,MACbsf,EAAIO,SAAS9N,UACb,IAAIgO,EAAiBT,EAAIO,SAAS7N,QAAQ,EAAG,EAAG2lD,EAAa8jC,GAC7Dn8E,EAAIt3B,UASJ,IARA,IAAI4zG,EAAe,IAAIC,UAAUlkC,EAAa8jC,GAE1CK,EAAgC,EAAdnkC,EAElBr5C,EAAkBs9E,EAAQ70G,KAC1B/C,EAAYy3G,EAAe,EAC3BhlG,EAAczS,EAAI83G,EAClBC,EAAiB,EACd/3G,GAAK,EAAGA,IACXs6B,EAAIhf,IAAIygB,EAAGxgB,SAASw8F,EAAQA,EAASD,GAAUrlG,GAC/CA,GAAOqlG,EACPC,GAAUD,EAId,IAAIp9C,EAAmB,IAAIgiC,YAAW,GAItC,OAHAhiC,EAAK9mD,KAAK+/D,EAAa8jC,GAC0C/8C,EAAKua,WAAW,MAC3E+iC,aAAaJ,EAAS,EAAG,GACxBl9C,C,CAQX7iE,qBAAqBy3C,EAAgB0V,EAAqB2uB,EAAqB8jC,EAAsBlqF,EAAiBC,EAAiBqB,EAA6B,MAC3JwuD,OAAO46B,gBACR56B,OAAO46B,cAAgB,IAAIr8G,SAE/B2xB,GAAW+hB,EAAOvvC,EAClBytB,GAAW8hB,EAAOtvC,EAClButB,GAAW,EACXC,GAAW,EACXmmD,GAAe,EACf8jC,GAAgB,EAChB,IAAIn8E,EAAMzM,EAAKwuD,OAAO46B,cAAgB,IAAIr8G,QAQ1C,IAAIs8G,EACJ,GARA58E,EAAI9vB,QACJ8vB,EAAI1nB,KAAK+/D,EAAa8jC,GAClB5oF,EACAyM,EAAIO,SAAWhN,EAEfyM,EAAIC,UAAW,EAGfD,EAAIO,SAAU,CACdP,EAAIO,SAAS/f,QACb,IAAIpd,EAAQ4vB,gBAAgBJ,YAC5BoN,EAAIO,SAASrwB,MAAM9M,EAAMwsB,EAAGxsB,EAAMysB,EAAGzsB,EAAMgG,EAAGhG,EAAM+F,GACpD62B,EAAI88B,mBAAoB,EACxBW,aAAac,QAAQ7U,GAAarV,KAAKL,EAAQhU,EAAK/N,EAASC,GAC7D8N,EAAI88B,mBAAoB,EACxB98B,EAAIQ,QACJR,EAAIO,SAAS7f,MACbsf,EAAIO,SAAS9N,UACRc,IACDqpF,EAAQ58E,EAAIO,UAChBP,EAAIO,SAAW,IAClB,CACD,IAAKhN,EAAI,CACL,IAAIspF,EAAgB,IAAI//E,QAAsBkD,EAAIO,SAAmCP,EAAIO,SAAqBq8E,EAAO9/E,QAAQqE,QAE7H,OADAnB,EAAIt3B,SAAQ,GACLm0G,CACV,CAED,OADA7oE,EAAOk2D,SAAW,EACX32E,C,CAUXmrC,aAAa3xC,EAAkBtoB,EAAWC,GAEtCa,KAAK2kG,SAAW9uD,YAAYsB,W,CAOhCwjB,gB,CAKI3tB,cACA,OAAOhtC,KAAKqvC,YAAYrC,O,CAGxBA,YAAQ/uC,GACRA,GAA0B,IAAjBA,EAAMhC,SAAiBgC,EAAQ,MACxC+B,KAAKkwC,iBAAiBlD,QAAU/uC,EAAQA,EAAMoc,QAAU,KACpDpc,EACA+B,KAAKmkD,aAAetO,YAAYS,QAEhCt2C,KAAKmkD,cAAgBtO,YAAYS,QAEjCr4C,GAASA,EAAMhC,OAAS,GACnB+D,KAAK62D,QAAQz9D,UAAUK,UAAUuG,KAAKqmG,UAAUjtG,UAAUK,SACzC,GAAhBwE,EAAMhC,QAAgBgC,EAAM,aAAcw0C,cAC5CzyC,KAAKkwC,iBAAiBitD,iBAAkB,EACxCn9F,KAAKsyG,uBAGLtyG,KAAKqvC,YAAY8tD,kBACjBn9F,KAAKqvC,YAAY8tD,iBAAkB,EACnCn9F,KAAKsyG,sBAGbtyG,KAAKkwC,iBAAiBwtD,cAAgB19F,KAAKwvC,oBAC3CxvC,KAAKktF,S,CAQT19C,oBACI,IAAI/wC,EAAWD,EACf,GAAIwB,KAAKgtC,QACL,IAAKvuC,EAAI,EAAGA,EAAIuB,KAAKgtC,QAAQ/wC,OAAQwC,IACjC,GAAIuB,KAAKgtC,QAAQvuC,GAAG8M,MAAQ8iC,OAAOE,KAC/B,OAAO,EAInB,IAAK9vC,EAAI,EAAGD,EAAMwB,KAAKw3D,UAAUv7D,OAAQwC,EAAID,EAAKC,IAC9C,GAAauB,KAAKw3D,UAAU/4D,GAAI+wC,oBAC5B,OAAO,EAGf,OAAO,C,CAUX0gE,cAAc/nG,EAAcovG,GAA0B,EAAOC,EAA4B,OAE9D,IAAnBD,IACApvG,EAAQ,IAAIL,MAAMK,EAAMjJ,EAAGiJ,EAAMhJ,IAErC,IAAI48C,EAAc/7C,KAElB,IADAw3G,EAAaA,GAAc38G,MAAMS,MAC1BygD,IAAQA,EAAItpC,YACXspC,GAAOy7D,GACXrvG,EAAQ4zC,EAAIg4D,cAAc5rG,GAC1B4zC,EAAeA,EAAI1b,OAGvB,OAAOl4B,C,CAUXsvG,cAActvG,EAAcovG,GAA0B,EAAOC,EAA4B,MAEjFD,IACApvG,EAAQ,IAAIL,MAAMK,EAAMjJ,EAAGiJ,EAAMhJ,IAErC,IAAI48C,EAAc/7C,KACdumE,EAAc,GAElB,IADAixC,EAAaA,GAAc38G,MAAMS,MAC1BygD,IAAQA,EAAItpC,YACXspC,GAAOy7D,GACXjxC,EAAKlqE,KAAK0/C,GACVA,EAAeA,EAAI1b,OAGvB,IADA,IAAI5hC,EAAY8nE,EAAKtqE,OAAS,EACvBwC,GAAK,GAER0J,GADA4zC,EAAMwqB,EAAK9nE,IACCi5G,gBAAgBvvG,GAC5B1J,IAEJ,OAAO0J,C,CAQX4rG,cAAc5rG,GACV,IAAKA,EAAO,OAAOA,EACnBA,EAAMjJ,GAAKc,KAAK0vC,OAChBvnC,EAAMhJ,GAAKa,KAAK2vC,OACZ3vC,KAAKs2D,WACLt2D,KAAKq4D,WAAWryD,eAAemC,GAEnCA,EAAMjJ,GAAKc,KAAK03D,GAChBvvD,EAAMhJ,GAAKa,KAAK23D,GAChB,IAAIggD,EAAoB33G,KAAKk2D,OAAOkD,WAKpC,OAJIu+C,IACAxvG,EAAMjJ,GAAKy4G,EAAOz4G,EAClBiJ,EAAMhJ,GAAKw4G,EAAOx4G,GAEfgJ,C,CAQXuvG,gBAAgBvvG,GACZ,IAAKA,EAAO,OAAOA,EACnBA,EAAMjJ,GAAKc,KAAK03D,GAChBvvD,EAAMhJ,GAAKa,KAAK23D,GAChB,IAAIggD,EAAoB33G,KAAKk2D,OAAOkD,WAWpC,OAVIu+C,IACAxvG,EAAMjJ,GAAKy4G,EAAOz4G,EAClBiJ,EAAMhJ,GAAKw4G,EAAOx4G,GAElBa,KAAKs2D,WAELt2D,KAAKq4D,WAAWhzD,qBAAqB8C,GAEzCA,EAAMjJ,GAAKc,KAAK0vC,OAChBvnC,EAAMhJ,GAAKa,KAAK2vC,OACTxnC,C,CAGD4I,uBAAuBxF,GAC7B8G,MAAMtB,uBAAuBxF,GAGJ,IAArBvL,KAAKwxG,aAAqBtmG,MAAM0sG,aAAarsG,KAC7CvL,KAAK63G,cAAe,EACpB73G,KAAKwB,QAAQpI,UAAUO,WAAW,GAC9BqG,KAAKokD,SACLpkD,KAAK83G,a,CAMPA,WAAW18F,GACjB,GAAyB,IAArBpb,KAAKwxG,YAAmB,CACxB,IAAIz1D,EAAc/7C,KAElB,IADA+7C,EAAeA,EAAI1b,OACZ0b,GAA2B,IAApBA,EAAIy1D,cACVz1D,EAAI8a,QAAQz9D,UAAUO,YAC1BoiD,EAAI87D,cAAe,EACnB97D,EAAIv6C,QAAQpI,UAAUO,WAAW,GACjCoiD,EAAeA,EAAI1b,MAE1B,C,CAMK0mE,WAAW9oG,GACjBoU,MAAM00F,WAAW9oG,GACbA,GAAS+B,KAAK62D,QAAQz9D,UAAUO,YAChCqG,KAAK83G,Y,CAWbzS,UAAUlxF,EAAa6T,EAAoB,MACvC,GAAK7T,EAIE,CACH,IAAI4jB,EAAMl9B,MAAMK,OAAOoqG,OAAOnxF,GAC1B4jB,GACA/3B,KAAKumB,QAAUwR,EACf/3B,KAAKktF,QAAQr3C,YAAYsB,aACzBnvB,GAAYA,EAASsR,QAGjBt5B,KAAK+3G,eACL5jG,EAAMkpB,IAAIE,UAAUppB,EAAKnU,KAAK+3G,eAClCl9G,MAAMK,OAAO+sB,KAAK9T,GAAKilB,MAAMrB,IACzB/3B,KAAKumB,QAAUwR,EACf/3B,KAAKktF,QAAQr3C,YAAYsB,aACzBnvB,GAAYA,EAASsR,KAAK,IAGrC,MAnBGt5B,KAAKumB,QAAU,KACfvmB,KAAKktF,QAAQr3C,YAAYsB,aACzBnvB,GAAYA,EAASsR,MAmBzB,OAAOt5B,I,CAQXhJ,iBAAiBmd,GACb,OAAO,IAAIqoE,QAAS6oB,UAAUlxF,E,CAIlC+4E,QAAQ3hF,EAAesqC,YAAYqB,eACzBl3C,KAAK2kG,SAAWp5F,IAClBvL,KAAK2kG,UAAYp5F,EACjBvL,KAAK0yG,cAAcnnG,IAEnBvL,KAAKqvC,aAAervC,KAAKqvC,YAAYouD,YACrCz9F,KAAKqvC,YAAYouD,WAAWvQ,QAAQ3hF,E,CAU5CyrD,eACI,OAAQh3D,KAAK2kG,SAAW9uD,YAAYqB,eAAkBl3C,KAAKqvC,YAAYqqB,oBAAsB15D,KAAKqvC,YAAYwrB,O,CAMxGisC,cAAcM,EAAc,MAClC/0F,MAAMy0F,cAAcM,GAEhBpnG,KAAKw3D,UAAUv7D,OAAQ+D,KAAKmkD,aAAetO,YAAYkB,OACtD/2C,KAAKmkD,cAAgBtO,YAAYkB,OAClCqwD,GAASpnG,KAAK62D,QAAQz9D,UAAUM,aAAamB,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAKgyG,cACxFhyG,KAAKktF,QAAQr3C,YAAYsB,Y,CAI7Bu7D,cAAcnnG,EAAesqC,YAAYqB,eACrC,IAAIlI,EAAqBhvC,KAAKokD,SAC1BpV,GAAOA,EAAE21D,SAAWp5F,IACpByjC,EAAE21D,UAAYp5F,EACdyjC,EAAE0jE,cAAcnnG,G,CAKpBjQ,YACA,OAAOT,MAAMS,K,CAObg+D,cACA,OAAOt5D,KAAKk2D,OAAOoD,O,CAGnBA,YAAQr7D,GACR+B,KAAKs7D,WAAWhC,QAAUr7D,C,CAI9B+5G,SAAS/5G,G,CAQLw2B,WACA,OAAOz0B,KAAKqvC,YAAY5a,I,CAGxBA,SAAKx2B,GACDA,GAAS+B,KAAKy0B,MAAQx2B,GAASA,EAAMoxC,YAAYouD,YAAcz9F,OAG/DA,KAAKy0B,OACLz0B,KAAKy0B,KAAKyb,iBAAiButD,WAAa,MAE5Cz9F,KAAKkwC,iBAAiBzb,KAAOx2B,EAC7B+B,KAAKg4G,SAAS/5G,GACd+B,KAAKsyG,qBAEDr0G,GACAA,EAAMiyC,iBAAiButD,WAAaz9F,KACpCA,KAAKmkD,aAAetO,YAAY/gB,MAGhC90B,KAAKmkD,cAAgBtO,YAAY/gB,KACrC90B,KAAKktF,U,CAOL2qB,mBACA,OAAO73G,KAAKwxG,YAAc,C,CAG1BqG,iBAAa55G,GACb+B,KAAKwxG,YAAcvzG,EAAQ,EAAI,C,CAYnCg6G,UAAU/yC,EAAkB,KAAMqpC,GAAsB,EAAOC,EAA0B,EAAGC,EAA0B,IAAKvsG,EAAY,KAAMirG,EAAgB,KACzJntG,KAAKk2D,OAAO8nC,WAAah+F,KAAKs7D,WAAW0iC,SAAW,IAAImQ,UACxDnuG,KAAKk2D,OAAO8nC,SAAS/iF,MAAMjb,KAAMklE,EAAMqpC,EAAYC,EAAiBC,EAAiBvsG,EAAMirG,E,CAI/F+K,WACIl4G,KAAKk2D,OAAO8nC,UAAYh+F,KAAKk2D,OAAO8nC,SAAS14B,M,CAOjD8iC,YAAYnqG,GACHA,GACG+B,KAAKqvC,cACLrvC,KAAKqvC,YAAYorB,iBACjBz6D,KAAKqvC,YAAYkuD,qBACbv9F,KAAKqvC,YAAYquD,gBACjB19F,KAAKqvC,YAAYquD,eAAgB,IAI7CrrF,MAAM+1F,YAAYnqG,E,CAStBk6G,aAAaj5G,EAAWC,GACpB,IAAIgJ,EAAenI,KAAKy3G,cAAc3vG,MAAMD,KAAK9B,MAAM7G,EAAGC,IAI1D,OAHAD,EAAIiJ,EAAMjJ,EACVC,EAAIgJ,EAAMhJ,GACWa,KAAKk2D,OAAOoD,QAAUt5D,KAAKk2D,OAAOoD,QAAWt5D,KAAKu2D,aAAev2D,KAAKw2D,aAAgBpuD,UAAUP,KAAK9B,MAAM,EAAG,EAAG/F,KAAKoV,OAAQpV,KAAKqV,SAAWrV,KAAK4vC,iBAC5JlnC,SAASxJ,EAAGC,E,CAI5BiwG,gBACI,OAAOpvG,KAAKy3G,cAAc3vG,MAAMD,KAAK9B,MAAMlL,MAAMS,MAAMuzG,OAAQh0G,MAAMS,MAAMyzG,Q,CAM3EqJ,mBAGA,IAFA,IAAI3zG,EAAgB,EAChBs3C,EAAc/7C,KACX+7C,GACCA,IAAQlhD,MAAMS,OAClBmJ,GAASs3C,EAAIqe,OACbre,EAAeA,EAAI1b,OAEvB,OAAO57B,C,CAMP4zG,qBAGA,IAFA,IAAI16G,EAAgB,EAChBo+C,EAAc/7C,KACX+7C,GACCA,IAAQlhD,MAAMS,OAClBqC,GAASo+C,EAAI4jC,SACb5jC,EAAeA,EAAI1b,OAEvB,OAAO1iC,C,CAMP26G,mBAGA,IAFA,IAAI7zG,EAAgB,EAChBs3C,EAAc/7C,KACX+7C,GACCA,IAAQlhD,MAAMS,OAClBmJ,GAASs3C,EAAIse,OACbte,EAAeA,EAAI1b,OAEvB,OAAO57B,C,CAMPoqG,aACA,OAAO7uG,KAAKovG,gBAAgBlwG,C,CAM5B6vG,aACA,OAAO/uG,KAAKovG,gBAAgBjwG,C,CAI5B+mE,aACA,OAAOlmE,KAAK4mG,O,CAGZ1gC,WAAOjoE,GACH+B,KAAK4mG,SAAW3oG,IAChB+B,KAAK4mG,QAAU3oG,EACX+B,KAAKokD,UACLnmD,GAAS+B,KAAKokD,QAAQ5iD,QAAQpI,UAAUM,YAAY,GACpDmB,MAAMO,YAAYu3F,UAAU3yF,KAAKokD,QAASpkD,KAAKgyG,e,CAUvDzrF,cACA,OAAOvmB,KAAK4V,Q,CAIhB2iG,YAAYt6G,G,CAIRsoB,YAAQtoB,GACc,iBAAlB,EACA+B,KAAKqlG,UAA0BpnG,GACxB+B,KAAK4V,UAAY3X,IACxB+B,KAAK4V,UAAY5V,KAAK4V,SAASpB,mBAC/BxU,KAAK4V,SAAW3X,EAChBA,GAASA,EAAMsW,gBACfvU,KAAKu4G,YAAYt6G,GACjB+B,KAAK6yG,UAAU7yG,KAAKqI,OACpBrI,KAAKmzG,WAAWnzG,KAAKsI,QACjBrK,EAAO+B,KAAKmkD,aAAetO,YAAYY,QACtCz2C,KAAKmkD,cAAgBtO,YAAYY,QACtCz2C,KAAKktF,U,CAYT5+D,eACA,OAAOtuB,KAAKk2D,OAAO5nC,Q,CAGnBA,aAASrwB,GACT,GAAsB,iBAAlB,EAA4B,CAC5B,IAAIu6G,EAAev6G,EAAOM,MAAM,KAC5Bi6G,EAAOv8G,OAAS,IAChBgC,EAAQ,IAAImK,UAAU1J,WAAW85G,EAAO,IAAK95G,WAAW85G,EAAO,IAAK95G,WAAW85G,EAAO,IAAK95G,WAAW85G,EAAO,KAEpH,CACDx4G,KAAKs7D,WAAWhtC,SAAWrwB,C,CAI/B80G,qBACI/yG,KAAKyxG,YAAa,EAClBzxG,KAAKmkD,aAAetO,YAAYM,UAChCn2C,KAAK0yG,cAAc78D,YAAYqB,c,CAG/BmgB,qBAAiBp5D,GACjB+B,KAAKwB,QAAQpI,UAAUS,kBAAmBoE,E,CAG1Co5D,uBACA,OAAOr3D,KAAK62D,QAAQz9D,UAAUS,kB,CAGlCs6C,qBACI9hC,MAAM8hC,qBAEF54C,QAAQE,YACEuE,KAAMy4G,SACZz4G,KAAK08E,SAASwkB,KAAalhG,KAAMy4G,cACpBz4G,KAAMy4G,QAGbz4G,KAAM04G,WACZ14G,KAAKgtC,QAAgBhtC,KAAM04G,gBACd14G,KAAM04G,U,EC32D7B,MAAOC,sBAAsBn8B,OAkC/BjgF,cACI8V,QAxBJrS,KAAQ44G,SAAW,EAET54G,KAAA64G,UAAoBphH,OAAOK,kBAU3BkI,KAAU84G,YAAY,EAEtB94G,KAAiB+4G,mBAAY,EAWnC/4G,KAAKqmG,UAAUjtG,UAAUK,Q,CAU7Bu/G,KAAK/9F,EAAa,EAAGkjC,GAAgB,EAAMppC,EAAe,IACtD/U,KAAKi5G,YAAa,EAClBj5G,KAAKk5G,YAAcnkG,EACnB/U,KAAKuK,MAA2B,iBAAlB,EAA8BvK,KAAKm5G,iBAAyBl+F,GAASA,EACnFjb,KAAKm+C,KAAOA,EACZn+C,KAAK84G,WAAa94G,KAAK44G,WAAaD,cAAcS,aAChC,GAAdp5G,KAAKuK,OAAcvK,KAAK84G,aACxB94G,KAAKuK,MAAQvK,KAAK8K,MAAQ,GAE1B9K,KAAKq5G,SAAW,GAAGr5G,KAAKsoG,UAAUtoG,KAAKq5G,SAAUr5G,KAAMA,KAAKs5G,WAAY,MAAM,GAAM,E,CAOxFD,eACA,OAAOr5G,KAAK64G,S,CAGZQ,aAASp7G,GACL+B,KAAK64G,WAAa56G,IAClB+B,KAAK+4G,mBAAoB,EACzB/4G,KAAK64G,UAAY56G,EACb+B,KAAKi5G,YAAch7G,EAAQ,GAC3B+B,KAAKsoG,UAAUrqG,EAAO+B,KAAMA,KAAKs5G,WAAY,MAAM,GAAM,G,CAM3DH,iBAAiBI,GACvB,IAAK,IAAI96G,EAAY,EAAGA,EAAIuB,KAAK+jC,OAAQtlC,IAAK,CAC1C,IAAIvC,EAAY8D,KAAKw5G,QAAQ/6G,GAC7B,GAAIvC,GAAiBA,EAAOgC,QAAQq7G,IAAU,EAAG,OAAO96G,CAC3D,CACD,OAAO,C,CAID66G,aACN,GAAKt5G,KAAKy5G,eAAgBz5G,KAAKy5G,aAAahnG,WAA5C,CAIA,GAAIzS,KAAK84G,YAEL,GADA94G,KAAKgjG,SACDhjG,KAAKgjG,OAAS,EAAG,CACjB,IAAIhjG,KAAKm+C,KAYL,OAHAn+C,KAAKgjG,OAAS,EACdhjG,KAAKslE,YACLtlE,KAAKmR,MAAMjG,MAAMuD,UAVbzO,KAAK44G,UAAYD,cAAce,eAC/B15G,KAAKgjG,OAAShjG,KAAK+jC,OAAS,EAAI,EAAI,EACpC/jC,KAAK84G,YAAa,GAElB94G,KAAKgjG,OAAShjG,KAAK+jC,OAAS,EAEhC/jC,KAAKmR,MAAMjG,MAAMuD,SAOxB,OAGD,GADAzO,KAAKgjG,SACDhjG,KAAKgjG,QAAUhjG,KAAK+jC,OAAQ,CAC5B,IAAI/jC,KAAKm+C,KAYL,OAHAn+C,KAAKgjG,SACLhjG,KAAKslE,YACLtlE,KAAKmR,MAAMjG,MAAMuD,UAVbzO,KAAK44G,UAAYD,cAAce,eAC/B15G,KAAKgjG,OAAShjG,KAAK+jC,OAAS,GAAK,EAAI/jC,KAAK+jC,OAAS,EAAI,EACvD/jC,KAAK84G,YAAa,GAElB94G,KAAKgjG,OAAS,EAElBhjG,KAAKmR,MAAMjG,MAAMuD,SAOxB,CAELzO,KAAKuK,MAAQvK,KAAKgjG,MAtCjB,MAFGhjG,KAAK4oG,WAAW5oG,KAAMA,KAAKs5G,W,CA4CnCK,gBAAgBp4G,GACRvB,KAAKy5G,eACLz5G,KAAKy5G,aAAa7nG,IAAI1G,MAAMzR,QAASuG,KAAMA,KAAK45G,aAChD55G,KAAKy5G,aAAa7nG,IAAI1G,MAAMqD,UAAWvO,KAAMA,KAAK45G,cAEtD55G,KAAKy5G,aAAel4G,EAChBA,GAAQA,GAAQvB,OAChBuB,EAAKkQ,GAAGvG,MAAMzR,QAASuG,KAAMA,KAAK45G,aAClCr4G,EAAKkQ,GAAGvG,MAAMqD,UAAWvO,KAAMA,KAAK45G,a,CAO5CxR,YAAYnqG,GACRoU,MAAM+1F,YAAYnqG,GAClB+B,KAAK45G,a,CAICA,cACF55G,KAAKi5G,aACDj5G,KAAKy5G,aAAaxR,iBAAkBjoG,KAAKg5G,KAAKh5G,KAAKgjG,OAAQhjG,KAAKm+C,KAAMn+C,KAAKk5G,aAC1El5G,KAAK4oG,WAAW5oG,KAAMA,KAAKs5G,Y,CAOxCh0C,OACItlE,KAAKi5G,YAAa,EAClBj5G,KAAK4oG,WAAW5oG,KAAMA,KAAKs5G,W,CAM3B79G,gBACA,OAAOuE,KAAKi5G,U,CAQhBY,SAASN,EAAehvG,GACfvK,KAAKw5G,UAASx5G,KAAKw5G,QAAU,IAC7Bx5G,KAAKw5G,QAAQjvG,KAAQvK,KAAKw5G,QAAQjvG,GAAS,IAChDvK,KAAKw5G,QAAQjvG,GAAOlO,KAAKk9G,E,CAO7BO,YAAYP,GACR,GAAKA,GACA,GAAIv5G,KAAKw5G,QACV,IAAK,IAAIzkG,KAAQ/U,KAAKw5G,QAClBx5G,KAAK+5G,qBAAqB/5G,KAAKw5G,QAAQzkG,GAAOwkG,QAH1Cv5G,KAAKw5G,QAAU,I,CASvBO,qBAAqBxzC,EAAagzC,GACtC,GAAKhzC,EACL,IAAK,IAAI9nE,EAAY8nE,EAAKtqE,OAAS,EAAGwC,GAAK,EAAGA,IACtC8nE,EAAK9nE,IAAM86G,GACXhzC,EAAK77D,OAAOjM,EAAG,E,CAS3Bu7G,YAAY7lC,GACRn0E,KAAKuK,MAA8B,iBAArB,EAAiCvK,KAAKm5G,iBAAyBhlC,GAAYA,EACzFn0E,KAAKslE,M,CAML/6D,YACA,OAAOvK,KAAKgjG,M,CAGZz4F,UAAMtM,GAGN,GAFA+B,KAAKgjG,OAAS/kG,EACd+B,KAAKi6G,gBAAgBh8G,GACjB+B,KAAKw5G,SAAWx5G,KAAKw5G,QAAQv7G,GAE7B,IADA,IAAIi8G,EAAcl6G,KAAKw5G,QAAQv7G,GACtBQ,EAAY,EAAGD,EAAc07G,EAAKj+G,OAAQwC,EAAID,EAAKC,IACxDuB,KAAKmR,MAAMjG,MAAM6E,MAAOmqG,EAAKz7G,G,CAU/Bw7G,gBAAgBh8G,G,CAMtB6M,YACA,OAAO9K,KAAK+jC,M,CAOhBp5B,QAGI,OAFA3K,KAAKslE,OACLtlE,KAAKw5G,QAAU,KACRx5G,I,EAhQJ24G,cAAawB,cAAW,EAExBxB,cAAYS,aAAW,EAEvBT,cAAae,cAAW,E,MCnBtBU,iBAITpjH,cAAcqjH,EAAkBjwG,EAA2B,MACvDvP,MAAMK,OAAOo/G,MAAMD,EAAU,QAAQjhF,MAAKl3B,IACjCA,IAGLk4G,iBAAiBG,WAAWr4G,GAC5BkI,GAAYA,EAASkvB,MAAK,G,CAIlCtiC,kBAAkBkL,GACd,IAAIs4G,EAAMJ,iBAAiBK,aAC3B,IAAK,IAAIruG,KAAOlK,EAAM,CAClB,IAAI7D,EAAM6D,EAAKkK,GACXsuG,EAASr9E,IAAIE,UAAUl/B,EAAI,IAC3Bs8G,EAASt8G,EAAI,GACbG,EAAMm8G,EAAO1+G,OACb2+G,EAAQ,CAAEzmG,IAAK/H,GACnB,IAAK,IAAI3N,EAAI,EAAGA,EAAID,EAAKC,IACrB+7G,EAAIE,EAASC,EAAOl8G,IAAMm8G,CAEjC,C,CAGL5jH,gBAAgB6jH,EAAkBH,EAAgBC,GAC9CD,EAASr9E,IAAIE,UAAUm9E,GACvB,IAAIF,EAAMJ,iBAAiBK,aACvBG,EAAQ,CAAEzmG,IAAK0mG,GACnB,IAAK,IAAIp8G,KAAKk8G,EACVH,EAAIE,EAASj8G,GAAKm8G,C,CAI1B5jH,uBAAuBkqC,GACnB,OAAOk5E,iBAAiBK,aAAav5E,E,EApClCk5E,iBAAYK,aAAsD,G,MCLhEK,aAaT9jH,yBACI,QAAO+jH,M,CAMAjjE,kBAAO75C,GACd,GAAI68G,aAAa3mD,SAAWl2D,EAAO,CAC/B,GAAIA,EAAO,CACP,IAAK88G,OACD,OAECD,aAAaE,UACdF,aAAaE,QAAU,IAAID,OAAOD,aAAaG,YAC/CH,aAAaE,QAAQE,UAAYJ,aAAaK,cAC9CL,aAAaM,YAAc,IAAItqG,gBAEtC,CACDgqG,aAAa3mD,QAAUl2D,CAC1B,C,CAGM65C,oBACP,OAAOgjE,aAAa3mD,O,CAGxBn9D,YAAYmd,EAAaknG,GACrB,OAAO,IAAIniF,SAAQC,IACf2hF,aAAaE,QAAQM,YAAY,CAAEnnG,MAAKknG,YACxCP,aAAaM,YAAY3wG,KAAK0J,EAAKglB,EAAQ,G,CAI3CniC,qBAAqBukH,GACzB,IAAIr5G,EAAOq5G,EAAIr5G,KACf,GAAIA,EACA,OAAQA,EAAKqJ,MACT,IAAK,QACDuvG,aAAaM,YAAYjqG,MAAMjP,EAAKiS,IAAKjS,EAAKs5G,aAC9C,MACJ,IAAK,UACDV,aAAahjE,QAAS,E,EApD/BgjE,aAAUG,WAAW,4BAIbH,aAAO3mD,SAAY,ECPhC,MAAOsnD,sBAAsBtpG,SAW/B5V,YAAYm/G,EAAaC,EAA0BhB,GAC/CtoG,QAEArS,KAAK07G,IAAMA,EACX17G,KAAK27G,SAAWA,EAChB37G,KAAK26G,OAASA,EACd36G,KAAK2S,MAAO,C,CAMNgC,mBACN,IAAK,IAAIojB,KAAO/3B,KAAK27G,SACb5jF,GACAA,EAAI50B,UAGZ,IAAK,IAAI40B,KAAO/3B,KAAK26G,OACjB5iF,EAAI50B,UAERnD,KAAK26G,OAAO1+G,OAAS,EACrB+D,KAAK27G,SAAS1/G,OAAS,C,QC9BlB2/G,cAMTr/G,YAAY6N,GACRpK,KAAK67G,UAAYzxG,EACjBpK,KAAKmK,OAAS,GACdnK,KAAK87G,SAAW,GAChB97G,KAAK+7G,UAAY,C,CAGjBC,gBACA,OAAOh8G,KAAKmK,OAAOlO,M,CAGvB8L,QACI/H,KAAKmK,OAAOlO,OAAS,EACrB+D,KAAK87G,SAAS7/G,OAAS,EACvB+D,KAAK+7G,UAAY,C,CAGrBE,eAAeC,GACX,IAAI3xG,EAAQvK,KAAKmK,OAAOlO,OAOxB,OANA+D,KAAKmK,OAAO9N,KAAK,GACH,MAAV6/G,EACAl8G,KAAK87G,SAASz/G,KAAK,MAEnB2D,KAAK87G,SAASz/G,KAAKkB,KAAKuL,IAAI,EAAGvL,KAAKwL,IAAImzG,EAAQ,KAE5C7O,GAAqBrtG,KAAK2+C,OAAOp0C,EAAO8iG,E,CAGpD1uD,OAAOp0C,EAAetM,GAClB,IAAc,GAAVsM,EAAa,CACbvK,KAAKmK,OAAOI,GAAShN,KAAKuL,IAAI,EAAGvL,KAAKwL,IAAI9K,EAAO,IAEjD,IAAIk+G,EAAK,EACLpoE,EAAM/zC,KAAKmK,OACXiyG,EAAKp8G,KAAK87G,SACVO,EAAO,EAAItoE,EAAI93C,OACnB,IAAK,IAAIwC,EAAI,EAAGA,EAAIs1C,EAAI93C,OAAQwC,IAAK,CACjC,IAAIuwC,EAAI+E,EAAIt1C,GACRwvB,EAAImuF,EAAG39G,GACF,MAALuwC,IACAmtE,GAAMntE,GAAU,MAAL/gB,EAAYA,EAAIouF,GAClC,EACDp+G,EAAQk+G,GACI,IAAGl+G,EAAQ,EAC1B,CAEGA,EAAQ+B,KAAK+7G,YACb/7G,KAAK+7G,UAAY99G,EACjB+B,KAAK67G,UAAU59G,G,QCvDdq+G,SAaDtlH,sBAAsBulH,EAAoBC,GAC9C,IAAIC,EAAgBF,EAAWh+G,MAAM,KACjCm+G,EAAiBF,EAAYj+G,MAAM,KACvC,MAAMC,EAAMjB,KAAKuL,IAAI2zG,EAAcxgH,OAAQygH,EAAezgH,QAC1D,KAAOwgH,EAAcxgH,OAASuC,GAC1Bi+G,EAAcpgH,KAAK,KAEvB,KAAOqgH,EAAezgH,OAASuC,GAC3Bk+G,EAAergH,KAAK,KAExB,IAAK,IAAIoC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC1B,MAAMk+G,EAAO79G,SAAS29G,EAAch+G,IAC9Bm+G,EAAO99G,SAAS49G,EAAej+G,IACrC,GAAIk+G,EAAOC,EACP,OAAO,EACJ,GAAID,EAAOC,EACd,OAAO,CAEd,CACD,OAAO,C,CAMAC,uBACP,GAAI7hH,QAAQ4gD,YAAa,CACrB,IAAIpgD,EAAkBR,QAAQY,OAAOkhH,GAAGC,oBAAoBC,WAC5D,OAAOV,SAASW,eAAezhH,EAAS,SAC3C,CACI,QAAIR,QAAQ+/C,iBAEN//C,QAAQY,OAAOshH,QACfliH,QAAQY,OAAOshH,I,CAU9BlmH,wBAAwBmd,EAAagpG,GACjC,IAAKb,SAASO,UAAW,OAAO1oG,EAChC,GAAImoG,SAASp6G,KAAKiS,GACd,OAAOmoG,SAASp6G,KAAKiS,GACzB,IAAIipG,EAAiB,GACrB,GAAIpiH,QAAQ4gD,aAAe5gD,QAAQ+/C,cAC/BqiE,EAASpiH,QAAQY,OAAOkhH,GAAGO,gBAAgBF,QACxC,GAAIniH,QAAQY,OAAOshH,KAAM,CAC5B,IAAII,EAAO,IAAIJ,KAAK,CAACC,GAAc,CAAE5xG,KAAM,6BAC3C6xG,EAASpiH,QAAQY,OAAOyhC,IAAIkgF,gBAAgBD,EAC/C,CAGD,OAFIhB,SAASkB,aACTlB,SAASp6G,KAAKiS,GAAOipG,GAClBA,C,CAGXpmH,yBAAyBmmH,GACrB,IAAKb,SAASO,UAAW,OAAO,KAChC,IAAIO,EAAiB,GACrB,GAAIpiH,QAAQ4gD,aAAe5gD,QAAQ+/C,cAC/BqiE,EAASpiH,QAAQY,OAAOkhH,GAAGO,gBAAgBF,QACxC,GAAIniH,QAAQY,OAAOshH,KAAM,CAC5B,IAAII,EAAO,IAAIJ,KAAK,CAACC,GAAc,CAAE5xG,KAAM,6BAC3C6xG,EAASpiH,QAAQY,OAAOyhC,IAAIkgF,gBAAgBD,EAC/C,CACD,OAAOF,C,CAOXpmH,eAAemd,GACX,GAAKmoG,SAASO,UAAd,CACA,IAAIO,EAAiBd,SAASp6G,KAAKiS,GAC/BipG,IACIpiH,QAAQ4gD,aAAe5gD,QAAQ+/C,cAC/B//C,QAAQY,OAAOkhH,GAAGW,gBAAgBL,GAC7BpiH,QAAQY,OAAOshH,MACpBliH,QAAQY,OAAOyhC,IAAIqgF,gBAAgBN,UAChCd,SAASp6G,KAAKiS,GAPA,C,EAtFtBmoG,SAAIp6G,KAAQ,GAEZo6G,SAAUkB,YAAY,E,MCZpBG,SACF3mH,oBAAoB4mH,GACvB,IAAIp/G,EAAMo/G,EAAQ3hH,OACd4hH,EAAa,GACbC,EAAO,EAAGC,EAAO,EAErB,OAAa,CAET,GADAA,EAAOH,EAAQ1/G,QAAQ,IAAK4/G,IACf,GAATC,EAAY,CACZF,GAAMD,EAAQt/G,UAAUw/G,GACxB,KACH,CACDD,GAAMD,EAAQt/G,UAAUw/G,EAAMC,GAE9BD,EAAOC,EAAO,EACdA,EAAOD,EACP,IAAI3iG,EAAM5d,KAAKwL,IAAIvK,EAAKu/G,EAAO,IAC/B,KAAOA,EAAO5iG,GACW,KAAjByiG,EAAQG,GADGA,KAInB,GAAIA,EAAO5iG,GAAO4iG,EAAOD,EAAM,CAC3B,IAAIE,EAAiBJ,EAAQt/G,UAAUw/G,EAAMC,GACzC9/F,EAAI,EACR,GAAiB,KAAb+/F,EAAO,GACHA,EAAO/hH,OAAS,GAEZgiB,EADa,KAAb+/F,EAAO,GACHl/G,SAASk/G,EAAO1/G,UAAU,GAAI,IAE9BQ,SAASk/G,EAAO1/G,UAAU,IAClCu/G,GAAM9/F,OAAOC,aAAaC,GAC1B6/F,EAAOC,EAAO,GAGdF,GAAM,QAET,CACD,OAAQG,GACJ,IAAK,MACD//F,EAAI,GACJ,MAEJ,IAAK,OACDA,EAAI,GACJ,MAEJ,IAAK,KACDA,EAAI,GACJ,MAEJ,IAAK,KACDA,EAAI,GACJ,MAEJ,IAAK,OACDA,EAAI,GACJ,MAEJ,IAAK,OACDA,EAAI,GAGRA,EAAI,GACJ4/F,GAAM9/F,OAAOC,aAAaC,GAC1B6/F,EAAOC,EAAO,GAGdF,GAAM,GACb,CACJ,MAEGA,GAAM,GAEb,CAED,OAAOA,C,CAGJ7mH,oBAAoB+G,GACvB,OAAOA,EAAI0iC,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAC3CA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,S,CAG9DzpC,iBAAiBinH,EAAYC,EAAkBC,GAClD,GAAa,MAATF,EACA,OAAmB,MAAZE,EAAmB,KAAOA,EAErC,IAAI/sG,EAAM6sG,EAAMC,GAChB,OAAW,MAAP9sG,EACO,GAAKA,EAEO,MAAZ+sG,EAAmB,KAAOA,C,CAGlCnnH,cAAcinH,EAAYC,EAAkBC,GAC/C,IAAIlgH,EAAgB+B,KAAK4a,UAAUqjG,EAAOC,GAC1C,GAAa,MAATjgH,GAAiBA,EAAMhC,OAAS,EAChC,GAA+B,KAA3BgC,EAAMA,EAAMhC,OAAS,GAAW,CAChC,IAAImV,EAAMtS,SAASb,EAAMK,UAAU,EAAGL,EAAMhC,OAAS,IACrD,IAAK6B,MAAMsT,GACP,OAAO7T,KAAKoyE,KAAKv+D,EAAM,IAAQ+sG,EACtC,KACI,CACD,IAAI/sG,EAAMtS,SAASb,GACnB,IAAKH,MAAMsT,GACP,OAAOA,CACd,CAGL,OAAmB,MAAZ+sG,EAAmB,EAAIA,C,CAG3BnnH,gBAAgBinH,EAAYC,EAAkBC,GACjD,IAAIlgH,EAAgB+B,KAAK4a,UAAUqjG,EAAOC,GAC1C,GAAa,MAATjgH,GAAiC,GAAhBA,EAAMhC,OACvB,OAAmB,MAAZkiH,EAAmB,EAAIA,EAElC,IAAI/sG,EAAM1S,WAAWT,GACrB,OAAIH,MAAMsT,GACa,MAAZ+sG,EAAmB,EAAIA,EAEvB/sG,C,CAGRpa,eAAeinH,EAAYC,EAAkBC,GAChD,IAAIlgH,EAAgB+B,KAAK4a,UAAUqjG,EAAOC,GAC1C,OAAa,MAATjgH,GAAiC,GAAhBA,EAAMhC,OACJ,MAAZkiH,GAA2BA,EAEzB,QAATlgH,GAA4B,KAATA,GAEL,SAATA,GAA6B,KAATA,IAGN,MAAZkgH,GAA2BA,E,ECpI9C,IAAYC,uDAOX,KANGA,GAAA,iBACAA,MAAA,aACAA,MAAA,eACAA,MAAA,iBACAA,MAAA,qBACAA,MAAA,6B,MAQSC,YAgBFrnH,aAAa+H,EAAgBu/G,GAChCD,YAAYt/G,OAASA,EACrBs/G,YAAYC,cAAgBA,EAC5Bt+G,KAAKu+G,UAAYx/G,EAAO9C,OACxB+D,KAAKw+G,SAAW,EAChBx+G,KAAKy+G,WAAa,EAClBz+G,KAAK0+G,OAAS,EACd1+G,KAAK2+G,UAAY,EACjB3+G,KAAK4+G,QAAU,I,CAGZ5nH,iBACH,IAAIwmB,EACA1Z,EACA6V,EAAS,GAOb,IALA3Z,KAAK6+G,QAAUT,aAAWU,MAC1B9+G,KAAKy+G,WAAaz+G,KAAKw+G,SACvBx+G,KAAK++G,YAAa,EAClB/+G,KAAKg/G,YAAch/G,KAAK4+G,SAEmC,IAAnDphG,EAAMxd,KAAKjB,OAAOb,QAAQ,IAAK8B,KAAKw+G,aACxCx+G,KAAKw+G,SAAWhhG,EAChBA,IAEIA,GAAOxd,KAAKu+G,YAJ0C,CAQ1D,GADAz6G,EAAI9D,KAAKjB,OAAOye,GACP,KAAL1Z,EAAU,CACV,GAAI9D,KAAKu+G,UAAY/gG,EAAM,GAnDvB,aAmD4Bxd,KAAKjB,OAAOT,UAAUkf,EAAM,EAAGA,EAAM,GAUjE,OATAA,EAAMxd,KAAKjB,OAAOb,QAnDpB,MAmDuCsf,GACrCxd,KAAK6+G,QAAUT,aAAWa,MAC1Bj/G,KAAK4+G,QAAU,GACf5+G,KAAK0+G,OAAS1+G,KAAKw+G,SAEfx+G,KAAK2+G,WADG,GAARnhG,EACiBxd,KAAKu+G,UAAYv+G,KAAKw+G,SAEtBhhG,EAAM,EAAIxd,KAAKw+G,SACpCx+G,KAAKw+G,UAAYx+G,KAAK2+G,WACf,EAEN,GAAI3+G,KAAKu+G,UAAY/gG,EAAM,GA7D1B,WA6D+Bxd,KAAKjB,OAAOT,UAAUkf,EAAM,EAAGA,EAAM,GAUtE,OATAA,EAAMxd,KAAKjB,OAAOb,QA7DlB,SA6DuCsf,GACvCxd,KAAK6+G,QAAUT,aAAWc,QAC1Bl/G,KAAK4+G,QAAU,GACf5+G,KAAK0+G,OAAS1+G,KAAKw+G,SAEfx+G,KAAK2+G,WADG,GAARnhG,EACiBxd,KAAKu+G,UAAYv+G,KAAKw+G,SAEtBhhG,EAAM,EAAIxd,KAAKw+G,SACpCx+G,KAAKw+G,UAAYx+G,KAAK2+G,WACf,EAGPnhG,IACAxd,KAAK6+G,QAAUT,aAAWe,WAEjC,KACa,KAALr7G,GACL0Z,IACAxd,KAAK6+G,QAAUT,aAAWgB,KAEhB,KAALt7G,IACL0Z,IACAxd,KAAK6+G,QAAUT,aAAWe,aAG9B,KAAO3hG,EAAMxd,KAAKu+G,YACdz6G,EAAI9D,KAAKjB,OAAOye,IACe,GAA3B,YAAYtf,QAAQ4F,IAAiB,KAALA,GAAiB,KAALA,GAFvB0Z,KAK7B,GAAIA,GAAOxd,KAAKu+G,UACZ,MAEJ5kG,GAAU3Z,KAAKjB,OAAOT,UAAU0B,KAAKw+G,SAAW,EAAGhhG,GAC/C7D,EAAO1d,OAAS,GAAkB,KAAb0d,EAAO,KAC5BA,EAASA,EAAOrb,UAAU,IAE9B,IAAI+gH,GAAwB,EAAOC,GAAwB,EACvDC,GAAuB,EAC3B,KAAO/hG,EAAMxd,KAAKu+G,UAAW/gG,IAWzB,GAVA1Z,EAAI9D,KAAKjB,OAAOye,GACP,KAAL1Z,EACKu7G,IACDC,GAAgBA,GAEV,KAALx7G,IACAw7G,IACDD,GAAgBA,IAGf,KAALv7G,EAAU,CACV,IAAMu7G,IAAgBC,EAAe,CACjCC,GAAe,EACf,KACH,CAEDA,EAAc/hG,CACjB,MACI,GAAS,KAAL1Z,EACL,MAKR,IAHoB,GAAhBy7G,IACA/hG,EAAM+hG,GAEN/hG,GAAOxd,KAAKu+G,UACZ,MAYJ,MAV4B,KAAxBv+G,KAAKjB,OAAOye,EAAM,KAClBxd,KAAK6+G,QAAUT,aAAWoB,MAE9Bx/G,KAAK4+G,QAAUjlG,EACX3Z,KAAKs+G,gBACLt+G,KAAK4+G,QAAU5+G,KAAK4+G,QAAQn/G,eAChCO,KAAK0+G,OAAS1+G,KAAKw+G,SACnBx+G,KAAK2+G,UAAYnhG,EAAM,EAAIxd,KAAKw+G,SAChCx+G,KAAKw+G,UAAYx+G,KAAK2+G,WAEf,CACV,CAKD,OAHA3+G,KAAK0+G,OAAS1+G,KAAKu+G,UACnBv+G,KAAK2+G,UAAY,EACjB3+G,KAAK4+G,QAAU,MACR,C,CAGJ5nH,sBACH,OAAOgJ,KAAKjB,OAAOT,UAAU0B,KAAK0+G,OAAQ1+G,KAAK0+G,OAAS1+G,KAAK2+G,U,CAG1D3nH,kBAAkByoH,GACrB,GAAIz/G,KAAKy+G,YAAcz+G,KAAK0+G,OACxB,MAAO,GACN,GAAIe,EAAM,CACX,IAAIhhH,EAAIuB,KAAKy+G,WACb,KAAOhgH,EAAIuB,KAAK0+G,OAAQjgH,IAAK,CACzB,IAAIqF,EAAI9D,KAAKjB,OAAON,GACpB,IAA+B,GAA3B,YAAYP,QAAQ4F,GACpB,KACP,CAED,OAAIrF,GAAKuB,KAAK0+G,OACH,GAEA1+G,KAAKjB,OAAOT,UAAUG,EAAGuB,KAAK0+G,QAAQe,MACpD,CAEG,OAAOz/G,KAAKjB,OAAOT,UAAU0B,KAAKy+G,WAAYz+G,KAAK0+G,O,CAGpD1nH,eAAeyoH,GAClB,GAAIz/G,KAAKy+G,YAAcz+G,KAAK0+G,OACxB,MAAO,GACN,GAAIe,EAAM,CACX,IAAIhhH,EAAIuB,KAAKy+G,WACb,KAAOhgH,EAAIuB,KAAK0+G,OAAQjgH,IAAK,CACzB,IAAIqF,EAAI9D,KAAKjB,OAAON,GACpB,IAA+B,GAA3B,YAAYP,QAAQ4F,GACpB,KACP,CAED,OAAIrF,GAAKuB,KAAK0+G,OACH,GAEAf,SAAS+B,aAAa1/G,KAAKjB,OAAOT,UAAUG,EAAGuB,KAAK0+G,SAASiB,SAC3E,CAEG,OAAOhC,SAAS+B,aAAa1/G,KAAKjB,OAAOT,UAAU0B,KAAKy+G,WAAYz+G,KAAK0+G,Q,CAG/DkB,wBACd,IAAK5/G,KAAK++G,WAAY,CAClB,IAAK,IAAI3yG,KAAOpM,KAAK6/G,cACV7/G,KAAK6/G,OAAOzzG,GAEvBpM,KAAK8/G,gBAAgB9/G,KAAK6/G,QAC1B7/G,KAAK++G,YAAa,CACrB,CAED,OAAO/+G,KAAK6/G,M,CAGT7oH,oBAAoBknH,GACvB,OAAOl+G,KAAK4/G,WAAW1B,E,CAG3BlnH,uBAAuBinH,GACnB,IAAIC,EACA6B,EAAqB,EACrBC,EAAmB,EACnBC,GAAqB,EACrBC,EAAiB,EACjBvmG,EAAiB,GACjBlb,EAAIuB,KAAK0+G,OACTyB,EAAUngH,KAAK0+G,OAAS1+G,KAAK2+G,UAEjC,GAAIlgH,EAAI0hH,GAA6B,KAAlBngH,KAAKjB,OAAON,GAC3B,KAAOA,EAAI0hH,EAAS1hH,IAAK,CACrB,IAAIqF,EAAI9D,KAAKjB,OAAON,GACpB,IAA+B,GAA3B,YAAYP,QAAQ4F,IAAiB,KAALA,GAAiB,KAALA,EAC5C,KACP,CAGL,KAAOrF,EAAI0hH,EAAS1hH,IAAK,CACrB,IAAIqF,EAAY9D,KAAKjB,OAAON,GAC5B,GAAS,KAALqF,EAAU,CACVi8G,GAAc,EACdC,GAAY,EACZE,EAAS,EACT,IAAK,IAAIxgH,EAAIjB,EAAI,EAAGiB,EAAIygH,EAASzgH,IAAK,CAClC,IAAIiG,EAAK3F,KAAKjB,OAAOW,GACrB,IAAgC,GAA5B,YAAYxB,QAAQyH,IACpB,IAAmB,GAAfo6G,GAA8B,GAAVG,EAAa,CACjCF,EAAWtgH,EAAI,EACf,KACH,OAEA,GAAU,KAANiG,GACL,GAAc,GAAVu6G,EAAa,CACbF,EAAWtgH,EAAI,EACf,KACH,OAEA,GAAU,KAANiG,EACL,IAAmB,GAAfo6G,GACA,GAAc,GAAVG,EAAa,CACbF,EAAWtgH,EAAI,EACf,KACH,OAGDwgH,EAAS,EACTH,EAAargH,EAAI,OAGpB,GAAU,KAANiG,EACL,IAAmB,GAAfo6G,GACA,GAAc,GAAVG,EAAa,CACbF,EAAWtgH,EAAI,EACf,KACH,OAGDwgH,EAAS,EACTH,EAAargH,EAAI,OAGD,GAAfqgH,IACLA,EAAargH,EAEpB,CAED,IAAmB,GAAfqgH,IAAiC,GAAbC,EASpB,MARA9B,EAAWvkG,EACP3Z,KAAKs+G,gBACLJ,EAAWA,EAASz+G,eACxBka,EAAS,GACTskG,EAAMC,GAAYP,SAAS+B,aAAa1/G,KAAKjB,OAAOT,UAAUyhH,EAAYC,EAAW,IACrFvhH,EAAIuhH,EAAW,CAItB,MACmC,GAA3B,YAAY9hH,QAAQ4F,KACrBm8G,GAAkB,KAALn8G,GAAiB,KAALA,KACrB6V,EAAO1d,OAAS,IAChBiiH,EAAWvkG,EACP3Z,KAAKs+G,gBACLJ,EAAWA,EAASz+G,eACxBw+G,EAAMC,GAAY,GAClBvkG,EAAS,IAGbsmG,GAAY,GAGP,KAALn8G,GAAiB,KAALA,IACZ6V,GAAU7V,IAGV6V,EAAO1d,OAAS,IAChBgkH,GAAY,EAEvB,C,EAjSU5B,YAAMwB,OAAQ,GAqS5B9hG,OAAOqiG,UAAUT,UAClB5hG,OAAOqiG,UAAUT,QAAU,WACvB,OAAO3/G,KAAKygC,QAAQ,QAAS,GACjC,G,MCnUS4/E,IAOT9jH,YAAmB+jH,GACXA,GACAtgH,KAAK63E,MAAMyoC,E,CAGRV,iBAGP,OAFK5/G,KAAK6/G,SACN7/G,KAAK6/G,OAAS,IACX7/G,KAAK6/G,M,CAGTU,cAAcrC,EAAkBC,GACnC,OAAOR,SAAS/iG,UAAU5a,KAAK6/G,OAAQ3B,EAAUC,E,CAG9CqC,WAAWtC,EAAkBC,GAChC,OAAOR,SAAS8C,OAAOzgH,KAAK6/G,OAAQ3B,EAAUC,E,CAG3CuC,aAAaxC,EAAkBC,GAClC,OAAOR,SAASgD,SAAS3gH,KAAK6/G,OAAQ3B,EAAUC,E,CAG7CyC,YAAY1C,EAAkBC,GACjC,OAAOR,SAASkD,QAAQ7gH,KAAK6/G,OAAQ3B,EAAUC,E,CAG5C2C,aAAa5C,EAAkB6C,GAC7B/gH,KAAK6/G,SACN7/G,KAAK6/G,OAAS,IAElB7/G,KAAK6/G,OAAO3B,GAAY6C,C,CAGrBC,QAAQC,GACX,OAAKjhH,KAAKw3D,UAGCx3D,KAAKw3D,UAAU4Y,MAAKnyE,GAChBA,EAAM8W,MAAQksG,IAHlB,I,CAORt0E,SAASs0E,GAGZ,OAFKjhH,KAAKw3D,YACNx3D,KAAKw3D,UAAY,IAAInmD,OACrB4vG,EACOjhH,KAAKw3D,UAAUs1B,QAAO7uF,GAClBA,EAAM8W,MAAQksG,IAGlBjhH,KAAKw3D,S,CAGbqgB,MAAM+lC,GAGT,IAAIsD,EAFJlhH,KAAK+H,QAGL,IAAIo5G,EAAwB,IAAI9vG,MAGhC,IADAgtG,YAAYh/E,MAAMu+E,GACXS,YAAY+C,WACf,GAAI/C,YAAYQ,SAAWT,aAAWU,OAAST,YAAYQ,SAAWT,aAAWoB,KAAM,CACnF,IAAI6B,EACJ,GAAIH,EACAG,EAAY,IAAIhB,QACf,CACD,GAAiB,MAAbrgH,KAAK+U,KAEL,MADA/U,KAAK+H,QACC,IAAImhB,MAAM,sCAEpBm4F,EAAYrhH,IACf,CAEDqhH,EAAUtsG,KAAOspG,YAAYO,QAC7ByC,EAAUxB,OAAShrG,OAAOs9B,OAAO,GAAIksE,YAAYuB,YAE7CsB,IACI7C,YAAYQ,SAAWT,aAAWoB,MAClC2B,EAAU9kH,KAAK6kH,GACW,MAA1BA,EAAa1pD,YACb0pD,EAAa1pD,UAAY,IAAInmD,OACjC6vG,EAAa1pD,UAAUn7D,KAAKglH,IAE5BhD,YAAYQ,SAAWT,aAAWoB,OAClC0B,EAAeG,EACtB,MACI,GAAIhD,YAAYQ,SAAWT,aAAWgB,IAAK,CAC5C,GAAoB,MAAhB8B,GAAwBA,EAAansG,MAAQspG,YAAYO,QAEzD,MADA5+G,KAAK+H,QACC,IAAImhB,MAAM,yBAA2Bm1F,YAAYO,QAAU,iBAGvC,MAA1BsC,EAAa1pD,WAAsD,GAAjC0pD,EAAa1pD,UAAUv7D,SACzDilH,EAAahhF,KAAOm+E,YAAYiD,WAIhCJ,EADAC,EAAUllH,OAAS,EACJklH,EAAUlkH,MAEV,IACtB,C,CAIF8K,QACH/H,KAAK6/G,OAAS,KACQ,MAAlB7/G,KAAKw3D,WACLx3D,KAAKw3D,UAAUv7D,OACnB+D,KAAKkgC,KAAO,I,EC9Fd,MAAOqhF,oBAAoBzwG,gBAAjCvU,c,oBAEcyD,KAAAwhH,MAAQ,IAAIC,c,CAkBtBC,KAAKvtG,EAAajS,EAAY,KAC1BqmG,EAAkC,MAClCoZ,EAAwD,OACxDC,GACA5hH,KAAK6hH,cAAgBF,EACrB3hH,KAAK8qE,MAAQ,MAET9vE,QAAQqgD,cAAgBrgD,QAAQggD,cAAgBhgD,QAAQigD,cAAgBjgD,QAAQugD,kBAAoBvgD,QAAQkgD,cAAgBlgD,QAAQogD,cAAgBpgD,QAAQmgD,cAAgBngD,QAAQwgD,gBACpLrnC,EAAMotG,YAAYO,WAAW3tG,IAEjCnU,KAAKs9B,KAAOnpB,EAEZ,IAAI4tG,EAAO/hH,KAAKwhH,MAgBhB,GAfAO,EAAKC,KAAKzZ,EAAQp0F,GAAK,GAEnBjS,EACqB,iBAAjB,EACA6/G,EAAKE,iBAAiB,eAAgB,sCAGtCF,EAAKE,iBAAiB,eAAgB,oBAChC//G,aAAgB6X,cAClB7X,EAAOggH,KAAKC,UAAUjgH,KAGzBlH,QAAQkgD,cAAgBlgD,QAAQi/C,YACrC/3C,EAAO,IAEP0/G,EACA,IAAK,IAAInjH,EAAI,EAAGA,EAAImjH,EAAQ3lH,OAAQwC,IAChCsjH,EAAKE,iBAAiBL,EAAQnjH,KAAMmjH,EAAQnjH,IAIpD,IAAI2jH,EAAuD,gBAAjBT,EAAiC,OAAS,cACpFI,EAAKJ,aAAeS,EACfL,EAAaM,WACbN,EAAaM,SAAWD,GAE7BL,EAAKO,QAAWzhG,IACZ7gB,KAAKuiH,SAAS1hG,EAAE,EAEpBkhG,EAAKS,QAAW3hG,IACZ7gB,KAAKyiH,SAAS5hG,EAAE,EAEpBkhG,EAAKW,WAAc7hG,IACf7gB,KAAK2iH,YAAY9hG,EAAE,EAEvBkhG,EAAKa,OAAU/hG,IACX7gB,KAAK6iH,QAAQhiG,EAAE,EAGnBkhG,EAAKL,KAAKx/G,E,CAQJygH,YAAY9hG,GACdA,GAAKA,EAAEiiG,kBAAkB9iH,KAAKmR,MAAMjG,MAAM0D,SAAUiS,EAAEkiG,OAASliG,EAAEmiG,M,CAQ/DP,SAAS5hG,GACf7gB,KAAK4mB,MAAM,8B,CAQL27F,SAAS1hG,GACf7gB,KAAK4mB,MAAM,yBAA2B5mB,KAAKwhH,MAAMyB,OAAS,SAAWjjH,KAAKwhH,MAAM0B,W,CAQ1EL,QAAQhiG,GACd,IAAIkhG,EAAY/hH,KAAKwhH,MACjByB,OAAiC1xG,IAAhBwwG,EAAKkB,OAAuBlB,EAAKkB,OAAS,IAEhD,MAAXA,GAA6B,MAAXA,GAA6B,IAAXA,EACpCjjH,KAAKgoB,WAELhoB,KAAK4mB,MAAM,IAAMm7F,EAAKkB,OAAS,IAAMlB,EAAKmB,WAAa,IAAMnB,EAAKoB,Y,CAShEv8F,MAAMw8F,GACZpjH,KAAK2K,QAEL3K,KAAKmR,MAAMjG,MAAMsD,MAAO40G,E,CAOlBp7F,WACNhoB,KAAK2K,QACL,IAAIhK,GAAgB,EACpB,IAC+B,SAAvBX,KAAK6hH,cACL7hH,KAAK8qE,MAAQo3C,KAAKrqC,MAAM73E,KAAKwhH,MAAM6B,cACL,QAAvBrjH,KAAK6hH,cACZ7hH,KAAK8qE,MAAQ,IAAIu1C,IAAIrgH,KAAKwhH,MAAM6B,cAEhCrjH,KAAK8qE,MAAQ9qE,KAAKwhH,MAAM8B,UAAYtjH,KAAKwhH,MAAM6B,YAEtD,CAAC,MAAOxiG,GACLlgB,GAAO,EACPX,KAAK4mB,MAAM/F,EAAEuiG,QAChB,CACDziH,GAAQX,KAAKmR,MAAMjG,MAAMuD,SAAUzO,KAAK8qE,iBAAiBz5D,MAAQ,CAACrR,KAAK8qE,OAAS9qE,KAAK8qE,M,CAO/EngE,QACN,IAAIo3G,EAAY/hH,KAAKwhH,MACrBO,EAAKO,QAAUP,EAAKS,QAAUT,EAAKW,WAAaX,EAAKa,OAAS,I,CAI9DzuG,UACA,OAAOnU,KAAKs9B,I,CAIZp7B,WACA,OAAOlC,KAAK8qE,K,CAMZi3C,WACA,OAAO/hH,KAAKwhH,K,CAGhBz5G,QACI/H,KAAK6R,SACL7R,KAAK8qE,MAAQ,I,EA/KFy2C,YAAUO,WAAayB,U,MCvB7BC,WAAbjnH,cAyEIyD,KAAeyjH,gBAAuB,E,CAxEtCC,OAAO5iH,EAAYqT,EAAawvG,EAAqBC,EAAqBC,EAAwCC,GAC9G,IAAI/B,EAAO/hH,KAAK+jH,iBAChBhC,EAAKtwG,GAAGvG,MAAMuD,UAAU,KACpB,IAAIvM,EAAO6/G,EAAK7/G,KAChBlC,KAAKgkH,kBAAkBjC,GAEvB+B,EAAW5hH,EAAK,IAEpB6/G,EAAKtwG,GAAGvG,MAAMsD,MAAO,MAAOoY,IACxB5mB,KAAKgkH,kBAAkBjC,GAEvB+B,EAAW,KAAMl9F,EAAM,IAEvBi9F,GACA9B,EAAKtwG,GAAGvG,MAAM0D,SAAUi1G,GAC5B9B,EAAKL,KAAKvtG,EAAK,KAAM,MAAYyvG,GACjC9iH,EAAMmjH,KAAOlC,C,CAGjBmC,MAAMpjH,EAAYqT,EAAawvG,EAAqBE,EAAwCC,GACxF,IAAII,EAA0B,IAAIlpH,QAAQY,OAAOuoH,MACjDD,EAAME,YAAc,GACpBF,EAAMtB,OAAS,KACXsB,EAAMtB,OAAS,KACfsB,EAAM5B,QAAU,KAChBwB,EAAWI,EAAM,EAErBA,EAAM5B,QAAU,KACZ4B,EAAMtB,OAAS,KACfsB,EAAM5B,QAAU,KAChBwB,EAAW,KAAM,GAAG,EAExBI,EAAMthF,IAAMzuB,EACZrT,EAAMmjH,KAAOC,C,CAGjBG,cAAcvjH,EAAYw8G,EAAmBqG,EAAqBE,EAAwCC,GACtG,IAAI3vG,EAAMmoG,SAASgI,iBAAiBX,EAAarG,GACjDt9G,KAAKkkH,MAAMpjH,EAAOqT,EAAKwvG,EAAaE,EAAYC,E,CAGpDS,gBAAgBzjH,EAAYqT,EAAawvG,EAAqBE,EAAwCC,GAClGhJ,aAAahjE,QAAS,EAClBgjE,aAAahjE,OACbgjE,aAAa7yF,KAAK9T,EAAKrT,EAAM0jH,qBAAqBprF,MAAKhoB,IAC/CA,EACA0yG,EAAW1yG,GAEX0yG,EAAW,KAAM,uBAAuB,IAIhD9jH,KAAKkkH,MAAMpjH,EAAOqT,EAAKwvG,EAAaE,EAAYC,E,CAGxDW,MAAM3jH,EAAYqT,EAAawvG,EAAqBE,EAAwCC,GACxF,IAAIW,EAA2BzpH,QAAQ0+C,cAAc,SACrD+qE,EAAML,YAAc,GACpBK,EAAMC,iBAAmB,KACrBD,EAAMC,iBAAmB,KACzBD,EAAMnC,QAAU,KAChBwB,EAAWW,EAAM,EAErBA,EAAMnC,QAAU,KACZmC,EAAMC,iBAAmB,KACzBD,EAAMnC,QAAU,KAChBwB,EAAW,KAAM,GAAG,EAExBW,EAAM7hF,IAAMzuB,EACZrT,EAAMmjH,KAAOQ,C,CAIPV,iBACN,OAAmC,GAA/B/jH,KAAKyjH,gBAAgBxnH,QAClBjB,QAAQqgD,cAAgBrgD,QAAQogD,aAC5B,IAAImmE,YAEJvhH,KAAKyjH,gBAAgBxmH,K,CAI1B+mH,kBAAkBpnF,GACxBA,EAAK70B,QACD/H,KAAKyjH,gBAAgBxnH,OAAS,IAC9B+D,KAAKyjH,gBAAgBpnH,KAAKugC,E,EC5BtC,IAAI+nF,GAAgB,EASpB,MAAMC,GAAiC,CAAEplH,IAAK,KAAMqlH,OAAQ,KAAMC,MAAM,EAAOC,WAAY,MAKrF,MAAOjqH,eAAegW,gBAuGxBvU,cACI8V,QA/DJrS,KAAQglH,SAAW,EAEnBhlH,KAAUilH,WAAW,EAErBjlH,KAASklH,UAAW,EA6DhBllH,KAAKmlH,UAAY,IAAI5pF,IACrBv7B,KAAKolH,OAAS,GACdplH,KAAKqlH,cAAgB,IAAIz0G,G,CAlD7B5Z,sBAAsBsuH,EAAgB1oH,EAAgC2O,GAClE,IAAIg6G,EACAh6G,GACAg6G,EAA0BzqH,OAAO0qH,QAAQj6G,GACpCg6G,EAEIA,EAAUR,YAAcnoH,IAC7B2oH,EAAY,CAAEV,OAAQU,EAAUV,OAAQE,WAAYnoH,IAFpD9B,OAAO0qH,QAAQj6G,GAAQg6G,EAAY,CAAEV,OAAQF,KAAiBI,WAAYnoH,IAK9E2oH,EAAY,CAAEV,OAAQF,KAAiBI,WAAYnoH,GAEvD,IAAK,IAAI4C,KAAO8lH,EAAM,CAClB,IAAI1K,EAAQ9/G,OAAO2qH,OAAOjmH,GAC1B,GAAIo7G,GAASrvG,EAAM,CACf,IAAI9M,EAAIm8G,EAAMpwG,WAAUqW,GAAKA,EAAEgkG,QAAUU,EAAUV,UACzC,GAANpmH,EACAm8G,EAAMv+G,KAAKkpH,GAEX3K,EAAMn8G,GAAGsmH,WAAanoH,CAC7B,MAEG9B,OAAO2qH,OAAOjmH,GAAO,CAAC+lH,EAE7B,C,CAgCMryG,cACP,OAAOlT,KAAKmlH,UAAUpyG,KAAO,C,CAkCjCkV,KAAK9T,EAA0DuxG,EAAkDC,EAAmCC,EAAeC,EAAmBjmD,EAAiBkmD,EAAgBC,EAAuBC,GAC1O,IAAIh+F,EACAzc,EAoBAs4G,EAMAoC,EAzBA5K,EAAwB6K,GA0B5B,GAzBIR,aAAgBxa,SAChBljF,EAAW09F,EACXn6G,EAAOq6G,GAEgB,iBAAlB,EACLr6G,EAAOm6G,EACM,MAARA,IACLn6G,EAAOm6G,EAAKn6G,KACZ8vG,EAAUqK,GAGE,MAAZG,GAA6B,MAATjmD,GAA0B,MAATkmD,GAAoC,MAAnBE,IAElD3K,EADAA,IAAY6K,GACF,CAAEL,WAAUjmD,QAAOkmD,QAAOE,mBAE1BnxG,OAAOs9B,OAAOkpE,EAAS,CAAEwK,WAAUjmD,QAAOkmD,QAAOE,qBAK/DnC,EADA8B,aAAgBza,QACFjtG,GAAkB0nH,EAAKxa,QAAQltG,GAEhC0nH,EAGbt0G,MAAMC,QAAQ6C,GAAM,CACpB,IAAIgyG,EACAtC,IACAsC,EAAK,IAAIvK,cAAciI,IAE3B,IAAIuC,EAAgC,GACpC,IAAK,IAAI3nH,EAAI,EAAGA,EAAI0V,EAAIlY,OAAQwC,IAAK,CACjC,IAAIw/B,EAAO9pB,EAAI1V,GACVw/B,IAGiB,iBAAlB,EACAmoF,EAAS/pH,KAAK2D,KAAKqmH,OAAOpoF,EAAM1yB,EAAM8vG,EAAS8K,aAAA,EAAAA,EAAIlK,mBAGnDmK,EAAS/pH,KAAK2D,KAAKqmH,OAAOpoF,EAAK9pB,IAAK8pB,EAAK1yB,MAAQA,EAC7C8vG,IAAY6K,GAAerxG,OAAOs9B,OAAO,GAAIkpE,EAASp9E,GAAQA,EAAMkoF,aAAA,EAAAA,EAAIlK,mBAEnF,CAEDgK,EAAU/sF,QAAQotF,IAAIF,EACzB,MAEGH,EADsB,iBAAjB,EACKjmH,KAAKqmH,OAAOlyG,EAAK5I,EAAM8vG,EAASwI,GAEhC7jH,KAAKqmH,OAAOlyG,EAAIA,IAAKA,EAAI5I,MAAQA,EACvC8vG,IAAY6K,GAAerxG,OAAOs9B,OAAO,GAAIkpE,EAASlnG,GAAOA,EAAK0vG,GAE1E,OAAI77F,EACOi+F,EAAQ7sF,MAAK/5B,IAChB2oB,EAASmjF,QAAQ9rG,GACVA,KAGJ4mH,C,CAGPI,OAAOlyG,EAAa5I,EAAc8vG,EAAuBwI,GAC7D,GAAItoH,QAAQG,UAAW,CACnB,GAAIyY,EAAIwoB,WAAW,UAAW,CAC1B,IAAIvoB,EAAOD,EAAI7V,UAAU,GACzB,OAAO49B,QAAQU,KAAKL,kBAAkBnoB,GAAMglB,MAAK6E,GACzCA,EACOj+B,KAAKumH,OAAOtoF,EAAM7pB,EAAM7I,EAAM8vG,EAASwI,KAE7CxI,EAAQmL,QAAU1rH,OAAO2rH,WAAWtyG,GAC9B+kB,QAAQC,QAAQ,QAGlC,CAEG,OAAO+C,QAAQU,KAAKJ,kBAAkBroB,GAAKilB,MAAKhlB,GACrCpU,KAAKumH,OAAOpyG,EAAKC,EAAM7I,EAAM8vG,EAASwI,IAGxD,CAEG,OAAO7jH,KAAKumH,OAAOpyG,EAAK,KAAM5I,EAAM8vG,EAASwI,E,CAG7C0C,OAAOpyG,EAAaC,EAAc7I,EAAc8vG,EAAuBwI,GAC3E,IAAIrkH,IAAEA,EAAGqlH,OAAEA,EAAMC,KAAEA,EAAIC,WAAEA,GAAejqH,OAAO4rH,WAAWvyG,EAAK5I,GAC/D,IAAKw5G,EAED,OADC1J,EAAQmL,QAAU1rH,OAAO2rH,WAAWtyG,GAC9B+kB,QAAQC,QAAQ,MAE3B,IASIwtF,EATAC,EAAevpF,IAAIE,UAAUppB,GAEjC,GAAIknG,EAAQyK,MAAO,CACf,IAAIrrG,EAAM3f,OAAO+rH,SAASxL,EAAQyK,OAC7BrrG,IACDA,EAAM3f,OAAO+rH,SAASxL,EAAQyK,OAAS,IAAIl1G,KAC/C6J,EAAI3X,IAAI8jH,EACX,CAGD,GAAqB,MAAjBvL,EAAQz7C,OAAiBy7C,EAAQz7C,MAAO,CACxC,IAAIknD,EAAWhsH,OAAOisH,QAAQH,EAAcr7G,GAC5C,QAAiBgG,IAAbu1G,EAAwB,CACxB,GAAgB,MAAZA,EACA,OAAO5tF,QAAQC,QAAQ,MAEvB,KAAM2tF,aAAoB30G,UACtB,OAAO+mB,QAAQC,QAAQ2tF,GAK3B,GAHIA,EAASpzG,WACTizG,EAAcG,KAEbH,GAAiBG,EAAS1yG,MAASA,GAAQA,GAAQ0yG,EAAS1yG,MAC7D,OAAO8kB,QAAQC,QAAQ2tF,EAElC,CACJ,CAED,IAAIE,EAAaJ,EACZ9B,IACDkC,GAAc,IAAMnC,GACxB,IAAIoC,EAAOjnH,KAAKmlH,UAAU3pF,IAAIwrF,GAC9B,GAAIC,EAGA,OAFIpD,GACAoD,EAAKpD,WAAW/gH,IAAI+gH,GACjB,IAAI3qF,SAASC,GAAY8tF,EAAKnD,WAAWhhH,IAAIq2B,KAIxD,IAAI+tF,EAAY9M,iBAAiB+M,gBAAgBP,GACjD,GAAIM,EACA,OAAOlnH,KAAKioB,KAAKi/F,EAAU/yG,IAAK,CAAE5I,KAAMzQ,OAAOssH,MAAOC,QAASH,EAAUG,UAAWjuF,MAAK,IAC9Et+B,OAAOwqG,OAAOnxF,EAAK5I,KAK9B07G,EADAK,GAAarrH,OAAS,EACfqrH,GAAarqH,MAEb,IAAIsqH,SACfN,EAAK17G,KAAOA,EACZ07G,EAAK9yG,IAAMA,EACX8yG,EAAK7yG,KAAOA,EACZ6yG,EAAKznH,IAAMA,SACX67G,EAAUxmG,OAAOs9B,OAAO80E,EAAK5L,QAASA,IACvB9vG,KACS,MAApB8vG,EAAQwK,WACRxK,EAAQwK,SAAW,GACQ,MAA3BxK,EAAQ2K,kBACR3K,EAAQ2K,gBAAkBlL,aAAahjE,QACvC+rE,GACAoD,EAAKpD,WAAW/gH,IAAI+gH,GACxBoD,EAAK/rH,OAAS8E,KACdinH,EAAKO,aAAeb,EAEpB,IAGIV,EAHAwB,EAAc,IAAI1C,EACtB/kH,KAAKmlH,UAAU1qG,IAAIusG,EAAYC,GAG/B,IACIhB,EAAUwB,EAAYx/F,KAAKg/F,EAC9B,CACD,MAAOtsG,IACF0gG,EAAQmL,QAAU1rH,OAAO2rH,WAAWtyG,EAAKwG,GAE1CsrG,EAAU/sF,QAAQC,QAAQ,KAC7B,CAED,OAAO8sF,EAAQ7sF,MAAKogB,IACZA,aAAmBrnC,UACnBqnC,EAAQtlC,cAAcC,EAAKC,IAGL,MAAtB6yG,EAAK5L,QAAQz7C,OAAiBqnD,EAAK5L,QAAQz7C,QAC3C9kE,OAAO4sH,UAAUd,EAAcptE,EAASqrE,EAAQC,GAEpDmC,EAAK5Z,SAAS1uD,QAAQ,EAAG,GAGzBsoE,EAAKnD,WAAW/4G,OAAOyuC,GAChBA,KACRmuE,OAAM/gG,KACJy0F,EAAQmL,QAAU1rH,OAAO2rH,WAAWtyG,EAAKyS,IAEhB,MAAtBqgG,EAAK5L,QAAQz7C,OAAiBqnD,EAAK5L,QAAQz7C,QAC3C9kE,OAAO4sH,UAAUd,EAAc,KAAM/B,EAAQC,GAEjDmC,EAAKnD,WAAW/4G,OAAO,MAChB,QACRquB,MAAM/5B,IACLW,KAAKmlH,UAAUyC,OAAOZ,GACtBC,EAAKl/G,QACLu/G,GAAajrH,KAAK4qH,GACS,GAAvBjnH,KAAKmlH,UAAUpyG,MACf/S,KAAKmR,MAAMjG,MAAMuD,UACdpP,I,CAQfi7G,MAAsCnmG,EAAayvG,EAAgBC,EAA+BxI,G,MAE9F,IAAI4L,EAAqB,CACrBtD,YAAaxvG,EACbA,IAAKA,EACLyvG,YAAaA,EACbiC,SAA0B,QAAhBnjH,GALd24G,EAAUA,GAAW6K,IAKCL,gBAAQ,IAAAnjH,IAAI,EAC9BmlH,SAAU,EACVhE,WAAYA,EACZC,WAAY,MAahB,OAXIzI,EAAQ2K,kBACRiB,EAAKjB,iBAAkB,EACvBiB,EAAKzC,oBAAsBnJ,EAAQmJ,qBAEnCnJ,EAAQiC,OACR2J,EAAK3J,KAAOjC,EAAQiC,MACpBjC,EAAQyM,UACRb,EAAKY,UAAY,GACjBxM,EAAQmL,SACRS,EAAKT,QAAS,GAEXtqF,QAAQU,KAAKH,WAAWtoB,GAAKilB,MAAKjlB,GAC9B,IAAI+kB,SAASC,IAChB8tF,EAAK9yG,IAAMkpB,IAAIE,UAAUppB,GACzB8yG,EAAKnD,WAAa3qF,EAClBn5B,KAAK+nH,gBAAgBd,EAAK,K,CAK9Bc,gBAAgB7rH,GACpB,GAAI8D,KAAKqlH,cAActyG,KAAO/S,KAAKklH,UAE/B,YADAllH,KAAKgoH,SAAS9rH,GAIlB,IAAI2pH,EAAW3pH,EAAK2pH,SACpB,GAAgB,GAAZA,EACA7lH,KAAKolH,OAAO/oH,KAAKH,OAChB,CACD,IAAIuC,EAAIuB,KAAKolH,OAAO56G,WAAUqW,GAAKA,EAAEglG,SAAWA,KACtC,GAANpnH,EACAuB,KAAKolH,OAAO16G,OAAOjM,EAAG,EAAGvC,GAEzB8D,KAAKolH,OAAO/oH,KAAKH,EACxB,C,CAGG8rH,SAAS9rH,GACb8D,KAAKqlH,cAAcviH,IAAI5G,GACvB,IAAIiY,EAAMkpB,IAAI4qF,cAAc/rH,EAAKiY,KAEjC,GAAwB,SAApBjY,EAAK0nH,YAAwB,CAC7B,IAAIsE,EAAmBptH,OAAOqtH,aAAajsH,EAAKiY,KAChD,GAAI+zG,EAAkB,CAClB,KAAMA,aAA4BnuG,aAE9B,YADA/Z,KAAKooH,aAAalsH,EAAMgsH,GAK5BhsH,EAAKohH,KAAO4K,CACf,CAEGhsH,EAAKohH,KACLxiH,OAAOutH,WAAWhE,cAAcnoH,EAAMA,EAAKohH,KAAMphH,EAAKynH,YAAaznH,EAAK2nH,YAAY,CAAC3hH,EAAW0kB,KACvF1kB,IACDhG,EAAK2rH,UAAY,GACrB7nH,KAAKooH,aAAalsH,EAAMgG,EAAM0kB,EAAM,IAGnC1qB,EAAK8pH,gBACVlrH,OAAOutH,WAAW9D,gBAAgBroH,EAAMiY,EAAKjY,EAAKynH,YAAaznH,EAAK2nH,YAAY,CAAC3hH,EAAW0kB,KACnF1kB,IACDhG,EAAK8pH,iBAAkB,GAC3BhmH,KAAKooH,aAAalsH,EAAMgG,EAAM0kB,EAAM,IAIxC9rB,OAAOutH,WAAWnE,MAAMhoH,EAAMiY,EAAKjY,EAAKynH,YAAaznH,EAAK2nH,YAAY,CAAC3hH,EAAW0kB,IAC9E5mB,KAAKooH,aAAalsH,EAAMgG,EAAM0kB,IAEzC,MACI,GAAwB,SAApB1qB,EAAK0nH,YACV9oH,OAAOutH,WAAW5D,MAAMvoH,EAAMiY,EAAKjY,EAAKynH,YAAaznH,EAAK2nH,YAAY,CAAC3hH,EAAW0kB,IAC9E5mB,KAAKooH,aAAalsH,EAAMgG,EAAM0kB,SAEjC,CACD,IAAIshG,EAAmBptH,OAAOqtH,aAAajsH,EAAKiY,KAChD,GAAI+zG,EAEA,YADAloH,KAAKooH,aAAalsH,EAAMgsH,GAI5BptH,OAAOutH,WAAW3E,OAAOxnH,EAAMiY,EAAKjY,EAAKynH,YAAaznH,EAAK0nH,YAAa1nH,EAAK2nH,YAAY,CAAC3hH,EAAW0kB,IACjG5mB,KAAKooH,aAAalsH,EAAMgG,EAAM0kB,IACrC,C,CAGGwhG,aAAalsH,EAAoBs9C,EAAc5yB,GACnD5mB,KAAKqlH,cAAcuC,OAAO1rH,GACtBs9C,GACIx5C,KAAKqlH,cAActyG,KAAO/S,KAAKklH,WAAallH,KAAKolH,OAAOnpH,OAAS,GACjE+D,KAAKgoH,SAAShoH,KAAKolH,OAAOnpD,SAE1B//D,EAAK2nH,YACL3nH,EAAK2nH,WAAW,GAEpB3nH,EAAK4nH,WAAWtqE,KAEO,GAAlBt9C,EAAK2rH,UAAkB3rH,EAAK2rH,SAAW7nH,KAAKglH,UACjD9oH,EAAK2rH,WACA3rH,EAAKsqH,QACNlvH,QAAQmc,MAAM,iBAAiBvX,EAAKiY,QAAQjY,EAAK2rH,aACrDhtH,MAAMO,YAAYqP,KAAKzK,KAAKilH,WAAYjlH,KAAMA,KAAK+nH,gBAAiB,CAAC7rH,IAAO,MAG3EA,EAAKsqH,QAAU1rH,OAAO2rH,WAAWvqH,EAAKiY,KACnCjY,EAAK2nH,YACL3nH,EAAK2nH,WAAW,GAEhB7jH,KAAKqlH,cAActyG,KAAO/S,KAAKklH,WAAallH,KAAKolH,OAAOnpH,OAAS,GACjE+D,KAAKgoH,SAAShoH,KAAKolH,OAAOnpD,SAE9B//D,EAAK4nH,WAAW,M,CAIhB9sH,kBAAkBmd,EAAa5I,GAEnC,IACI+8G,EAIAzD,EACAC,EACAC,EAPAvlH,EAAM2U,EAAIwoB,WAAW,SAAW,MAAQj/B,MAAM8gC,iBAAiBrqB,GASnE,GAPI3U,EAAIvD,OAAS,IACbqsH,EAAWxtH,OAAO2qH,OAAOjmH,IAMzB+L,EAAM,CACN,IAAIg6G,EAAYzqH,OAAO0qH,QAAQj6G,GAC/B,IAAKg6G,EAED,OADAzqH,OAAOvD,KAAK,wBAAwBgU,MAC7Bq5G,GAEXC,EAASU,EAAUV,OAEnB,IAAIpmH,EAAY,EACZ6pH,EACIA,EAAS,GAAGzD,SAAWA,IACmC,IAAtDpmH,EAAI6pH,EAAS99G,WAAUqW,GAAKA,EAAEgkG,SAAWA,MAC7CC,EAAY,GAALrmH,EACPsmH,EAAauD,EAAS7pH,GAAGsmH,aAIzBD,GAAO,EACPC,EAAaQ,EAAUR,aAI3BD,EAAOv5G,GAAQzQ,OAAOotB,UACtB68F,EAAaQ,EAAUR,WAE9B,KACI,CACD,IAAKuD,EAED,OADAxtH,OAAOvD,KAAK,uCAAuC4c,MAC5CywG,GAIXE,GAAO,EACPD,EAASyD,EAAS,GAAGzD,OACrBE,EAAauD,EAAS,GAAGvD,UAC5B,CAED,MAAO,CAAEvlH,MAAKslH,OAAMD,SAAQE,a,CAGxB/tH,kBAAkBmd,EAAawG,GACnC3a,KAAKzI,KAAK,kBAAkB4c,IAAOwG,E,CAGhC3jB,YAAYuxH,EAAa5tG,GAC5B,IAAI6tG,EAAS7tG,EAAOA,EAAI8tG,MAAQ9tG,EAAI8tG,MAAQ9tG,EAAO,GAC/C6tG,IACAA,EAAS,KAAOA,GACpBlxH,QAAQC,KAAKgxH,EAAMC,E,CAQvBxxH,cAAcmd,EAAa5I,GAGvB,OAFA4I,EAAMkpB,IAAIE,UAAUppB,GACVrZ,OAAOisH,QAAQ5yG,EAAK5I,IAChB,I,CAGVvU,eAAemd,EAAa5I,GAChC,IAII6F,EAJAs3G,EAAS5tH,OAAO6tH,UAAUx0G,GAC9B,GAAKu0G,EAAL,CAIA,GAAIn9G,EAAM,CACN,IAAIg6G,EAA0BzqH,OAAO0qH,QAAQj6G,GAC7C,IAAKg6G,EACD,OAEJ,GAAqB,GAAjBmD,EAAOzsH,OACHysH,EAAO,IAAMnD,EAAUV,SACvBzzG,EAAMs3G,EAAO,QAEhB,CACD,IAAIjqH,EAAIiqH,EAAOxqH,QAAQqnH,EAAUV,SACvB,GAANpmH,IACA2S,EAAMs3G,EAAOjqH,EAAI,GACxB,CACJ,MAEG2S,EAAMs3G,EAAO,GAEjB,OAAKt3G,aAAee,UAAaf,EAAIlQ,eACjC,EAEOkQ,CAxBS,C,CA8BxBpa,oBAAoBmd,GAChB,OAAOrZ,OAAOwqG,OAAOnxF,EAAKrZ,OAAOotB,U,CAMrClxB,sBAA6Cmd,GACzC,OAAOrZ,OAAOwqG,OAAOnxF,EAAKrZ,OAAOotB,U,CAQrClxB,gBAAgBmd,GACZ,OAAOrZ,OAAOwqG,OAAOnxF,EAAKrZ,OAAOssH,M,CAGrC9hB,OAAOnxF,EAAa5I,GAChB,OAAOzQ,OAAOwqG,OAAOnxF,EAAK5I,E,CAG9BvU,mBAAmCmd,G,MAC/B,OAAsC,QAA5BzR,EAAS5H,OAAOwqG,OAAOnxF,UAAK,IAAAzR,OAAA,EAAAA,EAAEgF,Q,CAQ5C1Q,gBAAgBmd,EAAajS,EAAWqJ,GACpC4I,EAAMkpB,IAAIE,UAAUppB,GACpB,IAAIy0G,EAAU9tH,OAAO4rH,WAAWvyG,EAAK5I,GACf,MAAlBq9G,EAAQ/D,QACR/pH,OAAO4sH,UAAUvzG,EAAKjS,EAAM0mH,EAAQ/D,OAAQ+D,EAAQ9D,K,CAMpD9tH,iBAAiBmd,EAAajS,EAAW2iH,EAAgBC,GAC7D,IAAIlK,EAAoB9/G,OAAO6tH,UAAUx0G,GACzC,GAAI2wG,EACIlK,GACAA,EAAM,GAAKiK,EACXjK,EAAM,GAAK14G,GAGX04G,EAAQ9/G,OAAO6tH,UAAUx0G,GAAO,CAAC0wG,EAAQ3iH,QAG7C,GAAI04G,EAAO,CACP,IAAIn8G,EAAIm8G,EAAMpwG,WAAUqW,GAAKA,IAAMgkG,KACzB,GAANpmH,EACAm8G,EAAMn8G,EAAI,GAAKyD,EAEf04G,EAAMv+G,KAAKwoH,EAAQ3iH,EAC1B,MAEG04G,EAAQ9/G,OAAO6tH,UAAUx0G,GAAO,CAAC,UAAM5C,EAAWszG,EAAQ3iH,E,CAItE4kH,SAAS3yG,EAAajS,EAAWqJ,GAC7BzQ,OAAOgsH,SAAS3yG,EAAKjS,EAAMqJ,E,CAQ/BvU,gBAAgBmd,EAAa00G,GACzB10G,EAAMkpB,IAAIE,UAAUppB,GACpBrZ,OAAOguH,UAAU30G,EAAK00G,E,CAQ1B7zG,SAASb,EAAa00G,GAClB10G,EAAMkpB,IAAIE,UAAUppB,GACpBrZ,OAAOguH,UAAU30G,EAAK00G,E,CAMlB7xH,iBAAiBmd,EAAa00G,GAClC,IAAIjO,EAAQ9/G,OAAO6tH,UAAUx0G,GAC7B,GAAKymG,EAGL,GAAIiO,EAAU,CACV,GAAIjO,EAAM,IAAMiO,EACQ,GAAhBjO,EAAM3+G,cACCnB,OAAO6tH,UAAUx0G,GAExBymG,EAAM,QAAKrpG,MAEd,CACD,IAAI9S,EAAIm8G,EAAM18G,QAAQ2qH,GACtB,IAAU,GAANpqH,EACA,OAEgB,GAAhBm8G,EAAM3+G,QAA2B,MAAZ2+G,EAAM,UACpB9/G,OAAO6tH,UAAUx0G,GAExBymG,EAAMlwG,OAAOjM,EAAI,EAAG,EAC3B,CAEIoqH,aAAoB12G,WAAc02G,EAAS3nH,WAC5C2nH,EAAS1lH,SAEhB,MAIG,UAFOrI,OAAO6tH,UAAUx0G,GAEpBymG,EAAM3+G,OAAS,EACf,IAAK,IAAIwC,EAAI,EAAGA,EAAIm8G,EAAM3+G,OAAQwC,GAAK,EAAG,CACtC,IAAIwmC,EAAM21E,EAAMn8G,GACXwmC,aAAe9yB,WAAc8yB,EAAI/jC,WAClC+jC,EAAI9hC,SAEX,KAEA,CACD,IAAI8hC,EAAM21E,EAAM,GACX31E,aAAe9yB,WAAc8yB,EAAI/jC,WAClC+jC,EAAI9hC,SAEX,C,CAUT4lH,gBAAgB50G,GACZA,EAAMkpB,IAAIE,UAAUppB,GACpB,IAAIymG,EAAQ9/G,OAAO6tH,UAAUx0G,GAC7B,IAAKymG,EACD,OACJ,IAAIrnG,EAAMqnG,EAAM,GAChB,GAAIrnG,aAAegkB,QACfhkB,EAAI4nB,qBAEH,GAAI5nB,aAAekoG,cACpB,IAAK,IAAI1jF,KAAOxkB,EAAIooG,SAChB5jF,EAAIoD,e,CAShBnkC,gBAAgBmd,EAAa2xG,GACzB3xG,EAAMkpB,IAAIE,UAAUppB,GACpB,IAAIsG,EAAM3f,OAAO+rH,SAASf,GACrBrrG,IACDA,EAAM3f,OAAO+rH,SAASf,GAAS,IAAIl1G,KACvC6J,EAAI3X,IAAIqR,E,CAOZnd,uBAAuB8uH,GACnB,IAAIrrG,EAAM3f,OAAO+rH,SAASf,GAC1B,GAAIrrG,EACA,IAAK,IAAI9a,KAAK8a,EACV3f,OAAOguH,UAAUnpH,E,CAK7BqpH,gBACI,GAA0B,GAAtBhpH,KAAKolH,OAAOnpH,OACZ,OAEJ,IAAIoC,EAAM2B,KAAKolH,OAAO9+G,SACtBtG,KAAKolH,OAAOnpH,OAAS,EACrB,IAAK,IAAIC,KAAQmC,EACbnC,EAAK4nH,WAAW,K,CAOxBmF,iBAAiBC,GACb,GAAKA,EACL,IAAK,IAAIzqH,EAAY,EAAG+G,EAAY0jH,EAAKjtH,OAAQwC,EAAI+G,EAAG/G,IACpDuB,KAAKmpH,gBAAgBD,EAAKzqH,G,CAQlC0qH,gBAAgBh1G,GACZA,EAAMkpB,IAAIE,UAAUppB,GACpB,IAAI1V,EAAIuB,KAAKolH,OAAO56G,WAAUtO,GAAQA,EAAKiY,KAAOA,IAClD,IAAU,GAAN1V,EAAS,CACT,IAAIvC,EAAO8D,KAAKolH,OAAO3mH,GACvBuB,KAAKolH,OAAO16G,OAAOjM,EAAG,GACtBvC,EAAK4nH,WAAW,KACnB,C,CAgBLsF,YAAY9pH,EAAcqmH,EAAkCC,GACxD,IAAIvY,EACAgc,EASJ,GAPsB,iBAAlB,GACAA,EAAY1D,EACZtY,EAAWuY,GAEXvY,EAAWsY,EAGX0D,EAAW,CACNA,EAAU/0G,SAAS,OACpB+0G,GAAa,KACjB,IAAIC,EAAkBhqH,EAAO,IAE7B,OADA+9B,IAAIgB,UAAUirF,GAAWD,EAClBrpH,KAAKupH,mBAAmBjqH,EAAM+tG,EACxC,CAAM,CACH,GAAI9xG,QAAQG,UACR,OAAOw9B,QAAQC,UACnB,IAAIqwF,EAAY,KAChB,GAAI3uH,MAAMG,QAAQ6/C,WAEd2uE,EAAO3uH,MAAMG,QAAQY,OAAOkhH,QACzB,GAAIjiH,MAAMG,QAAQmgD,aAErBquE,EAAO3uH,MAAMG,QAAQY,OAAO6tH,QACzB,GAAI5uH,MAAMG,QAAQsgD,cAAgBzgD,MAAMG,QAAQqgD,cAAgBxgD,MAAMG,QAAQggD,aAEjFwuE,EAAO3uH,MAAMG,QAAQY,OAAO8tH,OACzB,KAAI7uH,MAAMG,QAAQugD,iBAIrB,OAAOv7C,KAAKupH,mBAAmBjqH,EAAM+tG,GAFrCmc,EAAO3uH,MAAMG,QAAQY,OAAOwrE,EAG/B,CAED,OAAOpnE,KAAK2pH,iBAAiBH,EAAMlqH,EAAM+tG,GAAUj0E,MAAK,IACpDp5B,KAAKupH,mBAAmBjqH,EAAM+tG,IAErC,C,CAIGsc,iBAAiBC,EAAWC,EAAkBxc,GAClD,OAAMwc,EAAS5tH,OAAS,EACjB,IAAIi9B,SAAQ,CAACC,EAA+B2wF,KAC3BF,EAAKG,eAAe,CACpCh1G,KAAM80G,EACNG,QAAUz2G,IACN4lB,EAAQ5lB,EAAI,EAEhBud,KAAOvd,IACH4lB,EAAQ5lB,EAAI,IAIX02G,kBAAkB12G,IACvB85F,GAAYA,EAAS95F,EAAI,GAC3B,IAd6B2lB,QAAQC,S,CAmBvCowF,mBAAmBjqH,EAAcukH,GAIrC,OAHIvkH,EAAKrD,OAAS,IACdqD,GAAQ,KAELU,KAAKs6G,MAAMh7G,EAAO,kBAAmB,OAAQukH,GAAYzqF,MAAK8wF,IACjE,IAAI3nF,EAAuB,GACvBwR,EAAMm2E,EAAW3nF,MACrB,IAAK,IAAI5iC,KAAKo0C,EACV,GAAIp0C,EAAE1D,OAAS,EACX,IAAK,IAAIilC,KAAQ6S,EAAIp0C,GACjB4iC,EAAMlmC,KAAKsD,EAAI,IAAMuhC,QAGzB,IAAK,IAAIA,KAAQ6S,EAAIp0C,GACjB4iC,EAAMlmC,KAAK6kC,GAIvB,GAAIgpF,EAAWC,KAAM,CACjB,IAAI1rH,EAAI,EACR,IAAK,IAAIkB,KAAKuqH,EAAWC,KACZ,MAALxqH,IACA09B,IAAI7hC,QAAQ+mC,EAAM9jC,IAAMkB,GAC5BlB,GAEP,CAED,IAAK,IAAIqF,KAAKomH,EAAWE,OAAQ,CAC7B,IAAIlpF,EAAOqB,EAAMz+B,EAAErF,GACnB,OAAQqF,EAAEo4D,GACN,KAAK,EACDhgC,QAAQU,KAAKP,QAAQ6E,GAAQp9B,EAC7B,MACJ,KAAK,EACDs2G,iBAAiBiQ,SAASnpF,EAAMp9B,EAAE42G,OAAQ52G,EAAE62G,QAC5C,MACJ,KAAK,EACDz+E,QAAQU,KAAKR,cAAct4B,EAAEg5B,YAAcoE,EAC3C,MACJ,KAAK,EACDpmC,OAAOqtH,aAAa9qF,IAAIE,UAAU2D,IAASp9B,EAGtD,I,EAr6BFhJ,OAAIwvH,KAAG,OAEPxvH,OAAIonH,KAAG,OAEPpnH,OAAGulH,IAAG,MAENvlH,OAAMyvH,OAAG,cAETzvH,OAAK0vH,MAAG,QAER1vH,OAAK2vH,MAAG,QAER3vH,OAAK4vH,MAAG,QAER5vH,OAAKssH,MAAG,QAERtsH,OAAI6vH,KAAG,OAEP7vH,OAAG8vH,IAAG,MAEN9vH,OAAS+vH,UAAG,YAEZ/vH,OAAIgwH,KAAG,OAEPhwH,OAAQiwH,SAAG,WAEXjwH,OAASotB,UAAG,YAEZptB,OAAWkwH,YAAG,YAEdlwH,OAAamwH,cAAG,gBAEhBnwH,OAAiBowH,kBAAG,oBAEpBpwH,OAAUqwH,WAAG,UAEbrwH,OAAKswH,MAAG,QASCtwH,OAAM2qH,OAA2C,GACjD3qH,OAAO0qH,QAAqC,GAErD1qH,OAAAutH,WAAa,IAAI7E,WAoCjB1oH,OAAQ+rH,SAAoC,GAE5C/rH,OAAS6tH,UAAkC,GAE3C7tH,OAAYqtH,aAA2B,GAk1BlD,MAAMZ,SAaFhrH,cACIyD,KAAKq7G,QAAU,GACfr7G,KAAK6jH,WAAa,IAAI55G,SACtBjK,KAAK8jH,WAAa,IAAI75G,SACtBjK,KAAKqtG,SAAW,IAAIuO,eAAevO,GAAqBrtG,KAAK6jH,WAAW94G,OAAOsiG,I,CAG5EtlG,QACH,IAAK,IAAIpI,KAAKK,KAAKq7G,eACRr7G,KAAKq7G,QAAQ17G,GACxBK,KAAK6jH,WAAWl5G,QAChB3K,KAAK8jH,WAAWn5G,QAChB3K,KAAKqtG,SAAStlG,QACd/H,KAAKwnH,aAAe,I,EAI5B,MAAMF,GAAgC,GAChCpB,GAA6B,G,MCrhCtBmF,SAETr0H,uBAAuBg6E,EAAiB3mD,EAAiByL,GACrDA,EAAE,GAAKk7C,EAAE,GAAK3mD,EAAE,GAChByL,EAAE,GAAKk7C,EAAE,GAAK3mD,EAAE,GAChByL,EAAE,GAAKk7C,EAAE,GAAK3mD,EAAE,E,CAGpBrzB,YAAYygE,EAAclvD,EAAe+iH,GACrC,OAAO7zD,GAAQ,EAAI6zD,GAAU/iH,EAAQ+iH,C,CAGzCt0H,oBAAoB8mB,EAAiBja,EAAWgd,GAC5CA,EAAE,GAAK/C,EAAE,GAAKja,EACdgd,EAAE,GAAK/C,EAAE,GAAKja,EACdgd,EAAE,GAAK/C,EAAE,GAAKja,C,CAGlB7M,mBAAmBg6E,EAAiB3mD,EAAiB6xC,EAAWpmC,GAC5D,IAAIgyC,EAAakJ,EAAE,GAAIjJ,EAAaiJ,EAAE,GAAIkN,EAAalN,EAAE,GACzDl7C,EAAE,GAAKgyC,EAAK5L,GAAK7xC,EAAE,GAAKy9C,GACxBhyC,EAAE,GAAKiyC,EAAK7L,GAAK7xC,EAAE,GAAK09C,GACxBjyC,EAAE,GAAKooD,EAAKhiB,GAAK7xC,EAAE,GAAK6zD,E,CAG5BlnF,mBAAmBg6E,EAAiB3mD,EAAiB6xC,EAAWpmC,GAC5D,IAAIgyC,EAAakJ,EAAE,GAAIjJ,EAAaiJ,EAAE,GAAIkN,EAAalN,EAAE,GAAImN,EAAanN,EAAE,GAC5El7C,EAAE,GAAKgyC,EAAK5L,GAAK7xC,EAAE,GAAKy9C,GACxBhyC,EAAE,GAAKiyC,EAAK7L,GAAK7xC,EAAE,GAAK09C,GACxBjyC,EAAE,GAAKooD,EAAKhiB,GAAK7xC,EAAE,GAAK6zD,GACxBpoD,EAAE,GAAKqoD,EAAKjiB,GAAK7xC,EAAE,GAAK8zD,E,CAG5BnnF,4BAA4B4M,EAAiB2nH,EAAiB1nH,EAAiB2nH,EAAiBtvD,EAAW52D,EAAmBmmH,GAE1H,IAEIC,EAAeC,EAAeC,EAAeC,EAAgBC,EAF7DhkD,EAAalkE,EAAE2nH,EAAU,GAAIxjD,EAAankE,EAAE2nH,EAAU,GAAIrtC,EAAat6E,EAAE2nH,EAAU,GAAIptC,EAAav6E,EAAE2nH,EAAU,GAAIvjD,EAAankE,EAAE2nH,EAAU,GAAIvjD,EAAapkE,EAAE2nH,EAAU,GAAItqC,EAAar9E,EAAE2nH,EAAU,GAAIO,EAAaloH,EAAE2nH,EAAU,GAiCxO,OA5BAG,EAAQ7jD,EAAKE,EAAKD,EAAKE,EAAKiW,EAAKgD,EAAK/C,EAAK4tC,GAE/B,IACRJ,GAASA,EACT3jD,GAAMA,EACNC,GAAMA,EACNiZ,GAAMA,EACN6qC,GAAMA,GAGL,EAAMJ,EAAS,MAEhBD,EAAQnuH,KAAKk7F,KAAKkzB,GAClBC,EAAQruH,KAAKqH,IAAI8mH,GACjBG,EAAStuH,KAAKqH,KAAK,EAAMs3D,GAAKwvD,GAASE,EACvCE,EAASvuH,KAAKqH,IAAIs3D,EAAIwvD,GAASE,IAI/BC,EAAS,EAAM3vD,EACf4vD,EAAS5vD,GAGb52D,EAAImmH,EAAU,GAAKI,EAAS/jD,EAAKgkD,EAAS9jD,EAC1C1iE,EAAImmH,EAAU,GAAKI,EAAS9jD,EAAK+jD,EAAS7jD,EAC1C3iE,EAAImmH,EAAU,GAAKI,EAAS3tC,EAAK4tC,EAAS5qC,EAC1C57E,EAAImmH,EAAU,GAAKI,EAAS1tC,EAAK2tC,EAASC,EAEnCzmH,C,CAYXtO,mBAAmB84G,EAAYC,EAAYn8D,EAAY8jD,GACnD,OAAOn6F,KAAKyuH,MAAMt0B,EAAKqY,EAAIn8D,EAAKk8D,GAAMvyG,KAAKC,GAAK,G,CASpDxG,oBAAoB4M,EAAWC,GAC3B,OAAID,GAAKC,EAAU,EACZA,EAAID,EAAI,GAAK,C,CASxB5M,sBAAsB4M,EAAWC,GAC7B,OAAID,GAAKC,EAAU,EACZA,EAAID,GAAK,EAAI,C,CASxB5M,uBAAuB4M,EAAQC,GAC3B,OAAOnF,WAAWmF,GAAKnF,WAAWkF,E,CAStC5M,yBAAyB4M,EAAQC,GAC7B,OAAOnF,WAAWkF,GAAKlF,WAAWmF,E,CAUtC7M,iBAAiBoV,EAAa6/G,GAAoB,EAAOC,GAAoB,GACzE,IAAIC,EAMJ,OAJIA,EADAF,EACWC,EAAWb,SAASe,gBAAkBf,SAASgB,aAE/CH,EAAWb,SAASiB,kBAAoBjB,SAASkB,eAEzD,SAAU3oH,EAAQC,GACrB,OAAOsoH,EAASvoH,EAAEwI,GAAMvI,EAAEuI,GAC9B,C,EChIF,MAAOogH,uBAAuB7T,cAchCp8G,cACI8V,aACqCd,IAAjCi7G,eAAeC,gBACfD,eAAeC,cAAgBpB,SAASqB,UAAU,SAAS,GAAO,G,CAdlE11H,qBAAqB21H,EAAaC,GACtC,OAAOD,EAAOpiH,MAAQqiH,EAAQriH,K,CAuBlCsiH,OAAOC,EAAgBC,GACnB/sH,KAAKgtH,WAAaF,EAClB9sH,KAAKitH,eAAiBF,EACtB/sH,KAAKq5G,SAAW,IAAO0T,EAAcG,UACjCH,EAAcI,QACdntH,KAAK+jC,OAASgpF,EAAcjiH,MAC5B9K,KAAKw5G,QAAUuT,EAAcK,OAC7BptH,KAAKqtH,YAAcN,EAAcO,qBAEjCttH,KAAKqtH,YAAc,GACnBrtH,KAAKutH,kBAELR,EAAcI,QAAS,EACvBJ,EAAcK,OAASptH,KAAKw5G,QAC5BuT,EAAcjiH,MAAQ9K,KAAK+jC,OAC3BgpF,EAAcO,mBAAqBttH,KAAKqtH,Y,CAOhD1iH,QAII,OAHA0H,MAAM1H,QACN3K,KAAKgtH,WAAa,KAClBhtH,KAAKitH,eAAiB,KACfjtH,I,CAODi6G,gBAAgBh8G,GACtB,GAAK+B,KAAKitH,eAAV,CACIhvH,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ+B,KAAK+jC,SAAQ9lC,EAAQ+B,KAAK+jC,QACtC,IAA8CtlC,EAA1C+uH,EAAextH,KAAKitH,eAAeO,MAAkBhvH,EAAcgvH,EAAMvxH,OAC7E,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKytH,oBAAoBD,EAAM/uH,GAAIR,EALb,C,CAgBpBwvH,oBAAoBlsH,EAAWmsH,EAAeZ,EAAiB,MAChEA,IAAWA,EAAY9sH,KAAKgtH,YACjC,IAAI3iH,EAAcyiH,EAAUvrH,EAAK8I,QACjC,GAAKA,EAAL,CAIA,IAA+B+B,EAAauhH,EAAmB1vH,EAClCQ,EADzBk8G,EAAcp5G,EAAKo5G,OACnBiT,EAAcrsH,EAAKqsH,KAAiBpvH,EAAcovH,EAAK3xH,OAC3D,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IAIbR,GAFJ0vH,EAAahT,EADbvuG,EAAMwhH,EAAKnvH,KAEIxC,OAASyxH,EACZC,EAAWD,GAEXC,EAAWA,EAAW1xH,OAAS,GAE3CoO,EAAO+B,GAAOnO,EAElB,IAEI4vH,EAFAC,EAAiBvsH,EAAKusH,QAG1B,GAAW,IAFXtvH,EAAMsvH,EAAQ7xH,QAGd,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,SAGQ8S,KADzBs8G,EAAYlT,EADZvuG,EAAM0hH,EAAQrvH,KAEAivH,IACVrjH,EAAO+B,IAAQ/B,EAAO+B,GAAK4hC,MAAM3jC,EAAQwjH,EAAUH,GArB1D,C,CA+BGH,kBACJ,GAAKvtH,KAAKitH,eAAV,CACA,IAA8CxuH,EAAuCsvH,EAAjFP,EAAextH,KAAKitH,eAAeO,MAAkBhvH,EAAcgvH,EAAMvxH,OAE7E,IADA+D,KAAK+jC,OAAS,EACTtlC,EAAI,EAAGA,EAAID,EAAKC,IACjBsvH,EAAQP,EAAM/uH,GACduB,KAAKguH,oBAAoBD,GAE7B/tH,KAAK+jC,QAAU,CAPW,C,CAcpBiqF,oBAAoBzsH,GAC1B,IAAqC6K,EAAa6hH,EAA9CC,EAAiB3sH,EAAK4sH,UAA2C9jH,EAAiB9I,EAAK8I,OAS3F,IAAK+B,KARA7K,EAAKo5G,SAAQp5G,EAAKo5G,OAAS,IAC3Bp5G,EAAKqsH,KACLrsH,EAAKqsH,KAAK3xH,OAAS,EADRsF,EAAKqsH,KAAO,GAGvBrsH,EAAKusH,QACLvsH,EAAKusH,QAAQ7xH,OAAS,EADRsF,EAAKusH,QAAU,GAG7BvsH,EAAK6sH,aAAY7sH,EAAK6sH,WAAa,IAC5BF,EAAW,CACnB,IAAIG,GAAuC,GAAtBjiH,EAAIlO,QAAQ,MAMjC,GALA+vH,EAAaC,EAAU9hH,GACnBiiH,IAAOjiH,EAAMA,EAAImzB,OAAO,EAAGnzB,EAAInQ,OAAS,IACvCsF,EAAKo5G,OAAOvuG,KACb7K,EAAKo5G,OAAOvuG,GAAO,IAElBiiH,EASA,CACD9sH,EAAKusH,QAAQzxH,KAAK+P,GAElB,IADA,IAAIi2B,EAAa9gC,EAAKo5G,OAAOvuG,GACpB3N,EAAY,EAAGA,EAAIwvH,EAAWhyH,OAAQwC,IAAK,CAChD,IAAII,EAAYovH,EAAWxvH,GAC3B4jC,EAAIxjC,EAAK0L,OAAS1L,EAAKZ,MACnBY,EAAK0L,MAAQvK,KAAK+jC,SAAQ/jC,KAAK+jC,OAASllC,EAAK0L,MACpD,CACJ,MAhBOvK,KAAKgtH,YAAchtH,KAAKgtH,WAAW3iH,KACnC9I,EAAK6sH,WAAWhiH,GAAOpM,KAAKgtH,WAAW3iH,GAAQ+B,IAGnD6hH,EAAWvnD,KAAK8lD,eAAeC,eAC/BlrH,EAAKqsH,KAAKvxH,KAAK+P,GACfpM,KAAKsuH,yBAAyBL,EAAY1sH,EAAKo5G,OAAOvuG,GAAMA,EAAK/B,EAYxE,C,CAMLkkH,aACI,GAAKvuH,KAAKgtH,YACLhtH,KAAKitH,eAAV,CACA,IAA8CxuH,EAC1CsvH,EACAK,EAFAZ,EAAextH,KAAKitH,eAAeO,MAAkBhvH,EAAcgvH,EAAMvxH,OAG7E,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IAGjB,GADA2vH,GADAL,EAAQP,EAAM/uH,IACK2vH,WACnB,CACA,IAEIhiH,EAFA/B,EAAcrK,KAAKgtH,WAAWe,EAAM1jH,QACxC,GAAKA,EAEL,IAAK+B,KAAOgiH,EACR/jH,EAAO+B,GAAOgiH,EAAWhiH,EALZ,CAPK,C,CAqBtBkiH,yBAAyBH,EAAkBxT,EAAevuG,EAAa/B,GAC3E,IAAI5L,EAAWD,EAAc2vH,EAAUlyH,OAAS,EAEhD,IADA0+G,EAAO1+G,OAASkyH,EAAU3vH,GAAK+L,MAAQ,EAClC9L,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKwuH,cAAcL,EAAU1vH,IAC7BuB,KAAKyuH,sBAAsBN,EAAU1vH,GAAI0vH,EAAU1vH,EAAI,GAAIk8G,GAEpD,GAAPn8G,IACAm8G,EAAO,GAAKwT,EAAU,GAAGlwH,MACrB+B,KAAKqtH,cAAartH,KAAKqtH,YAAYc,EAAU,GAAG5jH,QAAS,IAEjEvK,KAAKwuH,cAAcL,EAAU1vH,G,CAMzB+vH,cAAcE,GACdA,EAASnV,OAA2B,IAAlBmV,EAASnV,OAAav5G,KAAK65G,SAAS6U,EAASnV,MAAOmV,EAASnkH,M,CAO/EkkH,sBAAsBE,EAAiBC,EAAevvH,GAC1D,IAAIZ,EAAWowH,EACX5zG,EAAgB0zG,EAAWpkH,MAAO4Q,EAAcyzG,EAASrkH,MACzDukH,EAAqBH,EAAW1wH,MAChC8wH,EAAiBH,EAAS3wH,MAAQ0wH,EAAW1wH,MAC7Cw+D,EAAethD,EAAMF,EACrB0/F,EAAgB36G,KAAKqtH,YAEzB,GADIlyG,EAAMnb,KAAK+jC,SAAQ/jC,KAAK+jC,OAAS5oB,GACjCwzG,EAAW5gB,MAGX,IADe,OADf8gB,EAAW/jB,KAAa6jB,EAAWK,gBACdH,EAAU/jB,KAAKmkB,YAC/BxwH,EAAIwc,EAAOxc,EAAI0c,EAAK1c,IACrBY,EAAOZ,GAAKowH,EAAQpwH,EAAIwc,EAAO6zG,EAAYC,EAAQtyD,GAC/Ck+C,IAAQA,EAAOl8G,IAAK,QAG5B,IAAKA,EAAIwc,EAAOxc,EAAI0c,EAAK1c,IACrBY,EAAOZ,GAAKqwH,EAGhBnU,IACAA,EAAOgU,EAAWpkH,QAAS,EAC3BowG,EAAOiU,EAASrkH,QAAS,GAE7BlL,EAAOuvH,EAASrkH,OAASqkH,EAAS3wH,K,EC3PpC,MAAOixH,yBAAyB1C,eAAtCjwH,c,oBAYcyD,KAAamvH,cAAQ,E,CAgBvBC,eAAeC,GACdrvH,KAAKsvH,YAAWtvH,KAAKsvH,UAAY,IACtCtvH,KAAKuvH,kBAAkBF,EAAOG,QAAUH,EAAO9jB,MAC3C8jB,EAAOG,QAAQxvH,KAAKsvH,UAAUjzH,KAAKgzH,EAAOG,QAC9C,IAAIvvF,EAAgBovF,EAAOjoB,MAC3B,GAAInnE,EAAQ,CACR,IAAIxhC,EAAWD,EAAcyhC,EAAOhkC,OACpC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKovH,eAAenvF,EAAOxhC,GAElC,C,CAIGgxH,gBAAgBC,GAIhB,IAAItjH,EADR,GAFApM,KAAK6sH,OAAO,KAAM6C,GAClB1vH,KAAK2vH,qBACD3vH,KAAKmvH,cAEL,IAAK/iH,KAAOpM,KAAKmvH,cACbnvH,KAAKmvH,cAAc/iH,GAAO,I,CAM9BujH,qBACJ,IACIlxH,EAGAmxH,EAJAC,EAAe,GACJrxH,EAAcwB,KAAK8K,MAC9BglH,EAA0B9vH,KAAKqtH,YAGnC,IAFKyC,IAAkBA,EAAmB,IAErCrxH,EAAI,EAAGA,EAAID,EAAKC,KACbqxH,EAAiBrxH,IAAOmxH,IACxBA,EAAa5vH,KAAK+vH,oBAAoBtxH,IAE1CoxH,EAAMxzH,KAAKuzH,GAEf5vH,KAAKgwH,OAASH,C,CAIRE,oBAAoBrC,GAC1B,IAAIpjG,EAAc,IAAI45E,SAItB,OAHKgrB,iBAAiBe,cAAaf,iBAAiBe,YAAc,IAAItsH,QACtE3D,KAAKkwH,mBAAmBlwH,KAAKmwH,UAAWzC,EAAOwB,iBAAiBe,YAAa3lG,GAEtEA,C,CAGD4lG,mBAAmB3uH,EAAWmsH,EAAe0C,EAAyB9lG,EAAa8gB,EAAgB,GACzG,IAAIilF,EAIAC,EAGAC,GANJF,EAASrwH,KAAKwwH,UAAUjvH,EAAKiuH,QAAUxvH,KAAKywH,oBAAoBlvH,EAAKiuH,OAAQ9B,EAAO1tH,KAAKwwH,UAAUjvH,EAAKiuH,UAC5FkB,kBACRL,EAAOK,gBAAkB,IAAI/sH,QAEjC2sH,EAAmBD,EAAOK,gBAC1B/sH,OAAOumE,IAAImmD,EAAO/5D,UAAW85D,EAAiBE,GAE9C,IAAIK,EAAwBN,EAAOjlF,MAAQA,EAC3C,KAAIulF,EAAgB,KAApB,CACIN,EAAOO,OACPL,EAAOvwH,KAAK6wH,iBAAiBR,EAAOO,SAE5BN,EAAiBjsH,mBACjBimB,EAAEwsC,YAAYy5D,EAAM,EAAG,EAAGF,EAAOhoH,MAAOgoH,EAAO/nH,OAAQgoH,EAAkBK,GACzEN,EAAOK,gBAAkB,MAEzBpmG,EAAEwsC,YAAYy5D,EAAMD,EAAiBtsH,GAAIssH,EAAiBrsH,GAAIosH,EAAOhoH,MAAOgoH,EAAO/nH,OAAQ,KAAMqoH,IAI7G,IAEIlyH,EAAWD,EAFXyhC,EAAgB1+B,EAAK6lG,MACzB,GAAKnnE,EAGL,IADAzhC,EAAMyhC,EAAOhkC,OACRwC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKkwH,mBAAmBjwF,EAAOxhC,GAAIivH,EAAO4C,EAAkBhmG,EAAGqmG,EAjBzC,C,CAyBpBG,gBAAgBT,EAAqB/lG,GAC3C,GAAK+lG,EAAOO,KAAZ,CACA,IAAIL,EAAgBvwH,KAAK6wH,iBAAiBR,EAAOO,MACjD,GAAKL,EAAL,CACA,IAAIQ,EAAqBV,EAAO/5D,UAChCy6D,EAAW1sH,mBAEM0sH,EAAW5sH,YAIxBmmB,EAAEwsC,YAAYy5D,EAAMQ,EAAW/sH,GAAI+sH,EAAW9sH,GAAIosH,EAAOhoH,MAAOgoH,EAAO/nH,OAAQ,KAAM+nH,EAAOjlF,OAF5F9gB,EAAEwsC,YAAYy5D,EAAM,EAAG,EAAGF,EAAOhoH,MAAOgoH,EAAO/nH,OAAQyoH,EAAWvpH,QAAS6oH,EAAOjlF,MAN3E,CAFO,C,CAcZ4lF,oBAAoBzvH,EAAWmsH,EAAepjG,GACpD,IAAI+lG,EAEJ,GADAA,EAASrwH,KAAKwwH,UAAUjvH,EAAKiuH,QAAUxvH,KAAKywH,oBAAoBlvH,EAAKiuH,OAAQ9B,EAAO1tH,KAAKwwH,UAAUjvH,EAAKiuH,SACnGjuH,EAAK6lG,MAAV,CAIA,IAEI6pB,EAEAC,EAEAC,EANAJ,EAAqBV,EAAO/5D,UAChCy6D,EAAW1sH,kBAIX6sH,GAFAD,GAAiBF,EAAW5sH,eAEkB,GAAjB4sH,EAAW/sH,IAA4B,GAAjB+sH,EAAW9sH,KAE9DktH,EAAUJ,EAAsB,aAAqB,GAAhBV,EAAOjlF,QAChC9gB,EAAEskB,OACM,GAAhByhF,EAAOjlF,OAAY9gB,EAAE8gB,MAAMilF,EAAOjlF,OACjC6lF,EACIC,GAAU5mG,EAAE9lB,UAAUusH,EAAW/sH,GAAI+sH,EAAW9sH,IADrCqmB,EAAEgsC,UAAUy6D,EAAWvpH,SAG3C,IACI+oH,EASI9xH,EAAWD,EAVfyhC,EAAgB1+B,EAAK6lG,MASzB,GAPIipB,EAAOO,OACPL,EAAOvwH,KAAK6wH,iBAAiBR,EAAOO,QAEhCtmG,EAAE7C,UAAU8oG,EAAM,EAAG,EAAGF,EAAOhoH,MAAOgoH,EAAO/nH,QAIjD23B,EAGA,IADAzhC,EAAMyhC,EAAOhkC,OACRwC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKgxH,oBAAoB/wF,EAAOxhC,GAAIivH,EAAOpjG,GAI/C6mG,EACA7mG,EAAE4C,UAEG+jG,EAEMC,GACP5mG,EAAE9lB,WAAWusH,EAAW/sH,IAAK+sH,EAAW9sH,IAFxCqmB,EAAEgsC,UAAUy6D,EAAWvpH,QAAQnB,SAnCtC,MAFGrG,KAAK8wH,gBAAgBT,EAAQ/lG,E,CAgD3B0jG,oBAAoBzsH,GAC1B8Q,MAAM27G,oBAAoBzsH,GAC1BvB,KAAKmvH,cAAc5tH,EAAK8I,QAAU9I,C,CAI5B6vH,gBAAgBC,GACtB,OAAOrxH,KAAKmvH,cAAckC,E,CAIpBC,WAAWrsF,EAAUsF,EAAemjF,EAAe6D,GACzD,IAAIx0H,EAAamyH,iBAAiBsC,UAClCz0H,EAAId,OAASsuC,EAAOtuC,OACpB,IAAIwC,EAAWD,EAAc+rC,EAAOtuC,OACpC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IACjB1B,EAAI0B,GAAKuB,KAAKyxH,WAAWxsF,EAAKsF,EAAO9rC,GAAG,GAAIivH,EAAOnjF,EAAO9rC,GAAG,GAAI8yH,GAErE,OAAOx0H,C,CAIH00H,WAAWxsF,EAAU74B,EAAashH,EAAegE,EAAcH,GACnE,GAAInlH,KAAO64B,EAAK,CACZ,IAAI0sF,EAAc1sF,EAAI74B,GAEtB,OADIshH,GAASiE,EAAK11H,SAAQyxH,EAAQiE,EAAK11H,OAAS,GACzCgpC,EAAI74B,GAAKshH,EACnB,CACD,OAAIthH,KAAOmlH,EACAA,EAAKnlH,GAETslH,C,CAQDjB,oBAAoBY,EAAgB3D,EAAe3wH,GACpDA,IACDA,EAAM,IAAI60H,aACT70H,EAAIu5D,UAGLv5D,EAAIu5D,UAAUhyD,WAFdvH,EAAIu5D,UAAY,IAAI3yD,OAKxB,IAAIpC,EAAYvB,KAAKoxH,gBAAgBC,GACrC,IAAK9vH,EAAM,OAAOxE,EAClB,IAGIsL,EAAeC,EAWfyvB,EAdA85F,EAAiBtwH,EAAKo5G,OACtBpwE,EAAgBvqC,KAAKsxH,WAAWO,EAAW3C,iBAAiB4C,gBAAiBpE,EAAO1tH,KAAKuvH,kBAAkB8B,IAC3Gl9G,EAAco2B,EAAO,GAErBosB,EAAapsB,EAAO,GAAIqsB,EAAarsB,EAAO,GAC5CwnF,EAAaxnF,EAAO,IAAKynF,EAAaznF,EAAO,IAC7CqoC,EAAaroC,EAAO,GAAIsoC,EAAatoC,EAAO,GAC5C7lC,EAAiB6lC,EAAO,GACxBuzD,EAAgBvzD,EAAO,IAAKwzD,EAAgBxzD,EAAO,IACvDliC,EAAQkiC,EAAO,GACfjiC,EAASiiC,EAAO,GACH,GAATliC,GAAwB,GAAVC,IAAa6L,EAAM,OACvB,GAAV9L,IAAaA,EAAQ,IACV,GAAXC,IAAcA,EAAS,GAE3BvL,EAAI6zH,KAAOz8G,EACXpX,EAAIsL,MAAQA,EACZtL,EAAIuL,OAASA,EACT6L,KACA4jB,EAAM/3B,KAAK6wH,iBAAiB18G,KAEnB9L,IACDA,EAAQ0vB,EAAIvL,aACXlkB,IACDA,EAASyvB,EAAItL,eAEjBn1B,QAAQC,KAAK,aAAc4c,EAAK,6BAIxCpX,EAAIquC,MAAQb,EAAO,IAEnB,IAAItpB,EAAYlkB,EAAIu5D,UACV,GAANy7D,IACAp7D,EAAKo7D,EAAK1pH,GAEJ,GAAN2pH,IACAp7D,EAAKo7D,EAAK1pH,GAEJ,GAANquD,GAAiB,GAANC,GACX31C,EAAEzc,WAAWmyD,GAAKC,GAEtB,IAAI+V,EAAa,KACjB,GAAIjoE,GAAiB,IAAPkuE,GAAmB,IAAPC,GAAYirB,GAASC,EAAO,EAClDpxB,EAAKuiD,iBAAiB+C,SACnB3tH,WACHqoE,EAAGxoE,aAAc,EACjB,IAAIgxG,EAAiC,mBAAlBzwG,EAASo5F,GACxBsX,EAAiC,mBAAlB1wG,EAASq5F,GACxB71B,EAAa3qE,KAAKoH,IAAIywG,GACtBC,EAAc93G,KAAKqH,IAAIwwG,GACvBjtC,EAAa5qE,KAAKqH,IAAIuwG,GACtBG,EAAc/3G,KAAKoH,IAAIwwG,GAC3BxoC,EAAG/oE,EAAIgvE,EAAK1K,EACZyE,EAAG9oE,EAAI+uE,EAAKyiC,EACZ1oC,EAAG7oE,GAAK+uE,EAAK1K,EACbwE,EAAG5oE,EAAI8uE,EAAKyiC,EACZ3oC,EAAG3oE,GAAK2oE,EAAG1oE,GAAK,CACnB,CAOD,OANI0oE,IACA1rD,EAAItd,OAAOumE,IAAIjpD,EAAG0rD,EAAI1rD,IAG1BA,EAAEzc,UAAU+lC,EAAO,GAAIA,EAAO,IAEvBxtC,C,CAKD8zH,iBAAiB18G,GACvB,OAAOrZ,OAAOwqG,OAAOnxF,E,CAIzB+9G,WAAW7C,EAAa8C,EAAkB,MACtC,GAAI9C,EAAO+C,WAAY,CACnBpyH,KAAKuvH,kBAAoB,GACzBvvH,KAAKwwH,UAAY,GACbxwH,KAAKsvH,YAAWtvH,KAAKsvH,UAAUrzH,OAAS,GAC5C+D,KAAKmwH,UAAYd,EACjBrvH,KAAKovH,eAAeC,GACpB,IAGI5wH,EACA4zH,EAJAC,EAAc,GACdC,EAAiB,GACjBH,EAAoB/C,EAAO+C,WAChB5zH,EAAc4zH,EAAWn2H,OAExC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IAGjB,GAFA4zH,EAAQD,EAAW3zH,GACnBuB,KAAKw5G,QAAU,OACX2Y,GAAWA,GAAWE,EAAMt9G,OAG3Bs9G,EAAL,CAEA,IACIryH,KAAKyvH,gBAAgB4C,EACxB,CAAC,MAAOxxG,GACLvpB,QAAQC,KAAK,wBAA0B86H,EAAMt9G,KAAO,4BACpD/U,KAAKgwH,OAAS,EACjB,CACD,IAAIwC,EAAc,GAClBA,EAAOnZ,SAAW,IAAOgZ,EAAiB,UAC1CG,EAAO7X,OAAS36G,KAAKgwH,OACrBwC,EAAOpF,OAASptH,KAAKw5G,QACrBgZ,EAAOz9G,KAAOs9G,EAAMt9G,KACpBw9G,EAAQl2H,KAAKm2H,GACbF,EAAOD,EAAMt9G,MAAQy9G,CAbjB,CAeRxyH,KAAKyyH,cAAgBF,EACrBvyH,KAAK0yH,aAAeJ,CACvB,CACDpD,iBAAiBsC,UAAUv1H,OAAS,C,CAIxC02H,YAAYjD,GACR,IAAIkD,EAAeC,EACnBD,EAAWlD,EAAQoD,SACnBD,EAAOnD,EAAQmD,YACRnD,EAAQoD,gBACRpD,EAAQmD,KACf7yH,KAAKuvH,kBAAoB,GACzBvvH,KAAKwwH,UAAY,GACbxwH,KAAKsvH,YAAWtvH,KAAKsvH,UAAUrzH,OAAS,GAC5C+D,KAAKmwH,UAAYyC,EACjB5yH,KAAKovH,eAAewD,GACpB5yH,KAAKw5G,QAAU,KACf,IACIx5G,KAAKyvH,gBAAgBoD,EACxB,CAAC,MAAOhyG,GACLvpB,QAAQC,KAAK,wBAA0Bs7H,EAAK99G,KAAO,4BACnD/U,KAAKgwH,OAAS,EACjB,CACD,IAAIwC,EAAc9C,EAKlB,OAJA8C,EAAOnZ,SAAW,IAAOwZ,EAAgB,UACzCL,EAAO7X,OAAS36G,KAAKgwH,OACrBwC,EAAOpF,OAASptH,KAAKw5G,QACrBgZ,EAAOz9G,KAAO89G,EAAK99G,KACZy9G,C,CAIXO,aAAa1D,GACT,GAAIA,EAAO+C,WAAY,CACnB,IAGI3zH,EACA4zH,EAJAC,EAAc,GACdC,EAAiB,GACjBH,EAAoB/C,EAAO+C,WAChB5zH,EAAc4zH,EAAWn2H,OAExC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IAEjB,GADA4zH,EAAQD,EAAW3zH,GACnB,CACA,IAAI+zH,EAAc,GAClBA,EAAOz9G,KAAOs9G,EAAMt9G,KACpBy9G,EAAOK,KAAOR,EACdG,EAAOM,SAAWzD,EAClBkD,EAAQl2H,KAAKm2H,GACbF,EAAOD,EAAMt9G,MAAQy9G,CANT,CAQhBxyH,KAAKyyH,cAAgBF,EACrBvyH,KAAK0yH,aAAeJ,CACvB,C,CAIKjmD,SACNrsE,KAAKyyH,cAAgB,KACrBzyH,KAAK0yH,aAAe,KACpB1yH,KAAKgwH,OAAS,KACdhwH,KAAKwwH,UAAY,I,CAGrBx5H,4BAA4Bg8H,GAExB,IAAIj2H,EAGJ,OAJKmyH,iBAAiB+D,KAAI/D,iBAAiB+D,GAAK,IAAI/D,kBAEpDnyH,EAAMmyH,iBAAiB+D,GAAGN,YAAYK,GACtC9D,iBAAiB+D,GAAG5mD,SACbtvE,C,CAGX/F,0BAA0B04H,GAGtB,IAAI3yH,EAKJ,OAPKmyH,iBAAiB+D,KAAI/D,iBAAiB+D,GAAK,IAAI/D,kBACpDA,iBAAiB+D,GAAGF,aAAarD,IAEjC3yH,EAAM,IACF01H,cAAgBvD,iBAAiB+D,GAAGR,cACxC11H,EAAI21H,aAAexD,iBAAiB+D,GAAGP,aACvCxD,iBAAiB+D,GAAG5mD,SACbtvE,C,EApZMmyH,iBAAe4C,gBAAU,CAAC,CAAC,OAAQ,MAAO,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,GAAI,CAAC,UAAW,GAAI,CAAC,SAAU,GAAI,CAAC,SAAU,GAAI,CAAC,SAAU,GAAI,CAAC,SAAU,GAAI,CAAC,WAAY,GAAI,CAAC,QAAS,GAAI,CAAC,QAAS,GAAI,CAAC,QAAS,GAAI,CAAC,UAAW,GAAI,CAAC,UAAW,IAEhP5C,iBAASsC,UAAU,GAwRrBtC,iBAAA+C,QAAkB,IAAItuH,OAgIzC,MAAMiuH,YAANr1H,cAMIyD,KAAKorC,MAAW,C,EC9Vd,MAAO8nF,kBAAkBva,cAiB3Bp8G,cACI8V,QAPIrS,KAASmzH,WAAG,EAQhBnzH,KAAK25G,gBAAgB35G,K,CAMzBmD,QAAQqjG,GAAwB,GAC5BxmG,KAAKslE,OACLjzD,MAAMlP,QAAQqjG,GACdxmG,KAAKozH,QAAU,KACfpzH,KAAKw5G,QAAU,I,CAYnBR,KAAK/9F,EAAa,EAAGkjC,GAAgB,EAAMppC,EAAe,IAClDA,GAAM/U,KAAKqzH,oBAAoBt+G,GAAM,GACzC1C,MAAM2mG,KAAK/9F,EAAOkjC,EAAMppC,E,CAIlBs+G,oBAAoBt+G,EAAcu+G,GAAoB,GAE5D,GADItzH,KAAKs9B,OAAMvoB,EAAO/U,KAAKs9B,KAAO,IAAMvoB,GACpCA,GAAQm+G,UAAUK,UAAUx+G,GAAO,CACnC,IAAIs9G,EAAaa,UAAUK,UAAUx+G,GAgBrC,OAfIs9G,aAAiBhhH,OACjBrR,KAAKozH,QAAUF,UAAUK,UAAUx+G,GACnC/U,KAAK+jC,OAAS/jC,KAAKozH,QAAQn3H,SAEvBo2H,EAAMS,WAENI,UAAUK,UAAUx+G,GAAQm6G,iBAAiBsE,qBAAqBnB,GAClEA,EAAQa,UAAUK,UAAUx+G,IAEhC/U,KAAKozH,QAAUf,EAAM1X,OACrB36G,KAAK+jC,OAAS/jC,KAAKozH,QAAQn3H,OAEtB+D,KAAK+4G,oBAAmB/4G,KAAK64G,UAAYwZ,EAAMhZ,UACpDr5G,KAAKw5G,QAAUx5G,KAAKyzH,YAAYpB,EAAMjF,UAEnC,CACV,CAGD,OAFQkG,GAAUh8H,QAAQovB,IAAI,iBAAkB3R,IAEzC,C,CAIH0+G,YAAYrG,GAChB,IAAKA,EAAQ,OAAO,KACpB,IAAIrwH,EAEAqP,EACJ,IAAKA,KAFLrP,EAAM,GAEMqwH,EACRrwH,EAAIqP,GAAO1O,MAAMy3C,UAAU,GAAIi4E,EAAOhhH,IAE1C,OAAOrP,C,CAMDu8G,aACFt5G,KAAK63D,UAAY73D,KAAKk2D,OAAO9qB,MAAQ,KAAQprC,KAAKozH,SAClD/gH,MAAMinG,Y,CAOJW,gBAAgBh8G,GAClB+B,KAAKozH,UAASpzH,KAAK08E,SAAW18E,KAAKozH,QAAQn1H,G,CAM/C08G,aACA,OAAO36G,KAAKozH,O,CAGZzY,WAAO18G,GACP+B,KAAKozH,QAAUn1H,EACXA,IACA+B,KAAK+jC,OAAS9lC,EAAMhC,OAEhB+D,KAAKk5G,aAAal5G,KAAKqzH,oBAAoBrzH,KAAKk5G,aAAa,GACjEl5G,KAAKuK,MAAQvK,KAAKgjG,O,CAYtBjkG,aACA,OAAOiB,KAAK8tE,O,CAGZ/uE,WAAOd,GACP+B,KAAK8tE,QAAU7vE,EAEVA,EAEIA,EAAMC,QAAQ,SAAW,EAC9B8B,KAAK0zH,cAAcz1H,GACdA,EAAM0+B,WAAW,WAAa1+B,EAAMC,QAAQ,UAAY,GAAKD,EAAMC,QAAQ,QAAU,GAAKD,EAAMC,QAAQ,UAAY,EACzH8B,KAAK2zH,UAAU11H,GAEf+B,KAAK4zH,WAAW31H,EAAMM,MAAM,MAN5ByB,KAAK2K,O,CAYTkpH,aAAS51H,GACT+B,KAAKmzH,UAAYl1H,EACbA,EACA+B,KAAKg5G,OAELh5G,KAAKslE,M,CAGTuuD,eACA,OAAO7zH,KAAKmzH,S,CAOhBxoH,QAMI,OALA0H,MAAM1H,QACN3K,KAAKslE,OACLtlE,KAAK08E,SAAW,KAChB18E,KAAKozH,QAAU,KACfpzH,KAAKw5G,QAAU,KACRx5G,I,CAWX4zH,WAAW1K,EAAa4K,EAAoB,IAOxC,OANA9zH,KAAKs9B,KAAO,GACPt9B,KAAKqzH,oBAAoBS,KAC1B9zH,KAAK26G,OAASuY,UAAUK,UAAUO,GAAaZ,UAAUK,UAAUO,GAAaZ,UAAUa,aAAa7K,EAAM4K,KAE5G9zH,KAAKi5G,YAAcj5G,KAAKmzH,WACzBnzH,KAAKg5G,OACFh5G,I,CAaX2zH,UAAUx/G,EAAa4uG,EAAkB,KAAM+Q,EAAoB,IAE/D,GADA9zH,KAAKs9B,KAAO,IACPt9B,KAAKqzH,oBAAoBS,GAAY,CACtC,IAAIE,SAAYC,IACR9/G,IAAQ8/G,IACRj0H,KAAK26G,OAASuY,UAAUK,UAAUO,GAAaZ,UAAUK,UAAUO,GAAaZ,UAAUa,aAAa5/G,EAAK2/G,IACvG9zH,KAAKi5G,YAAcj5G,KAAKmzH,WACzBnzH,KAAKg5G,OACL+J,GAAQA,EAAOzpF,MACtB,EAEDx+B,OAAOo5H,SAAS//G,GAAM6/G,SAAS7/G,GAC9BtZ,MAAMK,OAAO+sB,KAAK9T,EAAK+2F,QAAQxjG,OAAO,KAAMssH,SAAU,CAAC7/G,IAAO,KAAMrZ,OAAOssH,MACnF,CACD,OAAOpnH,I,CAcX0zH,cAAcv/G,EAAa4uG,EAAkB,KAAMhpC,EAAgB,MAC/D/5E,KAAKs9B,KAAOnpB,EAcZ,OAZKnU,KAAKk5G,cAAal5G,KAAKk5G,YAAc,IADnBl5G,KAEZqzH,oBAAoBrzH,KAAKk5G,cAFbl5G,KASbqzH,oBAAoBrzH,KAAKk5G,aAAa,GAC5Cl5G,KAAKuK,MAAQ,EACTw4G,GAAQA,EAAOzpF,QARdygD,GAASj/E,OAAOo5H,SAASn6C,GAC1B/5E,KAAKm0H,mBAAmBhgH,EAAK4uG,EAAQhpC,GAErCl/E,MAAMK,OAAO+sB,KAAK8xD,EAAOmxB,QAAQxjG,OAAO1H,KAAMA,KAAKm0H,mBAAoB,CAAChgH,EAAK4uG,EAAQhpC,IAAS,KAAMj/E,OAAOssH,OAO5GpnH,I,CAIHm0H,mBAAmBhgH,EAAa4uG,EAAkB,KAAMhpC,EAAgB,OACxEA,GAAUj/E,OAAOo5H,SAASn6C,GAK9Bl/E,MAAMK,OAAOo/G,MAAMnmG,EAAK,QAAQilB,MAAKl3B,IACjC,GAAIlC,KAAKs9B,OAASnpB,EACd,OAEJ,IAAKjS,EASD,YANIgxH,UAAUK,UAAUp/G,EAAM,OAC1BnU,KAAKqzH,oBAAoBrzH,KAAKk5G,aAAa,GAC3Cl5G,KAAKuK,MAAQ,EACbvK,KAAK45G,cACDmJ,GAAQA,EAAOzpF,QAK3B,IAAI+4F,EACJ,GAAKa,UAAUK,UAAUp/G,EAAM,KAoB3BnU,KAAKqzH,oBAAoBrzH,KAAKk5G,aAAa,GAC3Cl5G,KAAKuK,MAAQ,EACbvK,KAAK45G,kBAtB4B,CAEjC,IAAI8V,EAAeR,iBAAiBkF,mBAAmBlyH,GACvD,IAAKwtH,EAAS,OAEd,IAEI2E,EAFAC,EAAiB5E,EAAQ+C,cACzBj0H,EAAc81H,EAAQr4H,OAE1B,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IACrB4zH,EAAQiC,EAAQ71H,GAChBy0H,UAAUK,UAAUp/G,EAAM,IAAMk+G,EAAMt9G,MAAQs9G,EACzCgC,IAAUA,EAAWhC,GAE1BgC,IACAnB,UAAUK,UAAUp/G,EAAM,KAAOkgH,EACjCr0H,KAAKqzH,oBAAoBrzH,KAAKk5G,aAAa,GAC3Cl5G,KAAKuK,MAAQ,GAEjBvK,KAAK45G,aACR,CAKGmJ,GAAQA,EAAOzpF,KAAK,IA7CxBhiC,QAAQC,KAAK,mBAAqBwiF,E,CAuD1C/iF,oBAAoBmd,EAAwBY,GACxC,IAAI1W,EACJ,GAAoB,iBAAhB,EAA0B,CAC1B,IAAI07E,EAAuBj/E,OAAOo5H,SAAiB//G,GACnD,GAAI4lE,GAASA,EAAM4gC,OAAO1+G,OAAQ,CAC9B,IAAI0+G,EAAS5gC,EAAM4gC,OACnBt8G,EAAM,GACN,IAAK,IAAII,EAAY,EAAG+G,EAAYm1G,EAAO1+G,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC3D,IAAI6rB,EAAc,IAAI45E,SACtB55E,EAAE7C,UAAUkzF,EAAOl8G,GAAI,EAAG,GAC1BJ,EAAIhC,KAAKiuB,EACZ,CACJ,CACJ,MAAM,GAAInW,aAAe9C,MAEtB,IADAhT,EAAM,GACDI,EAAI,EAAG+G,EAAI2O,EAAIlY,OAAQwC,EAAI+G,EAAG/G,KAC/B6rB,EAAI,IAAI45E,UACNmB,UAAUlxF,EAAI1V,GAAI,EAAG,GACvBJ,EAAIhC,KAAKiuB,GAIjB,OADIvV,IAAMm+G,UAAUK,UAAUx+G,GAAQ1W,GAC/BA,C,CAQXrH,kBAAkBoV,GACd,IACI6nC,EADA2rB,EAAaszD,UAAUK,UAEvBgB,EAAenoH,EAAM,IACzB,IAAK6nC,KAAO2rB,EACJ3rB,IAAQ7nC,GAA6B,IAAtB6nC,EAAI/1C,QAAQq2H,WACpBrB,UAAUK,UAAUt/E,E,CAMvCE,qBACI9hC,MAAM8hC,qBAEIn0C,KAAMw0H,SACPx0H,KAAK8tE,SACN9tE,KAAK4zH,WAAiB5zH,KAAMw0H,eACnBx0H,KAAMw0H,O,EA1VpBtB,UAASK,UAAQ,GCpFtB,MAAOkB,mBAAmBtiH,SA0B5B5V,cACI8V,OAAM,GAzBVrS,KAAIovB,KAA4B,GAKhCpvB,KAAQ00H,SAAW,GAEnB10H,KAAa20H,eAAY,EACzB30H,KAAI40H,MAAY,EAChB50H,KAAQ60H,SAAW,EACnB70H,KAAU80H,WAAW,GACrB90H,KAAa+0H,cAAG,C,CAOhB/9H,gBAAgBsI,EAAc0oB,GAC1BntB,MAAMK,OAAO+sB,KAAK3oB,EAAMxE,OAAO6vH,MAAMvxF,MAAKmkB,IACtCv1B,GAAYA,EAASmjF,QAAQ5tD,EAAK,G,CAa1Cy3E,UAAUC,EAAU1uG,G,MAChB,GAAW,MAAP0uG,GAA0B,MAAX1uG,EAAiB,OACpCvmB,KAAKumB,QAAUA,EACfA,EAAQhS,gBAER,IACI2yC,EAAO+tE,EAAIjU,QAAQ,QACvBhhH,KAAK00H,SAAWxtE,EAAKs5D,WAAW,OAAQ,IACxCxgH,KAAK20H,cAAgBztE,EAAK05D,YAAY,iBACtC5gH,KAAK80H,WAAa5tE,EAAKs5D,WAAW,aAAcxgH,KAAK00H,UAC9B,GAAnB10H,KAAK80H,aACL90H,KAAK80H,WAAa90H,KAAK00H,UAE3B,IACIQ,EADkBhuE,EAAKq5D,cAAc,UAAW,IAClBhiH,MAAM,KACxCyB,KAAKm1H,QAAU,CAACr2H,SAASo2H,EAAa,IAAKp2H,SAASo2H,EAAa,IAAKp2H,SAASo2H,EAAa,IAAKp2H,SAASo2H,EAAa,KAEvH,IAAIpjD,GAA4B,QAApBpvE,EAAAuyH,EAAIjU,QAAQ,gBAAQ,IAAAt+G,OAAA,EAAAA,EAAEiqC,SAAS,UAAW,GAClDkoF,EAAW,EACXzlG,EAAOpvB,KAAKovB,KAChB,IAAK,IAAI3wB,EAAI,EAAG+G,EAAIssE,EAAM71E,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1C,IAAI22H,EAAKtjD,EAAMrzE,GACXmC,EAAKw0H,EAAG5U,WAAW,MAEnBj4F,EAAU6sG,EAAG5U,WAAW,WAnBZ,EAoBZh4F,EAAU4sG,EAAG5U,WAAW,WApBZ,EAqBZ6U,EAAUD,EAAG5U,WAAW,YArBZ,EAuBZthH,EAAIk2H,EAAG5U,WAAW,KAClBrhH,EAAIi2H,EAAG5U,WAAW,KAClBn4G,EAAQ+sH,EAAG5U,WAAW,SACtBl4G,EAAS8sH,EAAG5U,WAAW,UAEvBzoF,EAAMR,QAAQ7vB,OAAO6e,EAASrnB,EAAGC,EAAGkJ,EAAOC,EAAQigB,EAASC,GAEjD,GAAX6sG,IACAA,EAAUhtH,GACdgtH,GAAWr1H,KAAK+0H,cAChBF,EAAWt3H,KAAKuL,IAAI+rH,EAAUQ,GAE9BjmG,EAAKxuB,GAAM,CAAE1B,EAAG,EAAGC,EAAG,EAAGkJ,QAAOC,SAAQ+sH,UAAS9uG,QAASwR,EAC7D,CAGG/3B,KAAK60H,SADLA,EAAW,EACKA,EAEA70H,KAAK00H,SAEpBtlG,EAAK,MACNA,EAAK,IAAM,CAAElwB,EAAG,EAAGC,EAAG,EAAGk2H,QAAS93H,KAAKgd,MAAsB,GAAhBva,KAAK00H,UAAkB10H,KAAK+0H,e,CAMvEpgH,mB,MACN,GAAI3U,KAAKumB,QAAS,CACd,IAAK,IAAI5mB,KAAKK,KAAKovB,KACK,QAApB1sB,EAAA1C,KAAKovB,KAAKzvB,GAAG4mB,eAAO,IAAA7jB,KAAES,UAE1BnD,KAAKumB,QAAQ/R,mBACbxU,KAAKovB,KAAO,KACZpvB,KAAKumB,QAAU,KACfvmB,KAAKm1H,QAAU,IAClB,C,CAQLG,aAAap1F,EAAcw0F,GACvB,IAAIzmG,EAAI,EACR,IAAK,IAAIxvB,EAAI,EAAG+G,EAAI06B,EAAKjkC,OAAQwC,EAAI+G,EAAG/G,IAAK,CACzC,IAAI6rB,EAAItqB,KAAKovB,KAAK8Q,EAAKnhB,WAAWtgB,IAClC,GAAI6rB,EAAG,CACH,IAAI7lB,EAAQzE,KAAK20H,cAAiBD,EAAW10H,KAAK00H,SAAY,EAC9DzmG,GAAK1wB,KAAKoB,MAAM2rB,EAAE+qG,QAAU5wH,EAC/B,CACJ,CACD,OAAOwpB,C,CAMXsnG,YAAYb,GACR,OAAgB,MAAZA,GAAoB10H,KAAK20H,cAClBp3H,KAAKoB,MAAMqB,KAAK60H,UAAYH,EAAW10H,KAAK00H,WAE5C10H,KAAK60H,Q,CAMpBW,aAAad,GACT,OAAgB,MAAZA,GAAoB10H,KAAK20H,cAClBp3H,KAAKoB,MAAMqB,KAAK80H,YAAcJ,EAAW10H,KAAK00H,WAE9C10H,KAAK80H,U,EC5IlB,MAAOW,wBAAwBjJ,eAArCjwH,c,oBAYYyD,KAAS01H,UAAQ,E,CAUrBrrH,WAAO+Q,GACHpb,KAAK0lF,SAAS1lF,KAAK0lF,QAAQ9zE,IAAI6jH,gBAAgBE,aAAc31H,KAAMA,KAAK41H,eAC5E51H,KAAK0lF,QAAUtqE,EACXpb,KAAK0lF,SAAS1lF,KAAK0lF,QAAQj0E,GAAGgkH,gBAAgBE,aAAc31H,KAAMA,KAAK41H,eAC3E51H,KAAK61H,W,CAGLxrH,aACA,OAAOrK,KAAK0lF,O,CAIRkwC,cAAcE,GACdA,IAAW91H,MACfA,KAAKslE,M,CAOLywD,cAAU5kH,GACVnR,KAAKg2H,WAAa7kH,EACbA,GACLnR,KAAK61H,W,CAIDA,YACC71H,KAAK0lF,SAAY1lF,KAAKg2H,aAC3Bh2H,KAAK25G,gBAAgB35G,KAAK0lF,SAC1B1lF,KAAK0lF,QAAQj0E,GAAGzR,KAAKg2H,WAAYh2H,KAAMA,KAAKi2H,e,CAIxCA,gBACJj2H,KAAKg5G,KAAK,GAAG,E,CAQjBA,KAAK/9F,EAAa,EAAGkjC,GAAgB,EAAMppC,EAAe,IACjD/U,KAAK0lF,UAEV1lF,KAAK0lF,QAAQv0E,MAAMskH,gBAAgBE,aAAc,CAAC31H,OAClDA,KAAKk2H,kBACL7jH,MAAM2mG,KAAK/9F,EAAOkjC,EAAMppC,G,CAIpBmhH,kBAEJ,IAAIz3H,EAAWD,EAEX4N,EAHJ,GAAKpM,KAAKm2H,SAIV,IAFA33H,EAAMwB,KAAKm2H,SAASl6H,OAEfwC,EAAI,EAAGA,EAAID,EAAKC,IACjB2N,EAAMpM,KAAKm2H,SAAS13H,GACpBuB,KAAK01H,UAAUtpH,GAAOpM,KAAK0lF,QAAQt5E,E,CAQvCgqH,gBAAYC,GAEZ,GADAr2H,KAAKs2H,aAAev/H,WAAWM,SAASg/H,GACpCr2H,KAAKs2H,aAAc,CACnB,IAAIC,EAAev2H,KAAKs2H,aAA6B,OACrD,GAAIC,EAAQ,CACR,IAAI7G,EAAiB6G,EAAmB,WACxC,GAAI7G,GAAWA,EAAQ,GAAI,CACvB,IAAIxtH,EAAYwtH,EAAQ,GACxB1vH,KAAK6sH,OAAO,GAAI3qH,GACZA,EAAKsrH,OAAStrH,EAAKsrH,MAAM,KACzBxtH,KAAKm2H,SAAWj0H,EAAKsrH,MAAM,GAAGI,KAErC,CACJ,CACJ,C,CAOD4I,eAAWD,GACX,GAAIA,EAAQ,CACR,IAAI7G,EAAiB6G,EAAmB,WACxC,GAAI7G,GAAWA,EAAQ,GAAI,CACvB,IAAIxtH,EAAYwtH,EAAQ,GACxB1vH,KAAK6sH,OAAO,GAAI3qH,GACZA,EAAKsrH,OAAStrH,EAAKsrH,MAAM,KACzBxtH,KAAKm2H,SAAWj0H,EAAKsrH,MAAM,GAAGI,KAErC,CACJ,C,CAMK3T,gBAAgBh8G,GACtB,GAAK+B,KAAKitH,eAAV,CACIhvH,EAAQ,IAAGA,EAAQ,GACnBA,EAAQ+B,KAAK+jC,SAAQ9lC,EAAQ+B,KAAK+jC,QACtC,IAA8CtlC,EAA1C+uH,EAAextH,KAAKitH,eAAeO,MAAkBhvH,EAAcgvH,EAAMvxH,OAE7E,IADAuC,EAAMA,EAAM,EAAI,EAAIA,EACfC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKytH,oBAAoBD,EAAM/uH,GAAIR,EANb,C,CAapBwvH,oBAAoBlsH,EAAWmsH,EAAeZ,EAAiB,MACrE,GAAK9sH,KAAK0lF,QAAV,CACA,IAC+Bt5E,EAAauhH,EAAmB1vH,EAClCQ,EAEzBg4H,EACA5H,EACAZ,EACAU,EACAC,EARAvkH,EAAcrK,KAAK0lF,QACnBi1B,EAAcp5G,EAAKo5G,OACnBiT,EAAcrsH,EAAKqsH,KAAiBpvH,EAAcovH,EAAK3xH,OACvDy6H,EAAoBn1H,EAAKm1H,aAM7B,IAAKj4H,EAAI,EAAGA,EAAID,EAAKC,IAEjBkvH,EAAahT,EADbvuG,EAAMwhH,EAAKnvH,KAGU,IADrBg4H,EAAeC,EAAatqH,IAExBnO,EAAQ+B,KAAK01H,UAAUtpH,GAEnBshH,EAAQ+I,GAER9H,GADAV,EAAa1sH,EAAK4sH,UAAU/hH,IACJ,IACT2hG,OAEI,OADf8gB,EAAW/jB,KAAa6jB,EAAWK,gBACdH,EAAU/jB,KAAKmkB,YACpCL,EAAWX,EAAW,GACtBhwH,EAAQ4wH,EAAQnB,EAAO1tH,KAAK01H,UAAUtpH,GAAMwiH,EAAS3wH,MAAQ+B,KAAK01H,UAAUtpH,GAAMwiH,EAASrkH,QAE3FtM,EAAQ+B,KAAK01H,UAAUtpH,GAIInO,EAA3B0vH,EAAW1xH,OAASyxH,EAAeC,EAAWD,GACrCC,EAAWA,EAAW1xH,OAAS,GAGpDoO,EAAO+B,GAAOnO,CAlCC,C,CAyCb+vH,oBAAoBzsH,GAC1B8Q,MAAM27G,oBAAoBzsH,GAC1B,IAAqC6K,EAAa6hH,EAA9CC,EAAiB3sH,EAAK4sH,UAA4D5sH,EAAK8I,OAE3F,IAAIqsH,EAAoB,GAExB,IAAKtqH,KADL7K,EAAKm1H,aAAeA,EACRxI,GACRD,EAAaC,EAAU9hH,IACRnQ,QAAU,EAAGy6H,EAAatqH,IAAQ,EAC5CsqH,EAAatqH,GAAO6hH,EAAW,GAAG1jH,K,EA3LhCkrH,gBAAYE,aAAW,c,MCV7BgB,UAmDTp6H,cACIyD,KAAKu9C,KAAO,GACZv9C,KAAK00H,SAAW,GAChB10H,KAAKnC,MAAQ,UACbmC,KAAK42H,MAAO,EACZ52H,KAAK62H,QAAS,EACd72H,KAAK82H,WAAY,EACjB92H,KAAK+2H,eAAiB,KACtB/2H,KAAKyrF,MAAQ,OACbzrF,KAAKg3H,OAAS,MACdh3H,KAAKi3H,QAAU,EACfj3H,KAAKkxF,OAAS,EACdlxF,KAAK43E,YAAc,S,EC5D3B,IAAYs/C,sEAUX,KATGA,GAAA,eACAA,MAAA,eACAA,MAAA,iBACAA,MAAA,iBACAA,MAAA,mBACAA,MAAA,mBAGAA,MAAA,qB,MAGSC,YAWT56H,cACIyD,KAAKm5C,MAAQ,IAAIw9E,S,CAGdS,QAAQlZ,GACX,OAAmB,MAAfl+G,KAAK6/G,OACE,KAEJ7/G,KAAK6/G,OAAO3B,E,CAGhBmZ,QAAQnZ,EAAkB6C,GACV,MAAf/gH,KAAK6/G,SACL7/G,KAAK6/G,OAAS,IAElB7/G,KAAK6/G,OAAO3B,GAAY6C,C,CAGrBR,cAAcrC,EAAkBC,GACnC,OAAOR,SAAS/iG,UAAU5a,KAAK6/G,OAAQ3B,EAAUC,E,CAG9CqC,WAAWtC,EAAkBC,GAChC,OAAOR,SAAS8C,OAAOzgH,KAAK6/G,OAAQ3B,EAAUC,E,CAG3CuC,aAAaxC,EAAkBC,GAClC,OAAOR,SAASgD,SAAS3gH,KAAK6/G,OAAQ3B,EAAUC,E,CAG7CyC,YAAY1C,EAAkBC,GACjC,OAAOR,SAASkD,QAAQ7gH,KAAK6/G,OAAQ3B,EAAUC,E,CAG5CmZ,kBACHt3H,KAAK6/G,OAAShrG,OAAOs9B,OAAO,GAAIksE,YAAYuB,W,CAGzC73G,QACH/H,KAAK+U,KAAO,KACZ/U,KAAKkgC,KAAO,KACRlgC,KAAKilC,MACLjlC,KAAKilC,IAAIiI,UACTpxC,KAAK2H,eAAezD,KAAKilC,KACzBjlC,KAAKilC,IAAM,MAEfjlC,KAAK6/G,OAAS,I,CAIlB7oH,mBAAmBuU,GACf,IAAIwwC,EAQJ,OANIA,EADA/7C,KAAKhD,KAAKf,OAAS,EACb+D,KAAKhD,KAAKC,MAEV,IAAIk6H,YACdp7E,EAAIxwC,KAAOA,EACPwwC,EAAIxwC,MAAQ2rH,kBAAgBK,MAASx7E,EAAI8jE,SACzC9jE,EAAI8jE,OAAS,IACV9jE,C,CAGX/kD,oBAAoB+kD,GAChB,GAAI1qC,MAAMC,QAAQyqC,GAAM,CACpB,IAAK,IAAIl7B,KAAKk7B,EACVl7B,EAAE9Y,QACN/H,KAAKhD,KAAKX,QAAQ0/C,GAClBA,EAAI9/C,OAAS,CAChB,MAEG8/C,EAAIh0C,QACJ/H,KAAKhD,KAAKX,KAAK0/C,E,EAtBhBo7E,YAAIn6H,KAAuB,G,MCvEzBw6H,UAMTj7H,cACIyD,KAAKilC,IAAM,IAAIu3C,M,CAGR98B,cACP,OAAO1/C,KAAKy3H,Q,CAGLpvH,YACP,OAAOrI,KAAKilC,IAAI58B,K,CAGTC,aACP,OAAOtI,KAAKilC,IAAI38B,M,CAGbZ,OAAO5G,EAAa4+C,GACvB1/C,KAAK03H,OAAS52H,EACdd,KAAKy3H,SAAW/3E,EAChB1/C,KAAK03H,OAAOC,aAAa/6C,SAAS58E,KAAKilC,KAEvC,IAAIrC,EAAM5iC,KAAKy3H,SAASlX,cAAc,OACtCvgH,KAAK43H,YAAYh1F,E,CAGXg1F,YAAYh1F,GAClB,IAAIv6B,EAAQrI,KAAKy3H,SAASjX,WAAW,SAAU,GAC3Cl4G,EAAStI,KAAKy3H,SAASjX,WAAW,UAAW,IACnC,GAAVn4G,IACArI,KAAKilC,IAAI58B,MAAQA,IACN,GAAXC,IACAtI,KAAKilC,IAAI38B,OAASA,GAEtB,IAAIyvB,EAAMj9B,OAAOwqG,OAAO1iE,GACpB7K,GACA/3B,KAAKilC,IAAI1e,QAAUwR,GACL,GAAV1vB,IACArI,KAAKilC,IAAI58B,MAAQ0vB,EAAIvL,cACV,GAAXlkB,IACAtI,KAAKilC,IAAI38B,OAASyvB,EAAItL,eAG1B5xB,MAAMK,OAAO+sB,KAAK2a,EAAK,CAAE4jF,QAAQ,IAAQptF,MAAKrB,IAC1C,IAAI9J,EAAIjuB,KAAKilC,IAAI58B,MACb6lB,EAAIluB,KAAKilC,IAAI38B,OACjBtI,KAAKilC,IAAI1e,QAAUwR,GACL,GAAV1vB,IACArI,KAAKilC,IAAI58B,MAAQ0vB,EAAMA,EAAIvL,YAAc,IAC9B,GAAXlkB,IACAtI,KAAKilC,IAAI38B,OAASyvB,EAAMA,EAAItL,aAAe,IAC3CzsB,KAAK03H,QAAWzpG,GAAKjuB,KAAKilC,IAAI58B,OAAS6lB,GAAKluB,KAAKilC,IAAI38B,QACrDtI,KAAK03H,OAAOG,eAAe,G,CAKpCr6G,IAAIte,EAAWC,GAClBa,KAAKilC,IAAIznB,IAAIte,EAAGC,E,CAGb+tC,UACHltC,KAAKilC,IAAIuiE,aACTxnG,KAAKilC,IAAIpzB,SACT7R,KAAKilC,IAAI1e,QAAU,KACnBvmB,KAAK03H,OAAS,KACd13H,KAAKy3H,SAAW,I,CAGbt0H,UACHnD,KAAKilC,IAAI9hC,S,QC1EJ20H,SAOTv7H,cACIyD,KAAK+3H,OAAS,IAAIv7C,OAClBx8E,KAAK+3H,OAAOz+D,QAAUt5D,KACtBA,KAAK+3H,OAAOtmH,GAAGvG,MAAM8B,OAAO,KACxBhN,KAAK03H,OAAOpxB,YAAYp7F,MAAM4E,KAAM9P,KAAKy3H,SAASlX,cAAc,QAAQ,IAG5EvgH,KAAKg4H,OAAS,GACdh4H,KAAKi4H,SAAW,C,CAGTv4E,cACP,OAAO1/C,KAAKy3H,Q,CAGLpvH,YACP,OAAO,C,CAGAC,aACP,OAAO,C,CAGJZ,OAAO5G,EAAa4+C,GACvB1/C,KAAK03H,OAAS52H,EACdd,KAAKy3H,SAAW/3E,EAChB1/C,KAAK03H,OAAOC,aAAa/6C,SAAS58E,KAAK+3H,O,CAGpCG,YACHl4H,KAAKi4H,SAAW,C,CAGbjsD,QAAQ9sE,EAAWC,EAAWkJ,EAAeC,GAChD,IAAIM,EAAO5I,KAAKg4H,OAAOh4H,KAAKi4H,UACvBrvH,IACDA,EAAO5I,KAAKg4H,OAAOh4H,KAAKi4H,UAAY,IAAI7vH,WAC5CpI,KAAKi4H,WACLrvH,EAAK7C,MAAM7G,EAAGC,EAAGkJ,EAAOC,E,CAGrBI,SAASxJ,EAAWC,GACvB,IAAK,IAAIV,EAAI,EAAGA,EAAIuB,KAAKi4H,SAAUx5H,IAC/B,GAAIuB,KAAKg4H,OAAOv5H,GAAGiK,SAASxJ,EAAGC,GAC3B,OAAO,EAEf,OAAO,C,CAGJqe,IAAIte,EAAWC,G,CAGf+tC,UACHltC,KAAK+3H,OAAOvwB,aACZxnG,KAAK03H,OAAS,KACd13H,KAAKy3H,SAAW,I,CAGbt0H,UACHnD,KAAK+3H,OAAO50H,S,QCxEPg1H,iBAQT57H,cACIyD,KAAKo4H,cAAgBD,iBAAiBE,qBACtCr4H,KAAKs4H,UAAYH,iBAAiBI,gB,EALxBJ,iBAAoBE,sBAAY,EAChCF,iBAAgBI,iBAAW,KAQ7CxhI,WAAWwnG,SAAS,mBAAoB45B,kBCPxC,MAAMK,GAAU,IAAInnH,MACdonH,GAAU,IAAIpnH,M,MAEPqnH,WAcTn8H,cACIyD,KAAK24H,YAAc,IAAItnH,MACvBrR,KAAKk2D,OAAS,IAAIygE,UAClB32H,KAAK44H,SAAW,IAAIT,gB,CAGjBtgD,MAAM+lC,EAAiBzkE,EAAkB7zC,EAAyB+1G,GACtD,MAAXA,IACAA,EAAUr7G,KAAK44H,UAEnB54H,KAAK64H,UAAYvzH,EACjBtF,KAAK84H,eAAiB,EACtBjkH,OAAOs9B,OAAOnyC,KAAKk2D,OAAQ/c,GACrBn5C,KAAKk2D,OAAQ6iE,cAAe,EAClC,IAGI74F,EAHA84F,EAAmB,EACnBC,EAA4B5d,EAAQ4d,iBACpCC,GAAsB,EAI1B,IADA7a,YAAYh/E,MAAMu+E,GAAS,GACpBS,YAAY+C,WAWf,OAVgB,GAAZ4X,IACA94F,EAAOm+E,YAAYiD,QAAQ2X,GACvB/4F,EAAKjkC,OAAS,IACVi9H,GAAyB,MAAXh5F,EAAK,KACnBA,EAAOA,EAAK5hC,UAAU,IAC1B0B,KAAKm5H,WAAWj5F,KAIxBg5F,GAAa,EACL7a,YAAYO,SAChB,IAAK,IACGP,YAAYQ,SAAWT,aAAWU,OAClC9+G,KAAKo5H,YACLp5H,KAAKk2D,OAAO0gE,MAAO,GAGnB52H,KAAKq5H,WACT,MAEJ,IAAK,IACGhb,YAAYQ,SAAWT,aAAWU,OAClC9+G,KAAKo5H,YACLp5H,KAAKk2D,OAAO2gE,QAAS,GAGrB72H,KAAKq5H,WACT,MAEJ,IAAK,IACGhb,YAAYQ,SAAWT,aAAWU,OAClC9+G,KAAKo5H,YACLp5H,KAAKk2D,OAAO4gE,WAAY,GAGxB92H,KAAKq5H,WACT,MAEJ,IAAK,SACGhb,YAAYQ,SAAWT,aAAWU,OAClC9+G,KAAKo5H,YACLp5H,KAAKk2D,OAAOojE,eAAgB,GAG5Bt5H,KAAKq5H,WACT,MAwBJ,IAAK,OACD,GAAIhb,YAAYQ,SAAWT,aAAWU,MAAO,CACzC9+G,KAAKo5H,YAELp5H,KAAKk2D,OAAOw+D,SAAW/W,SAAS8C,OAAOpC,YAAYuB,WAAY,OAAQ5/G,KAAKk2D,OAAOw+D,UACnF,IAAI72H,EAAgBwgH,YAAYkb,aAAa,SAChC,MAAT17H,IACAmC,KAAKk2D,OAAOr4D,MAAQA,EACdmC,KAAKk2D,OAAQ6iE,cAAe,EAEzC,MACQ1a,YAAYQ,SAAWT,aAAWgB,KACvCp/G,KAAKq5H,WACT,MAEJ,IAAK,KACDr5H,KAAKm5H,WAAW,MAChB,MAEJ,IAAK,MACD,GAAI9a,YAAYQ,SAAWT,aAAWU,OAAST,YAAYQ,SAAWT,aAAWoB,KAAM,CACnF,IAAI9/D,EAAuBy3E,YAAYqC,YAAYtC,kBAAgB/S,OACnEzkE,EAAQ43E,kBACR53E,EAAQ3qC,KAAO2qC,EAAQ6gE,cAAc,QACrC7gE,EAAQvG,MAAMsyC,MAAQzrF,KAAKk2D,OAAOu1B,MAClC/rC,EAAQvG,MAAM29E,UAAY92H,KAAKk2D,OAAO4gE,UACtCp3E,EAAQvG,MAAM49E,eAAiB/2H,KAAKk2D,OAAO6gE,eAC3C/2H,KAAK64H,UAAUx8H,KAAKqjD,EACvB,CACD,MAEJ,IAAK,IACD,GAAI2+D,YAAYQ,SAAWT,aAAWU,MAAO,CACzC9+G,KAAKo5H,YAELp5H,KAAKk2D,OAAO4gE,UAAY92H,KAAKk2D,OAAO4gE,WAAazb,EAAQ+c,cAC9Cp4H,KAAKk2D,OAAQ6iE,cAAqC,MAArB1d,EAAQid,YAC5Ct4H,KAAKk2D,OAAOr4D,MAAQw9G,EAAQid,WAEhC,IAAI54E,EAAUy3E,YAAYqC,YAAYtC,kBAAgBuC,MACtD/5E,EAAQ43E,kBACR53E,EAAQ3qC,KAAO2qC,EAAQ6gE,cAAc,QACrC7gE,EAAQvG,MAAMsyC,MAAQzrF,KAAKk2D,OAAOu1B,MAClCzrF,KAAK64H,UAAUx8H,KAAKqjD,EACvB,MACI,GAAI2+D,YAAYQ,SAAWT,aAAWgB,IAAK,CAC5Cp/G,KAAKq5H,WAEL,IAAI35E,EAAUy3E,YAAYqC,YAAYtC,kBAAgBwC,SACtD15H,KAAK64H,UAAUx8H,KAAKqjD,EACvB,CACD,MAEJ,IAAK,QACD,CACI,IAAIA,EAAUy3E,YAAYqC,YAAYtC,kBAAgByC,OACtDj6E,EAAQ43E,kBACR53E,EAAQ3qC,KAAO2qC,EAAQ6gE,cAAc,QACrC1rG,OAAOs9B,OAAOuN,EAAQvG,MAAOn5C,KAAKk2D,QAClCl2D,KAAK64H,UAAUx8H,KAAKqjD,EACvB,CACD,MAEJ,IAAK,SAEG,GAAI2+D,YAAYQ,SAAWT,aAAWU,OAAST,YAAYQ,SAAWT,aAAWoB,KAAM,CACnF,IAAI9/D,EAAUy3E,YAAYqC,YAAYtC,kBAAgB0C,QAEtD,GADAl6E,EAAQ43E,kBACJjZ,YAAYQ,SAAWT,aAAWU,MAAO,CAGzC,IAFA0Z,GAAQv8H,OAAS,EACjBw8H,GAAQx8H,OAAS,EACVoiH,YAAY+C,WACY,UAAvB/C,YAAYO,SAGW,UAAvBP,YAAYO,UACRP,YAAYQ,SAAWT,aAAWU,OAAST,YAAYQ,SAAWT,aAAWoB,KAC7EiZ,GAAQp8H,KAAKshH,SAAS/iG,UAAUyjG,YAAYuB,WAAY,QAAS,KAEjE4Y,GAAQn8H,KAAKgiH,YAAYiD,YAGrC5hE,EAAQ23E,QAAQ,QAASmB,GAAQn+G,SACjCqlC,EAAQ23E,QAAQ,SAAUoB,GAAQp+G,QACrC,CACDqlC,EAAQ3qC,KAAO2qC,EAAQ6gE,cAAc,QACrC1rG,OAAOs9B,OAAOuN,EAAQvG,MAAOn5C,KAAKk2D,QAClCl2D,KAAK64H,UAAUx8H,KAAKqjD,EACvB,CAEL,MAEJ,IAAK,IACG2+D,YAAYQ,SAAWT,aAAWU,OAClC9+G,KAAKo5H,YACLp5H,KAAKk2D,OAAOu1B,MAAQ4yB,YAAYkb,aAAa,SACxCv5H,KAAK65H,aACN75H,KAAKm5H,WAAW,OAEf9a,YAAYQ,SAAWT,aAAWgB,MACvCp/G,KAAKm5H,WAAW,MAChBD,GAAa,EAEbl5H,KAAKq5H,YAET,MAEJ,IAAK,KACL,IAAK,MACL,IAAK,KACGhb,YAAYQ,SAAWT,aAAWU,MAC7B9+G,KAAK65H,aACN75H,KAAKm5H,WAAW,OAGpBn5H,KAAKm5H,WAAW,MAChBD,GAAa,GAEjB,MAEJ,IAAK,OACL,IAAK,OAEDD,GAAmB,EACnB,MAEJ,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,OACG5a,YAAYQ,SAAWT,aAAWU,MAClCka,IACK3a,YAAYQ,SAAWT,aAAWgB,KACvC4Z,IAKA,GAAZA,IACA94F,EAAOm+E,YAAYiD,QAAQ2X,GACvB/4F,EAAKjkC,OAAS,IACVi9H,GAAyB,MAAXh5F,EAAK,KACnBA,EAAOA,EAAK5hC,UAAU,IAC1B0B,KAAKm5H,WAAWj5F,KAIxBlgC,KAAK64H,UAAY,I,CAGXO,YACN,IAAIU,EACA95H,KAAK24H,YAAY18H,QAAU+D,KAAK84H,gBAChCgB,EAAK,IAAInD,UACT32H,KAAK24H,YAAYt8H,KAAKy9H,IAGtBA,EAAK95H,KAAK24H,YAAY34H,KAAK84H,gBAC/BjkH,OAAOs9B,OAAO2nF,EAAI95H,KAAKk2D,QACvBl2D,KAAK84H,gB,CAGCO,WACN,GAAIr5H,KAAK84H,eAAiB,EAAG,CACzB,IAAIgB,EAAK95H,KAAK24H,YAAY34H,KAAK84H,eAAiB,GAChDjkH,OAAOs9B,OAAOnyC,KAAKk2D,OAAQ4jE,GAC3B95H,KAAK84H,gBACR,C,CAGKe,YACN,GAAI75H,KAAK64H,UAAU58H,OAAS,EAAG,CAC3B,IAAIyjD,EAAuB1/C,KAAK64H,UAAU74H,KAAK64H,UAAU58H,OAAS,GAClE,SAAIyjD,GAAWA,EAAQn0C,MAAQ2rH,kBAAgBK,OACpC73E,EAAQxf,KAAK5rB,SAAS,KAGpC,CAED,OAAO,C,CAGD6kH,WAAWj5F,GACjB,IAAIwf,EACA1/C,KAAK64H,UAAU58H,OAAS,IACxByjD,EAAU1/C,KAAK64H,UAAU74H,KAAK64H,UAAU58H,OAAS,GAC7CyjD,EAAQn0C,MAAQ2rH,kBAAgBK,MAahD,SAAoBl4B,EAAeC,GAC/B,IAAK,IAAI3/F,KAAK0/F,EACV,IAAK1/F,EAAEg9B,WAAW,MAAc0iE,EAAI1/F,IAAY2/F,EAAI3/F,GAChD,OAAO,EAEf,OAAO,CACX,CAnBwDo6H,CAAWr6E,EAAQvG,MAAOn5C,KAAKk2D,SACvExW,EAAQxf,MAAQA,GAKxBwf,EAAUy3E,YAAYqC,YAAYtC,kBAAgBK,MAClD73E,EAAQxf,KAAOA,EACfrrB,OAAOs9B,OAAOuN,EAAQvG,MAAOn5C,KAAKk2D,QAClCl2D,KAAK64H,UAAUx8H,KAAKqjD,G,EA1SjBg5E,WAAAsB,cAA4B,IAAItB,WAEhCA,WAAAuB,SAAkD,CACrD,CAAC/C,kBAAgB/S,OAAQqT,UACzB,CAACN,kBAAgBuC,MAAO3B,U,MCbnBoC,UAaT39H,cATQyD,KAAQm6H,SAAW,EAIpBn6H,KAAeo6H,gBAAW,EAC1Bp6H,KAAgBq6H,iBAAW,EAK9Br6H,KAAKs6H,UAAY,GACjBt6H,KAAKs6H,UAAe,IAAIt6H,KAAKu6H,UAC7Bv6H,KAAKs6H,UAAe,IAAIt6H,KAAKw6H,UAC7Bx6H,KAAKs6H,UAAa,EAAIt6H,KAAKy6H,QAC3Bz6H,KAAKs6H,UAAa,EAAIt6H,KAAK06H,QAC3B16H,KAAKs6H,UAAa,EAAIt6H,KAAK26H,QAC3B36H,KAAKs6H,UAAe,IAAIt6H,KAAK46H,aAC7B56H,KAAKs6H,UAAe,IAAIt6H,KAAK46H,aAC7B56H,KAAKs6H,UAAiB,MAAIt6H,KAAK66H,YAC/B76H,KAAKs6H,UAAgB,KAAIt6H,KAAK86H,WAC9B96H,KAAKs6H,UAAgB,KAAIt6H,KAAK+6H,U,CAGxBR,UAAU3b,EAAiBzjG,EAAc6/G,GAC/C,OAAK7/G,EASM,OARK,MAAR6/G,EACO,YAAeA,EAAO,KAGtB,YADYh7H,KAAKi7H,aACK,I,CAO/BT,UAAU5b,EAAiBzjG,EAAc6/G,GAC/C,GAAK7/G,EAWD,OAAO,KAVP,IAAIynB,EAAc5iC,KAAKi7H,YAAW,GAClC,OAAKr4F,EAGD5iC,KAAKo6H,gBACE,aAAgBx3F,EAAM,YAAgB5iC,KAAKo6H,gBAAkB,aAAiBp6H,KAAKq6H,iBAAmB,MAEtG,aAAgBz3F,EAAM,MALtB,I,CAWT63F,QAAQ7b,EAAiBzjG,EAAc6/G,GAC7C,OAAO7/G,EAAG,OAAU,K,CAGdu/G,QAAQ9b,EAAiBzjG,EAAc6/G,GAC7C,OAAO7/G,EAAG,OAAU,K,CAGdw/G,QAAQ/b,EAAiBzjG,EAAc6/G,GAC7C,OAAO7/G,EAAG,OAAU,K,CAGdy/G,aAAahc,EAAiBzjG,EAAc6/G,GAClD,OAAO7/G,EAAO,KAAOyjG,EAAU,IAAQ,IAAMA,EAAU,G,CAGjDic,YAAYjc,EAAiBzjG,EAAc6/G,GACjD,OAAK7/G,EAKM,WAJPnb,KAAKk7H,UAAYF,EACV,gBAAmBA,EAAO,K,CAM/BF,WAAWlc,EAAiBzjG,EAAc6/G,GAChD,OAAK7/G,EAGM,UAFA,eAAkB6/G,EAAO,I,CAK9BD,WAAWnc,EAAiBzjG,EAAc6/G,GAChD,OAAK7/G,EAKM,WAJPnb,KAAKm7H,SAAWH,EACT,eAAkBA,EAAO,K,CAM9BC,WAAWh4H,GAIjB,IAHA,IACI86G,EADAD,EAAe99G,KAAKm6H,SAEpB96H,EAAiB,IAC6B,IAA1C0+G,EAAO/9G,KAAK4xE,MAAM1zE,QAAQ,IAAK4/G,KAAc,CACjD,GAAuC,IAAnC99G,KAAK4xE,MAAM7yD,WAAWg/F,EAAO,GAM5B,CACD1+G,GAAUW,KAAK4xE,MAAMtzE,UAAUw/G,EAAMC,GACrC,KACH,CAPG1+G,GAAUW,KAAK4xE,MAAMtzE,UAAUw/G,EAAMC,EAAO,GAC5C1+G,GAAU,IACVy+G,EAAOC,EAAO,CAMrB,CACD,OAAa,GAATA,EACO,MAEP96G,IACAjD,KAAKm6H,SAAWpc,GAEb1+G,E,CAGJw4E,MAAM33C,EAAcj9B,GACvBjD,KAAK4xE,MAAQ1xC,EACblgC,KAAKk7H,UAAY,KACjBl7H,KAAKm7H,SAAW,KAQhB,IANA,IAAsBpd,EAAcqd,EAChCjgH,EACAwoB,EAAaq3F,EACbK,EACAC,EAJAxd,EAAe,EAKfz+G,EAAiB,IACuB,IAApC0+G,EAAO79E,EAAKhiC,QAAQ,IAAK4/G,KAC7B,GAAIC,EAAO,GAAkC,IAA7B79E,EAAKnhB,WAAWg/F,EAAO,GAEnC1+G,GAAU6gC,EAAK5hC,UAAUw/G,EAAMC,EAAO,GACtC1+G,GAAU,IACVy+G,EAAOC,EAAO,MAJlB,CAWA,GAHA1+G,GAAU6gC,EAAK5hC,UAAUw/G,EAAMC,GAC/BD,EAAOC,GAEM,IADbA,EAAO79E,EAAKhiC,QAAQ,IAAK4/G,IAErB,MAEJ3iG,EAA+B,KAAzB+kB,EAAKthC,OAAOk/G,EAAO,GACzBn6E,EAAMzD,EAAK5hC,UAAU6c,EAAM2iG,EAAO,EAAIA,EAAO,EAAGC,GAChD/9G,KAAKm6H,SAAWpc,EAAO,EACvBid,EAAO,KACPK,EAAO,MAEM,IADbD,EAAOz3F,EAAIzlC,QAAQ,QAEf88H,EAAOr3F,EAAIrlC,UAAU88H,EAAO,GAC5Bz3F,EAAMA,EAAIrlC,UAAU,EAAG88H,IAE3Bz3F,EAAMA,EAAIlkC,cAEE,OADZ67H,EAAOt7H,KAAKs6H,UAAU32F,IAEb1gC,GAEW,OADZo4H,EAAOC,EAAKl+H,KAAK4C,KAAM2jC,EAAKxoB,EAAK6/G,MAE7B37H,GAAUg8H,GAIlBh8H,GAAU6gC,EAAK5hC,UAAUw/G,EAAM99G,KAAKm6H,UACxCrc,EAAO99G,KAAKm6H,QA7BX,CAqCL,OALIrc,EAAO59E,EAAKjkC,SACZoD,GAAU6gC,EAAK5hC,UAAUw/G,IAE7B99G,KAAK4xE,MAAQ,KAENvyE,C,EA/KJ66H,UAAAF,cAA2B,IAAIE,UC4GpC,MAAO3C,aAAa/6C,OA8FtBjgF,cACI8V,QAjEMrS,KAAAu7H,UAAoBhE,KAAKiE,QACzBx7H,KAAiBy7H,mBAAY,EAE7Bz7H,KAAO07H,QAAW,GAoClB17H,KAAU27H,WAAW,EAErB37H,KAAW47H,YAAW,EA0B5B57H,KAAK67H,WAAa,IAAIlF,UACtB32H,KAAK67H,WAAWnH,SAAWj9H,OAAOO,gBAClCgI,KAAK4xE,MAAQ,GACb5xE,KAAKu9C,KAAO,GACZv9C,KAAK64H,UAAY,GACjB74H,KAAK87H,OAAS,GACd97H,KAAK+7H,SAAW,CAAC,EAAG,EAAG,EAAG,GAC1B/7H,KAAKg8H,eAAiB,C,CAQ1BhlI,0BAA0B+d,EAAcknH,GACpCA,EAAW1nH,gBACXgjH,KAAK2E,aAAannH,GAAQknH,C,CAQ9BjlI,4BAA4B+d,EAAc5R,GAAmB,GACzD,IAAIo6C,EAAOg6E,KAAK2E,aAAannH,GACzBwoC,IACAA,EAAK/oC,mBACDrR,GAASo6C,EAAKp6C,iBACXo0H,KAAK2E,aAAannH,G,CAQjC5R,QAAQqjG,GAAwB,GAC5B21B,aAAan8H,KAAK87H,QAClB3E,YAAYiF,aAAap8H,KAAK64H,WAE9BxmH,MAAMlP,QAAQqjG,E,CAQlBkN,iBAAiBC,GAAoB,GACjC,IAAIM,EAAiB7rG,UAAUP,KAE/B,OADAosG,EAAIluG,MAAM,EAAG,EAAG/F,KAAKqI,MAAOrI,KAAKsI,QAC1B2rG,EAAI9qG,iB,CAOf6qG,iBAAiBjT,GAAoB,GACjC,IAAIkT,EAAiB7rG,UAAUP,KAE/B,OADAosG,EAAIluG,MAAM,EAAG,EAAG/F,KAAKqI,MAAOrI,KAAKsI,QAC1B2rG,C,CAOXtB,YACI,OAAI3yG,KAAKu2D,YAAoBv2D,KAAKoV,OAC3BpV,KAAKq8H,S,CAKhBxpB,UAAU50G,GACNoU,MAAMwgG,UAAU50G,GACX+B,KAAKs8H,gBAGNt8H,KAAKu8H,SAFLv8H,KAAKw8H,a,CASbvpB,aACI,OAAIjzG,KAAKw2D,aAAqBx2D,KAAKqV,QAC5BrV,KAAKy8H,U,CAKhBtpB,WAAWl1G,GACPoU,MAAM8gG,WAAWl1G,GACZ+B,KAAKs8H,gBAGNt8H,KAAKu8H,SAFLv8H,KAAKw8H,a,CAQTH,gBAEA,OADAr8H,KAAK08H,UACE18H,KAAK27H,U,CAMZc,iBAEA,OADAz8H,KAAK08H,UACE18H,KAAK47H,W,CAIZ17F,WACA,OAAOlgC,KAAK4xE,K,CAGZ1xC,SAAKjiC,GACQ,MAATA,EACAA,EAAQ,GACgB,iBAAnB,IACLA,EAAQ,GAAKA,IAEZ+B,KAAK28H,YAAcpF,KAAKqF,YACzB3+H,EAAQs5H,KAAKqF,UAAU3+H,IAAUA,GAEjC+B,KAAK4xE,OAAS3zE,IACd+B,KAAK4xE,MAAQ3zE,EACb+B,KAAKw8H,cACLx8H,KAAKmR,MAAMjG,MAAM+C,Q,CAKzB4uH,WAAW38F,GACPlgC,KAAKkgC,KAAOA,C,CAQZqd,WACA,OAAOv9C,KAAK67H,WAAWt+E,I,CAGvBA,SAAKt/C,GAWL,GAVA+B,KAAK67H,WAAWt+E,KAAOt/C,EAClBA,IACDA,EAAQxG,OAAOQ,eAEXgG,EAAQ,SAGhB+B,KAAK88H,UAAY7+H,EACjB+B,KAAK+8H,YAAcxF,KAAK2E,aAAaj+H,GAEjC+B,KAAK+8H,YACD/8H,KAAK4xE,OACL5xE,KAAKw8H,mBAER,GAAIv+H,IAAUP,MAAM8gC,iBAAiBvgC,IAAUA,EAAM0+B,WAAW,WAAY,CAC7E,IAAIu/B,EAAIj+D,EACRpD,MAAMK,OAAO+sB,KAAKhqB,GAAOm7B,MAAK+yD,IACrBA,GAAWnsF,KAAK88H,WAAa5gE,IAG9BiwB,aAAmBsoC,WACnBz0H,KAAK+8H,YAAc5wC,EAEnBnsF,KAAK88H,UAAY3wC,EAAQ6wC,OACzBh9H,KAAK4xE,OACL5xE,KAAKw8H,cAAa,GAE7B,MAEGx8H,KAAK88H,UAAajiI,MAAMG,QAAQ8+C,UAAYriD,OAAOiB,cAAcuF,IAAmBA,EAChF+B,KAAK4xE,OACL5xE,KAAKw8H,a,CAQb9H,eACA,OAAO10H,KAAK67H,WAAWnH,Q,CAGvBA,aAASz2H,GACL+B,KAAK67H,WAAWnH,UAAYz2H,IAC5B+B,KAAK67H,WAAWnH,SAAWz2H,EAC3B+B,KAAKw8H,c,CAQT3+H,YACA,OAAOmC,KAAK67H,WAAWh+H,K,CAGvBA,UAAMI,GACN+B,KAAKi9H,UAAUh/H,E,CAGnBg/H,UAAUh/H,GACF+B,KAAK67H,WAAWh+H,OAASI,IACzB+B,KAAK67H,WAAWh+H,MAAQI,GAEnB+B,KAAKk9H,YAAcl9H,KAAKk3D,WAAsC,GAAzBl3D,KAAK64H,UAAU58H,OACrD+D,KAAKk3D,UAAUkuC,iBAAiBplG,KAAK67H,WAAWh+H,OAEhDmC,KAAKw8H,c,CAQb5F,WACA,OAAO52H,KAAK67H,WAAWjF,I,CAGvBA,SAAK34H,GACD+B,KAAK67H,WAAWjF,MAAQ34H,IACxB+B,KAAK67H,WAAWjF,KAAO34H,EACvB+B,KAAKw8H,c,CAQT3F,aACA,OAAO72H,KAAK67H,WAAWhF,M,CAGvBA,WAAO54H,GACH+B,KAAK67H,WAAWhF,QAAU54H,IAC1B+B,KAAK67H,WAAWhF,OAAS54H,EACzB+B,KAAKw8H,c,CAYT/wC,YACA,OAAOzrF,KAAK67H,WAAWpwC,K,CAGvBA,UAAMxtF,GACF+B,KAAK67H,WAAWpwC,OAASxtF,IACzB+B,KAAK67H,WAAWpwC,MAAQxtF,EACxB+B,KAAKw8H,c,CAYTxF,aACA,OAAOh3H,KAAK67H,WAAW7E,M,CAGvBA,WAAO/4H,GACH+B,KAAK67H,WAAW7E,QAAU/4H,IAC1B+B,KAAK67H,WAAW7E,OAAS/4H,EACzB+B,KAAKw8H,c,CAQTW,eACA,OAAOn9H,KAAKo9H,S,CAGZD,aAASl/H,GACL+B,KAAKo9H,WAAan/H,IAClB+B,KAAKo9H,UAAYn/H,EACjB+B,KAAKw8H,c,CAOTvF,cACA,OAAOj3H,KAAK67H,WAAW5E,O,CAGvBA,YAAQh5H,GACJ+B,KAAK67H,WAAW5E,SAAWh5H,IAC3B+B,KAAK67H,WAAW5E,QAAUh5H,EAC1B+B,KAAKw8H,c,CAQTrH,cACA,OAAOn1H,KAAK+7H,Q,CAGZ5G,YAAQl3H,GACR,GAAsB,iBAAlB,EAA4B,CAC5B,IAAII,EAAMJ,EAAMM,MAAM,KACtByB,KAAK+7H,SAAS9/H,OAAS,EACvB,IAAK,IAAIwC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI2c,EAAI1c,WAAWL,EAAII,IACnBX,MAAMsd,KACNA,EAAI,GACRpb,KAAK+7H,SAAS1/H,KAAK+e,EACtB,CACJ,MAEGpb,KAAK+7H,SAAW99H,EACpB+B,KAAKw8H,a,CAMLa,cACA,OAAOr9H,KAAKs9H,Q,CAGZD,YAAQp/H,GACR+B,KAAKs9H,SAAWr/H,EAChB+B,KAAKu8H,Q,CAML7wC,kBACA,OAAO1rF,KAAKkiG,Y,CAGZxW,gBAAYztF,GACZ+B,KAAKkiG,aAAejkG,EACpB+B,KAAKu8H,Q,CAOLrrC,aACA,OAAOlxF,KAAK67H,WAAW3qC,M,CAGvBA,WAAOjzF,GACH+B,KAAK67H,WAAW3qC,QAAUjzF,IAC1B+B,KAAK67H,WAAW3qC,OAASjzF,EACzB+B,KAAKw8H,c,CAQT5kD,kBACA,OAAO53E,KAAK67H,WAAWjkD,W,CAGvBA,gBAAY35E,GACR+B,KAAK67H,WAAWjkD,aAAe35E,IAC/B+B,KAAK67H,WAAWjkD,YAAc35E,EAC9B+B,KAAKw8H,c,CAWTnjF,eACA,OAAOr5C,KAAKu7H,S,CAGZliF,aAASp7C,GACL+B,KAAKu7H,WAAat9H,IAClB+B,KAAKu7H,UAAYt9H,EACjB+B,KAAKw8H,c,CAKT1F,gBACA,OAAO92H,KAAK67H,WAAW/E,S,CAGvBA,cAAU74H,GACN+B,KAAK67H,WAAW/E,WAAa74H,IAC7B+B,KAAK67H,WAAW/E,UAAY74H,EAC5B+B,KAAKw8H,c,CAKTzF,qBACA,OAAO/2H,KAAK67H,WAAW9E,c,CAGvBA,mBAAe94H,GACX+B,KAAK67H,WAAW9E,gBAAkB94H,IAClC+B,KAAK67H,WAAW9E,eAAiB94H,EACjC+B,KAAKw8H,c,CAITe,uBACA,OAAOv9H,KAAKy7H,iB,CAIZ8B,qBAAiBt/H,GACjB+B,KAAKy7H,kBAAoBx9H,C,CAGzBu/H,WACA,OAAOx9H,KAAKy9H,K,CAIZD,SAAKv/H,GACD+B,KAAKy9H,OAASx/H,IACd+B,KAAKy9H,MAAQx/H,EACb+B,KAAKw8H,c,CAITkB,UACA,OAAO19H,KAAK29H,I,CAIZD,QAAIz/H,GACA+B,KAAK29H,MAAQ1/H,IACb+B,KAAK29H,KAAO1/H,EACZ+B,KAAKw8H,c,CAIT3H,eACA,OAAO70H,KAAK49H,S,CAIZ/I,aAAS52H,GACL+B,KAAK49H,WAAa3/H,IAClB+B,KAAK49H,UAAY3/H,EACjB+B,KAAKw8H,c,CAITqB,uBACA,OAAO79H,KAAK89H,iB,CAGZD,qBAAiB5/H,GACjB+B,KAAK89H,kBAAoB7/H,C,CAGnB8/H,cAAcC,GACpB,IAAsBjgB,EAAcqd,EAChCz3F,EACA1lC,EAFA6/G,EAAe,EAGfz+G,EAAiB,GACrB,MAAgD,IAAxC0+G,EAAOigB,EAAS9/H,QAAQ,IAAK4/G,KACjC,GAAIC,EAAO,GAAsC,IAAjCigB,EAASj/G,WAAWg/F,EAAO,GAEvC1+G,GAAU2+H,EAAS1/H,UAAUw/G,EAAMC,EAAO,GAC1C1+G,GAAU,IACVy+G,EAAOC,EAAO,MAJlB,CAWA,GAHA1+G,GAAU2+H,EAAS1/H,UAAUw/G,EAAMC,GACnCD,EAAOC,EACPA,EAAOigB,EAAS9/H,QAAQ,IAAK4/G,IAChB,GAATC,EACA,MAEAA,GAAQD,EAAO,GAMnBn6E,EAAMq6F,EAAS1/H,UAAUw/G,EAAO,EAAGC,GACnCqd,EAAOz3F,EAAIzlC,QAAQ,MACN,GAATk9H,GACAn9H,EAAQ+B,KAAKi+H,cAAct6F,EAAIrlC,UAAU,EAAG88H,IAExC/7H,GADS,MAATpB,EACU0lC,EAAIrlC,UAAU88H,EAAO,GAErBn9H,IAGdA,EAAQ+B,KAAKi+H,cAAct6F,GACd,MAAT1lC,IACAoB,GAAUpB,IAElB6/G,EAAOC,EAAO,IAnBV1+G,GAAU2+H,EAAS1/H,UAAUw/G,EAAMA,EAAO,GAC1CA,EAAOC,EAAO,EAVjB,CAkCL,OAHID,EAAOkgB,EAAS/hI,SAChBoD,GAAU2+H,EAAS1/H,UAAUw/G,IAE1Bz+G,C,CAGA6+H,mBACP,OAAOl+H,KAAKi+H,a,CAGLC,iBAAajgI,IACf+B,KAAKi+H,eAAkBhgI,KAIxB+B,KAAKi+H,eADK,IAAVhgI,EACqB,IACN,IAAVA,EACgB,KAEAA,EACzB+B,KAAKw8H,c,CAGF2B,OAAOppH,EAAc9W,GAMxB,OALK+B,KAAKi+H,gBACNj+H,KAAKi+H,cAAgB,IACzBj+H,KAAKi+H,cAAclpH,GAAQ9W,EAC3B+B,KAAKw8H,cAEEx8H,I,CAOPo+H,YAAQngI,GAER,GADA+B,KAAK08H,WACA18H,KAAKq+H,WAAY,OAEtB,IAAIC,EAAat+H,KAAKs+H,WAEtBrgI,GADAA,EAAQA,EAAQ,EAAI,EAAIA,GACRqgI,EAAaA,EAAargI,EAE1C+B,KAAKq+H,WAAWn/H,EAAIjB,EACpB+B,KAAKu+H,Y,CAMLH,cACA,OAAKp+H,KAAKq+H,WACHr+H,KAAKq+H,WAAWn/H,EADM,C,CAO7Bs/H,YAAQvgI,GAER,GADA+B,KAAK08H,WACA18H,KAAKq+H,WAAY,OAEtB,IAAII,EAAaz+H,KAAKy+H,WAEtBxgI,GADAA,EAAQA,EAAQ,EAAI,EAAIA,GACRwgI,EAAaA,EAAaxgI,EAE1C+B,KAAKq+H,WAAWl/H,EAAIlB,EACpB+B,KAAKu+H,Y,CAMLC,cACA,OAAKx+H,KAAKq+H,WACHr+H,KAAKq+H,WAAWl/H,EADM,C,CAO7Bm/H,iBACA,IAAIj0G,EAAIrqB,KAAKq8H,UAAYr8H,KAAKoV,OAC9B,OAAOiV,EAAI,EAAI,EAAIA,C,CAMnBo0G,iBACA,IAAIp0G,EAAIrqB,KAAKy8H,WAAaz8H,KAAKqV,QAC/B,OAAOgV,EAAI,EAAI,EAAIA,C,CAInBsY,YAEA,OADA3iC,KAAK08H,UACE18H,KAAK87H,M,CAMNU,cACDx8H,KAAKk9H,aACNl9H,KAAKk9H,YAAa,EAClBriI,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK0+H,U,CAI/ChC,UACI18H,KAAKk9H,YAAcriI,MAAMO,YAAYytG,aAAa7oG,KAAMA,KAAK0+H,S,CAGjE7G,gBACIh9H,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK2+H,S,CAGvChH,mBAMA,OALK33H,KAAK4+H,gBACN5+H,KAAK4+H,cAAgB,IAAIpiD,OACzBx8E,KAAK4+H,cAAcp+H,WAAahG,UAAUI,gBAC1CoF,KAAK48E,SAAS58E,KAAK4+H,gBAEhB5+H,KAAK4+H,a,CAONF,WAEN,GADA1+H,KAAKk9H,YAAa,EACdl9H,KAAK6+H,WAAa7+H,KAAKyS,WACvB,OAEJ0kH,YAAYiF,aAAap8H,KAAK64H,WAC1B74H,KAAK4+H,eACL5+H,KAAK4+H,cAAcj4B,iBAEvB,IACIm4B,EADA5+F,EAAOlgC,KAAK4xE,MAOhB,IALK1xC,GAAQlgC,KAAK07H,UACdx7F,EAAOlgC,KAAK07H,QACZoD,GAAW,IAGV5+F,EAWD,OAVAlgC,KAAK08E,SAAS/xE,OAAM,GACpB3K,KAAKu8H,SAELv8H,KAAK27H,WAAa37H,KAAK47H,YAAc,EACrC57H,KAAKq+H,WAAa,UACdr+H,KAAK++H,gBACL/+H,KAAKs8H,iBAAkB,EACvBt8H,KAAK++H,gBACL/+H,KAAKs8H,iBAAkB,IAK/B,IAcI0C,EAdAxB,EAAOx9H,KAAKy9H,MAmBhB,GAlBAv9F,EAAOA,EAAKO,QAAQw+F,GAAa,MAC7Bj/H,KAAKk/H,oBACLh/F,EAAOA,EAAKO,QAAQ0+F,GAAoBC,iBACvCN,GAAY9+H,KAAKi+H,gBAClB/9F,EAAOlgC,KAAK+9H,cAAc79F,IAE1BlgC,KAAK29H,OACLz9F,EAAOg6F,UAAUF,cAAcniD,MAAM33C,GACrCs9F,GAAO,IAENsB,GAAY9+H,KAAKq/H,cAClBn/F,EAAOq3F,KAAK+H,cAAct3C,OAAO9nD,EAAKjkC,SAGtC6iI,IACAE,EAAYh/H,KAAK67H,WAAWh+H,MAC5BmC,KAAK67H,WAAWh+H,MAAQmC,KAAKu/H,cAE7B/B,EACA9E,WAAWsB,cAAcniD,MAAM33C,EAAMlgC,KAAK67H,WAAY77H,KAAK64H,UAAW74H,KAAK89H,uBAC1E,CACD,IAAI/hF,EAAMo7E,YAAYqC,YAAYtC,kBAAgBK,MAClD1iH,OAAOs9B,OAAO4J,EAAI5C,MAAOn5C,KAAK67H,YAC9B9/E,EAAI7b,KAAOA,EACXlgC,KAAK64H,UAAUx8H,KAAK0/C,EACvB,CACG+iF,IACA9+H,KAAK67H,WAAWh+H,MAAQmhI,GAE5Bh/H,KAAK2+H,U,CAOCA,WACN,GAAI3+H,KAAKyS,WACL,OAEJzS,KAAKs8H,iBAAkB,EACvBt8H,KAAKg8H,eAAiB,EAEtB,IAEIwD,EAFArC,EAAWn9H,KAAKo9H,WAAap9H,KAAKu7H,WAAahE,KAAKkI,SACpDtK,EAAUn1H,KAAK+7H,SAMnB,GAHIyD,EADAx/H,KAAKu2D,YACOv2D,KAAKoV,OAAS+/G,EAAQ,GAAKA,EAAQ,GAEnCl2G,OAAOygH,UACnB1/H,KAAK49H,UAAY,EAAG,CACpB,IAAI38G,EAAIjhB,KAAK49H,UAAYzI,EAAQ,GAAKA,EAAQ,KACzCgI,GAAYl8G,EAAIu+G,KACjBA,EAAYv+G,GAChBk8G,GAAW,CACd,CACD,IAGI/gE,EAAeC,EACfsjE,EACAC,EACAC,EAAmBC,EACnBpL,EAPAqL,EAAa//H,KAAKw2D,aAAgBx2D,KAAKqV,QAAU8/G,EAAQ,GAAKA,EAAQ,GAAMl2G,OAAOygH,UACnFM,EAAQhgI,KAAK+8H,YAQbzH,aAAgBp1F,IAChB,GAAI8/F,EACA,OAAOA,EAAM1K,aAAap1F,EAAMw0F,GAEhC,GAAIn5H,QAAQI,QACR,OAAQC,OAAe05E,gBAAgBh4B,YAAYpd,GAAM73B,MACxD,CACD,IAAI+I,EAAMvW,MAAMG,QAAQwsB,QAAQ81B,YAAYpd,GAC5C,OAAO9uB,EAAMA,EAAI/I,MAAQ,GAC5B,CACJ,EAGD43H,WAAa,CAAC//F,EAAciZ,KAC5B,GAAI6mF,EACAH,EAAYG,EAAMzK,YAAYb,GAC9BoL,EAAaE,EAAMxK,aAAad,OAC7B,CACH,IAGIwL,EAHAC,GAAWhnF,EAAM09E,OAAS,UAAY,KAAO19E,EAAMy9E,KAAO,QAAU,IAAMlC,EAAW,MAAQ10H,KAAK88H,UAChG3jF,EAAOinF,SAAWD,EAGpB5kI,QAAQI,SACPC,OAAe05E,gBAAgB/3B,KAAO4iF,EACvCD,EAAMtkI,OAAe05E,gBAAgBh4B,YAAYi6E,KAAK8I,aAGtDxlI,MAAMG,QAAQwsB,QAAQ+1B,KAAO4iF,EAC7BD,EAAKrlI,MAAMG,QAAQwsB,QAAQ81B,YAAYi6E,KAAK8I,YAG5CH,GACAL,EAAYK,EAAG73H,MACfy3H,EAAaviI,KAAKoyE,KAAKuwD,EAAG53H,QAAUosH,KAGpCmL,EAAY,IACZC,EAAapL,EAEpB,CAED,IAAI/xF,EAAQzC,EAAK3hC,MAAM,MACvB,GAAI4+H,EACA,IAAK,IAAI1+H,EAAI,EAAG+G,EAAIm9B,EAAM1mC,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1C,IAAI6hI,EAAO39F,EAAMlkC,GACb6hI,EAAKrkI,OAAS,GACdskI,SAASD,EAAMnnF,GACf16C,GAAK+G,EAAI,IACTg7H,UACAC,YAEP,MAGD,IAAK,IAAIhiI,EAAI,EAAG+G,EAAIm9B,EAAM1mC,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1C,IAAI6hI,EAAO39F,EAAMlkC,GACb6hI,EAAKrkI,OAAS,GACdipG,OAAOo7B,EAAMnnF,EAAO,MACpB16C,GAAK+G,EAAI,IACTg7H,UACAC,YAEP,CACJ,EAGDv7B,OAAS,CAAC76F,EAA8B8uC,EAAkB9wC,KAC1D,IAAI09E,EAAgB26C,GAAQzkI,OAAS,EAAIykI,GAAQzjI,MAAa,GAC9D8oF,EAAI7mF,EAAIk9D,EACR2pB,EAAI5mF,EAAIk9D,EACgB,iBAApB,GACKh0D,IACDA,EAAQitH,aAAajrH,IACpB07E,EAAI3N,KACL2N,EAAI3N,GAAK,IAAI/G,UACjB0U,EAAI3N,GAAGzG,QAAQtnE,GACf07E,EAAI3N,GAAG/vE,MAAQA,EACf09E,EAAI3N,GAAGrG,YAAc/xE,KAAKy7H,kBAC1B11C,EAAI19E,MAAQA,EACZ09E,EAAIz9E,OAASw3H,IAGb/5C,EAAI9gD,IAAM56B,EACV07E,EAAI7mF,IACJ6mF,EAAI19E,MAAQgC,EAAOhC,MAAQ,EAC3B09E,EAAIz9E,OAAS+B,EAAO/B,QAExBy9E,EAAI5sC,MAAQA,EACZ4sC,EAAI46C,SAAU,EACd56C,EAAIt4C,KAAO,KACX2uB,GAAS7+D,KAAKoB,MAAMonF,EAAI19E,OAEnBs3H,EAAQ55C,IAGT65C,EAAQnyF,KAAOs4C,EAFf45C,EAAQ55C,IAAMA,EAGlB65C,EAAU75C,CAAG,EAGby6C,QAAU,KAEV,IAAI1L,EAAa,EACb/uC,EAAM45C,EAAQ55C,IAClB,KAAOA,GACCA,EAAIz9E,OAASwsH,IAAYA,EAAa/uC,EAAIz9E,QAC9Cy9E,EAAMA,EAAIt4C,KAKd,IADAs4C,EAAM45C,EAAQ55C,IACPA,GACHA,EAAI5mF,EAAI5B,KAAKgd,MAAkC,IAA3Bu6G,EAAa/uC,EAAIz9E,SACrCy9E,EAAMA,EAAIt4C,KAGI,GAAdqnF,IACAA,EAAagL,GACjBhL,IAEA6K,EAAQr3H,OAASwsH,EACjB6K,EAAQt3H,MAAQ+zD,CAAK,EAGrBqkE,UAAY,KACZrkE,EAAQ,EACJujE,IACAtjE,GAASsjE,EAAQr3H,OAAS/K,KAAKgd,MAAMva,KAAK67H,WAAW5E,QAAUj3H,KAAKg8H,iBAExE2D,EAAUiB,GAAS3kI,OAAS,EAAI2kI,GAAS3jI,MAAa,CAAEikG,KAAM,IAC9Dy+B,EAAQzgI,EAAI,EACZygI,EAAQxgI,EAAIk9D,EACZr8D,KAAK87H,OAAOz/H,KAAKsjI,GAEVA,GAGPY,SAAW,CAACrgG,EAAciZ,KAC1B,IAAI0nF,EAActjI,KAAKuL,IAAI,EAAG02H,EAAYpjE,GAEtC0kE,EAAKxL,aAAap1F,GAEtB,GAAI4gG,GAAMD,EAEN,YADA37B,OAAOhlE,EAAMiZ,EAAO2nF,GAIxB,IAAIC,EAAa,EACbC,EAAY,EACZC,EAAa,EAEbC,EAAUC,UAAUjhG,GACnB8/F,GAAUkB,IAEXH,EAAaxjI,KAAKgd,MAAMsmH,EAAchB,GACvB,GAAdkB,IAAqBA,EAAa,GACnCC,EAAY1L,aAAap1F,EAAK5hC,UAAU,EAAGyiI,IACvCF,EAAcG,GAAsB,GAAT5kE,IAC3BokE,UACAC,YACAI,EAAcrB,IAItB,IAAIhhI,EAAM0hC,EAAKjkC,OACf,IAAK,IAAIyD,EAAIqhI,EAAYrhI,EAAIlB,EAAKkB,IAAK,CAInCohI,EAAKxL,aAAap1F,EAAKthC,OAAOc,IAC9BshI,GAAaF,EACb,IAAIM,GAAc,EAQlB,GAPIF,GAAWxhI,EAAI,EAAIlB,GAAO2iI,UAAUjhG,EAAKthC,OAAOc,GAAKwgC,EAAKthC,OAAOc,EAAI,MACrEshI,GAAaF,GAAM,EACnBphI,IACA0hI,GAAc,GAIdJ,EAAYH,EAAa,CAUzB,GATIO,IACIJ,GAAaF,GAAMA,GAAM,GAEzBphI,IAEAA,KAIC,GAALA,EAAQ,CACJ08D,EAAQ,IACRokE,UACAC,YACAI,EAAcrB,GAElB,QACH,CAGD,IAAI6B,EAAUnhG,EAAK5hC,UAAU2iI,EAAYvhI,GACzCshI,GAAaF,EAGb,IAAIQ,EAAQD,EAAQtiH,WAAWsiH,EAAQplI,OAAS,GAChD,IA2bGslI,EA3beD,IA4bf,IAAMC,GAAW,IAC5BA,GAAW,IAAMA,GAAW,KACjB,KAAZA,EA9bmC,CAEtB,IAAIC,EAAaC,GAAiBC,KAAKL,GACnCG,IACA9hI,EAAI8hI,EAAWj3H,MAAQ02H,EAEC,GAApBO,EAAWj3H,MACX7K,GAAK2hI,EAAQplI,QAGb+kI,EAAY,KACZK,EAAUnhG,EAAK5hC,UAAU2iI,EAAYvhI,IAGhD,CAUD,GAPAwlG,OAAOm8B,EAASloF,EAAO6nF,GACvBR,UACAC,YACAI,EAAcrB,EAGdyB,EAAavhI,IACTA,EAAIqhI,EAAaviI,GAId,CAEH0mG,OAAOhlE,EAAK5hC,UAAU2iI,EAAYziI,GAAM26C,GACxC8nF,GAAc,EACd,KACH,CARqB,GAAdF,IACArhI,GAAKqhI,EAAa,GACtBC,EAAY1L,aAAap1F,EAAK5hC,UAAU2iI,EAAYvhI,EAAI,GAO/D,CACJ,CAwZb,IAAuB6hI,GAvZQ,GAAfN,GACA/7B,OAAOhlE,EAAK5hC,UAAU2iI,EAAYziI,GAAM26C,EAAM,EAGlDwoF,aAAe,KACf,IAAIC,EAAa,EAAGC,EAAa,EACjC,IAAK,IAAIvB,KAAQtgI,KAAK87H,OACdwE,EAAKj4H,MAAQu5H,IACbA,EAAKtB,EAAKj4H,OAEdu5H,EAAK,IACLA,GAAMzM,EAAQ,GAAKA,EAAQ,IAC/Bn1H,KAAK27H,WAAaiG,EAElB,IAAIE,EAAW9hI,KAAK87H,OAAO97H,KAAK87H,OAAO7/H,OAAS,GAC5C6lI,IACAD,EAAKC,EAAS3iI,EAAI2iI,EAASx5H,QAC3Bu5H,EAAK,IACLA,GAAM1M,EAAQ,GAAKA,EAAQ,IAC/Bn1H,KAAK47H,YAAciG,CAAE,EAGrBvoG,IAAM,KACN8iC,EAAQC,EAAQwjE,EAAYC,EAAa,EACzCH,EAAU,KACVC,EAAU,KAEVzD,aAAan8H,KAAK87H,QAClB2E,YAEA,IAAI9zF,EAAW3sC,KAAK64H,UACpB,IAAK,IAAIp6H,EAAI,EAAG+G,EAAImnC,EAAS1wC,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC7C,IAAIs9C,EAAMpP,EAASluC,GACnB,GAAIs9C,EAAIxwC,MAAQ2rH,kBAAgBK,KAC5B7C,EAAWn3H,KAAKgd,MAAMwhC,EAAI5C,MAAMu7E,SAAW10H,KAAKg8H,gBAChC,GAAZtH,IACAA,EAAW,GACfuL,WAAWlkF,EAAI7b,KAAM6b,EAAI5C,YAExB,GAAI4C,EAAIxwC,MAAQ2rH,kBAAgBwC,QAC7BkG,IACAA,EAAQe,SAAU,OAErB,CACD,IAAIoB,EAAUhmF,EAAI9W,IAClB,IAAK88F,EAAS,CACV,IAAInlI,EAAM87H,WAAWuB,SAASl+E,EAAIxwC,MAC9B3O,IACAmlI,EAAUjmI,KAAK4uG,cAAc9tG,GAC7BmlI,EAAQr6H,OAAO1H,KAAM+7C,GACrBA,EAAI9W,IAAM88F,EAEjB,CAED,GAAIA,EAAS,CACT,GAAI5E,EAAU,CACQqC,EAAYpjE,EACZ2lE,EAAQ15H,MAAQ,GAC1B+zD,EAAQ,IACRokE,UACAC,YAGX,CACDv7B,OAAO68B,EAAShmF,EAAI5C,MACvB,CACJ,CACJ,CAEDqnF,UACAmB,cAAc,EAKlB,GAFAroG,MAEIt5B,KAAKu7H,WAAahE,KAAKyK,QACvB,GAAIhiI,KAAK87H,OAAO7/H,OAAS,GAAK+D,KAAK47H,YAAcmE,EAAY,CAEzD,IAAIkC,EAAM,EACNC,EAAOliI,KAAK67H,WAAWnH,SAG3B10H,KAAKg8H,eAAiBz+H,KAAK4I,KAAK45H,EAAa//H,KAAK47H,aAClD,IAAIuG,EAAM5kI,KAAKgd,MAAMva,KAAKg8H,eAAiBh8H,KAAK67H,WAAWnH,UAE3D,KACIp7F,MAEIt5B,KAAK27H,WAAa6D,GAAax/H,KAAK47H,YAAcmE,EAClDmC,EAAOC,EAEPF,EAAME,EACND,EAAOD,EAAM,GAAKC,GAAQD,GAAOE,GAAOD,GACxCC,EAAMF,GAAOC,EAAOD,GAAO,EAC3BjiI,KAAKg8H,eAAiBmG,EAAMniI,KAAK67H,WAAWnH,QAKvD,MACI,GAAI10H,KAAK27H,WAAa6D,IACvBx/H,KAAKg8H,eAAiBwD,EAAYx/H,KAAK27H,WAEvCriG,MAEIt5B,KAAK27H,WAAa6D,GACtB,CACI,IAAIzsH,EAAOxV,KAAKgd,MAAMva,KAAK67H,WAAWnH,SAAW10H,KAAKg8H,gBACtDjpH,IACA/S,KAAKg8H,eAAiBjpH,EAAO/S,KAAK67H,WAAWnH,SAE7Cp7F,KACH,OAGJ,GAAIt5B,KAAKu7H,WAAahE,KAAKkI,WAAaz/H,KAAK27H,WAAa6D,GAAax/H,KAAK47H,YAAcmE,GAAa,CAExG,IAAIthI,EAAIuB,KAAK87H,OAAOtxH,WAAU81H,GAAQA,EAAKnhI,EAAImhI,EAAKh4H,OAASy3H,IACpD,GAALthI,IAAQA,EAAI,GAChB,IAAI2jI,GAAe,GACT,GAAN3jI,GAAWuB,KAAK87H,OAAO7/H,OAASwC,IAChC09H,aAAan8H,KAAK87H,OAAOpxH,OAAOjM,EAAGuB,KAAK87H,OAAO7/H,OAASwC,IACxD2jI,GAAe,GAInB,IAEI30F,EADAs4C,EADW/lF,KAAK87H,OAAO97H,KAAK87H,OAAO7/H,OAAS,GAC7B8pF,IAEfs8C,GAAO,EACX,KAAOt8C,GACHt4C,EAAOs4C,EAAIt4C,KAEP40F,GACIt8C,EAAI9gD,IACJ8gD,EAAI9gD,IAAM,KACL8gD,EAAI3N,IACT2N,EAAI3N,GAAGvG,aACX6uD,GAAQrkI,KAAK0pF,MAENt4C,GAAQ20F,GAAiBr8C,EAAI7mF,EAAI6mF,EAAI19E,MAAQm3H,KAChDz5C,EAAI9gD,MACJ8gD,EAAI9gD,IAAM,MACT8gD,EAAI3N,KACL2N,EAAI3N,GAAK,IAAI/G,UAEjB0U,EAAI3N,GAAGzG,QAAQoU,EAAI3N,GAAGl4C,KAAK5hC,UAAU,EAAGf,KAAKuL,IAAI,EAAGi9E,EAAI3N,GAAGl4C,KAAKjkC,OAAS,IAAMqmI,IAC/E5N,EAAW3uC,EAAI5sC,MAAMu7E,SACrB3uC,EAAI19E,MAAQ09E,EAAI3N,GAAG/vE,MAAQitH,aAAavvC,EAAI3N,GAAGl4C,MAC/C6lD,EAAI3N,GAAGrG,YAAc/xE,KAAKy7H,kBAC1B11C,EAAIt4C,KAAO,KACX40F,GAAO,GAGXt8C,EAAMt4C,EAGN40F,GACAV,cACP,CAEG3hI,KAAK++H,eACL/+H,KAAK++H,gBAGT,IAAItzC,EAAiC,UAAzBzrF,KAAK67H,WAAWpwC,MAAoB,EAA8B,SAAzBzrF,KAAK67H,WAAWpwC,MAAmB,EAAI,EAC5F,GAAa,GAATA,GAAczrF,KAAKu2D,YAAa,CAChC,IAAIipE,EAAYx/H,KAAKoV,OAAS+/G,EAAQ,GAAKA,EAAQ,GACnD,IAAK,IAAImL,KAAQtgI,KAAK87H,OAAQ,CAC1B,IAAIpvG,EAAU,EACD,GAAT++D,EACA/+D,EAAUnvB,KAAKgd,MAAiC,IAA1BilH,EAAYc,EAAKj4H,QACzB,GAATojF,IACL/+D,EAAU8yG,EAAYc,EAAKj4H,OAE3BqkB,EAAU,IACV4zG,EAAKphI,EAAIwtB,EAChB,CACJ,CAGD,GAAI1sB,KAAKw2D,cAAgBx2D,KAAK47H,YAAc57H,KAAKqV,QAAS,CACtD,IAAIsX,EAAU,EAMd,GAL+B,WAA3B3sB,KAAK67H,WAAW7E,OAChBrqG,EAAUpvB,KAAKgd,MAA0C,IAAnCva,KAAKqV,QAAUrV,KAAK47H,cACV,WAA3B57H,KAAK67H,WAAW7E,SACrBrqG,EAAU3sB,KAAKqV,QAAUrV,KAAK47H,aAE9BjvG,EAAU,EACV,IAAK,IAAI2zG,KAAQtgI,KAAK87H,OAClBwE,EAAKnhI,GAAKwtB,CAGrB,CAED,GAAI3sB,KAAKu7H,WAAahE,KAAKgL,SACnBviI,KAAKu2D,aAAev2D,KAAK27H,WAAa37H,KAAKoV,QAAUpV,KAAKw2D,cAAgBx2D,KAAK47H,YAAc57H,KAAKqV,SACtG,GAAKrV,KAAKq+H,WAEL,CACD,IAAIC,EAAat+H,KAAKs+H,WAClBG,EAAaz+H,KAAKy+H,WAClBz+H,KAAKq+H,WAAWn/H,EAAIo/H,IACpBt+H,KAAKq+H,WAAWn/H,EAAIo/H,GACpBt+H,KAAKq+H,WAAWl/H,EAAIs/H,IACpBz+H,KAAKq+H,WAAWl/H,EAAIs/H,EAC3B,MARGz+H,KAAKq+H,WAAa,IAAIv2H,MAAM,EAAG,QAWnC9H,KAAKq+H,WAAa,KAElBr+H,KAAK4+H,gBACL5+H,KAAK4+H,cAAc7rH,KAAK/S,KAAKoV,OAAQpV,KAAKqV,SAEtCrV,KAAKq+H,YAAcr+H,KAAKu7H,WAAahE,KAAKiL,QAAUxiI,KAAK4+H,cAAc72B,YAAc,GAChF/nG,KAAK4+H,cAAcxlE,aACpBp5D,KAAK4+H,cAAcxlE,WAAa,IAAIhxD,WACxCpI,KAAK4+H,cAAcxlE,WAAWrzD,MAAM,EAAG,EAAG/F,KAAKoV,OAAQpV,KAAKqV,UAG5DrV,KAAK4+H,cAAcxlE,WAAa,MAGxCp5D,KAAKs8H,iBAAkB,EAEvBt8H,KAAKu+H,Y,CASCA,aACN,IAAI7hD,EAAW18E,KAAK08E,SACpBA,EAAS/xE,OAAM,GACf3K,KAAKu8H,SAEL,IAAIpH,EAAUn1H,KAAK+7H,SACf0G,EAActN,EAAQ,GACtBuN,EAAavN,EAAQ,GACrB6K,EAAQhgI,KAAK+8H,YACb4F,EAAY3iI,KAAKq+H,WACjBmB,EAAYx/H,KAAKu2D,YAAcv2D,KAAKoV,OAASpV,KAAK27H,WAClDoE,EAAa//H,KAAKw2D,aAAex2D,KAAKqV,QAAUrV,KAAK47H,YACrDpzH,EAASu3H,EAAa5K,EAAQ,GAC9ByN,EAAU5iI,KAAKu7H,WAAahE,KAAKiL,QAAUxiI,KAAKu7H,WAAahE,KAAKgL,OAElEK,IACAlmD,EAAS9tC,OACT8tC,EAASrjB,SAAS,EAAG,EAAGmmE,EAAWO,GACnC//H,KAAKktF,WAGTsyC,GAAcrK,EAAQ,GAAKA,EAAQ,GACnC4K,GAAe5K,EAAQ,GAAKA,EAAQ,GAEpC,IAGI0N,EACAC,EAJA5jI,EAAI,EAAGC,EAAI,EACXwjC,EAAQ3iC,KAAK87H,OACbiH,EAAUpgG,EAAM1mC,OAGpB,IAAK,IAAIwC,EAAI,EAAGA,EAAIskI,EAAStkI,IAAK,CAC9B,IAAI6hI,EAAO39F,EAAMlkC,GACjBS,EAAIujI,EAAcnC,EAAKphI,EACvBC,EAAIujI,EAAapC,EAAKnhI,EAClBwjI,IACAzjI,GAAKyjI,EAAUzjI,EACfC,GAAKwjI,EAAUxjI,GAEnB,IAAI6jI,EAAcJ,IAAazjI,EAAImhI,EAAKh4H,QAAWo6H,GAAcvjI,GAAKqJ,GAElEu9E,EAAMu6C,EAAKv6C,IACf,KAAOA,GAAK,CAQR,GAPIA,EAAI46C,SACAkC,IACAA,EAAQ72D,QAAQ82D,EAAY3jI,EAAGD,EAAI6mF,EAAI7mF,EAAI6mF,EAAI19E,MAAQy6H,EAAYxC,EAAKh4H,QACxEu6H,EAAU,MAId98C,EAAI9gD,IACJ8gD,EAAI9gD,IAAIznB,IAAIte,EAAI6mF,EAAI7mF,EAAGC,EAAI4mF,EAAI5mF,GAE3B4mF,EAAI9gD,IAAIya,QAAQn0C,MAAQ2rH,kBAAgBuC,OACxCoJ,EAAoB98C,EAAI9gD,IACxB49F,EAAQ3K,YACR4K,EAAa5jI,EAAI6mF,EAAI7mF,QAGxB,IAAK8jI,EACN,GAAIhD,EAAO,CACP,IAAIh8H,EAAa,EACbjG,EAAMgoF,EAAI3N,GAAGl4C,KACbriC,EAAQmiI,EAAMpL,KAAO7uC,EAAI5sC,MAAMt7C,MAAQ,UACvC4G,EAAQlH,KAAKgd,OAAOylH,EAAMrL,cAAgB5uC,EAAI5sC,MAAMu7E,SAAWsL,EAAMtL,UAAY10H,KAAKg8H,gBAAkBgE,EAAMtL,SAClH,IAAK,IAAIj2H,EAAI,EAAG+G,EAAIzH,EAAI9B,OAAQwC,EAAI+G,EAAG/G,IAAK,CACxC,IAAIqF,EAAI/F,EAAIghB,WAAWtgB,GACnB6rB,EAAI01G,EAAM5wG,KAAKtrB,GACfwmB,IACIA,EAAE/D,SACFm2D,EAASj1D,UAAU6C,EAAE/D,QAASrnB,EAAI6mF,EAAI7mF,EAAI8E,EAAKsmB,EAAEprB,EAAIuF,EAAOtF,EAAI4mF,EAAI5mF,EAAImrB,EAAEnrB,EAAIsF,EAAO6lB,EAAEjiB,MAAQ5D,EAAO6lB,EAAEhiB,OAAS7D,EAAO5G,GAC5HmG,GAAMzG,KAAKoB,MAAM2rB,EAAE+qG,QAAU5wH,GAEpC,CACJ,KAAM,CACH,IAAI07H,EAAgBp6C,EAAI5sC,MAAOinF,SAC3Br6C,EAAI5sC,MAAM+3C,OACVxU,EAASuP,eAAelG,EAAI3N,GAAIl5E,EAAI6mF,EAAI7mF,EAAGC,EAAI4mF,EAAI5mF,EAAGghI,EAASp6C,EAAI5sC,MAAMt7C,MAAO,KAAMkoF,EAAI5sC,MAAM+3C,OAAQnL,EAAI5sC,MAAMy+B,aAElH8E,EAAS3H,SAASgR,EAAI3N,GAAIl5E,EAAI6mF,EAAI7mF,EAAGC,EAAI4mF,EAAI5mF,EAAGghI,EAASp6C,EAAI5sC,MAAMt7C,MAAO,KACjF,CAGL,IAAKmlI,GAAej9C,EAAI5sC,MAAM29E,UAAW,CACrC,IAAImM,EAAY1lI,KAAKuL,IAAI,EAAGi9E,EAAI5sC,MAAMu7E,SAAW10H,KAAKg8H,eAAiB,IACvEt/C,EAAS6oB,SAASrmG,EAAI6mF,EAAI7mF,EAAGC,EAAImhI,EAAKh4H,OAAS26H,EAAW/jI,EAAI6mF,EAAI7mF,EAAI6mF,EAAI19E,MAAOlJ,EAAImhI,EAAKh4H,OAAS26H,EAAWl9C,EAAI5sC,MAAM49E,gBAAkBhxC,EAAI5sC,MAAMt7C,MAAOolI,EAC9J,CAEDl9C,EAAMA,EAAIt4C,IACb,CAEGo1F,IACAA,EAAQ72D,QAAQ82D,EAAY3jI,EAAGqgI,EAAYsD,EAAaL,EAAanC,EAAKh4H,QAC1Ew6H,EAAaL,EAEpB,CAEGG,GACAlmD,EAASxvD,S,CAGPqvG,SACN,IAAIx2C,EAAM/lF,KAAKkjI,WACf,GAAIljI,KAAKs9H,UAAYt9H,KAAKkiG,aAAc,CAC/Bnc,IACDA,EAAM,IAAI0Z,YACV1Z,EAAI7mF,EAAI6mF,EAAI5mF,EAAI,EAChB4mF,EAAI19E,MAAQ09E,EAAIz9E,OAAS,EACzBy9E,EAAIqY,SAAU,EACdp+F,KAAKkjI,WAAan9C,GAEtBA,EAAIsD,UAAYrpF,KAAKs9H,SACrBv3C,EAAI6C,UAAY5oF,KAAKkiG,aACrBnc,EAAI7jB,UAAYliE,KAAKkiG,aAAe,EAAI,EAExC,IAAIhB,EAAOlhG,KAAK08E,SAASwkB,KACrBziG,EAAIyiG,EAAKhjG,QAAQ6nF,GACZ,GAALtnF,KACU,GAANA,GACAyiG,EAAKx2F,OAAOjM,EAAG,GACnByiG,EAAKkK,QAAQrlB,GACb/lF,KAAK08E,SAASwkB,KAAOA,EAE5B,MACQnb,GACL/lF,KAAK08E,SAASyoB,UAAUpf,E,EAp7CzBwxC,KAAOiE,QAAW,UAElBjE,KAAMgL,OAAW,SAEjBhL,KAAMiL,OAAW,SAEjBjL,KAAMyK,OAAW,SAEjBzK,KAAQkI,SAAW,WAKnBlI,KAAW4L,aAAY,EAGvB5L,KAAS8I,UAAW,IACpB9I,KAAa+H,cAAG,IAGR/H,KAAY2E,aAA+B,GAw7C9D,MAAMwE,GAA2B,GAC3BE,GAA6B,GAEnC,SAASzE,aAAax5F,GAClB,IAAK,IAAI29F,KAAQ39F,EAAO,CACpB,IAAIojD,EAAMu6C,EAAKv6C,IACf,KAAOA,GACCA,EAAI9gD,IACJ8gD,EAAI9gD,IAAM,KACL8gD,EAAI3N,IACT2N,EAAI3N,GAAGvG,aACX6uD,GAAQrkI,KAAK0pF,GACbA,EAAMA,EAAIt4C,KAEd6yF,EAAKv6C,IAAM,IACd,CAED66C,GAASvkI,QAAQsmC,GACjBA,EAAM1mC,OAAS,CACnB,CAEA,MAAMmnI,GAAY,kCAClB,SAASjC,UAAUpjI,GACf,OAAI,MAAQA,GACLqlI,GAAU3lF,KAAK1/C,EAC1B,CAQA,MAAM0jI,GAAmB,mBACnBxC,GAAc,QACdE,GAAqB,UACrBkE,GAAsB,CAAE,MAAO,KAAM,MAAO,MAC5Cf,GAAc,IAEpB,SAASlD,cAAc3/F,GACnB,OAAO4jG,GAAe5jG,EAC1B,CChmDA,IAAI6jG,IAAgB,EACpB,MAAM1hC,GAAa,IAAI95F,MACjBy7H,GAAY,IAAIn7H,UAChBo7H,GAA8B,GAC9BC,GAA6B,GACnC,IAAIC,G,MAESC,aAiCTpnI,cACIyD,KAAK8L,SAAW,GAChB9L,KAAK4jI,WAAa,GAClB5jI,KAAK6jI,YAAc,IAAIC,UAAU9jI,KAAK8L,UACtC9L,KAAK+jI,WAAa,IAAInzH,IACtB5Q,KAAKgkI,UAAY,IAAI94H,MACrBlL,KAAKgkI,UAAUl4H,SAAW9L,KAAK8L,Q,CAGxB8wB,kBACP,OAAO8mG,E,CAGX1sI,mBAAmBmU,G,QACf,OAAe,MAAXA,GACwB,QAAjBzI,EAAAghI,GAAM53H,SAAS,UAAE,IAAApJ,OAAA,EAAAA,EAAE8a,MAAO1V,MAAMF,OAET,QAAvB5E,EAAA0gI,GAAMO,SAAS94H,UAAQ,IAAAnI,OAAA,EAAAA,EAAEwa,MAAO1V,MAAMF,K,CAG1Cs8H,yBACP,OAAOR,GAAMS,Y,CAGNt4H,qBACP,OAAO63H,GAAM53H,Q,CAGNs4H,wBACP,OAAOV,GAAM53H,SAAS7P,M,CAG1BjF,mBAAmBmU,GACf,IAAIonE,EAAmB,MAAXpnE,EAAkBu4H,GAAM53H,SAAS,GAAK43H,GAAMO,SAAS94H,GAC7DonE,IACAA,EAAM8xD,gBAAiB,E,CAQ/BrtI,kBAAkBoV,GACd,OAAOs3H,GAAMK,WAAWt4H,IAAIW,E,CAOhCpV,gBAAgBsE,EAAcisB,GAC1B,IAAIqV,EAAO8mG,GAAQ,IAAIC,aACvB/mG,EAAK0nG,OAAShpI,EAEdisB,EAAOg9G,cAAgB,KACZ,EAEXh9G,EAAOi9G,iBAAiB,aAAahzH,IAC5BxW,QAAQq/C,MACR7oC,EAAa,YAAMA,EAAGizH,iBACtB7nG,EAAK8nG,aACN9nG,EAAK+nG,YAAYnzH,EAAI,EAAE,GAC5B,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,WAAWhzH,IAC9BA,EAAa,YAAMA,EAAGizH,iBAClB7nG,EAAK8nG,aACN9nG,EAAK+nG,YAAYnzH,EAAI,EAAE,GAC5B,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,aAAahzH,IAChCA,EAAa,YAAMA,EAAGizH,iBAClB7nG,EAAK8nG,aACN9nG,EAAK+nG,YAAYnzH,EAAI,EAAE,GAC5B,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,YAAYhzH,IAC3BorB,EAAK8nG,aACN9nG,EAAK+nG,YAAYnzH,EAAI,EAAE,GAC5B,CAAEozH,SAAS,IAIdr9G,EAAOi9G,iBAAiB,cAAchzH,IAClCorB,EAAK8nG,aAAc,EACdpB,IAAkBK,aAAakB,iBAC/BrzH,EAAa,YAAMA,EAAGizH,iBAC3B7nG,EAAKkoG,YAAYtzH,EAAI,EAAE,GACxB,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,YAAYhzH,IAC3B8xH,IAAkBK,aAAakB,iBAC/BrzH,EAAa,YAAMA,EAAGizH,iBAC3BnB,IAAgB,EAChB1mG,EAAKkoG,YAAYtzH,EAAI,EAAE,GACxB,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,aAAahzH,IAChCA,EAAa,YAAMA,EAAGizH,iBACvB7nG,EAAKkoG,YAAYtzH,EAAI,EAAE,GACxB,CAAEozH,SAAS,IACdr9G,EAAOi9G,iBAAiB,eAAehzH,IAClCA,EAAa,YAAMA,EAAGizH,iBACvB7nG,EAAKkoG,YAAYtzH,EAAI,EAAE,GACxB,CAAEozH,SAAS,IAEdr9G,EAAOi9G,iBAAiB,SAAShzH,IAC7BorB,EAAK+nG,YAAYnzH,EAAI,EAAE,GACxB,CAAEozH,SAAS,IAEdr9G,EAAOi9G,iBAAiB,eAAehzH,IACnC+V,EAAOw9G,kBAAkBvzH,EAAGwzH,UAAU,IAE1Cz9G,EAAOi9G,iBAAiB,aAAahzH,IACjC+V,EAAO09G,sBAAsBzzH,EAAGwzH,UAAU,IAC3C,GAEH,IAAIxtF,EAAqBx8C,QAAQw8C,SACjCA,EAASgtF,iBAAiB,WAAWhzH,IACjCorB,EAAKsoG,WAAW1zH,EAAG,IACpB,GACHgmC,EAASgtF,iBAAiB,YAAYhzH,IAClCorB,EAAKsoG,WAAW1zH,EAAG,IACpB,GACHgmC,EAASgtF,iBAAiB,SAAShzH,IAC/BorB,EAAKsoG,WAAW1zH,EAAG,IACpB,E,CAGPmzH,YAAYnzH,EAA6BjG,G,cACrCvL,KAAKmlI,WAAa55H,EAClBvL,KAAKolI,aAAe5zH,EAGpB,IAAI+gE,EAAmBvyE,KAAK6jI,YAE5BjiC,GAAW77F,MAAMyL,EAAG6zH,OAAS7zH,EAAG8zH,QAAS9zH,EAAG+zH,OAAS/zH,EAAGg0H,SACpDxlI,KAAKskI,OAAOj1B,kBACZrvG,KAAKskI,OAAOj1B,iBAAiBhqG,qBAAqBu8F,IACtD+hC,aAAa90B,OAASjN,GAAW1iG,EACjCykI,aAAa50B,OAASnN,GAAWziG,EACjC,IAAID,EAAI0iG,GAAW1iG,EAAIc,KAAKskI,OAAO3zB,aAC/BxxG,EAAIyiG,GAAWziG,EAAIa,KAAKskI,OAAO1zB,aAGnC,GADAr+B,EAAMphE,MAAMnF,YAAcwF,EACd,GAARjG,GAAco4H,aAAa8B,mBAE1B,CACDlzD,EAAMloE,OAASrK,KAAKmkI,aAAenkI,KAAK0lI,kBAAkBxmI,EAAGC,GAE7D,IAAI4gF,EAAKxiF,KAAKoB,MAAMO,GAChB8gF,EAAKziF,KAAKoB,MAAMQ,GAEpB,IAAI4gF,GAAMxN,EAAM/0D,IAAIte,GAAK8gF,GAAMzN,EAAM/0D,IAAIre,KACrCa,KAAKskI,OAAOqB,eAAiB3qI,QAAQmhD,MAErCo2B,EAAM/0D,IAAIzX,MAAMg6E,EAAIC,GACpBzN,EAAMqzD,OAEFjC,aAAa8B,oBAAoB,CACjClzD,EAAMloE,OAAOi8F,YAAYp7F,MAAMgC,WAAYqlE,EAAMphE,OAEjD,IAAK,IAAI+qD,KAAKqW,EAAMszD,YAChB3pE,EAAE/qD,MAAMjG,MAAMuC,WAAY8kE,EAAMphE,MACvC,CAER,MApBGohE,EAAMloE,OAASrK,KAAKmkI,aAAe,KAyBvC,GAHI5xD,EAAMuzD,cAAgBvzD,EAAMloE,QAC5BrK,KAAK+lI,eAAexzD,GAEZ,GAARhnE,EACKgnE,EAAMyzD,QACPzzD,EAAMlzC,QACNr/B,KAAK8L,SAAS,GAAKymE,EACnBA,EAAMphE,MAAM9F,OAASmG,EAAGnG,OAEpBs4H,aAAa8B,qBACbzlI,KAAKimI,cAEY,GAAbz0H,EAAGnG,OACS,QAAZ3I,EAAA6vE,EAAMloE,cAAM,IAAA3H,KAAE4jG,YAAYp7F,MAAM0B,WAAY2lE,EAAMphE,OAEtC,QAAZnO,EAAAuvE,EAAMloE,cAAM,IAAArH,KAAEsjG,YAAYp7F,MAAM4B,iBAAkBylE,EAAMphE,cAInE,GAAY,GAAR5F,GACL,GAAIgnE,EAAMyzD,MAAO,CAKb,GAJAzzD,EAAMp3D,MACNnb,KAAK8L,SAAS7P,OAAS,EACvBs2E,EAAMphE,MAAM9F,OAASmG,EAAGnG,OAEpBs4H,aAAa8B,mBAAoB,CAMjC,GALiB,GAAbj0H,EAAGnG,OACS,QAAZ66H,EAAA3zD,EAAMloE,cAAM,IAAA67H,KAAE5/B,YAAYp7F,MAAM2B,SAAU0lE,EAAMphE,OAEpC,QAAZg1H,EAAA5zD,EAAMloE,cAAM,IAAA87H,KAAE7/B,YAAYp7F,MAAM6B,eAAgBwlE,EAAMphE,OAEtDohE,EAAM6zD,MACN,IAAK,IAAIlqE,KAAKqW,EAAMszD,YAChB3pE,EAAE/qD,MAAMjG,MAAMwC,eAAgB6kE,EAAMphE,OAG5C,IAAIk1H,EAAc9zD,EAAM+zD,YACpBD,IACiB,GAAb70H,EAAGnG,QACHknE,EAAMphE,MAAMo1H,WAAiC,GAApBh0D,EAAMi0D,WAE/BH,EAAY//B,YAAYp7F,MAAM8B,MAAOulE,EAAMphE,OAEnB,GAApBohE,EAAMi0D,YACNH,EAAY//B,YAAYp7F,MAAMsC,aAAc+kE,EAAMphE,OAEtDohE,EAAMphE,MAAMo1H,YAAa,IAGzBh0D,EAAMphE,MAAMo1H,WAAiC,GAApBh0D,EAAMi0D,WAC/BH,EAAY//B,YAAYp7F,MAAM+B,YAAaslE,EAAMphE,OACjDohE,EAAMphE,MAAMo1H,YAAa,GAGpC,CAEDh0D,EAAMphE,MAAM9F,OAAS,CACxB,OAEY,GAARE,GACDo4H,aAAa8B,qBACblzD,EAAMphE,MAAM/F,MAAkC,KAAboG,EAAIi1H,OACzB,QAAZC,EAAAn0D,EAAMloE,cAAM,IAAAq8H,KAAEpgC,YAAYp7F,MAAMmC,YAAaklE,EAAMphE,OACnDohE,EAAMphE,MAAM/F,MAAQ,E,CAKhC05H,YAAYtzH,EAAgBjG,G,QACxBvL,KAAKmlI,WAAa55H,EAClBvL,KAAKolI,aAAe5zH,EAEpB,IAAI3F,EAAU2F,EAAGm1H,eACjB,IAAK,IAAIloI,EAAI,EAAGA,EAAIoN,EAAQ5P,SAAUwC,EAAG,CACrC,IAAImoI,EAAgB/6H,EAAQpN,GAE5B,IAAKklI,aAAakD,mBACX7mI,KAAK8L,SAAS7P,OAAS,GACvB+D,KAAK8L,SAAS,GAAGX,SAAWy7H,EAAOE,WACtC,SAEJllC,GAAW77F,MAAM6gI,EAAOvB,MAAOuB,EAAOrB,OAClCvlI,KAAKskI,OAAOj1B,kBACZrvG,KAAKskI,OAAOj1B,iBAAiBhqG,qBAAqBu8F,IACtD+hC,aAAa90B,OAASjN,GAAW1iG,EACjCykI,aAAa50B,OAASnN,GAAWziG,EACjC,IAAID,EAAI0iG,GAAW1iG,EAAIc,KAAKskI,OAAO3zB,aAC/BxxG,EAAIyiG,GAAWziG,EAAIa,KAAKskI,OAAO1zB,aAE/Br+B,EAAQvyE,KAAKikI,SAAS2C,EAAOE,WAAoB,GAARv7H,GAC7C,GAAKgnE,EAAL,CAKA,GAFAA,EAAMphE,MAAMnF,YAAcwF,EAC1B+gE,EAAMphE,MAAMhG,QAAUonE,EAAMpnE,QAChB,GAARI,GAAco4H,aAAa8B,mBAE1B,CACDlzD,EAAMloE,OAASrK,KAAKmkI,aAAenkI,KAAK0lI,kBAAkBxmI,EAAGC,GAC7Da,KAAKskI,OAAOqB,eAAiB3qI,QAAQmhD,MAErC,IAAI4jC,EAAKxiF,KAAKoB,MAAMO,GAChB8gF,EAAKziF,KAAKoB,MAAMQ,GAEpB,IAAI5B,KAAKglE,IAAIwd,EAAKxN,EAAM/0D,IAAIte,GAAK,KAAO3B,KAAKglE,IAAIyd,EAAKzN,EAAM/0D,IAAIre,GAAK,OACjEozE,EAAM/0D,IAAIzX,MAAMg6E,EAAIC,GAER,GAARz0E,IACAgnE,EAAMqzD,OAEFjC,aAAa8B,qBAAoB,CAEjClzD,EAAMloE,OAAOi8F,YAAYp7F,MAAMgC,WAAYqlE,EAAMphE,OAEjD,IAAK,IAAI+qD,KAAKqW,EAAMszD,YAChB3pE,EAAE/qD,MAAMjG,MAAMuC,WAAY8kE,EAAMphE,MACvC,CAGZ,MAvBGohE,EAAMloE,OAASrK,KAAKmkI,aAAe,KA4BvC,GAHI5xD,EAAMuzD,cAAgBvzD,EAAMloE,QAC5BrK,KAAK+lI,eAAexzD,GAEZ,GAARhnE,EACKgnE,EAAMyzD,QACPzzD,EAAMlzC,QAEFskG,aAAa8B,qBACbzlI,KAAKimI,cACO,QAAZvjI,EAAA6vE,EAAMloE,cAAM,IAAA3H,KAAE4jG,YAAYp7F,MAAM0B,WAAY2lE,EAAMphE,cAIzD,IAAY,GAAR5F,GAAqB,GAARA,IACdgnE,EAAMyzD,MAAO,CAGb,GAFAzzD,EAAMp3D,MAEFwoH,aAAa8B,mBAAoB,CAGjC,GAFY,QAAZziI,EAAAuvE,EAAMloE,cAAM,IAAArH,KAAEsjG,YAAYp7F,MAAM2B,SAAU0lE,EAAMphE,OAE5CohE,EAAM6zD,MACN,IAAK,IAAIlqE,KAAKqW,EAAMszD,YAChB3pE,EAAE/qD,MAAMjG,MAAMwC,eAAgB6kE,EAAMphE,OAG5C,GAAY,GAAR5F,EAAW,CACX,IAAI86H,EAAc9zD,EAAM+zD,YACL,MAAfD,IACA9zD,EAAMphE,MAAMo1H,WAAiC,GAApBh0D,EAAMi0D,WAE/BH,EAAY//B,YAAYp7F,MAAM8B,MAAOulE,EAAMphE,OAEnB,GAApBohE,EAAMi0D,YACNH,EAAY//B,YAAYp7F,MAAMsC,aAAc+kE,EAAMphE,OAEtDohE,EAAMphE,MAAMo1H,YAAa,EAEhC,CACJ,CAEDh0D,EAAMloE,OAAS,KACfrK,KAAK+lI,eAAexzD,GAEpBA,EAAMxqE,QACN/H,KAAK8L,SAASpB,OAAO1K,KAAK8L,SAAS5N,QAAQq0E,GAAQ,GACnDvyE,KAAK4jI,WAAWvnI,KAAKk2E,EACxB,CA5ED,CA8EP,C,CAGG0xD,SAAS94H,EAAiB47H,GAC9B,IAAIx0D,EAAQvyE,KAAK8L,SAASskE,MAAKvvD,GAAKA,EAAE1V,SAAWA,IACjD,OAAIonE,IAAUw0D,IAGdx0D,EAAQvyE,KAAK4jI,WAAW3nI,OAAS,EAAI+D,KAAK4jI,WAAW3mI,MAAQ,IAAI6mI,UAAU9jI,KAAK8L,UAChFymE,EAAMpnE,QAAUA,EAChBnL,KAAK8L,SAASzP,KAAKk2E,IAJRA,C,CASP0zD,cACJ,GAAItC,aAAakB,iBACV7kI,KAAKskI,OAAO0C,OAAehnI,KAAKskI,OAAO0C,MAAc,QACpDhnI,KAAKskI,OAAO0C,MAAMt+H,SAAS1I,KAAKmkI,cAAe,CAGnD,IAAI8C,EAAuBjnI,KAAKskI,OAAO0C,MAAY,KAAKhnI,KAAKskI,OAAO0C,MAChEE,EAAkBlnI,KAAKmkI,aAAmB,KAAKnkI,KAAKmkI,aAIpD+C,EAAUC,aAAeD,EAAUE,WAAaH,EAAUG,UAC1DH,EAAqB,YAErBA,EAAUD,OAAQ,CACzB,C,CAGL9B,WAAW1zH,GACP,IAAIjG,EAAOiG,EAAGjG,KACVc,EAAUmF,EAAGnF,QAejB,GAba,YAATd,GACe,GAAXc,GACArM,KAAK+jI,WAAWjhI,IAAIuJ,GACxBrM,KAAK+jI,WAAWjhI,IAAI0O,EAAGpF,MAET,UAATb,IACU,GAAXc,GACArM,KAAK+jI,WAAWnc,OAAOv7G,GAC3BrM,KAAK+jI,WAAWnc,OAAOp2G,EAAGpF,MAG9BpM,KAAKgkI,UAAUh4H,YAAcwF,EAEzBmyH,aAAa0D,iBAAkB,CAC/B,IAAIh9H,EAAUrK,KAAKskI,OAAO0C,OAAqC,MAA3BhnI,KAAKskI,OAAO0C,MAAM71H,OAAkBnR,KAAKskI,OAAO0C,MAAM/+B,iBAAoBjoG,KAAKskI,OAAO0C,MAAQhnI,KAAKskI,OACnIlP,EAAK/qH,EACT,KAAO+qH,GACHA,EAAGjkH,MAAM5F,EAAMvL,KAAKgkI,UAAUj+H,MAAMwF,EAAM6pH,EAAI/qH,IAC9C+qH,EAAKA,EAAG/0F,MAEf,CAEDrgC,KAAKgkI,UAAUh4H,YAAc,I,CAGjC05H,kBAAkBxmI,EAAWC,GACzB,IAAIkL,EAAerK,KAAKsnI,oBAAoBtnI,KAAKskI,OAAQplI,EAAGC,GAG5D,OAFKkL,IACDA,EAASrK,KAAKunI,sBAAsBroI,EAAGC,IACpCkL,GAAUrK,KAAKskI,M,CAS1BgD,oBAAoBj+H,EAAYnK,EAAWC,GAEvC,IAAIi6D,EAAa/vD,EAAG6sD,OAAOkD,WAC3B,GAAIA,IAAe/vD,EAAGwtD,QAAQz9D,UAAUc,0BACpCqpI,GAAUx9H,MAAMqzD,EAAWl6D,EAAGk6D,EAAWj6D,EAAGi6D,EAAW/wD,MAAO+wD,EAAW9wD,SACpEi7H,GAAU76H,SAASxJ,EAAGC,IACvB,OAAO,KAGf,IAAIqoI,EAAUn+H,EAAGwtD,QAAQz9D,UAAUiB,cAEnC,IAAKmtI,GAAWn+H,EAAG0oG,eAAiB1oG,EAAGwoG,cAAgBxoG,GAAMrJ,KAAKskI,SAAWtkI,KAAKynI,QAAQp+H,EAAInK,EAAGC,GAC7F,OAAO,KAEX,IAAK,IAAIV,EAAI4K,EAAGmuD,UAAUv7D,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CAC/C,IAAI2oG,EAAgB/9F,EAAGmuD,UAAU/4D,GAC7BipI,EAAeF,GAAWpgC,EAAMvwC,QAAQz9D,UAAUiB,cAEtD,IAAK+sG,EAAM30F,aACHi1H,IAAkBtgC,EAAM1mG,YAAYlG,UAAUC,kBAAoB2sG,EAAMyK,gBAAkBzK,EAAMvwC,QAAQz9D,UAAUkB,gBAAmB8sG,EAAMoK,YAAc,KACzJpK,EAAMvvC,UAAYuvC,EAAMvwC,QAAQz9D,UAAUgB,qBAAsB,CACpEwnG,GAAW77F,MAAM7G,EAAGC,GACpBioG,EAAMsQ,gBAAgB9V,IACtB,IAAIxwF,EAAMpR,KAAKsnI,oBAAoBlgC,EAAOxF,GAAW1iG,EAAG0iG,GAAWziG,GACnE,GAAIiS,EACA,OAAOA,CACd,CACJ,CAED,GAAIo2H,GACA,IAAKn+H,EAAGwtD,QAAQz9D,UAAUmB,kBAClB8O,EAAG3I,YAAYlG,UAAUC,kBAC1BuF,KAAKynI,QAAQp+H,EAAInK,EAAGC,EAAGqoI,GAC1B,OAAOn+H,OAEV,GAAIA,GAAMrJ,KAAKskI,SACZj7H,EAAG0oG,eAAiB1oG,EAAGwoG,cAAgB7xG,KAAKynI,QAAQp+H,EAAInK,EAAGC,IAC3D,OAAOkK,EAGf,OAAO,I,CAGXk+H,sBAAsBroI,EAAWC,GAC7B,OAAO,I,CAGXsoI,QAAQp+H,EAAYnK,EAAWC,EAAWqoI,GACtC,IAAIG,GAAiB,EACjBt+H,EAAG+vD,aACHl6D,GAAKmK,EAAG6sD,OAAOkD,WAAWl6D,EAC1BC,GAAKkK,EAAG6sD,OAAOkD,WAAWj6D,GAE9B,IAAIm6D,EAAUjwD,EAAG6sD,OAAOoD,QACpBu4C,EAAexoG,EAAGwoG,aAMtB,OALI21B,IACAluE,EAAU,KACVu4C,GAAe,GAGfv4C,EACOA,EAAQ5wD,SAASxJ,EAAGC,EAAGkK,KAG9BA,EAAGhB,MAAQ,GAAKgB,EAAGf,OAAS,GAAKupG,GAAgBv4C,KAK7CquE,EAHC91B,EAGOxoG,EAAG2qG,mBAAmBtrG,SAASxJ,EAAGC,IAFjCm6D,GAAoBiqE,GAAUx9H,MAAM,EAAG,EAAGsD,EAAGhB,MAAOgB,EAAGf,SAASI,SAASxJ,EAAGC,IAItFwoI,E,CAGH5B,eAAexzD,GACnB,IAAKoxD,aAAa8B,mBAEd,YADAlzD,EAAMuzD,aAAevzD,EAAMloE,QAI/Bm5H,GAAevnI,OAAS,EACxBwnI,GAAcxnI,OAAS,EAEvB,IAAI8/C,EAAMw2B,EAAMuzD,aAChB,KAAO/pF,GACH0nF,GAAcpnI,KAAK0/C,GACnBA,EAAMA,EAAI1b,OAKd,IAHAkyC,EAAMuzD,aAAevzD,EAAMloE,OAE3B0xC,EAAMw2B,EAAMloE,OACL0xC,GAAK,CACR,IAAIt9C,EAAIglI,GAAcvlI,QAAQ69C,GAC9B,IAAU,GAANt9C,EAAS,CACTglI,GAAc/4H,OAAOjM,EAAGglI,GAAcxnI,OAASwC,GAC/C,KACH,CAED+kI,GAAennI,KAAK0/C,GAEpBA,EAAMA,EAAI1b,MACb,CAED,IAAIr1B,EAAMy4H,GAAcxnI,OACxB,GAAI+O,EAAM,EAAG,CACT,IAAK,IAAIvM,EAAI,EAAGA,EAAIuM,EAAKvM,IACrBs9C,EAAM0nF,GAAchlI,GACfs9C,EAAItpC,YACLspC,EAAI5qC,MAAMjG,MAAMkC,UAAWmlE,EAAMphE,MAAMpL,MAAMmF,MAAMkC,UAAW2uC,EAAKA,IAE3E0nF,GAAcxnI,OAAS,CAC1B,CAGD,GADA+O,EAAMw4H,GAAevnI,OACjB+O,EAAM,EAAG,CACT,IAAK,IAAIvM,EAAI,EAAGA,EAAIuM,EAAKvM,IACrBs9C,EAAMynF,GAAe/kI,GACjBs9C,EAAI/6C,mBACJ+6C,EAAI5qC,MAAMjG,MAAMiC,WAAYolE,EAAMphE,MAAMpL,MAAMmF,MAAMiC,WAAY4uC,EAAKA,IAE7EynF,GAAevnI,OAAS,CAC3B,C,EA/iBE0nI,aAAiBkD,mBAAY,EAE7BlD,aAAkB8B,oBAAY,EAE9B9B,aAAgB0D,kBAAY,EAE5B1D,aAAkBiE,mBAAG,GAGrBjE,aAAM90B,OAAW,EAEjB80B,aAAM50B,OAAW,EAEjB40B,aAAekB,iBAAG,EAClBlB,aAAckE,gBAAY,EAqiBrC,MAAMC,GAA2E,GAEjF,MAAMhE,UAcFvnI,YAAYsP,GACR7L,KAAK+nI,QAAU,IAAIjgI,MACnB9H,KAAK6lI,YAAc,GACnB7lI,KAAKmR,MAAQ,IAAIjG,MACjBlL,KAAKmR,MAAMrF,SAAWD,EACtB7L,KAAKwd,IAAMxd,KAAKmR,MAAM7F,SACtBtL,KAAK+H,O,CAGTs3B,QAOI,GANAr/B,KAAKgmI,OAAQ,EACbhmI,KAAKqkI,gBAAiB,EACtBrkI,KAAKomI,OAAQ,EACbpmI,KAAK+nI,QAAQ7/H,KAAKlI,KAAKwd,KAEvBxd,KAAK6lI,YAAY5pI,OAAS,EACtB+D,KAAKqK,OAAQ,CACb,IAAI0xC,EAAM/7C,KAAKqK,OACf,KAAO0xC,GACH/7C,KAAK6lI,YAAYxpI,KAAK0/C,GACtBA,EAAMA,EAAI1b,MAEjB,C,CAGLulG,OACI5lI,KAAKomI,OAAQ,GAET7oI,KAAKglE,IAAIviE,KAAKwd,IAAIte,EAAIc,KAAK+nI,QAAQ7oI,GAAKykI,aAAaiE,oBAClDrqI,KAAKglE,IAAIviE,KAAKwd,IAAIre,EAAIa,KAAK+nI,QAAQ5oI,GAAKwkI,aAAaiE,sBACxD5nI,KAAKqkI,gBAAiB,E,CAG9BlpH,MACInb,KAAKgmI,OAAQ,EACb,IAAI7pF,EAAM6rF,YAAY7rF,MAElB8rF,EAAYH,GAAW9nI,KAAKmL,SAC3B88H,IACDA,EAAY,CAAEzqH,IAAK,IAAI1V,MAASmlG,KAAM,EAAG5hG,OAAQ,GACjDy8H,GAAW9nI,KAAKmL,SAAW88H,GAGA,GAA3BjoI,KAAK6lI,YAAY5pI,QACd+D,KAAKqkI,gBACL9mI,KAAKglE,IAAIviE,KAAKwd,IAAIte,EAAIc,KAAK+nI,QAAQ7oI,GAAKykI,aAAaiE,oBACrDrqI,KAAKglE,IAAIviE,KAAKwd,IAAIre,EAAIa,KAAK+nI,QAAQ5oI,GAAKwkI,aAAaiE,oBACxD5nI,KAAKqkI,gBAAiB,EACtB4D,EAAUh7B,KAAO,EACjBjtG,KAAKwmI,WAAa,IAGdrqF,EAAM8rF,EAAUh7B,KAAO,KACpB1vG,KAAKglE,IAAIviE,KAAKwd,IAAIte,EAAI+oI,EAAUzqH,IAAIte,GAAKykI,aAAaiE,oBACtDrqI,KAAKglE,IAAIviE,KAAKwd,IAAIre,EAAI8oI,EAAUzqH,IAAIre,GAAKwkI,aAAaiE,oBACtDK,EAAU58H,QAAUrL,KAAKmR,MAAM9F,OAClCrL,KAAKwmI,WAAa,EAGlBxmI,KAAKwmI,WAAa,EACtByB,EAAUh7B,KAAO9wD,EACjB8rF,EAAUzqH,IAAItV,KAAKlI,KAAKwd,KACxByqH,EAAU58H,OAASrL,KAAKmR,MAAM9F,O,CAItCi7H,YACI,GAAItmI,KAAKqkI,eAEL,OADArkI,KAAK6lI,YAAY5pI,OAAS,EACnB,KAGX,IAAIgpC,EAAMjlC,KAAK6lI,YAAY,GAC3B,GAAI5gG,EAAIjkC,kBAEJ,OADAhB,KAAK6lI,YAAY5pI,OAAS,EACnBgpC,EAIX,IADAA,EAAMjlC,KAAKqK,OACJ46B,GAAK,CAER,IAAU,GADFjlC,KAAK6lI,YAAY3nI,QAAQ+mC,IAClBA,EAAIjkC,kBACf,MAEJikC,EAAMA,EAAI5E,MACb,CAID,OAFArgC,KAAK6lI,YAAY5pI,OAAS,EAEnBgpC,C,CAGXl9B,QACI/H,KAAKwd,IAAIzX,MAAM,EAAG,GAClB/F,KAAKmL,QAAU,EACfnL,KAAKwmI,WAAa,EAClBxmI,KAAKgmI,OAAQ,EACbhmI,KAAKomI,OAAQ,EACbpmI,KAAKqK,OAAS,KACdrK,KAAK6lI,YAAY5pI,OAAS,EAC1B+D,KAAK8lI,aAAe,KACpB9lI,KAAKqkI,gBAAiB,C,ECxrB7B,IAAY6D,GCHDC,GCAAC,GCAAC,GCAApiD,GCAAqiD,GCAAC,GCOAC,GPJCN,iDAOZ,KALGA,GAAA,eAEAA,MAAA,mBAEAA,MAAA,mB,MQHSO,mBAETlsI,cADAyD,KAAA0oI,SAAoC,IAAIntG,G,CAIxCyqD,OAAO2iD,EAA4B1qI,GAC/B+B,KAAK0oI,SAASjuH,IAAIkuH,EAAY1qI,E,CAGlCyoF,WACI58E,OAAO+Y,aAAa+lH,oBAAoB5oI,K,CAG5C2K,QACI3K,KAAK0oI,SAAS/9H,O,EPpBVw9H,gEAqBX,KApBGA,GAAA,qDACAA,MAAA,mDACAA,MAAA,mDACAA,MAAA,iEACAA,MAAA,yCACAA,MAAA,mDACAA,MAAA,uDACAA,MAAA,6DACAA,MAAA,mDACAA,MAAA,6CACAA,MAAA,wBACAA,MAAA,oDACAA,MAAA,oEACAA,MAAA,kEACAA,MAAA,4EACAA,MAAA,oEACAA,MAAA,kEACAA,MAAA,gEACAA,MAAA,kEACAA,MAAA,wDCpBQC,4EAUX,KATGA,GAAA,eACAA,MAAA,mBACAA,MAAA,mBACAA,MAAA,eACAA,MAAA,qBACAA,MAAA,iBACAA,MAAA,uBACAA,MAAA,mBACAA,MAAA,iB,MOJSS,SAMTtsI,YAAYusI,GAFF9oI,KAAUyS,YAAY,EAG5BzS,KAAK+oI,QAAUD,EACf9oI,KAAKgpI,IAAMhpI,KAAK+oI,QAAQpjG,GACxB3lC,KAAKK,IAAML,KAAK+oI,QAAQE,Y,CAGxB/nI,gBACA,OAAOlB,KAAKyS,U,CAQhBtP,UACQnD,KAAKyS,aACTzS,KAAKyS,YAAa,E,ECfpB,MAAOy2H,yBAAyBL,SA8ClCtsI,YAAYusI,EAAqBz+H,EAAgBhC,EAAeC,EAAgBmN,EAA6BE,EAAiBwzH,EAAwB1yH,GAClJpE,MAAMy2H,GAdV9oI,KAAUuS,WAAW,EAqIbvS,KAAgBopI,iBAAW,EAa3BppI,KAAeqpI,gBAAW,EAlI9BrpI,KAAK+Y,SAAW/Y,KAAKgpI,IAAIM,gBAEzBtpI,KAAKqI,MAAQA,EACbrI,KAAKsI,OAASA,EAEd,MAAMihI,MAAStrI,GACsB,IAAzBA,EAASA,EAAQ,GAG7B+B,KAAKwpI,UAAYD,MAAMlhI,IAAUkhI,MAAMjhI,GAEvCtI,KAAKypI,QAAU9zH,GAAU3V,KAAKwpI,UAC9BxpI,KAAK0pI,aAAe1pI,KAAKypI,QAAUlsI,KAAKuL,IAAIvL,KAAKoyE,KAAKpyE,KAAKosI,KAAKthI,IAAU,EAAG9K,KAAKoyE,KAAKpyE,KAAKosI,KAAKrhI,IAAW,GAAK,EACjHtI,KAAKqpI,gBAAkBrpI,KAAK0pI,aAAe,EAC3C1pI,KAAKopI,iBAAmB,EAExBppI,KAAK6W,YAAcsyH,EACnBnpI,KAAKyW,gBAAkBA,EAEvBzW,KAAKqK,OAASA,EASdrK,KAAK+V,WAAajE,aAAWk8D,SAC7BhuE,KAAKiW,MAAQ+qD,WAAS4oE,OACtB5pI,KAAKmW,MAAQ6qD,WAAS4oE,OACtB5pI,KAAKqW,MAAQ2qD,WAAS4oE,OACtB5pI,KAAK8V,WAAa,EAElB9V,KAAKsW,YAAc8xH,qBAAmB16G,I,CApEtC/X,aACA,OAAO3V,KAAKypI,O,CAIL5zH,kBACP,OAAO7V,KAAK0pI,Y,CAcZ52H,gBACA,OAAO9S,KAAKuS,U,CAEZO,cAAU7U,GACV+B,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,WAAYn/C,KAAKuS,YACtEvS,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBuJ,gBAAiBr/C,KAAKuS,YAC3EvS,KAAKuS,WAAatU,EAClB+B,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,UAAWn/C,KAAKuS,YACrEvS,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBuJ,eAAgBr/C,KAAKuS,W,CA4CnEwD,iBACP,OAAO/V,KAAK8pI,W,CAEL/zH,eAAW9X,GAClB,GAAI+B,KAAK8pI,aAAe7rI,GAAS+B,KAAK+Y,SAAU,CAC5C,IAAI4sB,EAAK3lC,KAAKgpI,IACVrzH,EAAS3V,KAAK2V,OACd5M,EAAM/I,KAAK+pI,kBAAkB9rI,EAAO0X,GACxC3V,KAAKgqI,kBAAkBrkG,EAAGskG,mBAAoBlhI,GAC9C,IAAImhI,EAAMlqI,KAAKmqI,kBAAkBlsI,GACjC+B,KAAKgqI,kBAAkBrkG,EAAGykG,mBAAoBF,GAE9ClqI,KAAK8pI,YAAc7rI,CACtB,C,CAIMgY,YACP,OAAOjW,KAAKqqI,M,CAELp0H,UAAMhY,GACb,GAAI+B,KAAKqqI,QAAUpsI,GAAS+B,KAAK+Y,SAAU,CACvC,IAAI4sB,EAAK3lC,KAAKgpI,IACVsB,EAAYtqI,KAAKuqI,aAAatsI,GAClC+B,KAAKwqI,aAAa7kG,EAAG8kG,eAAgBH,GACrCtqI,KAAKqqI,OAASpsI,CACjB,C,CAKMkY,YACP,OAAOnW,KAAK0qI,M,CAGLv0H,UAAMlY,GACb,GAAI+B,KAAK0qI,QAAUzsI,GAAS+B,KAAK+Y,SAAU,CACvC,IAAI4sB,EAAK3lC,KAAKgpI,IACVsB,EAAYtqI,KAAKuqI,aAAatsI,GAClC+B,KAAKwqI,aAAa7kG,EAAGglG,eAAgBL,GACrCtqI,KAAK0qI,OAASzsI,CACjB,C,CAIMoY,YACP,OAAOrW,KAAK4qI,M,CAELv0H,UAAMpY,GACb,GAAI+B,KAAK4qI,QAAU3sI,GAAS+B,KAAK+Y,SAAU,CACvC,GAAI/Y,KAAK+oI,QAAQjmH,WAAW/Q,gBAAc84H,WAAY,CAClD,IAAIllG,EAA6B3lC,KAAKgpI,IAClCsB,EAAYtqI,KAAKuqI,aAAatsI,GAClC+B,KAAKwqI,aAAa7kG,EAAGmlG,eAAgBR,EACxC,CACDtqI,KAAK4qI,OAAS3sI,CACjB,C,CAIM6X,iBACP,OAAO9V,KAAK+qI,W,CAELj1H,eAAW7X,GAClB,IAAI+sI,EAAWhrI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAegD,gCAC1E,GAAIH,EAAU,CACDhrI,KAAKgpI,IAEd,IAAIoC,EAAgBprI,KAAK+oI,QAAQ9iF,UAAUlQ,eAAas1F,sBAEpDC,EAAQ/tI,KAAKuL,IAAI,EAAGvL,KAAKwL,IAAIqiI,EAAentI,IAChD+B,KAAKurI,kBAAkBP,EAASQ,2BAA4BF,GAC5DtrI,KAAK+qI,YAAcO,CACtB,MAEGtrI,KAAK+qI,YAAc,C,CAMhBr0H,oBAAgBzY,GACnB+B,KAAK+oI,QAAQ0C,UACbzrI,KAAKgqI,kBAA2ChqI,KAAKgpI,IAAK0C,mBAAoBztI,GAElF+B,KAAKopI,iBAAmBnrI,C,CAGjByY,sBACP,OAAO1W,KAAKopI,gB,CAKLzyH,mBAAe1Y,GAClB+B,KAAK+oI,QAAQ0C,UACbzrI,KAAKgqI,kBAA2ChqI,KAAKgpI,IAAK2C,kBAAmB1tI,GAEjF+B,KAAKqpI,gBAAkBprI,C,CAGhB0Y,qBACP,OAAO3W,KAAKqpI,e,CAKL/yH,kBACP,OAAOtW,KAAK4rI,Y,CAELt1H,gBAAYrY,GACnB+B,KAAK4rI,aAAe3tI,C,CAIjB+rI,kBAAkB6B,EAAeC,GACpC,IAAInmG,EAAK3lC,KAAKgpI,IACV3+H,EAASrK,KAAKqK,OAClBrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQrK,KAAK+Y,UACvC4sB,EAAGqmG,cAAc3hI,EAAQwhI,EAAOC,GAChC9rI,KAAK+oI,QAAQgD,aAAa1hI,EAAQ,K,CAG/BkhI,kBAAkBM,EAAeC,GACpC,IAAInmG,EAAK3lC,KAAKgpI,IACV3+H,EAASrK,KAAKqK,OAClBrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQrK,KAAK+Y,UACvC4sB,EAAGsmG,cAAc5hI,EAAQwhI,EAAOC,GAChC9rI,KAAK+oI,QAAQgD,aAAa1hI,EAAQ,K,CAG5B0/H,kBAAkBh0H,EAAwBJ,GAChD,IAAIgwB,EAAK3lC,KAAKgpI,IACd,OAAQjzH,GACJ,KAAKjE,aAAWhK,MACZ,OAAO6N,EAASgwB,EAAGumG,uBAAyBvmG,EAAGwmG,QACnD,KAAKr6H,aAAWk8D,SACZ,OAAOr4D,EAASgwB,EAAGymG,sBAAwBzmG,EAAG0mG,OAClD,KAAKv6H,aAAWw6H,UACZ,OAAO32H,EAASgwB,EAAG4mG,qBAAuB5mG,EAAG0mG,OACjD,QACI,OAAO12H,EAASgwB,EAAGymG,sBAAwBzmG,EAAG0mG,O,CAIhDlC,kBAAkBp0H,GACxB,IAAI4vB,EAAK3lC,KAAKgpI,IACd,OAAQjzH,GACJ,KAAKjE,aAAWhK,MACZ,OAAO69B,EAAGwmG,QACd,KAAKr6H,aAAWk8D,SAEhB,KAAKl8D,aAAWw6H,UAEhB,QACI,OAAO3mG,EAAG0mG,O,CAIZ9B,aAAa3xB,GACnB,IAAIjzE,EAAK3lC,KAAKgpI,IACd,OAAQpwB,GACJ,KAAK53C,WAAS4oE,OACV,OAAOjkG,EAAG6mG,OACd,KAAKxrE,WAASiN,MACV,OAAOtoC,EAAG8mG,cACd,KAAKzrE,WAAS0rE,SACV,OAAO/mG,EAAGgnG,gBACd,QACI,OAAOhnG,EAAG6mG,O,CAIZhC,aAAaqB,EAAeC,GAClC,IAAInmG,EAAK3lC,KAAKgpI,IACThpI,KAAKwpI,YACNsC,EAAQnmG,EAAG8mG,eAEfzsI,KAAKgqI,kBAAkB6B,EAAOC,E,CAGlC7yH,UACajZ,KAAKgpI,IACX4D,cAAc5sI,KAAK+Y,UACtB/Y,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,WAAYn/C,KAAKuS,YACtEvS,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBuJ,gBAAiBr/C,KAAKuS,YAC3EvS,KAAKuS,WAAa,C,ECvRpB,MAAOs6H,wBAAwBhE,SAoCjCtsI,YAAYusI,EAAqB9lD,EAAiCj3D,EAAwChK,EAAiB2G,EAAyBkE,GAChJva,MAAMy2H,GAdV9oI,KAAUuS,WAAW,EAgBjBvS,KAAKgjF,YAAcA,EACnBhjF,KAAK+rB,mBAAqBA,EAC1B/rB,KAAK4tB,QAAU7L,EACf/hB,KAAK8tB,gBAAkBpF,EACvB1oB,KAAK6tB,SAAWjB,EAEhB5sB,KAAKitB,UAAY,GACjBjtB,KAAK8sI,cAAgB,KAErB9sI,KAAK+sI,aAAe/sI,KAAKgpI,IAAIgE,oBACzBpgH,EAAU,IACV5sB,KAAKitI,iBAAmBjtI,KAAKgpI,IAAIgE,oB,CAzBrCl6H,gBACA,OAAO9S,KAAKuS,U,CAEZO,cAAU7U,GAEV+B,KAAKuS,WAAatU,EAClB+B,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,UAAWn/C,KAAKuS,YACrEvS,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqByJ,oBAAqBv/C,KAAKuS,W,CAuBnF0G,UACIjZ,KAAKitB,UAAUriB,SAAQmtB,IACnBA,GAAOA,EAAI9e,SAAS,IAExBjZ,KAAKitB,UAAY,KACjBjtB,KAAK8sI,eAAiB9sI,KAAK8sI,cAAc7zH,UACzCjZ,KAAK8sI,cAAgB,KACrB9sI,KAAK+sI,cAAgB/sI,KAAKgpI,IAAIkE,kBAAkBltI,KAAK+sI,cACrD/sI,KAAK+sI,aAAe,KACpB/sI,KAAKmtI,cAAgBntI,KAAKgpI,IAAIoE,mBAAmBptI,KAAKmtI,cACtDntI,KAAKmtI,aAAe,KAEpBntI,KAAKitI,kBAAoBjtI,KAAKgpI,IAAIkE,kBAAkBltI,KAAKitI,kBACzDjtI,KAAKitI,iBAAmB,KACxBjtI,KAAKqtI,mBAAqBrtI,KAAKgpI,IAAIoE,mBAAmBptI,KAAKqtI,mBAC3DrtI,KAAKqtI,kBAAoB,KAEzBrtI,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,WAAWn/C,KAAKuS,YACrEvS,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqByJ,qBAAqBv/C,KAAKuS,YAC/EvS,KAAKuS,WAAa,C,EC/DpB,MAAO+6H,yBAAyBzE,SAUlCtsI,YAAYusI,GACRz2H,MAAMy2H,GAWV9oI,KAAAutI,SAII,CACIC,eAAgB,EAChBt4H,OAAQ,EACR3J,KAAM,GAjBVvL,KAAKytI,MAAQztI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAeuF,UACxE1tI,KAAK2tI,qBAAuB3tI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAeyF,wBACvF5tI,KAAK6tI,2BAA6B7tI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAe2F,oCAC7F9tI,KAAK+tI,uBAAyB/tI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAe6F,+BACzFhuI,KAAKiuI,uBAAyBjuI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAe+F,+BACzFluI,KAAKmuI,sBAAwBnuI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAeiG,8BACxFpuI,KAAKquI,uBAAyBruI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAemG,+BACzFtuI,KAAKuuI,qBAAuBvuI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAeqG,oB,CAa3FC,eAAev5H,EAAuBw5H,GAClC,IAAI/oG,EAAK3lC,KAAKgpI,IAKd,OAHAhpI,KAAKutI,SAASC,eAAiB,KAC/BxtI,KAAKutI,SAASr4H,OAAS,KACvBlV,KAAKutI,SAAShiI,KAAO,KACb2J,GACJ,KAAKlL,gBAAc+M,OACf/W,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAKytI,MAAMkB,SAAWhpG,EAAGipG,IAClE5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcgN,SACfhX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAKytI,MAAMoB,eAAiBlpG,EAAGmpG,KACxE9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcqN,OACfrX,KAAKutI,SAASC,eAAiB7nG,EAAGipG,IAClC5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAGopG,qBACxB,MACJ,KAAK/kI,gBAAcoN,aACfpX,KAAKutI,SAASC,eAAiB7nG,EAAGmpG,KAClC9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAKx9B,gBAAcmN,UACfnX,KAAKutI,SAASC,eAAiB7nG,EAAGipG,IAClC5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAKx9B,gBAAckN,aACflX,KAAKutI,SAASC,eAAiB7nG,EAAGmpG,KAClC9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOvL,KAAK2tI,qBAAqBqB,eAC/C,MACJ,KAAKhlI,gBAAciN,UACfjX,KAAKutI,SAASC,eAAiB7nG,EAAGipG,IAClC5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOvL,KAAK2tI,qBAAqBqB,eAC/C,MACJ,KAAKhlI,gBAAcuN,KACfvX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BoB,oCAAsCjvI,KAAKiuI,uBAAuBiB,8BAC3IlvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcwN,KACfxX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BsB,oCAAsCnvI,KAAKiuI,uBAAuBmB,8BAC3IpvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcyN,KACfzX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BwB,oCAAsCrvI,KAAKiuI,uBAAuBqB,8BAC3ItvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc0N,QACf1X,KAAKutI,SAASC,eAAiBxtI,KAAK+tI,uBAAuBwB,0BAC3DvvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc4N,SACf5X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBqB,0BAC1DxvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc2N,QACf3X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBsB,qBAC1DzvI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc8N,SACf9X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBuB,sBAC1D1vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc6N,gBACf7X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBwB,iCAC1D3vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcmO,QACfnY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBuB,6BAC3D5vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcqO,QACfrY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBwB,6BAC3D7vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcuO,QACfvY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuByB,6BAC3D9vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcyO,UACfzY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB0B,+BAC3D/vI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc2O,UACf3Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB2B,+BAC3DhwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcoO,YACfpY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB4B,qCAC3DjwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcsO,YACftY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB6B,qCAC3DlwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcwO,YACfxY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB8B,qCAC3DnwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc0O,cACf1Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB+B,uCAC3DpwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAc4O,cACf5Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBgC,uCAC3DrwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,QACI,KAAM,0BAGd,OAAOtmD,KAAKutI,Q,CAIhB+C,qBAAqBp7H,EAA4Bw5H,GAC7C,IAAI/oG,EAAK3lC,KAAKgpI,IAMd,OAJAhpI,KAAKutI,SAASC,eAAiB,KAC/BxtI,KAAKutI,SAASr4H,OAAS,KACvBlV,KAAKutI,SAAShiI,KAAO,KAEb2J,GACJ,KAAK0U,qBAAmB7S,OACpB/W,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAKytI,MAAMkB,SAAWhpG,EAAGipG,IAClE5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAK18B,qBAAmB5S,SACpBhX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAKytI,MAAMkB,SAAWhpG,EAAGmpG,KAClE9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAK18B,qBAAmB3S,UACpBjX,KAAKutI,SAASC,eAAiB7nG,EAAGipG,IAClC5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOvL,KAAK2tI,qBAAqBqB,eAC/C,MACJ,KAAKplH,qBAAmB1S,aACpBlX,KAAKutI,SAASC,eAAiB7nG,EAAGmpG,KAClC9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOvL,KAAK2tI,qBAAqBqB,eAC/C,MACJ,KAAKplH,qBAAmBzS,UACpBnX,KAAKutI,SAASC,eAAiB7nG,EAAGipG,IAClC5uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAK5d,qBAAmBxS,aACpBpX,KAAKutI,SAASC,eAAiB7nG,EAAGmpG,KAClC9uI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAK5d,qBAAmBoC,SACpBhsB,KAAKutI,SAASC,eAAiB7nG,EAAG4qG,gBAClCvwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG+gB,eACxB,MACJ,KAAK98B,qBAAmB4mH,kBACpBxwI,KAAKutI,SAASC,eAAiB7nG,EAAG8qG,cAClCzwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOvL,KAAKuuI,qBAAqBmC,wBAC/C,MACJ,KAAK9mH,qBAAmB+mH,SACpB3wI,KAAKutI,SAASC,eAAiB7nG,EAAG4qG,gBAClCvwI,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAGirG,aACxB,MACJ,KAAKhnH,qBAAmBinH,UACxB,QACI,KAAM,+BAGd,OAAO7wI,KAAKutI,Q,CAGhBuD,oBAAoB57H,EAA4Bw5H,GAE5C,IAAI/oG,EAAK3lC,KAAKgpI,IACd,OAAQ9zH,GACJ,KAAK0U,qBAAmBoC,SACpB,MAAO,CAAEwhH,eAAgB7nG,EAAGorG,kBAAmBC,WAAYrrG,EAAGsrG,kBAClE,KAAKrnH,qBAAmB4mH,kBACpB,MAAO,CAAEhD,eAAgB7nG,EAAG8qG,cAAeO,WAAYrrG,EAAGurG,0BAC9D,KAAKtnH,qBAAmB+mH,SACpB,MAAO,CAAEnD,eAAgB7nG,EAAG8qG,cAAeO,WAAYrrG,EAAGsrG,kBAC9D,KAAKrnH,qBAAmBinH,UACpB,MAAO,CAAErD,eAAgB7nG,EAAGwrG,eAAgBH,WAAYrrG,EAAGyrG,oBAC/D,QACI,OAAO,K,CAInBC,yBAAyBn8H,GACrB,IAAIywB,EAAK3lC,KAAKgpI,IACd,OAAQ9zH,GACJ,KAAK0U,qBAAmBoC,SACpB,OAAO2Z,EAAGsrG,iBACd,KAAKrnH,qBAAmB4mH,kBACpB,OAAO7qG,EAAGurG,yBACd,KAAKtnH,qBAAmB+mH,SACpB,OAAOhrG,EAAGsrG,iBACd,KAAKrnH,qBAAmBinH,UACpB,OAAOlrG,EAAGyrG,mBACd,KAAKxnH,qBAAmB7S,OACxB,KAAK6S,qBAAmB5S,SACxB,KAAK4S,qBAAmB3S,UACxB,KAAK2S,qBAAmB1S,aACxB,KAAK0S,qBAAmBzS,UACxB,KAAKyS,qBAAmBxS,aACpB,OAAOuuB,EAAG2rG,kBACd,QACI,KAAM,iB,CAIRC,UAAU97H,GAChB,IAAIkwB,EAAK3lC,KAAKgpI,IACd,OAAQvzH,GACJ,KAAKwN,mBAAiB6B,MAClB,OAAO6gB,EAAGuE,WACd,KAAKjnB,mBAAiB+B,KAClB,OAAO2gB,EAAGwE,iBACd,QACI,KAAM,qC,CAIXqnG,sBAAsBt8H,GAEzB,IAAIu8H,EAAmG,CACnGC,SAAU,EACVC,cAAe,EACfC,cAAep4H,WACfq4H,UAAW,GAEf,OAAQ38H,GACJ,KAAKlL,gBAAcgN,SAKf,OAJAy6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,EAC7BF,EAAaG,cAAgBp4H,WAC7Bi4H,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAc+M,OAKf,OAJA06H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,EAC7BF,EAAaG,cAAgBp4H,WAC7Bi4H,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAcqN,OAKf,OAJAo6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,EAC7BF,EAAaG,cAAgB7rH,YAC7B0rH,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAciN,UAKf,OAJAw6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,EAC7BF,EAAaG,cAAgB7rH,YAC7B0rH,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAckN,aAKf,OAJAu6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,EAC7BF,EAAaG,cAAgB7rH,YAC7B0rH,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAcmN,UAKf,OAJAs6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,GAC7BF,EAAaG,cAAgBv2H,aAC7Bo2H,EAAaI,UAAY,EAClBJ,EACX,KAAKznI,gBAAcoN,aAKf,OAJAq6H,EAAaC,SAAW,EACxBD,EAAaE,cAAgB,GAC7BF,EAAaG,cAAgBv2H,aAC7Bo2H,EAAaI,UAAY,EAClBJ,EACX,QACI,OAAOA,E,CAUnBK,eAAe/5G,EAAuBg6G,EAAgB,GAClD,IAAIpsG,EAAK3lC,KAAKgpI,IACV0I,EAAW,EACXM,EAAa,EACbC,EAAa,EAEbjrH,EAAOhnB,KAAKytI,MAAQztI,KAAKytI,MAAMkB,SAAWhpG,EAAGipG,IAC7CsD,EAAalyI,KAAKytI,MAAQztI,KAAKytI,MAAMoB,eAAiBlpG,EAAGmpG,KAE7D,OAAQ/2G,EAAIy1G,gBACR,KAAKxmH,EACL,KAAK2e,EAAGipG,IACJ8C,EAAW,EACX,MACJ,KAAKQ,EACL,KAAKvsG,EAAGmpG,KACJ4C,EAAW,EACX,MACJ,QACIA,EAAW,EAGnB,OAAQ35G,EAAIxsB,MACR,KAAKo6B,EAAG2gB,cACJ0rF,EAAa,EACb,MACJ,KAAKrsG,EAAGopG,qBACJiD,EAAa,EAAI,EACjB,MACJ,KAAKrsG,EAAG6B,MACJwqG,EAAa,EACb,MACJ,KAAKhyI,KAAK2tI,qBAAqBqB,eAC3BgD,EAAa,EACb,MACJ,QACIA,EAAa,EAYrB,OATAC,EAAaP,EAAWM,EAAaj6G,EAAI1vB,MAAQ0vB,EAAIzvB,OACjDyvB,EAAIpiB,SACJs8H,GAAc,OAEdl6G,EAAI1tB,QAAUs7B,EAAGwE,iBACjB8nG,GAAc,EACTl6G,EAAI1tB,QAAUs7B,EAAGuE,aACtB+nG,GAAc,GAEXA,C,CAGXE,iBAAiB9pI,EAAeC,EAAgB06E,EAAiCj3D,EAAwCrD,EAAyBw6D,EAAsBkvD,GACpK,IAAIC,aAAgBC,IAChB,IAAIC,EAAY,EAChB,OAAQD,GACJ,KAAK1oH,qBAAmB7S,OACpBw7H,EAAY,EACZ,MACJ,KAAK3oH,qBAAmB5S,SACpBu7H,EAAY,EACZ,MACJ,KAAK3oH,qBAAmB1S,aACpBq7H,EAAY,EACZ,MACJ,KAAK3oH,qBAAmBzS,UACpBo7H,EAAY,GACZ,MACJ,KAAK3oH,qBAAmBxS,aACpBm7H,EAAY,GACZ,MACJ,KAAK3oH,qBAAmB3S,UACpBs7H,EAAY,EACZ,MACJ,KAAK3oH,qBAAmBoC,SACpBumH,EAAY,EACZ,MACJ,KAAK3oH,qBAAmBinH,UACpB0B,EAAY,EACZ,MACJ,KAAK3oH,qBAAmB4mH,kBAGxB,KAAK5mH,qBAAmB+mH,SACpB4B,EAAY,EAGpB,OAAOA,CAAS,EAEhBC,EAAiBH,aAAarvD,GAUlC,OARIE,EAAe,IACfsvD,GAAkB,GAClBJ,IACAI,GAAkB,GAClB9pH,IACA8pH,GAAkB,OACJA,EAAiBnqI,EAAQC,EAPtB+pI,aAAatmH,GAQC1jB,EAAQC,C,CA2B/CmqI,YAAYv9H,EAA4CS,GACpD,OAAQT,GACJ,KAAKlL,gBAAc+M,OACnB,KAAK/M,gBAAcgN,SACf,OAAOhX,KAAK+oI,QAAQjmH,WAAW/Q,gBAAc2gI,gBAAkB/8H,EACnE,KAAK3L,gBAAcuN,KACnB,KAAKvN,gBAAcwN,KACnB,KAAKxN,gBAAcyN,KAEf,OAAOzX,KAAK+oI,QAAQjmH,WAAW/Q,gBAAciR,8BAAgCrN,EACjF,QACI,OAAO,E,CAInBg9H,sBAAsBz9H,GAClB,OAAQA,GACJ,KAAK0U,qBAAmBoC,SACxB,KAAKpC,qBAAmB4mH,kBACxB,KAAK5mH,qBAAmB+mH,SACxB,KAAK/mH,qBAAmBinH,UACpB,OAAO,EACX,QACI,OAAO,E,CASnB+B,aAAa19H,GACT,OAAQA,GACJ,KAAKlL,gBAAc8N,SACnB,KAAK9N,gBAAc6N,gBACnB,KAAK7N,gBAAcoO,YACnB,KAAKpO,gBAAcsO,YACnB,KAAKtO,gBAAcwO,YACnB,KAAKxO,gBAAc0O,cACnB,KAAK1O,gBAAc4O,cACf,OAAO,EACX,QACI,OAAO,E,CAInB2M,sBAAsB9P,EAA6BpN,EAAeC,EAAgB4M,EAAuBwT,EAAyBnF,EAAejrB,GAK7I,IAAIu6I,EAAa7yI,KAAK4yI,aAAa19H,IAAYqO,GAAQvjB,KAAKyyI,YAAYv9H,EAAQwT,GAC7EpwB,IACCu6I,GAAa,GAEjB,IAAIp8H,EAAkB,GACjBo8H,GAActvH,IACf9M,EAAkB,KAItB,IAAIpM,EAASrK,KAAKuxI,UAAU97H,GACxBq9H,EAAc,IAAI5J,iBAAiBlpI,KAAK+oI,QAAS1+H,EAAQhC,EAAOC,EAAQmN,EAAWiT,EAAgBmqH,EAAYp8H,GAE/Gs8H,EAAU/yI,KAAKyuI,eAAev5H,EAAQ29H,GAS1C,OAPAC,EAAYtF,eAAiBuF,EAAQvF,eACrCsF,EAAY59H,OAAS69H,EAAQ79H,OAC7B49H,EAAYvnI,KAAOwnI,EAAQxnI,KAKpBunI,C,CAGX1qH,oBAAoB7B,EAA2BxnB,EAA4DsmB,EAA2B8C,GAE9H5B,EAAQle,OAAStJ,EAAOsJ,OAASke,EAAQje,QAAUvJ,EAAOuJ,QAE1DhR,QAAQC,KAAK,uCAGjB,IAAI8S,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACPgb,EAAQle,MACPke,EAAQje,OAErB,IAAIq9B,EAAKpf,EAAQyiH,IACjB3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBt4H,EAAQ3J,EAAMxM,GACvDwnB,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GAKpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAK9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtDxkE,uBAAuBnoD,EAA2BxnB,EAA4DG,EAAWC,EAAWkmB,EAA2B8C,GAE3J,IAAI9d,EAASkc,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACPxM,EAAOsJ,MACNtJ,EAAOuJ,OAEpB,IAAIq9B,EAAKpf,EAAQyiH,IACjB3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAGytG,cAAc/oI,EAAQ,EAAGnL,EAAGC,EAAG+V,EAAQ3J,EAAMxM,GAChDwnB,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GAKpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAK9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAItDG,qBAAqB9sH,GACjB,IAAIlc,EAASkc,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBq9B,EAAKpf,EAAQyiH,IACjBhpI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAClD4sB,EAAGwtG,WAAW9oI,EAAQ,EAAGkc,EAAQinH,eAAgBnlI,EAAOC,EAAQ,EAAG4M,EAAQ3J,EAAM,MACjFgb,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,K,CAG9Cge,qBAAqB9B,EAA2BxnB,EAAyBsmB,EAA2B8C,GAGhG,IAAI9d,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAEjBgrI,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAKpf,EAAQyiH,IACjB3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAIlD4sB,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBnlI,EAAOC,EAAQ,EAAG4M,EAAQ3J,EAAMxM,GAEzEwnB,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GAEpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpD5qH,wBAAwBpC,EAA2BxnB,EAAyB0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBngB,EAAeC,EAAgB+c,EAA2B8C,GAElNO,EAAiBA,GAAiC,GAAfD,EAInC,IAAIpe,EAASkc,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KAEf+nI,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAKpf,EAAQyiH,IACjB3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAClD4sB,EAAGytG,cAAc/oI,EAAQoe,EAAaF,EAASC,EAASngB,EAAOC,EAAQ4M,EAAQ3J,EAAMxM,GAEjFwnB,EAAQ5Q,QAAU+S,GAClBid,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpD3qH,kBAAkBrC,EAA2BmB,GAKzC,IAAIrd,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eAChBjnH,EAAQrR,OACVqR,EAAQhb,KAEnB,IAAIlD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAEjBvJ,EAAS2oB,EAAQ3oB,OACjBmjB,EAAawF,EAAQxF,WACrBF,EAAM0F,EAAQ1F,IACdC,EAAayF,EAAQzF,WACrBpM,EAAc6R,EAAQ7R,YAE1B0Q,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAIy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAKpf,EAAQyiH,IAGjBsK,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,IAAIy6H,EAAcnrI,EACdorI,EAAenrI,EACforI,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsL,EAAatL,IAAS,CAG9C,IAAI4iD,EAAgB5vD,KAAKuL,IAAI,EAAG0qI,GAAe,EAAKj2I,KAAKuL,IAAI,EAAG2qI,GAAiB,EAAKxxH,EAClFG,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAYirC,GAEpDxnB,EAAGguG,qBAAqBtpI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GACrFsxH,GAAUtxH,EAAWnmB,OACrBimB,GAAcF,EAAOwxH,EAAcC,GAAgBzxH,EAAM,GAAMmrC,EAE/DqmF,GAAe,GACfC,GAAgB,GAChBD,EAAcj2I,KAAKuL,IAAI,EAAK0qI,GAC5BC,EAAel2I,KAAKuL,IAAI,EAAK2qI,EAChC,CACDltH,EAAQzT,UAAY4gI,EACpB1zI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAI1CipI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpD1qH,kBAAkBtC,EAA2BsB,GAMzC,IAAI9oB,EAAS8oB,EAAQ9oB,OACjBojB,EAAa0F,EAAQvE,SAErBjZ,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACfsK,EAAc0Q,EAAQ1Q,YAEtBxN,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAErBie,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAIy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAKpf,EAAQyiH,IAGjBsK,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,IAAIy6H,EAAcnrI,EACdorI,EAAenrI,EACf4Z,EAAa2F,EAAQpE,aAAeoE,EAAQrE,oBAC5CkwH,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsd,EAAQhS,YAAatL,IAAS,CACtD,IAAIqpI,EAAY,IAAItxH,WAAWvjB,EAAQmjB,EAAY,GAAG,GAGtD,GADAA,GAAc,EACVC,EAAY,CACZ,IAAIC,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAY0xH,GACpDjuG,EAAGguG,qBAAqBtpI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GACrFsxH,GAAUtxH,EAAWnmB,MACxB,KACI,CACD,IAAI43I,EAAc7zI,KAAKwxI,sBAAsB3pH,EAAQ3S,QACjD28H,EAAY+B,EAAYC,EAAYhC,UACpCzvH,EAA8B,IAAIyxH,EAAYjC,cAAc7yI,EAAQmjB,EAAY2vH,GACpFlsG,EAAGwtG,WAAW9oI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGv+H,EAAQ3J,EAAM6W,GACzFsxH,GAAUtxH,EAAWxI,UACxB,CAEDsI,GAAc0xH,EACd1xH,GAAc,GAAM0xH,EAAY,GAAK,EAErCJ,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,EAC9B,CAED,IAAK,IAAIlpI,EAAQsd,EAAQhS,YAAatL,EAAQgc,EAAQ1Q,YAAatL,IAC3D4X,GAIAwjB,EAAGwtG,WAAW9oI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGv+H,EAAQ3J,EAAM,MAG7FioI,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,GAG/BltH,EAAQzT,UAAY4gI,EACpB1zI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAI1CipI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDvqH,kBAAkBzC,EAA2BwC,GACzC,IAAI+qH,EAAe/qH,EAAQgrH,eAC3B/zI,KAAKqoB,qBAAqB9B,EAASutH,GAAc,GAAO,E,CAG5DE,iBAAiBztH,EAA2B0tH,EAAiE5uH,EAA2B8C,GAEpI,IAAIwd,EAAKpf,EAAQyiH,IAEjB,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGP,IAAIhH,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACPgb,EAAQle,MACPke,EAAQje,OAErB+c,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,IAAK,IAAIxO,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAIF,EAAS6pI,EAAS3pI,GACtBo7B,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBt4H,EAAQ3J,EAAM0oI,EAAQ1pI,GAClE,CAEGgc,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAC1Ckc,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACxClB,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtDuB,kBAAkBluH,EAA2BxnB,EAA2BsmB,EAA2B8C,GAC/F,IAAIwd,EAAKpf,EAAQyiH,IAEjB,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGMjuH,EAAQlc,OACrB,IAAImjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAEjBgrI,EAAWjrI,EAAQ,GAAK,EAM5B,GALAgd,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAC9Cha,EAAQ,CACR,IAAK,IAAIwL,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAI2xD,EAAIg4E,EAAS3pI,GAEjBo7B,EAAGwtG,WAAWj3E,EAAG,EAAGsxE,EAAgBnlI,EAAOC,EAAQ,EAAG4M,EAAQ3J,EAAMxM,EAAOwL,GAC9E,CACGgc,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,OAEjC,KACI,CACD,IAAK,IAAIE,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAI2xD,EAAIg4E,EAAS3pI,GAEjBo7B,EAAGwtG,WAAWj3E,EAAG,EAAGsxE,EAAgBnlI,EAAOC,EAAQ,EAAG4M,EAAQ3J,EAAM,KACvE,CACGgb,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,OAEjC,CACDrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAC1Ckc,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACxClB,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDmB,oBAAoBnuH,EAA2BxnB,EAA2B0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBngB,EAAeC,EAAgB+c,EAA2B8C,GAEhNO,EAAiBA,GAAiC,GAAfD,EAEnC,IAAIkd,EAAKpf,EAAQyiH,IAEjB,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGMjuH,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KAEf+nI,EAAWjrI,EAAQ,GAAK,EAC5Bgd,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,IAAK,IAAIxO,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAIF,EAAS6pI,EAAS3pI,GACtBo7B,EAAGytG,cAAc/oI,EAAQoe,EAAaF,EAASC,EAASngB,EAAOC,EAAQ4M,EAAQ3J,EAAMxM,EAAOwL,GAC/F,CAEGgc,EAAQ5Q,QAAU+S,GAClBid,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAIpDoB,eAAepuH,EAA2BmB,GAMtC,IAAI8lH,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAEjBvJ,EAAS2oB,EAAQ3oB,OACjBmjB,EAAawF,EAAQxF,WACrBF,EAAM0F,EAAQ1F,IACdC,EAAayF,EAAQzF,WACrBpM,EAAc6R,EAAQ7R,YAE1B0Q,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAIy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAC/CgrI,GAAW,EACX,IAAI3tG,EAAKpf,EAAQyiH,IAMjBhpI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,MAAMm7H,EAAW,CACbvuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,4BACH7uG,EAAGwuG,4BACHxuG,EAAGyuG,6BAGP,IAAI3C,EAAezxI,KAAKwxI,sBAAsB9pH,EAAQxS,QAClD0/H,EAAenD,EAAaE,cAAgBF,EAAaC,SAEzDmD,EAAkBntH,EAAQxS,QAAUlL,gBAAcoN,aAAeiE,aAAe0K,YAChF2tH,EAAS,EACb,GAAKhsH,EAAQvF,WAmBT,IAAK,IAAI2yH,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIzqI,EAAS6pI,EAASY,GAClBtB,EAAcnrI,EACdorI,EAAenrI,EACnB,IAAK,IAAIiC,EAAQ,EAAGA,EAAQsL,EAAatL,IAAS,CAC9C,IAAI4iD,EAAa5vD,KAAKuL,IAAI,EAAG0qI,GAAe,EAAIj2I,KAAKuL,IAAI,EAAG2qI,GAAgB,EAAIxxH,EAE5EG,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAYirC,IAEnD5mC,EAAQ5Q,QAAmB,GAATpL,IAAeo7B,EAAGguG,qBAAqBtpI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GACvHsxH,GAAUtxH,EAAWxI,WACrBsI,GAAcF,EAAOwxH,EAAcC,GAAgBzxH,EAAM,GAAMmrC,EAE/DqmF,GAAe,GACfC,GAAgB,GAChBD,EAAcj2I,KAAKuL,IAAI,EAAK0qI,GAC5BC,EAAel2I,KAAKuL,IAAI,EAAK2qI,EAChC,CACJ,MApCD,IAAK,IAAIqB,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIzqI,EAAS6pI,EAASY,GAClBtB,EAAcnrI,EACdorI,EAAenrI,EACnB,IAAK,IAAIiC,EAAQ,EAAGA,EAAQsL,EAAatL,IAAS,CAC9C,IAAI4iD,EAAaqmF,EAAcC,EAAehC,EAAaC,SACvDtvH,EAAa,IAAIyyH,EAAgB91I,EAAQmjB,EAAYirC,GACzDxnB,EAAGwtG,WAAW9oI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGv+H,EAAQ3J,EAAM6W,GACzFsxH,GAAUtxH,EAAWxI,WACrBsI,GAAcirC,EAAaynF,EAC3BpB,GAAe,GACfC,GAAgB,GAChBD,EAAcj2I,KAAKuL,IAAI,EAAK0qI,GAC5BC,EAAel2I,KAAKuL,IAAI,EAAK2qI,EAChC,CACJ,CAuBLltH,EAAQzT,UAAY4gI,EACpB1zI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,K,CAO9C0qI,eAAexuH,EAA2BsB,GAKtC,IAAI9oB,EAAS8oB,EAAQ9oB,OACjBojB,EAAa0F,EAAQvE,SAGrBkqH,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACfsK,EAAcgS,EAAQhS,YAEtBxN,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAErBie,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAIy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAKpf,EAAQyiH,IAGjB,MAAMkL,EAAW,CACbvuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,4BACH7uG,EAAGwuG,4BACHxuG,EAAGyuG,6BAKPd,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD,IAAIy6H,EAAcnrI,EACdorI,EAAenrI,EACf4Z,EAAa2F,EAAQpE,aAAeoE,EAAQrE,oBAC5CkwH,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsd,EAAQhS,YAAatL,IAAS,CACtD,IAAIqpI,EAAY,IAAItxH,WAAWvjB,EAAQmjB,EAAY,GAAG,GAEtDA,GAAc,EAGd,IAAK,IAAI4yH,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIzqI,EAAS6pI,EAASY,GAEtB,GAAI3yH,EAAY,CACZ,IAAIC,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAY0xH,GACpDjuG,EAAGguG,qBAAqBtpI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GACrFsxH,GAAUtxH,EAAWxI,UACxB,KACI,CACD,IAAIi6H,EAAc7zI,KAAKwxI,sBAAsB3pH,EAAQ3S,QACjD28H,EAAY+B,EAAYC,EAAYhC,UACpCzvH,EAAa,IAAIyxH,EAAYjC,cAAc7yI,EAAQmjB,EAAY2vH,GACnElsG,EAAGwtG,WAAW9oI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGv+H,EAAQ3J,EAAM6W,GACzFsxH,GAAUtxH,EAAWxI,UACxB,CACDsI,GAAc0xH,EACd1xH,GAAc,GAAM0xH,EAAY,GAAK,CACxC,CAGDJ,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,EAC9B,CAED,IAAK,IAAIlpI,EAAQsd,EAAQhS,YAAatL,EAAQgc,EAAQ1Q,YAAatL,IAAS,CAExE,IAAK,IAAIuqI,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAIzqI,EAAS6pI,EAASY,GAClB3yH,GAIAwjB,EAAGwtG,WAAW9oI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGv+H,EAAQ3J,EAAM,KAEhG,CAEDioI,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,EAC9B,CAEDzzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAC1Ckc,EAAQzT,UAAY4gI,EAGpBJ,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpD/8H,sBAAsB+P,EAA2BjQ,GAC7C,OAAO8xH,qBAAmB16G,I,CAG9BU,iBAAiB4mH,EAA+BC,EAAoB,GAChE,IAAItvG,EAAK3lC,KAAKgpI,IACVkM,EAAcF,EAAajI,aAI/B,GAFApnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAE/BF,EAAapnH,QAAS,CACtB,IAAIrH,EAA4ByuH,EAAa/nH,UAAU,GACvD0Y,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAazvG,EAAG2rG,kBAAmB3rG,EAAG0uG,4BAA8BY,EAAW1uH,EAAQxN,SAAU,EAC/H,C,CAILsV,sBACI,IAAIsX,EAAK3lC,KAAKgpI,IACdrjG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,K,CAGvCxmH,mBAAmBomH,GACf,IAAIrvG,EAAKqvG,EAAahM,IAElBgM,EAAalnH,iBACbknH,EAAa/nH,UAAUriB,SAAQmtB,IAC3B,IAAI1tB,EAA4B0tB,EAAK1tB,OACrCrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQ0tB,EAAIhf,UACtC4sB,EAAGjd,eAAere,GAClBrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQ,KAAK,IAI/Cs7B,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,K,CAGvCpxD,4BAA4BvuE,EAA6BpN,EAAeC,EAAgB4M,EAA4BwT,EAAyBnF,GAGzImF,EAAiBA,GAAkB1oB,KAAK2yI,sBAAsBz9H,GAE9D,IAOI7K,EAASrK,KAAKuxI,UAAU97H,GACxBq9H,EAAc,IAAI5J,iBAAiBlpI,KAAK+oI,QAAS1+H,EAAQhC,EAAOC,EAAQmN,EAAWiT,EAZtE,MAIK,GAUlBqqH,EAAU/yI,KAAKswI,qBAAqBp7H,EAdvB,OAgBjB49H,EAAYtF,eAAiBuF,EAAQvF,eACrCsF,EAAY59H,OAAS69H,EAAQ79H,OAC7B49H,EAAYvnI,KAAOwnI,EAAQxnI,KAE3B,IAAIiiI,EAAiBsF,EAAYtF,eAC7B9pH,EAAWovH,EAAY59H,OACvB3J,EAAOunI,EAAYvnI,KAEnBo6B,EAAKmtG,EAAY9J,IAYrB,OAVAhpI,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQyoI,EAAY/5H,UAE1D4sB,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBnlI,EAAOC,EAAQ,EAAGob,EAAUnY,EAAM,MAE3EvL,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQ,MAE1C6K,GAAU0U,qBAAmBoC,UAAY9W,GAAU0U,qBAAmB+mH,UAAYz7H,GAAU0U,qBAAmB4mH,oBAC/GsC,EAAY/8H,WAAajE,aAAWhK,OAGjCgrI,C,CAGXwC,gCAAgC7/H,EAA6B1C,EAAcmC,EAA4BwT,EAAyBnF,GAG5HmF,EAAiBA,GAAkB1oB,KAAK2yI,sBAAsBz9H,GAE9D,IAAIuB,EAAkB,EACH8M,IACf9M,EAAkB,KAGtB,IAAIpM,EAASrK,KAAKuxI,UAAU97H,GACxBq9H,EAAc,IAAI5J,iBAAiBlpI,KAAK+oI,QAAS1+H,EAAQ0I,EAAMA,EAAM0C,EAAWiT,EAVnE,MAU+FjS,GAE5Gs8H,EAAU/yI,KAAKswI,qBAAqBp7H,EAZvB,OAcjB49H,EAAYtF,eAAiBuF,EAAQvF,eACrCsF,EAAY59H,OAAS69H,EAAQ79H,OAC7B49H,EAAYvnI,KAAOwnI,EAAQxnI,KAE3B,IAAIiiI,EAAiBsF,EAAYtF,eAC7B9pH,EAAWovH,EAAY59H,OACvB3J,EAAOunI,EAAYvnI,KAEnBo6B,EAAKmtG,EAAY9J,IACrB,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGPx0I,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQyoI,EAAY/5H,UAE1D,IAAK,IAAIxO,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAIF,EAAS6pI,EAAS3pI,GACtBo7B,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBz6H,EAAMA,EAAM,EAAG2Q,EAAUnY,EAAM,KAC3E,CAOD,OANAvL,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQ,MAE1C6K,GAAU0U,qBAAmBoC,UAAY9W,GAAU0U,qBAAmB+mH,UAAYz7H,GAAU0U,qBAAmB4mH,oBAC/GsC,EAAY/8H,WAAajE,aAAWhK,OAGjCgrI,C,CAGX/kH,2BAA2B1lB,EAAeC,EAAgB06E,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GAGvK,IAAI38D,EAAUvmB,KAAKgkF,4BAA4B/gE,mBAAiB6B,MAAOzc,EAAOC,EAAQ06E,EAAat6D,EAAgBnF,GAE/GyxH,EAAe,IAAInI,gBAAgB7sI,KAAK+oI,QAAS/lD,EAAaj3D,GAAoB,EAAOxF,EAAQ5Q,OAJtF,GAKfq/H,EAAaliI,UAAY9S,KAAKmyI,iBAAiB9pI,EAAOC,EAAQ06E,EAAaj3D,EAAoBrD,EALhF,GAK8G,GAC7HssH,EAAahyD,YAAcA,EAC3BgyD,EAAajpH,mBAAqBA,EAClCipH,EAAa/nH,UAAU5wB,KAAKkqB,GAE5B,IAAI2uH,EAAcF,EAAajI,aAE3BpnG,EAA4BqvG,EAAahM,IAE7CrjG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAEnC,IAAIK,EAAkBv1I,KAAKqxI,yBAAyBruD,GACpDr9C,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAaG,EAAiB5vG,EAAGuE,WAAY3jB,EAAQxN,SAAU,GAE1F,IAAIy8H,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmBrtI,EAAOC,EAAQktI,EAAiBhI,eAAgBwH,EAAannH,UACvGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CAGD,OAFA9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,MAE5BJ,C,CAGXa,+BAA+B9iI,EAAciwE,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GAI1J,IAAI38D,EAAUvmB,KAAKs1I,gCAAgCryH,mBAAiB+B,KAAMjS,EAAMiwE,EAAat6D,EAAgBnF,GAEzGyxH,EAAe,IAAInI,gBAAgB7sI,KAAK+oI,QAAS/lD,EAAaj3D,GAAoB,EAAMxF,EAAQ5Q,OALrF,GAMfq/H,EAAaliI,UAAY9S,KAAKmyI,iBAAiBp/H,EAAMA,EAAMiwE,EAAaj3D,EAAoBrD,EAN7E,GAM2G,GAC1HssH,EAAa/nH,UAAU5wB,KAAKkqB,GAE5B,IAAI2uH,EAAcF,EAAajI,aAE3BpnG,EAA4BqvG,EAAahM,IAE7CrjG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAEnC,IAAIM,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmB3iI,EAAMA,EAAMyiI,EAAiBhI,eAAgBwH,EAAannH,UACpGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CAID,OAFA9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,MAE5BJ,C,CAGXU,mBAAmBrtI,EAAeC,EAAgBklI,EAAwB5gH,GAGtE,IAAI+Y,EAAK3lC,KAAKgpI,IAEV8M,EAAenwG,EAAG+vG,qBAOtB,OANA/vG,EAAGowG,iBAAiBpwG,EAAGiwG,aAAcE,GAErCnwG,EAAGqwG,oBAAoBrwG,EAAGiwG,aAAcpI,EAAgBnlI,EAAOC,GAE/Dq9B,EAAGowG,iBAAiBpwG,EAAGiwG,aAAc,MAE9BE,C,CAIX7xD,mCAAmC+wD,EAA+BzuH,GAC9D,IAAIof,EAAKqvG,EAAahM,IAEtBgM,EAAalI,cAAgBvmH,EAE7B,IAAIkvH,EAAcT,EAAa7H,aAC/BsI,GAAe9vG,EAAGynG,mBAAmBqI,GACrCT,EAAa7H,aAAe,KAC5B,IAAI6D,EAAahxI,KAAKqxI,yBAAyB2D,EAAajpH,oBAExDmpH,EAAcF,EAAajI,aAC/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAEnCvvG,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAapE,EAAYrrG,EAAGuE,WAAY3jB,EAAQxN,SAAU,GAErF4sB,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,K,CAIvChxD,0BAA0B4wD,EAA+BzsH,EAAiBC,EAAiBngB,EAAeC,EAAgBhD,GAEtH,IAAIqgC,EAAKqvG,EAAahM,IAMtB,GAJAhpI,KAAKouB,iBAAiB4mH,KAELrvG,EAAGswG,uBAAuBtwG,EAAGyvG,cAAgBzvG,EAAGuwG,sBAI7D,OADAl2I,KAAK4uB,mBAAmBomH,GACjB,KAEX,OAAQA,EAAahyD,aACjB,KAAKp5D,qBAAmB7S,OACpB4uB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGipG,IAAKjpG,EAAG2gB,cAAehhD,GACzE,MACJ,KAAKskB,qBAAmB5S,SACpB2uB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGmpG,KAAMnpG,EAAG2gB,cAAehhD,GAC1E,MACJ,KAAKskB,qBAAmB3S,UACpB0uB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGipG,IAAKjpG,EAAG6B,MAAOliC,GACjE,MACJ,KAAKskB,qBAAmB1S,aACpByuB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGmpG,KAAMnpG,EAAG6B,MAAOliC,GAClE,MACJ,KAAKskB,qBAAmBzS,UACpBwuB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGipG,IAAKjpG,EAAG6B,MAAOliC,GACjE,MACJ,KAAKskB,qBAAmBxS,aACpBuuB,EAAGwwG,WAAW5tH,EAASC,EAASngB,EAAOC,EAAQq9B,EAAGmpG,KAAMnpG,EAAG6B,MAAOliC,GAI1E,OADAtF,KAAK4uB,mBAAmBomH,GACjB1vI,C,CAGX8wI,mBAAmB7vH,EAA2B8vH,EAAyBhxH,EAA2B8C,GAE9F,IAAIwd,EAAKpf,EAAQyiH,IAEb3+H,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACPgb,EAAQle,MACPke,EAAQje,OAErB+c,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDvtG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GACpCvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAGlD4sB,EAAGwtG,WAAW9oI,EAAQ,EAAGmjI,EAAgBt4H,EAAQ3J,EAAM8qI,GAEvDr2I,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDvtG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGxCxkH,qBAAqB+jH,EAA8B5zI,EAAWC,EAAWkJ,EAAeC,GACpF,GAAIwqI,EAAY9vD,aAAep5D,qBAAmB8D,KAC9C,OAAO,KACX,IAAIiY,EAAKmtG,EAAY9J,IAGrB,GAFArjG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAatC,EAAY/F,gBACvBpnG,EAAGswG,uBAAuBtwG,EAAGyvG,eAAiBzvG,EAAGuwG,sBAGrE,OADAvwG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,MAC5B,KAEX,IACIlgI,EAAQ3J,EADRwH,EAAO1K,EAAQC,EAEnB,IAAIkd,EACJ,OAAQstH,EAAY9vD,aAChB,KAAKp5D,qBAAmB7S,OACpB7B,EAASywB,EAAGipG,IACZrjI,EAAOo6B,EAAG2gB,cACV9gC,EAAS,IAAIhM,WAAkB,EAAPzG,GACxB,MACJ,KAAK6W,qBAAmB5S,SACpB9B,EAASywB,EAAGmpG,KACZvjI,EAAOo6B,EAAG2gB,cACV9gC,EAAS,IAAIhM,WAAkB,EAAPzG,GACxB,MACJ,KAAK6W,qBAAmB3S,UACpB/B,EAASywB,EAAGipG,IACZrjI,EAAOo6B,EAAG2wG,uBACV9wH,EAAS,IAAIO,YAAmB,EAAPhT,GACzB,MACJ,KAAK6W,qBAAmB1S,aACpBhC,EAASywB,EAAGmpG,KACZvjI,EAAOo6B,EAAG2wG,uBACV9wH,EAAS,IAAIO,YAAmB,EAAPhT,GACzB,MACJ,KAAK6W,qBAAmBzS,UACpBjC,EAASywB,EAAGipG,IACZrjI,EAAOo6B,EAAG6B,MACVhiB,EAAS,IAAInK,aAAoB,EAAPtI,GAC1B,MACJ,KAAK6W,qBAAmBxS,aACpBlC,EAASywB,EAAGmpG,KACZvjI,EAAOo6B,EAAG6B,MACVhiB,EAAS,IAAInK,aAAoB,EAAPtI,GAC1B,MACJ,QACI,OAAO,KAIf,OAFA4yB,EAAGwwG,WAAWj3I,EAAGC,EAAGkJ,EAAOC,EAAQ4M,EAAQ3J,EAAMia,GACjDmgB,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,MAC5B5vH,C,ECp9CT,MAAO+wH,0BAA0BjJ,iBAInC/wI,YAAYusI,GACRz2H,MAAMy2H,E,CAGAyI,UAAU97H,GAChB,IAAIpL,GAAkB,EACtB,OAAQoL,GACJ,KAAKwN,mBAAiB+B,KAClB3a,EAASrK,KAAKgpI,IAAI7+F,iBAClB,MACJ,KAAKlnB,mBAAiB6B,MAClBza,EAASrK,KAAKgpI,IAAI9+F,WAClB,MACJ,KAAKjnB,mBAAiBgC,eAClB5a,EAASrK,KAAKgpI,IAAIwN,iBAClB,MACJ,KAAKvzH,mBAAiBwzH,MAClBpsI,EAASrK,KAAKgpI,IAAI0N,WAClB,MACJ,QACI,KAAM,wBAEd,OAAOrsI,C,CAGXokI,eAAev5H,EAAuBw5H,GAClC,IAAI/oG,EAAK3lC,KAAKgpI,IAId,OAHAhpI,KAAKutI,SAASC,eAAiB,KAC/BxtI,KAAKutI,SAASr4H,OAAS,KACvBlV,KAAKutI,SAAShiI,KAAO,KACb2J,GACJ,KAAKlL,gBAAc+M,OACf/W,KAAKutI,SAASC,eAAiBkB,EAAU/oG,EAAGgxG,MAAQhxG,EAAGixG,KACvD52I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcgN,SACfhX,KAAKutI,SAASC,eAAiBkB,EAAU/oG,EAAGkxG,aAAelxG,EAAGmxG,MAC9D92I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAKt8C,gBAAcqN,OACfrX,KAAKutI,SAASC,eAAiB7nG,EAAGoxG,OAClC/2I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAGopG,qBACxB,MACJ,KAAK/kI,gBAAcoN,aACfpX,KAAKutI,SAASC,eAAiB7nG,EAAGqxG,QAClCh3I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAKx9B,gBAAcmN,UACfnX,KAAKutI,SAASC,eAAiB7nG,EAAGsxG,OAClCj3I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAKx9B,gBAAciN,UACfjX,KAAKutI,SAASC,eAAiB7nG,EAAGuxG,OAClCl3I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAGwxG,WACxB,MACJ,KAAKntI,gBAAckN,aACflX,KAAKutI,SAASC,eAAiB7nG,EAAGyxG,QAClCp3I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAGwxG,WACxB,MACJ,KAAKntI,gBAAcuN,KACfvX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BoB,oCAAsCjvI,KAAKiuI,uBAAuBiB,8BAG3I,MACJ,KAAKllI,gBAAcwN,KACfxX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BsB,oCAAsCnvI,KAAKiuI,uBAAuBmB,8BAG3I,MACJ,KAAKplI,gBAAcyN,KACfzX,KAAKutI,SAASC,eAAiBkB,EAAU1uI,KAAK6tI,2BAA2BwB,oCAAsCrvI,KAAKiuI,uBAAuBqB,8BAG3I,MACJ,KAAKtlI,gBAAc0N,QACf1X,KAAKutI,SAASC,eAAiBxtI,KAAK+tI,uBAAuBwB,0BAG3D,MACJ,KAAKvlI,gBAAc4N,SACf5X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBqB,0BAG1D,MACJ,KAAKxlI,gBAAc2N,QACf3X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBsB,qBAG1D,MACJ,KAAKzlI,gBAAc8N,SACf9X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBuB,sBAG1D,MACJ,KAAK1lI,gBAAc6N,gBACf7X,KAAKutI,SAASC,eAAiBxtI,KAAKmuI,sBAAsBwB,iCAG1D,MACJ,KAAK3lI,gBAAcmO,QACfnY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBuB,6BAG3D,MACJ,KAAK5lI,gBAAcqO,QACfrY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBwB,6BAG3D,MACJ,KAAK7lI,gBAAcuO,QACfvY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuByB,6BAG3D,MACJ,KAAK9lI,gBAAcyO,UACfzY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB0B,+BAG3D,MACJ,KAAK/lI,gBAAc2O,UACf3Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB2B,+BAG3D,MACJ,KAAKhmI,gBAAcoO,YACfpY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB4B,qCAG3D,MACJ,KAAKjmI,gBAAcsO,YACftY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB6B,qCAG3D,MACJ,KAAKlmI,gBAAcwO,YACfxY,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB8B,qCAG3D,MACJ,KAAKnmI,gBAAc0O,cACf1Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuB+B,uCAG3D,MACJ,KAAKpmI,gBAAc4O,cACf5Y,KAAKutI,SAASC,eAAiBxtI,KAAKquI,uBAAuBgC,uCAG3D,MACJ,QACI,KAAM,0BAGd,OAAOrwI,KAAKutI,Q,CAGhBuD,oBAAoB57H,EAA4Bw5H,GAC5C,IAAI/oG,EAAK3lC,KAAKgpI,IACd,OAAQ9zH,GACJ,KAAK0U,qBAAmBoC,SACpB,MAAO,CAAEwhH,eAAgB7nG,EAAGorG,kBAAmBC,WAAYrrG,EAAGsrG,kBAClE,KAAKrnH,qBAAmB4mH,kBACpB,MAAO,CAAEhD,eAAgB7nG,EAAG0xG,iBAAkBrG,WAAYrrG,EAAGurG,0BACjE,KAAKtnH,qBAAmB+mH,SACpB,MAAO,CAAEnD,eAAgB7nG,EAAG2xG,mBAAoBtG,WAAYrrG,EAAGsrG,kBACnE,KAAKrnH,qBAAmBinH,UACpB,MAAO,CAAErD,eAAgB7nG,EAAGwrG,eAAgBH,WAAYrrG,EAAGyrG,oBAC/D,KAAKxnH,qBAAmB7S,OACpB,MAAO,CAAEy2H,eAAgBkB,EAAU/oG,EAAGgxG,MAAQhxG,EAAGixG,KAAM5F,WAAYrrG,EAAG2rG,mBAC1E,KAAK1nH,qBAAmB5S,SACpB,MAAO,CAAEw2H,eAAgBkB,EAAU/oG,EAAGkxG,aAAelxG,EAAGmxG,MAAO9F,WAAYrrG,EAAG2rG,mBAClF,KAAK1nH,qBAAmB3S,UACpB,MAAO,CAAEu2H,eAAgB7nG,EAAGuxG,OAAQlG,WAAYrrG,EAAG2rG,mBACvD,KAAK1nH,qBAAmB1S,aACpB,MAAO,CAAEs2H,eAAgB7nG,EAAGyxG,QAASpG,WAAYrrG,EAAG2rG,mBACxD,KAAK1nH,qBAAmBzS,UACpB,MAAO,CAAEq2H,eAAgB7nG,EAAGsxG,OAAQjG,WAAYrrG,EAAG2rG,mBACvD,KAAK1nH,qBAAmBxS,aACpB,MAAO,CAAEo2H,eAAgB7nG,EAAGqxG,QAAShG,WAAYrrG,EAAG2rG,mBACxD,QACI,OAAO,K,CAInBhB,qBAAqBp7H,EAA4Bw5H,GAC7C,IAAI/oG,EAAK3lC,KAAKgpI,IAKd,OAJAhpI,KAAKutI,SAASC,eAAiB,KAC/BxtI,KAAKutI,SAASr4H,OAAS,KACvBlV,KAAKutI,SAAShiI,KAAO,KAEb2J,GACJ,KAAK0U,qBAAmB7S,OACpB/W,KAAKutI,SAASC,eAAiBkB,EAAU/oG,EAAGgxG,MAAQhxG,EAAGixG,KACvD52I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAK18B,qBAAmB5S,SACpBhX,KAAKutI,SAASC,eAAiBkB,EAAU/oG,EAAGkxG,aAAelxG,EAAGmxG,MAC9D92I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAG2gB,cACxB,MACJ,KAAK18B,qBAAmB3S,UACpBjX,KAAKutI,SAASC,eAAiB7nG,EAAGuxG,OAClCl3I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAGwxG,WACxB,MACJ,KAAKvtH,qBAAmB1S,aACpBlX,KAAKutI,SAASC,eAAiB7nG,EAAGyxG,QAClCp3I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAGwxG,WACxB,MACJ,KAAKvtH,qBAAmBzS,UACpBnX,KAAKutI,SAASC,eAAiB7nG,EAAGsxG,OAClCj3I,KAAKutI,SAASr4H,OAASywB,EAAGipG,IAC1B5uI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAK5d,qBAAmBxS,aACpBpX,KAAKutI,SAASC,eAAiB7nG,EAAGqxG,QAClCh3I,KAAKutI,SAASr4H,OAASywB,EAAGmpG,KAC1B9uI,KAAKutI,SAAShiI,KAAOo6B,EAAG6B,MACxB,MACJ,KAAK5d,qBAAmBoC,SACpBhsB,KAAKutI,SAASC,eAAiB7nG,EAAGorG,kBAClC/wI,KAAKutI,SAASr4H,OAASywB,EAAG4qG,gBAC1BvwI,KAAKutI,SAAShiI,KAAOo6B,EAAGirG,aACxB,MACJ,KAAKhnH,qBAAmB4mH,kBACpBxwI,KAAKutI,SAASC,eAAiB7nG,EAAG0xG,iBAClCr3I,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAG4xG,kBACxB,MACJ,KAAK3tH,qBAAmB+mH,SACpB3wI,KAAKutI,SAASC,eAAiB7nG,EAAG2xG,mBAClCt3I,KAAKutI,SAASr4H,OAASlV,KAAKutI,SAASC,eACrCxtI,KAAKutI,SAAShiI,KAAOo6B,EAAGirG,aACxB,MACJ,KAAKhnH,qBAAmBinH,UACpB,MACJ,QACI,KAAM,8BAGd,OAAO7wI,KAAKutI,Q,CAGhBuE,eAAe/5G,EAAuBg6G,EAAgB,GAClD,IAAIpsG,EAAK3lC,KAAKgpI,IACV0I,EAAW,EACXM,EAAa,EACbC,EAAa,EACjB,OAAQl6G,EAAIy1G,gBACR,KAAK7nG,EAAGgxG,MACR,KAAKhxG,EAAGixG,KACR,KAAKjxG,EAAGoxG,OACR,KAAKpxG,EAAGsxG,OACR,KAAKtxG,EAAGuxG,OACJxF,EAAW,EACX,MACJ,KAAK/rG,EAAGkxG,aACR,KAAKlxG,EAAGmxG,MACR,KAAKnxG,EAAGqxG,QACR,KAAKrxG,EAAGyxG,QACJ1F,EAAW,EACX,MACJ,QACIA,EAAW,EAGnB,OAAQ35G,EAAIxsB,MACR,KAAKo6B,EAAG2gB,cACJ0rF,EAAa,EACb,MACJ,KAAKrsG,EAAGopG,qBACJiD,EAAa,EAAI,EACjB,MACJ,KAAKrsG,EAAG6B,MACJwqG,EAAa,EACb,MACJ,KAAKrsG,EAAGwxG,WACJnF,EAAa,EACb,MACJ,QACIA,EAAa,EAarB,OAVAC,EAAaP,EAAWM,EAAaj6G,EAAI1vB,MAAQ0vB,EAAIzvB,OACjDyvB,EAAIpiB,SACJs8H,GAAc,OAEdl6G,EAAI1tB,QAAUs7B,EAAGwE,iBACjB8nG,GAAc,EACTl6G,EAAI1tB,QAAUs7B,EAAGuE,WACtB+nG,GAAc,EACTl6G,EAAI1tB,QAAUs7B,EAAG6wG,mBACtBvE,GAAcF,GACXE,C,CAIXQ,YAAYv9H,EAA4CS,GACpD,OAAQT,GACJ,KAAKlL,gBAAc+M,OACf,OAAO/W,KAAK+oI,QAAQjmH,WAAW/Q,gBAAc2gI,gBAAkB/8H,EACnE,KAAK3L,gBAAcgN,SACf,OAAOhX,KAAK+oI,QAAQjmH,WAAW/Q,gBAAc2gI,cACjD,KAAK1oI,gBAAcuN,KACnB,KAAKvN,gBAAcwN,KACnB,KAAKxN,gBAAcyN,KAEf,OAAOzX,KAAK+oI,QAAQjmH,WAAW/Q,gBAAciR,8BAAgCrN,EACjF,QACI,OAAO,E,CAInByS,oBAAoB7B,EAA2BxnB,EAA4DsmB,EAA2B8C,GAC9H5B,EAAQle,OAAStJ,EAAOsJ,OAASke,EAAQje,QAAUvJ,EAAOuJ,QAE1DhR,QAAQC,KAAK,uCAGjB,IAAI8S,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAEtB8vB,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAG6xG,aAAantI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,GAC5Dq9B,EAAGytG,cAAc/oI,EAAQ,EAAG,EAAG,EAAGhC,EAAOC,EAAQ4M,EAAQ3J,EAAMxM,GAC/DwnB,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAG9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtDxkE,uBAAuBnoD,EAA2BxnB,EAA4DG,EAAWC,EAAWkmB,EAA2B8C,GAC3J,IAAI9d,EAASkc,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACPgb,EAAQle,MACPke,EAAQje,OACHie,EAAQ1Q,YAE1B,IAAI8vB,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAGlD4sB,EAAGytG,cAAc/oI,EAAQ,EAAGnL,EAAGC,EAAGJ,EAAOsJ,MAAOtJ,EAAOuJ,OAAQ4M,EAAQ3J,EAAMxM,GAC7EwnB,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAG9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtD7qH,qBAAqB9B,EAA2BxnB,EAAyBsmB,EAA2B8C,GAEhG,IAAI9d,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAEtBy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAC3Cq9B,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAClD4sB,EAAG6xG,aAAantI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,GAC5Die,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACpCxnB,IACA4mC,EAAGytG,cAAc/oI,EAAQ,EAAG,EAAG,EAAGhC,EAAOC,EAAQ4M,EAAQ3J,EAAMxM,GAC3DwnB,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,SAGlCrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDkE,sBAAsBlxH,EAA2B0tH,EAAmElC,EAAe1sH,EAA2B8C,GAC1J,IAAI9d,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAEtB8vB,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAG+xG,aAAartI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,EAAQypI,GACpExrH,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,EAASwrH,GACjD,IAAK,IAAIxnI,EAAQ,EAAGA,EAAQwnI,EAAOxnI,IAC/Bo7B,EAAGgyG,cAActtI,EAAQ,EAAG,EAAG,EAAGE,EAAOlC,EAAOC,EAAQ,EAAG4M,EAAQ3J,EAAM0oI,EAAQ1pI,IAErFgc,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACpCA,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAG9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtD0E,uBAAuBrxH,EAA2BxnB,EAAyBgzI,EAAe1sH,EAA2B8C,GACjH,IAAI9d,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAEtBy9H,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAC3Cq9B,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAClD4sB,EAAG+xG,aAAartI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,EAAQypI,GACpExrH,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,EAASwrH,GAC7ChzI,IACA4mC,EAAGgyG,cAActtI,EAAQ,EAAG,EAAG,EAAG,EAAGhC,EAAOC,EAAQypI,EAAO78H,EAAQ3J,EAAMxM,GACrEwnB,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,SAGlCrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDsE,0BAA0BtxH,EAA2BxnB,EAAyB0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBsvH,EAAiBzvI,EAAeC,EAAgBypI,EAAe1sH,EAA2B8C,GACpPO,EAAiBA,GAAiC,GAAfD,EAEnC,IAAIpe,EAASkc,EAAQlc,OACAkc,EAAQinH,eAC7B,IAAIt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KAEf+nI,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAK3lC,KAAKgpI,IACd3jH,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAGgyG,cAActtI,EAAQoe,EAAaF,EAASC,EAASsvH,EAASzvI,EAAOC,EAAQypI,EAAO78H,EAAQ3J,EAAMxM,GAEjGwnB,EAAQ5Q,QAAU+S,GAClBid,EAAGjd,eAAenC,EAAQlc,QAE9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDvqH,kBAAkBzC,EAA2BwC,GACzC,IAAI3G,EAAa2G,EAAQgrH,eAEzB/zI,KAAKqoB,qBAAqB9B,EAASnE,GAAY,GAAO,E,CAG1DyG,kBAAkBtC,EAA2BsB,GAMzC,IAAIxd,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACfsK,EAAc0Q,EAAQ1Q,YAEtBxN,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAErBie,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAI9W,EAAS8oB,EAAQ9oB,OACjBojB,EAAa0F,EAAQvE,SACrBgwH,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAE3Cq9B,EAAK3lC,KAAKgpI,IAGdsK,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAE7CoJ,GACDwjB,EAAG6xG,aAAantI,EAAQwd,EAAQhS,YAAa23H,EAAgBnlI,EAAOC,GAGxE,IAAIkrI,EAAcnrI,EACdorI,EAAenrI,EACf4Z,EAAa2F,EAAQpE,aAAeoE,EAAQrE,oBAC5CkwH,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsd,EAAQhS,YAAatL,IAAS,CAEtD,IAAIqpI,EAAY,IAAItxH,WAAWvjB,EAAQmjB,EAAY,GAAG,GAItD,GAFAA,GAAc,EAEVC,EAAY,CACZ,IAAIC,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAY0xH,GACpDjuG,EAAGguG,qBAAqBtpI,EAAQE,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GACrFsxH,GAAUtxH,EAAWnmB,MACxB,KACI,CACD,IAAI43I,EAAc7zI,KAAKwxI,sBAAsB3pH,EAAQ3S,QACjD28H,EAAY+B,EAAYC,EAAYhC,UACpCzvH,EAAa,IAAIyxH,EAAYjC,cAAc7yI,EAAQmjB,EAAY2vH,GACnElsG,EAAGytG,cAAc/oI,EAAQE,EAAO,EAAG,EAAGipI,EAAaC,EAAcv+H,EAAQ3J,EAAM6W,GAC/EsxH,GAAUtxH,EAAWnmB,MACxB,CAEDimB,GAAc0xH,EACd1xH,GAAc,GAAM0xH,EAAY,GAAK,EAErCJ,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,EAE9B,CACDzzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAC1Ckc,EAAQzT,UAAY4gI,EAGpBJ,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDS,iBAAiBztH,EAA2B0tH,EAAiE5uH,EAA2B8C,GACpI,IAAIwd,EAAK3lC,KAAKgpI,IAEd,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGP,IAAInqI,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAE1BwP,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAElDlzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAElD4sB,EAAG6xG,aAAantI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,GAC5Die,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACxC,IAAK,IAAIhc,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAI2xD,EAAIg4E,EAAS3pI,GAEjBo7B,EAAGytG,cAAcl3E,EAAG,EAAG,EAAG,EAAGhnD,EAAQ3J,EAAM0oI,EAAQ1pI,GACtD,CAEGgc,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,QAG9BrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAE1Cgb,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,E,CAGtDuB,kBAAkBluH,EAA2BxnB,EAA2BsmB,EAA2B8C,GAC/F,IAAIwd,EAAK3lC,KAAKgpI,IAEd,MAAMkL,EAAW,CACbvuG,EAAGwuG,4BACHxuG,EAAGyuG,4BACHzuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,6BAGP,IAAInqI,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACflD,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OACjBuN,EAAc0Q,EAAQ1Q,YAEtBy9H,EAAWjrI,EAAQ,GAAK,EAO5B,GANAgd,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAClD4sB,EAAG6xG,aAAantI,EAAQwL,EAAa23H,EAAgBnlI,EAAOC,GACxDvJ,EAAQ,CACR,IAAK,IAAIwL,EAAQ,EAAGA,EAAQ2pI,EAASj4I,OAAQsO,IAAS,CAClD,IAAI2xD,EAAIg4E,EAAS3pI,GACjBo7B,EAAGytG,cAAcl3E,EAAG,EAAG,EAAG,EAAG7zD,EAAOC,EAAQ4M,EAAQ3J,EAAMxM,EAAOwL,GACpE,CACGgc,EAAQ5Q,QACRgwB,EAAGjd,eAAenC,EAAQlc,OAEjC,CAGDrK,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAC1Ckc,EAAQzT,UAAY9S,KAAK8xI,eAAevrH,GACxClB,GAAoBsgB,EAAGqtG,YAAYrtG,EAAGstG,gCAAgC,GACtE9qH,GAAWwd,EAAGqtG,YAAYrtG,EAAGutG,qBAAqB,GAClDI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpDwB,eAAexuH,EAA2BsB,GAKtC,IAAI8d,EAAK3lC,KAAKgpI,IAGd,MAAMkL,EAAW,CACbvuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,4BACH7uG,EAAGwuG,4BACHxuG,EAAGyuG,6BAKP,IAAI/pI,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACDgb,EAAQ1Q,YAE1B,IAAIxN,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAErBie,EAAQ5P,eAAiBkR,EAAQhS,YAAc,EAE/C,IAAI9W,EAAS8oB,EAAQ9oB,OACjBojB,EAAa0F,EAAQvE,SAErBkwH,EAAcnrI,EACdorI,EAAenrI,EACf4Z,EAAa2F,EAAQpE,aAAeoE,EAAQrE,oBAE5C8vH,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAI/CgrI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAE7CoJ,GACDwjB,EAAG6xG,aAAantI,EAAQwd,EAAQhS,YAAa23H,EAAgBnlI,EAAOC,GAExE,IAAIorI,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsd,EAAQhS,YAAatL,IAAS,CAEtD,IAAIqpI,EAAY,IAAItxH,WAAWvjB,EAAQmjB,EAAY,GAAG,GAEtDA,GAAc,EAEd,IAAK,IAAI4yH,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAI54E,EAAIg4E,EAASY,GAEjB,GAAI3yH,EAAY,CACZ,IAAIC,EAAa,IAAI5I,WAAWza,EAAQmjB,EAAY0xH,GACpDjuG,EAAGguG,qBAAqBz3E,EAAG3xD,EAAOijI,EAAgBgG,EAAaC,EAAc,EAAGrxH,GAChFsxH,GAAUtxH,EAAWxI,UACxB,KACI,CACD,IAAIi6H,EAAc7zI,KAAKwxI,sBAAsB3pH,EAAQ3S,QACjD28H,EAAY+B,EAAYC,EAAYhC,UACpCzvH,EAAa,IAAIyxH,EAAYjC,cAAc7yI,EAAQmjB,EAAY2vH,GACnElsG,EAAGytG,cAAcl3E,EAAG3xD,EAAO,EAAG,EAAGipI,EAAaC,EAAcv+H,EAAQ3J,EAAM6W,GAC1EsxH,GAAUtxH,EAAWxI,UACxB,CACDsI,GAAc0xH,EACd1xH,GAAc,GAAM0xH,EAAY,GAAK,CACxC,CAEDJ,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,EAC9B,CACDltH,EAAQzT,UAAY4gI,EACpB1zI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAI1CipI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAMpDwE,mBAAmBxxH,EAA2BsB,GAW1C,IAAI8d,EAAK3lC,KAAKgpI,IAGd,MAAMkL,EAAW,CACbvuG,EAAG0uG,4BACH1uG,EAAG2uG,4BACH3uG,EAAG4uG,4BACH5uG,EAAG6uG,4BACH7uG,EAAGwuG,4BACHxuG,EAAGyuG,6BAKP,IAAI/pI,EAASkc,EAAQlc,OACjBmjI,EAAiBjnH,EAAQinH,eACzBt4H,EAASqR,EAAQrR,OACjB3J,EAAOgb,EAAQhb,KACfsK,EAAc0Q,EAAQ1Q,YAEtBxN,EAAQke,EAAQle,MAChBC,EAASie,EAAQje,OAErBie,EAAQ5P,eAAiBd,EAAc,EAEvC,IAAI9W,EAAS8oB,EAAQ9oB,OACjBojB,EAAa0F,EAAQvE,SAErBkwH,EAAcnrI,EACdorI,EAAenrI,EACf4Z,EAAa2F,EAAQpE,aAAeoE,EAAQrE,oBAE5C8vH,EAAWjrI,EAAQ,GAAK,GAAKC,EAAS,GAAK,EAI/CgrI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,GAEhDvzI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQkc,EAAQxN,UAE7CoJ,GACDwjB,EAAG6xG,aAAantI,EAAQwd,EAAQhS,YAAa23H,EAAgBnlI,EAAOC,GAExE,IAAIorI,EAAS,EACb,IAAK,IAAInpI,EAAQ,EAAGA,EAAQsd,EAAQhS,YAAatL,IAAS,CAEtD,IAAIqpI,EAAY,IAAItxH,WAAWvjB,EAAQmjB,EAAY,GAAG,GAEtDA,GAAc,EAEd,IAAK,IAAI4yH,EAAO,EAAGA,EAAO,EAAGA,IAAQ,CACjC,IAAI54E,EAAIg4E,EAASY,GACbjB,EAAc7zI,KAAKwxI,sBAAsB3pH,EAAQ3S,QACjD28H,EAAY+B,EAAYC,EAAYhC,UACpCzvH,EAAa,IAAIyxH,EAAYjC,cAAc7yI,EAAQmjB,EAAY2vH,GACnElsG,EAAGytG,cAAcl3E,EAAG3xD,EAAO,EAAG,EAAGipI,EAAaC,EAAcv+H,EAAQ3J,EAAM6W,GAC1EsxH,GAAUtxH,EAAWxI,UACxB,CACDsI,GAAc0xH,EACd1xH,GAAc,GAAM0xH,EAAY,GAAK,CACxC,CAEDJ,EAAcj2I,KAAKuL,IAAI,EAAiB,GAAd0qI,GAC1BC,EAAel2I,KAAKuL,IAAI,EAAkB,GAAf2qI,GAE3BltH,EAAQzT,UAAY4gI,EACpB1zI,KAAK+oI,QAAQgD,aAAaxlH,EAAQlc,OAAQ,MAI1CipI,GAAY3tG,EAAGqtG,YAAYrtG,EAAG4tG,iBAAkB,E,CAGpD/8H,sBAAsB+P,EAA2BjQ,GAC7C,IAAIqvB,EAAK3lC,KAAKgpI,IACd,OAAQ1yH,GACJ,KAAK8xH,qBAAmB4P,OACpBzxH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAGqyG,QACtDzxH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBgQ,OACpB7xH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAGyyG,QACtD7xH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBiQ,KACpB9xH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG0yG,MACtD9xH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBkQ,QACpB/xH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG2yG,SACtD/xH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBmQ,MACpBhyH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG4yG,OACtDhyH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBoQ,SACpBjyH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG6yG,UACtDjyH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBqQ,OACpBlyH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG8yG,QACtDlyH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmBsQ,MACpBnyH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAG+yG,OACtDnyH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGwyG,wBACtD,MACJ,KAAK/P,qBAAmB16G,KACxB,QACInH,EAAQyjH,kBAAkBrkG,EAAGsyG,qBAAsBtyG,EAAGqyG,QACtDzxH,EAAQyjH,kBAAkBrkG,EAAGuyG,qBAAsBvyG,EAAGnwB,MAG9D,OAAOc,C,CAIXo/H,mBAAmBrtI,EAAeC,EAAgBklI,EAAwB5gH,GAEtE,IAAI+Y,EAAK3lC,KAAKgpI,IAEV8M,EAAenwG,EAAG+vG,qBAYtB,OAXA/vG,EAAGowG,iBAAiBpwG,EAAGiwG,aAAcE,GAEjClpH,EAAU,EACV+Y,EAAGgzG,+BAA+BhzG,EAAGiwG,aAAchpH,EAAS4gH,EAAgBnlI,EAAOC,GAGnFq9B,EAAGqwG,oBAAoBrwG,EAAGiwG,aAAcpI,EAAgBnlI,EAAOC,GAGnEq9B,EAAGowG,iBAAiBpwG,EAAGiwG,aAAc,MAE9BE,C,CAGX9xD,4BAA4BvuE,EAA6BpN,EAAeC,EAAgB4M,EAA4BwT,EAAyBnF,GAEzImF,EAAiBA,GAAkB1oB,KAAK2yI,sBAAsBz9H,GAE9D,IAAI29H,EAAa7yI,KAAK4yI,aAAa19H,IAAYqO,GAAQvjB,KAAKyyI,YAAYv9H,EAAQwT,GAG5EjS,EAAkB,GACjBo8H,GAActvH,IACf9M,EAAkB,KAGtB,IAAIpM,EAASrK,KAAKuxI,UAAU97H,GACxBq9H,EAAc,IAAI5J,iBAAiBlpI,KAAK+oI,QAAS1+H,EAAQhC,EAAOC,EAAQmN,EAAWiT,EAAgBmqH,EAAYp8H,GAE/Gs8H,EAAU/yI,KAAKswI,qBAAqBp7H,EAAQ29H,GAEhDC,EAAYtF,eAAiBuF,EAAQvF,eACrCsF,EAAY59H,OAAS69H,EAAQ79H,OAC7B49H,EAAYvnI,KAAOwnI,EAAQxnI,KAE3B,IAAIiiI,EAAiBsF,EAAYtF,eAClBsF,EAAY59H,OAChB49H,EAAYvnI,KAEvB,IAAIo6B,EAAK3lC,KAAKgpI,IAYd,OAVAhpI,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQyoI,EAAY/5H,UAE1D4sB,EAAG6xG,aAAantI,EAAQyoI,EAAYj9H,YAAa23H,EAAgBnlI,EAAOC,GAExEtI,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQ,MAE1C6K,GAAU0U,qBAAmBoC,UAAY9W,GAAU0U,qBAAmB+mH,UAAYz7H,GAAU0U,qBAAmB4mH,oBAC/GsC,EAAY/8H,WAAajE,aAAWhK,OAGjCgrI,C,CAGX/kH,2BAA2B1lB,EAAeC,EAAgB06E,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GACvK,IAAI38D,EAAUvmB,KAAKgkF,4BAA4B/gE,mBAAiB6B,MAAOzc,EAAOC,EAAQ06E,EAAat6D,EAAgBnF,GAE/GyxH,EAAe,IAAInI,gBAAgB7sI,KAAK+oI,QAAS/lD,EAAaj3D,GAAoB,EAAOxF,EAAQ5Q,OAAQutE,GAC7G8xD,EAAaliI,UAAY9S,KAAKmyI,iBAAiB9pI,EAAOC,EAAQ06E,EAAaj3D,EAAoBrD,EAAgBw6D,GAAc,GAC7H8xD,EAAa/nH,UAAU5wB,KAAKkqB,GAE5B,IAAIof,EAA4BqvG,EAAahM,IAE7C,GAAIgM,EAAannH,SAAW,EAAG,CAC3B,IAAI+qH,EAAkB5D,EAAa/H,iBAC/B4L,EAAoB74I,KAAK8wI,oBAAoB9tD,EAAaz/D,GAC1Du1H,EAAmB9D,EAAa3H,kBAAoBrtI,KAAK01I,mBAAmBrtI,EAAOC,EAAQuwI,EAAkBrL,eAAgBwH,EAAannH,UAC9I8X,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAawD,GACnCjzG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAayD,EAAkB7H,WAAYrrG,EAAGiwG,aAAckD,GAE1F,IAAItD,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmBrtI,EAAOC,EAAQktI,EAAiBhI,eAAgBwH,EAAannH,UACvGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CACD9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,MAEnC,IAAIF,EAAcF,EAAajI,aAC/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAEnC,IAAIK,EAAkBv1I,KAAKqxI,yBAAyBruD,GACpDr9C,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAaG,EAAiB5vG,EAAGuE,WAAY3jB,EAAQxN,SAAU,GAC1F4sB,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,KACtC,KACI,CACD,IAAIF,EAAcF,EAAajI,aAE/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAEnC,IAAIK,EAAkBv1I,KAAKqxI,yBAAyBruD,GACpDr9C,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAaG,EAAiB5vG,EAAGuE,WAAY3jB,EAAQxN,SAAU,GAG1F,IAAIy8H,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmBrtI,EAAOC,EAAQktI,EAAiBhI,eAAgBwH,EAAannH,UACvGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CACD9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,KACtC,CAED,OAAOJ,C,CAIXa,+BAA+B9iI,EAAciwE,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GAC1J,IAAI38D,EAAUvmB,KAAKs1I,gCAAgCryH,mBAAiB+B,KAAMjS,EAAMiwE,EAAat6D,EAAgBnF,GAEzGyxH,EAAe,IAAInI,gBAAgB7sI,KAAK+oI,QAAS/lD,EAAaj3D,GAAoB,EAAMxF,EAAQ5Q,OAAQutE,GAC5G8xD,EAAaliI,UAAY9S,KAAKmyI,iBAAiBp/H,EAAMA,EAAMiwE,EAAaj3D,EAAoBrD,EAAgBw6D,GAAc,GAC1H8xD,EAAahyD,YAAcA,EAC3BgyD,EAAajpH,mBAAqBA,EAClCipH,EAAa/nH,UAAU5wB,KAAKkqB,GAE5B,IAAIof,EAA4BqvG,EAAahM,IAE7C,GAAIgM,EAAannH,SAAW,EAAG,CAC3B,IAAI+qH,EAAkB5D,EAAa/H,iBAC/B4L,EAAoB74I,KAAK8wI,oBAAoB9tD,GAAa,GAC1D81D,EAAmB9D,EAAa3H,kBAAoBrtI,KAAK01I,mBAAmB3iI,EAAMA,EAAM8lI,EAAkBrL,eAAgBwH,EAAannH,UAC3I8X,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAawD,GACnCjzG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAayD,EAAkB7H,WAAYrrG,EAAGiwG,aAAckD,GAE1F,IAAItD,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmB3iI,EAAMA,EAAMyiI,EAAiBhI,eAAgBwH,EAAannH,UACpGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CACD9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,KACtC,KACI,CACD,IAAIF,EAAcF,EAAajI,aAE/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GAGnC,IAAIM,EAAmBx1I,KAAK8wI,oBAAoB/kH,GAAoB,GACpE,GAAIypH,EAAkB,CAClB,IAAIC,EAAcz1I,KAAK01I,mBAAmB3iI,EAAMA,EAAMyiI,EAAiBhI,eAAgBwH,EAAannH,UACpGmnH,EAAa7H,aAAesI,EAC5B9vG,EAAGgwG,wBAAwBhwG,EAAGyvG,YAAaI,EAAiBxE,WAAYrrG,EAAGiwG,aAAcH,EAC5F,CACD9vG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,KACtC,CAGD,OAAOJ,C,CAGXM,gCAAgC7/H,EAA6B1C,EAAcmC,EAA4BwT,EAAyBnF,GAC5HmF,EAAiBA,GAAkB1oB,KAAK2yI,sBAAsBz9H,GAE9D,IAAI29H,EAAa7yI,KAAK4yI,aAAa19H,IAAYqO,GAAQvjB,KAAKyyI,YAAYv9H,EAAQwT,GAE5EjS,EAAkB,GACjBo8H,GAActvH,IACf9M,EAAkB,KAGtB,IAAIpM,EAASrK,KAAKuxI,UAAU97H,GACxBq9H,EAAc,IAAI5J,iBAAiBlpI,KAAK+oI,QAAS1+H,EAAQ0I,EAAMA,EAAM0C,EAAWiT,EAAgBmqH,EAAYp8H,GAE5Gs8H,EAAU/yI,KAAKswI,qBAAqBp7H,EAAQ29H,GAEhDC,EAAYtF,eAAiBuF,EAAQvF,eACrCsF,EAAY59H,OAAS69H,EAAQ79H,OAC7B49H,EAAYvnI,KAAOwnI,EAAQxnI,KAG3B,IAAIiiI,EAAiBsF,EAAYtF,eAClBsF,EAAY59H,OAChB49H,EAAYvnI,KAEvB,IAAIo6B,EAAK3lC,KAAKgpI,IAQd,OANAhpI,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQyoI,EAAY/5H,UAE1D4sB,EAAG6xG,aAAantI,EAAQyoI,EAAYj9H,YAAa23H,EAAgBz6H,EAAMA,GAEvE/S,KAAK+oI,QAAQgD,aAAa+G,EAAYzoI,OAAQ,MAEvCyoI,C,CAIX1kH,iBAAiB4mH,EAA+BC,EAAoB,GAChE,IAAItvG,EAAK3lC,KAAKgpI,IAEd,GAAIgM,EAAapnH,QAAS,CACtB,IAAIsnH,EAAcF,EAAajI,aAC/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,GACnC,IAAI3uH,EAA4ByuH,EAAa/nH,UAAU,GACvD0Y,EAAG0vG,qBAAqB1vG,EAAGyvG,YAAazvG,EAAG2rG,kBAAmB3rG,EAAG0uG,4BAA8BY,EAAW1uH,EAAQxN,SAAU,EAC/H,CAED,GAAIi8H,EAAannH,SAAW,EACxB8X,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaJ,EAAa/H,sBAE/C,CACD,IAAIiI,EAAcF,EAAajI,aAE/BpnG,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAaF,EACtC,C,CAGLtmH,mBAAmBomH,GACf,IAAIrvG,EAAK3lC,KAAKgpI,IACd,GAAIgM,EAAannH,SAAW,EAAG,CAE3B8X,EAAGwvG,gBAAgBxvG,EAAGozG,iBAAkB/D,EAAa/H,kBACrDtnG,EAAGwvG,gBAAgBxvG,EAAGqzG,iBAAkBhE,EAAajI,cAErD,IAAIxmH,EAAUyuH,EAAa/nH,UAAU,GAOjCgsH,EAAWtzG,EAAGuzG,iBACdlE,EAAalI,gBACbmM,GAAYtzG,EAAGwzG,kBAGnBxzG,EAAGyzG,gBAAgB,EAAG,EAAG7yH,EAAQle,MAAOke,EAAQje,OAAQ,EAAG,EAAGie,EAAQle,MAAOke,EAAQje,OAAQ2wI,EAAUtzG,EAAGwmG,QAC7G,CACG6I,EAAalnH,iBACbknH,EAAa/nH,UAAUriB,SAAQmtB,IAC3B,IAAI1tB,EAA4B0tB,EAAK1tB,OACrCrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQ0tB,EAAIhf,UACtC4sB,EAAGjd,eAAere,GAClBrK,KAAK+oI,QAAQgD,aAAa1hI,EAAQ,KAAK,IAG/Cs7B,EAAGwvG,gBAAgBxvG,EAAGyvG,YAAa,K,ECvnCrC,MAAOiE,iBAAiBxQ,SAW1BtsI,YAAYusI,EAAqBn+E,EAA8BC,GAC3Dv4C,MAAMy2H,GAHV9oI,KAAW6qD,YAAW,EAIlB7qD,KAAKs5I,cAAgB3uF,EACrB3qD,KAAKu5I,mBAAqB3uF,EAC1B5qD,KAAKw5I,aAAax5I,KAAKs5I,eACvBt5I,KAAKy5I,YAAYz5I,KAAKu5I,oBACtBv5I,KAAK8qD,UAAY9qD,KAAKgpI,IAAIj+E,c,CAGtB0uF,YAAYvwF,GAChB,OAAQA,GACJ,KAAKjT,cAAYmY,OACbpuD,KAAK05I,SAAW15I,KAAKgpI,IAAI2Q,YACzB,MACJ,KAAK1jG,cAAYmZ,QACbpvD,KAAK05I,SAAW15I,KAAKgpI,IAAI4Q,aACzB,MACJ,KAAK3jG,cAAY4jG,OACb75I,KAAK05I,SAAW15I,KAAKgpI,IAAI8Q,YACzB,MACJ,QACIxiJ,QAAQsvB,MAAM,yB,CAKlB4yH,aAAanvI,GACjB,OAAQA,GACJ,KAAK2rC,mBAAiBgZ,aAClBhvD,KAAK+5I,UAAY/5I,KAAKgpI,IAAIh6E,aAC1B,MACJ,KAAKhZ,mBAAiBgkG,eAClBh6I,KAAK+5I,UAAqC/5I,KAAKgpI,IAAKgR,eACpD,MACJ,KAAKhkG,mBAAiBqY,qBAClBruD,KAAK+5I,UAAY/5I,KAAKgpI,IAAI36E,qB,CAO9B4rF,cAAchI,GAClBjyI,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqB2J,aAAcwyF,GACnEjyI,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBqJ,UAAW8yF,E,CAGpE9mF,aACI,OAAInrD,KAAK+oI,QAAQmR,eAAel6I,KAAKs5I,gBAAkBt5I,OACnDA,KAAKgpI,IAAI79E,WAAWnrD,KAAK+5I,UAAW/5I,KAAK8qD,WACzC9qD,KAAK+oI,QAAQoR,eAAen6I,KAAKs5I,cAAet5I,OACzC,E,CAKforD,eACQprD,KAAK+oI,QAAQmR,eAAel6I,KAAKs5I,gBAAkBt5I,OACnDA,KAAKgpI,IAAI79E,WAAWnrD,KAAK+5I,UAAW,MACpC/5I,KAAK+oI,QAAQoR,eAAen6I,KAAKs5I,cAAe,M,CAIxDc,gBACIp6I,KAAKmrD,aACLnrD,KAAK2rD,cAAc3rD,KAAK6qD,Y,CAG5Bc,cAAc0uF,GACV,IAAI10G,EAAK3lC,KAAKgpI,IACdhpI,KAAKmrD,aACLnrD,KAAKi6I,eAAej6I,KAAK6qD,aACzB7qD,KAAK6qD,YAAcwvF,EACnB10G,EAAG20G,WAAWt6I,KAAK+5I,UAAW/5I,KAAK6qD,YAAa7qD,KAAK05I,UACrD15I,KAAKorD,eACLprD,KAAKi6I,cAAcj6I,KAAK6qD,Y,CAM5Be,QAAQyuF,EAAwC55H,GAC5C,IAAIklB,EAAK3lC,KAAKgpI,IACdhpI,KAAKmrD,aACLxlB,EAAG40G,cAAcv6I,KAAK+5I,UAAWt5H,EAAyB45H,GAC1Dr6I,KAAKorD,c,CAETovF,UAAUH,EAAwC55H,EAAgBxkB,GAC9D,IAAI0pC,EAAK3lC,KAAKgpI,IACdhpI,KAAKmrD,aACLxlB,EAAG40G,cAAcv6I,KAAK+5I,UAAWt5H,EAAQ45H,EAA4B,EAAGp+I,GACxE+D,KAAKorD,c,CAoBTqvF,eAAeC,GACX,GAAI16I,KAAK+oI,QAAQ4R,kBAAkBD,IAAc16I,KAAM,CAChBA,KAAKgpI,IACrCyR,eAAez6I,KAAK+5I,UAAWW,EAAW16I,KAAK8qD,WAClD9qD,KAAK+oI,QAAQ6R,kBAAkBF,EAAW16I,KAC7C,C,CAIL66I,gBAAgBH,EAAmBj6H,EAAgBq6H,GACZ96I,KAAKgpI,IACrC6R,gBAAgB76I,KAAK+5I,UAAWW,EAAW16I,KAAK8qD,UAAWrqC,EAAQq6H,E,CAG1EC,aAAa5tF,GACTntD,KAAKmrD,aACL,MAAMxlB,EAAK3lC,KAAKgpI,IAChBhpI,KAAK6qD,YAAcsC,EACnBxnB,EAAG20G,WAAWt6I,KAAK+5I,UAAW/5I,KAAK6qD,YAAa7qD,KAAK05I,S,CAGzDv2I,UACIkP,MAAMlP,UACKnD,KAAKgpI,IACb75E,aAAanvD,KAAK8qD,WACrB9qD,KAAKi6I,eAAej6I,KAAK6qD,aACzB7qD,KAAK6qD,YAAc,EACnB7qD,KAAK+oI,QAAU,KACf/oI,KAAK8qD,UAAY,KACjB9qD,KAAK+5I,UAAY,KACjB/5I,KAAK05I,SAAW,KAChB15I,KAAKgpI,IAAM,I,GCxJlB,WAGG,IAAIgS,EAAgB,GAcpB,SAASC,kBAAkBtgI,EAAKugI,GAZhC,IAAe3yB,EAaXyyB,EAAcrgI,IAAO,OACLpJ,IAAZ2pI,IAdO3yB,EAeD2yB,EAdNt/I,OAAOtE,SAAWsE,OAAOtE,QAAQsvB,OACjChrB,OAAOtE,QAAQsvB,MAAM2hG,G,CAsC7B,IAAI4yB,EAA4B,SAASA,0BAA0B37I,GAC/D,IAAImmC,EAAKnmC,EAAImmC,GAEb3lC,KAAKR,IAAMA,EACXQ,KAAKo7I,SAAU,EACfp7I,KAAKq7I,cAAe,EAEpBr7I,KAAKs7I,mBAAqB,KAC1Bt7I,KAAKswD,QAAU,IAAIj/C,MAAM7R,EAAI+7I,kBAC7B,IAAK,IAAI/1I,EAAI,EAAGA,EAAIxF,KAAKswD,QAAQr0D,OAAQuJ,IAAK,CAC1C,IAAIg2I,EAAS,IAAKL,0BAAkCM,aAAa91G,GACjE3lC,KAAKswD,QAAQ9qD,GAAKg2I,CACrB,CAEDx7I,KAAK07I,UAAY,CACrB,GAECP,EAAkCM,aAAe,SAAsB91G,GACpE3lC,KAAKa,SAAU,EACfb,KAAK2Z,OAAS,KACd3Z,KAAK+S,KAAO,EACZ/S,KAAKuL,KAAOo6B,EAAG6B,MACfxnC,KAAK27I,YAAa,EAClB37I,KAAKsvD,OAAS,GACdtvD,KAAKygB,OAAS,EAEdzgB,KAAK47I,OAAS,GACd57I,KAAK67I,SACT,GACgDz7B,UAAUy7B,QAAU,WAChE77I,KAAK47I,OAAS,CAAC57I,KAAK+S,KAAM/S,KAAKuL,KAAMvL,KAAK27I,WAAY37I,KAAKsvD,OAAQtvD,KAAKygB,QAAQlC,KAAK,IACzF,EAEA,IAAIu9H,qBAAuB,SAA8Bn2G,GACrD,IAAIo2G,EAAO/7I,KACXA,KAAK2lC,GAAKA,EAxDd,SAAqBA,GACjB,IAAI7nB,EAAI6nB,EAAGq2G,SACXr2G,EAAGq2G,SAAW,WACV,IAAIrhI,EACJ,IACIA,EAAMmD,EAAEkwB,MAAMrI,KACHA,EAAGs2G,WACVjB,EAAcrgI,IAAO,SAEpBA,GAAOgrB,EAAGs2G,UAEnB,IAAK,IAAIC,KAAQlB,EACb,GAAIA,EAAckB,GAEd,cADOlB,EAAckB,GACdp9I,SAASo9I,GAGxB,OAAOv2G,EAAGs2G,QACd,C,CAwCAE,CAAYx2G,GAEZ,IAAIy2G,EAAWp8I,KAAKo8I,SAAW,CAC3BC,aAAc12G,EAAG02G,aACjBC,wBAAyB32G,EAAG22G,wBAC5BC,yBAA0B52G,EAAG42G,yBAC7BpxF,WAAYxlB,EAAGwlB,WACfqxF,gBAAiB72G,EAAG62G,gBACpBC,oBAAqB92G,EAAG82G,qBAG5B92G,EAAG02G,aAAe,SAAsBxQ,GACpC,OAAIA,GAASkQ,EAAKW,yBACVX,EAAKY,0BAA4BZ,EAAKa,yBAC/B,KAEAb,EAAKY,yBAGbP,EAASC,aAAaruG,MAAMhuC,KAAM2R,UAC7C,EAEAg0B,EAAG22G,wBAA0B,SAAiC/xI,GAC1D,IAAIsyI,EAAMd,EAAKY,yBAIf,OAHAE,EAAInB,UAAYn+I,KAAKuL,IAAI+zI,EAAInB,UAAWnxI,GAC3BsyI,EAAIvsF,QAAQ/lD,GAClB1J,SAAU,EACVu7I,EAASE,wBAAwBtuG,MAAMhuC,KAAM2R,UACxD,EACAg0B,EAAG42G,yBAA2B,SAAkChyI,GAC5D,IAAIsyI,EAAMd,EAAKY,yBAIf,OAHAE,EAAInB,UAAYn+I,KAAKuL,IAAI+zI,EAAInB,UAAWnxI,GAC3BsyI,EAAIvsF,QAAQ/lD,GAClB1J,SAAU,EACVu7I,EAASG,yBAAyBvuG,MAAMhuC,KAAM2R,UACzD,EAEAg0B,EAAGwlB,WAAa,SAAoB9gD,EAAQsP,GACxC,OAAQtP,GACJ,KAAKs7B,EAAGqpB,aACJ+sF,EAAKe,mBAAqBnjI,EAC1B,MACJ,KAAKgsB,EAAG0oB,qBACJ0tF,EAAKY,yBAAyBrB,mBAAqB3hI,EAG3D,OAAOyiI,EAASjxF,WAAWnd,MAAMhuC,KAAM2R,UAC3C,EAEAg0B,EAAG62G,gBAAkB,SAAyBjyI,EAAOshI,GACjD,IACI2P,EADMO,EAAKY,yBACErsF,QAAQ/lD,GACzB,OAAQshI,GACJ,KAAKlmG,EAAGo3G,mCACJ,OAAOvB,EAAO7hI,OAClB,KAAKgsB,EAAGq3G,4BACJ,OAAOxB,EAAO36I,QAClB,KAAK8kC,EAAGs3G,yBACJ,OAAOzB,EAAOzoI,KAClB,KAAK4yB,EAAGu3G,2BACJ,OAAO1B,EAAOlsF,OAClB,KAAK3pB,EAAGw3G,yBACJ,OAAO3B,EAAOjwI,KAClB,KAAKo6B,EAAGy3G,+BACJ,OAAO5B,EAAOG,WAClB,QACI,OAAOS,EAASI,gBAAgBxuG,MAAMhuC,KAAM2R,WAExD,EAEAg0B,EAAG82G,oBAAsB,SAA6BY,EAAMtqI,EAAMxH,EAAMowI,EAAYrsF,EAAQ7uC,GACxF,IAAIo8H,EAAMd,EAAKY,yBACfE,EAAInB,UAAYn+I,KAAKuL,IAAI+zI,EAAInB,UAAW2B,GACxC,IAAI7B,EAASqB,EAAIvsF,QAAQ+sF,GAQzB,OAPA7B,EAAO7hI,OAASoiI,EAAKe,mBACrBtB,EAAOzoI,KAAOA,EACdyoI,EAAOjwI,KAAOA,EACdiwI,EAAOG,WAAaA,EACpBH,EAAOlsF,OAASA,EAChBksF,EAAO/6H,OAASA,EAChB+6H,EAAOK,UACAO,EAASK,oBAAoBzuG,MAAMhuC,KAAM2R,UACpD,EAEIg0B,EAAG23G,qBACH33G,EAAG23G,oBAAoBt9I,KAAM,2BAGjC2lC,EAAGpe,OAAOi9G,iBAAiB,wBAAwB,WA/JvD,IAAajc,IAgKD,0DA/JJ3sH,OAAOtE,SAAWsE,OAAOtE,QAAQovB,KACjC9qB,OAAOtE,QAAQovB,IAAI6hG,GA+JnBwzB,EAAKwB,Q,IACN,GAEHv9I,KAAKu9I,QACT,EAEAzB,qBAAqB17B,UAAUs8B,yBAA2B,MAE1DZ,qBAAqB17B,UAAUm9B,OAAS,WAEpC,QADiDhsI,IAA5BvR,KAAKw9I,mBAEtB,IAAK,IAAIjwD,EAAK,EAAGA,EAAKvtF,KAAKw9I,mBAAmBvhJ,SAAUsxF,EACpDvtF,KAAKw9I,mBAAmBpC,SAAU,EAG1C,IAAIz1G,EAAK3lC,KAAK2lC,GACd3lC,KAAKu7I,iBAAmB51G,EAAG02G,aAAa12G,EAAG83G,oBAE3Cz9I,KAAK48I,yBAA2B,IAAIzB,EAA0Bn7I,MAC9DA,KAAK28I,yBAA2B,KAChC38I,KAAK88I,mBAAqB,KAC1B98I,KAAKw9I,mBAAqB,CAACx9I,KAAK48I,0BAEhC58I,KAAK09I,mBAAmB,KAC5B,EAEA5B,qBAAqB17B,UAAUu9B,qBAAuB,WAClD,IAAIC,EAAc,IAAIzC,EAA0Bn7I,MAEhD,OADAA,KAAKw9I,mBAAmBnhJ,KAAKuhJ,GACtBA,CACX,EAEA9B,qBAAqB17B,UAAUy9B,qBAAuB,SAA8BD,GAChFA,EAAYxC,SAAU,EACtBp7I,KAAKw9I,mBAAmB9yI,OAAO1K,KAAKw9I,mBAAmBt/I,QAAQ0/I,GAAc,GACzE59I,KAAK28I,0BAA4BiB,GACjC59I,KAAK09I,mBAAmB,KAEhC,EAEA5B,qBAAqB17B,UAAU09B,iBAAmB,SAA0BF,GACxE,SAAIA,GAAeA,aAAuBzC,GACjCyC,EAAoBvC,cAAiBuC,EAAoBp+I,KAAOQ,KAK7E,EAEA87I,qBAAqB17B,UAAUs9B,mBAAqB,SAA4BE,GAC5E,IAAIj4G,EAAK3lC,KAAK2lC,GACd,IAAIi4G,GAAgBA,EAAYxC,QAAhC,CAIA,IAAIgB,EAAWp8I,KAAKo8I,SAEhB2B,EAAS/9I,KAAK28I,yBAClB38I,KAAK28I,yBAA2BiB,GAAe59I,KAAK48I,yBACpD58I,KAAK28I,yBAAyBtB,cAAe,EAC7C,IAAI2C,EAASh+I,KAAK28I,yBAElB,GAAIoB,GAAUC,EAAd,CAIKD,GAAUC,EAAO1C,oBAAsByC,EAAOzC,oBAC/Cc,EAASjxF,WAAW/tD,KAAKuoC,EAAIA,EAAG0oB,qBAAsB2vF,EAAO1C,oBAKjE,IAFA,IAAI2C,EAAiBj+I,KAAK88I,mBACtBpB,EAAYn+I,KAAKuL,IAAIi1I,EAASA,EAAOrC,UAAY,EAAGsC,EAAOtC,WACtDl2I,EAAI,EAAGA,GAAKk2I,EAAWl2I,IAAK,CACjC,IAAIg2I,EAASwC,EAAO1tF,QAAQ9qD,GACxB04I,EAAYH,EAASA,EAAOztF,QAAQ9qD,GAAK,KAU7C,GARKu4I,GAAUvC,EAAO36I,SAAWq9I,EAAUr9I,UACnC26I,EAAO36I,QACPu7I,EAASE,wBAAwBl/I,KAAKuoC,EAAIngC,GAE1C42I,EAASG,yBAAyBn/I,KAAKuoC,EAAIngC,IAI/Cg2I,EAAO36I,QAAS,CAChB,IAAIs9I,GAAgB,EACfJ,GAAUvC,EAAO7hI,QAAUukI,EAAUvkI,SAClCskI,GAAkBzC,EAAO7hI,SACzByiI,EAASjxF,WAAW/tD,KAAKuoC,EAAIA,EAAGqpB,aAAcwsF,EAAO7hI,QACrDskI,EAAiBzC,EAAO7hI,QAE5BwkI,GAAgB,IAGhBA,GAAiB3C,EAAOI,QAAUsC,EAAUtC,SAC5CQ,EAASK,oBAAoBr/I,KAAKuoC,EAAIngC,EAAGg2I,EAAOzoI,KAAMyoI,EAAOjwI,KAAMiwI,EAAOG,WAAYH,EAAOlsF,OAAQksF,EAAO/6H,OAEnH,CACJ,CAEGzgB,KAAK88I,oBAAsBmB,GAC3B7B,EAASjxF,WAAW/tD,KAAKuoC,EAAIA,EAAGqpB,aAAchvD,KAAK88I,mBArCtD,CAVA,MAFG7B,kBAAkBt1G,EAAGy4G,kBAAmB,0DAmDhD,EAECxiJ,OAAeyiJ,wBAA0B,SAAU14G,GAChD,IAAI24G,EAAkC34G,EAAG44G,uBACzC54G,EAAG44G,uBAAyB,WACxB,IAAIh4E,EAAO+3E,EAAgClhJ,KAAK4C,OAAS,GAIzD,OAHIumE,EAAKroE,QAAQ,2BAA6B,GAC1CqoE,EAAKlqE,KAAK,2BAEPkqE,CACX,EAEA,IAAIi4E,EAAwB74G,EAAGulG,aAE/BvlG,EAAGulG,aAAe,SAAsBn2H,GACpC,IAAIvV,EAAMg/I,EAAsBphJ,KAAK4C,KAAM+U,GAC3C,OAAIvV,IAGS,4BAATuV,EACO,MAGN/U,KAAKy+I,yBACNnnJ,QAAQovB,IAAI,0CACZ1mB,KAAKy+I,uBAAyB,IAAI3C,qBAAqB97I,OAEpDA,KAAKy+I,wBAChB,CACJ,CACJ,CAjTA,G,MCFaC,UAWTniJ,YAAYoiJ,GATJ3+I,KAAwB4+I,yBAAa,CAAC,GAAI,UAAW,QAUzD5+I,KAAKgpI,IAAM2V,EAASh5G,GACpB3lC,KAAK6+I,cAAcF,EAASlT,UAC5BzrI,KAAK8+I,YAAYH,EAASlT,S,CAGtBqT,YAAYC,GAChB/+I,KAAKg/I,eAAiB,IAAIzjH,IAE1B,IAAIt9B,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAe8W,wBAC5Dj/I,KAAKg/I,eAAevkI,IAAI1I,gBAAcmtI,qBAAsBjhJ,GAE5DA,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAegX,mBACxDn/I,KAAKg/I,eAAevkI,IAAI1I,gBAAc4U,2BAA4B1oB,GAElEA,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAeyF,wBACxD5tI,KAAKg/I,eAAevkI,IAAI1I,gBAAc8T,2BAA4B5nB,GAElEA,IAAW+B,KAAKkrI,aAAa/C,iBAAegD,gCAC5CnrI,KAAKg/I,eAAevkI,IAAI1I,gBAAcqtI,oBAAqBnhJ,GAIvDA,EADA8gJ,IACU/+I,KAAKkrI,aAAa/C,iBAAekX,2BAA6Br/I,KAAKkrI,aAAa/C,iBAAemX,gCAG7Ft/I,KAAKkrI,aAAa/C,iBAAeyF,0BAA+B5tI,KAAKkrI,aAAa/C,iBAAemX,+BAAqCt/I,KAAKkrI,aAAa/C,iBAAeoX,gCAEvLv/I,KAAKg/I,eAAevkI,IAAI1I,gBAAcytI,iCAAkCvhJ,GAIpEA,EADA8gJ,IACU/+I,KAAKkrI,aAAa/C,iBAAekX,2BAA6Br/I,KAAKkrI,aAAa/C,iBAAesX,4BAI9Fz/I,KAAKkrI,aAAa/C,iBAAegX,sBAA0Bn/I,KAAKkrI,aAAa/C,iBAAesX,0BAE3Gz/I,KAAKg/I,eAAevkI,IAAI1I,gBAAc2tI,iCAAkCzhJ,GAExEA,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAeqG,qBACxDxuI,KAAKg/I,eAAevkI,IAAI1I,gBAAc4tI,0BAA2B1hJ,GACjEA,EAAQ8gJ,EACR/+I,KAAKg/I,eAAevkI,IAAI1I,gBAAc6tI,8BAA+B3hJ,GACrEA,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAe0X,yBACxD7/I,KAAKg/I,eAAevkI,IAAI1I,gBAAc+tI,WAAY7hJ,GAClDA,EAAS8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAe4X,wBACzD//I,KAAKg/I,eAAevkI,IAAI1I,gBAAciuI,qBAAsB/hJ,GAC5DA,EAAQ,KAAiB+B,KAAKkrI,aAAa/C,iBAAe8X,wBAC1DjgJ,KAAKg/I,eAAevkI,IAAI1I,gBAAcmuI,kBAAmBjiJ,GACzDA,IAAW+B,KAAKkrI,aAAa/C,iBAAe+F,+BAC5CluI,KAAKg/I,eAAevkI,IAAI1I,gBAAcgR,sBAAuB9kB,GAC7DA,IAAW+B,KAAKkrI,aAAa/C,iBAAe2F,oCAC5C9tI,KAAKg/I,eAAevkI,IAAI1I,gBAAciR,2BAA4B/kB,GAClEA,IAAW+B,KAAKkrI,aAAa/C,iBAAegY,gCAC5CngJ,KAAKg/I,eAAevkI,IAAI1I,gBAAcquI,uBAAwBniJ,GAC9DA,IAAW+B,KAAKkrI,aAAa/C,iBAAe6F,+BAC5ChuI,KAAKg/I,eAAevkI,IAAI1I,gBAAcsuI,sBAAuBpiJ,GAC7DA,IAAW+B,KAAKkrI,aAAa/C,iBAAeiG,8BAC5CpuI,KAAKg/I,eAAevkI,IAAI1I,gBAAcuuI,qBAAsBriJ,GAC5DA,IAAW+B,KAAKkrI,aAAa/C,iBAAemG,+BAC5CtuI,KAAKg/I,eAAevkI,IAAI1I,gBAAcwuI,sBAAuBtiJ,GAC7DA,EAAQ,KAAiB+B,KAAKkrI,aAAa/C,iBAAeuF,UAC1D1tI,KAAKg/I,eAAevkI,IAAI1I,gBAAc2gI,aAAcz0I,GACpDA,IAAW+B,KAAKkrI,aAAa/C,iBAAesX,0BAC5Cz/I,KAAKg/I,eAAevkI,IAAI1I,gBAAcyuI,6BAA8BviJ,GACpEA,EAAQ8gJ,KAAe/+I,KAAKkrI,aAAa/C,iBAAeoX,+BACxDv/I,KAAKg/I,eAAevkI,IAAI1I,gBAAc0uI,iCAAkCxiJ,GACxEA,EAAQ8gJ,EACR/+I,KAAKg/I,eAAevkI,IAAI1I,gBAAc2uI,KAAMziJ,GAC5C+B,KAAKg/I,eAAevkI,IAAI1I,gBAAc4uI,oBAAqB1iJ,GAC3D+B,KAAKg/I,eAAevkI,IAAI1I,gBAAc6uI,mBAAoB3iJ,GAC1D+B,KAAKg/I,eAAevkI,IAAI1I,gBAAc84H,UAAW5sI,E,CAG7C4gJ,cAAcE,GAClB/+I,KAAK6gJ,cAAgB,IAAItlH,IACzB,MAAMulH,gBAAkB,CAACC,EAA2B9iJ,EAAYokC,KAC5DpkC,GAASokC,EAAI5nB,IAAIsmI,EAAW9iJ,EAAM,EAEhC+iJ,EAA+BhhJ,KAAKihJ,cAAc,kCACxDH,gBAAgB3Y,iBAAegD,+BAAgC6V,EAA8BhhJ,KAAK6gJ,eAClG,MAAM5S,EAAyBjuI,KAAKihJ,cAAc,iCAClDH,gBAAgB3Y,iBAAe+F,8BAA+BD,EAAwBjuI,KAAK6gJ,eAC3F,MAAMhT,EAA6B7tI,KAAKihJ,cAAc,sCACtDH,gBAAgB3Y,iBAAe2F,mCAAoCD,EAA4B7tI,KAAK6gJ,eACpG,MAAMK,EAA0BlhJ,KAAKihJ,cAAc,kCACnDH,gBAAgB3Y,iBAAegY,+BAAgCe,EAAyBlhJ,KAAK6gJ,eAC7F,MAAM9S,EAAyB/tI,KAAKihJ,cAAc,iCAClDH,gBAAgB3Y,iBAAe6F,8BAA+BD,EAAwB/tI,KAAK6gJ,eAC3F,MAAM1S,EAAwBnuI,KAAKihJ,cAAc,gCACjDH,gBAAgB3Y,iBAAeiG,6BAA8BD,EAAuBnuI,KAAK6gJ,eACzF,MAAMxS,EAAyBruI,KAAKihJ,cAAc,iCAClDH,gBAAgB3Y,iBAAemG,8BAA+BD,EAAwBruI,KAAK6gJ,eAC3F,MAAMM,EAAyBnhJ,KAAKihJ,cAAc,4BAClDH,gBAAgB3Y,iBAAesX,yBAA0B0B,EAAwBnhJ,KAAK6gJ,eACtF,MAAMO,EAA2BphJ,KAAKihJ,cAAc,+BAEpD,GADAH,gBAAgB3Y,iBAAemX,4BAA6B8B,EAA0BphJ,KAAK6gJ,eACvF9B,EAAU,CACV,MAAMsC,EAAuBrhJ,KAAKihJ,cAAc,0BAChDH,gBAAgB3Y,iBAAekX,uBAAwBgC,EAAsBrhJ,KAAK6gJ,cACrF,KAAM,CAEEjlJ,OAAeyiJ,yBACfziJ,OAAeyiJ,wBAAwBr+I,KAAKgpI,KACjD,MAAMsY,EAAUthJ,KAAKihJ,cAAc,2BACnCH,gBAAgB3Y,iBAAe0X,wBAAyByB,EAASthJ,KAAK6gJ,eACtE,MAAMU,EAAwBvhJ,KAAKihJ,cAAc,0BACjDH,gBAAgB3Y,iBAAe4X,uBAAwBwB,EAAuBvhJ,KAAK6gJ,eACnF,MAAMlT,EAAuB3tI,KAAKihJ,cAAc,0BAChDH,gBAAgB3Y,iBAAeyF,uBAAwBD,EAAsB3tI,KAAK6gJ,eAClF,MAAMW,EAA6BxhJ,KAAKihJ,cAAc,iCACtDH,gBAAgB3Y,iBAAeoX,8BAA+BiC,EAA4BxhJ,KAAK6gJ,eAC/F,MAAMY,EAAmBzhJ,KAAKihJ,cAAc,qBAC5CH,gBAAgB3Y,iBAAegX,kBAAmBsC,EAAkBzhJ,KAAK6gJ,eAEzE,MAAMa,EAA0B1hJ,KAAKihJ,cAAc,0BACnDH,gBAAgB3Y,iBAAe8W,uBAAwByC,EAAyB1hJ,KAAK6gJ,eACrF,MAAMc,EAAuB3hJ,KAAKihJ,cAAc,0BAChDH,gBAAgB3Y,iBAAe8X,uBAAwB0B,EAAsB3hJ,KAAK6gJ,eAClF,MAAMtS,EAAuBvuI,KAAKihJ,cAAc,uBAChDH,gBAAgB3Y,iBAAeqG,oBAAqBD,EAAsBvuI,KAAK6gJ,eAC/E,MAAMpT,EAAQztI,KAAKihJ,cAAc,YACjCH,gBAAgB3Y,iBAAeuF,SAAUD,EAAOztI,KAAK6gJ,eAErD,MAAMe,EAA2B5hJ,KAAKihJ,cAAc,4BACpDH,gBAAgB3Y,iBAAeyZ,yBAA0BA,EAA0B5hJ,KAAK6gJ,cAC3F,C,CAGL/9H,WAAWvX,GACP,OAAOvL,KAAKg/I,eAAexjH,IAAIjwB,E,CAGnC2/H,aAAa3/H,GACT,OAAIvL,KAAK6gJ,cAAcp1I,IAAIF,GAChBvL,KAAK6gJ,cAAcrlH,IAAIjwB,GAEvB,I,CAMP01I,cAAclsI,GAClB,MAAM8sI,EAAqB7hJ,KAAK4+I,yBAChC,IAAK,MAAMj/I,KAAKkiJ,EAAU,CACtB,IAAIriJ,EAAMQ,KAAKgpI,IAAIkC,aAAa2W,EAASliJ,GAAKoV,GAC9C,GAAIvV,EACA,OAAOA,CACd,CACD,OAAO,I,QC/JFsiJ,SAITvlJ,YAAYusI,GACR9oI,KAAK+oI,QAAUD,EACf9oI,KAAKgpI,IAAMhpI,KAAK+oI,QAAQpjG,GACxB3lC,KAAK+hJ,a,CAGDA,cACJ,MAAMp8G,EAAK3lC,KAAKgpI,IAChBhpI,KAAKgiJ,cAAgB,IAAIzmH,IACzBv7B,KAAKgiJ,cAAcvnI,IAAIs7B,eAAaksG,yBAAyBt8G,EAAG02G,aAAa12G,EAAGu8G,iCAChF,MAAMC,EAA0Bx8G,EAAG02G,aAAa12G,EAAGy8G,4BAC7CC,EAAwB18G,EAAG02G,aAAa12G,EAAG28G,8BAIjD,GAHAtiJ,KAAKgiJ,cAAcvnI,IAAIs7B,eAAawsG,kBAAkBhlJ,KAAKwL,IAAIo5I,EAAiBE,IAChFriJ,KAAKgiJ,cAAcvnI,IAAIs7B,eAAaysG,iBAAiB78G,EAAG02G,aAAa12G,EAAG88G,mBACxEziJ,KAAKgiJ,cAAcvnI,IAAIs7B,eAAa2sG,uBAAuB/8G,EAAG02G,aAAa12G,EAAGg9G,0BAC3E3iJ,KAAK+oI,QAAQjmH,WAAW/Q,gBAAcqtI,qBAAqB,CAC1D,MAAMpU,EAAWhrI,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAegD,gCAC5EnrI,KAAKgiJ,cAAcvnI,IAAIs7B,eAAas1F,qBAAqB1lG,EAAG02G,aAAarR,EAAS4X,gCACrF,CACE5iJ,KAAK+oI,QAAQ0C,SACZzrI,KAAKgiJ,cAAcvnI,IAAIs7B,eAAa8sG,uBAAuB,IAE3D7iJ,KAAKgiJ,cAAcvnI,IAAIs7B,eAAa8sG,uBAAuB,IAC/D7iJ,KAAKgiJ,cAAcvnI,IAAIs7B,eAAavO,MAAM7B,EAAG6B,OAC7CxnC,KAAKgiJ,cAAcvnI,IAAIs7B,eAAauQ,cAAc3gB,EAAG2gB,eACrDtmD,KAAKgiJ,cAAcvnI,IAAIs7B,eAAa2Q,eAAe/gB,EAAG+gB,gBACtD1mD,KAAKgiJ,cAAcvnI,IAAIs7B,eAAakR,KAAKthB,EAAGshB,K,CAIhDhB,UAAU1b,GACN,OAAOvqC,KAAKgiJ,cAAcxmH,IAAI+O,E,ECrChC,MAAOu4G,0BAA0Bja,SAInCtsI,YAAYusI,GACRz2H,MAAMy2H,E,CAIV/+F,cAAcg5G,GACN/iJ,KAAK+oI,QAAQia,oBAAsBD,IACnC/iJ,KAAKgpI,IAAIj/F,cAAcg5G,GACvB/iJ,KAAK+oI,QAAQia,kBAAoBD,E,CAIzC94G,YAAY5/B,EAAgBkc,GACxBvmB,KAAK+oI,QAAQgD,aAAa1hI,EAAQkc,E,CAGtCkkB,eAAew4G,GACX,OAAGjjJ,KAAKkjJ,oBAAoBD,IAE5BjjJ,KAAKgpI,IAAIma,WAAWF,GACpBjjJ,KAAK+oI,QAAQqa,cAAgB,MACtB,E,Ef/BH/a,8CAKX,KAJGA,GAAA,yBACAA,MAAA,yCACAA,MAAA,6BACAA,MAAA,6CgBOE,MAAOgb,4BAA4Bxa,SAIrCtsI,YAAYusI,GACRz2H,MAAMy2H,GACD9oI,KAAK+oI,QAAQ0C,WACdzrI,KAAKuhJ,sBAAwBvhJ,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAe4X,wB,CAShGuD,gBAAgB3jG,GACZ,OAAQA,GACJ,KAAKohB,eAAawiF,OACd,OAAOvjJ,KAAKgpI,IAAIwa,OACpB,KAAKziF,eAAa0iF,MACd,OAAOzjJ,KAAKgpI,IAAI0a,MACpB,KAAK3iF,eAAa4iF,SACd,OAAO3jJ,KAAKgpI,IAAI4a,UACpB,KAAK7iF,eAAa8iF,UACd,OAAO7jJ,KAAKgpI,IAAI8a,WACpB,KAAK/iF,eAAaiI,UACd,OAAOhpE,KAAKgpI,IAAI+a,UACpB,KAAKhjF,eAAaijF,cACd,OAAOhkJ,KAAKgpI,IAAIib,eACpB,KAAKljF,eAAamjF,YACd,OAAOlkJ,KAAKgpI,IAAImb,a,CAS5BC,aAAa74I,GACT,OAAQA,GACJ,KAAK2qC,cAAYmuG,MACb,OAAOrkJ,KAAKgpI,IAAI1iF,cACpB,KAAKpQ,cAAYqV,OACb,OAAOvrD,KAAKgpI,IAAItiF,eACpB,KAAKxQ,cAAYouG,OACb,OAAOtkJ,KAAKgpI,IAAI4H,a,CAO5B2T,sBAAsB5kG,EAAc70C,EAAeS,EAAmBkV,EAAgB+jI,GAC9ExkJ,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAKub,sBAAsB5kG,EAAM70C,EAAOS,EAAMkV,EAAQ+jI,GAEpFxkJ,KAAKuhJ,sBAAsBkD,2BAA2B9kG,EAAM70C,EAAOS,EAAMkV,EAAQ+jI,GAErFxkJ,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBkJ,SAAU,GAC/Dh/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBoJ,iBAAkB,GACvEl/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBgJ,SAAUh0C,EAAQ,EAAI05I,E,CAO/EE,oBAAoB/kG,EAAcglG,EAAe75I,EAAe05I,GACxDxkJ,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAK0b,oBAAoB/kG,EAAMglG,EAAO75I,EAAO05I,GAE3ExkJ,KAAKuhJ,sBAAsBqD,yBAAyBjlG,EAAMglG,EAAO75I,EAAO05I,GAC5ExkJ,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBkJ,SAAU,GAC/Dh/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBoJ,iBAAkB,GACvEl/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBgJ,UAAWh0C,EAAQ,GAAK05I,E,CASjFK,WAAWllG,EAAcglG,EAAe75I,GACpC9K,KAAKgpI,IAAI6b,WAAWllG,EAAMglG,EAAO75I,GACjC9K,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBkJ,SAAU,GAC/Dh/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBgJ,SAAWh0C,EAAQ,E,CAU5Eg6I,aAAanlG,EAAc70C,EAAeS,EAAmBkV,GACzDzgB,KAAKgpI,IAAI8b,aAAanlG,EAAM70C,EAAOS,EAAMkV,GACzCzgB,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBkJ,SAAU,GAC/Dh/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBgJ,SAAUh0C,EAAQ,E,CAU3Ei+D,mBAAmBppB,EAAoB70C,EAAeS,EAAmBkV,GACrEk/B,EAAO3/C,KAAKsjJ,gBAAgB3jG,GAC5Bp0C,EAAOvL,KAAKokJ,aAAa74I,GACzBvL,KAAKgpI,IAAI8b,aAAanlG,EAAM70C,EAAOS,EAAMkV,GACzCzgB,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBkJ,SAAU,GAC/Dh/C,KAAK+oI,QAAQc,mBAAmB/zF,uBAAqBgJ,SAAUh0C,EAAQ,E,CAO3Ei6I,oBAAoBC,GAChBA,EAAgBC,YAAY96F,OAC5B,IAAIzK,EAAUslG,EAAgBE,WAAWv4G,SACrC1wC,EAAS+oJ,EAAgBE,WAAWjpJ,OACxC,OAAQ+oJ,EAAgBG,UACpB,KAAK9c,WAAS+c,UACV,IAAK,IAAI3mJ,EAAI,EAAGA,EAAIxC,EAAQwC,GAAK,EAC7BuB,KAAK6kJ,WAAWG,EAAgBK,QAAS3lG,EAAQjhD,GAAIihD,EAAQjhD,EAAI,IAErE,MACJ,KAAK4pI,WAASid,YACV,IAAK,IAAI7mJ,EAAI,EAAGA,EAAIxC,EAAQwC,GAAK,EAC7BuB,KAAK8kJ,aAAaE,EAAgBK,QAAS3lG,EAAQjhD,EAAI,GAAIumJ,EAAgBO,eAAgB7lG,EAAQjhD,IAEvG,MACJ,KAAK4pI,WAASmd,kBACV,IAAK,IAAI/mJ,EAAI,EAAGA,EAAIxC,EAAQwC,GAAK,EAC7BuB,KAAK0kJ,oBAAoBM,EAAgBK,QAAS3lG,EAAQjhD,GAAIihD,EAAQjhD,EAAI,GAAIumJ,EAAgBR,eAElG,MACJ,KAAKnc,WAASod,oBACV,IAAK,IAAIhnJ,EAAI,EAAGA,EAAIxC,EAAQwC,GAAK,EAC7BuB,KAAKukJ,sBAAsBS,EAAgBK,QAAS3lG,EAAQjhD,EAAI,GAAIumJ,EAAgBO,eAAgB7lG,EAAQjhD,GAAIumJ,EAAgBR,e,Ef5JxIv+D,iDAOX,KALAA,GAAA,iCAEAA,MAAA,uCAEAA,MAAA,iDCNWqiD,mEAiBT,KAfCA,GAAA,iBAEAA,MAAA,eAEAA,MAAA,iBAEAA,MAAA,yBAEAA,MAAA,qBAEAA,MAAA,uBAEAA,MAAA,+BAEAA,MAAA,mBChBQC,sEAiBT,KAfCA,GAAA,eAEAA,MAAA,eAEAA,MAAA,qBAEAA,MAAA,yCAEAA,MAAA,yCAEAA,MAAA,mBAEAA,MAAA,iCAEAA,MAAA,iC,McNSmd,cA2DTnpJ,YAAYusI,GAxDJ9oI,KAAU2lJ,YAAY,EAEtB3lJ,KAAU4lJ,YAAY,EAKtB5lJ,KAAY6lJ,cAAY,EAexB7lJ,KAAMs4D,QAAY,EAqBlBt4D,KAAS8lJ,WAAY,EAczB9lJ,KAAK+oI,QAAUD,EACf9oI,KAAKgpI,IAAMhpI,KAAK+oI,QAAQpjG,GACxB3lC,KAAK+lJ,Y,CAMDA,aAEO/lJ,KAAKgpI,IAChBhpI,KAAKwwB,aAAa83G,kBAAgB0d,MAClChmJ,KAAKuxB,yBAAyBqrC,wBAAsBupB,IAAKvpB,wBAAsBupB,KAC/EnmF,KAAKimJ,eAAgBrpF,wBAAsBupB,IAC3CnmF,KAAKkmJ,SAAWp8H,cAAY4J,IAC5B1zB,KAAKmmJ,SAAWr8H,cAAYiK,KAC5B/zB,KAAKomJ,cAAgBt8H,cAAY4J,IACjC1zB,KAAKqmJ,cAAgBv8H,cAAY4J,G,CAQrC4yH,gBAAgBC,GACZ,MAAM5gH,EAAK3lC,KAAKgpI,IAChB,OAAQud,GACJ,KAAKz8H,cAAYiK,KACb,OAAO4R,EAAGo4C,KACd,KAAKj0D,cAAY4J,IACb,OAAOiS,EAAGq4C,IACd,KAAKl0D,cAAY08H,YACb,OAAO7gH,EAAG8gH,UACd,KAAK38H,cAAYgK,oBACb,OAAO6R,EAAG+gH,oBACd,KAAK58H,cAAY+J,iBACb,OAAO8R,EAAGghH,UACd,KAAK78H,cAAY88H,yBACb,OAAOjhH,EAAGkhH,oBACd,KAAK/8H,cAAYkK,YACb,OAAO2R,EAAGmhH,UACd,KAAKh9H,cAAY6J,oBACb,OAAOgS,EAAGohH,oBACd,KAAKj9H,cAAY8J,iBACb,OAAO+R,EAAGqhH,UACd,KAAKl9H,cAAYm9H,yBACb,OAAOthH,EAAGuhH,oBACd,KAAKp9H,cAAYq9H,oBACb,OAAOxhH,EAAGyhH,mBACd,KAAKt9H,cAAYu9H,WACb,OAAO1hH,EAAG2hH,eACd,KAAKx9H,cAAYy9H,mBACb,OAAO5hH,EAAG6hH,yB,CAStBC,mBAAmBlB,GACf,MAAM5gH,EAAK3lC,KAAKgpI,IAChB,OAAQud,GACJ,KAAK3pF,wBAAsBupB,IACvB,OAAOxgD,EAAG+hH,SACd,KAAK9qF,wBAAsB+qF,SACvB,OAAOhiH,EAAGiiH,cACd,KAAKhrF,wBAAsBirF,iBACvB,OAAOliH,EAAGmiH,sBAKd,QACI,KAAM,c,CASlBC,sBAAsBC,GAClB,MAAMriH,EAAK3lC,KAAKgpI,IAChB,OAAQgf,GACJ,KAAK1f,kBAAgB2f,MACjB,OAAOtiH,EAAG+yG,MACd,KAAKpQ,kBAAgB0d,KACjB,OAAOrgH,EAAG0yG,KACd,KAAK/P,kBAAgB4f,MACjB,OAAOviH,EAAG4yG,MACd,KAAKjQ,kBAAgB6f,UACjB,OAAOxiH,EAAGqyG,OACd,KAAK1P,kBAAgB8f,QACjB,OAAOziH,EAAG2yG,QACd,KAAKhQ,kBAAgB+f,SACjB,OAAO1iH,EAAG6yG,SACd,KAAKlQ,kBAAgBggB,aACjB,OAAO3iH,EAAGyyG,OACd,KAAK9P,kBAAgBigB,OACjB,OAAO5iH,EAAG8yG,O,CAStB+P,uBAAuBR,GACnB,MAAMriH,EAAK3lC,KAAKgpI,IAChB,OAAQgf,GACJ,KAAKzf,mBAAiBkgB,KAClB,OAAO9iH,EAAG+iH,KACd,KAAKngB,mBAAiBx0G,KAClB,OAAO4R,EAAGo4C,KACd,KAAKwqD,mBAAiBogB,QAClB,OAAOhjH,EAAGijH,QACd,KAAKrgB,mBAAiBsgB,kBAClB,OAAOljH,EAAGmjH,KACd,KAAKvgB,mBAAiBwgB,kBAClB,OAAOpjH,EAAGqjH,KACd,KAAKzgB,mBAAiB0gB,OAClB,OAAOtjH,EAAGujH,OACd,KAAK3gB,mBAAiB4gB,cAClB,OAAOxjH,EAAGyjH,UACd,KAAK7gB,mBAAiB8gB,cAClB,OAAO1jH,EAAG2jH,U,CAStBC,sBAAsBC,GAClB,OAAIA,GAAY3sF,WAAS4pB,MACdzmF,KAAKgpI,IAAIygB,IAETzpJ,KAAKgpI,IAAI0gB,E,CAOxBp5H,aAAaryB,GACTA,IAAU+B,KAAK2lJ,aAAe3lJ,KAAK2lJ,WAAa1nJ,EAAOA,EAAQ+B,KAAKgpI,IAAIlxF,OAAO93C,KAAKgpI,IAAI2gB,YAAc3pJ,KAAKgpI,IAAI4gB,QAAQ5pJ,KAAKgpI,IAAI2gB,Y,CAMpIp5H,aAAatyB,GACTA,IAAU+B,KAAK4lJ,aAAe5lJ,KAAK4lJ,WAAa3nJ,EAAO+B,KAAKgpI,IAAI6gB,UAAU5rJ,G,CAO9EuyB,aAAavyB,GACTA,IAAU+B,KAAK8pJ,aAAe9pJ,KAAK8pJ,WAAa7rJ,EAAO+B,KAAKgpI,IAAI+gB,UAAU/pJ,KAAK+nJ,sBAAsB9pJ,I,CAQzGwyB,eAAexyB,GACXA,IAAU+B,KAAK6lJ,eAAiB7lJ,KAAK6lJ,aAAe5nJ,EAAOA,EAAQ+B,KAAKgpI,IAAIlxF,OAAO93C,KAAKgpI,IAAIghB,cAAgBhqJ,KAAKgpI,IAAI4gB,QAAQ5pJ,KAAKgpI,IAAIghB,c,CAO1It5H,eAAezyB,GACXA,IAAU+B,KAAKiqJ,eAAiBjqJ,KAAKiqJ,aAAehsJ,EAAOA,EAAQ+B,KAAKgpI,IAAIkhB,YAAY,KAAQlqJ,KAAKgpI,IAAIkhB,YAAY,G,CAMzHr5H,eAAeF,EAAaC,GACpBD,GAAO3wB,KAAKmqJ,cAAgBv5H,GAAO5wB,KAAKoqJ,cACxCpqJ,KAAKmqJ,aAAex5H,EACpB3wB,KAAKoqJ,YAAcx5H,EACnB5wB,KAAKgpI,IAAIqhB,YAAYrqJ,KAAK+nJ,sBAAsBp3H,GAAMC,EAAK,K,CAOnEK,aAAaH,EAAcC,EAAeC,GAClChxB,KAAKsqJ,iBAAmBx5H,GAAQ9wB,KAAKuqJ,kBAAoBx5H,GAAS/wB,KAAKwqJ,kBAAoBx5H,IAC3FhxB,KAAKsqJ,gBAAkBx5H,EACvB9wB,KAAKuqJ,iBAAmBx5H,EACxB/wB,KAAKwqJ,iBAAmBx5H,EACxBhxB,KAAKgpI,IAAIyhB,UAAUzqJ,KAAKwoJ,uBAAuB13H,GAAO9wB,KAAKwoJ,uBAAuBz3H,GAAQ/wB,KAAKwoJ,uBAAuBx3H,I,CAQ9HE,SAASjzB,GACLA,IAAU+B,KAAKs4D,SAAWt4D,KAAKs4D,OAASr6D,EAAOA,EAAQ+B,KAAKgpI,IAAIlxF,OAAO93C,KAAKgpI,IAAI5yF,OAASp2C,KAAKgpI,IAAI4gB,QAAQ5pJ,KAAKgpI,IAAI5yF,O,CAMvHhlB,iBAAiBD,GACTA,IAAkBnxB,KAAKimJ,iBACvBjmJ,KAAKimJ,eAAiB90H,EACtBnxB,KAAK0qJ,kBAAoB1qJ,KAAK2qJ,oBAAsB,KACpD3qJ,KAAKgpI,IAAI73G,cAAcnxB,KAAKynJ,mBAAmBt2H,I,CAOvDI,yBAAyBF,EAA0BC,GAC3CD,IAAqBrxB,KAAK0qJ,mBAAqBp5H,IAAuBtxB,KAAK2qJ,sBAC3E3qJ,KAAK0qJ,kBAAoBr5H,EACzBrxB,KAAK2qJ,oBAAsBr5H,EAC3BtxB,KAAKimJ,eAAiB,KACtBjmJ,KAAKgpI,IAAI4hB,sBAAsB5qJ,KAAKynJ,mBAAmBp2H,GAAmBrxB,KAAKynJ,mBAAmBn2H,I,CAO1GI,aAAaF,EAAiBC,EAAiBpe,GAAiB,IAExDA,GAASme,IAAYxxB,KAAKkmJ,UAAYz0H,IAAYzxB,KAAKmmJ,YACvDnmJ,KAAKkmJ,SAAW10H,EAChBxxB,KAAKmmJ,SAAW10H,EAChBzxB,KAAK6qJ,YAAc,KACnB7qJ,KAAK8qJ,YAAc,KACnB9qJ,KAAKomJ,cAAgB,KACrBpmJ,KAAKqmJ,cAAgB,KACrBrmJ,KAAKgpI,IAAI+hB,UAAU/qJ,KAAKsmJ,gBAAgB90H,GAAUxxB,KAAKsmJ,gBAAgB70H,I,CAO/EM,qBAAqBJ,EAAgBC,EAAgBC,EAAkBC,GAC/DH,IAAW3xB,KAAK6qJ,aAAej5H,IAAW5xB,KAAK8qJ,aAAej5H,IAAa7xB,KAAKomJ,eAAiBt0H,IAAa9xB,KAAKqmJ,gBACnHrmJ,KAAK6qJ,YAAcl5H,EACnB3xB,KAAK8qJ,YAAcl5H,EACnB5xB,KAAKomJ,cAAgBv0H,EACrB7xB,KAAKqmJ,cAAgBv0H,EACrB9xB,KAAKkmJ,SAAW,KAChBlmJ,KAAKmmJ,SAAW,KAChBnmJ,KAAKgpI,IAAIgiB,kBAAkBhrJ,KAAKsmJ,gBAAgB30H,GAAS3xB,KAAKsmJ,gBAAgB10H,GAAS5xB,KAAKsmJ,gBAAgBz0H,GAAW7xB,KAAKsmJ,gBAAgBx0H,I,CAQpJE,YAAY/zB,GACRA,IAAU+B,KAAK8lJ,YAAc9lJ,KAAK8lJ,UAAY7nJ,EAAOA,EAAQ+B,KAAKgpI,IAAIlxF,OAAO93C,KAAKgpI,IAAIiiB,WAAajrJ,KAAKgpI,IAAI4gB,QAAQ5pJ,KAAKgpI,IAAIiiB,W,CAMjIh5H,aAAah0B,GACTA,IAAU+B,KAAKkrJ,aAAelrJ,KAAKkrJ,WAAajtJ,EAAO+B,KAAKgpI,IAAImiB,UAAUnrJ,KAAKupJ,sBAAsBtrJ,I,CAOzGmtJ,wBAAwBrlE,GACLA,EAAI2iD,SACV99H,SAAQ,CAAC3M,EAAOmO,KACrB,OAAQA,GACJ,KAAK0wD,kBAAgBupB,UACjBrmF,KAAKswB,aAAaryB,GAClB,MACJ,KAAK6+D,kBAAgBwpB,UACjBtmF,KAAKuwB,aAAatyB,GAClB,MACJ,KAAK6+D,kBAAgBuuF,UACjBrrJ,KAAKwwB,aAAavyB,GAClB,MACJ,KAAK6+D,kBAAgBwuF,YACjBtrJ,KAAKywB,eAAexyB,GACpB,MACJ,KAAK6+D,kBAAgByuF,YACjBvrJ,KAAK0wB,eAAezyB,GACpB,MACJ,KAAK6+D,kBAAgB0uF,YACjBxrJ,KAAK6wB,eAAe5yB,EAAM,GAAIA,EAAM,IACpC,MACJ,KAAK6+D,kBAAgB2uF,UACjBzrJ,KAAKixB,aAAahzB,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC5C,MACJ,KAAK6+D,kBAAgBmpB,UACjBjmF,KAAKkxB,SAASjzB,GAASgoF,YAAUylE,eACjC,MACJ,KAAK5uF,kBAAgBopB,cACjBlmF,KAAKoxB,iBAAiBnzB,GACtB,MACJ,KAAK6+D,kBAAgBF,sBACjB58D,KAAKuxB,yBAAyBtzB,EAAM,GAAIA,EAAM,IAC9C,MACJ,KAAK6+D,kBAAgBspB,UACjBpmF,KAAK0xB,aAAazzB,EAAM,GAAIA,EAAM,IAClC,MACJ,KAAK6+D,kBAAgB6uF,kBACjB3rJ,KAAK+xB,qBAAqB9zB,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC9D,MACJ,KAAK6+D,kBAAgBypB,SACjBvmF,KAAKgyB,YAAY/zB,GACjB,MACJ,KAAK6+D,kBAAgB0pB,UACjBxmF,KAAKiyB,aAAah0B,GAClB,MACJ,QACI,KAAM,iCAEb,G,EblZDuqI,mEAaX,KAXGA,GAAA,yBAEAA,MAAA,yBAEAA,MAAA,yBAEAA,MAAA,yBAEAA,MAAA,yBAEAA,MAAA,yBAGJ,MAAMojB,GAA6B,IAAIpyI,WAAW,GAK5C,MAAOqyI,oBAAoB52I,YA2D7B1Y,YAAYwW,EAAcmC,EAAuBS,GAAkB,EAAM4N,GAAgB,EAAO8B,GAA4B,GACxHhT,MAAMU,EAAMA,EAAMmC,GAElBlV,KAAK0V,WAAauN,mBAAiB+B,KAEnChlB,KAAK4V,SAAW9L,OAAOyM,eAAegP,sBAAsBvlB,KAAK0V,WAAY3C,EAAMA,EAAMmC,EAAQS,EAAQ4N,EAAM8B,E,CAlDxGO,0BACP,OAAOimI,YAAYC,a,CAMZrmI,yBACP,OAAOomI,YAAYE,Y,CAMZpmI,0BACP,OAAOkmI,YAAYG,a,CAGZ/lI,0BACP,OAAO4lI,YAAYI,a,CAMvBj1J,kBACI,IAAI4uB,EAA4B,IAAIimI,YAAY,EAAG7hJ,gBAAc+M,QAAQ,GACrE0O,EAA2B,IAAIomI,YAAY,EAAG7hJ,gBAAc+M,QAAQ,GACpEm1I,EAA4B,IAAIL,YAAY,EAAG7hJ,gBAAc+M,QAAQ,GACrEyO,EAASomI,GACbpmI,EAAO,GAAK,EAAGA,EAAO,GAAK,EAAGA,EAAO,GAAK,EAC1CI,EAAaF,cAAc,CAACF,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAS,GAAO,GACpFI,EAAajT,MAAO,EACpB6S,EAAO,GAAK,IAAKA,EAAO,GAAK,IAAKA,EAAO,GAAK,IAC9CC,EAAYC,cAAc,CAACF,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAS,GAAO,GACnFC,EAAY9S,MAAO,EACnB6S,EAAO,GAAK,IAAKA,EAAO,GAAK,IAAKA,EAAO,GAAK,IAC9C0mI,EAAaxmI,cAAc,CAACF,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,IAAS,GAAO,GACpF0mI,EAAav5I,MAAO,EACpBk5I,YAAYE,aAAetmI,EAC3BomI,YAAYC,cAAgBlmI,EAC5BimI,YAAYG,cAAgBE,EAC5BL,YAAYI,cAAgBC,C,CAahChlI,aAAanoB,EAAgEsmB,EAA2B8C,GACpG,IAAIvB,GAAQ,EACRjnB,EAAIZ,EAAOyL,WAAUsmC,GAAU,MAALA,IAC9B,IAAU,GAANnxC,EAAS,CACT,IAAIwsJ,EAAMptJ,EAAOY,GACZZ,EAAOqtJ,OAAMt7G,GAAU,MAALA,GAAaA,EAAEzoC,OAAS8jJ,EAAI9jJ,OAASyoC,EAAExoC,QAAU6jJ,EAAI7jJ,WACxEse,GAAQ,EACf,MAEGA,GAAQ,EAEZ,IAAIL,EAAUvmB,KAAK4V,SACnB,GAAKgR,EAEA,CACD,IAAIpB,EAASomI,GACb9hJ,OAAOyM,eAAek+H,kBAAkBluH,EAAS,CAACf,EAAQA,EAAQA,EAAQA,EAAQA,EAAQA,GAASH,EAAkB8C,EACxH,MAJGre,OAAOyM,eAAey9H,iBAAiBztH,EAASxnB,EAAQsmB,EAAkB8C,E,CAOlFzC,cAAc3mB,EAA2BsmB,EAA2B8C,GAChE,IAAI5B,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAek+H,kBAAkBluH,EAASxnB,EAAQsmB,EAAkB8C,E,CAG/EkkI,oBAAoBttJ,EAA2BwpB,EAAiBC,EAAiBngB,EAAeC,EAAgBmgB,EAAqBC,EAAyBrD,EAA2B8C,GACrL,IAAI5B,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAem+H,oBAAoBnuH,EAASxnB,EAAQ0pB,EAAaC,EAAgBH,EAASC,EAASngB,EAAOC,EAAQ+c,EAAkB8C,E,CAG/IP,WAAWF,GACP,IAAInB,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAeo+H,eAAepuH,EAASmB,E,CAGlDK,WAAWF,GACP,IAAItB,EAAUvmB,KAAK4V,SACnB9L,OAAOyM,eAAew+H,eAAexuH,EAASsB,E,CAG9C7O,qBACA,OAAO6yI,YAAYpmI,W,QctId6mI,eAwBZ/vJ,cAECyD,KAAK+iJ,WAAa,C,ECbd,MAAOwJ,yBAAyB1jB,SA4BlCtsI,YAAYusI,EAAqBpnG,EAAYC,EAAY6qH,GACrDn6I,MAAMy2H,GAHV9oI,KAASksG,WAAY,EAIjBlsG,KAAKgkC,IAAMtC,EACX1hC,KAAKikC,IAAMtC,EACX3hC,KAAKysJ,cAAgBD,EACrBxsJ,KAAK0sJ,YAAc,GACnB1sJ,KAAKosB,S,CAGDA,UACJ,MAAMuZ,EAA4B3lC,KAAKgpI,IAMvC,IAAK,IAAIrpI,KALTK,KAAK4jC,SAAW+B,EAAGC,gBACnB5lC,KAAKslC,SAAWtlC,KAAK6lC,cAAcF,EAAI3lC,KAAKgkC,IAAK2B,EAAGG,eACpD9lC,KAAKulC,SAAWvlC,KAAK6lC,cAAcF,EAAI3lC,KAAKikC,IAAK0B,EAAGI,iBACpDJ,EAAGK,aAAahmC,KAAK4jC,SAAU5jC,KAAKslC,UACpCK,EAAGK,aAAahmC,KAAK4jC,SAAU5jC,KAAKulC,UACtBvlC,KAAKysJ,cACf9mH,EAAGO,mBAAmBlmC,KAAK4jC,SAAU5jC,KAAKysJ,cAAc9sJ,GAAG,GAAIA,GACnEgmC,EAAGQ,YAAYnmC,KAAK4jC,UAEpB,IADW+B,EAAGS,oBAAoBpmC,KAAK4jC,SAAU+B,EAAGU,aAC3C,CACL,IAAI6gB,EAAOvhB,EAAGW,kBAAkBtmC,KAAK4jC,UAGrC,OAFAtsC,QAAQsvB,MAAM,IAAIsC,MAAM,wCAA0Cg+B,SAClElnD,KAAKksG,WAAY,EAEpB,CAGD,MAAM3lE,EAAsBZ,EAAGS,oBAAoBpmC,KAAK4jC,SAAU+B,EAAGa,iBAIrE,IAAId,EAAqBjnC,EACzB,IAHAuB,KAAKmjJ,aACLnjJ,KAAK0jC,gBAAkB,EAElBjlC,EAAI,EAAGA,EAAI8nC,EAAa9nC,IAAK,CAC9B,IAAIkuJ,EAA+BhnH,EAAGe,iBAAiB1mC,KAAK4jC,SAAUnlC,GAClEmuJ,EAAkBD,EAAY53I,KAClC,IAAItI,EAAiCk5B,EAAGmB,mBAAmB9mC,KAAK4jC,SAAUgpH,IACrEngJ,GAAwB,GAAZA,KAEjBi5B,EAAM,IAAI4mH,eACV5mH,EAAIj5B,SAAWA,EACXmgJ,EAAQ1uJ,QAAQ,OAAS,GACzBwnC,EAAI3wB,KAAO63I,EAAUA,EAAQrtH,OAAO,EAAGqtH,EAAQ3wJ,OAAS,GACxDypC,EAAIp0B,SAAU,IAEdo0B,EAAI3wB,KAAO63I,EACXlnH,EAAIp0B,SAAU,GAElBo0B,EAAIn6B,KAAOohJ,EAAYphJ,KACvBvL,KAAK6sJ,sBAAsBnnH,GAC3B1lC,KAAK0sJ,YAAYrwJ,KAAKqpC,GACtBA,EAAIxjB,WAAaliB,KAAK+oI,QAAQ+jB,iBAAiBF,GAClD,CACD,GAAI5sJ,KAAK+oI,QAAQ0C,SAAU,CACvBzrI,KAAK+sJ,kBAAoB,GACzB,IAAIC,EAAwBrnH,EAAGS,oBAAoBpmC,KAAK4jC,SAAW+B,EAA8BsnH,uBACjG,IAAKxuJ,EAAI,EAAGA,EAAIuuJ,EAAevuJ,IAAK,CAChC,IAAIyuJ,EAAOvnH,EACX,IAAIwnH,EAA2BD,EAAIE,0BAA0BptJ,KAAK4jC,SAAUnlC,GAC5EinC,EAAM,IAAI4mH,eACV5mH,EAAI3wB,KAAOo4I,EACXznH,EAAIp0B,SAAU,EACdo0B,EAAIn6B,KAAQo6B,EAA8Bq0G,eAC1Ct0G,EAAIxjB,WAAaliB,KAAK+oI,QAAQ+jB,iBAAiBK,GAC/C,IAAI1gJ,EAAWi5B,EAAIj5B,SAAWygJ,EAAIG,qBAAqBrtJ,KAAK4jC,SAAUupH,GACtED,EAAII,oBAAoBttJ,KAAK4jC,SAAUn3B,EAAUzM,KAAK+oI,QAAQwkB,cAAcJ,IAC5EntJ,KAAK+sJ,kBAAkBrnH,EAAI3wB,MAAQ2wB,EACnC1lC,KAAK0sJ,YAAYrwJ,KAAKqpC,GACtB1lC,KAAK6sJ,sBAAsBnnH,EAC9B,CACJ,C,CAGG8nH,oBAAoBvb,GACxB,OAAoC,GAA7B10I,KAAKoyE,KAAKsiE,EAAa,G,CAM1BpsG,cAAcF,EAA2B5nC,EAAawN,GAC1D,IAAIu9B,EAAsBnD,EAAGjB,aAAan5B,GAU1C,OATAo6B,EAAGoD,aAAaD,EAAQ/qC,GACxB4nC,EAAGqD,cAAcF,GACb9oC,KAAK+oI,QAAQ0kB,qBAAuB9nH,EAAGsD,mBAAmBH,EAAQnD,EAAGuD,kBAChE3tC,QAAQE,UAGTnE,QAAQsvB,MAAM+e,EAAGwD,iBAAiBL,IAFlCxxC,QAAQC,KAAKouC,EAAGwD,iBAAiBL,KAKlCA,C,CAOH+jH,sBAAsBnnH,GAC1B,IAAIC,EAA4B3lC,KAAKgpI,IACrCtjG,EAAIvoC,OAAS6C,KACb,IAAIsR,EAAmBo0B,EAAIp0B,QAC3B,OAAQo0B,EAAIn6B,MACR,KAAKo6B,EAAGgD,KACJjD,EAAI/U,IAAM3wB,KAAKunC,WACf7B,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAG0B,IACJ3B,EAAI/U,IAAMrf,EAAUtR,KAAKsnC,YAActnC,KAAKunC,WAC5C7B,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAG6B,MACJ9B,EAAI/U,IAAMrf,EAAUtR,KAAKynC,YAAcznC,KAAK0nC,WAC5ChC,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAGgC,WACJjC,EAAI/U,IAAMrf,EAAUtR,KAAK4nC,eAAiB5nC,KAAK6nC,cAC/CnC,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAGmC,WACJpC,EAAI/U,IAAMrf,EAAUtR,KAAK+nC,eAAiB/nC,KAAKgoC,cAC/CtC,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAGsC,WACJvC,EAAI/U,IAAMrf,EAAUtR,KAAKkoC,eAAiBloC,KAAKmoC,cAC/CzC,EAAI0B,cAAgB,IAAI/1B,MAAM,GAC9B,MACJ,KAAKs0B,EAAGiD,WACJlD,EAAI/U,IAAM3wB,KAAK0tJ,kBACf,MACJ,KAAK/nH,EAAGkD,WACJnD,EAAI/U,IAAM3wB,KAAK2tJ,kBACf,MACJ,KAAKhoH,EAAG6C,WACJ9C,EAAI/U,IAAMrf,EAAUtR,KAAK0oC,kBAAoB1oC,KAAK4tJ,iBAClD,MACJ,KAAKjoH,EAAGyC,WACR,KAA8BzC,EAAIkoH,kBAC9BloH,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChCgC,EAAIq9G,UAAY/iJ,KAAK+oI,QAAQ+kB,mBAAmB9tJ,KAAK0jC,mBACrDgC,EAAI/U,IAAM3wB,KAAKqoC,mBACf,MACJ,KAA8B1C,EAAIooH,iBAC9BpoH,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChCgC,EAAIq9G,UAAY/iJ,KAAK+oI,QAAQ+kB,mBAAmB9tJ,KAAK0jC,mBACrDgC,EAAI/U,IAAM3wB,KAAKguJ,wBACf,MACJ,KAAK,MACDroH,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChCgC,EAAIq9G,UAAY/iJ,KAAK+oI,QAAQ+kB,mBAAmB9tJ,KAAK0jC,mBACrDgC,EAAI/U,IAAM3wB,KAAKiuJ,mBACf,MACJ,KAAKtoH,EAAG2C,aACJ3C,EAAGkE,UAAUnE,EAAIj5B,SAAUzM,KAAK0jC,iBAChCgC,EAAIq9G,UAAY/iJ,KAAK+oI,QAAQ+kB,mBAAmB9tJ,KAAK0jC,mBACrDgC,EAAI/U,IAAM3wB,KAAKuoC,qBACf,MACJ,KAAM5C,EAA8Bq0G,eAChCt0G,EAAI/U,IAAM3wB,KAAKkuJ,uBACf,MACJ,QACI,MAAM,IAAIhlI,MAAM,uB,CAK5BilI,gBACI,OAAOnuJ,KAAK0sJ,W,CAOhBviG,OACI,OAAOnqD,KAAKmjJ,Y,CAMhBA,aACI,OAAInjJ,KAAK+oI,QAAQqa,gBAAkBpjJ,OAEnCA,KAAKgpI,IAAIma,WAAWnjJ,KAAK4jC,UACzB5jC,KAAK+oI,QAAQqa,cAAgBpjJ,MACtB,E,CAMX0nC,WAAWhC,EAAUznC,GACjB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,GACrB+B,KAAKgpI,IAAI3/F,UAAU3D,EAAIj5B,SAAU26B,EAAc,GAAKnpC,GAC7C,GAEJ,C,CAMXwpC,YAAY/B,EAAUznC,GAClB,GAAIA,EAAMhC,OAAS,EAAG,CAClB,IAAImrC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9H+B,KAAKgpI,IAAI1/F,WAAW5D,EAAIj5B,SAAUxO,GAClCmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GAClB,GAEJ,CACV,CAEG,OADA+B,KAAKgpI,IAAI1/F,WAAW5D,EAAIj5B,SAAUxO,GAC3B,C,CAOf4pC,cAAcnC,EAAUtqB,GACpB,IAAIgsB,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOhsB,EAAElc,GAAKkoC,EAAc,KAAOhsB,EAAEjc,GACnDa,KAAKgpI,IAAIz/F,UAAU7D,EAAIj5B,SAAU26B,EAAc,GAAKhsB,EAAElc,EAAGkoC,EAAc,GAAKhsB,EAAEjc,GACvE,GAEJ,C,CAMXyoC,eAAelC,EAAUznC,GACrB,GAAIA,EAAMhC,OAAS,EAAG,CAClB,IAAImrC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9H+B,KAAKgpI,IAAIx/F,WAAW9D,EAAIj5B,SAAUxO,GAClCmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GACzBmpC,EAAc,GAAKnpC,EAAM,GAClB,GAEJ,CACV,CAEG,OADA+B,KAAKgpI,IAAIx/F,WAAW9D,EAAIj5B,SAAUxO,GAC3B,C,CAOf+pC,cAActC,EAAUtqB,GACpB,IAAIgsB,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOhsB,EAAElc,GAAKkoC,EAAc,KAAOhsB,EAAEjc,GAAKioC,EAAc,KAAOhsB,EAAE+kB,GAC/EngC,KAAKgpI,IAAIv/F,UAAU/D,EAAIj5B,SAAU26B,EAAc,GAAKhsB,EAAElc,EAAGkoC,EAAc,GAAKhsB,EAAEjc,EAAGioC,EAAc,GAAKhsB,EAAE+kB,GAC/F,GAEJ,C,CAMX4H,eAAerC,EAAUtqB,GAErB,OADApb,KAAKgpI,IAAIt/F,WAAWhE,EAAIj5B,SAAU2O,GAC3B,C,CAMX+sB,cAAczC,EAAUtqB,GACpB,IAAIgsB,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOhsB,EAAElc,GAAKkoC,EAAc,KAAOhsB,EAAEjc,GAAKioC,EAAc,KAAOhsB,EAAE+kB,GAAKiH,EAAc,KAAOhsB,EAAE6S,GAC3GjuB,KAAKgpI,IAAIr/F,UAAUjE,EAAIj5B,SAAU26B,EAAc,GAAKhsB,EAAElc,EAAGkoC,EAAc,GAAKhsB,EAAEjc,EAAGioC,EAAc,GAAKhsB,EAAE+kB,EAAGiH,EAAc,GAAKhsB,EAAE6S,GACvH,GAEJ,C,CAMXia,eAAexC,EAAUtqB,GAErB,OADApb,KAAKgpI,IAAIp/F,WAAWlE,EAAIj5B,SAAU2O,GAC3B,C,CAMXsyI,kBAAkBhoH,EAAUznC,GAExB,OADA+B,KAAKgpI,IAAIolB,iBAAiB1oH,EAAIj5B,UAAU,EAAOxO,GACxC,C,CAMX0vJ,kBAAkBjoH,EAAUznC,GAExB,OADA+B,KAAKgpI,IAAIqlB,iBAAiB3oH,EAAIj5B,UAAU,EAAOxO,GACxC,C,CAMX2vJ,iBAAiBloH,EAAUzkB,GACvB,IAAIhjB,EAAsBgjB,EAAE0rB,SAE5B,OADA3sC,KAAKgpI,IAAIvgG,iBAAiB/C,EAAIj5B,UAAU,EAAOxO,GACxC,C,CAMXyqC,kBAAkBhD,EAAUzkB,GAExB,OADAjhB,KAAKgpI,IAAIvgG,iBAAiB/C,EAAIj5B,UAAU,EAAOwU,GACxC,C,CAMXsmB,WAAW7B,EAAUznC,GACjB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,GACrB+B,KAAKgpI,IAAIn/F,UAAUnE,EAAIj5B,SAAU26B,EAAc,GAAKnpC,GAC7C,GAEJ,C,CAMXqpC,YAAY5B,EAAUznC,GAElB,OADA+B,KAAKgpI,IAAIl/F,WAAWpE,EAAIj5B,SAAUxO,GAC3B,C,CAMXqwJ,eAAe5oH,EAAUznC,GACrB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC5D+B,KAAKgpI,IAAIulB,UAAU7oH,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IAChF,GAEJ,C,CAMXuwJ,gBAAgB9oH,EAAUznC,GAEtB,OADA+B,KAAKgpI,IAAIylB,WAAW/oH,EAAIj5B,SAAUxO,GAC3B,C,CAMXywJ,eAAehpH,EAAUznC,GACrB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC7F+B,KAAKgpI,IAAI2lB,UAAUjpH,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IAC7G,GAEJ,C,CAMX2wJ,gBAAgBlpH,EAAUznC,GAEtB,OADA+B,KAAKgpI,IAAI6lB,WAAWnpH,EAAIj5B,SAAUxO,GAC3B,C,CAMX6wJ,eAAeppH,EAAUznC,GACrB,IAAImpC,EAAuB1B,EAAI0B,cAC/B,OAAIA,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAAMmpC,EAAc,KAAOnpC,EAAM,IAC9H+B,KAAKgpI,IAAI+lB,UAAUrpH,EAAIj5B,SAAU26B,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,GAAImpC,EAAc,GAAKnpC,EAAM,IAC1I,GAEJ,C,CAMX+wJ,gBAAgBtpH,EAAUznC,GAEtB,OADA+B,KAAKgpI,IAAIimB,WAAWvpH,EAAIj5B,SAAUxO,GAC3B,C,CAMXoqC,mBAAmB3C,EAAUnf,GACzB,IAAItoB,EAAasoB,EAAUA,EAAQzN,aAAeqM,UAAUc,aAAanN,aACrE6sB,EAA4B3lC,KAAKgpI,IAErC,OADAhpI,KAAK+rI,aAAarmG,EAAIq9G,UAAWp9G,EAAGuE,WAAYjsC,GACzC,C,CAGX+vJ,wBAAwBtoH,EAAUnf,GAC9B,IAAItoB,EAAasoB,EAAUA,EAAQzN,aAAeqM,UAAUc,aAAanN,aACrE6sB,EAA6B3lC,KAAKgpI,IAEtC,OADAhpI,KAAK+rI,aAAarmG,EAAIq9G,UAAWp9G,EAAG6wG,iBAAkBv4I,GAC/C,C,CAGXgwJ,mBAAmBvoH,EAAUnf,GACzB,IAAItoB,EAAasoB,EAAUA,EAAQzN,aAAeqM,UAAUc,aAAanN,aACrE6sB,EAA6B3lC,KAAKgpI,IAEtC,OADAhpI,KAAK+rI,aAAarmG,EAAIq9G,UAAWp9G,EAAG+wG,WAAYz4I,GACzC,C,CAMXsqC,qBAAqB7C,EAAUnf,GAC3B,IAAItoB,EAAasoB,EAAUA,EAAQzN,aAAe+yI,YAAY5lI,aAAanN,aACvE6sB,EAA4B3lC,KAAKgpI,IAErC,OADAhpI,KAAK+rI,aAAarmG,EAAIq9G,UAAWp9G,EAAGwE,iBAAkBlsC,GAC/C,C,CASXiwJ,uBAAuBxoH,EAAUznC,GAE7B,OADAA,EAAMixJ,yBACC,C,CAMXnjB,aAAagX,EAAmB14I,EAAgBkc,GAC5C,MAAMof,EAAK3lC,KAAKgpI,IACZhpI,KAAK+oI,QAAQia,oBAAsBD,IACnCp9G,EAAGoE,cAAcg5G,GACjB/iJ,KAAK+oI,QAAQia,kBAAoBD,GAErC,MAAMoM,EAAQnvJ,KAAK+oI,QAAQia,kBAAoBhjJ,KAAKgpI,IAAIh/F,SACpDhqC,KAAK+oI,QAAQqmB,gBAAgBD,KAAW5oI,IACxCof,EAAGsE,YAAY5/B,EAAQkc,GACvBvmB,KAAK+oI,QAAQqmB,gBAAgBD,GAAS5oI,E,CAI9CpjB,UACIkP,MAAMlP,UACN,MAAMwiC,EAAK3lC,KAAKgpI,IAChBrjG,EAAGN,aAAarlC,KAAKslC,UACrBK,EAAGN,aAAarlC,KAAKulC,UACrBI,EAAGH,cAAcxlC,KAAK4jC,UACtB5jC,KAAKslC,SAAW,KAChBtlC,KAAKulC,SAAW,KAChBvlC,KAAK4jC,SAAW,KAChB5jC,KAAKysJ,cAAgB,KACrBzsJ,KAAK0sJ,YAAc,KACnB1sJ,KAAK+sJ,kBAAoB,KACzB/sJ,KAAKgpI,IAAM,KACXhpI,KAAK+oI,QAAU,I,ECrgBjB,MAAOsmB,sBAAsBxmB,SAS/BtsI,YAAYusI,GACRz2H,MAAMy2H,GALV9oI,KAAkB4uD,mBAAwB,GAMjCk6E,EAAO2C,WACRzrI,KAAKshJ,QAAUxY,EAAOmC,kBAAkBC,aAAa/C,iBAAe0X,0BACxE7/I,KAAKwwD,KAAOxwD,KAAKsvJ,oBACjBtvJ,KAAKuhJ,sBAAwBvhJ,KAAK+oI,QAAQkC,kBAAkBC,aAAa/C,iBAAe4X,uB,CAMpFuP,oBACJ,OAAItvJ,KAAK+oI,QAAQ0C,SACmBzrI,KAAKgpI,IAAKsmB,oBAEnCtvJ,KAAKshJ,QAAQ3D,sB,CAMpB4R,oBACAvvJ,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAKumB,kBAAkBvvJ,KAAKwwD,MAE1DxwD,KAAKshJ,QAAQzD,qBAAqB79I,KAAKwwD,K,CAM/CnG,kBACQrqD,KAAK+oI,QAAQymB,oBAAsBxvJ,OAEnCA,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAK3+E,gBAAgBrqD,KAAKwwD,MAExDxwD,KAAKshJ,QAAQ5D,mBAAmB19I,KAAKwwD,MACzCxwD,KAAK+oI,QAAQymB,mBAAqBxvJ,K,CAMtCuqD,oBACQvqD,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAK3+E,gBAAgB,MAEnDrqD,KAAKshJ,QAAQ5D,mBAAmB,MACpC19I,KAAK+oI,QAAQymB,mBAAqB,I,CAMtCC,gBACQzvJ,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAKymB,cAAczvJ,KAAKwwD,MAEtDxwD,KAAKshJ,QAAQxD,iBAAiB99I,KAAKwwD,K,CAG3C9G,kBAAkBgmG,GAId,GAFA1vJ,KAAK2vJ,WACL3vJ,KAAK2pD,eAAiB+lG,EAClB1vJ,KAAK+oI,QAAQymB,oBAAsBxvJ,KAkBnC,KAAM,gDAjBNA,KAAK4uD,mBAAmB3yD,OAASyzJ,EAAazzJ,OAC9C,IAAIwC,EAAI,EACRixJ,EAAa9kJ,SAAQ80C,IACjB,IAAIkwG,EAA4BlwG,EAAQmP,kBACxC7uD,KAAK4uD,mBAAmBnwD,KAAOihD,EAAQmP,kBACvC,IAAIghG,EAAiBD,EAAOnnG,cAE5B,IAAK,IAAI9oD,KADT+/C,EAAQyK,OACM0lG,EAAW,CACrB,IAAIC,EAAchxJ,SAASa,GACvBowJ,EAAmBF,EAAUlwJ,GACjCK,KAAKgpI,IAAIsT,wBAAwBwT,GACjC9vJ,KAAKgpI,IAAIyT,oBAAoBqT,EAAKC,EAAU,GAAIA,EAAU,KAAMA,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAClGrwG,EAAQoP,gBACR9uD,KAAKgwJ,oBAAoBF,EAAK,EACrC,I,CASbH,WACI,IAAI,IAAIlxJ,EAAI,EAAE+G,EAAExF,KAAK4uD,mBAAmB3yD,OAAOwC,EAAE+G,EAAE/G,IAAI,CACnD,IACIoxJ,EAD4B7vJ,KAAK4uD,mBAAmBnwD,GAC5BgqD,cAC5B,IAAK,IAAI9oD,KAAKkwJ,EAAW,CACrB,IAAIC,EAAchxJ,SAASa,GAC3BK,KAAKgpI,IAAIuT,yBAAyBuT,EACrC,CACJ,C,CAGLjmG,iBAAiBI,GAGb,GAAmB,MAAfA,EAAJ,CAGA,GAAIjqD,KAAK+oI,QAAQymB,oBAAsBxvJ,KAMnC,KAAM,gDALFA,KAAK8pD,qBAAuBG,IAC5BA,EAAYE,OACZnqD,KAAK8pD,mBAAqBG,EAJjC,C,CAcL+lG,oBAAoBzlJ,EAAe0lJ,GAC3BjwJ,KAAK+oI,QAAQ0C,SACYzrI,KAAKgpI,IAAKgnB,oBAAoBzlJ,EAAO0lJ,GAE9DjwJ,KAAKuhJ,sBAAsB2O,yBAAyB3lJ,EAAO0lJ,E,CAOnE9sJ,UACIkP,MAAMlP,UACKnD,KAAKgpI,IAChBhpI,KAAKuvJ,oBACLvvJ,KAAKgpI,IAAM,KACXhpI,KAAK+oI,QAAU,I,QCpHVonB,YA6FT5zJ,YAAY6tH,EAAqBgmC,EAAuBloB,YAAUmoB,MAlF1DrwJ,KAAgBswJ,iBAAQ,GAExBtwJ,KAAoBuwJ,qBAAW,EAKvCvwJ,KAAUipI,WAAW,EAGrBjpI,KAAkBytJ,oBAAY,EAoCtBztJ,KAAcwwJ,eAAW,EAEzBxwJ,KAAAywJ,iBAAwC,IAAIl1H,IAE5Cv7B,KAAA0wJ,qBAA8C,IAAIn1H,IAMlDv7B,KAAe2wJ,gBAAU,IAAIvmI,MAC7BpqB,KAAe4wJ,gBAAW,EAuB1B5wJ,KAAA6wJ,kBAAuD,IAAIt1H,IAG/Dv7B,KAAK8wJ,QAAU1mC,EACfpqH,KAAK+wJ,WAAY,EAEjB/wJ,KAAKgxJ,cAAgB,IAAI1pG,QAAQ,EAAG,EAAG,EAAG,GAC1CtnD,KAAK2wJ,gBAAkB,IAAIvmI,MAAM,EAAG,EAAG,EAAG,GAC1CpqB,KAAKixJ,aAAe,IAAI3pG,QAAQ,EAAG,EAAG,EAAG,GACzCtnD,KAAKkxJ,WAAad,EAClBpwJ,KAAKmxJ,qB,CAOLxrH,SACA,OAAO3lC,KAAKkzD,Q,CAGZu4E,eACA,OAAOzrI,KAAK+wJ,S,CAGZK,kBACA,OAAOpxJ,KAAK8wJ,O,CAGRK,sBACJnxJ,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqBkJ,SAAU,GAC1Dh/C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqBoJ,iBAAkB,GAClEl/C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqBgJ,SAAU,GAC1D9+C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqByK,cAAe,GAC/DvgD,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqBuJ,eAAgB,GAChEr/C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqBqJ,UAAW,GAC3Dn/C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqByJ,oBAAqB,GACrEv/C,KAAK6wJ,kBAAkBp2I,IAAIq7B,uBAAqB2J,aAAc,E,CAQlEoqF,mBAAmB3iF,EAA4BjpD,GAC3C+B,KAAK6wJ,kBAAkBp2I,IAAIysC,EAAMlnD,KAAK6wJ,kBAAkBr1H,IAAI0rB,GAAQjpD,E,CAQxE2hD,oBAAoBsH,GAChBlnD,KAAK6wJ,kBAAkBp2I,IAAIysC,EAAM,E,CAQrCrI,kBAAkBqI,GACd,OAAOlnD,KAAK6wJ,kBAAkBr1H,IAAI0rB,E,CAQtCyzF,kBAAkBD,GACd,OAAO16I,KAAK0wJ,qBAAqBl1H,IAAIk/G,E,CAQzCE,kBAAkBF,EAAmB/gI,GACjC3Z,KAAK0wJ,qBAAqBj2I,IAAIigI,EAAW/gI,E,CAO7C03I,iBAAiB9pI,GACb,IAAIwO,EACA4P,EACJ,OAAQ3lC,KAAKkxJ,YACT,KAAKhpB,YAAUmoB,KACXt6H,EAAQ,CAAC,SAAU,sBAAuB,QAAS,sBACnD,MACJ,KAAKmyG,YAAUopB,OACXv7H,EAAQ,CAAC,QAAS,sBAClB,MACJ,KAAKmyG,YAAUqpB,OACXx7H,EAAQ,CAAC,SAAU,uBAG3B,IAAK,IAAIt3B,EAAY,EAAGA,EAAIs3B,EAAM95B,OAAQwC,IAAK,CAC3C,IACIknC,EAAKpe,EAAO6sD,WAAWr+C,EAAMt3B,GAAIuB,KAAK8wJ,QAEzC,CAAC,MAAOjwI,GACR,CACD,GAAI8kB,EAAI,CACa,WAAb5P,EAAMt3B,IAAgC,wBAAbs3B,EAAMt3B,KAC/BuB,KAAK+wJ,WAAY,GAErB,KACH,CACJ,CACD/wJ,KAAKkzD,SAAWvtB,EAGhB3lC,KAAKwxJ,qBACLxxJ,KAAKirI,kBAAoB,IAAIyT,UAAU1+I,MACvCA,KAAKyxJ,UAAY,IAAI3P,SAAS9hJ,MAC9BA,KAAKqwB,eAAiB,IAAIq1H,cAAc1lJ,MACxCA,KAAK8tJ,mBAAqB,CAACnoH,EAAGqE,SAAUrE,EAAG+rH,SAAU/rH,EAAGgsH,SAAUhsH,EAAGisH,SAAUjsH,EAAGksH,SAAUlsH,EAAGmsH,SAAUnsH,EAAGosH,SAAUpsH,EAAGqsH,SAAUrsH,EAAGssH,SAAUtsH,EAAGusH,SAAUvsH,EAAGwsH,UAAWxsH,EAAGysH,UAAWzsH,EAAG0sH,UAAW1sH,EAAG2sH,UAAW3sH,EAAG4sH,UAAW5sH,EAAG6sH,UAAW7sH,EAAG8sH,UAAW9sH,EAAG+sH,UAAW/sH,EAAGgtH,UAAWhtH,EAAGitH,UAAWjtH,EAAGktH,UAAWltH,EAAGmtH,UAAWntH,EAAGotH,UAAWptH,EAAGqtH,UAAWrtH,EAAGstH,UAAWttH,EAAGutH,UAAWvtH,EAAGwtH,UAAWxtH,EAAGytH,UAAWztH,EAAG0tH,UAAW1tH,EAAG2tH,UAAW3tH,EAAG4tH,UAAW5tH,EAAG6tH,WACtcxzJ,KAAKgjJ,kBAAoBr9G,EAAGqE,SAC5BhqC,KAAKovJ,gBAAkB,GACvBpvJ,KAAKyzJ,kBAAoBzzJ,KAAKyrI,SAAW,IAAI8K,kBAAkBv2I,MAAQ,IAAIstI,iBAAiBttI,MAC5FA,KAAK0zJ,qBAAuB,IAAIrQ,oBAAoBrjJ,MACpDA,KAAK2zJ,mBAAqB,IAAI7Q,kBAAkB9iJ,K,CAG5CwxJ,qBACJxxJ,KAAK4zJ,iBAAmB,GACxB5zJ,KAAK4zJ,iBAAiB59G,mBAAiBgZ,cAAgB,KACvDhvD,KAAK4zJ,iBAAiB59G,mBAAiBqY,sBAAwB,KAC/DruD,KAAK4zJ,iBAAiB59G,mBAAiBgkG,gBAAkB,I,CAI7DE,eAAe7vI,GACX,OAAOrK,KAAK4zJ,iBAAiBvpJ,E,CAGjC8vI,eAAe9vI,EAA0BsP,GACrC3Z,KAAK4zJ,iBAAiBvpJ,GAAUsP,C,CAQpCoyH,aAAa1hI,EAAgBkc,GACzB,MAAM4oI,EAAQnvJ,KAAKgjJ,kBAAoBhjJ,KAAKkzD,SAASlpB,SACjDhqC,KAAKovJ,gBAAgBD,KAAW5oI,IAChCvmB,KAAKkzD,SAASjpB,YAAY5/B,EAAQkc,GAClCvmB,KAAKovJ,gBAAgBD,GAAS5oI,E,CAItC0jB,YAAY1jB,GACRvmB,KAAK+rI,aAAaxlH,EAAQ3Q,SAASvL,OAAQkc,EAAQzN,a,CAGvD8vH,oBAAoB7iD,GAChB/lF,KAAKqwB,eAAe+6H,wBAAwBrlE,E,CAIhDjjE,WAAW+wI,GACP,OAAO7zJ,KAAKirI,kBAAkBnoH,WAAW+wI,E,CAG7CvlI,SAASpvB,EAAWC,EAAWkJ,EAAeC,GAG1C,MAAMq9B,EAAK3lC,KAAKkzD,SACV4gG,EAAK9zJ,KAAKgxJ,cACZz1J,QAAQI,QACRgqC,EAAGrX,SAASpvB,EAAGC,EAAGkJ,EAAOC,GAClBpJ,IAAM40J,EAAG50J,GAAKC,IAAM20J,EAAG30J,GAAKkJ,IAAUyrJ,EAAG3zH,GAAK73B,IAAWwrJ,EAAG7lI,IACnE0X,EAAGrX,SAASpvB,EAAGC,EAAGkJ,EAAOC,GACzBwrJ,EAAG7oI,SAAS/rB,EAAGC,EAAGkJ,EAAOC,G,CAIjCimB,QAAQrvB,EAAWC,EAAWkJ,EAAeC,GACzC,MAAMq9B,EAAK3lC,KAAKkzD,SACV4gG,EAAK9zJ,KAAKixJ,aACZ11J,QAAQI,QACRgqC,EAAGpX,QAAQrvB,EAAGC,EAAGkJ,EAAOC,GACjBpJ,IAAM40J,EAAG50J,GAAKC,IAAM20J,EAAG30J,GAAKkJ,IAAUyrJ,EAAG3zH,GAAK73B,IAAWwrJ,EAAG7lI,IACnE0X,EAAGpX,QAAQrvB,EAAGC,EAAGkJ,EAAOC,GACxBwrJ,EAAG7oI,SAAS/rB,EAAGC,EAAGkJ,EAAOC,G,CAIjCmpF,YAAYxzF,GACJA,EACA+B,KAAKkzD,SAASpb,OAAO93C,KAAKkzD,SAAS6gG,cAEnC/zJ,KAAKkzD,SAAS02F,QAAQ5pJ,KAAKkzD,SAAS6gG,a,CAK5CllI,mBAAmBmlI,EAA4BC,EAAoB,KAAMC,EAAqB,GAC1F,IAAIvzJ,EAEAqzJ,EAAYnqI,kBAAgBO,QACxB6pI,IAAej0J,KAAK2wJ,gBAAgBnmI,MAAMypI,KAC1Cj0J,KAAKkzD,SAASq9B,WAAW0jE,EAAW5pI,EAAG4pI,EAAW3pI,EAAG2pI,EAAWpwJ,EAAGowJ,EAAWrwJ,GAC9EqwJ,EAAWnpI,QAAQ9qB,KAAK2wJ,kBAE5BhwJ,GAAQX,KAAK2lC,GAAGuzG,kBAEhB8a,EAAYnqI,kBAAgBiF,QACxB9uB,KAAK4wJ,iBAAmBsD,IACxBl0J,KAAKkzD,SAASghG,WAAWA,GACzBl0J,KAAK4wJ,gBAAkBsD,GAE3Bl0J,KAAKqwB,eAAeE,cAAa,GACjC5vB,GAAQX,KAAKkzD,SAASimF,kBAEtB6a,EAAYnqI,kBAAgBsqI,UAC5Bn0J,KAAKkzD,SAASkhG,aAAa,GAC3Bp0J,KAAKqwB,eAAeK,gBAAe,GACnC/vB,GAAQX,KAAKkzD,SAASmhG,oBAEtB1zJ,GACAX,KAAKkzD,SAASvoD,MAAMhK,E,CAI5B2zJ,wBAAwB/tI,EAAsB+kH,EAAeipB,EAAiBC,EAAiBt1J,EAAWC,EAAWkJ,EAAeC,GAChItI,KAAK+rI,aAAaxlH,EAAQ3Q,SAASvL,OAAQkc,EAAQzN,cACnD9Y,KAAKkzD,SAASuhG,kBAAkBluI,EAAQ3Q,SAASvL,OAAQihI,EAAOipB,EAASC,EAASt1J,EAAGC,EAAGkJ,EAAOC,E,CAGnGosJ,UAAUrqI,EAAYC,EAAYzmB,EAAYD,GAC1C5D,KAAKkzD,SAASwhG,UAAUrqI,EAAGC,EAAGzmB,EAAGD,E,CAGrCqiD,UAAU1b,GACN,OAAOvqC,KAAKyxJ,UAAUxrG,UAAU1b,E,CAIpCwgB,aAAaJ,EAA8BC,GAEvC,OAAO,IAAIyuF,SAASr5I,KAAM2qD,EAAYC,E,CAG1C+pG,qBAAqBjzH,EAAYC,EAAY6qH,GAEzC,OAAO,IAAID,iBAAiBvsJ,KAAM0hC,EAAIC,EAAI6qH,E,CAG9ChjG,oBACI,OAAO,IAAI6lG,cAAcrvJ,K,CAG7ButJ,cAAcx4I,GAGV,OAFK/U,KAAKywJ,iBAAiBhlJ,IAAIsJ,IAC3B/U,KAAKywJ,iBAAiBh2I,IAAI1F,EAAM/U,KAAKwwJ,kBAClCxwJ,KAAKywJ,iBAAiBj1H,IAAIzmB,E,CAKrC6/I,oBACI,OAAO50J,KAAKyzJ,iB,CAIhBoB,iBACI,OAAO70J,KAAK0zJ,oB,CAGhBoB,qBACI,OAAO90J,KAAK2zJ,kB,CAGhBoB,4BACI,OAAO/0J,KAAKg1J,uB,CAahBlI,iBAAiB/3I,GACb,GAAmC,MAA/B/U,KAAKswJ,iBAAiBv7I,GACtB,OAAO/U,KAAKswJ,iBAAiBv7I,GAE7B,IAAInU,EAAaZ,KAAKuwJ,uBAGtB,OAFAvwJ,KAAKswJ,iBAAiBv7I,GAAQnU,EAC9BZ,KAAKswJ,iBAAiB1vJ,GAAMmU,EACrBnU,C,CAIfq0J,iBAAiBr0J,GACb,OAAOZ,KAAKswJ,iBAAiB1vJ,E,CAMjCs0J,eAAepsH,EAA0BqsH,EAAgCC,EAAwBC,GAC7FD,EAAWE,UAAYF,EAAWG,eAIlC,IAHA,IAAIrzJ,EAAYkzJ,EAAWtqF,MACvB0qF,EAAuBL,EAAeM,eACtCC,EAAqB,EAChBj3J,EAAY,EAAG+G,EAAYgwJ,EAAcv5J,OAAQwC,EAAI+G,EAAG/G,IAAK,CAClE,IAAIinC,EAA6B8vH,EAAc/2J,GAC/C,GAAI42J,IAAsC,IAAnB3vH,EAAIq9G,UAAkB,CACzC,IAAI9kJ,EAAaiE,EAAKwjC,EAAIxjB,YACb,MAATjkB,IACAy3J,GAAchwH,EAAI/U,IAAIvzB,KAAKsoC,EAAIvoC,OAAQuoC,EAAKznC,GACnD,CACJ,CACD,OAAOy3J,C,CAMXC,qBAAqB7sH,EAA0B8sH,EAAerrJ,EAAerI,GACzE4mC,EAAOqhB,OACP,IAAIurG,EAAqB,EACrBhwH,EAAsBkwH,EAAOrrJ,GAGjC,OAFIm7B,GAAe,MAARxjC,IACPwzJ,GAAchwH,EAAI/U,IAAIvzB,KAAKsoC,EAAIvoC,OAAQuoC,EAAKxjC,IACzCwzJ,C,CAGXnmI,0BACI,OAAO,IAAIk5G,kB,CAGfh+E,oBACQzqD,KAAKyrI,SACoBzrI,KAAKkzD,SAAU7I,gBAAgB,MAExDrqD,KAAKirI,kBAAkBC,aAAa/C,iBAAe0X,yBAAyBnC,mBAAmB,MACnG19I,KAAKwvJ,mBAAqB,I,QC5drBqG,eAMTt5J,YAAYusI,GAFF9oI,KAAUyS,YAAY,EAG5BzS,KAAK+oI,QAAUD,EACf9oI,KAAKgpI,IAAMhpI,KAAK+oI,QAAQpjG,GACxB3lC,KAAKK,IAAML,KAAK+oI,QAAQE,Y,CAGxB/nI,gBACA,OAAOlB,KAAKyS,U,CAOhBqjJ,qB,CAGA3yJ,UACQnD,KAAKyS,aACTzS,KAAKyS,YAAa,E,ECbpB,MAAOsjJ,+BAA+BF,eAGxCt5J,YAAYusI,EAA2BktB,GACnC3jJ,MAAMy2H,GACN9oI,KAAKi2J,QAAUD,C,CAGnBzwI,sBAAsB9P,EAA6BpN,EAAeC,EAAgB4M,EAAuBwT,EAAyBnF,GAC9H,OAAOvjB,KAAKi2J,QAAQ1wI,sBAAsB9P,EAAWpN,EAAOC,EAAQ4M,EAAQwT,EAAgBnF,E,CAGhG6E,oBAAoB7B,EAA0BxnB,EAA4DsmB,EAA2B8C,GACjInoB,KAAKi2J,QAAQ7tI,oBAAoB7B,EAAUxnB,EAAeqoB,WAAW8uI,WAAY7wI,EAAkB8C,E,CAGvGE,qBAAqB9B,EAA0BxnB,EAAyBsmB,EAA2B8C,GAC/FnoB,KAAKi2J,QAAQ5tI,qBAAqB9B,EAASxnB,EAAQsmB,EAAkB8C,E,CAGzEkrH,qBAAqB9sH,GACjBvmB,KAAKi2J,QAAQ5iB,qBAAqB9sH,E,CAGtCoC,wBAAwBpC,EAA0BxnB,EAAyB0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBngB,EAAeC,EAAgB+c,EAA2B8C,GACjNnoB,KAAKi2J,QAAQttI,wBAAwBpC,EAASxnB,EAAQ0pB,EAAaC,EAAgBH,EAASC,EAASngB,EAAOC,EAAQ+c,EAAkB8C,E,CAG1IumD,uBAAuBnoD,EAA0BxnB,EAA4DG,EAAWC,EAAWkmB,EAA2B8C,G,CAI9JsvH,sBAAsBlxH,EAA0BxnB,EAAkEgzI,EAAe1sH,EAA2B8C,GACxJnoB,KAAKi2J,QAAQxe,sBAAsBlxH,EAAUxnB,EAAiBsjC,KAAI,SAASyO,GAAK,OAAOA,EAAE1pB,UAAU,IAAI2qH,EAAO1sH,EAAkB8C,E,CAGpIyvH,uBAAuBrxH,EAA0BxnB,EAAyBgzI,EAAe1sH,EAA2B8C,GAChHnoB,KAAKi2J,QAAQre,uBAAuBrxH,EAASxnB,EAAQgzI,EAAO1sH,EAAkB8C,E,CAGlF0vH,0BAA0BtxH,EAA0BxnB,EAAyB0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBsvH,EAAiBzvI,EAAeC,EAAgBypI,EAAe1sH,EAA2B8C,GACnPnoB,KAAKi2J,QAAQpe,0BAA0BtxH,EAASxnB,EAAQ0pB,EAAaC,EAAgBH,EAASC,EAASsvH,EAASzvI,EAAOC,EAAQypI,EAAO1sH,EAAkB8C,E,CAG5Ja,kBAAkBzC,EAA0BwC,GACxC,IAAI3G,EAAa2G,EAAQgrH,eAEzB/zI,KAAKqoB,qBAAqB9B,EAASnE,GAAY,GAAO,E,CAE1DwG,kBAAkBrC,EAA0BmB,GACxC1nB,KAAKi2J,QAAQptI,kBAAkBtC,EAASmB,E,CAG5CmB,kBAAkBtC,EAA0BsB,GACxC7nB,KAAKi2J,QAAQptI,kBAAkBtC,EAASsB,E,CAE5CmsH,iBAAiBztH,EAA0B0tH,EAAiE5uH,EAA2B8C,GACnI,IAAIqsG,EAAgB,GAChBv4H,EAASg4I,EAAQh4I,OACrB,IAAK,IAAIsO,EAAQ,EAAGA,EAAQtO,EAAQsO,IAChCiqH,EAAOn4H,KAAM43I,EAAQ1pI,GAAe6c,YAExCpnB,KAAKi2J,QAAQjiB,iBAAiBztH,EAASiuG,EAAQnvG,EAAkB8C,E,CAGrEssH,kBAAkBluH,EAA0BxnB,EAA2BsmB,EAA2B8C,GAC9FnoB,KAAKi2J,QAAQxhB,kBAAkBluH,EAASxnB,EAAQsmB,EAAkB8C,E,CAEtEusH,oBAAoBnuH,EAA0BxnB,EAA2B0pB,EAAqBC,EAAyBH,EAAiBC,EAAiBngB,EAAeC,EAAgB+c,EAA2B8C,GAC/MnoB,KAAKi2J,QAAQvhB,oBAAoBnuH,EAASxnB,EAAQ0pB,EAAaC,EAAgBH,EAASC,EAASngB,EAAOC,EAAQ+c,EAAkB8C,E,CAItIwsH,eAAepuH,EAA0BmB,GACrC,MAAM,IAAIwB,MAAM,yC,CAGpB6rH,eAAexuH,EAA0BsB,GACrC,MAAM,IAAIqB,MAAM,yC,CAGpB1S,sBAAsB+P,EAA0BjQ,GAC5C,OAAOtW,KAAKi2J,QAAQz/I,sBAAsB+P,EAASjQ,E,CAGvD8X,iBAAiB4mH,GACbh1I,KAAKi2J,QAAQ7nI,iBAAiB4mH,E,CAGlC3mH,sBACIruB,KAAKi2J,QAAQ5nI,qB,CAGjBO,mBAAmBomH,GACfh1I,KAAKi2J,QAAQrnI,mBAAmBomH,E,CAGpChxD,4BAA4BvuE,EAA6BpN,EAAeC,EAAgB4M,EAA4BwT,EAAyBnF,GACzI,OAAOvjB,KAAKi2J,QAAQjyE,4BAA4BvuE,EAAWpN,EAAOC,EAAQ4M,EAAQwT,EAAgBnF,E,CAGtGwK,2BAA2B1lB,EAAeC,EAAgB06E,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GACvK,OAAOljF,KAAKi2J,QAAQloI,2BAA2B1lB,EAAOC,EAAQ06E,EAAaj3D,GAA0CnC,qBAAmB8D,KAAMhF,EAAgBnF,EAAM2/D,E,CAGxK2yD,+BAA+B9iI,EAAciwE,EAAiCj3D,EAAwCrD,EAAyBnF,EAAe2/D,GAC1J,OAAOljF,KAAKi2J,QAAQpgB,+BAA+B9iI,EAAMiwE,EAAaj3D,EAAoBrD,EAAgBnF,EAAM2/D,E,CAEpHoyD,gCAAgC7/H,EAA6B1C,EAAcmC,EAA4BwT,EAAyBnF,GAC5H,MAAM,IAAI2F,MAAM,0D,CAGpB+6D,mCAAmC+wD,EAAoCzuH,GACnEvmB,KAAKi2J,QAAQhyE,mCAAmC+wD,EAAczuH,E,CAIlE69D,0BAA0B4wD,EAAoCzsH,EAAiBC,EAAiBngB,EAAeC,EAAgBhD,GAC3H,OAAOtF,KAAKi2J,QAAQ7xE,0BAA0B4wD,EAAczsH,EAASC,EAASngB,EAAOC,EAAQhD,E,CAGjG8wI,mBAAmB7vH,EAA0B8vH,EAAyBhxH,EAA2B8C,GAC7FnoB,KAAKi2J,QAAQ7f,mBAAmB7vH,EAAU8vH,EAAcjvH,WAAW8uI,WAAY7wI,EAAkB8C,E,CAGrG4G,qBAAqB+jH,EAAmC5zI,EAAWC,EAAWkJ,EAAeC,GACzF,OAAOtI,KAAKi2J,QAAQlnI,qBAAqB+jH,EAAa5zI,EAAGC,EAAGkJ,EAAOC,E,EChIrE,MAAO6tJ,gCAAgCJ,uBAEzCx5J,YAAYusI,EAA2BktB,GACnC3jJ,MAAMy2H,EAAQktB,E,ECVhB,MAAOI,4BAA4BP,eAOrCt5J,YAAYusI,GACRz2H,MAAMy2H,GANV9oI,KAAkB4uD,mBAAwB,GAOtC5uD,KAAKonB,WAAa,IAAKxrB,OAAey6J,mBAAmBvtB,EAAO1hH,YAChEpnB,KAAKs2J,qBAAqB,E,CAG9BjsG,kBACIrqD,KAAKonB,WAAWijC,iB,CAGpBE,oBACIvqD,KAAKonB,WAAWmjC,mB,CAGpBb,kBAAkBgmG,GACd1vJ,KAAK2pD,eAAiB+lG,EACtB1vJ,KAAKs2J,qBAAqBr6J,OAAS,EACnCyzJ,EAAa9kJ,SAAS80C,IAClB1/C,KAAKs2J,qBAAqBj6J,KAAMqjD,EAAgB62G,qBAAqB,IAEzEv2J,KAAKonB,WAAWsiC,kBAAkB1pD,KAAKs2J,qB,CAG3CzsG,iBAAiBI,GAGG,MAAbA,IAGHjqD,KAAK8pD,mBAAqBG,EAC1BjqD,KAAKonB,WAAWyiC,iBAAkBI,EAAoBusG,qB,CAK1DrzJ,UACInD,KAAK2pD,eAAiB,KACtB3pD,KAAKs2J,qBAAqB,GAC1Bt2J,KAAK8pD,mBAAqB,KAC1Bz3C,MAAMlP,UACNnD,KAAKonB,WAAWjkB,S,EC/ClB,MAAOszJ,kCAAkCZ,eAE3Ct5J,YAAYusI,GACRz2H,MAAMy2H,GACN9oI,KAAKonB,WAAa,IAAKxrB,OAAe86J,yBAA0B5tB,EAAe1hH,W,CAMnFm9H,sBAAsB5kG,EAAoB70C,EAAeS,EAAmBkV,EAAgB+jI,GACxFxkJ,KAAKonB,WAAWm9H,sBAAsB5kG,EAAM70C,EAAOS,EAAMkV,EAAQ+jI,E,CAMrEE,oBAAoB/kG,EAAoBglG,EAAe75I,EAAe05I,GAClExkJ,KAAKonB,WAAWs9H,oBAAoB/kG,EAAMglG,EAAO75I,EAAO05I,E,CAM5DK,WAAWllG,EAAoBglG,EAAe75I,GAC1C9K,KAAKonB,WAAWy9H,WAAWllG,EAAMglG,EAAO75I,E,CAM5Cg6I,aAAanlG,EAAoB70C,EAAeS,EAAmBkV,GAC/DzgB,KAAKonB,WAAW09H,aAAanlG,EAAM70C,EAAOS,EAAMkV,E,CAGpDsoD,mBAAmBppB,EAAoB70C,EAAeS,EAAmBkV,G,CAOzEskI,oBAAoBC,GAChBhlJ,KAAKonB,WAAW29H,oBAAqBC,EAAwB59H,W,EC1C/D,MAAOuvI,iCAAiCluB,mBAE1ClsI,cACI8V,QACArS,KAAKonB,WAAa,IAAKxrB,OAAeg7J,uB,CAG1C5wE,OAAO2iD,EAA4B1qI,GAC/B,OAAQ0qI,GACJ,KAAK7rE,kBAAgBupB,UACrB,KAAKvpB,kBAAgBwpB,UACrB,KAAKxpB,kBAAgBuuF,UACrB,KAAKvuF,kBAAgBwuF,YACrB,KAAKxuF,kBAAgByuF,YACrB,KAAKzuF,kBAAgBopB,cACrB,KAAKppB,kBAAgBypB,SACrB,KAAKzpB,kBAAgB0pB,UACjBxmF,KAAKonB,WAAWyvI,WAAWluB,EAAa1qI,GACxC,MACJ,KAAK6+D,kBAAgB0uF,YACrB,KAAK1uF,kBAAgBspB,UACrB,KAAKtpB,kBAAgBF,sBACjB58D,KAAKonB,WAAW0vI,WAAWnuB,EAAa1qI,EAAM,GAAIA,EAAM,IACxD,MACJ,KAAK6+D,kBAAgB2uF,UACjBzrJ,KAAKonB,WAAW2vI,WAAWpuB,EAAa1qI,EAAM,GAAGA,EAAM,GAAIA,EAAM,IACjE,MACJ,KAAK6+D,kBAAgBmpB,UACjBjmF,KAAKonB,WAAWyvI,WAAWluB,EAAa1qI,GAASgoF,YAAUylE,cAAgB,EAAI,GAC/E,MACJ,KAAK5uF,kBAAgB6uF,kBACjB3rJ,KAAKonB,WAAW4vI,WAAWruB,EAAa1qI,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAC5E,MACJ,QACI,KAAM,iC,CAKlByoF,WACI58E,OAAO+Y,aAAa+lH,oBAAoB5oI,K,CAG5C2K,QACI3K,KAAKonB,WAAWzc,O,QCtBXssJ,kBAuBX16J,YAAY6tH,EAAqBgmC,EAAuBloB,YAAUmoB,MAhBlErwJ,KAAkBytJ,oBAAY,EAiB5BztJ,KAAKonB,WAAa,IAAKxrB,OAAes7J,iBAAiB9G,E,CAGzD7gI,0BACE,OAAO,IAAIonI,wB,CAEbpJ,cAAcx4I,GACZ,OAAO/U,KAAKonB,WAAWmmI,cAAcx4I,E,CAGvC80H,mBAAmB3iF,EAA4BjpD,GAC7C+B,KAAKonB,WAAW+vI,kBAAkBjwG,EAAMjpD,E,CAO1C2hD,oBAAoBsH,GAClBlnD,KAAKonB,WAAWw4B,oBAAoBsH,E,CAQtCrI,kBAAkBqI,GAChB,OAAOlnD,KAAKonB,WAAWy3B,kBAAkBqI,E,CAMvCvhB,SACF,OAAO3lC,KAAKkzD,Q,CAGVu4E,eACF,OAAOzrI,KAAKonB,WAAWqkH,Q,CAGrB2lB,kBACF,OAAOpxJ,KAAK8wJ,O,CAOdO,iBAAiB9pI,GACfvnB,KAAKonB,WAAWiqI,mBAChBrxJ,KAAK0zJ,qBAAuB,IAAI+C,0BAA0Bz2J,MAEtDA,KAAKyrI,SACPzrI,KAAKyzJ,kBAAoB,IAAI0C,wBAAwBn2J,KAAM,IAAKpE,OAAew7J,uBAAuBp3J,KAAKonB,aAG3GpnB,KAAKyzJ,kBAAoB,IAAIsC,uBAAuB/1J,KAAM,IAAKpE,OAAey7J,sBAAsBr3J,KAAKonB,Y,CAI7G6iB,YAAY1jB,GACV,MAAM,IAAI2C,MAAM,0B,CAGlB0/G,oBAAoB7iD,GAClB/lF,KAAKonB,WAAWgkI,wBAAyBrlE,EAAY3+D,W,CAIvDtE,WAAW+wI,GACT,OAAO7zJ,KAAKonB,WAAWtE,WAAW+wI,E,CAGpCvlI,SAASpvB,EAAWC,EAAWkJ,EAAeC,GAC5CtI,KAAKonB,WAAWkH,SAASpvB,EAAGC,EAAGkJ,EAAOC,E,CAGxCimB,QAAQrvB,EAAWC,EAAWkJ,EAAeC,GAC3CtI,KAAKonB,WAAWmH,QAAQrvB,EAAGC,EAAGkJ,EAAOC,E,CAGvCmpF,YAAYxzF,GACV+B,KAAKonB,WAAWqqE,YAAYxzF,E,CAG9B4wB,mBAAmBmlI,EAA4BC,EAAoB,KAAMC,EAAqB,GACxFD,EACFj0J,KAAKonB,WAAWyH,mBAAmBmlI,GAAW,EAAMC,EAAW5pI,EAAG4pI,EAAW3pI,EAAG2pI,EAAWpwJ,EAAGowJ,EAAWrwJ,EAAGswJ,GAE5Gl0J,KAAKonB,WAAWyH,mBAAmBmlI,GAAW,EAAO5pI,MAAMwB,MAAMvB,EAAGD,MAAMwB,MAAMtB,EAAGF,MAAMwB,MAAM/nB,EAAGumB,MAAMwB,MAAMhoB,EAAGswJ,E,CAGrHI,wBAAwB/tI,EAAsB+kH,EAAeipB,EAAiBC,EAAiBt1J,EAAWC,EAAWkJ,EAAeC,GAClItI,KAAKonB,WAAWktI,wBAAwB/tI,EAAQ3Q,SAAU01H,EAAOipB,EAASC,EAASt1J,EAAGC,EAAGkJ,EAAOC,E,CAGlGosJ,UAAUrqI,EAAYC,EAAYzmB,EAAYD,GAC5C5D,KAAKonB,WAAWstI,UAAUrqI,EAAGC,EAAGzmB,EAAGD,E,CAGrCqiD,UAAU1b,GACR,OAAOvqC,KAAKonB,WAAW6+B,UAAU1b,E,CAInCwgB,aAAaJ,EAA8BC,GAEzC,OAAO,IAAKhvD,OAAe07J,cAAct3J,KAAKonB,WAAYujC,EAAYC,E,CAGxE+pG,qBAAqBjzH,EAAYC,EAAY6qH,GAC3C,MAAM,IAAItjI,MAAM,0B,CAGlBsgC,oBACE,OAAO,IAAI4sG,oBAAoBp2J,K,CAGjC40J,oBACE,OAAO50J,KAAKyzJ,iB,CAIdoB,iBACE,OAAO70J,KAAK0zJ,oB,CAGdoB,qBACE,OAAO90J,KAAK2zJ,kB,CAGdoB,4BACE,OAAO/0J,KAAKg1J,uB,CAGdlI,iBAAiB/3I,GACf,OAAO/U,KAAKonB,WAAW0lI,iBAAiB/3I,E,CAG1CkgJ,iBAAiBr0J,GACf,MAAM,IAAIsoB,MAAM,0B,CAGlBgsI,eAAepsH,EAA+BqsH,EAAgCC,EAAiBC,GAC7F,MAAM,IAAInsI,MAAM,0B,CAElBysI,qBAAqB7sH,EAA+B8sH,EAAerrJ,EAAerI,GAChF,MAAM,IAAIgnB,MAAM,0B,CAElBuhC,oBACEzqD,KAAKonB,WAAWqjC,mBAAqBzqD,KAAKonB,WAAWqjC,mB,QCxL5C8sG,OA2CTh7J,YAAY8L,EAAeC,EAAgBkvJ,GA5BnCx3J,KAAMy3J,QAAG,EAETz3J,KAAQ03J,SAAG,EA6EX13J,KAAO23J,QAAW,EAlDtBJ,OAAOK,QAAU53J,KACjBu3J,OAAOM,YAAcL,EACrB,IAAIz4J,EAA4Bw4J,OAAOM,YAAY94J,OAEnDA,EAAO6B,GAAK,aACZ7B,EAAOsJ,MAAQA,EACftJ,EAAOuJ,OAASA,EACZ/M,QAAQI,SACR67C,SAAS0B,KAAKS,YAAY56C,GAG9BiB,KAAK+4D,WAAWw+F,OAAOM,YAAaxvJ,EAAOC,GAC3C1M,OAAO+8C,uBAKP,SAASwF,KAAK25G,GAEC9vB,YAAY7rF,MAGnBsiC,EAAGg5E,SAEHh5E,EAAGi5E,SAAWn6J,KAAKgd,MAAMu9I,EAAQC,GAAQA,EACzCt5E,EAAGg5E,QAAS,GAGhBK,GAASr5E,EAAGi5E,SAEZ,IAAIM,EAAMz6J,KAAKgd,MAAMu9I,EAAQC,IAElBC,EAAMT,OAAOU,QACb,GAAK18J,QAAQI,UAAYlE,OAAOkB,eAEvC4+J,OAAOU,QAAUD,EACjBn9J,MAAMS,MAAM48J,SAIVX,OAAOY,8BAAkCZ,OAAOa,cAClDb,OAAOY,6BAA6BZ,OAAOa,eAG3Cx8J,OAAO+8C,sBAAsBwF,K,IA/BrC,IAAIsgC,EAAKz+E,KACOgoI,YAAY7rF,MAC5B,IAAIk8G,EAAM5gK,OAAOG,IACbmgK,EAAOR,OAAOQ,KAAO,IAAOM,EA8BhCx9J,MAAMS,MAAMmW,GAAG,mBAAoBzR,KAAMA,KAAKs4J,oB,CAlElDthK,mCAAmCiH,EAAYs6J,GAC3ChB,OAAOY,6BAA+Bl6J,EACtCs5J,OAAOa,cAAgBG,C,CAIhBC,8BAAmB1vB,GAC1ByuB,OAAOkB,cAAgB3vB,C,CAEhB0vB,gCACP,OAAOjB,OAAOkB,a,CA+DVH,sBACCz9J,MAAMS,MAAMo9J,aAEU,GAAhB14J,KAAK23J,SACZ/7J,OAAO+8J,cAAc34J,KAAK23J,SAF1B33J,KAAK23J,QAAU/7J,OAAOg9J,YAAY54J,KAAK64J,YAAa,I,CAY5D7hK,mBACI,OAAOugK,OAAOU,QAAUV,OAAOQ,I,CAGnCh/F,WAAWxxC,EAAoB0G,EAAWC,GACtC,IAAI4qI,EAAwB,CAAEC,QAASthK,OAAOc,UAAW6yC,MAAO3zC,OAAOS,QAAS8gK,UAAWvhK,OAAOC,YAAaY,mBAAoBb,OAAOa,mBAAoBE,sBAAuBf,OAAOe,sBAAuBu5I,MAAOt6I,OAAOU,QAAS8gK,6BAA8BxhK,OAAOW,+BAAgCC,gBAAiBZ,OAAOY,iBAGvU,MAAM+3J,EAAuB34J,OAAOE,UAAYuwI,YAAUmoB,KAAOnoB,YAAUopB,OAE3E,IAAIxoB,EACJ,GAAKyuB,OAAOiB,mBAoBR1vB,EAASyuB,OAAOiB,mBAChB1vB,EAAOuoB,iBAAiBkG,OAAOM,YAAY94J,aApB3C,GAAIxD,QAAQI,UAAaC,OAAeqzB,YAAYC,WAChD45G,EAAS,IAAImuB,kBAAkB6B,EAAU1I,GACzCtnB,EAAOuoB,iBAAiBkG,OAAOM,YAAY94J,YAG1C,CACD+pI,EAAS,IAAIqnB,YAAY2I,EAAU1I,GACnCtnB,EAAOuoB,iBAAiBkG,OAAOM,YAAY94J,QAC3C,IAAI4mC,EAA4BtW,mBAAmB+V,YAAc0jG,EAAO51E,SAGxE,GAFIz7D,OAAOgB,iBACPuH,KAAKk5J,kBAAkBvzH,IACtBA,EACD,OAAO,CAId,CAOL77B,OAAO+Y,aAAeimH,EAGtBh/H,OAAOyM,eAAiBuyH,EAAO8rB,oBAC/B9qJ,OAAOg/D,kBAAoBggE,EAAO+rB,iBAClC/qJ,OAAOw6B,gBAAkBwkG,EAAOgsB,qBAGhCvtI,EAAOxU,KAAKkb,EAAGC,GACf43B,oBAAoBjK,WACpB9gD,QAAQ8gD,WACRgI,WAAWhI,WAEX,IAAIphB,EAAe,IAAI1/B,QAYvB,OAXAA,QAAQo+J,cAAgB1+H,EACxBA,EAAIgrD,QAAS,EACb8xE,OAAOrkG,SAAWz4B,EAClBlT,EAAOy0E,YAAYvhE,GAGnBxE,gBAAgB4lB,WAChB5Q,QAAQ4Q,WACR0lB,SAAS1lB,WACTtpB,UAAU6mI,UAEH,C,CAIHF,kBAAkBvzH,GACtB,IAAI0zH,EAAiC,GACrC,IAAK,MAAMjtJ,KAAOu5B,EACQ,mBAAXA,EAAGv5B,IAA6B,YAAPA,GAA4B,6BAAPA,GAA6C,aAAPA,IAC3FitJ,EAAOjtJ,GAAOu5B,EAAGv5B,GACjBu5B,EAAGv5B,GAAO,WACN,IAAI/N,EAAoB,GACxB,IAAK,IAAII,EAAI,EAAGA,EAAIkT,UAAU1V,OAAQwC,IAClCJ,EAAIhC,KAAKsV,UAAUlT,IAEvB,IAAIY,EAASg6J,EAAOjtJ,GAAK4hC,MAAMrI,EAAItnC,GAGzBsnC,EAAGq2G,WAKb,OAAO38I,CACX,E,CAMJw5J,YAAYh4I,EAAS,MACzBhmB,MAAMS,MAAM48J,O,CAIL1wI,qBACP,OAAO+vI,OAAOrkG,Q,CAIP3rC,oBACP,OAAOgwI,OAAOM,YAAY94J,M,EAtMfw4J,OAAOU,QAAG,EAOVV,OAAAQ,KAAO,IAAO,GCH3B,MAAOp+B,cAAcpC,KA+DvBh7H,cACI8V,QAfMrS,KAAUs5J,YAAY,EACtBt5J,KAASu5J,WAAY,EAGrBv5J,KAASw5J,UAAW,EAEtBx5J,KAAKy5J,MAAW,OAUpB9/B,MAAM+/B,WAAc7+J,MAAMG,QAAQ6+C,OAASh/C,MAAMG,QAAQY,OAAOuyB,KAAOtzB,MAAMG,QAAQY,OAAOmgJ,KAC5F/7I,KAAKoV,OAAS,IACdpV,KAAKqV,QAAU,GAEfrV,KAAKonI,WAAY,EACjBpnI,KAAKq5C,SAAWk+E,KAAKgL,OACrBviI,KAAKu/H,aAAe,UAEpBv/H,KAAKyR,GAAGvG,MAAM0B,WAAY5M,KAAMA,KAAK25J,cACrC35J,KAAKyR,GAAGvG,MAAMqD,UAAWvO,KAAMA,KAAK45J,a,CAIxC5iK,kBAII,GAHA2iI,MAAMkgC,sBAGFh/J,MAAMG,QAAQ4+C,SAAU,CACxB,IAAIkgH,GAAkB,GAClBj/J,MAAMG,QAAQ6/C,YAAchgD,MAAMG,QAAQ8/C,cAAgBjgD,MAAMG,QAAQggD,cAAgBngD,MAAMG,QAAQsgD,cAAgBzgD,MAAMG,QAAQqgD,cAAgBxgD,MAAMG,QAAQugD,kBAAoB1gD,MAAMG,QAAQigD,cAAgBpgD,MAAMG,QAAQkgD,cAAgBrgD,MAAMG,QAAQmgD,cAAgBtgD,MAAMG,QAAQogD,cAAgBvgD,MAAMG,QAAQwgD,gBAC5Ts+G,GAAS,GAEbvC,OAAOhwI,OAAOi9G,iBAAiB7K,MAAM+/B,WAAcI,EAAS,WAAa,QAAW,WAAYngC,MAAMogC,kBACzG,C,CAIG/iK,yBAAyB6pB,GAExB8iH,aAAakB,iBAEDlL,MAAMqgC,aAGjBhzB,O,CAGFhwI,6BACJ2iI,MAAMsgC,WAAWtgC,MAAMz0D,KAAOrqE,MAAMG,QAAQ0+C,cAAc,aAC1DigF,MAAMsgC,WAAWtgC,MAAMugC,MAAQr/J,MAAMG,QAAQ0+C,cAAc,UAE3DigF,MAAMwgC,eAAiBt/J,MAAMG,QAAQ0+C,cAAc,OACnDigF,MAAMwgC,eAAehhH,MAAMg7B,SAAW,WACtCwlD,MAAMwgC,eAAehhH,MAAMihH,OAAS,MACpCv/J,MAAMG,QAAQ+hD,UAAUpD,YAAYggF,MAAMwgC,gBACzCxgC,MAAMwgC,eAAuBE,OAAS,SAAUn7J,EAAWC,GACxDw6H,MAAMwgC,eAAehhH,MAAMse,KAAOv4D,EAAI,KACtCy6H,MAAMwgC,eAAehhH,MAAMhrB,IAAMhvB,EAAI,IACzC,C,CAGInI,kBAAkBkjK,GACtB,IAAI/gH,EAAQ+gH,EAAM/gH,MAClBA,EAAMmhH,QAAU,qJAChBnhH,EAAMohH,OAAS,OACfphH,EAAMqhH,gBAAkB,cACxBrhH,EAAMshH,OAAS,OACfthH,EAAMuhH,QAAU,OAChBvhH,EAAMihH,OAAS,IAEfF,EAAM11B,iBAAiB,QAAS7K,MAAMghC,mBAEtCT,EAAM11B,iBAAiB,YAAa7K,MAAMihC,WAAY,CAAEh2B,SAAS,IACjEs1B,EAAM11B,iBAAiB,YAAa7K,MAAMihC,WAAY,CAAEh2B,SAAS,IACjEs1B,EAAM11B,iBAAiB,YAAa7K,MAAMihC,WAAY,CAAEh2B,SAAS,IAEhEs1B,EAAcW,YAAc,SAAUC,GAA0BZ,EAAM/gH,MAAM4hH,WAAaD,CAAS,EAC7Fv/J,QAAQI,UAAYg+H,MAAMqhC,mBAC3Bd,EAAcpnH,SAAW,SAAUj1C,GAAuBq8J,EAAM/gH,MAAMt7C,MAAQA,CAAM,EACpFq8J,EAAce,YAAc,SAAUvmC,GAA0BwlC,EAAM/gH,MAAMu7E,SAAWA,EAAW,IAAK,E,CAIxG19H,yBAAyB6pB,GAC7B,IAAIq5I,EAAgBvgC,MAAMqgC,aAAqB3vJ,OAC/C,GAAK6vJ,EAAL,CAEA,IAAIj8J,EAAQ07H,MAAMqgC,aAAa/7J,MAG3Bi8J,EAAMgB,mBAENj9J,EAAQA,EAAMwiC,QAAQ,eAAgB,IAElCy5H,EAAMgB,iBAAiBz9G,KAAKx/C,KAC5BA,EAAQA,EAAMwiC,QAAQy5H,EAAMgB,iBAAkB,IAC9CvhC,MAAMqgC,aAAa/7J,MAAQA,IAItB,MAATA,IAAeA,EAAQ,IAC3Bi8J,EAAMtoF,MAAQ3zE,EACdi8J,EAAM/oJ,MAAMjG,MAAM2D,MAjBN,C,CAoBR7X,kBAAkB6pB,GACR,aAAVA,EAAEtV,MACFsV,EAAE4jH,iBACN5jH,EAAElV,iBAAmBkV,EAAElV,iB,CAQ3BwvJ,aAAal6B,EAAoBt5B,GAC7B3nG,KAAKgnI,OAAQ,EACbrN,MAAMqgC,aAAaoB,eAAiBn6B,EACpCtH,MAAMqgC,aAAaqB,aAAe1zD,C,CAIlCy/B,gBACA,OAAOpnI,KAAKs5J,U,CAGZlyB,cAAUnpI,GACV+B,KAAKs5J,WAAar7J,EAClB+B,KAAKg3H,OAAS/4H,EAAQ,MAAQ,Q,CAM9BkpI,kBACA,OAAOnnI,KAAKs5J,WAAa3/B,MAAMz0D,KAAOy0D,MAAMugC,K,CAGxCN,aAAa/4I,EAAW,MAC5B7gB,KAAKgnI,OAAQ,C,CAGT2yB,aAAa94I,GACjB7gB,KAAKgnI,OAAQ,C,CAKTs0B,sBACJ,IAAItB,EAAeh6J,KAAKmnI,YACpB7wE,EAAYu5C,YAAYuB,6BAA6BpxG,KAAMA,KAAK+7H,SAAS,GAAI/7H,KAAK+7H,SAAS,IAC3Fw/B,EAAWv7J,KAAKoV,OAASpV,KAAK+7H,SAAS,GAAK/7H,KAAK+7H,SAAS,GAC1Dy/B,EAAWx7J,KAAKqV,QAAUrV,KAAK+7H,SAAS,GAAK/7H,KAAK+7H,SAAS,GAC3DxgI,QAAQI,UAAYg+H,MAAMqhC,kBACzBhB,EAAqByB,SAASnlG,EAAU8D,OAAQ9D,EAAU+D,QAC1D2/F,EAAqB0B,QAAQH,EAAUC,GACvCxB,EAAqBK,OAAO/jG,EAAUp3D,EAAGo3D,EAAUn3D,KAEpDw6H,MAAMwgC,eAAehhH,MAAMmd,UAAYqjE,MAAMwgC,eAAehhH,MAAMk4D,gBAAkB,SAAW/6C,EAAU8D,OAAS,IAAM9D,EAAU+D,OAAS,YAAex/D,MAAMS,MAAkB,aAAI,OACtL0+J,EAAa7gH,MAAM9wC,MAAQkzJ,EAAW,KACtCvB,EAAa7gH,MAAM7wC,OAASkzJ,EAAW,KACvC7hC,MAAMwgC,eAAehhH,MAAMse,KAAOnB,EAAUp3D,EAAI,KAChDy6H,MAAMwgC,eAAehhH,MAAMhrB,IAAMmoC,EAAUn3D,EAAI,K,CAKvDw8J,SACI37J,KAAKmnI,YAAYw0B,Q,CAMjB30B,YACA,OAAOhnI,KAAK47J,M,CAKZ50B,UAAM/oI,GACN,IAAIi8J,EAAQl6J,KAAKmnI,YAEbnnI,KAAK47J,SAAW39J,IACZA,GACKi8J,EAAc7vJ,OACd6vJ,EAAc7vJ,OAAOwxJ,YAEtB77J,KAAK87J,mBAET5B,EAAQl6J,KAAKmnI,aACE98H,OAASrK,KACxBA,KAAK+7J,aAEJ7B,EAAc7vJ,OAAS,KACxBrK,KAAK67J,YACLhhK,MAAMG,QAAQw8C,SAAS0B,KAAK8iH,UAAY,EACxC9B,EAAM+B,OAEF1gK,QAAQI,UAAYg+H,MAAMqhC,iBAAmBd,EAAcG,QAAQ,KAAQ,KACtE1gC,MAAMwgC,eAAezxJ,SAASwxJ,IAAQvgC,MAAMwgC,eAAel+G,YAAYi+G,I,CAKpF4B,kBACJniC,MAAMugC,MAAMgC,eAAkBviC,MAAMwgC,eAAel+G,YAAY09E,MAAMugC,OACrEvgC,MAAMz0D,KAAKg3F,eAAkBviC,MAAMwgC,eAAel+G,YAAY09E,MAAMz0D,MAKhErqE,MAAMG,QAAQi/C,YACd0/E,MAAMugC,MAAQvgC,MAAMqgC,aAAen/J,MAAMG,QAAQ0+C,cAAc,SAC/DigF,MAAMsgC,WAAWtgC,MAAMugC,QAG3BvgC,MAAMqgC,aAAgBh6J,KAAKs5J,WAAa3/B,MAAMz0D,KAAOy0D,MAAMugC,MAC3DvgC,MAAMwgC,eAAexgH,YAAYggF,MAAMqgC,cACnCziC,KAAK4L,cACLxJ,MAAMqgC,aAAa7gH,MAAMgjH,UAAY,M,CAIrCJ,WACJp4B,aAAakB,iBAAkB,EAC/B,IAAIq1B,EAAQl6J,KAAKmnI,YAEjBxN,MAAMugC,QAAUvgC,MAAMugC,MAAM3uJ,KAAOvL,KAAKy5J,OAExCz5J,KAAK47J,QAAS,EAEd,IAAIQ,EAAWlC,EAAM/gH,MACrBijH,EAASC,WAAcr8J,KAAKm9H,SAAW,WAAa,SACpDn9H,KAAKs8J,kBAELpC,EAAMqC,UAAYv8J,KAAKu5J,UACnBh+J,QAAQI,UAAYg+H,MAAMqhC,mBACzBd,EAAcsC,QAAQx8J,KAAKy5J,OAC3BS,EAAcuC,eAAez8J,KAAKu5J,YAEvCW,EAAMwC,UAAY18J,KAAKw5J,WAAa,EAAI,IAAMx5J,KAAKw5J,UAEnDU,EAAMj8J,MAAQ+B,KAAK4xE,MACnBsoF,EAAMyC,YAAc38J,KAAK07H,QAEzB7gI,MAAMS,MAAMsW,IAAI1G,MAAM4C,SAAU9N,KAAMA,KAAK48J,YAC3C/hK,MAAMS,MAAMmW,GAAGvG,MAAM4C,SAAU9N,KAAMA,KAAK48J,YAC1C/hK,MAAMS,MAAM0rI,MAAQhnI,KACpBA,KAAKmR,MAAMjG,MAAMoE,OAGbzU,MAAMG,QAAQ0/C,MAAMw/G,EAAMlzB,QAGxBzrI,QAAQI,SAAWg+H,MAAMqhC,kBAAsBngK,MAAMG,QAAQ6/C,YAAehgD,MAAMG,QAAQ8/C,cAAiBjgD,MAAMG,QAAQggD,cAAiBngD,MAAMG,QAAQsgD,cAAiBzgD,MAAMG,QAAQqgD,cAAiBxgD,MAAMG,QAAQugD,kBAAqB1gD,MAAMG,QAAQigD,cAAiBpgD,MAAMG,QAAQkgD,cAAiBrgD,MAAMG,QAAQmgD,cAAiBtgD,MAAMG,QAAQogD,cAAiBvgD,MAAMG,QAAQwgD,eACvXx7C,KAAK08E,SAAS/xE,OAAM,GACpB3K,KAAKu8H,SACLv8H,KAAK6+H,WAAY,GAIpBq7B,EAAcpnH,SAAS9yC,KAAKnC,OAC5Bq8J,EAAce,YAAYj7J,KAAK00H,UAC/BwlC,EAAcW,YAAY76J,KAAK88H,WAC5BvhI,QAAQI,UAAYg+H,MAAMqhC,kBACzBd,EAAc2C,cAAiB3C,EAAc2C,aAAa78J,KAAKs5J,YAEpE8C,EAAStnC,WAAc90H,KAAKi3H,QAAUj3H,KAAK00H,SAAY,KACvD0nC,EAASU,UAAa98J,KAAK62H,OAAS,SAAW,SAC/CulC,EAASW,WAAc/8J,KAAK42H,KAAO,OAAS,SAC5CwlC,EAASlnF,UAAYl1E,KAAKyrF,MAC1B2wE,EAASjnC,QAAU,MAGnBn1H,KAAKs7J,uBACA//J,QAAQI,SAAWd,MAAMG,QAAQ0/C,MAClC7/C,MAAMO,YAAY+X,UAAU,EAAGnT,KAAMA,KAAKs7J,oB,CAI1CgB,kBAEJ3iC,MAAMqjC,eAAiBniK,MAAMG,QAAQ8gD,eAAe,eAC/C69E,MAAMqjC,iBACPrjC,MAAMqjC,eAAiBniK,MAAMG,QAAQ0+C,cAAc,SACnDigF,MAAMqjC,eAAel8C,aAAa,KAAM,eACxCjmH,MAAMG,QAAQw8C,SAASylH,KAAKtjH,YAAYggF,MAAMqjC,iBAIlDrjC,MAAMqjC,eAAeE,UAAY,gFAAuFl9J,KAAKu/H,aAA5F,6DAAoLv/H,KAAKu/H,aAAzL,+DAAmRv/H,KAAKu/H,aAAxR,uEAA0Xv/H,KAAKu/H,aAAe,G,CAI3as8B,YACCl4B,aAAakB,kBACblB,aAAakE,iBACdlE,aAAakB,iBAAkB,GACnC7kI,KAAK47J,QAAS,EACd57J,KAAK6+H,WAAY,EAEjB7+H,KAAKkgC,KAAOlgC,KAAKmnI,YAAYlpI,MAC7B+B,KAAKw8H,cACLx8H,KAAK08H,UAEL7hI,MAAMS,MAAMsW,IAAI1G,MAAM4C,SAAU9N,KAAMA,KAAK48J,YAC3C/hK,MAAMS,MAAM0rI,MAAQ,KACpBhnI,KAAKmR,MAAMjG,MAAMmE,MACjBrP,KAAKmR,MAAMjG,MAAM+C,QACb1S,QAAQI,UAAYg+H,MAAMqhC,kBAAkBh7J,KAAKmnI,YAAY80B,OAEjEphK,MAAMG,QAAQ0/C,MAAQ7/C,MAAMO,YAAYuP,MAAM3K,KAAMA,KAAKs7J,qB,CAIrDsB,WAAW/7I,GACG,KAAdA,EAAExU,UAEExR,MAAMG,QAAQ4+C,WAAa55C,KAAKs5J,aAChCt5J,KAAKgnI,OAAQ,GAEjBhnI,KAAKmR,MAAMjG,MAAMiE,O,CAQzBguJ,YAAYl/J,GACRA,GAAS,GACJ+B,KAAKs5J,aACNr7J,EAAQA,EAAMwiC,QAAQ,SAAU,KACpCzgC,KAAKkgC,KAAOjiC,C,CAMZiiC,SAAKjiC,GACQ,MAATA,EACAA,EAAQ,GACgB,iBAAnB,IACLA,EAAQ,GAAKA,GAEb+B,KAAK47J,QACL57J,KAAKmnI,YAAYlpI,MAAQA,EACzB+B,KAAKmR,MAAMjG,MAAM+C,UAGZjO,KAAKs5J,aACNr7J,EAAQA,EAAMwiC,QAAQ,SAAU,KAEpCpuB,MAAM6tB,KAAOjiC,E,CAMjBiiC,WACA,OAAIlgC,KAAK47J,OACE57J,KAAKmnI,YAAYlpI,MAEjBoU,MAAM6tB,I,CAMrB+8F,UAAUh/H,GACF+B,KAAK47J,QACJ57J,KAAKmnI,YAAoBr0F,SAAS70C,GAEvCoU,MAAM4qH,UAAUh/H,E,CAMhBo/H,YAAQp/H,GACRoU,MAAMgrH,QAAUp/H,EACZ1C,QAAQI,UAAYg+H,MAAMqhC,kBACzBh7J,KAAKmnI,YAAoBi2B,WAAWn/J,E,CAGzCo/H,cACA,OAAOhrH,MAAMgrH,O,CAIbggC,eACA,OAAOr9J,KAAKs9J,S,CAGZD,aAASp/J,GACT+B,KAAKs9J,UAAYr/J,EAEbA,IACAA,EAAQ,KAAOA,EAAQ,KAGbC,QAAQ,OAAS,IACvBD,EAAQA,EAAMwiC,QAAQ,KAAM,KAEhCzgC,KAAKk7J,iBAAmB,IAAI95H,OAAOnjC,EAAO,MAE1C+B,KAAKk7J,iBAAmB,I,CAM5BqC,aAASt/J,GACT+B,KAAKu5J,UAAYt7J,EACb1C,QAAQI,UAAYg+H,MAAMqhC,kBACzBrhC,MAAMugC,MAAcuC,eAAex+J,E,CAIxCs/J,eACA,OAAOv9J,KAAKu5J,S,CAOZiE,eACA,OAAOx9J,KAAKw5J,S,CAGZgE,aAASv/J,GACT+B,KAAKw5J,UAAYv7J,C,CAMjBw/J,aACA,OAAOz9J,KAAK07H,O,CAGZ+hC,WAAOx/J,G,MACPA,GAAsB,QAAdyE,EAAA60H,KAAKqF,iBAAS,IAAAl6H,OAAA,EAAAA,EAAGzE,KAAUA,EAC/B+B,KAAK07H,SAAWz9H,IAChB+B,KAAK07H,QAAUz9H,EACf+B,KAAKw8H,c,CAOTkhC,kBACA,OAAO19J,KAAKu/H,Y,CAGZm+B,gBAAYz/J,GACR+B,KAAKu/H,cAAgBthI,IACrB+B,KAAKu/H,aAAethI,EACpB+B,KAAKw8H,c,CAsBTjxH,WACA,OAAOvL,KAAKy5J,K,CAGZluJ,SAAKtN,GACL+B,KAAKq/H,YAAwB,aAAVphI,EACnB+B,KAAKy5J,MAAQx7J,C,EA/hBV07H,MAASgkC,UAAW,OAEpBhkC,MAAaikC,cAAW,WAExBjkC,MAAUkkC,WAAW,QAErBlkC,MAAQmkC,SAAW,MAEnBnkC,MAAWokC,YAAW,SAMtBpkC,MAAUqkC,WAAW,QAErBrkC,MAASskC,UAAW,OAEpBtkC,MAAUukC,WAAW,QAErBvkC,MAASwkC,UAAW,OAEpBxkC,MAASykC,UAAW,OAEpBzkC,MAAc0kC,eAAW,WAEzB1kC,MAAoB2kC,qBAAW,iBAK/B3kC,MAAW4kC,YAAW,SAyBtB5kC,MAAU+/B,YAAY,EAEtB//B,MAAgBqhC,kBAAY,EC5FjC,MAAOwD,eAAez+J,UAWxBxD,cACI8V,QARIrS,KAAIy+J,KAAW,KACfz+J,KAAO0+J,QAAW,KAClB1+J,KAAK2+J,MAAW,KAChB3+J,KAAM4+J,OAAW,KACjB5+J,KAAQ6+J,SAAW,KACnB7+J,KAAQ8+J,SAAW,KAKvB9+J,KAAKwC,aAAc,EACnBxC,KAAKQ,WAAahG,UAAUI,e,CAGhC4I,UACIxD,KAAKy+J,KAAOz+J,KAAK0+J,QAAU1+J,KAAK2+J,MAAQ3+J,KAAK4+J,OAAS5+J,KAAK6+J,SAAW7+J,KAAK8+J,SAAW,I,CAGhFl9J,YACF5B,KAAKc,MAAMu/B,OAAQrgC,KAAKyB,WACvBzB,KAAKc,MAAM2J,KAAKS,MAAMmD,MAAOrO,KAAMA,KAAKyB,S,CAGvCK,aACN9B,KAAKc,MAAM8Q,IAAI1G,MAAMmD,MAAOrO,KAAMA,KAAKyB,UACnCzB,KAAKc,MAAMu/B,QAAQrgC,KAAKc,MAAMu/B,OAAOzuB,IAAI1G,MAAMkD,OAAQpO,KAAMA,KAAK++J,gB,CAGhEt9J,WACFzB,KAAKc,MAAMu/B,QACXrgC,KAAKc,MAAMu/B,OAAO5uB,GAAGvG,MAAMkD,OAAQpO,KAAMA,KAAK++J,iBAClD/+J,KAAKg/J,eACLh/J,KAAKi/J,c,CAMCF,kBACN,IAAIG,EAAQl/J,KAAKg/J,eACbG,EAAQn/J,KAAKi/J,gBACbC,GAASC,IAAOn/J,KAAKc,MAAMqQ,MAAMjG,MAAMkD,O,CAO/C4wJ,eACI,IAAIl+J,EAAyBd,KAAKc,MAClC,IAAKA,EAAO,OAAO,EACnB,IAAIu/B,EAA0Bv/B,EAAMu/B,OACpC,GAAIA,EACA,GAAqB,MAAjBrgC,KAAK6+J,SACL/9J,EAAM5B,EAAI3B,KAAKoB,MAA4C,IAArC0hC,EAAOh4B,MAAQvH,EAAMuyG,cAAsBrzG,KAAK6+J,SAAW/9J,EAAM4uC,OAAS5uC,EAAMs5D,aACnG,GAAkB,MAAdp6D,KAAK2+J,OAEZ,GADA79J,EAAM5B,EAAI3B,KAAKoB,MAAMqB,KAAK2+J,MAAQ79J,EAAM4uC,OAAS5uC,EAAMs5D,QACpC,MAAfp6D,KAAK4+J,OAAgB,CACrB,IAAKv+H,EAAOjrB,OAAQ,OAAO,EAE3B,IAAIvW,GAAgBwhC,EAAOjrB,OAASpV,KAAK2+J,MAAQ3+J,KAAK4+J,SAAW99J,EAAMs5D,QAAU,KACjF,GAAIv7D,GAAQiC,EAAMsU,OAEd,OADAtU,EAAMuH,MAAQxJ,GACP,CAEd,OACqB,MAAfmB,KAAK4+J,SACZ99J,EAAM5B,EAAI3B,KAAKoB,MAAM0hC,EAAOh4B,MAAQvH,EAAMuyG,aAAerzG,KAAK4+J,OAAS99J,EAAM4uC,OAAS5uC,EAAMs5D,SAGpG,OAAO,C,CAOX6kG,eACI,IAAIn+J,EAAyBd,KAAKc,MAClC,IAAKA,EAAO,OAAO,EACnB,IAAIu/B,EAA0Bv/B,EAAMu/B,OACpC,GAAIA,EACA,GAAqB,MAAjBrgC,KAAK8+J,SACLh+J,EAAM3B,EAAI5B,KAAKoB,MAA8C,IAAvC0hC,EAAO/3B,OAASxH,EAAMwyG,eAAuBtzG,KAAK8+J,SAAWh+J,EAAM6uC,OAAS7uC,EAAMu5D,aACrG,GAAiB,MAAbr6D,KAAKy+J,MAEZ,GADA39J,EAAM3B,EAAI5B,KAAKoB,MAAMqB,KAAKy+J,KAAO39J,EAAM6uC,OAAS7uC,EAAMu5D,QAClC,MAAhBr6D,KAAK0+J,QAAiB,CACtB,IAAKr+H,EAAOhrB,QAAS,OAAO,EAE5B,IAAIxW,GAAgBwhC,EAAOhrB,QAAUrV,KAAKy+J,KAAOz+J,KAAK0+J,UAAY59J,EAAMu5D,QAAU,KAClF,GAAIx7D,GAAQiC,EAAMuU,QAEd,OADAvU,EAAMwH,OAASzJ,GACR,CAEd,OACsB,MAAhBmB,KAAK0+J,UACZ59J,EAAM3B,EAAI5B,KAAKoB,MAAM0hC,EAAO/3B,OAASxH,EAAMwyG,cAAgBtzG,KAAK0+J,QAAU59J,EAAM6uC,OAAS7uC,EAAMu5D,SAGvG,OAAO,C,CAMX+kG,cACQp/J,KAAKc,QACLd,KAAKg/J,eACLh/J,KAAKi/J,e,CAKT9wI,UACA,OAAOnuB,KAAKy+J,I,CAGZtwI,QAAIlwB,GACAH,MAAMG,KACNA,EAAQ,MACR+B,KAAKy+J,MAAQxgK,IACb+B,KAAKy+J,KAAOxgK,EACZ+B,KAAKi/J,e,CAKTz2J,aACA,OAAOxI,KAAK0+J,O,CAGZl2J,WAAOvK,GACHH,MAAMG,KACNA,EAAQ,MACR+B,KAAK0+J,SAAWzgK,IAChB+B,KAAK0+J,QAAUzgK,EACf+B,KAAKi/J,e,CAKTxnG,WACA,OAAOz3D,KAAK2+J,K,CAGZlnG,SAAKx5D,GACDH,MAAMG,KACNA,EAAQ,MACR+B,KAAK2+J,OAAS1gK,IACd+B,KAAK2+J,MAAQ1gK,EACb+B,KAAKg/J,e,CAKTz2J,YACA,OAAOvI,KAAK4+J,M,CAGZr2J,UAAMtK,GACFH,MAAMG,KACNA,EAAQ,MACR+B,KAAK4+J,QAAU3gK,IACf+B,KAAK4+J,OAAS3gK,EACd+B,KAAKg/J,e,CAKTK,cACA,OAAOr/J,KAAK6+J,Q,CAGZQ,YAAQphK,GACJH,MAAMG,KACNA,EAAQ,MACR+B,KAAK6+J,UAAY5gK,IACjB+B,KAAK6+J,SAAW5gK,EAChB+B,KAAKg/J,e,CAKTM,cACA,OAAOt/J,KAAK8+J,Q,CAGZQ,YAAQrhK,GACJH,MAAMG,KACNA,EAAQ,MACR+B,KAAK8+J,UAAY7gK,IACjB+B,KAAK8+J,SAAW7gK,EAChB+B,KAAKi/J,e,EAlMNT,OAAK52J,MAAW,KAuM3B42J,OAAO52J,MAAQ,IAAI42J,OCzMnB,MAAMe,GAAmB,IAAIn3J,UACvBo3J,GAAkB,IAAI13J,M,MAMf23J,QAUT/2J,SAASxJ,EAAWC,EAAWkK,GAC3B,QAAKo2J,QAAQC,cAAcxgK,EAAGC,EAAGkK,EAAIrJ,KAAKu5D,QAElCkmG,QAAQC,cAAcxgK,EAAGC,EAAGkK,EAAIrJ,KAAKw5D,O,CAOjDxiE,qBAAqBkI,EAAWC,EAAWkK,EAAYs2J,GACnD,IAAKA,EAAS,OAAO,EACrB,IAAIz+D,EAAOy+D,EAAQz+D,KACnB,GAAmB,GAAfA,EAAKjlG,OAAa,OAAO,EAC7B,IAAIuC,EAAM0iG,EAAKjlG,OACf,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC1B,IAAIsnF,EAAMmb,EAAKziG,GACf,GAAKsnF,EAAL,CACA,GACS,cADDA,EAAImY,MAEJh/F,GAAK6mF,EAAI/hF,GACT7E,GAAK4mF,EAAI9hF,GAEjB,GAAIw7J,QAAQG,UAAU1gK,EAAGC,EAAGkK,EAAI08E,GAAM,OAAO,CANnC,CAOb,CACD,OAAO,C,CAOX/uF,iBAAiBkI,EAAWC,EAAWkK,EAAY08E,GAC/C,IAAKA,EAAK,OAAO,EACjB,IAAIhpF,GAAe,EACnB,OAAQgpF,EAAImY,OACR,IAAK,WACGnY,EAAIqY,QACJmhE,GAAMx5J,MAAMggF,EAAI7mF,EAAImK,EAAGhB,MAAO09E,EAAI5mF,EAAIkK,EAAGf,OAAQy9E,EAAI19E,MAAQgB,EAAGhB,MAAO09E,EAAIz9E,OAASe,EAAGf,QAEvFi3J,GAAMx5J,MAAMggF,EAAI7mF,EAAG6mF,EAAI5mF,EAAG4mF,EAAI19E,MAAO09E,EAAIz9E,QAC7CvL,EAAMwiK,GAAM72J,SAASxJ,EAAGC,GACxB,MACJ,IAAK,aACD,IAAIkrB,EAAI07D,EAAIqD,OAERrD,EAAIqY,SACJl/F,GAAK6mF,EAAI7mF,EAAImK,EAAGhB,MAChBlJ,GAAK4mF,EAAI5mF,EAAIkK,EAAGf,OAChB+hB,GAAKhhB,EAAGhB,QAGRnJ,GAAK6mF,EAAI7mF,EACTC,GAAK4mF,EAAI5mF,GAGbpC,EADImC,EAAIA,EAAIC,EAAIA,EACNkrB,EAAIA,EACd,MACJ,IAAK,WACDnrB,GAAK6mF,EAAI7mF,EACTC,GAAK4mF,EAAI5mF,EACTpC,EAAM0iK,QAAQI,aAAa3gK,EAAGC,EAAG4mF,EAAI9mF,QAG7C,OAAOlC,C,CAOX/F,oBAAoBkI,EAAWC,EAAW2gK,GACtC,IAAI9wH,EAAWwwH,GACfxwH,EAAEjpC,MAAM7G,EAAGC,GAEX,IACIqjE,EAAaC,EAAaC,EAAaC,EACvCnkE,EAFAuhK,EAAiB,EAGrBvhK,EAAMshK,EAAW7jK,OACjB,IAAK,IAAIwC,EAAY,EAAGA,EAAID,EAAKC,GAAK,EAAG,CAOrC,GANA+jE,EAAMs9F,EAAWrhK,GACjBgkE,EAAMq9F,EAAWrhK,EAAI,GACrBikE,EAAMo9F,GAAYrhK,EAAI,GAAKD,GAIvBikE,IAHJE,EAAMm9F,GAAYrhK,EAAI,GAAKD,IAI3B,KAAIwwC,EAAE7vC,EAAI5B,KAAKwL,IAAI05D,EAAKE,IACxB,KAAI3zB,EAAE7vC,GAAK5B,KAAKuL,IAAI25D,EAAKE,KAEP3zB,EAAE7vC,EAAIsjE,IAAQC,EAAMF,IAAQG,EAAMF,GAAOD,EAElDxzB,EAAE9vC,GAAG6gK,GACjB,CAED,OAAQA,EAAS,GAAK,C,CAMtBC,UAEA,OADKhgK,KAAKu5D,OAAMv5D,KAAKu5D,KAAO,IAAI2qC,UACzBlkG,KAAKu5D,I,CAGZymG,QAAI/hK,GACJ+B,KAAKu5D,KAAOt7D,C,CAMZgiK,YAEA,OADKjgK,KAAKw5D,SAAQx5D,KAAKw5D,OAAS,IAAI0qC,UAC7BlkG,KAAKw5D,M,CAGZymG,UAAMhiK,GACN+B,KAAKw5D,OAASv7D,C,CAGlBk2C,qBACQ54C,QAAQE,YACEuE,KAAMkgK,WACZlgK,KAAKggK,IAAI9+D,KAAalhG,KAAMkgK,gBACflgK,KAAMkgK,UAGblgK,KAAMmgK,aACZngK,KAAKigK,MAAM/+D,KAAalhG,KAAMmgK,kBACjBngK,KAAMmgK,Y,EAMnCppK,WAAWwnG,SAAS,UAAWkhE,S,MCxJlBW,WA4BT7jK,cACIyD,KAAKqgK,KAAO,GACZD,WAAWE,MAAMjkK,KAAK2D,K,CAjB1BhJ,kBACIopK,WAAWrjG,EAAI,IAAIqjG,WAGdA,WAAWG,gBAAgB1lK,MAAMO,YAAY+iD,KAAKiiH,WAAWI,YAAa,KAAMJ,WAAWK,W,CAIpGzpK,oBACI,IAAK,IAAIyH,EAAI,EAAG+G,EAAI46J,WAAWE,MAAMrkK,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC3C2hK,WAAWE,MAAM7hK,GACvB4hK,KAAO,EACd,C,CAaL5lJ,IAAIrO,EAAUnO,GACC,MAAPmO,IACAg0J,WAAWG,iBAES,iBAAhB,GAA4C,iBAAhB,EAC5BvgK,KAAKqgK,KAAKj0J,GAAcnO,GAExBmO,EAAIqgG,QAAUrgG,EAAIqgG,MAAQ/uG,MAAM4C,UAChCN,KAAKqgK,KAAKj0J,EAAIqgG,OAASxuG,I,CASnCu9B,IAAIpvB,GACA,OAAW,MAAPA,EAAoB,KACpBg0J,WAAWG,oBAAf,EAEwB,iBAAhB,GAA4C,iBAAhB,EAAiCvgK,KAAKqgK,KAAKj0J,GACpEpM,KAAKqgK,KAAKj0J,EAAIqgG,M,CAO7Bi0D,IAAIt0J,GACW,MAAPA,IACAg0J,WAAWG,iBAES,iBAAhB,GAA4C,iBAAhB,SAAiCvgK,KAAKqgK,KAAKj0J,UAC/DpM,KAAKqgK,KAAKrgK,KAAKqgK,KAAK5zD,Q,CAOxChhG,IAAIW,GACA,OAAW,MAAPA,KACAg0J,WAAWG,iBAGS,iBAAhB,GAA4C,iBAAhB,EAA0D,MAAzBvgK,KAAKqgK,KAAKj0J,GACtC,MAA9BpM,KAAKqgK,KAAKrgK,KAAKqgK,KAAK5zD,Q,EAnF5B2zD,WAAcG,gBAAG,EAEjBH,WAAAI,YAAc,IAINJ,WAAKE,MAAU,GCZ5B,MAAOK,eAAexuJ,SAOxB5V,YAAYf,GACR6W,QAEArS,KAAKxE,QAAUA,EACfwE,KAAK4gK,MAAQ,E,CAMjBl5J,OAAO2zG,EAA+BwlD,GAClC,OAAI7gK,KAAK8gK,KACEC,eAAeC,aAAa,KAAMhhK,KAAK8gK,MAEvC,I,CAGXG,WACA,OAAOjhK,KAAK4gK,K,CAGhBM,OAAO3tJ,GACCA,aAAepB,WACfoB,EAAIgB,gBACJvU,KAAK4gK,MAAMvkK,KAAKkX,IAEXhY,QAAQE,WAAc8X,aAAeotJ,QACtCptJ,EAAI9B,GAAG,WAAYzR,KAAMA,KAAKmhK,e,CAI1CC,QAAQ14C,GACJ,IAAK,IAAIn1G,KAAOm1G,EACRn1G,aAAepB,WACfoB,EAAIgB,gBACJvU,KAAK4gK,MAAMvkK,KAAKkX,IAEXhY,QAAQE,WAAc8X,aAAeotJ,QACtCptJ,EAAI9B,GAAG,WAAYzR,KAAMA,KAAKmhK,e,CAKpCxsJ,mBACN,IAAK,IAAIpB,KAAOvT,KAAK4gK,MACjBrtJ,EAAIiB,oBAECjZ,QAAQE,WAAc8X,aAAeotJ,QACtCptJ,EAAI3B,IAAI,WAAY5R,KAAMA,KAAKmhK,c,CAIhCztJ,eACP,OAAO1T,KAAK2T,S,CAGLD,aAASzV,GACZ+B,KAAK2T,WAAa1V,IAClB+B,KAAK2T,UAAY1V,EACbA,IAAU1C,QAAQE,WAClBuE,KAAKmR,MAAM,Y,CAIfgwJ,gBACJnhK,KAAK0T,UAAW,C,EAMjB,IClEH2tJ,GACAC,GDiEOC,GAAoBZ,OEnEzB,MAAOa,mBAAmBb,OAY5BpkK,YAAYklK,EAA0Bv/J,EAAW1G,GAC7C6W,MAAM7W,GAENwE,KAAKyhK,IAAMA,EACXzhK,KAAKkC,KAAOA,C,CAShBwF,OAAO2zG,EAA+BwlD,GAClC,IAAIzvJ,EAAMpR,KAAKyhK,IAAI5pF,MAAM73E,KAAKkC,KAAMm5G,EAASwlD,GAC7C,OAAIxvJ,MAAMC,QAAQF,IACI,GAAdA,EAAInV,SACJmV,EAAI,GAAG+C,IAAMnU,KAAKmU,KAEf/C,EAAI,KAGXA,EAAI+C,IAAMnU,KAAKmU,IACR/C,E,QD5BN2vJ,eAUT/pK,aAAakL,EAAWm5G,GACpB,IAAIqmD,EAAermD,aAAA,EAAAA,EAASqmD,KAC5B,IAAKA,EAAM,CACP,IAAIC,EAAmBpmK,QAAQE,WAAayG,EAAKqpG,MAAMo2D,QAAWz/J,EAAKqpG,MAAMo2D,QAAUz/J,EAAKqJ,KACxFq2J,EAAO7qK,WAAWM,SAASsqK,GAG3BD,EADyB,YAAzBx/J,EAAKqpG,MAAMznD,WACJ89G,EAAKtlK,WAAaslK,EAAKtlK,SAAW,IAAIslK,GAEtC,IAAIA,CAClB,CAED,OAAIF,GAAcA,EAAMG,aACbH,EAEJX,eAAeC,aAAaU,EAAMx/J,E,CAO7ClL,kBAAkBiH,GACd,IAAIokC,EAAM0+H,eAAee,QACpBz/H,IACDA,EAAM0+H,eAAee,QAAU,IAAI1B,YACvC,IAAIzvI,EAAgBowI,eAAee,QAAQtmI,IAAIv9B,GAC/C,GAAW,MAAP0yB,EAAa,CACb,IAAI9xB,EAAe,IAAOZ,EAAQ,IAE9BF,EAAc,iEADlBc,EAAOA,EAAK4hC,QAAQ,aAAc,IAAIA,QAAQ,OAAQ,MAAOA,QAAQ,KAAM,OACgB,mBAC3F9P,EAAO/0B,OAAeX,KAAK8mK,WAAWhkK,GACtCgjK,eAAee,QAAQrnJ,IAAIxc,EAAO0yB,EACrC,CACD,OAAOA,C,CASX35B,oBAAoB0qK,EAAcryC,GAC9B,IAAI2yC,EAAsBC,SAASv6J,SASnC,GALI,WADJg6J,EAAOX,eAAemB,WAAW7yC,EAAQqyC,EAAMA,EAAM,KAAMM,MAEjDN,EAAc,OAAIM,EAAUG,QAIlC9yC,EAAO+C,WAAY,CACnB,IAEI3zH,EACA2jK,EACA/vC,EAJAE,EAAiB,GACjBH,EAAoB/C,EAAO+C,WAChB5zH,EAAc4zH,EAAWn2H,OAGxC,IAAKwC,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAMtB,OALA2jK,EAAO,IAAI51C,eACX6F,EAAQD,EAAW3zH,GACnB2jK,EAAKv1C,OAAOm1C,EAAUG,OAAQ9vC,GACxBqvC,EAAMrvC,EAAMt9G,MAAQqtJ,EAC1BA,EAAKzoD,gBAAgB+nD,GACbrvC,EAAMplF,QACV,KAAK,EACDm1H,EAAKppD,KAAK,GAAG,GACb,MACJ,KAAK,EACDopD,EAAKppD,KAAK,GAAG,GAGrBuZ,EAAQl2H,KAAK+lK,EAChB,CACKV,EAAMW,SAAW9vC,CAC1B,CAWD,OARKmvC,aAAgBY,OAAUZ,EAAKtsJ,OAAS,GAAkC,MAA7Bi6G,EAAO9jB,MAAMwG,eAAyB2vD,EAAK7vD,eACzF6vD,EAAK3vD,cAAe,GAGxBiwD,EAAUO,SACVb,EAAKlgK,QAAQpI,UAAUI,WAAW,GAC9BkoK,EAAKrhI,QAAUqhI,EAAKrhI,OAAOr/B,mBAAqB0gK,EAAK34D,QACrD24D,EAAKz4D,gBAAe,GACjBy4D,C,CAGX1qK,wBACI,OAAOirK,SAASv6J,Q,CAUpB1Q,kBAAkBq4H,EAAa1lB,EAAe,KAAM64D,EAAe,KAAMC,EAAiB,KAAMC,EAAqB,MAEjH,KADA/4D,EAAOA,GAAQo3D,eAAe4B,gBAAgBtzC,IAM1C,OAJIA,EAAO9jB,OAAS8jB,EAAO9jB,MAAMo2D,QAC7BrqK,QAAQC,KAAK,qBAAuB83H,EAAO9jB,MAAMo2D,SAEjDrqK,QAAQC,KAAK,kBAAoB83H,EAAO9jH,MACrC,KAGX,IAAI67F,EAAeioB,EAAOjoB,MAC1B,GAAIA,EAEA,IADA,IAAIw7D,EAAkBj5D,aAAiB03D,KAAeA,GAAatqK,WAAWM,SAAS,UAC9EoH,EAAY,EAAG+G,EAAY4hG,EAAMnrG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAI8C,EAAY6lG,EAAM3oG,GACtB,KAAI,eAAgBkrG,IAA4B,UAAnBpoG,EAAKgqG,MAAMx2F,MAA8C,WAA1BxT,EAAKgqG,MAAMznD,WAGhE,GAAiB,WAAbviD,EAAKgK,KAEZvL,KAAK6iK,qBAAqBthK,EAAMooG,QAC7B,GAAI3pG,KAAK8iK,YAAYvhK,EAAKgK,MAC7BvL,KAAK+iK,oBAAoBxhK,EAAMooG,GAAM,OAClC,CACH,GAAIi5D,EAAQ,CAER,IAAIvkK,EAAa,GACb2kK,EAAcjC,eAAemB,WAAW3gK,EAAM,KAAMihK,EAAMnkK,EAAKqkK,GAC/DrkK,EAAIpC,SACJ+mK,EAAmB,WAAI3kK,EAC9B,MACG2kK,EAASjC,eAAemB,WAAW3gK,EAAM,KAAMihK,EAAMC,EAASC,GAIjD,UAAbnhK,EAAKgK,KACDy3J,aAAkBjjK,UAClB4pG,EAAKW,qBAAqB04D,GAGtB,UAAWA,EACXA,EAAc,MAAIr5D,EACX,WAAYq5D,IACnBA,EAAe,OAAIr5D,GAGK,QAAzBpoG,EAAKgqG,MAAMznD,YAA2C,QAAnBviD,EAAKgqG,MAAMx2F,KACrD40F,EAAKl1E,KAAOuuI,EAEZA,aAAkBh9D,MAAQ2D,EAAK/sB,SAASomF,EAE/C,MAlCSr5D,EAAkB,WAAIpoG,CAmCnC,CAGL,IAAIgqG,EAAa8jB,EAAO9jB,MACxB,IAAK,IAAI6B,KAAQ7B,EAAO,CACpB,IAAIttG,EAAastG,EAAM6B,GACD,iBAAlB,IAA+BnvG,EAAMC,QAAQ,WAAa,GAAKD,EAAMC,QAAQ,aAAe,GACxFwkK,GACAA,EAASO,WAAWt5D,EAAMyD,EAAcnvG,GAG5C8iK,eAAemC,aAAav5D,EAAMyD,EAAMnvG,EAAOukK,EAAMC,EAC5D,CAcD,OAZU94D,EAAMw5D,cAINx5D,EAAMw5D,eAIZ9zC,EAAOG,QAAUkzC,GAAYA,EAASP,SACtCO,EAASP,OAAO9yC,EAAOG,QAAU7lB,GAG9BA,C,CAWH3yG,oBAAoB2yG,EAAWyD,EAAcnvG,EAAYukK,EAAY,KAAMC,EAAiB,MAEhG,GAAsB,iBAAlB,GAA8BxkK,EAAMC,QAAQ,OAAS,EAAzD,CAEI,GADA6iK,eAAeqC,SAAWrC,eAAeqC,OAASrsK,WAAWM,SAAS,qBACjE0pK,eAAeqC,OAEhB,YADA9rK,QAAQC,KAAK,4BAIjB,GAAIkrK,EACAA,EAAQpmK,KAAKstG,EAAMyD,EAAMnvG,QACtB,GAAIukK,EAAM,EACe,GAAxBvkK,EAAMC,QAAQ,QAEdD,EAAQA,EAAMwiC,QAAQ,IAAK,SAE/B,IAIIiF,EAAY7mC,EAJZwkK,EAAuB,IAAIC,YAAY35D,EAAMyD,EAAMnvG,GAGvDolK,EAAQE,IAAIf,GAGZ,IADA,IAAIzkK,EAAcE,EAAMwiC,QAAQ,aAAc,KACa,OAAnDiF,EAAMq7H,eAAeyC,gBAAgB9hC,KAAK3jI,KAAe,CAE7D,IADA,IAAI0lK,EAAe/9H,EAAI,GACoC,OAAnD7mC,EAAOkiK,eAAe2C,cAAchiC,KAAK+hC,KAAgB,CAC7D,IAAIlvC,EAAe11H,EAAK,GACpBR,EAAcmkK,EAAKmB,UAAUpvC,KAAUiuC,EAAKmB,UAAUpvC,GAAQ,IAClEl2H,EAAIhC,KAAKgnK,GAETtC,eAAeqC,OAAOrmG,EAAE6mG,QAAQnyJ,GAAG8iH,EAAMiuC,EAAMA,EAAKqB,WAAY,CAACtvC,GACpE,EAEDl2H,EAAOmkK,EAAKmB,UAAUF,KAAUjB,EAAKmB,UAAUF,GAAQ,KACnDpnK,KAAKgnK,GACTtC,eAAeqC,OAAOrmG,EAAE6mG,QAAQnyJ,GAAGgyJ,EAAMjB,EAAMA,EAAKqB,WAAY,CAACJ,GACpE,CAEJ,CAEJ,KAEY,QAATr2D,GAAkBo1D,EAClBA,EAAKvkK,GAAS0rG,EAEdA,EAAKyD,GAAmB,SAAVnvG,GAAqC,UAAVA,GAA4BA,C,CAU7EjH,uBAAuB8pK,GACnB,GAAiB,UAAbA,EAAKv1J,MACDu1J,EAAKv1D,OAASu1D,EAAKv1D,MAAMu4D,SACzB,OAAO/C,eAAeC,aAAa,KAAMF,EAAKv1D,MAAMu4D,UAG5D,IAAInC,EAAkBpmK,QAAQE,WAAcqlK,EAAKv1D,OAASu1D,EAAKv1D,MAAMo2D,SAAyBb,EAAKv1J,KAC/FnU,EAAYL,WAAWM,SAASsqK,GACpC,IAAKvqK,EAAW,KAAM,sBAAwBuqK,EAC9C,GAAkB,WAAdb,EAAKv1J,MAAqBnU,EAAUgpH,UAAU2jD,SAAU,CACxD,IAAIp6D,EAAY7tG,KAAK4uG,cAActzG,GAEnC,OADAuyG,EAAKl3F,YAAa,EACXk3F,CACV,CACD,GAAIm3D,EAAKv1D,OAAS,eAAgBu1D,EAAKv1D,OAAqC,YAA5Bu1D,EAAKv1D,MAAkB,WAEnE,OADMn0G,EAA4B,WAAIA,EAA4B,SAAI,IAAIA,GAClEA,EAA4B,SAGxC,IAAIga,EAAM,IAAIha,EAGd,OAFIga,aAAgBkwJ,KAAeA,GAAavqK,WAAWM,SAAS,YAC1D+Z,EAAKxO,OAASwO,GACjBA,C,CAGJpa,4BAA4Bq4H,GAC/B,IAAI5xE,EAAO,IAAI7sC,IACXozJ,EAAsB,GAE1B,SAASC,YAAY9vJ,GACZspC,EAAKhyC,IAAI0I,KACVspC,EAAK36C,IAAIqR,GACT6vJ,EAAU3nK,KAAK8X,G,CAuBvB,GAAIk7G,EAAO60C,SACP,IAAK,IAAI/vJ,KAAOk7G,EAAO60C,SACnBD,YAAY9vJ,GAGpB,GAAIk7G,EAAO80C,WACP,IAAK,IAAIhwJ,KAAOk7G,EAAO80C,WACnBF,YAAY9vJ,GAIpB,OA9BA,SAASiwJ,MAAM/0C,GACX,IAAI9jB,EAAa8jB,EAAO9jB,MACxB,IAAK,IAAI6B,KAAQ7B,EAAO,CACpB,IAAIttG,EAAastG,EAAM6B,GACvB,GAAsB,iBAAlB,GAA8BnvG,EAAMC,QAAQ,aAAe,EAAG,CAE9D+lK,YADUhmK,EAAMwiC,QAAQ,WAAY,IAEvC,CACJ,CAED,IAAI2mE,EAAeioB,EAAOjoB,MAC1B,GAAIA,EACA,IAAK,IAAI3oG,EAAY,EAAG+G,EAAY4hG,EAAMnrG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAE1D2lK,MADgBh9D,EAAM3oG,GAEzB,C,CAcT2lK,CAAM/0C,GACC20C,C,CAoCXhtK,oBAAoB8pK,EAAWv/J,EAAY,KAAMmgK,EAAa,KAAM2C,EAAyB,KAAMC,EAA2B,MACrG,iBAAjB,IAA2BxD,EAAO5+C,KAAKrqC,MAAeipF,IAC1D,IAAIv1D,EAAau1D,EAAKv1D,MAEtB,IAAKhqG,KACDA,EAAO+iK,EAAkBA,EAAgBn5D,QAAQ21D,GAAQ/pK,WAAWw/F,YAAYh7F,QAAQE,WAAa8vG,EAAMo2D,SAAwBb,EAAKv1J,OAC7H,OAAO,KAGtB,IAAI67F,EAAe05D,EAAK15D,MACxB,GAAIA,EACA,IAAK,IAAI3oG,EAAY,EAAG+G,EAAY4hG,EAAMnrG,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC1D,IAAIyD,EAAYklG,EAAM3oG,GACtB,GAAyB,WAApByD,EAAKqpG,MAAMx2F,MAA+C,WAA1B7S,EAAKqpG,MAAMznD,aAA4BviD,EAAuB,iBAG/F,GAAiB,WAAbW,EAAKqJ,KACLvL,KAAK6iK,qBAAqB3gK,EAAMX,QAC7B,GAAIvB,KAAK8iK,YAAY5gK,EAAKqJ,MAC7BvL,KAAK+iK,oBAAoB7gK,EAAMX,GAAM,OAClC,CACH,IAAIyhK,EAAchjK,KAAKukK,aAAariK,EAAM,KAAMw/J,EAAM2C,EAAeC,GACnD,WAAdpiK,EAAKqJ,KACD,UAAWy3J,EACXA,EAAc,MAAIzhK,EACX,WAAYyhK,IACnBA,EAAe,OAAIzhK,GAES,QAAzBW,EAAKqpG,MAAMznD,WAClBviD,EAAKkzB,KAAOuuI,EAEZzhK,EAAKq7E,SAASomF,EAErB,MAnBDzhK,EAAKijK,WAAatiK,CAqBzB,CAGL,GAAIqpG,EACA,IAAK,IAAI6B,KAAQ7B,EAAO,CACpB,IAAIttG,EAAastG,EAAM6B,GACV,QAATA,GAAkBs0D,EACjBA,EAAazjK,GAASsD,EAChBtD,aAAiBoT,OAAS9P,EAAK6rG,aAAiBq3D,SACvDljK,EAAK6rG,GAAMp/D,MAAMzsC,EAAMtD,GAEvBsD,EAAK6rG,GAAQnvG,CAEpB,CASL,OANIomK,GAAiBvD,EAAK4D,aACtBL,EAAcl5D,QAAQ,CAAC5pG,EAAMu/J,IAG7Bv/J,EAAc,SAAGA,EAAKojK,UAEnBpjK,C,CAQXvK,4BAA4B4tK,EAAen2H,GACvC,IAAIiuC,EAAkBkoF,EAASx9D,MAC/B,GAAK1qB,KAAYA,EAASzgF,OAAS,GAAnC,CACA,IAUIwC,EAAWD,EAVX8rB,EAActqB,KAAK6kK,uBAAuBD,EAAUn2H,GACpDq2H,EAAa,EACbC,EAAa,EAUjB,IATIH,EAASr5D,QACTu5D,EAAK9kK,KAAKyxH,WAAWmzC,EAASr5D,MAAO,IAAK,GAC1Cw5D,EAAK/kK,KAAKyxH,WAAWmzC,EAASr5D,MAAO,IAAK,IAEpC,GAANu5D,GAAiB,GAANC,GACXz6I,EAAE9lB,UAAUsgK,EAAIC,GAGpBvmK,EAAMk+E,EAASzgF,OACVwC,EAAI,EAAGA,EAAID,EAAKC,IACjBuB,KAAKglK,sBAAsBtoF,EAASj+E,GAAI6rB,GAElC,GAANw6I,GAAiB,GAANC,GACXz6I,EAAE9lB,WAAWsgK,GAAKC,EAjBgB,C,CA0B1C/tK,2BAA2B4tK,EAAen2H,EAAgBw2H,GAAmB,GACzE,IAAI36I,EAAc26I,EAAUjlK,KAAK6kK,uBAAuBD,EAAUn2H,GAAUA,EAAOiuC,SACnF18E,KAAKglK,sBAAsBJ,EAAUt6I,E,CAMjCtzB,8BAA8BkuK,EAAYz2H,GAC9C,IAAKy2H,IAAUA,EAAM35D,MAAO,OAAO98D,EAAOiuC,SAC1C,IAAIyoF,EAAoBD,EAAM35D,MAAMznD,WACpC,GAAkB,QAAdqhH,GAAqC,UAAdA,EAAuB,CAC9C,IAAI7rG,EAA4B7qB,EAAOynB,OAAOoD,UAAY7qB,EAAO6qB,QAAU,IAAImmG,SAC1EnmG,EAAQ6rG,KACT7rG,EAAQ6rG,GAAa,IAAIjhE,UAE7B,IAAI55E,EAAcgvC,EAAQ6rG,EAC7B,CAED,OADK76I,IAAGA,EAAImkB,EAAOiuC,UACZpyD,C,CAMHtzB,yBAAyBouK,GAC7B,IAAInkJ,GAEA,WAAYmkJ,GAAU,WAAYA,KAClCnkJ,EAAIA,GAAK,IAAItd,QACXa,WAAWxE,KAAKyxH,WAAW2zC,EAAQ,SAAU,IAAKplK,KAAKyxH,WAAW2zC,EAAQ,SAAU,IAG1F,IAAIxyF,EAAa5yE,KAAKyxH,WAAW2zC,EAAQ,SAAU,GAAIvyF,EAAa7yE,KAAKyxH,WAAW2zC,EAAQ,SAAU,GAClG1gK,EAAiB1E,KAAKyxH,WAAW2zC,EAAQ,WAAY,GAUzD,OAToBplK,KAAKyxH,WAAW2zC,EAAQ,QAAS,GACjCplK,KAAKyxH,WAAW2zC,EAAQ,QAAS,GAE3C,GAANxyF,GAAiB,GAANC,GAAqB,GAAVnuE,KACtBuc,EAAIA,GAAK,IAAItd,QACXc,MAAMmuE,EAAIC,GACZ5xD,EAAEvc,OAAgB,kBAATA,IAGNuc,C,CAMHjqB,6BAA6B4tK,EAAejF,GAChD,IAAIyF,EAGAC,EADJ,IADAD,EAASR,EAASr5D,SAGlB85D,EAAarlK,KAAKslK,YAAYV,EAASr5J,OACvC,CAEA,IAAI+e,EAAcq1I,EACdp1H,EAAcvqC,KAAKsxH,WAAW8zC,EAAQC,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAC/EpkJ,EAAYjhB,KAAKulK,KACjBtkJ,GAAoB,GAAfjhB,KAAK4yC,UACVtoB,EAAEskB,OACE3tB,GAAGqJ,EAAEgsC,UAAUr1C,GACA,GAAfjhB,KAAK4yC,QAAatoB,EAAE8gB,MAAMprC,KAAK4yC,SAEtCtoB,EAAU+6I,EAAW,IAAIr3H,MAAM1jB,EAAGigB,IAC/BtpB,GAAoB,GAAfjhB,KAAK4yC,SACVtoB,EAAE4C,SAZW,C,CAmBbl2B,qBAAqBuzC,GAGzB,OAFAA,EAAO,GAAK7rC,WAAW6rC,EAAO,IAAM7rC,WAAW6rC,EAAO,IACtDA,EAAO,GAAK7rC,WAAW6rC,EAAO,IAAM7rC,WAAW6rC,EAAO,IAC/CA,C,CAMHvzC,wBAAwBuzC,GAE5B,OADAA,EAAO,GAAK1vC,MAAMC,OAAOwqG,OAAO/6D,EAAO,IAChCA,C,CAMHvzC,sBAAsBuzC,GAE1B,OADAA,EAAO,GAAKvqC,KAAKwlK,mBAAmBj7H,EAAO,IACpCA,C,CAMXvzC,mBAAmBuU,GACf,MAAa,UAATA,GACGA,KAAQvL,KAAKslK,W,CAMhBtuK,kBAAkBiuC,EAAUsF,EAAek7H,EAAe,EAAGC,EAAkB,MACnF,IAEIjnK,EAAWD,EAMXyiB,EARAlkB,EAAWiD,KAAKwxH,UAIpB,IAHAz0H,EAAId,OAASsuC,EAAOtuC,OAEpBuC,EAAM+rC,EAAOtuC,OACRwC,EAAI,EAAGA,EAAID,EAAKC,IACjB1B,EAAI0B,GAAKuB,KAAKyxH,WAAWxsF,EAAKsF,EAAO9rC,GAAG,GAAI8rC,EAAO9rC,GAAG,IAiB1D,OAfAuB,KAAK4yC,OAAS5yC,KAAKyxH,WAAWxsF,EAAK,QAAS,IAE5ChkB,EAAIjhB,KAAK2lK,kBAAkB1gI,KAElBwgI,IAAMA,EAAO,GAElBxkJ,EAAEzc,UAAUzH,EAAI0oK,GAAO1oK,EAAI0oK,EAAO,IAClC1oK,EAAI0oK,GAAQ1oK,EAAI0oK,EAAO,GAAK,EAC5BzlK,KAAKulK,IAAMtkJ,GAEXjhB,KAAKulK,IAAM,KAEXG,GAAY1lK,KAAa0lK,KACzB3oK,EAAOiD,KAAa0lK,GAAS3oK,IAE1BA,C,CAcX/F,0BAA0B+G,GACtB,IACIU,EAAWD,EADXonK,EAAkB7nK,EAAIQ,MAAM,KAGhC,IADAC,EAAMonK,EAAS3pK,OACVwC,EAAI,EAAGA,EAAID,EAAKC,IACjBmnK,EAASnnK,GAAKC,WAAWknK,EAASnnK,IAEtC,OAAOmnK,C,CAMH5uK,kBAAkBiuC,EAAU74B,EAAaslH,GAC7C,OAAItlH,KAAO64B,EACAA,EAAI74B,GAERslH,C,EA/lBIqvC,eAAeyC,gBAAW,aAE1BzC,eAAa2C,cAAW,2DAikBxB3C,eAAWuE,YAAQ,CAAEO,KAAQ,CAAC,WAAY,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,QAAS,GAAI,CAAC,SAAU,GAAI,CAAC,YAAa,MAAO,CAAC,YAAa,MAAO,CAAC,YAAa,KAAMC,OAAU,CAAC,aAAc,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,GAAI,CAAC,YAAa,MAAO,CAAC,YAAa,MAAO,CAAC,YAAa,KAAMC,IAAO,CAAC,UAAW,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,GAAI,CAAC,aAAc,GAAI,CAAC,WAAY,GAAI,CAAC,YAAa,MAAO,CAAC,YAAa,MAAO,CAAC,YAAa,KAAM5hD,MAAS,CAAC,cAAe,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,QAAS,GAAI,CAAC,SAAU,KAAM5sF,QAAW,CAAC,cAAe,CAAC,CAAC,OAAQ,MAAO,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,QAAS,GAAI,CAAC,SAAU,IAAK,EAAG,oBAAqByuI,YAAe,CAAC,cAAe,CAAC,CAAC,OAAQ,MAAO,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,QAAS,GAAI,CAAC,SAAU,GAAI,CAAC,SAAU,OAAQ,EAAG,oBAAqBC,SAAY,CAAC,WAAY,CAAC,CAAC,OAAQ,IAAK,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,OAAQ,MAAO,CAAC,QAAS,MAAO,CAAC,YAAa,OAAQ,GAAIniE,KAAQ,CAAC,WAAY,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,MAAO,GAAI,CAAC,MAAO,GAAI,CAAC,YAAa,MAAO,CAAC,YAAa,IAAK,EAAG,iBAAkB2/C,MAAS,CAAC,YAAa,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,IAAK,CAAC,YAAa,MAAO,CAAC,YAAa,IAAK,EAAG,kBAAmByiB,OAAU,CAAC,aAAc,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,IAAK,CAAC,YAAa,MAAO,CAAC,YAAa,IAAK,EAAG,kBAAmBC,KAAQ,CAAC,WAAY,CAAC,CAAC,IAAK,GAAI,CAAC,IAAK,GAAI,CAAC,SAAU,IAAK,CAAC,YAAa,MAAO,CAAC,YAAa,MAAO,CAAC,YAAa,IAAK,EAAG,mBAEn2CpF,eAASvvC,UAAU,GAiCtC,MAAM8xC,YAMF/mK,YAAYotG,EAAWyD,EAAcnvG,GACjC+B,KAAK2pG,KAAOA,EACZ3pG,KAAKotG,KAAOA,EACZptG,KAAK/B,MAAQA,C,CAGjBslK,IAAIf,GACA,IAAI7xI,EAAgBowI,eAAeqF,WAAWpmK,KAAK/B,OACnD+B,KAAK2pG,KAAK3pG,KAAKotG,MAAQz8E,EAAIvzB,KAAK4C,KAAMwiK,E,EAO9C,MAAMP,SASFl6J,QACI/H,KAAKqmK,aAAe,KACpBrmK,KAAKsmK,UAAY,KACjBtmK,KAAKmiK,OAAS,I,CAIlB1lK,UACIuD,KAAK+H,QACLjM,KAAKW,QAAQ,WAAYuD,K,CAG7BhJ,gBACI,IAAIuvK,EAAiBzqK,KAAKe,eAAe,WAAYolK,UAErD,OADAsE,EAAKpE,OAAS,GACPoE,C,CAKXtD,WAAW1hK,EAAW6rG,EAAco5D,GAC3BxmK,KAAKqmK,eAAcrmK,KAAKqmK,aAAe,IAC5CrmK,KAAKqmK,aAAahqK,KAAK,CAACkF,EAAM6rG,EAAMo5D,G,CAKxCC,aACI,GAAKzmK,KAAKqmK,aACV,GAAKrmK,KAAKmiK,OAAV,CAIA,IAAI1jK,EAAWD,EAEXkoK,EACJ,IAFAloK,EAAMwB,KAAKqmK,aAAapqK,OAEnBwC,EAAI,EAAGA,EAAID,EAAKC,KACjBioK,EAAW1mK,KAAKqmK,aAAa5nK,IACpB,GAAGioK,EAAS,IAAM1mK,KAAK2mK,aAAaD,EAAS,IAE1D1mK,KAAKqmK,aAAe,IARnB,MAFGrmK,KAAKqmK,aAAe,I,CAe5BM,aAAaH,GACT,GAAIA,EAAStoK,QAAQ,aAAe,EAChC,OAAO,IAAIsjK,WAAWT,eAAgBjmK,OAAOwqG,OAAOkhE,EAAS/lI,QAAQ,WAAY,KAAM,GACpF,GAAI+lI,EAAStoK,QAAQ,UAAY,EAAG,CAEvC,IAAIqoE,EAEA9nE,EAAWD,EACXooK,EACJpoK,GAHA+nE,GAFAigG,EAAWA,EAAS/lI,QAAQ,QAAS,KAErBliC,MAAM,MAGXtC,OACX,IAAI4qK,EAAkB,GACtB,IAAKpoK,EAAI,EAAGA,EAAID,EAAKC,KACjBmoK,EAAOrgG,EAAK9nE,IAERooK,EAAMxqK,KAAK2D,KAAKmiK,OAAOyE,EAAKnmI,QAAQ,SAAU,MAE9ComI,EAAMxqK,KAAK,MAGnB,OAAOwqK,CACV,CACG,OAAO7mK,KAAKmiK,OAAOqE,EAAS/lI,QAAQ,SAAU,I,CAMtDqmI,YAAY5qK,GACH8D,KAAKsmK,YAAWtmK,KAAKsmK,UAAY,IACtCtmK,KAAKsmK,UAAUjqK,KAAKH,E,CAKxB6qK,UACS/mK,KAAKsmK,YACVtmK,KAAKsmK,UAAY,K,CAKrB/D,SACIviK,KAAKymK,aACLzmK,KAAK+mK,UACL/mK,KAAKvD,S,EE1uBP,MAAO6lK,cAAc9lF,OAsBvBjgF,YAAYyqK,GAAiB,GACzB30J,QAdJrS,KAAmBinK,qBAAY,EAWvBjnK,KAAY6hK,cAAY,EAK5B7hK,KAAKs+C,OAASzjD,MAAMM,MACpB6E,KAAKknK,QAAU1I,OAAO52J,MAEtB5H,KAAK4C,OAAS5C,KACVgnK,GACAhnK,KAAKgnK,gB,CAMHA,iB,CAQVhwK,gBAAgBmd,GACZ,IAAIgzJ,EAAQtsK,MAAMK,OAAOoqG,OAAOnxF,GAChC,IAAIgzJ,EAKA,KAAM,4BAJN,IAAK,IAAI/6J,KAAO+6J,EACZtsK,MAAMC,OAAO6tH,UAAUv8G,EAAM,UAAY+6J,EAAM/6J,E,CAY3Dg7J,UAAU9nK,GACNgjK,MAAM+E,kBAAkBvkK,IAAI9C,MAC5B,IAAImU,EAAc7U,EAAKpB,QAAQ,MAAQ,EAAIoB,EAAOA,EAAO,SACrDk6C,EAAkB3+C,MAAMK,OAAOoqG,OAAOnxF,GACtCqlC,EACKx5C,KAAK6hK,eACNroH,EAAQ9xC,OAAO,CAAEg6J,KAAM1hK,OACvBA,KAAK6hK,cAAe,EACpBS,MAAM+E,kBAAkBvkK,IAAI9C,QAGhCA,KAAKwB,QAAQpI,UAAUI,WAAW,GAClCqB,MAAMK,OAAO+sB,KAAK9T,EAAK,MAAMlW,IACrBqkK,MAAMgF,WAAWhF,MAAMgF,UAAUn2J,MAAM,WAAYlT,EAAM,IAC9Dm7B,MAAMogB,IACL,IAAKA,EAAS,KAAM,sBAAwBl6C,EACvCU,KAAK6hK,aASN7hK,KAAKwB,QAAQpI,UAAUI,WAAW,IARlCwG,KAAKmU,IAAMA,EACXmuJ,MAAMiF,kBAEN/tH,EAAQ9xC,OAAO,CAAEg6J,KAAM1hK,OACvBA,KAAK6hK,cAAe,EACpBS,MAAM+E,kBAAkBvkK,IAAI9C,MAGY,I,CAUxDwnK,WAAWhF,GACHA,IAASxiK,KAAK6hK,eACd7hK,KAAK6hK,cAAe,EACpBd,eAAeC,aAAahhK,KAAMwiK,G,CAO1CiF,YAAY7mK,GACR,OAAIZ,KAAKmiK,OAAeniK,KAAKmiK,OAAOvhK,GAC7B,I,CAQXohH,KAAK0lD,GAAsB,EAAM57B,EAAa,MACtC47B,GAAYpF,MAAMqF,WACtBrF,MAAMZ,KAAK9kF,SAAS58E,MAChBA,KAAK4nK,UACL/sK,MAAMS,MAAM2rG,WAAWjnG,KAAK4nK,SAAU,GAC1C5nK,KAAK6nK,SAAS/7B,E,CAIlB+7B,SAAS/7B,G,CASTr1C,MAAMlrF,EAAe,MACjBvL,KAAK8nK,SAASv8J,GACVvL,KAAKinK,qBACLjnK,KAAKmD,UACDnD,KAAK4nK,UACL5nK,KAAK4nK,SAASzkK,YAGlBnD,KAAKwnG,aACDxnG,KAAK4nK,UACL5nK,KAAK4nK,SAASpgE,a,CAQ1BsgE,SAASv8J,EAAe,M,CAQxBpI,QAAQqjG,GAAwB,GAC5Bn0F,MAAMlP,QAAQqjG,GACVxmG,KAAK4nK,WACL5nK,KAAK4nK,SAASzkK,UACdnD,KAAK4nK,SAAW,MAGpB5nK,KAAKmiK,OAAS,KACdG,MAAM+E,kBAAkBz/C,OAAO5nH,K,CAOnC2yG,YACI,GAAI3yG,KAAKu2D,YAAa,OAAOv2D,KAAKoV,OAElC,IADA,IAAItM,EAAc,EACTrK,EAAYuB,KAAK+nG,YAAc,EAAGtpG,GAAK,EAAGA,IAAK,CACpD,IAAIkrG,EAAwB3pG,KAAKqnG,WAAW5oG,GACxCkrG,EAAK9xC,WACL/uD,EAAMvL,KAAKuL,IAAI6gG,EAAKjyC,GAAKiyC,EAAKthG,MAAQshG,EAAKvvC,OAAQtxD,GAE1D,CACD,OAAOA,C,CAOXmqG,aACI,GAAIjzG,KAAKw2D,aAAc,OAAOx2D,KAAKqV,QAEnC,IADA,IAAIvM,EAAc,EACTrK,EAAYuB,KAAK+nG,YAAc,EAAGtpG,GAAK,EAAGA,IAAK,CACpD,IAAIkrG,EAAwB3pG,KAAKqnG,WAAW5oG,GACxCkrG,EAAK9xC,WACL/uD,EAAMvL,KAAKuL,IAAI6gG,EAAKhyC,GAAKgyC,EAAKrhG,OAASqhG,EAAKtvC,OAAQvxD,GAE3D,CACD,OAAOA,C,CAOP3N,YACA,OAAO6E,KAAKs+C,M,CAGZnjD,UAAM8C,GACN+B,KAAKs+C,OAASrgD,C,CAMd+uF,cACA,OAAOhtF,KAAK4nK,Q,CAMZz5I,UACA,OAAOnuB,KAAKknK,QAAQ/4I,G,CAGpBA,QAAIlwB,GACAA,GAAS+B,KAAKknK,QAAQ/4I,MACtBnuB,KAAK+nK,aAAa55I,IAAMlwB,E,CAO5BuK,aACA,OAAOxI,KAAKknK,QAAQ1+J,M,CAGpBA,WAAOvK,GACHA,GAAS+B,KAAKknK,QAAQ1+J,SACtBxI,KAAK+nK,aAAav/J,OAASvK,E,CAO/Bw5D,WACA,OAAOz3D,KAAKknK,QAAQzvG,I,CAGpBA,SAAKx5D,GACDA,GAAS+B,KAAKknK,QAAQzvG,OACtBz3D,KAAK+nK,aAAatwG,KAAOx5D,E,CAO7BsK,YACA,OAAOvI,KAAKknK,QAAQ3+J,K,CAGpBA,UAAMtK,GACFA,GAAS+B,KAAKknK,QAAQ3+J,QACtBvI,KAAK+nK,aAAax/J,MAAQtK,E,CAO9BohK,cACA,OAAOr/J,KAAKknK,QAAQ7H,O,CAGpBA,YAAQphK,GACJA,GAAS+B,KAAKknK,QAAQ7H,UACtBr/J,KAAK+nK,aAAa1I,QAAUphK,E,CAOhCqhK,cACA,OAAOt/J,KAAKknK,QAAQ5H,O,CAGpBA,YAAQrhK,GACJA,GAAS+B,KAAKknK,QAAQ5H,UACtBt/J,KAAK+nK,aAAazI,QAAUrhK,E,CAI1B+0G,uBACN3gG,MAAM2gG,uBACNhzG,KAAK2yF,UAAU3yF,KAAKgoK,a,CAOdA,eACNhoK,KAAKmR,MAAMjG,MAAMkD,QACbpO,KAAKknK,UAAY1I,OAAO52J,OAAO5H,KAAKknK,QAAQ9H,a,CAMpD6I,cACQjoK,KAAKknK,SAAW1I,OAAO52J,OACvB5H,KAAKknK,QAAQ9H,a,CAQb2I,aAEJ,OADA/nK,KAAKknK,UAAY1I,OAAO52J,QAAU5H,KAAKknK,QAAUlnK,KAAKqqG,aAAam0D,SAC5Dx+J,KAAKknK,O,CAMLxF,kBACP,IAAIA,EAAOY,MAAM4F,MAYjB,OAXKxG,IACDA,EAAOY,MAAM4F,MAAiBrtK,MAAMS,MAAMshF,SAAS,IAAIJ,QACvDklF,EAAK3sJ,KAAO,OACZ2sJ,EAAK7vD,cAAe,EACpBh3G,MAAMS,MAAMmW,GAAG,SAAU,MAAM,KAC3BiwJ,EAAK3uJ,KAAKlY,MAAMS,MAAM+M,MAAOxN,MAAMS,MAAMgN,QACzCo5J,EAAKvwJ,MAAMjG,MAAMkD,OAAO,IAE5BszJ,EAAK3uJ,KAAKlY,MAAMS,MAAM+M,MAAOxN,MAAMS,MAAMgN,QACzCo5J,EAAKvwJ,MAAMjG,MAAMkD,SAEdszJ,C,CASX1qK,YAAYmd,EAAa6T,EAAoB,KAAMqlF,EAAoB,MACnE,OAAOxyG,MAAMK,OAAO+sB,KAAK9T,EAAK,MAAMlW,IAC5BqkK,MAAMgF,WAAWhF,MAAMgF,UAAUn2J,MAAM,WAAYlT,GACvDovG,GAAYA,EAASlC,QAAQltG,EAAM,IACpCm7B,MAAMogB,IACL,IAAKA,EAAS,KAAM,sBAAwBrlC,EAE5C,IAAI20F,EACA+3D,EAAqB,GACrBzvJ,EAAMooC,EAAQ9xC,OAAO,KAAMm5J,GAI/B,GAHIA,EAAO5kK,OAAS,GAChB3E,QAAQC,KAAK,iBAAiB4c,QAAU0sJ,EAAOtiJ,KAAK,SAEpDnN,aAAekxJ,MACfx5D,EAAQ13F,MACP,KAAIA,EAAIzO,MAMT,KAAM,eAAiBwR,EALvB20F,EAAQ,IAAIw5D,MACZx5D,EAAMrxC,KAAOqxC,EAAMvgG,MAAQugG,EAAM36E,IAAM26E,EAAMtgG,OAAS,EACtDsgG,EAAM8+D,SAAWx2J,CAGS,CAS9B,OAPA03F,EAAM+4D,cAAe,EACjB/4D,EAAM8+D,WACN9+D,EAAM8+D,SAASO,SAAWr/D,GAC9Bw5D,MAAM+E,kBAAkBvkK,IAAIgmG,GAC5Bw5D,MAAMiF,kBACNv/I,GAAYA,EAASmjF,QAAQrC,GAEtBA,CAAK,G,CAYpB9xG,YAAYmd,EAAauzJ,GAAsB,EAAM57B,EAAa,KAAM9jH,EAAoB,KAAMqlF,EAAoB,MAElH,GAAIy+B,aAAiB5gC,QAAS,CAC1B,IAAIrsG,EAAYmpB,EAChBA,EAAW8jH,EACXA,EAAQjtI,CACX,CAED,OADAyjK,MAAM8F,kBACC9F,MAAMr6I,KAAK9T,EAAK+2F,QAAQxjG,OAAO,KAAM1H,KAAKqoK,eAAgB,CAACX,EAAY1/I,EAAU8jH,IAASz+B,E,CAI7Fr2G,sBAAsB0wK,EAAqB1/I,EAAmB8jH,EAAYhjC,GAC9EA,EAAMkZ,KAAK0lD,EAAY57B,GACnB9jH,GAAUA,EAASmjF,QAAQrC,E,CASnC9xG,aAAamd,EAAaY,GACtB,IAAIpU,GAAgB,EACpB,IAAK,IAAImoG,KAASw5D,MAAM+E,kBACpB,GAAIv+D,GAASA,EAAMzoE,QAAUyoE,EAAM30F,MAAQA,IAAgB,MAARY,GAAgB+zF,EAAM/zF,MAAQA,GAAO,CACpF+zF,EAAMrS,QACN91F,GAAO,EACP,KACH,CAEL,OAAOA,C,CAOX3J,kBACI,IAAI0qK,EAAeY,MAAMZ,KACzB,IAAK,IAAIjjK,EAAI,EAAG+G,EAAIk8J,EAAK35D,YAAatpG,EAAI+G,EAAG/G,IAAK,CAC9C,IAAIqqG,EAAQ44D,EAAKr6D,WAAW,GACxByB,aAAiBw5D,MACjBx5D,EAAMrS,QAENqS,EAAMtB,YACb,C,CASLxwG,eAAemd,EAAaY,GACxB,IAAIpU,GAAgB,EACpB,IAAK,IAAImoG,KAASw5D,MAAM+E,kBACpB,GAAIv+D,EAAM30F,MAAQA,IAAgB,MAARY,GAAgB+zF,EAAM/zF,MAAQA,KAAU+zF,EAAMr2F,WAAY,CAChFq2F,EAAM3lG,UACNxC,GAAO,EACP,KACH,CAEL,OAAOA,C,CAMX3J,YACImb,SAASm2J,wB,CAObtxK,sBAAsBuxK,GAClBjG,MAAMgF,UAAYiB,C,CAQtBvxK,uBAAuB80I,EAAa,KAAMttF,EAAgB,KAClD8jH,MAAMgF,YACNzsK,MAAMO,YAAYuP,MAAM,KAAM23J,MAAMkG,cACpC3tK,MAAMO,YAAYuP,MAAM,KAAM23J,MAAMmG,cACpC5tK,MAAMO,YAAYqP,KAAK+zC,EAAO,KAAM8jH,MAAMkG,aAAc,CAAC18B,IAAQ,G,CAIjE90I,oBAAoB80I,GACxBjxI,MAAMS,MAAMshF,SAAS0lF,MAAMgF,WACvBhF,MAAMgF,qBAAqBhF,OAC3BA,MAAMgF,UAAUO,SAAS/7B,E,CAGzB90I,sBACAsrK,MAAMgF,qBAAqBhF,MAC3BA,MAAMgF,UAAU7wE,QAEhB6rE,MAAMgF,UAAU9/D,Y,CAOxBxwG,uBAAuBwnD,EAAgB,KAC/B8jH,MAAMgF,YACNzsK,MAAMO,YAAYuP,MAAM,KAAM23J,MAAMkG,cACpC3tK,MAAMO,YAAYuP,MAAM,KAAM23J,MAAMmG,cACpC5tK,MAAMO,YAAYqP,KAAK+zC,EAAO,KAAM8jH,MAAMmG,c,EAjgBlCnG,MAAA+E,kBAAgC,IAAIz2J,I,MCX3C83J,MAgCTnsK,YAAYosK,GAAsB,GArBlC3oK,KAAKyE,MAAW,EAIhBzE,KAAS4oK,UAAW,EAEpB5oK,KAAM6oK,OAAW,EAIT7oK,KAAI8oK,KAAoC,GAExC9oK,KAASs6H,UAAU,GAEnBt6H,KAAK4gG,MAAU,GAEf5gG,KAAM+jC,OAAW,EAMrB4kI,GAAcD,MAAMK,WAAaL,MAAMK,UAAU51J,UAAU,EAAGnT,KAAMA,KAAKgpK,SACzEhpK,KAAKipK,UAAYjpK,KAAKkpK,cACtBlpK,KAAKmpK,WAAanpK,KAAKkpK,a,CAIvB99J,YACA,OAAOpL,KAAK6oK,M,CAQhBG,UACI,GAAIhpK,KAAKyE,OAAS,EAGd,OAFAzE,KAAKmpK,WAAanpK,KAAKkpK,mBACvBlpK,KAAK6oK,OAAS,GAGlB,IAAIn7C,EAAgB1tH,KAAK4oK,UAAY5oK,KAAK4oK,UAAY5oK,KAAKyE,MACvD03C,EAAcn8C,KAAKkpK,cACnBE,EAAkBjtH,EAAMn8C,KAAKmpK,WAAc,IAC/CnpK,KAAK6oK,QAAU1sH,EAAMn8C,KAAKmpK,YAAcnpK,KAAKyE,MAC7C,IAAItJ,EAAgB6E,KAAKipK,UAAYjpK,KAAKipK,UAAYjpK,KAAK6oK,OAC3D7oK,KAAKmpK,WAAahtH,EAGlB,IAAIktH,EAAkBrpK,KAAKs6H,UAC3Bt6H,KAAK+jC,OAAS,EACd,IAAK,IAAItlC,EAAY,EAAG+G,EAAY6jK,EAASptK,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC7D,IAAI+uG,EAAwB67D,EAAS5qK,GACrC,GAAuB,OAAnB+uG,EAAQjF,OAAiB,CACzB,IAAIrsC,EAAYsxC,EAAQ87D,UAAY57C,EAAQvyH,EAC5C,GAAI+gE,GAAKsxC,EAAQ+7D,QACb,GAAI/7D,EAAQxlB,OACR,IAAKwlB,EAAQ/E,WAAa2gE,EACtB57D,EAAQ+7D,SAAW/7D,EAAQhvD,MAC3BgvD,EAAQl0E,KAAI,GACR4iC,EAAIsxC,EAAQ+7D,UAEZ/7D,EAAQ+7D,SAAWhsK,KAAKoyE,MAAMzT,EAAIsxC,EAAQ+7D,SAAW/7D,EAAQhvD,OAASgvD,EAAQhvD,YAGlF,KAAO0d,GAAKsxC,EAAQ+7D,SAChB/7D,EAAQ+7D,SAAW/7D,EAAQhvD,MAC3BgvD,EAAQl0E,KAAI,QAIpBk0E,EAAQl0E,KAAI,EAGvB,MACGt5B,KAAK+jC,QAEZ,EAEG/jC,KAAK+jC,OAAS,IAAM2pF,EAAQ,KAAQ,IAAG1tH,KAAKwpK,gB,CAI5CA,iBAEJ,IADA,IAAIH,EAAkBrpK,KAAKs6H,UAClB77H,EAAY,EAAG+G,EAAY6jK,EAASptK,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC7D,IAAI+uG,EAAwB67D,EAAS5qK,GACd,OAAnB+uG,EAAQjF,OAAiBvoG,KAAK4gG,MAAMvkG,KAAKmxG,GACxCxtG,KAAKypK,gBAAgBj8D,EAC7B,CACDxtG,KAAKs6H,UAAYt6H,KAAK4gG,MACtByoE,EAASptK,OAAS,EAClB+D,KAAK4gG,MAAQyoE,C,CAITI,gBAAgBj8D,GAChBxtG,KAAK8oK,KAAKt7D,EAAQphG,MAAQohG,UAAgBxtG,KAAK8oK,KAAKt7D,EAAQphG,KAChEohG,EAAQ7iG,QACR+9J,MAAM/kF,MAAMtnF,KAAKmxG,E,CAQd07D,cACH,OAAOhtH,KAAKC,K,CAIhB/vB,QAAQs9I,EAAmB1hF,EAAiBxpC,EAAerhD,EAAaorG,EAAkBj+F,EAAak+F,GAEnG,IAAKhqD,EAED,OADA+pD,EAAOv6D,MAAM7wC,EAAQmN,GACd,KAIX,GAAIk+F,EAAa,CACb,IAAIgF,EAAwBxtG,KAAK2pK,YAAYxsK,EAAQorG,GACrD,GAAIiF,EAQA,OAPAA,EAAQxlB,OAASA,EACjBwlB,EAAQ87D,UAAYI,EACpBl8D,EAAQhvD,MAAQA,EAChBgvD,EAAQrwG,OAASA,EACjBqwG,EAAQjF,OAASA,EACjBiF,EAAQljG,KAAOA,EACfkjG,EAAQ+7D,QAAU/qH,GAASkrH,EAAW1pK,KAAK4oK,UAAY5oK,KAAKipK,UAAYjpK,KAAKkpK,cAAgBlpK,KAAKmpK,YAC3F37D,CAEd,CAkBD,OAfAA,EAAUk7D,MAAM/kF,MAAM1nF,OAAS,EAAIysK,MAAM/kF,MAAM1mF,MAAQ,IAAI2sK,cACnD5hF,OAASA,EACjBwlB,EAAQ87D,UAAYI,EACpBl8D,EAAQhvD,MAAQA,EAChBgvD,EAAQrwG,OAASA,EACjBqwG,EAAQjF,OAASA,EACjBiF,EAAQljG,KAAOA,EACfkjG,EAAQ+7D,QAAU/qH,GAASkrH,EAAW1pK,KAAK4oK,UAAY5oK,KAAKipK,UAAYjpK,KAAKkpK,cAAgBlpK,KAAKmpK,YAGlGnpK,KAAK6pK,cAAcr8D,GAGnBxtG,KAAKs6H,UAAUj+H,KAAKmxG,GAEbA,C,CAIHq8D,cAAcr8D,GAClB,IAAIrwG,EAAcqwG,EAAQrwG,OACtBorG,EAAciF,EAAQjF,OACtBuhE,EAAc3sK,EAASA,EAAOsvG,QAAUtvG,EAAOsvG,MAAQ/uG,MAAM4C,UAAY,EACzEypK,EAAcxhE,EAAOyhE,QAAUzhE,EAAOyhE,MAAQtB,MAAMuB,QACxDz8D,EAAQphG,IAAM09J,EAAM,IAAMC,EAC1B/pK,KAAK8oK,KAAKt7D,EAAQphG,KAAOohG,C,CAW7B/iG,KAAK+zC,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC1FxoG,KAAKosB,SAAQ,GAAO,EAAOoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAY5DrqD,KAAKK,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,EAAMC,GAAqB,GACrH,IAAI+E,EAAwBxtG,KAAKosB,SAAQ,GAAO,EAAMoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,GAC/EgF,IAASA,EAAQ/E,UAAYA,E,CAWrCE,UAAUnqD,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC/FxoG,KAAKosB,SAAQ,GAAM,EAAOoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAW3Dr1F,UAAUqrC,EAAerhD,EAAaorG,EAAkBj+F,EAAc,KAAMk+F,GAAuB,GAC/FxoG,KAAKosB,SAAQ,GAAM,EAAMoyB,EAAOrhD,EAAQorG,EAAQj+F,EAAMk+F,E,CAI1DxqG,WACI,MAAO,aAAegC,KAAKs6H,UAAUr+H,OAAS,SAAWysK,MAAM/kF,MAAM1nF,M,CAQzE0O,MAAMxN,EAAaorG,GACf,IAAIiF,EAAwBxtG,KAAK2pK,YAAYxsK,EAAQorG,GACjDiF,GACAA,EAAQ7iG,O,CAQhBqjG,SAAS7wG,GACL,GAAKA,EACL,IAAK,IAAIsB,EAAY,EAAG+G,EAAYxF,KAAKs6H,UAAUr+H,OAAQwC,EAAI+G,EAAG/G,IAAK,CACnE,IAAI+uG,EAAwBxtG,KAAKs6H,UAAU77H,GACvC+uG,EAAQrwG,SAAWA,GACnBqwG,EAAQ7iG,OAEf,C,CAIGg/J,YAAYxsK,EAAaorG,GAC7B,IAEIn8F,GAFcjP,EAASA,EAAOsvG,QAAUtvG,EAAOsvG,MAAQ/uG,MAAM4C,UAAY,GAExD,KADHioG,EAAOyhE,QAAUzhE,EAAOyhE,MAAQtB,MAAMuB,SAExD,OAAOjqK,KAAK8oK,KAAK18J,E,CASrBumF,UAAUx1F,EAAaorG,EAAkBj+F,EAAc,MACnD4/J,UAAUntG,EAAE41B,UAAUx1F,EAAQorG,EAAQj+F,E,CAQ1Cu+F,aAAa1rG,EAAaorG,GACtB2hE,UAAUntG,EAAE8rC,aAAa1rG,EAAQorG,E,CAQrC4hE,eAAehtK,EAAaorG,GACxB2hE,UAAUntG,EAAEpyD,MAAMxN,EAAQorG,E,CAQ9BgF,SAASpwG,EAAaorG,GAClB,IAAIiF,EAAwBxtG,KAAK2pK,YAAYxsK,EAAQorG,GACjDiF,GAA6B,MAAlBA,EAAQjF,SACnBvoG,KAAK8oK,KAAKt7D,EAAQphG,KAAO,KACzBohG,EAAQl0E,KAAI,G,CAOpBo0E,QACI1tG,KAAKyE,MAAQ,C,CAMjBypG,SACIluG,KAAKyE,MAAQ,C,CAIjBtB,UACI,IAAK,IAAI1E,EAAI,EAAG+G,EAAIxF,KAAKs6H,UAAUr+H,OAAQwC,EAAI+G,EAAG/G,IAAK,CACrCuB,KAAKs6H,UAAU77H,GACrBkM,OACX,CACD3K,KAAKs6H,UAAUr+H,OAAS,EACxB+D,KAAK8oK,KAAO,GACZ9oK,KAAK4gG,MAAM3kG,OAAS,C,EAtUjBysK,MAASK,UAAU,KAGXL,MAAK/kF,MAAU,GAEvB+kF,MAAIuB,KAAW,EAwU1B,MAAML,aAWFj/J,QACI3K,KAAK7C,OAAS,KACd6C,KAAKuoG,OAAS,KACdvoG,KAAKsK,KAAO,I,CAGhBgvB,IAAI8wI,GACA,IAAIjtK,EAAc6C,KAAK7C,OACvB,GAAIA,GAAUA,EAAO+D,UAAW,OAAOlB,KAAK2K,QAC5C,IAAI49F,EAAmBvoG,KAAKuoG,OACxBj+F,EAActK,KAAKsK,KACvB8/J,GAAapqK,KAAK2K,QACJ,MAAV49F,IACJj+F,EAAOi+F,EAAOv6D,MAAM7wC,EAAQmN,GAAQi+F,EAAOnrG,KAAKD,G,QCvW3C+sK,UAAb3tK,cAGYyD,KAAK2jF,MAAmB,GAExB3jF,KAAI8oK,KAAoC,GAExC9oK,KAAOqqK,QAAmB,E,CAMlCrB,UACI,IAAIsB,EAAStqK,KAAKqqK,QACd7rK,EAAM8rK,EAAOruK,OACjB,GAAIuC,EAAM,EAAG,CACT,IAAK,IAAIC,EAAI,EAAG+G,EAAIhH,EAAM,EAAGC,GAAK+G,EAAG/G,IAAK,CACtC,IAAI+uG,EAAU88D,EAAO7rK,GACrBuB,KAAK8oK,KAAKt7D,EAAQphG,KAAO,KACF,OAAnBohG,EAAQjF,SACRiF,EAAQl0E,MACRk0E,EAAQ7iG,SAEZ3K,KAAK2jF,MAAMtnF,KAAKmxG,GAChB/uG,IAAM+G,IAAMA,EAAI8kK,EAAOruK,OAAS,EACnC,CACDquK,EAAOruK,OAAS,CACnB,C,CAIG0tK,YAAYxsK,EAAaorG,GAC7B,IAAIuhE,EAAc3sK,EAASA,EAAOsvG,QAAUtvG,EAAOsvG,MAAQ/uG,MAAM4C,UAAY,EACzEypK,EAAcxhE,EAAOyhE,QAAUzhE,EAAOyhE,MAAStB,MAAMuB,QACzD,OAAOjqK,KAAK8oK,KAAKgB,EAAM,IAAMC,E,CASjCp3E,UAAUx1F,EAAaorG,EAAkBj+F,EAAc,MACnD,GAAwC,MAApCtK,KAAK2pK,YAAYxsK,EAAQorG,GAAiB,CAC1C,IAAIiF,EAEAA,EADAxtG,KAAK2jF,MAAM1nF,OACD+D,KAAK2jF,MAAM1mF,MAEX,IAAIstK,aAElB/8D,EAAQrwG,OAASA,EACjBqwG,EAAQjF,OAASA,EACjBiF,EAAQljG,KAAOA,EAEf,IAAIw/J,EAAc3sK,EAASA,EAAOsvG,MAAQ,EACtCs9D,EAAexhE,EAAsB,MACzCiF,EAAQphG,IAAM09J,EAAM,IAAMC,EAC1B/pK,KAAK8oK,KAAKt7D,EAAQphG,KAAOohG,EAEzBxtG,KAAKqqK,QAAQhuK,KAAKmxG,EACrB,C,CAQL3E,aAAa1rG,EAAaorG,GACtB,IAAIiF,EAAUxtG,KAAK2pK,YAAYxsK,EAAQorG,GACnCiF,GAA6B,MAAlBA,EAAQjF,SACnBvoG,KAAK8oK,KAAKt7D,EAAQphG,KAAO,KACzBohG,EAAQl0E,MACRk0E,EAAQ7iG,Q,CAIhBA,MAAMxN,EAAaorG,GACf,IAAIiF,EAAUxtG,KAAK2pK,YAAYxsK,EAAQorG,GACvC,QAAIiF,IACAxtG,KAAK8oK,KAAKt7D,EAAQphG,KAAO,KACzBohG,EAAQphG,IAAM,GACdohG,EAAQ7iG,SACD,E,CAKfqjG,SAAS7wG,GACL,GAAKA,EACL,IAAK,IAAIsB,EAAI,EAAG+G,EAAIxF,KAAKqqK,QAAQpuK,OAAQwC,EAAI+G,EAAG/G,IAAK,CACjD,IAAI+uG,EAAUxtG,KAAKqqK,QAAQ5rK,GACvB+uG,EAAQrwG,SAAWA,IACnB6C,KAAK8oK,KAAKt7D,EAAQphG,KAAO,KACzBohG,EAAQphG,IAAM,GACdohG,EAAQ7iG,QAEf,C,EAlGEu/J,UAAAntG,EAAI,IAAImtG,UAyGnB,MAAMK,aAMF5/J,QACI3K,KAAK7C,OAAS,KACd6C,KAAKuoG,OAAS,KACdvoG,KAAKsK,KAAO,I,CAGhBgvB,MACI,IAAIn8B,EAAS6C,KAAK7C,OAClB,GAAIA,GAAUA,EAAO+D,UAAW,OAAOlB,KAAK2K,QAC5C,IAAI49F,EAASvoG,KAAKuoG,OACdj+F,EAAOtK,KAAKsK,KACF,MAAVi+F,IACJj+F,EAAOi+F,EAAOv6D,MAAM7wC,EAAQmN,GAAQi+F,EAAOnrG,KAAKD,G,QC5H3CqtK,MAGTxzK,8B,CAIAA,gBACI,OAAO,C,CAGXA,qBAAqBqR,EAAeC,GAChCwB,OAAO+Y,aAAayL,SAAS,EAAG,EAAGjmB,EAAOC,GAC1C8gB,cAAc/gB,MAAQA,EACtB+gB,cAAc9gB,OAASA,C,EAbpBkiK,MAAqBC,uBAAY,E,MCD/BC,WAEFA,UAAqBC,sBAAa,SAAUC,GAC/C,IAAIC,EAAa,uBAAyBD,EAAkB,MAC5D,OAAQhvK,OAAeX,KAAK8mK,WAAW8I,EAC3C,EAMOH,UAAAI,gBAA4B,SAAU78I,EAAWC,GACpDs8I,MAAMO,cAAc98I,EAAGC,EAC3B,E,MCjBS88I,gBAAbzuK,cACYyD,KAAAirK,WAA6B,IAAIr6J,IACjC5Q,KAAAkrK,eAAiC,IAAIt6J,IACrC5Q,KAAAmrK,cAAgC,IAAIv6J,IACpC5Q,KAAAorK,eAAiC,IAAIx6J,IAErC5Q,KAAAqrK,UAA4B,IAAIz6J,IAC/B5Q,KAAA0D,YAA8B,IAAIkN,G,CAK3C06J,YACI,IAAK,IAAIvvH,KAAO/7C,KAAKqrK,UACjB,GAAmB,GAAftvH,EAAI77C,QAAc,CAClB67C,EAAI77C,QAAU,EAEd,IACI67C,EAAIwvH,SACP,CACD,MAAO5wJ,GACHrjB,QAAQovB,IAAI/L,EACf,CACJ,CAEL3a,KAAKqrK,UAAU1gK,O,CAMnB6gK,aACI,IAAK,IAAIzvH,KAAO/7C,KAAKirK,WACjB,GAAmB,GAAflvH,EAAI77C,QACJ,IACI67C,EAAI0vH,UACP,CACD,MAAO9wJ,GACHrjB,QAAQovB,IAAI/L,EACf,C,CASb+wJ,iBACI,IAAK,IAAI3vH,KAAO/7C,KAAKkrK,eACjB,GAAmB,GAAfnvH,EAAI77C,QACJ,IACI67C,EAAI4vH,cACP,CACD,MAAOhxJ,GACHrjB,QAAQovB,IAAI/L,EACf,C,CASbixJ,gBACI,IAAK,IAAI7vH,KAAO/7C,KAAKmrK,cACjB,GAAmB,GAAfpvH,EAAI77C,QACJ,IACI67C,EAAI8vH,aACP,CACD,MAAOlxJ,GACHrjB,QAAQovB,IAAI/L,EACf,C,CASbmxJ,iBACI,IAAK,IAAI/vH,KAAO/7C,KAAKorK,eACjB,GAAmB,GAAfrvH,EAAI77C,QACJ,IACI67C,EAAIgwH,cACP,CACD,MAAOpxJ,GACHrjB,QAAQovB,IAAI/L,EACf,C,CASbqxJ,cACI,IAAK,IAAIjwH,KAAO/7C,KAAK0D,YACjB,IACIq4C,EAAI14C,UAAS,EAChB,CACD,MAAOsX,GACHrjB,QAAQovB,IAAI/L,EACf,CAEL3a,KAAK0D,YAAYiH,O,CAQrB7H,IAAI6mG,GACoB,GAAhBA,EAAKzpG,UACDypG,EAAK4hE,SACL5hE,EAAKzpG,QAAU,EACfF,KAAKqrK,UAAUvoK,IAAI6mG,IAGnBA,EAAKzpG,QAAU,GAGnBypG,EAAK8hE,UACLzrK,KAAKirK,WAAWnoK,IAAI6mG,GACpBA,EAAKgiE,cACL3rK,KAAKkrK,eAAepoK,IAAI6mG,GAExBA,EAAKkiE,aACL7rK,KAAKmrK,cAAcroK,IAAI6mG,GACvBA,EAAKoiE,cACL/rK,KAAKorK,eAAetoK,IAAI6mG,E,CAQhC1mG,OAAO0mG,GACiB,GAAhBA,EAAKzpG,UACLypG,EAAKzpG,QAAU,GAEfypG,EAAK8hE,UACLzrK,KAAKirK,WAAWrjD,OAAOje,GACvBA,EAAKgiE,cACL3rK,KAAKkrK,eAAetjD,OAAOje,GAE3BA,EAAKkiE,aACL7rK,KAAKmrK,cAAcvjD,OAAOje,GAC1BA,EAAKoiE,cACL/rK,KAAKorK,eAAexjD,OAAOje,E,CAOnCxmG,U,ECrGE,MAAO8oK,cAAczvF,OA+GvBjgF,cACI8V,QA3DJrS,KAAAygB,OAAgB,IAAI3Y,MAEZ9H,KAAUksK,WAAW,OAE7BlsK,KAAWmsK,YAAW,EAEtBnsK,KAAYosK,aAAW,EAEvBpsK,KAAc28C,gBAAY,EAE1B38C,KAAY0wG,aAAW,EAKvB1wG,KAAgBqsK,kBAAY,EAE5BrsK,KAAuBssK,yBAAY,EAEnCtsK,KAAAqvG,iBAA2B,IAAI1rG,OAEvB3D,KAAWusK,YAAW,OAEtBvsK,KAAUwsK,WAAW,UAErBxsK,KAAOysK,QAAW,MAElBzsK,KAAO0sK,QAAW,OAElB1sK,KAAQs9H,SAAW,QAE3Bt9H,KAAc2lI,eAAW,EAEjB3lI,KAAYuvF,aAAW,EAEvBvvF,KAAc2sK,eAAW,EAEzB3sK,KAAe4sK,gBAAW,EAE1B5sK,KAAA6sK,qBAA+B7xK,QAAQY,OAAOkxK,YAMtD9sK,KAAQ+sK,SAAoB,CAAC,EAAG,EAAG,EAAG,GAEtC/sK,KAASgtK,UAAW,GAGZhtK,KAAiBitK,mBAAY,EAE7BjtK,KAAiBktK,mBAAY,EAGrCltK,KAAgBnI,kBAAY,EAwJpBmI,KAAqBmtK,uBAAY,EAnJrC96J,MAAMmjG,cAAcx1G,KAAK80G,oBAEzB90G,KAAK63G,cAAe,EACpB73G,KAAK+xG,cAAe,EACpB/xG,KAAK8xG,UAAW,EAChB9xG,KAAKwB,QAAQpI,UAAUQ,mBAAmB,GAC1CoG,KAAKwB,QAAQpI,UAAUE,oBAAoB,GAC3C0G,KAAKotK,YAAa,EAClBptK,KAAKqtK,eAAgB,EAGrBrtK,KAAKnI,iBAAmBJ,OAAOI,iBAE/B,IAAI+D,EAAcZ,QAAQY,OAG1BA,EAAO4oI,iBAAiB,SAAS,KAC7BxkI,KAAKotK,YAAa,EAClBptK,KAAKmR,MAAMjG,MAAMoE,OACjBtP,KAAKmR,MAAMjG,MAAMsE,aAAa,IAElC5T,EAAO4oI,iBAAiB,QAAQ,KAC5BxkI,KAAKotK,YAAa,EAClBptK,KAAKmR,MAAMjG,MAAMmE,MACjBrP,KAAKmR,MAAMjG,MAAMsE,cACbxP,KAAKstK,iBAAiB3zC,MAAoB,aAAUtvH,OAAO28H,OAAQ,EAAK,IAIhF,IAAItvD,EAAQ,kBAAmB61F,EAAmB,mBAC9C/1H,EAAgB57C,EAAO47C,cACI,IAApBA,EAASg2H,QAChBD,EAAmB,mBACnB71F,EAAQ,wBAC6B,IAAvBlgC,EAASi2H,WACvBF,EAAmB,sBACnB71F,EAAQ,2BAC4B,IAAtBlgC,EAASk2H,UACvBH,EAAmB,qBACnB71F,EAAQ,0BACgC,IAA1BlgC,EAASm2H,eACvBJ,EAAmB,yBACnB71F,EAAQ,yBAGZ97E,EAAO47C,SAASgtF,iBAAiB+oC,GAAkB,KAChB,UAA3BvyK,QAAQw8C,SAASkgC,IACjB13E,KAAKqtK,eAAgB,EACjBrtK,KAAKstK,iBAAiB3zC,MAAoB,aAAUtvH,OAAO28H,OAAQ,IAEvEhnI,KAAKqtK,eAAgB,EAEzBrtK,KAAKqsK,iBAAmBrsK,KAAKqtK,cAC7BrtK,KAAKmR,MAAMjG,MAAMqE,kBAAkB,IAEvC3T,EAAO4oI,iBAAiB,UAAU,KAE9B,IAAIsoC,EAAmB9xK,QAAQY,OAAOkxK,YACnB,MAAfA,GAAuBA,GAAe9sK,KAAK6sK,sBAAwB7sK,KAAKstK,iBACvE3zC,MAAoB,aAAUtvH,OAAO28H,OAAQ,GAElDhnI,KAAK6sK,qBAAuBC,EAGxB9sK,KAAKstK,iBAGLtyK,QAAQw/C,WACRx6C,KAAK2sK,gBAAkB3xK,QAAQY,OAAOgyK,eAAiB5yK,QAAQw8C,SAAS0B,KAAKqD,cAAgBvhD,QAAQw8C,SAASkF,gBAAgBH,cAAgBvhD,QAAQY,OAAO6gD,aAE7Jz8C,KAAKssK,0BACLtsK,KAAKmR,MAAMjG,MAAMiD,aACjBnO,KAAK6tK,oBACR,IAILjyK,EAAO4oI,iBAAiB,qBAAsB3jH,IACtC7gB,KAAKssK,0BACLtsK,KAAKmR,MAAMjG,MAAMiD,aACjBnO,KAAK6tK,mBACR,IAGL7tK,KAAK6C,iBAAmB,IAAImoK,e,CAOxBsC,eACJ,OAAQtyK,QAAQ4+C,UAAY+pF,aAAakB,e,CAI7CjyB,UAAU30G,GACN+B,KAAKmsK,YAAcluK,EACnBoU,MAAMugG,UAAU30G,GAChB+B,KAAK6tK,kBAAiB,E,CAM1Bl7D,YAEI,OADA3yG,KAAK8tK,uBACEz7J,MAAMsgG,W,CAIjBO,WAAWj1G,GACP+B,KAAKosK,aAAenuK,EACpBoU,MAAM6gG,WAAWj1G,GACjB+B,KAAK6tK,kBAAiB,E,CAI1B56D,aAEI,OADAjzG,KAAK8tK,uBACEz7J,MAAM4gG,Y,CAIb38C,cAAUr4D,GACVoU,MAAMmjG,cAAcv3G,E,CAGpBq4D,gBAEA,OADIt2D,KAAKyxG,YAAYzxG,KAAK+0G,mBAClB/0G,KAAKq4D,WAAar4D,KAAKq4D,YAAcr4D,KAAK80G,kB,CAMlDi5D,gBACA,OAAO/tK,KAAKotK,U,CAMZ1U,mBACA,OAAO14J,KAAKqtK,a,CAIhBQ,iBAAiBrvH,GACTA,EACKx+C,KAAKmtK,wBACNntK,KAAKmtK,uBAAwB,EAC7BtyK,MAAMO,YAAYu3F,UAAU3yF,KAAMA,KAAK6tK,mBAI3C7tK,KAAKguK,cAAchzK,QAAQohD,YAAcphD,QAAQ4hD,WAAY5hD,QAAQuhD,aAAevhD,QAAQ4hD,W,CAIpGkxH,uBACQ9tK,KAAKmtK,uBACLntK,KAAK6tK,kB,CAQbG,cAAcC,EAAqBC,GAC/BluK,KAAKmtK,uBAAwB,EAG7B,IAAIxtF,GAAoB,EACxB,GAAI3/E,KAAKusK,cAAgBN,MAAMkC,cAE3BxuF,GADyBsuF,EAAcC,EAAe,EAAIjC,MAAMmC,gBAAkBnC,MAAMoC,qBAC9DruK,KAAKusK,aACjB,CAEV,IAAI1tK,EAAeqvK,EACnBA,EAAeD,EACfA,EAAcpvK,CACjB,CAELmB,KAAK28C,eAAiBgjC,EAEtB,IAAIp4D,EAAqBgwI,OAAOM,YAC5ByW,EAAmB/mJ,EAAOxoB,OAAOo6C,MACjC9vB,EAAcrpB,KAAKqvG,iBAAiB/qG,WACpCiqK,EAAoBvuK,KAAKwsK,WACzBpyG,EAAiB6zG,EAAcjuK,KAAKmsK,YACpC9xG,EAAiB6zG,EAAeluK,KAAKosK,aACrCt5F,EAAsB9yE,KAAKnI,iBAAmBo2K,EAAcjuK,KAAKmsK,YACjEv1D,EAAuB52G,KAAKnI,iBAAmBq2K,EAAeluK,KAAKosK,aACnEoC,EAAoBP,EACpBQ,EAAqBP,EACrBtxH,EAAqB5hD,QAAQ4hD,WAKjC,OAJA58C,KAAKoV,OAASpV,KAAKmsK,YACnBnsK,KAAKqV,QAAUrV,KAAKosK,aAGZmC,GACJ,KAAKtC,MAAMyC,cACPt0G,EAASC,EAAS,EAClBm0G,EAAYxuK,KAAKmsK,YACjBsC,EAAazuK,KAAKosK,aAClB,MACJ,KAAKH,MAAM0C,cACPv0G,EAASC,EAAS98D,KAAKwL,IAAIqxD,EAAQC,GACnCyY,EAAc07F,EAAYjxK,KAAKoB,MAAMqB,KAAKmsK,YAAc/xG,GACxDw8C,EAAe63D,EAAalxK,KAAKoB,MAAMqB,KAAKosK,aAAe/xG,GAC3D,MACJ,KAAK4xG,MAAM2C,eACPx0G,EAASC,EAAS98D,KAAKuL,IAAIsxD,EAAQC,GACnCm0G,EAAYjxK,KAAKoB,MAAMqB,KAAKmsK,YAAc/xG,GAC1Cq0G,EAAalxK,KAAKoB,MAAMqB,KAAKosK,aAAe/xG,GAC5C,MAMJ,KAAK4xG,MAAM4C,WACPz0G,EAASC,EAASzd,EAClBk2B,EAAcm7F,EACdr3D,EAAes3D,EACfluK,KAAKoV,OAAS64J,EAAcrxH,EAC5B58C,KAAKqV,QAAU64J,EAAetxH,EAC9B,MACJ,KAAKqvH,MAAM6C,kBACPz0G,EAASD,EACTp6D,KAAKqV,QAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe9zG,GACxD,MACJ,KAAK6xG,MAAM8C,mBACP30G,EAASC,EACTr6D,KAAKoV,OAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc5zG,GACrD,MACJ,KAAK4xG,MAAM+C,iBACFf,EAAcC,EAAiBluK,KAAKmsK,YAAcnsK,KAAKosK,cACxD/xG,EAASD,EACTp6D,KAAKqV,QAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe9zG,KAExDA,EAASC,EACTr6D,KAAKoV,OAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc5zG,IAEzD,MACJ,KAAK4xG,MAAMgD,wBACHhB,EAAcC,GACd7zG,EAASD,EACTp6D,KAAKqV,QAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe9zG,KAGxDC,EADAD,EAAS8zG,EAAeluK,KAAKmsK,YAE7BnsK,KAAKoV,OAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc7zG,GACrDp6D,KAAKqV,QAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe7zG,IAE5D,MACJ,KAAK4xG,MAAMiD,2BACHjB,EAAcC,GACd9zG,EAASC,EACTr6D,KAAKoV,OAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc5zG,KAIrDA,EADAD,EAAS6zG,EAAcjuK,KAAKosK,aAE5BpsK,KAAKoV,OAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc7zG,GACrDp6D,KAAKqV,QAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe7zG,IAKhEr6D,KAAKnI,mBACL22K,EAAY17F,EAAcm7F,EAC1BQ,EAAa73D,EAAes3D,GAIhC9zG,GAAUp6D,KAAKo6D,OACfC,GAAUr6D,KAAKq6D,OACA,IAAXD,GAA2B,IAAXC,EAChBr6D,KAAKs2D,UAAUhyD,YAEftE,KAAKs2D,UAAU1yD,EAAI5D,KAAKmvK,YAAY/0G,GAAUo0G,EAAY17F,IAC1D9yE,KAAKs2D,UAAUvyD,EAAI/D,KAAKmvK,YAAY90G,GAAUo0G,EAAa73D,KAI/DrvF,EAAOxU,KAAK+/D,EAAa8jC,GACzB8zD,UAAUI,gBAAgBh4F,EAAa8jC,GACvCvtF,EAAI5kB,MAAM+pK,EAAY17F,EAAcl2B,EAAY6xH,EAAa73D,EAAeh6D,GAGxE58C,KAAK0sK,UAAYT,MAAMmD,WAAYpvK,KAAKygB,OAAOvhB,EAAI,EAC9Cc,KAAK0sK,UAAYT,MAAMoD,YAAarvK,KAAKygB,OAAOvhB,EAAI+uK,EAAcO,EACtExuK,KAAKygB,OAAOvhB,EAAgC,IAA3B+uK,EAAcO,GAAmB5xH,EAGnD58C,KAAKysK,UAAYR,MAAMqD,UAAWtvK,KAAKygB,OAAOthB,EAAI,EAC7Ca,KAAKysK,UAAYR,MAAMsD,aAAcvvK,KAAKygB,OAAOthB,EAAI+uK,EAAeO,EACxEzuK,KAAKygB,OAAOthB,EAAkC,IAA7B+uK,EAAeO,GAAoB7xH,EAGzD58C,KAAKygB,OAAOvhB,EAAI3B,KAAKoB,MAAMqB,KAAKygB,OAAOvhB,GACvCc,KAAKygB,OAAOthB,EAAI5B,KAAKoB,MAAMqB,KAAKygB,OAAOthB,GACvCkqB,EAAI7kB,UAAUxE,KAAKygB,OAAOvhB,EAAGc,KAAKygB,OAAOthB,GACrCa,KAAK2sK,gBAAgBtjJ,EAAI7kB,UAAU,EAAGxE,KAAK2sK,gBAG/C3sK,KAAK0wG,aAAe,EAChB/wB,IACI3/E,KAAKusK,cAAgBN,MAAMoC,mBAC3BhlJ,EAAI3kB,OAAOnH,KAAKC,GAAK,GACrB6rB,EAAI7kB,UAAU0pK,EAAetxH,EAAY,GACzC58C,KAAK0wG,aAAe,KAEpBrnF,EAAI3kB,QAAQnH,KAAKC,GAAK,GACtB6rB,EAAI7kB,UAAU,EAAGypK,EAAcrxH,GAC/B58C,KAAK0wG,cAAgB,KAI7BrnF,EAAIzlB,EAAI5D,KAAKmvK,YAAY9lJ,EAAIzlB,GAC7BylB,EAAItlB,EAAI/D,KAAKmvK,YAAY9lJ,EAAItlB,GAC7BslB,EAAIrlB,GAAKhE,KAAKmvK,YAAY9lJ,EAAIrlB,IAC9BqlB,EAAIplB,GAAKjE,KAAKmvK,YAAY9lJ,EAAIplB,IAE9BoO,MAAMmjG,cAAcx1G,KAAKs2D,WACzBg4G,EAAYp9D,gBAAkBo9D,EAAYkB,sBAAwBlB,EAAYmB,kBAAoBnB,EAAYoB,mBAAqBpB,EAAYqB,iBAAmB,cAClKrB,EAAYh4G,UAAYg4G,EAAYj9D,gBAAkBi9D,EAAYsB,YAActB,EAAYuB,aAAevB,EAAYwB,WAAa,UAAYzmJ,EAAIrrB,WAAa,IACjKswK,EAAYjmK,MAAQyqE,EACpBw7F,EAAYhmK,OAASsuG,EAEjB52G,KAAK2sK,gBAAgBtjJ,EAAI7kB,UAAU,GAAIxE,KAAK2sK,gBAChDtjJ,EAAI7kB,UAAU1F,SAASwvK,EAAY72G,OAAS,EAAG34D,SAASwvK,EAAYngJ,MAAQ,GAC5EnuB,KAAKo2G,SAAU,EACfp2G,KAAK2kG,UAAY9uD,YAAYqB,cAE7Bl3C,KAAKmR,MAAMjG,MAAMkD,O,CAUrB2hK,sBAAsB9B,EAAqBC,EAAsB3B,GAE7D,IAAI5sF,GAAoB,EACxB,GAAc4sF,IAAgBN,MAAMkC,cAEhCxuF,GADyBsuF,EAAcC,EAAe,EAAIjC,MAAMmC,gBAAkBnC,MAAMoC,qBACpD9B,GACtB,CAEV,IAAI1tK,EAAeqvK,EACnBA,EAAeD,EACfA,EAAcpvK,CACjB,CAELmB,KAAK28C,eAAiBgjC,EAEG43E,OAAOM,YACF94J,OAAOo6C,MACnBn5C,KAAKqvG,iBAA0B7nG,QAAQlD,WACzD,IAAIiqK,EAAoBvuK,KAAKwsK,WACzBpyG,EAAiB6zG,EAAcjuK,KAAKmsK,YACpC9xG,EAAiB6zG,EAAeluK,KAAKosK,aACrCt5F,EAAsB9yE,KAAKnI,iBAAmBo2K,EAAcjuK,KAAKmsK,YACjEv1D,EAAuB52G,KAAKnI,iBAAmBq2K,EAAeluK,KAAKosK,aACnEoC,EAAoBP,EACpBQ,EAAqBP,EACAlzK,QAAQ4hD,WACjC,IAAcxnC,EAASpV,KAAKmsK,YACd92J,EAAUrV,KAAKosK,aAG7B,OAAQmC,GACJ,KAAKtC,MAAMyC,cACPt0G,EAASC,EAAS,EAClBm0G,EAAYxuK,KAAKmsK,YACjBsC,EAAazuK,KAAKosK,aAClB,MACJ,KAAKH,MAAM0C,cACPv0G,EAASC,EAAS98D,KAAKwL,IAAIqxD,EAAQC,GACnCyY,EAAc07F,EAAYjxK,KAAKoB,MAAMqB,KAAKmsK,YAAc/xG,GACxDw8C,EAAe63D,EAAalxK,KAAKoB,MAAMqB,KAAKosK,aAAe/xG,GAC3D,MACJ,KAAK4xG,MAAM2C,eACPx0G,EAASC,EAAS98D,KAAKuL,IAAIsxD,EAAQC,GACnCm0G,EAAYjxK,KAAKoB,MAAMqB,KAAKmsK,YAAc/xG,GAC1Cq0G,EAAalxK,KAAKoB,MAAMqB,KAAKosK,aAAe/xG,GAC5C,MACJ,KAAK4xG,MAAM4C,WACPz0G,EAASC,EAAS,EACpBjlD,EAAS09D,EAAcm7F,EACvB54J,EAAUuhG,EAAes3D,EACvB,MACJ,KAAKjC,MAAM6C,kBACPz0G,EAASD,EACX/kD,EAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe9zG,GACjD,MACJ,KAAK6xG,MAAM8C,mBACP30G,EAASC,EACXjlD,EAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc5zG,GAC9C,MACJ,KAAK4xG,MAAM+C,iBACFf,EAAcC,EAAiBluK,KAAKmsK,YAAcnsK,KAAKosK,cACxD/xG,EAASD,EACd/kD,EAAUuhG,EAAer5G,KAAKoB,MAAMuvK,EAAe9zG,KAE9CA,EAASC,EACdjlD,EAAS09D,EAAcv1E,KAAKoB,MAAMsvK,EAAc5zG,IAUvD,OALIr6D,KAAKnI,mBACL22K,EAAY17F,EAAcm7F,EAC1BQ,EAAa73D,EAAes3D,GAGzB,CACH8B,WAAY56J,EACZ66J,YAAa56J,EACby9D,YAAaA,EACb8jC,aAAcA,EACdx8C,OAAQA,GAAUo0G,EAAY17F,GAC9BzY,OAAQA,GAAUo0G,EAAa73D,G,CAK/Bu4D,YAAYlxK,GAChB,OAAIV,KAAKglE,IAAItkE,GAAS,KAAiB,EACnCV,KAAKglE,IAAI,EAAItkE,GAAS,KAAcA,EAAQ,EAAI,GAAK,EAClDA,C,CAgBPswK,gBACA,OAAOvuK,KAAKwsK,U,CAGZ+B,cAAUtwK,GACV+B,KAAKwsK,WAAavuK,EAClB+B,KAAK6tK,kBAAiB,E,CAWtBqC,aAEA,OADAlwK,KAAK8tK,uBACE9tK,KAAK0sK,O,CAGZwD,WAAOjyK,GACP+B,KAAK0sK,QAAUzuK,EACf+B,KAAK6tK,kBAAiB,E,CAWtBsC,aAEA,OADAnwK,KAAK8tK,uBACE9tK,KAAKysK,O,CAGZ0D,WAAOlyK,GACP+B,KAAKysK,QAAUxuK,EACf+B,KAAK6tK,kBAAiB,E,CAItBxwC,cACA,OAAOr9H,KAAKs9H,Q,CAGZD,YAAQp/H,GACR+B,KAAKs9H,SAAWr/H,EAEZ+B,KAAK+sK,SADL9uK,EACgByzC,WAAWhqC,OAAOzJ,GAAO0zC,SAEzB,KAGhB4lH,OAAOhwI,OAAO4xB,MAAMi3H,WADpBnyK,GAGiC,M,CAKrC4wG,aACA,OAAOtxG,KAAKoB,MAAMglI,aAAa90B,OAAS7uG,KAAK2wG,a,CAI7C5B,aACA,OAAOxxG,KAAKoB,MAAMglI,aAAa50B,OAAS/uG,KAAK4wG,a,CAIjDxB,gBACI,OAAOtnG,MAAMD,KAAK9B,MAAM/F,KAAK6uG,OAAQ7uG,KAAK+uG,O,CAI1C4B,mBAEA,OADA3wG,KAAK8tK,uBACE9tK,KAAKq4D,WAAar4D,KAAKq4D,WAAWnyD,YAAc,C,CAIvD0qG,mBAEA,OADA5wG,KAAK8tK,uBACE9tK,KAAKq4D,WAAar4D,KAAKq4D,WAAWjyD,YAAc,C,CAWvDiqK,iBACA,OAAOrwK,KAAKusK,W,CAGZ8D,eAAWpyK,GACX+B,KAAKusK,YAActuK,C,CAIvBivF,QAAQ3hF,EAAesqC,YAAYqB,eAC/Bl3C,KAAK2kG,UAAYp5F,C,CAIrBmnG,cAAcnnG,EAAesqC,YAAYqB,e,CAIzCghH,QAII,OAHAl4J,KAAKktK,kBAAoBltK,KAAKitK,kBAC9BjtK,KAAKitK,mBAAoB,EACzBjtK,KAAK0wC,OAAO6mH,OAAOrkG,SAAU,EAAG,IACzB,C,CAIXo9G,aACI,OAAOtwK,KAAK4sK,e,CAOhB2D,wBACI,OAAOv1K,QAAQmhD,MAAQn8C,KAAK4sK,e,CAI5Bx2D,YAAQn4G,GACJ+B,KAAKo2G,UAAYn4G,IACjBoU,MAAMikG,YAAYr4G,GACDs5J,OAAOM,YAAY94J,OAAOo6C,MACrCq3H,WAAavyK,EAAQ,UAAY,S,CAO3Cm4G,cACA,OAAO/jG,MAAM+jG,O,CAmBjB1lE,OAAOlpB,EAAkBtoB,EAAWC,GAChC,GAAI5D,QAAQI,QAER,YADAqE,KAAKywK,eAAejpJ,EAAStoB,EAAGC,GAIpC,IAAIiM,EAAgBvQ,MAAMM,MAAM0tK,OAAS,IACzC,GAAI7oK,KAAKksK,aAAeD,MAAMyE,YAAa,CACvC,IAAIv0H,EAAcnhD,QAAQmhD,MAC1B,GAAIA,EAAMn8C,KAAK4sK,gBAAkB,IAC7B,OACJ5sK,KAAK4sK,gBAAkBzwH,CAC1B,KAAM,CACH,IAAKn8C,KAAK63D,SASN,OARA73D,KAAKuvF,oBACDvvF,KAAKuvF,aAAe,GAAM,IAC1B26E,UAAUntG,EAAEisG,UACZtrH,KAAKqE,YACL8J,WAAW9J,UAAYrE,KAAKqE,UAC5B/hD,KAAK2wK,iBACL3wK,KAAK4wK,kBAIb5wK,KAAK4sK,gBAAkB5xK,QAAQmhD,MAC/B0P,WAAWC,SAAW9rD,KAAK4sK,eAC9B,CAED5sK,KAAKuvF,eACL,IACIshF,GADoB7wK,KAAKksK,aAAeD,MAAM6E,YAAiB9wK,KAAK4sK,gBAAkB5sK,KAAK2lI,eAAkB,IAAQsmC,MAAM8E,WAAa9E,MAAM+E,WAAchxK,KAAKksK,cAC5HD,MAAM+E,WAC3CC,EAAyBjxK,KAAKuvF,aAAe,GAAM,EAGvD,GADA7xC,KAAKgB,YAAcmyH,EACdA,GAAeI,EAApB,CAOA,GAJA/G,UAAUntG,EAAEisG,UACZtrH,KAAKqE,YACL8J,WAAW9J,UAAYrE,KAAKqE,UAExB/hD,KAAKqsK,iBAAkB,CACvB,IAAK,IAAI5tK,EAAI,EAAG+G,EAAIxF,KAAKgtK,UAAU/wK,OAAQwC,EAAI+G,EAAG/G,IACxCuB,KAAKgtK,UAAUvuK,GAAIuqK,QAAQ59J,GACrCpL,KAAK2wK,iBAELnpJ,EAAQ7c,QAER3K,KAAK6C,iBAAiB+oK,gBAEtBv5J,MAAMq+B,OAAOlpB,EAAStoB,EAAGC,GAEzBu+C,KAAKhN,OAAOlpB,EAAStoB,EAAGC,GAExB8sK,MAAMthK,MAAM3K,KAAKs9H,UAEjB91G,EAAQyT,QAERj7B,KAAK6C,iBAAiBipK,iBAEtB5oE,mBAAmB5mG,UAAY4mG,mBAAmB3M,cAAc0N,YACnE,MAEGjkG,KAAK2wK,iBAET3wK,KAAK4wK,eA9BD,C,CAiCRH,eAAejpJ,EAAkBtoB,EAAWC,GAGxC,GAFAa,KAAKuvF,eAEAvvF,KAAK63D,SAAV,CAiBA,GAPA73D,KAAK4sK,gBAAkB5xK,QAAQmhD,MAE/B+tH,UAAUntG,EAAEisG,UACZtrH,KAAKqE,YACL8J,WAAW9J,UAAYrE,KAAKqE,UAGxB/hD,KAAKqsK,iBAAkB,CACvB,IAAK,IAAI5tK,EAAY,EAAG+G,EAAYxF,KAAKgtK,UAAU/wK,OAAQwC,EAAI+G,EAAG/G,IACxDuB,KAAKgtK,UAAUvuK,GAAIuqK,UAE7BhpK,KAAK2wK,iBAEL3wK,KAAK6C,iBAAiB+oK,gBAEtBpkJ,EAAQ7c,QACR0H,MAAMq+B,OAAOlpB,EAAStoB,EAAGC,GACzBu+C,KAAKhN,OAAOlpB,EAAStoB,EAAGC,GAExBa,KAAK6C,iBAAiBipK,gBACzB,MAEG9rK,KAAK2wK,iBAGL3wK,KAAKqsK,mBACLJ,MAAMthK,MAAM3K,KAAKs9H,UACjB91G,EAAQyT,QACRioE,mBAAmB5mG,UAAY4mG,mBAAmB3M,cAAc0N,cAEpEjkG,KAAK4wK,eA/BJ,MARO5wK,KAAKuvF,aAAe,GAAM,IAC1B26E,UAAUntG,EAAEisG,UACZtrH,KAAKqE,YACL8J,WAAW9J,UAAYrE,KAAKqE,UAC5B/hD,KAAK2wK,iBACL3wK,KAAK4wK,gB,CAqCTD,iBACJ3wK,KAAK6C,iBAAiByoK,YACtBtrK,KAAK6C,iBAAiB2oK,aACtBxrK,KAAK6C,iBAAiB6oK,iBACtB1rK,KAAK6C,iBAAiBmpK,a,CAGlB4E,gBACJ/1K,MAAMO,YAAY4tK,UAClBnuK,MAAMQ,aAAa2tK,UACnBnuK,MAAMM,MAAM6tK,S,CAOZkI,sBAAkBjzK,GAClB,IAAIu5C,EAAgBx8C,QAAQw8C,SACxBjwB,EAAcgwI,OAAOhwI,OACrBtpB,GACAspB,EAAOi9G,iBAAiB,YAAaxkI,KAAKmxK,oBAC1C5pJ,EAAOi9G,iBAAiB,aAAcxkI,KAAKmxK,oBAC3C35H,EAASgtF,iBAAiB,mBAAoBxkI,KAAKoxK,oBACnD55H,EAASgtF,iBAAiB,sBAAuBxkI,KAAKoxK,oBACtD55H,EAASgtF,iBAAiB,yBAA0BxkI,KAAKoxK,oBACzD55H,EAASgtF,iBAAiB,qBAAsBxkI,KAAKoxK,sBAErD7pJ,EAAO8pJ,oBAAoB,YAAarxK,KAAKmxK,oBAC7C5pJ,EAAO8pJ,oBAAoB,aAAcrxK,KAAKmxK,oBAC9C35H,EAAS65H,oBAAoB,mBAAoBrxK,KAAKoxK,oBACtD55H,EAAS65H,oBAAoB,sBAAuBrxK,KAAKoxK,oBACzD55H,EAAS65H,oBAAoB,yBAA0BrxK,KAAKoxK,oBAC5D55H,EAAS65H,oBAAoB,qBAAsBrxK,KAAKoxK,oB,CAI5DlkD,gBACA,OAAK3xH,QAAQI,QAGKqE,KAAOsxK,iBAFdtxK,KAAKksK,U,CAMhBh/C,cAAUjvH,GACV,GAAK1C,QAAQI,QAEN,CACH,IAAImI,EAAgBlI,OAASC,MAC7B,OAAQoC,GACJ,KAAKguK,MAAM8E,WACPjtK,EAAEsmH,OAAOmnD,YAAY,IACrB,MACJ,KAAKtF,MAAM6E,YACPhtK,EAAEsmH,OAAOonD,cAAc,KACvB,MACJ,KAAKvF,MAAM+E,WACPltK,EAAEsmH,OAAOqnD,cAAa,GACtB,MACJ,KAAKxF,MAAMyE,YACP5sK,EAAEsmH,OAAOmnD,YAAY,GAGtBvxK,KAAOsxK,iBAAmBrzK,CACpC,MAlBG+B,KAAKksK,WAAajuK,C,CAsBlBkzK,qBACJ,IAAIzxH,EAAe1kD,QAAQw8C,SAASkF,gBAChCgD,EAAQgyH,kBACRhyH,EAAQgyH,oBACDhyH,EAAQiyH,qBACfjyH,EAAQiyH,uBACDjyH,EAAQkyH,wBACflyH,EAAQkyH,0BACDlyH,EAAQmyH,qBACfnyH,EAAQmyH,qB,CAKRT,qBACJpxK,KAAKmR,MAAMjG,MAAM8E,mB,CAIrB8hK,iBACI,IAAIt6H,EAAgBx8C,QAAQw8C,SACxBA,EAASs6H,eACTt6H,EAASs6H,iBACFt6H,EAASu6H,oBAChBv6H,EAASu6H,sBACFv6H,EAASw6H,sBAChBx6H,EAASw6H,sB,CAKjBl4G,kBACI,OAAO95D,KAAKktK,iB,CAIhBr+F,mBACI7uE,KAAKitK,mBAAoB,C,EAz7BtBhB,MAAayC,cAAW,UAExBzC,MAAcgG,eAAW,WAEzBhG,MAAa0C,cAAW,UAExB1C,MAAc2C,eAAW,WAEzB3C,MAAU4C,WAAW,OAErB5C,MAAiB6C,kBAAW,aAE5B7C,MAAkB8C,mBAAW,cAE7B9C,MAAgB+C,iBAAW,YAE3B/C,MAAuBgD,wBAAW,mBAClChD,MAA0BiD,2BAAW,sBAGrCjD,MAAUmD,WAAW,OAErBnD,MAAWoD,YAAW,QAEtBpD,MAAYiG,aAAW,SAEvBjG,MAASqD,UAAW,MAEpBrD,MAAYkG,aAAW,SAEvBlG,MAAYsD,aAAW,SAGvBtD,MAAWkC,YAAW,OAEtBlC,MAAiBoC,kBAAW,aAE5BpC,MAAemC,gBAAW,WAG1BnC,MAAU8E,WAAW,OAErB9E,MAAU+E,WAAW,OAErB/E,MAAW6E,YAAW,QAEtB7E,MAAWyE,YAAW,QAgqBtBzE,MAAKthK,MAAa,SAAU1M,GAE/BlD,QAAQ4rF,oBACRv9D,cAAcM,kBAAoB5f,OAAO+Y,aAAa4uE,aAAY,GAClE,IAAIh3D,EAAe88H,OAAO/vI,QAEtB1jB,EAAoC,GAAxB22B,EAAI45B,SAAS/6C,SAAgB7hB,OAAOe,sBAAyBk5C,WAAWhqC,OAAOzJ,GAAO0zC,SAAW92C,MAAMS,MAAMyxK,SACzHjpK,EACA22B,EAAIi3D,QAAQ5tF,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAEhC22B,EAAIi3D,QAAQ,EAAG,EAAG,EAAG,GACzBtoE,cAAcze,OAClB,E,MChxBSynK,mBAET1hI,OAAO1iB,EAAqByM,EAAcpyB,EAAeC,EAAgBwkF,GACrE,IAAIxiD,EAAuBW,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GACrEloB,KAAKqyK,cAAc/nI,EAAawiD,EAAQ9+D,EAAG3lB,MAAO2lB,EAAG1lB,QACrDmyB,EAAI8V,WAAWviB,EAAI,EAAG,EAAG3lB,EAAOC,EAAQ3E,OAAOiE,MAAMtD,WAAYgmC,E,CAGrE+nI,cAAcvpI,EAAiBgkD,EAAoB7+D,EAAWC,GAC1D4a,EAAOqC,QAAQroC,IAAIurC,OAAOh/B,MAC1B,IAAI85D,EAAgBrgC,EACpBspI,mBAAmBE,SAAS,GAAKrkJ,EAAGmkJ,mBAAmBE,SAAS,GAAKpkJ,EACrEi7C,EAAGopG,SAAWH,mBAAmBE,SACjC,IAAIE,EAAgB1lF,EAAO90B,SAAW,EAClCy6G,EAAiBD,EAAQA,EAC7B1lF,EAAO4lF,2BAA2B,GAAK5lF,EAAO90B,SAC9C80B,EAAO4lF,2BAA2B,GAAKD,EACvC3lF,EAAO4lF,2BAA2B,GAAK,EAAMD,EAC7C3lF,EAAO4lF,2BAA2B,GAAK,GAAO,EAAMn1K,KAAKC,GAAKi1K,GAC9DtpG,EAAGupG,2BAA6B5lF,EAAO4lF,0B,EAlB5BN,mBAAAE,SAAkB,IAAIjhK,MAAM,GCLzC,MAAOshK,mBAAmBtkI,OAY5B9xC,YAAYy7D,EAAmB,GAC3B3lD,QATJrS,KAA0B0yK,2BAAU,GAUhC1yK,KAAKg4D,SAAWA,EAChBh4D,KAAKywC,UAAY,IAAI2hI,kB,CAQrB7mK,WACA,OAAO8iC,OAAOh/B,I,CAGlBujK,+BACS5yK,KAAK6yK,uBACN7yK,KAAK6yK,qBAAuB,IAAIx3J,aAAa,IAGjD,IAAIm3J,EAAgBxyK,KAAKg4D,SAAW,EAChCy6G,EAAiBD,EAAQA,EAK7B,OAJAxyK,KAAK6yK,qBAAqB,GAAK7yK,KAAKg4D,SACpCh4D,KAAK6yK,qBAAqB,GAAKJ,EAC/BzyK,KAAK6yK,qBAAqB,GAAK,EAAMJ,EACrCzyK,KAAK6yK,qBAAqB,GAAK,GAAO,EAAMt1K,KAAKC,GAAKi1K,GAC/CzyK,KAAK6yK,oB,QCnCPC,mBACJT,cAAcvpI,EAAiB7a,EAAWC,EAAWhsB,GAC5D4mC,EAAOqC,QAAQroC,IAAIZ,EAAKqJ,MACxB,IAAI49D,EAAgBrgC,EACpBqgC,EAAG4pG,YAAc7wK,EAAK8wK,cACtB,IAAIC,EAAa/wK,EAAKgxK,cACtBD,EAAM,GAAKhlJ,EAAGglJ,EAAM,GAAK/kJ,EACzBi7C,EAAGgqG,YAAcF,EACjB9pG,EAAGiqG,QAAUlxK,EAAKmxK,U,CAEnB3iI,OAAO1iB,EAAqByM,EAAcpyB,EAAeC,EAAgBwkF,GACxE,IAAI7+D,EAAY5lB,EAAO6lB,EAAY5lB,EAC/BgrK,EAAkBroI,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GAChEloB,KAAKqyK,cAAciB,EAAQrlJ,EAAGC,EAAG4+D,GACjC,IAAI/9C,EAAgB9D,QAAQvjC,OAAOuuB,gBAAgB/N,UAAW,GAC1DstC,EAAe7xD,OAAOkE,KAAKvD,WAC/Bm2B,EAAI8V,WAAWviB,EAAI,EAAG,EAAGC,EAAGC,EAAGsnC,EAAM89G,GACrC74I,EAAI8V,WAAWviB,EAAI,EAAG,EAAGC,EAAGC,EAAGsnC,EAAMzmB,E,EClBjC,MAAOwkI,mBAAmBllI,OAwB5B9xC,YAAYsB,EAAeo+J,EAAe,EAAGuX,EAAe,EAAGC,EAAe,GAC1EphK,QAtBIrS,KAAA64H,UAA0B,IAAIx9G,aAAa,GAEnDrb,KAAAgzK,cAAuB,IAAI3hK,MAAM,GAEjCrR,KAAakzK,cAAU,CAAC,EAAG,EAAG,EAAG,GAmB7BlzK,KAAKo0C,OAAS,IAAI1C,WAAW7zC,GAAS,QAEtCmC,KAAKi8J,KAAO1+J,KAAKwL,IAAIkzJ,EAAM,IAC3Bj8J,KAAKwzK,KAAOA,EACZxzK,KAAKyzK,KAAOA,EACZzzK,KAAKgzK,cAAc,GAAKhzK,KAAKgzK,cAAc,GAAKhzK,KAAKi8J,KAAMj8J,KAAKgzK,cAAc,GAAKQ,EAAMxzK,KAAKgzK,cAAc,IAAMS,EAClHzzK,KAAKywC,UAAY,IAAIqiI,kB,CAQrBvnK,WACA,OAAOonK,WAAWpkI,I,CAIlBklI,WACA,OAAOzzK,KAAK64H,UAAU,E,CAItB46C,SAAKx1K,GACL+B,KAAK64H,UAAU,GAAK56H,EACpB+B,KAAKgzK,cAAc,IAAM/0K,C,CAIzBu1K,WACA,OAAOxzK,KAAK64H,UAAU,E,CAItB26C,SAAKv1K,GACL+B,KAAK64H,UAAU,GAAK56H,EACpB+B,KAAKgzK,cAAc,GAAK/0K,C,CAIxBJ,YACA,OAAOmC,KAAKo0C,OAAOxC,Q,CAInB/zC,UAAMI,GACN+B,KAAKo0C,OAAS,IAAI1C,WAAWzzC,E,CAIjCo1K,WACI,OAAOrzK,KAAKo0C,OAAOzC,Q,CAInBsqH,WACA,OAAOj8J,KAAK64H,UAAU,E,CAItBojC,SAAKh+J,GACL+B,KAAK64H,UAAU,GAAK56H,EACpB+B,KAAKgzK,cAAc,GAAKhzK,KAAKgzK,cAAc,GAAK/0K,C,CAGpDy1K,iBACS1zK,KAAK2zK,gBACN3zK,KAAK2zK,cAAgB,IAAIt4J,aAAa,IAG1C,IAAIxd,EAAemC,KAAKqzK,WAKxB,OAJArzK,KAAK2zK,cAAc,GAAK91K,EAAM,GAC9BmC,KAAK2zK,cAAc,GAAK91K,EAAM,GAC9BmC,KAAK2zK,cAAc,GAAK91K,EAAM,GAC9BmC,KAAK2zK,cAAc,GAAK91K,EAAM,GACvBmC,KAAK2zK,a,CAEhBC,qBAQI,OAPK5zK,KAAK6zK,oBACN7zK,KAAK6zK,kBAAoB,IAAIx4J,aAAa,IAG9Crb,KAAK6zK,kBAAkB,GAAK7zK,KAAK6zK,kBAAkB,GAAK7zK,KAAKi8J,KAC7Dj8J,KAAK6zK,kBAAkB,GAAK7zK,KAAKwzK,KACjCxzK,KAAK6zK,kBAAkB,GAAK7zK,KAAKyzK,KAC1BzzK,KAAK6zK,iB,CAEhBC,qBAMI,OALK9zK,KAAK+zK,oBACN/zK,KAAK+zK,kBAAoB,IAAI14J,aAAa,IAG9Crb,KAAK+zK,kBAAkB,GAAK,EACrB/zK,KAAK+zK,iB,ECzHd,MAAOC,qBAAqBljK,gBAAlCvU,c,oBAgBIyD,KAASi0K,WAAY,C,CASjBC,WAAO94J,G,CAIP84J,aACA,OAAO,C,CAMP//F,eACA,OAAO,C,CAMPq3B,eACA,OAAO,C,CAMXwN,O,CAOA1zC,OACQtlE,KAAKm0K,iBAAiBn0K,KAAKm0K,gBAAgBhpE,SAAQ,E,CAM3DuC,Q,CAMAQ,S,CAMUkmE,cAAc5mE,GAChBA,GACAA,EAAQrC,SAAQ,E,ECvEtB,MAAOkpE,0BAA0BL,aAUnCz3K,YAAYkoH,GACRpyG,QANIrS,KAAMs0K,OAAqB,KAO/Bt0K,KAAKu0K,OAASv0K,KAAKw0K,QAAQrqH,KAAKnqD,MAChCA,KAAK45G,YAAc55G,KAAKy0K,aAAatqH,KAAKnqD,MAC1CykH,EAAM+f,iBAAiB,QAASxkI,KAAKu0K,QACrCv0K,KAAKs0K,OAAS7vD,EACdzkH,KAAK00K,KAAOjwD,EAAM7hF,G,CAGd4xI,QAAQj5D,GACZ,GAAkB,GAAdv7G,KAAK20K,MAOL,OANI30K,KAAKm0K,kBACLt5K,MAAMO,YAAYqP,KAAK,GAAIzK,KAAMA,KAAKo0K,cAAe,CAACp0K,KAAKm0K,kBAAkB,GAC7En0K,KAAKm0K,gBAAkB,MAE3Bn0K,KAAKslE,YACLtlE,KAAKmR,MAAMyjK,MAAUnmK,UAGrBzO,KAAK20K,MAAQ,GACb30K,KAAK20K,QAET30K,KAAK6tG,UAAY,EACjB7tG,KAAKg5G,M,CAGDy7D,eAEJ,GADIz0K,KAAKs0K,QAAQt0K,KAAKs0K,OAAOjD,oBAAoB,UAAWrxK,KAAK45G,cAC7D55G,KAAKi0K,UACT,IACIj0K,KAAKs0K,OAAOO,YAAc70K,KAAK6tG,UAC/B7yG,QAAQ+hD,UAAUpD,YAAY35C,KAAKs0K,QACnCt0K,KAAKs0K,OAAOt7D,MACf,CAAC,MAAOn4F,GAEL7gB,KAAKmR,MAAMyjK,MAAUpmK,MACxB,C,CAOLwqG,OACIh5G,KAAKi0K,WAAY,EACjB,IACIj0K,KAAKs0K,OAAOQ,aAAeC,aAAaD,aACxC90K,KAAKs0K,OAAOO,YAAc70K,KAAK6tG,SAClC,CAAC,MAAOhtF,GAEL,YADA7gB,KAAKs0K,OAAO9vC,iBAAiB,UAAWxkI,KAAK45G,YAEhD,CAGD,GAFAm7D,aAAaC,WAAWh1K,MACxBhF,QAAQ+hD,UAAUpD,YAAY35C,KAAKs0K,QAC/B,SAAUt0K,KAAKs0K,OAAQ,CACvB,IAAItlI,EAAIhvC,KAAKs0K,OAAOt7D,OAChBhqE,GACAA,EAAE24E,OAAM9mG,OACf,C,CASDszD,eACA,OAAKn0E,KAAKs0K,OAEHt0K,KAAKs0K,OAAOO,YADR,C,CAQXrpE,eACA,OAAKxrG,KAAKs0K,OAEHt0K,KAAKs0K,OAAO9oE,SADR,C,CAQflmC,OAEIjzD,MAAMizD,OACNtlE,KAAKi0K,WAAY,EACjBc,aAAaE,cAAcj1K,MAC3BA,KAAKm0K,gBAAkB,KAClBn0K,KAAKs0K,SAEN,UAAWt0K,KAAKs0K,QAEZ/4K,QAAQI,SACPqE,KAAKs0K,OAAehvG,OAE7BtlE,KAAKs0K,OAAO5mE,QACZ1tG,KAAKs0K,OAAOjD,oBAAoB,QAASrxK,KAAKu0K,QAC9Cv0K,KAAKs0K,OAAOjD,oBAAoB,UAAWrxK,KAAK45G,aAE3C/+G,MAAMG,QAAQq/C,MACXr6C,KAAKs0K,QAAUY,WAAWC,aAC1Br5K,KAAKW,QAAQ,SAAWuD,KAAKmU,IAAKnU,KAAKs0K,QAG/Ct5K,QAAQo6K,cAAcp1K,KAAKs0K,QAC3Bt0K,KAAKs0K,OAAS,KACVS,aAAaM,kBACbN,aAAaO,kBAAkBt1K,KAAKmU,K,CAK5Cu5F,QACI1tG,KAAKi0K,WAAY,EACjBc,aAAaE,cAAcj1K,MACtBA,KAAKs0K,SAEN,UAAWt0K,KAAKs0K,QAChBt0K,KAAKs0K,OAAO5mE,QACZqnE,aAAaM,kBACbN,aAAaO,kBAAkBt1K,KAAKmU,K,CAK5C+5F,SACI,IAAIuW,EAAQzkH,KAAKs0K,OACZ7vD,IAELzkH,KAAKi0K,WAAY,EACO,GAApBxvD,EAAM8wD,aACN9wD,EAAM7hF,IAAM5iC,KAAK00K,KACjBjwD,EAAM+f,iBAAiB,UAAWxkI,KAAK45G,aACvC6K,EAAMx8F,QAEV8sJ,aAAaC,WAAWh1K,MACpB,SAAUykH,GACVA,EAAMzL,O,CAUVk7D,WAAO94J,GACFpb,KAAKs0K,SACVt0K,KAAKs0K,OAAOJ,OAAS94J,E,CASrB84J,aACA,OAAKl0K,KAAKs0K,OACHt0K,KAAKs0K,OAAOJ,OADM,C,EC7K3B,MAAOgB,mBAAmBpkK,gBAAhCvU,c,oBAeIyD,KAAM+iH,QAAY,C,CAOlB9pG,UACI,IAAIpS,EAAuBquK,WAAWM,YAAYx1K,KAAKmU,KACvDrY,KAAK25K,YAAY,SAAWz1K,KAAKmU,KAC7BtN,IACKtL,QAAQI,UACTkL,EAAG+7B,IAAM,WAENsyI,WAAWM,YAAYx1K,KAAKmU,K,CAK3Cnd,yBACQk+K,WAAWC,cACVD,WAAWC,cAAaD,WAAWC,YAAiCn6K,QAAQ0+C,cAAc,UAC1Fn+C,QAAQI,SACTX,QAAQw8C,SAASgtF,iBAAiB,YAAa0wC,WAAWQ,c,CAK1D1+K,sBACJgE,QAAQw8C,SAAS65H,oBAAoB,YAAa6D,WAAWQ,cACxDR,WAAWC,YAAYvyI,IAIxBsyI,WAAWC,YAAYn8D,QAHvBk8D,WAAWC,YAAYvyI,IAAM,GAC7BsyI,WAAWC,YAAYltJ,O,CAY/BA,KAAK9T,GAED,IAAItN,EAWJ,GAZA7G,KAAKmU,IAAMA,EAEPA,GAAO4gK,aAAaY,UACpBT,WAAWU,mBACX/uK,EAAKquK,WAAWC,aACFxxD,aAAexvG,WAClB+gK,WAAWM,YAAkB3uK,EAAI88G,aACxC98G,EAAK,OAGTA,EAAKquK,WAAWM,YAAYrhK,GAE5BtN,GAAMA,EAAG0uK,YAAc,EACvBv1K,KAAKmR,MAAMjG,MAAMuD,cADrB,CAIK5H,IACGsN,GAAO4gK,aAAaY,UACpBT,WAAWU,kBACX/uK,EAAKquK,WAAWC,aAEhBtuK,EAAwB7L,QAAQ0+C,cAAc,SAElDw7H,WAAWM,YAAYrhK,GAAOtN,EAC9Bq1B,QAAQU,KAAKH,WAAWtoB,GAAKA,IACzBtN,EAAG+7B,IAAMvF,IAAI4qF,cAAc5qF,IAAIE,UAAUppB,GAAK,KAGhDtN,EAAI88G,YAAcxvG,EAExBtN,EAAG29H,iBAAiB,iBAAkBxQ,UACtCntH,EAAG29H,iBAAiB,QAASqxC,OAC7B,IAAIp3F,EAAiBz+E,KAkBrBA,KAAKykH,MAAQ59G,EACTA,EAAGohB,KACHphB,EAAGohB,OAEH4tJ,OAvCH,CAkBD,SAAS7hD,WACL8hD,OACAr3F,EAAGskC,QAAS,EACZtkC,EAAGttE,MAAMjG,MAAMuD,S,CAGnB,SAASonK,QACLhvK,EAAGohB,KAAO,KACV6tJ,OACAr3F,EAAGttE,MAAMjG,MAAMsD,M,CAGnB,SAASsnK,OACLjvK,EAAGwqK,oBAAoB,iBAAkBr9C,UACzCntH,EAAGwqK,oBAAoB,QAASwE,M,EAmBxC78D,KAAKnL,EAAoB,EAAG8mE,EAAgB,GAExC,IAAK30K,KAAKmU,IACN,OAAO,KAEX,IAAItN,EAYAkvK,EADJ,GAVI/1K,KAAKmU,KAAO4gK,aAAaY,SAEX,KADd9uK,EAAKquK,WAAWC,aACTvyI,KAAmB/7B,EAAI88G,aAAe3jH,KAAKmU,aACvC+gK,WAAWM,YAAkB3uK,EAAI88G,aACxCuxD,WAAWM,YAAYx1K,KAAKmU,KAAOtN,GAGvCA,EAAKquK,WAAWM,YAAYx1K,KAAKmU,MAGhCtN,EAAI,OAAO,KAGhBkvK,EAAMj6K,KAAKwhG,QAAQ,SAAWt9F,KAAKmU,KAE/B5Y,QAAQI,QACHo6K,IACDA,EAAyB/6K,QAAQ0+C,cAAc,SAC/Cxd,QAAQU,KAAKH,WAAWz8B,KAAKmU,KAAKA,IAC9B4hK,EAAInzI,IAAMvF,IAAI4qF,cAAc5qF,IAAIE,UAAUppB,GAAK,KAKnDnU,KAAKmU,KAAO4gK,aAAaY,UACzBT,WAAWU,kBACXG,EAAMb,WAAWC,YACjBj5I,QAAQU,KAAKH,WAAWz8B,KAAKmU,KAAKA,IAC9B4hK,EAAInzI,IAAMvF,IAAI4qF,cAAc5qF,IAAIE,UAAUppB,GAAK,KAGnD4hK,EAAMA,GAAYlvK,EAAGmvK,WAAU,GAGjCD,EAAKpyD,YAAc3jH,KAAKmU,IAE9B,IAAI8hK,EAA6B,IAAI5B,kBAAkB0B,GAMvD,OALAE,EAAQ9hK,IAAMnU,KAAKmU,IACnB8hK,EAAQtB,MAAQA,EAChBsB,EAAQpoE,UAAYA,EACpBooE,EAAQj9D,OACR+7D,aAAaC,WAAWiB,GACjBA,C,CAMPzqE,eACA,IAAI3kG,EAEJ,OADAA,EAAKquK,WAAWM,YAAYx1K,KAAKmU,MAG1BtN,EAAG2kG,SADC,C,EArLA0pE,WAAWM,YAAQ,GCPhC,MAAOU,6BAA6BlC,aAyCtCz3K,cACI8V,QA5BIrS,KAAYm2K,aAAQ,KAIpBn2K,KAAYo2K,aAAW,EAKvBp2K,KAAOq2K,QAAW,EAKlBr2K,KAAUs2K,WAAW,EAErBt2K,KAAUu2K,WAAW,EAczBv2K,KAAKwnB,QAAUgvJ,cAAc/7I,IAE7Bz6B,KAAKy2K,WAAaz2K,KAAK02K,YAAYvsH,KAAKnqD,MACpCA,KAAKwnB,QAAoB,WACzBxnB,KAAK22K,KAAO32K,KAAKwnB,QAAoB,aAErCxnB,KAAK22K,KAAa32K,KAAKwnB,QAAyB,gB,CAOxDwxF,OAII,GAHA+7D,aAAaC,WAAWh1K,MACxBA,KAAKi0K,WAAY,EACjBj0K,KAAK42K,qBACA52K,KAAK62K,YAAV,CACA,GAAI72K,KAAK6tG,WAAa7tG,KAAKwrG,SAAU,OAAOxrG,KAAKslE,OACjD,IAAI99C,EAAexnB,KAAKwnB,QACpBmvJ,EAAY32K,KAAK22K,KACjBR,EAAoB3uJ,EAAQsvJ,qBAChC92K,KAAKm2K,aAAeA,EACpBA,EAAax8J,OAAS3Z,KAAK62K,YAC3BV,EAAaY,QAAQJ,GACjBA,GACAA,EAAKK,aACTL,EAAKI,QAAQvvJ,EAAQyvJ,aACrBd,EAAae,QAAUl3K,KAAKy2K,WAE5Bz2K,KAAKs2K,WAAat7K,QAAQmhD,MACtBn8C,KAAK22K,KAAKA,KAAKQ,gBACfn3K,KAAK22K,KAAKA,KAAKQ,gBAAgBn3K,KAAKq2K,QAASr2K,KAAKwnB,QAAQqtJ,YAAaqB,qBAAqBkB,gBAE5Fp3K,KAAK22K,KAAKA,KAAK14K,MAAQ+B,KAAKq2K,QACd,GAAdr2K,KAAK20K,QACLwB,EAAah4H,MAAO,GAEpBg4H,EAAarB,aAAaqC,gBAC1BhB,EAAarB,aAAaqC,gBAAgBpC,aAAaD,aAAc90K,KAAKwnB,QAAQqtJ,YAAaqB,qBAAqBkB,gBAEpHjB,EAAarB,aAAa72K,MAAQ82K,aAAaD,aACnDqB,EAAal7J,MAAM,EAAGjb,KAAK6tG,WAC3B7tG,KAAKo2K,aAAe,CA1BG,C,CA+BnBM,cACJ,GAAkB,GAAd12K,KAAK20K,MAQL,OANI30K,KAAKm0K,kBACLt5K,MAAMM,MAAMsP,KAAK,GAAIzK,KAAMA,KAAKo0K,cAAe,CAACp0K,KAAKm0K,kBAAkB,GACvEn0K,KAAKm0K,gBAAkB,MAE3Bn0K,KAAKslE,YACLtlE,KAAKmR,MAAMjG,MAAMuD,UAGjBzO,KAAK20K,MAAQ,GACb30K,KAAK20K,QAET30K,KAAK6tG,UAAY,EACjB7tG,KAAKg5G,M,CAOL7kC,eACA,OAAIn0E,KAAKm2K,cACGn7K,QAAQmhD,MAAQn8C,KAAKs2K,YAAc,IAAOt2K,KAAK6tG,UAEpD,C,CAKPrC,eACA,OAAIxrG,KAAK62K,YACE72K,KAAK62K,YAAYrrE,SAErB,C,CAGHorE,qBACJ,GAAI52K,KAAKm2K,aAAc,CACnB,IAAIkB,EAAkBr3K,KAAKm2K,aACvBkB,EAAW/xG,KACX+xG,EAAW/xG,KAAK,GAEhB+xG,EAAWC,QAAQ,GAEvBD,EAAWL,WAAW,GACtBK,EAAWH,QAAU,KAChBhB,qBAAqBqB,iBAAiBv3K,KAAKw3K,gBAAgBH,GAChEr3K,KAAKm2K,aAAe,IACvB,C,CAGGqB,gBAAgBH,GACpB,IACIA,EAAW19J,OAAS,IACvB,CAAC,MAAOkH,GACLq1J,qBAAqBqB,iBAAkB,CAC1C,C,CAOLjyG,OACIjzD,MAAMizD,OACNtlE,KAAK42K,qBACL52K,KAAK62K,YAAc,KACf72K,KAAK22K,MACL32K,KAAK22K,KAAKK,aACdh3K,KAAKi0K,WAAY,EACjBc,aAAaE,cAAcj1K,MAC3BA,KAAKm0K,gBAAkB,KACnBY,aAAaM,kBACbN,aAAaO,kBAAkBt1K,KAAKmU,I,CAK5Cu5F,QACS1tG,KAAKi0K,YACNj0K,KAAKu2K,WAAav2K,KAAKm0E,UAE3Bn0E,KAAK42K,qBACD52K,KAAK22K,MACL32K,KAAK22K,KAAKK,aACdh3K,KAAKi0K,WAAY,EACjBc,aAAaE,cAAcj1K,MACvB+0K,aAAaM,kBACbN,aAAaO,kBAAkBt1K,KAAKmU,I,CAK5C+5F,SACIluG,KAAK6tG,UAAY7tG,KAAKu2K,WACtBv2K,KAAKg5G,M,CAOLk7D,WAAO94J,GACPpb,KAAKq2K,QAAUj7J,EACXpb,KAAKi0K,YAGLj0K,KAAK22K,KAAKA,KAAKQ,gBACfn3K,KAAK22K,KAAKA,KAAKQ,gBAAgB/7J,EAAGpb,KAAKwnB,QAAQqtJ,YAAaqB,qBAAqBkB,gBAEjFp3K,KAAK22K,KAAKA,KAAK14K,MAAQmd,E,CAO3B84J,aACA,OAAOl0K,KAAKq2K,O,EA9KDH,qBAAeqB,iBAAY,EACnCrB,qBAAckB,eAAW,KCtC9B,MAAOZ,sBAAsB1lK,gBAAnCvU,c,oBAwBIyD,KAAM+iH,QAAY,EAYV/iH,KAASy3K,WAAY,C,CAOrBzgL,yBACJ,GAAyB,MAArBw/K,cAAc/7I,IAAlB,CAGA,IAAI17B,EAAcy3K,cAAc/7I,IAAIq8I,qBACpC/3K,EAAO4a,OAAS68J,cAAckB,YAC9B34K,EAAOg4K,QAAQP,cAAc/7I,IAAIw8I,aACjCl4K,EAAOkc,MAAM,EAAG,EAAG,EAJlB,C,CAWGjkB,iBACAw/K,cAAcmB,YAGlBnB,cAAcoB,kBACiB,WAA3BpB,cAAc/7I,IAAIi9C,QAClB97E,OAAO47C,SAAS65H,oBAAoB,YAAamF,cAAcqB,SAAS,GACxEj8K,OAAO47C,SAAS65H,oBAAoB,WAAYmF,cAAcqB,SAAS,GACvEj8K,OAAO47C,SAAS65H,oBAAoB,aAAcmF,cAAcqB,SAAS,GACzErB,cAAcmB,WAAY,G,CAKlC3gL,sBACIw/K,cAAc/7I,IAAM,IAAK7+B,OAAqB,cAAMA,OAAmC,oBAAMA,OAAgC,iBAE9F,WAA3B46K,cAAc/7I,IAAIi9C,QAClB8+F,cAAcqB,UACdj8K,OAAO47C,SAASgtF,iBAAiB,YAAagyC,cAAcqB,SAAS,GACrEj8K,OAAO47C,SAASgtF,iBAAiB,WAAYgyC,cAAcqB,SAAS,GACpEj8K,OAAO47C,SAASgtF,iBAAiB,aAAcgyC,cAAcqB,SAAS,G,CAS9E5vJ,KAAK9T,GACDnU,KAAKmU,IAAMA,EACXnU,KAAK62K,YAAch8K,MAAMK,OAAOoqG,OAAOnxF,GACnCnU,KAAK62K,YACL72K,KAAK83K,QAAQ93K,KAAK62K,aAGtBh8K,MAAMK,OAAO+sB,KAAK9T,EAAKrZ,OAAO2vH,OAAOrxF,MAAKy9I,GAAe72K,KAAK83K,QAAQjB,I,CAGlEiB,QAAQjB,GACR72K,KAAKy3K,YAGTz3K,KAAK62K,YAAcA,EACnB72K,KAAK+iH,QAAS,EACd/iH,KAAKmR,MAAMjG,MAAMuD,U,CAGbspK,oBACJ,GAAK/3K,KAAKg4K,UAAV,CACA,IAAIv5K,EAAWD,EACXy5K,EAGAC,EACJ,IAFA15K,GADAy5K,EAAUj4K,KAAKg4K,WACD/7K,OAETwC,EAAI,EAAGA,EAAID,EAAKC,KACjBy5K,EAAUD,EAAQx5K,IACN,KAA+By5K,EAAQ,GAAKjE,WACpDj0K,KAAKg5G,KAAKk/D,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,IAGlDl4K,KAAKg4K,UAAU/7K,OAAS,CAZH,C,CAsBzB+8G,KAAKnL,EAAoB,EAAG8mE,EAAgB,EAAGsB,EAAgC,MAgB3E,OAfAA,EAAUA,GAAoB,IAAIC,qBAC7Bl2K,KAAK62K,aACF72K,KAAKmU,MACAnU,KAAKg4K,YAAWh4K,KAAKg4K,UAAY,IACtCh4K,KAAKg4K,UAAU37K,KAAK,CAACwxG,EAAW8mE,EAAOsB,IACvCj2K,KAAKyK,KAAKS,MAAMuD,SAAUzO,KAAMA,KAAK+3K,mBACrC/3K,KAAKioB,KAAKjoB,KAAKmU,MAGvB8hK,EAAQ9hK,IAAMnU,KAAKmU,IACnB8hK,EAAQtB,MAAQA,EAChBsB,EAAQY,YAAc72K,KAAK62K,YAC3BZ,EAAQpoE,UAAYA,EACpBooE,EAAQj9D,OACR+7D,aAAaC,WAAWiB,GACjBA,C,CAGPzqE,eACA,OAAIxrG,KAAK62K,YACE72K,KAAK62K,YAAYrrE,SAErB,C,CAGXvyF,UACIjZ,KAAKy3K,WAAY,EACbz3K,KAAK62K,cACLh8K,MAAMK,OAAO8Z,SAAShV,KAAKmU,IAAKnU,KAAK62K,aACrC72K,KAAK62K,YAAc,MAEvB72K,KAAKg4K,UAAY,E,EAvJdxB,cAAWkB,YAAQlB,cAAc/7I,IAAM+7I,cAAc/7I,IAAIswB,aAAa,EAAG,EAAG,YAASx5C,EAK7EilK,cAASmB,WAAY,E,MCR3B5C,aAmDT/9K,kBACI,IAAIqgD,EAAWx8C,MAAMG,QAAQY,OACzBu8K,KAAkB9gI,EAAkB,cAAKA,EAAwB,oBAAKA,EAAqB,iBAU/F,OATI8gI,GACA3B,cAAc4B,eAClBrD,aAAasD,YAAcF,EAAkB3B,cAAgBtB,WAExDl6K,QAAQwgD,cACT05H,WAAWU,kBAEfb,aAAauD,YAAcpD,WAEpBiD,C,CAaXnhL,kBAAkBi/K,GACVlB,aAAawD,UAAUr6K,QAAQ+3K,IAAY,GAC/ClB,aAAawD,UAAUl8K,KAAK45K,E,CAOhCj/K,qBAAqBi/K,GACjB,IAAK,IAAIx3K,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IAChDs2K,aAAawD,UAAU95K,IAAMw3K,GAC7BlB,aAAawD,UAAU7tK,OAAOjM,EAAG,E,CAM7CzH,yBAAyBmd,GACrB4gK,aAAayD,sBAAsBrkK,GAAOtZ,MAAMG,QAAQmhD,MACnD44H,aAAa0D,qBACd1D,aAAa0D,oBAAqB,EAClC59K,MAAMM,MAAMgjD,KAAK,IAAM,KAAM42H,aAAa2D,oB,CAK1C1hL,4BACJ,IAAI+rG,EAAgBloG,MAAMG,QAAQmhD,MAC9Bw8H,GAAoB,EACxB,IAAK,IAAIvsK,KAAO2oK,aAAayD,sBACrBz1E,EAAQgyE,aAAayD,sBAAsBpsK,GAAO,YAC3C2oK,aAAayD,sBAAsBpsK,GAC1C2oK,aAAa6D,sBAAsBxsK,IAEnCusK,GAAW,EAGdA,IACD5D,aAAa0D,oBAAqB,EAClC59K,MAAMM,MAAMwP,MAAM,KAAMoqK,aAAa2D,oB,CAK7C1hL,6BAA6Bmd,GACzB,IAAK,IAAI1V,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IACpD,GAAIs2K,aAAawD,UAAU95K,GAAG0V,KAAOA,EACjC,OAGR4gK,aAAa8D,aAAa1kK,E,CAQnB2kK,yBAAc19J,GACrBvgB,MAAMS,MAAMsW,IAAI1G,MAAMmE,KAAM,KAAM0lK,aAAagE,cAC/Cl+K,MAAMS,MAAMsW,IAAI1G,MAAMoE,MAAO,KAAMylK,aAAaiE,eAChDn+K,MAAMS,MAAMsW,IAAI1G,MAAMqE,kBAAmB,KAAMwlK,aAAakE,mBAC5DlE,aAAamE,eAAiB99J,EAC1BA,IACAvgB,MAAMS,MAAMmW,GAAGvG,MAAMmE,KAAM,KAAM0lK,aAAagE,cAC9Cl+K,MAAMS,MAAMmW,GAAGvG,MAAMoE,MAAO,KAAMylK,aAAaiE,eAC/Cn+K,MAAMS,MAAMmW,GAAGvG,MAAMqE,kBAAmB,KAAMwlK,aAAakE,mB,CAOxDH,2BACP,OAAO/D,aAAamE,c,CAGhBliL,2BACA6D,MAAMS,MAAMo9J,aACZqc,aAAaiE,gBAEbjE,aAAagE,c,CAIb/hL,sBACJ+9K,aAAaoE,WAAY,EACrBpE,aAAaqE,gBACRrE,aAAaqE,cAAcnF,YAC5Bc,aAAasE,aAAc,EAC3BtE,aAAaqE,cAAc1rE,UAKnCqnE,aAAauE,eACbz+K,MAAMS,MAAMmP,KAAKS,MAAM0B,WAAY,KAAMmoK,aAAaiE,c,CAGlDhiL,0BACAw/K,cAAc/7I,KAAkC,WAA3B+7I,cAAc/7I,IAAIi9C,OAAsB8+F,cAAc/7I,IAAIyzE,QAC/EsoE,cAAc/7I,IAAIyzE,Q,CAGlBl3G,uBACJ+9K,aAAaoE,WAAY,EACzBpE,aAAawE,mBACb1+K,MAAMS,MAAMsW,IAAI1G,MAAM0B,WAAY,KAAMmoK,aAAaiE,eACjDjE,aAAasE,aACTtE,aAAaqE,eAAiBrE,aAAaqE,cAAcnF,YACzDc,aAAasE,aAAc,EAC3BtE,aAAaqE,cAAclrE,S,CAQ5BsrE,iBAAMv7K,GACTA,GAAS82K,aAAa0E,SACtBx7K,GACA82K,aAAauE,eAEjBvE,aAAa2E,WAAaz7K,EAC1B82K,aAAa0E,OAASx7K,E,CAGfu7K,mBACP,OAAOzE,aAAa0E,M,CAMbE,sBAAW17K,GAClB82K,aAAa6E,YAAc37K,C,CAGpB07K,wBACP,OAAO5E,aAAa6E,W,CAMbF,sBAAWz7K,GACdA,GAAS82K,aAAa8E,cACtB57K,GACI82K,aAAaY,UACTZ,aAAaqE,gBAAkBrE,aAAaqE,cAAcnF,UACtD14K,QAAQI,QACHo5K,aAAaqE,cAAsB9E,SAASS,aAAaqE,cAAsB9E,OAAOkF,OAAQ,GAGnGzE,aAAaqE,cAAc1rE,QAMnCqnE,aAAaqE,cAAgB,KAGjCrE,aAAa8E,YAAc57K,IAE3B82K,aAAa8E,YAAc57K,EACvB82K,aAAaY,UACTZ,aAAaqE,gBACT79K,QAAQI,QACHo5K,aAAaqE,cAAsB9E,SAASS,aAAaqE,cAAsB9E,OAAOkF,OAAQ,GAGnGzE,aAAaqE,cAAclrE,W,CAQpCwrE,wBACP,OAAO3E,aAAa8E,W,CAGbC,2BACP,OAAO/E,aAAagF,c,CAGbD,yBAAc77K,GACrB82K,aAAagF,eAAiB97K,EAE1B82K,aAAauD,YADbr6K,EAC2Bi3K,WAEA,I,CAanCl+K,iBAAiBmd,EAAawgK,EAAgB,EAAG3sJ,EAAoB,KAAMgyJ,EAA4B,KAAMnsE,EAAoB,GAC7H,IAAKknE,aAAaoE,YAAchlK,EAAK,OAAO,KAC5C,GAAI4gK,aAAa0E,OAAQ,OAAO,KAEhC,GADA1E,aAAawE,mBACTplK,GAAO4gK,aAAaY,UACpB,GAAIZ,aAAa8E,YAAa,OAAO,UAErC,GAAI9E,aAAa6E,YAAa,OAAO,KAEzC,IAAIK,EACCj/K,QAAQ4gD,cACTq+H,EAASlF,aAAamF,YAAY/lK,IAEjC6lK,IAAYA,EAAajF,aAAasD,aACtC4B,IACDA,EAAS,IAAID,EACbC,EAAOhyJ,KAAK9T,GACPnZ,QAAQ4gD,cACTm5H,aAAamF,YAAY/lK,GAAO8lK,IAGxC,IAAIhE,EAAUgE,EAAOjhE,KAAKnL,EAAW8mE,GACrC,OAAKsB,GACLA,EAAQ9hK,IAAMA,EACd8hK,EAAQ/B,OAAU//J,GAAO4gK,aAAaY,SAAYZ,aAAaoF,YAAcpF,aAAaqF,YAC1FnE,EAAQ9B,gBAAkBnsJ,EACnBiuJ,GAJc,I,CAWzBj/K,oBAAoBmd,GAChB,IAAI8lK,EAASlF,aAAamF,YAAY/lK,GAClC8lK,WACOlF,aAAamF,YAAY/lK,GAChC8lK,EAAOhhK,U,CAYfjiB,iBAAiBmd,EAAawgK,EAAgB,EAAG3sJ,EAAoB,KAAM6lF,EAAoB,GAG3F,OAFAknE,aAAaY,SAAWxhK,EACpB4gK,aAAaqE,eAAerE,aAAaqE,cAAc9zG,OACpDyvG,aAAaqE,cAAgBrE,aAAasF,UAAUlmK,EAAKwgK,EAAO3sJ,EAAU+sJ,aAAauD,YAAazqE,E,CAO/G72G,iBAAiBmd,GACb,IAAK,IAAI1V,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzD,IAAIw3K,EAAUlB,aAAawD,UAAU95K,GACjCw3K,EAAQ9hK,KAAOA,GACf8hK,EAAQ3wG,MAEf,C,CAMLtuE,iBAEI,IAAIyH,EAEJ,IAHAs2K,aAAaY,SAAW,KAGnBl3K,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IACtCs2K,aAAawD,UAAU95K,GACzB6mE,M,CAOhBtuE,sBACI,IAAK,IAAIyH,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzD,IAAIw3K,EAAUlB,aAAawD,UAAU95K,GACjCw3K,EAAQ9hK,KAAO4gK,aAAaY,UAC5BM,EAAQ3wG,MAEf,C,CAOLtuE,mBACQ+9K,aAAaqE,eAAerE,aAAaqE,cAAc9zG,OAC3DyvG,aAAaY,SAAW,I,CAQ5B3+K,sBAAsBk9K,EAAgB//J,EAAc,MAChD,GAAIA,EACA4gK,aAAauF,WAAWnmK,EAAK+/J,OAC1B,CACHa,aAAaqF,YAAclG,EAC3B,IAAK,IAAIz1K,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzD,IAAIw3K,EAAUlB,aAAawD,UAAU95K,GACjCw3K,EAAQ9hK,KAAO4gK,aAAaY,WAC5BM,EAAQ/B,OAASA,EAExB,CACJ,C,CAOLl9K,sBAAsBk9K,GAClBa,aAAaoF,YAAcjG,EAC3Ba,aAAauF,WAAWvF,aAAaY,SAAUzB,E,CAQ3Cl9K,kBAAkBmd,EAAa+/J,GACnC,IAAK,IAAIz1K,EAAIs2K,aAAawD,UAAUt8K,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzD,IAAIw3K,EAAUlB,aAAawD,UAAU95K,GACjCw3K,EAAQ9hK,KAAOA,IACf8hK,EAAQ/B,OAASA,EAExB,C,EApaEa,aAAWoF,YAAW,EAKtBpF,aAAWqF,YAAW,EAKtBrF,aAAYD,aAAW,EAKfC,aAAcgF,gBAAY,EAE1BhF,aAAM0E,QAAY,EAElB1E,aAAW6E,aAAY,EAEvB7E,aAAW8E,aAAY,EAE/B9E,aAAQY,SAAW,KAEnBZ,aAAaqE,cAAiB,KAEtBrE,aAASwD,UAAU,GAInBxD,aAAWsE,aAAY,EAEvBtE,aAASoE,WAAY,EAMrBpE,aAAqByD,sBAAQ,GAE7BzD,aAAkB0D,oBAAY,EAE9B1D,aAAWmF,YAA0B,GAsB7CnF,aAAgBM,kBAAY,EC/EjC,MAAOkF,kBAAkB/9F,OAU3BjgF,cACI8V,QAEArS,KAAKk4J,MAAQ,EAEbl4J,KAAKyR,GAAGvG,MAAMmD,MAAOrO,KAAMA,KAAKw6K,iBAChCx6K,KAAKyR,GAAGvG,MAAMoD,QAAStO,KAAMA,KAAKw6K,gB,CAGlCz7K,aACA,OAAOiB,KAAK8tE,O,CAGZ/uE,WAAOd,GACP+B,KAAK8tE,QAAU7vE,EACXA,EACI+B,KAAKmzH,aAAenzH,KAAKy6K,UAAYz6K,KAAKy6K,SAASxG,YAAc14K,QAAQE,WACzEuE,KAAKg5G,OAGTh5G,KAAKslE,M,CAMTo1G,cACA,OAAO16K,KAAK26K,Q,CAGZD,YAAQz8K,GACR+B,KAAK26K,SAAW18K,C,CAMhBkgD,WACA,OAAOn+C,KAAKk4J,K,CAGZ/5G,SAAKlgD,GACL+B,KAAKk4J,MAAQj6J,C,CAMb41H,eACA,OAAO7zH,KAAKmzH,S,CAGZU,aAAS51H,GACT+B,KAAKmzH,UAAYl1H,EACbA,GAAS+B,KAAK8tE,WAAa9tE,KAAKy6K,UAAYz6K,KAAKy6K,SAASxG,YAAc14K,QAAQE,WAChFuE,KAAKg5G,M,CAILwhE,kBACJx6K,KAAKqK,OAAkBrK,KAAKqgC,M,CAShC24E,KAAK27D,EAAgB3sJ,GACZhoB,KAAK8tE,WAEG,MAAT6mG,GAAiB72K,MAAM62K,MACvBA,EAAQ30K,KAAKk4J,OAEjBl4J,KAAKslE,OAEDtlE,KAAK26K,SACL36K,KAAKy6K,SAAW1F,aAAa6F,UAAU56K,KAAK8tE,QAAS6mG,EAAO3sJ,GAE5DhoB,KAAKy6K,SAAW1F,aAAasF,UAAUr6K,KAAK8tE,QAAS6mG,EAAO3sJ,G,CAOpEs9C,OACQtlE,KAAKy6K,WAAaz6K,KAAKy6K,SAASxG,WAChCj0K,KAAKy6K,SAASn1G,OAElBtlE,KAAKy6K,SAAW,I,CAIZI,eAAeC,EAAa3pK,EAAe87B,EAAgBnqC,GAAe,GACxE9C,KAAaitC,IACd6tI,IACDh4K,EACAg4K,EAAIrpK,GAAGN,EAAOnR,KAAOA,KAAaitC,IAElC6tI,EAAIlpK,IAAIT,EAAOnR,KAAOA,KAAaitC,I,CAMnC8tI,gBAAgBD,EAAaE,EAAgB/tI,EAAgBnqC,GAAe,GAChF,IAAKg4K,EAAK,OACV,IAAKE,EAAQ,OACb,IAAIC,EAAWD,EAAOz8K,MAAM,KACxBC,EAAMy8K,EAASh/K,OACnB,IAAK,IAAIwC,EAAI,EAAGA,EAAID,EAAKC,IACrBuB,KAAK66K,eAAeC,EAAKG,EAASx8K,GAAIwuC,EAAQnqC,E,CASlDizH,cAAUilD,GACVh7K,KAAKk7K,YAAcF,EACdA,GACDh7K,KAAKm7K,MACLn7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMH,EAAQ,O,CAS5C3wK,WAAOywK,GACH96K,KAAKm7K,OACLn7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMn7K,KAAKk7K,YAAa,QAAQ,GAC1Dl7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMn7K,KAAKo7K,YAAa,QAAQ,IAE9Dp7K,KAAKm7K,KAAOL,EACR96K,KAAKm7K,OACLn7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMn7K,KAAKk7K,YAAa,QAAQ,GAC1Dl7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMn7K,KAAKo7K,YAAa,QAAQ,G,CAS9DC,cAAUL,GACVh7K,KAAKo7K,YAAcJ,EACdA,GACDh7K,KAAKm7K,MACLn7K,KAAK+6K,gBAAgB/6K,KAAKm7K,KAAMH,EAAQ,O,EC5J9C,MAAOM,qBAAqBrmK,YAiB9B1Y,cACI,IAAIw/C,EAAwBlhD,MAAMG,QAAQ0+C,cAAc,SACxDrnC,MAAM0pC,EAAIw/H,WAAYx/H,EAAIy/H,YAAa5xJ,qBAAmB7S,QAC1D/W,KAAKy7K,cAAe,EACpBz7K,KAAK07K,WAAY,EACjB17K,KAAK27K,aAAc,EACnB37K,KAAK47K,iBAAkB,EACvB57K,KAAK0/C,QAAU3D,EAEf/7C,KAAK67K,iBAAmB,GAExB77K,KAAK0V,WAAauN,mBAAiB6B,MAKnC,IAAIq0B,EAAan5C,KAAK0/C,QAAQvG,MAC9BA,EAAMg7B,SAAW,WACjBh7B,EAAMhrB,IAAM,MACZgrB,EAAMse,KAAO,MAGb1b,EAAI+kE,aAAa,cAAe,aAC5BjmH,MAAMG,QAAQ4+C,WAEdmC,EAAI,mBAAoB,EAExBA,EAAI,mBAAoB,EAExBA,EAAI+/H,eAAgB,EAEpB//H,EAAIggI,aAAc,EAElBhgI,EAAI,uBAAwB,EAE5BA,EAAI,uBAAwB,EAE5BA,EAAIigI,mBAAoB,EAExBjgI,EAAIkgI,aAAc,EAElBlgI,EAAI5C,MAAM4iI,aAAc,EACxBhgI,EAAIqoE,YAAc,YAClBroE,EAAI+kE,aAAa,cAAe,QAChC/kE,EAAI+kE,aAAa,iBAAkB,QACnC/kE,EAAI+kE,aAAa,qBAAsB,QACvC/kE,EAAImgI,UAAW,GAGnBngI,EAAIyoF,iBAAiB,kBAAkB,KACnCxkI,KAAKm8K,gBAAgB,IAEzB,MAAMC,EAAQp8K,KAMV,8BAA+B+7C,GAC/BA,EAAIsgI,2BANR,SAASC,cACLF,EAAMT,aAAc,EACpB5/H,EAAIsgI,0BAA0BC,Y,IAO9BzhL,MAAMG,QAAQu/C,UACdv6C,KAAKm8K,gB,CAILI,eACJ,OAAOv8K,KAAK27K,W,CAGhBQ,iBACQn8K,KAAK07K,YAGT17K,KAAKoV,OAASpV,KAAK0/C,QAAQ67H,WAC3Bv7K,KAAKqV,QAAUrV,KAAK0/C,QAAQ87H,YACxBxgL,QAAQ+/C,cACR/6C,KAAK4V,SAAW9L,OAAOyM,eAAegP,sBAAsBvlB,KAAK0V,WAAY1V,KAAK0/C,QAAQ67H,WAAYv7K,KAAK0/C,QAAQ87H,YAAaxxK,gBAAcgN,UAAU,GAAO,GAAO,GAGtKhX,KAAK4V,SAAW9L,OAAOyM,eAAegP,sBAAsBvlB,KAAK0V,WAAY1V,KAAK0/C,QAAQ67H,WAAYv7K,KAAK0/C,QAAQ87H,YAAaxxK,gBAAc+M,QAAQ,GAAO,GAAO,GAExK/W,KAAKgW,UAAYgrD,WAASiN,MAC1BjuE,KAAKkW,UAAY8qD,WAASiN,MAC1BjuE,KAAK+V,WAAajE,aAAWk8D,SAC7BlkE,OAAOyM,eAAe88H,qBAAqBrzI,KAAK4V,UAChD5V,KAAK4V,SAASa,gBAAkB,IAC5BzW,KAAK47K,iBACL57K,KAAKg5G,OAETh5G,KAAK07K,WAAY,EACjB17K,KAAKmR,MAAMyjK,MAAUjmK,MAAO3O,M,CAG5BjB,aACA,OAAOiB,KAAK8tE,O,CAGZr3D,sBACA,OAAO,G,CAOP1X,WAAOoV,GACPnU,KAAK8tE,QAAU35D,EACVA,GAGL+nB,QAAQU,KAAKH,WAAWtoB,GAAKA,IACzB,KAAOnU,KAAK0/C,QAAQ88H,mBAChBx8K,KAAK0/C,QAAQ+8H,WAAWx5K,SAExBkR,EAAIwoB,WAAW,SACf38B,KAAK0/C,QAAQ9c,IAAMzuB,EAEnBnU,KAAK08K,aAAavoK,EAAI,G,CAI1BuoK,aAAa39K,GACjB,IAAI49K,EAAmC9hL,MAAMG,QAAQ0+C,cAAc,UACnEijI,EAAc/5I,IAAMvF,IAAI4qF,cAAc5qF,IAAIE,UAAUx+B,IACpD,IAAIgiJ,EAAYrjJ,MAAM8gC,iBAAiBz/B,GACvC49K,EAAcpxK,KAAoB,QAAbw1I,EAAsB,gCAAmC,SAAWA,EACzF/gJ,KAAK0/C,QAAQ/F,YAAYgjI,E,CAM7BjsI,SAEmC,GAA3B1wC,KAAK0/C,QAAQ61H,aAEbv1K,KAAKu8K,gBAAkBvhL,QAAQ+/C,iBAC/BjxC,OAAOyM,eAAe6/H,mBAAmBp2I,KAAK4V,SAAU5V,KAAK0/C,SAAS,GAAO,GAC7E1/C,KAAK27K,aAAc,E,CAOvBiB,gBAAY3+K,GACR+B,KAAKy7K,eAAiBx9K,GACtBpD,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK0wC,SAE5B1wC,KAAKy7K,cAAgBx9K,GACtBpD,MAAMM,MAAMgY,UAAU,EAAGnT,KAAMA,KAAK0wC,QAExC1wC,KAAKy7K,aAAex9K,C,CAGpB2+K,kBACA,OAAO58K,KAAKy7K,Y,CAOhBziE,OACSh5G,KAAK4V,UAGN5V,KAAK0/C,QAAQs5D,OAAO2O,OAAM,KACtB3nH,KAAKmR,MAAM,kBAAkB,IAE7BnR,KAAKy7K,cACL5gL,MAAMM,MAAMgY,UAAU,EAAGnT,KAAMA,KAAK0wC,SANxC1wC,KAAK47K,iBAAkB,C,CAY/B9iK,aACI,OAAO9Y,KAAK4V,SAAW5V,KAAK4V,SAASmD,SAAW,I,CAGhDC,qBACA,OAAOmM,UAAUQ,Y,CAMrB+nF,QACI1tG,KAAK0/C,QAAQguD,QACT1tG,KAAKy7K,cACL5gL,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK0wC,O,CAQrCzoB,OACIjoB,KAAK0/C,QAAQz3B,M,CAajB40J,YAAYtxK,GAER,OADAA,EAAe,QAARA,EAAiB,gCAAmC,SAAWA,EAC/DvL,KAAK0/C,QAAQm9H,YAAYtxK,E,CAQhCuxK,eACA,OAAO98K,KAAK0/C,QAAQo9H,Q,CAMpBC,iBACA,OAAO/8K,KAAK0/C,QAAQq9H,U,CAMpBlI,kBACA,OAAO70K,KAAK0/C,QAAQm1H,W,CAGpBA,gBAAY52K,GACP+B,KAAK0/C,UAGV1/C,KAAK0/C,QAAQm1H,YAAc52K,EAC3B+B,KAAK0wC,S,CAMLwjI,WAAOj2K,GACF+B,KAAK0/C,UAEV1/C,KAAK0/C,QAAQw0H,OAASj2K,E,CAGtBi2K,aACA,OAAOl0K,KAAK0/C,QAAQw0H,M,CAapBqB,iBACA,OAAOv1K,KAAK0/C,QAAQ61H,U,CAMpBgG,iBACA,OAAOv7K,KAAK0/C,QAAQ67H,U,CAGpBC,kBACA,OAAOx7K,KAAK0/C,QAAQ87H,W,CAMpBhwE,eACA,OAAOxrG,KAAK0/C,QAAQ8rD,Q,CAMpBwxE,YACA,OAAOh9K,KAAK0/C,QAAQs9H,K,CAMpBp2J,YACA,OAAO5mB,KAAK0/C,QAAQ94B,K,CAMpBu3B,WACA,OAAOn+C,KAAK0/C,QAAQvB,I,CAGpBA,SAAKlgD,GACA+B,KAAK0/C,UAEV1/C,KAAK0/C,QAAQvB,KAAOlgD,E,CAcpB62K,mBACA,OAAO90K,KAAK0/C,QAAQo1H,Y,CAGpBA,iBAAa72K,GACR+B,KAAK0/C,UAEV1/C,KAAK0/C,QAAQo1H,aAAe72K,E,CAM5Bu7K,YACA,OAAOx5K,KAAK0/C,QAAQ85H,K,CAGpBA,UAAMv7K,GACD+B,KAAK0/C,UAEV1/C,KAAK0/C,QAAQ85H,MAAQv7K,E,CAMrBg/K,aACA,OAAOj9K,KAAK0/C,QAAQu9H,M,CAWpBC,cACA,OAAOl9K,KAAK0/C,QAAQw9H,O,CAGpBA,YAAQj/K,GACH+B,KAAK0/C,UAGV1/C,KAAK0/C,QAAQw9H,QAAUj/K,E,CAMvBk/K,eACA,OAAOn9K,KAAK0/C,QAAQy9H,Q,CAOpBC,cACA,OAAOp9K,KAAK0/C,QAAQ09H,O,CAGdrsK,uBAAuBxF,GAC7B,GAAI8xK,GAAY5xK,IAAIF,GAAO,CACvB,IAAI+vH,EAAOt7H,KAAK67K,iBAAiBtwK,GAC5B+vH,IACDA,EAAOt7H,KAAK67K,iBAAiBtwK,GAAQ,KACjCvL,KAAKmR,MAAM5F,EAAK,GAGxBvL,KAAK0/C,QAAQ8kF,iBAAiBj5H,EAAM+vH,EACvC,C,CAGLn4H,UAC8B5H,QAAQI,SAExBqE,KAAK0/C,QAASr8C,WAGxBxI,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAK0wC,QAC7Br+B,MAAMlP,S,EAId,MAAMk6K,GAAc,IAAIzsK,IAAI,CACxB,QAAS,UAAW,iBAAkB,iBAAkB,UAAW,QAAS,aAC5E,iBAAkB,YAAa,QAAS,OAAQ,UAAW,WAAY,aAAc,SAAU,UAC/F,UAAW,UAAW,aAAc,eAAgB,UAAW,UC1b7D,MAAO0sK,kBAAkB9gG,OAI3BjgF,cAKI,GAJA8V,QAEArS,KAAKumB,QAAUvmB,KAAKu9K,aAAe,IAAIhmJ,QAEnCh8B,QAAQE,WAAaZ,MAAMG,QAAQ4+C,SAAU,CAC7C,IAAI0hF,KAAO,KACPzgI,MAAMG,QAAQw8C,SAAS65H,oBAAoB,WAAY/1C,MAElDt7H,KAAKw9K,gBAGNxiL,QAAQ6+C,MACR75C,KAAKw9K,cAAcv1J,QAEnBjoB,KAAKw9K,cAAcxkE,OACnBh5G,KAAKw9K,cAAc9vE,SACtB,EAGL7yG,MAAMG,QAAQw8C,SAASgtF,iBAAiB,WAAYlJ,KACvD,C,CAGDmiD,mBACA,OAAOz9K,KAAKw9K,a,CAGZC,iBAAax/K,GACT+B,KAAKw9K,gBACLx9K,KAAKw9K,cAAchpK,mBACnBxU,KAAKw9K,cAAc5rK,IAAI1G,MAAMyD,MAAO3O,KAAMA,KAAK09K,oBAGnD19K,KAAKw9K,cAAgBv/K,EACjBA,GACA+B,KAAKw9K,cAAcjpK,gBACnBvU,KAAKw9K,cAAc/rK,GAAGvG,MAAMyD,MAAO3O,KAAMA,KAAK09K,mBAC1C19K,KAAKw9K,cAAc9B,WACnB17K,KAAKu9K,aAAax3K,MAAM/F,KAAKw9K,gBAGjCx9K,KAAKu9K,aAAax3K,MAAM,K,CAI5BhH,a,MACA,OAAyB,QAAlB2D,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE3D,M,CAG3BA,WAAOd,GACHA,GACK+B,KAAKw9K,gBACNx9K,KAAKy9K,aAAe,IAAInC,cAC5Bt7K,KAAKw9K,cAAcz+K,OAASd,GAEvB+B,KAAKw9K,gBACVx9K,KAAKw9K,cAAcz+K,OAASd,E,CAOpCgqB,KAAK9T,GACDnU,KAAKjB,OAASoV,C,CAMlB6kG,OACSh5G,KAAKw9K,eAGVx9K,KAAKw9K,cAAcxkE,M,CAMvBtL,QACS1tG,KAAKw9K,eAGVx9K,KAAKw9K,cAAc9vE,O,CAMvBiwE,SACS39K,KAAKw9K,eAGVx9K,KAAKw9K,cAAcv1J,M,CAavB40J,YAAYtxK,GAGR,OAFKvL,KAAKw9K,gBACNx9K,KAAKy9K,aAAe,IAAInC,cACrBt7K,KAAKw9K,cAAcX,YAAYtxK,E,CAGlCmyK,oBACJ19K,KAAKu9K,aAAax3K,MAAM/F,KAAKw9K,c,CAQ7BV,e,MACA,OAAyB,QAAlBp6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEo6K,Q,CAM3BC,iB,MACA,OAAyB,QAAlBr6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEq6K,U,CAM3BlI,kB,MACA,OAAyB,QAAlBnyK,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEmyK,W,CAG3BA,gBAAY52K,GACP+B,KAAKw9K,gBAGVx9K,KAAKw9K,cAAc3I,YAAc52K,E,CAMjCi2K,WAAOj2K,GACF+B,KAAKw9K,gBAEVx9K,KAAKw9K,cAActJ,OAASj2K,E,CAG5Bi2K,a,MACA,OAAyB,QAAlBxxK,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEwxK,M,CAa3BqB,iB,MACA,OAAyB,QAAlB7yK,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE6yK,U,CAM3BgG,iB,MACA,OAAyB,QAAlB74K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE64K,U,CAG3BC,kB,MACA,OAAyB,QAAlB94K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE84K,W,CAM3BhwE,e,MACA,OAAyB,QAAlB9oG,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE8oG,Q,CAM3BwxE,Y,MACA,OAAyB,QAAlBt6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEs6K,K,CAM3Bp2J,Y,MACA,OAAyB,QAAlBlkB,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEkkB,K,CAM3Bu3B,W,MACA,OAAyB,QAAlBz7C,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEy7C,I,CAG3BA,SAAKlgD,GACA+B,KAAKw9K,gBAEVx9K,KAAKw9K,cAAcr/H,KAAOlgD,E,CAc1B62K,mB,MACA,OAAyB,QAAlBpyK,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEoyK,Y,CAG3BA,iBAAa72K,GACR+B,KAAKw9K,gBAEVx9K,KAAKw9K,cAAc1I,aAAe72K,E,CAMlCu7K,Y,MACA,OAAyB,QAAlB92K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE82K,K,CAG3BA,UAAMv7K,GACD+B,KAAKw9K,gBAEVx9K,KAAKw9K,cAAchE,MAAQv7K,E,CAM3Bg/K,a,MACA,OAAyB,QAAlBv6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEu6K,M,CAW3BC,c,MACA,OAAyB,QAAlBx6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEw6K,O,CAG3BA,YAAQj/K,GACH+B,KAAKw9K,gBAGVx9K,KAAKw9K,cAAcN,QAAUj/K,E,CAM7Bk/K,e,MACA,OAAyB,QAAlBz6K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAEy6K,Q,CAO3BC,c,MACA,OAAyB,QAAlB16K,EAAA1C,KAAKw9K,qBAAa,IAAA96K,OAAA,EAAAA,EAAE06K,O,CAM/B5qE,MAAMv0G,GAEF,GADAoU,MAAMmgG,MAAMv0G,GACR+B,KAAKw9K,eAAiBjiL,QAAQI,QAAS,CACvC,IAAI26D,EAAiBu5C,YAAYuB,6BAA6BpxG,KAAM,EAAG,GACvEA,KAAKw9K,cAAc99H,QAAQvG,MAAMse,KAAOnB,EAAUp3D,CACrD,C,CAMLuzG,MAAMx0G,GAEF,GADAoU,MAAMogG,MAAMx0G,GACR+B,KAAKw9K,eAAiBjiL,QAAQI,QAAS,CACvC,IAAI26D,EAAiBu5C,YAAYuB,6BAA6BpxG,KAAM,EAAG,GACvEA,KAAKw9K,cAAc99H,QAAQvG,MAAMhrB,IAAMmoC,EAAUn3D,CACpD,C,CAMLyzG,UAAU30G,GAGN,GAFAoU,MAAMugG,UAAU30G,GAEX+B,KAAKw9K,cAEV,GAAIjiL,QAAQI,QAAS,CACjB,IAAI26D,EAAiBu5C,YAAYuB,6BAA6BpxG,KAAM,EAAG,GACvEA,KAAKw9K,cAAc99H,QAAQr3C,MAAQpK,EAAQq4D,EAAU8D,MACxD,MAEGp6D,KAAKw9K,cAAc99H,QAAQr3C,MAAQrI,KAAKqI,MAAQxN,MAAMG,QAAQ4hD,U,CAOtEs2D,WAAWj1G,GAGP,GAFAoU,MAAM6gG,WAAWj1G,GAEZ+B,KAAKw9K,cAEV,GAAIjiL,QAAQI,QAAS,CACjB,IAAI26D,EAAiBu5C,YAAYuB,6BAA6BpxG,KAAM,EAAG,GACvEA,KAAKw9K,cAAc99H,QAAQp3C,OAASrK,EAAQq4D,EAAU+D,MAEzD,MAEGr6D,KAAKw9K,cAAc99H,QAAQp3C,OAAStI,KAAKsI,OAASzN,MAAMG,QAAQ4hD,U,CAQxEz5C,QAAQy6K,GAA0B,GAC9B59K,KAAKy9K,aAAe,KACpBprK,MAAMlP,QAAQy6K,E,QC3XTC,oBA0DZthL,cAnCAyD,KAAa89K,cAA2B,KAGxC99K,KAAU+9K,YAAG,C,CAMTvyE,eACH,OAAOxrG,KAAK+rG,S,CAkBTiyE,oBACH,OAAOh+K,KAAK89K,a,CAYbG,gBAAgBpwE,EAAmBqwE,GAClCl+K,KAAKm+K,SAAU,EACfn+K,KAAKo+K,eAAiBvwE,EACtB7tG,KAAKq+K,aAAexwE,EACpB7tG,KAAKs+K,cAAe,EACpBt+K,KAAKu+K,SAAW,EAChBv+K,KAAKw+K,gBAAkB,KACvBx+K,KAAKy+K,aAAe,EACpB,IAAIC,EAAY1+K,KAAKq+K,aAAeH,EAAgB,EACpDl+K,KAAK2+K,oBAAsBD,EAAW,EAAIA,EAAW,EAAMA,EAC3D1+K,KAAK+9K,YAAa,C,CAMnBz7K,SAASC,GACRA,EAAK47K,QAAUn+K,KAAKm+K,QACpB57K,EAAK67K,eAAiBp+K,KAAKo+K,eAC3B77K,EAAK87K,aAAer+K,KAAKq+K,aACzB97K,EAAKg8K,SAAWv+K,KAAKu+K,SACrBh8K,EAAKi8K,gBAAkBx+K,KAAKw+K,gBAC5Bj8K,EAAKo8K,oBAAsB3+K,KAAK2+K,oBAChCp8K,EAAK+7K,aAAet+K,KAAKs+K,aACzB/7K,EAAKw7K,WAAa/9K,KAAK+9K,WACvBx7K,EAAKk8K,aAAez+K,KAAKy+K,Y,QCtFdG,0BAiFTriL,YAAYwY,GArEJ/U,KAAewS,gBAAG,EAM1BxS,KAAA6+K,eAA6C,IAAIhB,oBAGjD79K,KAAA8+K,oBAAkD,IAAIjB,oBAGtD79K,KAAU++K,WAAW,EAGrB/+K,KAAsBg/K,uBAAW,EAGjCh/K,KAA2Bi/K,4BAAQ,GAGnCj/K,KAAwBk/K,yBAAa,GAGrCl/K,KAAyBm/K,0BAAa,GAatCn/K,KAAUo/K,YAAG,EAKbp/K,KAAaq/K,cAAG,EAKhBr/K,KAAAs/K,aAAeV,0BAA0BW,sBAKzCv/K,KAAM83C,QAAG,EAKT93C,KAAOw/K,QAAsB,GAM7Bx/K,KAASy/K,WAAI,EAOTz/K,KAAK+U,KAAOA,C,CAMZ2qK,WAAOA,GACP,GAAI1/K,KAAKw/K,UAAYE,EAArB,CAEA,IAAK,IAAIjhL,EAAIuB,KAAK0/K,OAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IACzCuB,KAAK2/K,YAAY3/K,KAAK0/K,OAAOjhL,IAEjC,IAAK,IAAIA,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IACpCuB,KAAK4/K,SAASF,EAAOjhL,GALrB,C,CASJihL,aACA,OAAO1/K,KAAKw/K,O,CAMZK,qBAAiB9hL,GAEjB,GADAiC,KAAK8/K,cAAgB9/K,KAAK+/K,eAAehiL,GACrC,MAAQiC,KAAK8/K,cACb,GAAI,GAAK9/K,KAAKw/K,QAAQvjL,OAClB+D,KAAKggL,uBAAyBjiL,OAE9B,IAAK,IAAIU,EAAIuB,KAAKw/K,QAAQvjL,OAAS,EAAGwC,GAAK,EAAGA,IAC1C,GAAIuB,KAAKw/K,QAAQ/gL,GAAGsW,MAAQhX,EAAK,CAC7BiC,KAAK8/K,cAAgB9/K,KAAKw/K,QAAQ/gL,GAClC,KACH,C,CAMbohL,uBACA,OAAK7/K,KAAK8/K,cAGH9/K,KAAK8/K,cAAc/qK,KAFf,I,CAQXkrK,mBACA,OAAOjgL,KAAK8/K,a,CAGZG,iBAAahiL,GACb+B,KAAK8/K,cAAgB7hL,C,CAUjBiiL,YAAYC,EAAmC51K,EAAemtE,GAClEyoG,EAAez1K,OAAOH,EAAO,E,CAQjC61K,qBACI,OAAOpgL,KAAKwS,e,CAOhB+B,cAAczJ,GACV,IAAK,IAAIrM,EAAI,EAAG+G,EAAIxF,KAAKw/K,QAAQvjL,OAAQwC,EAAI+G,EAAG/G,IAC5CuB,KAAKw/K,QAAQ/gL,GAAG8V,cAAczJ,GAClC9K,KAAKwS,iBAAmB1H,C,CAO5B0J,iBAAiB1J,EAAQ,GACrB,IAAK,IAAIrM,EAAI,EAAG+G,EAAIxF,KAAKw/K,QAAQvjL,OAAQwC,EAAI+G,EAAG/G,IAC5CuB,KAAKw/K,QAAQ/gL,GAAG+V,iBAAiB1J,GACrC9K,KAAKwS,iBAAmB1H,C,CAM5B2J,kBACIzU,KAAKwU,kBAAkBxU,KAAKwS,gB,CAQhC6tK,sBACI,OAAOrgL,KAAK6+K,c,CAQhBkB,eAAehiL,GACX,IAAK,IAAIU,EAAIuB,KAAKw/K,QAAQvjL,OAAS,EAAGwC,GAAK,EAAGA,IAC1C,GAAIuB,KAAKw/K,QAAQ/gL,GAAGsW,MAAQhX,EACxB,OAAOiC,KAAKw/K,QAAQ/gL,GAG5B,OAAO,I,CAQXmhL,SAASloG,GACL,IAAI4oG,EAAY5oG,EAAM3iE,KACtB,GAAI/U,KAAK+/K,eAAeO,GACpB,KAAM,sDAENtgL,KAAKw/K,QAAQnjL,KAAKq7E,GACd4oG,GAAatgL,KAAKggL,yBAClBhgL,KAAK8/K,cAAgBpoG,EACrB13E,KAAKggL,uBAAyB,K,CAU1CL,YAAYjoG,GAGR,IAFA,IAAIgoG,EAAS1/K,KAAKw/K,QACdj1K,GAAS,EACJ9L,EAAI,EAAG+G,EAAIk6K,EAAOzjL,OAAQwC,EAAI+G,EAAG/G,IACtC,GAAIihL,EAAOjhL,KAAOi5E,EAAO,CACrBntE,EAAQ9L,EACR,KACH,EAEA,GAAK8L,GACNvK,KAAKkgL,YAAYR,EAAQn1K,EAAOmtE,E,CAOxClwE,QACI,IAAIjF,EAAkC,IAAIq8K,0BAA0B5+K,KAAK+U,MAEzE,OADA/U,KAAK8qB,QAAQvoB,GACNA,C,CAMXuoB,QAAQC,GAC8DA,EAC7DhW,KAAO/U,KAAK+U,I,CAQrB5R,UACInD,KAAKwU,mBACL,IAAK,IAAI/V,EAAI,EAAG+G,EAAIxF,KAAKw/K,QAAQvjL,OAAQwC,EAAI+G,EAAG/G,IAC5CuB,KAAKw/K,QAAQ/gL,GAAG0E,UAEpBnD,KAAKw/K,QAAQvjL,OAAS,C,EC5P9B,IAAYskL,GASAC,GA8CAC,GC/EAC,GCCAC,GHID/B,0BAAqBW,sBAAW,EAGhCX,0BAAoBgC,qBAAW,ECgB9BL,uDAIX,KAHGA,GAAA,iBACAA,MAAA,eACAA,MAAA,qBAMQC,qFAIX,KAHGA,GAAA,mBACAA,MAAA,eACAA,MAAA,qBA2CQC,+HAGX,KAFGA,GAAA,eACAA,MAAA,qB,MAGSI,wBACT7pL,aAAakL,GAET,IAAIkP,EAAMlP,EACN4+K,EAAS1vK,EAAI2vK,iBACb,MAAQD,IACRA,EAAS,IAGb,IAAIE,EAAoB,GAGxB,IAAK,IAAIviL,EAAIqiL,EAAO7kL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIuyE,EAAI8vG,EAAOriL,GACXihL,EAAS1uG,EAAE0uG,OACVA,IACDA,EAAS,GACT1uG,EAAE0uG,OAASA,GAGf1uG,EAAE6uG,iBAAmB,KACrB,IAAIoB,EAASjhL,KAAKkhL,YAAYxB,EAAQsB,EAAS5vK,GAC3C6vK,EACAjwG,EAAE6uG,iBAAmBoB,EAAOE,UAE5BL,EAAOp2K,OAAOjM,EAAG,EAExB,CACD,MAAO,CAAE2S,IAAKA,EAAK4vK,QAASA,E,CAIxBhqL,mBAAmB0oL,EAA6BsB,EAAmB9+K,GACvE,IAAIk/K,EAAiC,KACjCC,EAAgC,KACpC,IAAK,IAAI3hL,EAAIggL,EAAOzjL,OAAS,EAAGyD,GAAK,EAAGA,IAAK,CACzC,IAAIg4E,EAAQgoG,EAAOhgL,GACfg4E,EAAMgoG,OACF,MAAQ1/K,KAAKkhL,YAAYxpG,EAAMgoG,OAAQsB,EAAS9+K,GAChDw9K,EAAOh1K,OAAOhL,EAAG,IAEb,MAAQ0hL,IACRA,EAAY,IAEhBA,EAAU/kL,KAAKq7E,IAEZ,MAAQA,EAAM92E,GACrBygL,EAAa3pG,EAKN,MAAQA,EAAM92E,IAEd,MAAQ82E,EAAM92E,KAEd,MAAQ82E,EAAMwiB,MAAQ,MAAQxiB,EAAMwiB,KAAKonF,QAAU,IAAM5pG,EAAMwiB,KAAKonF,OAC3E5B,EAAOh1K,OAAOhL,EAAG,IAEb,EAAIshL,EAAQ9iL,QAAQw5E,EAAMwiB,KAAKonF,SAC/BN,EAAQ3kL,KAAKq7E,EAAMwiB,KAAKonF,QAG5BthL,KAAKuhL,UAAU7pG,EAAOgoG,EAAQx9K,GAC1B,MAAQk/K,IACRA,EAAY,IAEhBA,EAAU/kL,KAAKq7E,IAEtB,CACD,IAAItmE,EAA0D,KAC9D,GAAIgwK,GAAaC,EAAY,CACzB,IAAIG,EAAUxhL,KAAKyhL,aAAaJ,EAAYD,GACxC,MAAQI,IACRpwK,EAAM,CAAEsuK,OAAQ0B,EAAWD,UAAWK,GAE7C,CAGD,OAAOpwK,C,CAGHpa,iBAAiB0gF,EAA0BgoG,EAA6Bx9K,GAC5E,IAAIw/K,EAAQhqG,EAAMiqG,gBAClB,GAAID,EACA,IAAK,IAAIjjL,EAAIijL,EAAMzlL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACxC,IAAIgvC,EAAOi0I,EAAMjjL,GACbmjL,EAAS5hL,KAAK6hL,aAAanC,EAAQjyI,EAAK7sC,KACvCghL,GAAW,MAAQA,EAAO1nF,MAAQ,MAAQ0nF,EAAOhhL,IAAM,MAAQghL,EAAOlC,OACvEgC,EAAMh3K,OAAOjM,EAAG,IAEhBgvC,EAAK14B,KAAO6sK,EAAO7sK,KAEnB04B,EAAKq0I,WAAa9hL,KAAK+hL,gBAAgBt0I,EAAKq0I,WAAY5/K,GAI/D,C,CAKDlL,uBAAuB8qL,EAAsC5/K,GACjE,IAAK4/K,GAAc,GAAKA,EAAW7lL,QAAU,MAAQiG,EAAK8/K,gBAAkB,GAAK9/K,EAAK8/K,eAAe/lL,OACjG,MAAO,GAGX,IAAIgmL,EAAQ//K,EAAK8/K,eAEjB,IAAK,IAAIvjL,EAAIqjL,EAAW7lL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CAC7C,IAAIq3B,EAAIgsJ,EAAWrjL,GACfyjL,EAA2B,KAC/B,IAAK,IAAIxiL,EAAIuiL,EAAMhmL,OAAS,EAAGyD,GAAK,EAAGA,IACnC,GAAIuiL,EAAMviL,GAAGkB,IAAMk1B,EAAEl1B,GAAI,CACrBshL,EAAOD,EAAMviL,GACb,KACH,CAEL,GAAI,MAAQwiL,EACRJ,EAAWp3K,OAAOjM,EAAG,QAGrB,GADAq3B,EAAE/gB,KAAOmtK,EAAKntK,KACVmtK,EAAK32K,MAAQg1K,cAAY4B,MAAO,CAChC,IAAI/gK,EAAMnC,OAAO6W,EAAEssJ,YACftkL,MAAMsjB,KACN0U,EAAEssJ,WAAa,GAEnBhhK,EAAMnC,OAAO6W,EAAEvqB,MACXzN,MAAMsjB,KACN0U,EAAEvqB,KAAO,EAEhB,CAMR,CAID,OAAOu2K,C,CAOH9qL,oBAAoB0gF,EAA0BgoG,GAClD,IAAIgC,EAAQhqG,EAAMiqG,gBACd/gL,EAAa,KACb8gL,GAAS,EAAIA,EAAMzlL,SACnB2E,EAAK8gL,EAAM,GAAG9gL,IAGlB,IAAIyhL,EAA8B,KAIlC,GAHI,MAAQzhL,IACRyhL,EAAWriL,KAAK6hL,aAAanC,EAAQ9+K,IAErC,MAAQyhL,IAAa,MAAQA,EAASnoF,MAAQ,MAAQmoF,EAAS3C,QAC/D,OAAO2C,EAASttK,KAGpB,IAAK,IAAItW,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IACpC,GAAIihL,EAAOjhL,GAAGy7F,KACV,OAAOwlF,EAAOjhL,GAAGsW,KAKzB,OAAO,I,CAKH/d,oBAAoB0oL,EAA6B9+K,GACrD,GAAI8+K,EACA,IAAK,IAAIjhL,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IACpC,GAAIihL,EAAOjhL,GAAGmC,IAAMA,EAChB,OAAO8+K,EAAOjhL,GAI1B,OAAO,I,EC3QHiiL,4EAOX,KALGA,GAAA,mBAEAA,MAAA,uBAEAA,MAAA,6BEUE,MAAO4B,mBAAmBviL,UAuB5BxD,cACI8V,QAtBIrS,KAAMuiL,OAAG,EAETviL,KAAAwiL,YAAc9B,qBAAmB+B,OAEjCziL,KAAe0iL,gBAAG,GAElB1iL,KAAUi5G,YAAG,EAiBjBj5G,KAAK2iL,kBAAoB,GACzB3iL,KAAK4iL,YAAc,E,CAMnBC,eAAW5uI,GACXj0C,KAAK8iL,YAAc7uI,EACfA,GACAA,EAAI8uI,SAAS/iL,K,CAIjB6iL,iBACA,OAAO7iL,KAAK8iL,W,CAMZE,eAAW/uI,GACXj0C,KAAK4iL,YAAc3uI,C,CAGnB+uI,iBACA,OAAOhjL,KAAK4iL,W,CAMZK,UAAM7hK,GACNphB,KAAKuiL,OAASnhK,C,CAGd6hK,YACA,OAAOjjL,KAAKuiL,M,CAMZ9mL,gBACA,OAAOuE,KAAKi5G,U,CAQRiqE,mBAAmBlF,EAAgCmF,GACnDA,EAAUhF,SACVH,EAAcoF,Y,CAWdC,oBAAoBC,EAA4BC,EAAmBrnE,EAAgBsnE,EAAuBC,EAA6C,MAG3J,IAFA,IAAIC,EAAgBJ,EAAUK,eAC1Bn2D,EAAQ81D,EAAU5qH,MAAOkrH,OACpBnlL,EAAI,EAAG+G,EAAIgoH,EAAM1iH,MAAOrM,EAAI+G,EAAG/G,IACpC,GAAI,MAAQilL,EAAcjlL,GAA1B,CACA,IAAI8C,EAAOisH,EAAMq2D,eAAeplL,GAC5Bq3B,EAAI91B,KAAK8jL,SAASviL,GACtBu0B,GAAK91B,KAAK+jL,YAAYjuJ,EAAGytJ,EAAUrnE,EAAQsnE,EAAcE,EAAcjlL,GAHzC,C,CAe9BslL,YAAYjuJ,EAAkEytJ,EAAmBrnE,EAAgBsnE,EAAuBthL,GAC5I,IAAI8hL,EAAMluJ,EAAEkuJ,IACRA,GAAOA,EAAIC,OAEPD,EAAIC,KAAKD,EAAI53K,KADbm3K,GAAY,iBAAmBrhL,EACX8hL,EAAIE,OAAShoE,EAASh6G,EACnC,iBAAmBA,EACNg6G,EAASh6G,EAETA,E,CAUxB4hL,SAASviL,GACb,IAAI6P,EACJ,GAAIpR,KAAKmkL,YACL/yK,EAAMpR,KAAKmkL,UAAU3oJ,IAAIj6B,IAErB,OAAO6P,EAKf,IADA,IAAIgzK,EAAWpkL,KAAKc,MACXpB,EAAI,EAAGuhB,EAAI1f,EAAK8iL,eAAgB3kL,EAAIuhB,EAAGvhB,IAAK,CACjD,IAAI4kL,EAAS/iL,EAAKgjL,oBAAoB7kL,GACtC,GAAI,IAAM4kL,KAGNF,EAAWA,EAASj9E,eAAem9E,IAE/B,KAEX,CAID,GAFAlzK,EAAM,CAAE6yK,KAAMG,GAEVA,EAAU,CACV,IAAII,EAAYJ,EACZK,EAAgBljL,EAAKkjL,cAEzB,GAAI,GAAKA,EAAe,CACpB,IAAI54C,EAAQtqI,EAAKmjL,mBAAmB,GACpCtzK,EAAI4yK,IAAM,CAAEC,KAAMG,EAAUh4K,IAAKy/H,EAAOq4C,OAASE,EAAiBv4C,GACrE,MACG,IAAK,IAAIptI,EAAI,EAAGA,EAAIgmL,EAAehmL,IAAK,CAChCotI,EAAQtqI,EAAKmjL,mBAAmBjmL,GAEpC,GAAIA,GAAKgmL,EAAgB,GAAK,MAAQD,EAAM,CACxCpzK,EAAI4yK,IAAM,CAAEC,KAAMO,EAAMp4K,IAAKy/H,EAAOq4C,OAAQM,EAAOA,EAAK34C,GAAS,MACjE,KACH,CAED,GAAI,MAAQ24C,EAAK34C,IAAUu4C,GAAYI,EAAM,CAEzCA,EAAO,KACP,IAAIG,EAAW5tL,WAAWM,SAASw0I,GAC/B84C,IACAH,EAAOJ,EAAS55E,aAAam6E,GAGpC,MACGH,EAAOA,EAAK34C,EAEnB,CAGR,CAKD,OAJI,MAAQ7rI,KAAKmkL,YACbnkL,KAAKmkL,UAAY,IAAI5oJ,KAEzBv7B,KAAKmkL,UAAU1pK,IAAIlZ,EAAM6P,GAClBA,C,CASHwzK,iBAAiB5G,EAAgC6G,EAAkBC,GACvE,IAAI5qF,EAAO8jF,EAActlH,MACrBwlH,EAAehkF,EAAM6R,UAErBg5E,EAAc/G,EAAcgH,UAAY9G,EAAe4G,EAAcnG,oBAAsBmG,EAAc/4E,UACzGk5E,EAAsBjH,EAAckH,qBAGxChrF,EAAMirF,2BAA2BJ,EAAaE,EAAqBJ,GADnD,EACuE7G,EAAc2F,e,CAYjGyB,cAAcpH,EAAgCmF,EAAgCkC,EAAqBlnI,EAAcmnI,GAErH,IAAIC,GAAW,EACf,IAAIrH,EAAeF,EAActlH,MAAOqzC,WAAaiyE,EAAcwH,QAAUxH,EAAcgH,WAEvFS,EAAkBtC,EAAU9E,aAEhC,IAAIqH,EAAWvC,EAAU1E,aAEzB0E,EAAU1E,cAAgBlhL,KAAKglE,IAAI8iH,GAGnCA,EAAcI,EAAkBJ,EAEhClC,EAAUwC,iBAAmBF,EAC7BtC,EAAU9E,aAAegH,EACzB,IAAIO,EAAiBP,EAAcnH,EAEnC,IAAIz5K,EAAQ,EACRu5K,EAAc6H,OACdphL,EAAQ,GAIZ,IAAIqhL,EAAQ3C,EAAU1E,cAAgBP,EAAez5K,GAEjDlH,KAAKgd,MAAMmrK,GAAYxH,EAAez5K,IAAUlH,KAAKgd,MAAMurK,KAC3DP,GAAW,GAGf,IAAI7G,EAAWkH,EAAiB,EAChC,IAAIG,EAAqBrH,EAAW,EAAIA,EAAW,EAAMA,EAuCzD,GAtCAyE,EAAUxE,oBAAsBoH,EAChC5C,EAAUp3E,UAAYmyE,EAElB,GAAKz5K,IAGLshL,GADArH,GADAkH,EAAiBzC,EAAU1E,cAAgBP,EAAez5K,IAC9B,GACI,EAAIi6K,EAAW,EAAMA,EAEjDV,EAAc6H,OACV,GAAME,EACD5C,EAAUpF,aACP,EAAIC,EAAciF,OAClBE,EAAU9E,aAAeL,EAAcwH,QAAUE,EACjDvC,EAAUxE,oBAAsBX,EAAcwH,UAE9CrC,EAAU9E,aAAeL,EAAcgH,UAAYU,EACnDvC,EAAUxE,oBAAsBX,EAAcgH,WAElD7B,EAAUpF,YAAa,GAGvBoF,EAAUpF,aACVoF,EAAUpF,YAAa,EACnB,EAAIC,EAAciF,OAClBE,EAAU9E,aAAeL,EAAcgH,UAAYU,EACnDvC,EAAUxE,oBAAsBX,EAAcgH,YAE9C7B,EAAU9E,aAAeL,EAAcwH,QAAUE,EACjDvC,EAAUxE,oBAAsBX,EAAcwH,YAOlExH,EAAcgI,kBAAkBD,IACtB/lL,KAAKimL,iBAAiBX,EAAYtH,EAAckI,iBAAiBH,EAAoB/lL,KAAKgjL,WAAYuC,KAEpGA,EAAU,CAClB,IAAIY,EAAUhD,EAAU1E,cAAgBP,EAAez5K,GACvD,GAAI,EAAI05C,GAAQA,GAAQgoI,EAoBpB,OAnBAhD,EAAUhF,SAAU,OAEhB,EAAIH,EAAciF,MACdjF,EAAc6H,MACd1C,EAAU9E,aAAeL,EAAcwH,QAAUE,EACjDvC,EAAUxE,oBAAsBX,EAAcwH,UAE9CrC,EAAU9E,aAAeL,EAAcgH,UAAYU,EACnDvC,EAAUxE,oBAAsBX,EAAcgH,WAG9ChH,EAAc6H,MACd1C,EAAU9E,aAAeL,EAAcgH,UAAYU,EACnDvC,EAAUxE,oBAAsBX,EAAcgH,YAE9C7B,EAAU9E,aAAeL,EAAcwH,QAAUE,EACjDvC,EAAUxE,oBAAsBX,EAAcwH,SAK7D,C,CAQGY,mBAAmB9C,EAA4BwB,GACnD,IAAI5qF,EAAOopF,EAAU5qH,MACjBsiH,EAAS9gF,EAAMmsF,iBACnB,IAAKrL,GAAU,GAAKA,EAAO/+K,OAAQ,OACnC,IAAIiiL,EAAehkF,EAAM6R,UACrBkB,EAAO63E,EAAcnG,oBAAsBT,EAC3CoI,EAAYxB,EAAc/G,WAC1BwI,EAAiBzB,EAActG,gBAC/B,MAAQ+H,IAEJA,EADAD,EACiBpI,EAAe4G,EAAc9G,cAAcgH,UAE3C9G,EAAe4G,EAAc9G,cAAcwH,SAGhEc,EACIr5E,EAAOs5E,IACPvmL,KAAKwmL,aAAaxL,EAAQuL,EAAgBrI,EAAe4G,EAAc9G,cAAcwH,QAASc,GAC9FC,EAAiBrI,EAAe4G,EAAc9G,cAAcgH,WAG5D/3E,EAAOs5E,IACPvmL,KAAKwmL,aAAaxL,EAAQuL,EAAgBrI,EAAe4G,EAAc9G,cAAcgH,UAAWsB,GAChGC,EAAiBrI,EAAe4G,EAAc9G,cAAcwH,SAKpExlL,KAAKwmL,aAAaxL,EAAQuL,EAAgBt5E,EAAMq5E,GAChDxB,EAActG,gBAAkBvxE,C,CAK5Bu5E,aAAaxL,EAA4BuL,EAAwBE,EAAsBH,GAC3F,IAAII,EAAU1mL,KAAKc,MAAM6pG,WACzB,GAAI27E,EACA,IAAK,IAAI7nL,EAAI,EAAGD,EAAMw8K,EAAO/+K,OAAQwC,EAAID,EAAKC,IAAK,CAC/C,IAAIoiB,EAAIm6J,EAAOv8K,GACf,GAAIoiB,EAAEosF,KAAOs5E,GAAkB1lK,EAAEosF,MAAQw5E,EACrC,IAAK,IAAI/mL,EAAI,EAAGuhB,EAAIylK,EAAQzqL,OAAQyD,EAAIuhB,EAAGvhB,IAAK,CAC5C,IAAI0/B,EAASsnJ,EAAQhnL,GACrB,GAAI0/B,EAAOj+B,YAAa,CACpB,IAAIwvB,EAAiByO,EAAeve,EAAE8lK,WACtC,GAAUh2J,EAAIqd,MAAM5O,EAAQve,EAAE0pB,OACjC,CACJ,MACE,GAAI1pB,EAAEosF,KAAOw5E,EAChB,KAEP,MAED,IAAK,IAAIhoL,EAAIu8K,EAAO/+K,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIoiB,EAAIm6J,EAAOv8K,GACf,GAAIoiB,EAAEosF,KAAOs5E,GAAkB1lK,EAAEosF,MAAQw5E,EACrC,IAAK,IAAI/mL,EAAI,EAAGuhB,EAAIylK,EAAQzqL,OAAQyD,EAAIuhB,EAAGvhB,IAAK,CAC5C,IAAI0/B,EAASsnJ,EAAQhnL,GACrB,GAAI0/B,EAAOj+B,YAAa,CACpB,IAAIwvB,EAAiByO,EAAeve,EAAE8lK,WACtC,GAAUh2J,EAAIqd,MAAM5O,EAAQve,EAAE0pB,OACjC,CACJ,MACE,GAAI1pB,EAAEosF,KAAOw5E,EAChB,KAEP,C,CAmDDR,iBAAiBW,EAAoBC,GACzC,QAAKA,GAEE7mL,KAAK8mL,UAAUD,EAAWE,UAAUhyK,KAAM8xK,EAAWG,cAAeJ,EAAYC,EAAWI,iB,CAQ9FC,iBAAiB97K,GACrB,IAAIgG,EACJ,OAAQpR,KAAKwiL,aACT,KAAK9B,qBAAmB+B,OACpBrxK,EAAMhG,EACN,MACJ,KAAKs1K,qBAAmByG,SACpB/1K,EAAOssC,KAAKqE,UAAY/hD,KAAK0iL,iBAAmB,EAAKt3K,EAAQpL,KAAK0iL,gBAAkB,EACpF,MACJ,KAAKhC,qBAAmB0G,YACpBh2K,EAAM,EAGd,OAAOA,C,CAUX4nG,KAAKjkG,EAAeuwK,EAAa,EAAGM,EAAyB3mK,OAAOooK,mBAChE,GAAIrnL,KAAKsnL,iBAAkB,CACvB,IAAI7oL,EAAIuB,KAAKsnL,iBAAiBppL,QAAQonL,GAClC,GAAK7mL,GACLuB,KAAKsnL,iBAAiB58K,OAAOjM,EAAG,EAEvC,CACDuB,KAAKi5G,YAAa,EAClB,IAAIwqE,EAAkBzjL,KAAK2iL,kBAAkB2C,GAC7C,GAAI7B,EAAiB,CACjB,IAAIxD,EAAewD,EAAgBxD,aACnC,IAAKlrK,IAASkrK,EACV,MAAM,IAAI/2J,MAAM,mEAEpB,IAAI47J,EAAgBrB,EAAgB5E,eAChC0I,EAAezC,EAAchH,cAC7BE,EAAgBjpK,EAAO0uK,EAAgB1D,eAAehrK,GAAQkrK,EAElE,IAAKjC,EAActlH,MACf,OAEJ,IAAIwlH,EAAeF,EAActlH,MAAOqzC,UACpCy7E,EAAkBxJ,EAActlH,MAAOqzC,WAAaiyE,EAAcwH,QAAUxH,EAAcgH,WAS1FuC,IAAiBvJ,GACb4H,IAAmB3mK,OAAOooK,kBAC1BvC,EAAc7G,gBAAgBC,EAAe0H,EAAgB4B,GAE7D1C,EAAc7G,gBAAgB,EAAKuJ,GAEvC/D,EAAgBhE,UAAY,EAC5BqF,EAAchH,cAAgBE,GAE1B4H,IAAmB3mK,OAAOooK,oBAC1BvC,EAAc7G,gBAAgBC,EAAe0H,EAAgB4B,GAC7D/D,EAAgBhE,UAAY,GAGpCzB,EAAcyJ,YAAYznL,KAAMslL,EACnC,C,CAWLhgH,OACItlE,KAAKi5G,YAAa,C,CAOtBwyD,WACI,GAAKzrK,KAAKi5G,WAAV,CAEA,GAAIj5G,KAAKsnL,iBACL,IAAK,IAAI7oL,EAAIuB,KAAKsnL,iBAAiBrrL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACxD,IAAI8L,EAAQvK,KAAKsnL,iBAAiB7oL,GAElC,GADsBuB,KAAK2iL,kBAAkBp4K,GAAOm9K,iBAChCtjB,MAAM,EAAGpkK,KAAKgjL,YAAY,GAAO,CACjD,IAAI2E,EAAc3nL,KAAK4nL,gBAAgBr9K,GACvCvK,KAAKg5G,KAAK,KAAMzuG,EAAOo9K,EAAYE,YACtC,CACJ,CAIL,IAAIz8K,EAAQpL,KAAKc,MAAM3F,MAAM0tK,OAAS,IAEtC,GADAz9J,EAAQpL,KAAKknL,iBAAiB97K,GAC1B,GAAKpL,KAAKijL,OAAS,GAAK73K,EAG5B,IAAK,IAAI3M,EAAI,EAAG+G,EAAIxF,KAAK2iL,kBAAkB1mL,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC3D,IAAIglL,EAAkBzjL,KAAK2iL,kBAAkBlkL,GAC7C,GAAKglL,EAAgB3rI,OAArB,CAIA,IAAIgtI,EAAgBrB,EAAgB5E,eAEhCgG,EAAUpB,EAAgBnE,cAAgBV,0BAA0BW,sBACxE,GACS,IADDkE,EAAgBhE,UACpB,CACI,IAAIzB,EAAgB8G,EAAchH,cAC9BmF,EAAQjjL,KAAKuiL,OAASvE,EAAciF,MACpC1gB,EAASuiB,EAAc3G,QAEvBhgI,EAAO6/H,EAAc7/H,MACpB,GAAKA,IAGFA,EAFO6/H,EAActlH,MAChBovH,UACE,EAEA,GAIf,IAAIpsE,EAAM,EACLopE,EAAc/G,aACfriE,GAAO,GAIX6mD,GAAUviK,KAAKolL,cAAcpH,EAAe8G,EAAe15K,EAAQ63K,EAAQvnE,EAAKv9D,EAAM1/C,GAEtFu/K,GADA8G,EAAgBrB,EAAgB5E,gBACFf,cAE1B99K,KAAK4kL,iBAAiB5G,EAAe6G,EAASC,GACzCviB,IACDviK,KAAKqjL,oBAAoBrF,EAAe6G,EAASpB,EAAgBpE,cAAoB,GAAL5gL,EAAQglL,GACxFzjL,KAAKomL,mBAAmBpI,EAAe8G,IAG/CviB,GAAUviK,KAAKkjL,mBAAmBlF,EAAe8G,EACjD,CAvCJ,CAyCP,CA/DqB,C,CAqE1BiD,mBAAmBC,GACfhoL,KAAK2iL,kBAAkBtmL,KAAK2rL,E,CAUhClB,UAAU/xK,EAAckzK,EAA4B3C,EAAqB,EAAGM,EAAyB3mK,OAAOooK,mBACxG,IAAI5D,EAAkBzjL,KAAK2iL,kBAAkB2C,GAC7C,GAAI7B,EAAiB,CAEjB,GADwBA,EAAgB1D,eAAehrK,GAInD,OADA/U,KAAKg5G,KAAKjkG,EAAMuwK,EAAYM,IACrB,EAIPtuL,QAAQC,KAAK,sBAAwB+tL,EAAa,IAEzD,CACD,OAAO,C,CAOXnxI,qBACI,IAAI91C,EAAY2B,KAAM+gL,iBACtB,GAAK1iL,GAAO,MAAQ2B,KAAK6iL,WAAzB,QAEa7iL,KAAM+gL,iBACnB/gL,KAAK2iL,kBAAkB1mL,OAAS,EAChC,IAAK,IAAIisL,KAAS7pL,EACd2B,KAAK+nL,mBAAmBG,EAJxB,C,CAWRrmL,WAII,GAHI7B,KAAKsnL,iBAAkBtnL,KAAKsnL,iBAAiBrrL,OAAS,EACrD+D,KAAKsnL,iBAAmB,GAEzBtnL,KAAKi5G,WACL,IAAK,IAAIx6G,EAAI,EAAG+G,EAAIxF,KAAK2iL,kBAAkB1mL,OAAQwC,EAAI+G,EAAG/G,IACtD,GAAIuB,KAAK2iL,kBAAkBlkL,GAAG2gL,WAAY,CACtC,IAAIuI,EAAc3nL,KAAK4nL,gBAAgBnpL,GAEvC,GAAIkpL,EAAa,CACb,IAAIQ,EAAkBnoL,KAAK2iL,kBAAkBlkL,GAAGipL,iBAC5CS,GACAnoL,KAAKi5G,YAAa,EACdkvE,EAAgB/jB,MAAM,EAAGpkK,KAAKgjL,YAAY,GAC1ChjL,KAAKg5G,KAAK,KAAMv6G,EAAGkpL,EAAYE,aAE/B7nL,KAAKsnL,iBAAiBjrL,KAAKoC,IAG/BuB,KAAKg5G,KAAK,KAAMv6G,EAAGkpL,EAAYE,YAEtC,CACJ,C,CAUbD,gBAAgBtC,EAAa,GAEzB,OADsBtlL,KAAK2iL,kBAAkB2C,GACtBrF,Y,CAO3BmI,iBAAiBrzK,GACb/U,KAAK4iL,YAAY7tK,GAAQ,CAAEA,KAAMA,EAAMxJ,KAAMg1K,cAAY8H,QAASpqL,OAAO,E,CAQ7EqqL,gBAAgBvzK,EAAc9W,GAC1B+B,KAAK4iL,YAAY7tK,GAAQ,CAAEA,KAAMA,EAAMxJ,KAAMg1K,cAAY4B,MAAOlkL,MAAOA,E,CAQ3EsqL,cAAcxzK,EAAc9W,GACxB+B,KAAK4iL,YAAY7tK,GAAQ,CAAEA,KAAMA,EAAMxJ,KAAMg1K,cAAY4B,MAAOlkL,MAAOA,E,CAQ3EuqL,eAAezzK,GACX,IAAImtK,EAAOliL,KAAK4iL,YAAY7tK,GAC5B,OAAImtK,EACOA,EAAKjkL,MAET,I,CAMXsF,YACI,IAAK,IAAI9E,EAAI,EAAG+G,EAAIxF,KAAK2iL,kBAAkB1mL,OAAQwC,EAAI+G,EAAG/G,IACtDuB,KAAK2iL,kBAAkBlkL,GAAG0E,UAC9BnD,KAAK2iL,kBAAkB1mL,OAAS,EAChC+D,KAAKi5G,YAAa,EAClBj5G,KAAK4iL,YAAc,I,ECnuBrB,MAAO6F,wBAAwB33K,gBAArCvU,c,oBAWYyD,KAAewS,gBAAG,EAG1BxS,KAAK04D,MAA2B,KAGhC14D,KAAoBklL,qBAAsB,KAG1CllL,KAAW6nL,YAAW,EAUtB7nL,KAAKijL,MAAG,EAKRjjL,KAASglL,UAAG,EAKZhlL,KAAOwlL,QAAG,EAKVxlL,KAAIm+C,MAAI,EAKRn+C,KAAI6lL,MAAG,EAGP7lL,KAAW0oL,YAA2B,GAGtC1oL,KAAe2hL,gBAA2B,GAG1C3hL,KAAQ2oL,SAAiC,KAGzC3oL,KAAc2jL,eAAqC,E,CAK/CzpF,WACA,OAAOl6F,KAAK04D,K,CAGZwhC,SAAKj8F,GACL,GAAI+B,KAAK04D,OAASz6D,EAAO,CAGrB,GAFI+B,KAAK04D,OACJ14D,KAAKwS,gBAAkB,GAAOxS,KAAK04D,MAAMlkD,iBAAiBxU,KAAKwS,iBAChEvU,EAAO,CACP,IACI6M,EADY7M,EAAM2lL,OACA94K,MACtB9K,KAAKklL,qBAAuB,IAAIjrK,WAAWnP,GAC3C9K,KAAK4oL,qBACJ5oL,KAAKwS,gBAAkB,GAAOvU,EAAMsW,cAAcvU,KAAKwS,iBACxDxS,KAAK2jL,eAAe1nL,OAAS6O,CAChC,CACD9K,KAAK04D,MAAQz6D,CAChB,C,CAML+nL,kBAAkB/nL,GAEd,GADA+B,KAAKmR,MAAMs3K,gBAAgBI,oBAAqB5qL,GAC5C+B,KAAK2oL,SACL,IAAK,IAAIlqL,EAAI,EAAG+G,EAAIxF,KAAK2oL,SAAS1sL,OAAQwC,EAAI+G,EAAG/G,IAC7CuB,KAAK2oL,SAASlqL,GAAGqqL,cAAc7qL,E,CAO3CwpL,YAAYsB,EAAsBzD,GAE9B,GADAtlL,KAAKmR,MAAMs3K,gBAAgBO,oBACvBhpL,KAAK2oL,SACL,IAAK,IAAIlqL,EAAY,EAAG+G,EAAYxF,KAAK2oL,SAAS1sL,OAAQwC,EAAI+G,EAAG/G,IAC7DuB,KAAK2oL,SAASlqL,GAAGwqL,kBAAkBF,EAAUzD,EAAYtlL,MACzDA,KAAK2oL,SAASlqL,GAAGyqL,c,CAQ7B9F,aAEI,GADApjL,KAAKmR,MAAMs3K,gBAAgBU,mBACvBnpL,KAAK2oL,SACL,IAAK,IAAIlqL,EAAI,EAAG+G,EAAIxF,KAAK2oL,SAAS1sL,OAAQwC,EAAI+G,EAAG/G,IAC7CuB,KAAK2oL,SAASlqL,GAAG2qL,a,CAW7BlD,iBAAiBmD,EAAuBC,EAA4C/D,GAChF,IAAIgE,EAAWvpL,KAAK2hL,gBAAgB1lL,OACpC,GAAIstL,EAAW,EAAG,CACd,IAAK,IAAI9qL,EAAI,EAAGA,EAAI8qL,EAAU9qL,IAC1B,GAAIuB,KAAK2hL,gBAAgBljL,GAAG2lK,MAAMilB,EAAeC,EAAW/D,GACxD,OAAOvlL,KAAK2hL,gBAAgBljL,GAEpC,OAAO,IACV,CACD,IAAI+qL,EAAYxpL,KAAK0oL,YAAYzsL,OACjC,IAASwC,EAAI,EAAGA,EAAI+qL,EAAW/qL,IAC3B,GAAIuB,KAAK0oL,YAAYjqL,GAAG2lK,MAAMilB,EAAeC,EAAW/D,GACpD,OAAOvlL,KAAK0oL,YAAYjqL,GAEhC,OAAO,I,CAMXmqL,qBACI,IAAK,IAAInqL,EAAI,EAAG+G,EAAIxF,KAAKklL,qBAAsBjpL,OAAQwC,EAAI+G,EAAG/G,IAC1DuB,KAAKklL,qBAAsBzmL,IAAM,C,CAOzC2hL,qBACI,OAAOpgL,KAAKwS,e,CAOhB+B,cAAczJ,GACT9K,KAAU,OAAMA,KAAK04D,MAAMnkD,cAAczJ,GAC1C9K,KAAKwS,iBAAmB1H,C,CAO5B0J,iBAAiB1J,GACZ9K,KAAU,OAAMA,KAAK04D,MAAMlkD,iBAAiB1J,GAC7C9K,KAAKwS,iBAAmB1H,C,CAM5B2J,kBACIzU,KAAKwU,kBAAkBxU,KAAKwS,gB,CAQhCi3K,UAAUl+K,GACN,IAAI6zB,EAA8B,IAAI7zB,EAGtC,OAFAvL,KAAK2oL,SAAW3oL,KAAK2oL,UAAY,GACjC3oL,KAAK2oL,SAAStsL,KAAK+iC,GACZA,C,CAQXsqJ,UAAUn+K,GACN,GAAIvL,KAAK2oL,SACL,IAAK,IAAIlqL,EAAY,EAAG+G,EAAYxF,KAAK2oL,SAAS1sL,OAAQwC,EAAI+G,EAAG/G,IAAK,CAClE,IAAI2gC,EAA8Bp/B,KAAK2oL,SAASlqL,GAChD,GAAI2gC,aAAkB7zB,EAClB,OAAO6zB,CACd,CAEL,OAAO,I,CAQXuqJ,WAAWp+K,GACP,IAAIq+K,EAAqC,KACzC,GAAI5pL,KAAK2oL,SACL,IAAK,IAAIlqL,EAAY,EAAG+G,EAAYxF,KAAK2oL,SAAS1sL,OAAQwC,EAAI+G,EAAG/G,IAAK,CAClE,IAAI2gC,EAA8Bp/B,KAAK2oL,SAASlqL,GAC5C2gC,aAAkB7zB,IAClBq+K,EAAOA,GAAQ,IACVvtL,KAAK+iC,EAEjB,CAEL,OAAOwqJ,C,CAOXpiL,QACI,IAAIjF,EAAwB,IAAIkmL,gBAEhC,OADAzoL,KAAK8qB,QAAQvoB,GACNA,C,CAOXuoB,QAAQC,GACJ,IAAIxoB,EAAyCwoB,EAC7CxoB,EAAKwS,KAAO/U,KAAK+U,KACjBxS,EAAK0gL,MAAQjjL,KAAKijL,MAClB1gL,EAAK23F,KAAOl6F,KAAK04D,K,CAMrBv1D,UACInD,KAAK04D,MAAQ,KACb14D,KAAKklL,qBAAuB,KAC5BllL,KAAK2oL,SAAW,KAEhB3oL,KAAK2jL,eAAe1nL,OAAS,C,EArQ1BwsL,gBAAkBO,mBAAG,eAGrBP,gBAAmBI,oBAAG,gBAGtBJ,gBAAiBU,kBAAG,c,MCjBlBU,eAAbttL,cACIyD,KAAU8pL,WAAa,GACvB9pL,KAAU+pL,WAAa,GAOvB/pL,KAAUgqL,WAAiB,E,CAIvBC,qBACA,OAAOjqL,KAAKgqL,WAAW/tL,M,CAE3BiuL,mBAAmBjsL,GACf+B,KAAK8pL,WAAW7tL,OAASgC,C,CAE7BksL,qBAAqB5/K,EAAetM,GAChC+B,KAAK8pL,WAAWv/K,GAAStM,C,CAE7BmsL,kBAAkBnsL,GACd+B,KAAK+pL,WAAW9tL,OAASgC,C,CAE7BosL,oBAAoB9/K,EAAetM,GAC/B+B,KAAK+pL,WAAWx/K,GAAStM,C,CAE7BqsL,kBAAkBrsL,GACd+B,KAAKgqL,WAAW/tL,OAASgC,C,CAG7BssL,eAAeC,GACX,OAAOxqL,KAAK8pL,WAAWvrK,KAAKisK,E,CAEhCC,cAAcD,GACV,OAAOxqL,KAAK+pL,WAAWxrK,KAAKisK,E,CAOhCE,mBAAmBngL,GACf,OAAOvK,KAAKgqL,WAAWz/K,E,CAKvB85K,qBACA,OAAOrkL,KAAK8pL,WAAW7tL,M,CAKvBwoL,oBACA,OAAOzkL,KAAK+pL,WAAW9tL,M,CAO3BsoL,oBAAoBh6K,GAChB,OAAOvK,KAAK8pL,WAAWv/K,E,CAM3Bm6K,mBAAmBn6K,GACf,OAAOvK,KAAK+pL,WAAWx/K,E,QCjDlBogL,WASTnjL,QACI,IAAIjF,EAAO,IAAIooL,WAEf,OADA3qL,KAAK8qB,QAAQvoB,GACNA,C,CAEXuoB,QAAQC,GACwCA,EAC/BkiF,KAAOjtG,KAAKitG,I,EAftB09E,WAAatL,cAAG,O,MCtBduL,iBAWTruL,c,QCJSsuL,uBAkBD7zL,mBACJgJ,KAAK8qL,MAAMrqK,OAASzgB,KAAK+qL,QAASzuK,YAClCtc,KAAK8qL,MAAM/3K,KAAO/S,KAAK+qL,QAASzuK,W,CAM5BtlB,oBAIJ,IAHA,IAAI8T,EAAQ9K,KAAKgrL,OAAOlgL,MAAQ9K,KAAK+qL,QAAShwK,YAC1CkwK,EAAwBjrL,KAAKgrL,OAAOC,YAAc,GAClDC,EAAyBlrL,KAAKgrL,OAAOE,aAAe,GAC/CzsL,EAAI,EAAGA,EAAIqM,EAAOrM,IACvBwsL,EAAY5uL,KAAK2D,KAAK+qL,QAASzuK,aAC/B4uK,EAAa7uL,KAAK2D,KAAK+qL,QAASzuK,Y,CAOhCtlB,sBACJ,IAAIypB,EAASzgB,KAAK+qL,QAASzuK,YACvBxR,EAAQ9K,KAAK+qL,QAAShwK,YACtBowK,EAASnrL,KAAK+qL,QAASvtK,IAC3Bxd,KAAK+qL,QAASvtK,IAAMiD,EAASzgB,KAAK8qL,MAAMrqK,OAExC,IAAK,IAAIhiB,EAAI,EAAGA,EAAIqM,EAAOrM,IACvBuB,KAAKorL,SAAS3sL,GAAKuB,KAAK+qL,QAASnrK,gBACrC5f,KAAK+qL,QAASvtK,IAAM2tK,C,CASxBn0L,aAAakjG,EAAuBmxF,EAAc7vL,GAC9CwE,KAAK04D,MAAQwhC,EACbl6F,KAAK+qL,QAAUM,EACfrrL,KAAKsrL,SAAW9vL,EAChBwE,KAAKurL,YACLvrL,KAAKwrL,aACLxrL,KAAKyrL,eAEL,IAAK,IAAIhtL,EAAI,EAAG+G,EAAIxF,KAAKgrL,OAAOlgL,MAAOrM,EAAI+G,EAAG/G,IAAK,CAC/C,IAAI8L,EAAQ8gL,EAAOtwK,YACf2wK,EAAY1rL,KAAKorL,SAAS7gL,GAC1BsgK,EAAkB7qK,KAAa,QAAU0rL,GAC7C,IAAK7gB,EACD,MAAM,IAAI3hJ,MAAM,mCAAqC3e,EAAQ,IAAMmhL,GAGnE7gB,EAAGztK,KAAK4C,KACf,CAEDA,KAAKsrL,SAAW,KAChBtrL,KAAK+qL,QAAU,KACf/qL,KAAK04D,MAAQ,KACb14D,KAAKorL,SAASnvL,OAAS,C,CAUnBjF,mBAAmBsM,EAAgB+0J,GACvC,OAAO96J,KAAKoB,MAAM2E,EAAS+0J,E,CAM/BrhK,2BACI,IAAIyH,EAAWiB,EAIX6B,EAFA8pL,EAASrrL,KAAK+qL,QACd7wF,EAAOl6F,KAAK04D,MAGZizH,EAAoB,GACpBC,EAAWP,EAAOtwK,YAEtB,IADA4wK,EAAQ1vL,OAAS2vL,EACZntL,EAAI,EAAGA,EAAImtL,EAAUntL,IACtBktL,EAAQltL,GAAK4sL,EAAO3vK,aAGVw+E,EAAK6R,UAAY4/E,EAAQN,EAAOzuK,YAC9Cs9E,EAAK4tF,YAAcuD,EAAOhrK,UAC1B65E,EAAKgyE,WAAamf,EAAOzuK,WACzB,IAAIivK,EAAYR,EAAOzuK,WAEnB4wG,EAAQtzB,EAAK0pF,OACjBp2D,EAAM1iH,MAAQ+gL,EACd,IAAIC,EAA6C5xF,EAAK6xF,UAAY,GAC9DC,EAA2C9xF,EAAK+xF,UAAY,GAEhE,IAAKxtL,EAAI,EAAGA,EAAIotL,EAAWptL,IAAK,CAC5B8C,EAAO,IAAIsoL,eACXr8D,EAAM0+D,eAAeztL,EAAG8C,GACxBA,EAAK4qL,aAAe1tL,EAEpB,IAAI2tL,EAAaf,EAAOtwK,YAGxB,IAFAxZ,EAAK2oL,mBAAmBkC,GAEnB1sL,EAAI,EAAGA,EAAI0sL,EAAY1sL,IACxB6B,EAAK4oL,qBAAqBzqL,EAAGM,KAAKorL,SAASC,EAAOtwK,cAEtD,IAAIsxK,EAAW9qL,EAAKgpL,eAAe,KAC/B+B,EAAWR,EAASO,GACxB,IAAeP,EAASO,GAAYC,EAAW,IAC/CA,EAASjwL,KAAKkF,GAGd,IAAIgrL,EAAiBlB,EAAOtwK,YAE5B,IADAxZ,EAAK6oL,kBAAkBmC,GAClB7sL,EAAI,EAAGA,EAAI6sL,EAAgB7sL,IAC5B6B,EAAK8oL,oBAAoB3qL,EAAGM,KAAKorL,SAASC,EAAOtwK,cAErD,IAAIyxK,EAAWH,EAAW,IAAM9qL,EAAKkpL,cAAc,KACnDuB,EAASQ,GAAYjrL,EACrBA,EAAKirL,SAAWA,EAChBjrL,EAAK8qL,SAAWA,EAEhB,IAAII,EAAgBpB,EAAOtwK,YAE3B,IAAKrb,EAAI,EAAGA,EAAI+sL,EAAe/sL,IAAK,CAChC,IAAIC,EAAI,IAAIgrL,WACZhrL,EAAEstG,KAAO0+E,EAAQN,EAAOtwK,aACxBpb,EAAEuC,KAAO,CAAE4b,EAAG9d,KAAK0sL,YAAY/sL,EAAEstG,KAAM/S,EAAKgyE,YAAaj4H,IAAK,GAE1D,GAAKo3I,EAAOhrK,YACZ1gB,EAAEuC,KAAKyqL,UAAY3sL,KAAKorL,SAASC,EAAOtwK,cAGxC,GAAKswK,EAAOhrK,YACZ1gB,EAAEuC,KAAK0qL,UAAY,GAEnBjtL,EAAEuC,KAAK0qL,UAAUC,UAAYlB,EAAQN,EAAOtwK,aAC5Cpb,EAAEuC,KAAK0qL,UAAUE,WAAanB,EAAQN,EAAOtwK,aAgBzC,GAAKswK,EAAOhrK,YACZ1gB,EAAEuC,KAAK0qL,UAAUG,SAAWpB,EAAQN,EAAOtwK,cAG3C,GAAKswK,EAAOhrK,YACZ1gB,EAAEuC,KAAK0qL,UAAUI,UAAYrB,EAAQN,EAAOtwK,eAGpD,IAAIqG,EAAMiqK,EAAOhrK,UASjB,GARI,GAAKe,EACLzhB,EAAEuC,KAAK+xC,IAAM03I,EAAQN,EAAOtwK,aACrB,GAAKqG,EACZzhB,EAAEuC,KAAK+xC,IAAMj0C,KAAKorL,SAASC,EAAOtwK,aAC3B,GAAKqG,IACZzhB,EAAEuC,KAAK+xC,MAAQo3I,EAAOhrK,WAGtB,GAAKgrK,EAAOhrK,UACZ,IACI1gB,EAAEuC,KAAK+qL,OAAS/qE,KAAKrqC,MAAM73E,KAAKorL,SAASC,EAAOtwK,aACnD,CAAC,MAAOJ,GAAK,CAElBpZ,EAAKyoL,WAAW3tL,KAAKsD,EACxB,CACJ,CACD,IAAIutL,EAAa7B,EAAOtwK,YACxB,IAAKtc,EAAI,EAAGA,EAAIyuL,EAAYzuL,IAAK,CAC7B,IAAI0S,EAAQ,IAAIy5K,iBAEhBz5K,EAAM87F,KAAO0+E,EAAQN,EAAOtwK,aAC5B5J,EAAMw1K,UAAY3mL,KAAKorL,SAASC,EAAOtwK,aACvC,IAAIwvB,EAA2C,GAC3C4iJ,EAAqB9B,EAAOtwK,YAGhC,IAFCoyK,EAAa,IAAOh8K,EAAMo5B,OAASA,EAAS,IAExC7qC,EAAI,EAAGA,EAAIytL,EAAYztL,IAAK,CAE7B,OADwB2rL,EAAOhrK,WAE3B,KAAK,EACDkqB,EAAOluC,OAAOgvL,EAAOhrK,WACrB,MACJ,KAAK,EACDkqB,EAAOluC,KAAKgvL,EAAOlvK,YACnB,MACJ,KAAK,EACDouB,EAAOluC,KAAKsvL,EAAQN,EAAOtwK,cAC3B,MACJ,KAAK,EACDwvB,EAAOluC,KAAK2D,KAAKorL,SAASC,EAAOtwK,cACjC,MACJ,QACI,MAAM,IAAImO,MAAM,iBAE3B,CACDgxE,EAAKkzF,SAASj8K,EACjB,C,EA/NU05K,uBAAQO,SAAa,GAErBP,uBAAKC,MAAG,CAAErqK,OAAQ,EAAG1N,KAAM,GAE3B83K,uBAAAG,OAA6E,CAAElgL,MAAO,G,MCrB5FuiL,mBAAb9wL,cACYyD,KAAM4jL,OAAqB,E,CAI/B94K,YACA,OAAO9K,KAAK4jL,OAAO3nL,M,CAEnB6O,UAAM7M,GACN+B,KAAK4jL,OAAO3nL,OAASgC,C,CAOzB4lL,eAAet5K,GACX,OAAOvK,KAAK4jL,OAAOr5K,E,CAQvB2hL,eAAe3hL,EAAehJ,GAC1BvB,KAAK4jL,OAAOr5K,GAAShJ,C,ECpBvB,MAAO+rL,wBAAwBn7K,SAkNjC5V,cACI8V,QAXJrS,KAAA4jL,OAAoC,IAAIyJ,mBAYpCrtL,KAAKqmL,iBAAmB,E,CA7M5BrvL,cAAckL,GACV,IAAIg4F,EAAO,IAAIozF,gBACXjC,EAAS,IAAInyK,KAAKhX,GAClB1G,EAAU6vL,EAAOzrK,gBACrB,GACS,uBADDpkB,EAKA,KAAM,iCAEd,OALQqvL,uBAAuBhzG,MAAMqiB,EAAMmxF,EAAQ7vL,GAK5C0+F,C,CAyMXsR,WACI,OAAOxrG,KAAK+rG,S,CAahBo5E,2BAA2BoI,EAAqBC,EAAyC3I,EAAkByB,EAAoBmH,GAE3H,IADA,IAAIjgE,EAAQxtH,KAAK4jL,OACRnlL,EAAI,EAAG+G,EAAIgoH,EAAM1iH,MAAOrM,EAAI+G,EAAG/G,IAAK,CACzC,IACIivL,EACAx/D,EAFOV,EAAMq2D,eAAeplL,GAEXurL,WACjBC,EAAiB/7D,EAAUjyH,OAC/B,GAAI,GAAKguL,EAAT,CACA,IAAI0D,EAAaH,EAA4B/uL,GAC7C,GAAI6nL,EAOA,KANM,GAAKqH,GAAgBJ,EAAcr/D,EAAUy/D,GAAY1gF,OAC3D0gF,GAAc,EACdH,EAA4B/uL,GAAKkvL,GAGrCD,EAAiBC,EAAa,EACvBD,EAAiBzD,KAChB/7D,EAAUw/D,GAAgBzgF,KAAOsgF,IAErCI,IACAD,IACAF,EAA4B/uL,GAAKkvL,OAUrC,KAPAD,EAAiBC,EAAa,IACP1D,GAAoBsD,EAAcr/D,EAAUw/D,GAAgBzgF,OAC/E0gF,EAAa1D,EAAiB,EAC9BuD,EAA4B/uL,GAAKkvL,GAGrCD,EAAiBC,EAAa,EACvBA,GAAc,KACbz/D,EAAUy/D,GAAY1gF,KAAOsgF,IAEjCI,IACAD,IACAF,EAA4B/uL,GAAKkvL,EAIzC,IAAIC,EAAQF,GAAkBzD,EAE9B,IAAK,GAAK0D,EAAY,CAClB,IAAIjgE,EAAQQ,EAAUy/D,GACtB,GAAIC,EACAH,EAAShvL,GAAKivH,EAAMxrH,KAAK+xC,QACtB,CACH,IAEIioB,EAFA2xH,EAAY3/D,EAAUw/D,GACtB3pL,EAAI8pL,EAAU5gF,KAAOygB,EAAMzgB,KAG3B/wC,EADM,IAANn4D,GACKwpL,EAAc7/D,EAAMzgB,MAAQlpG,EAE7B,EAER0pL,EAAShvL,GAAKuB,KAAK8tL,aAAapgE,EAAOmgE,EAAW3xH,EAAGn4D,EACxD,CACJ,MACG0pL,EAAShvL,GAAKyvH,EAAU,GAAGhsH,KAAK+xC,IAGhC4wI,GAAW,iBAAmB32D,EAAU,GAAGhsH,KAAK+xC,MAChDw5I,EAAShvL,GAAagvL,EAAShvL,GAAKyvH,EAAU,GAAGhsH,KAAK+xC,IAvDjC,CA0D5B,C,CAWG65I,aAAapgE,EAAmBqgE,EAAuB7xH,EAAW8xH,GACtE,IAAI/yK,EAAQyyG,EAAMxrH,KACdiZ,EAAM4yK,EAAU7rL,KAEpB,GAAI,iBAAmB+Y,EAAMg5B,KAAO,iBAAmB94B,EAAI84B,IACvD,OAAOh5B,EAAMg5B,IAEjB,IAAIg6I,EAAYX,gBAAgBv/E,MAAc9yF,EAAM0xK,WAChDuB,EAAQjzK,EAAMg5B,IACdk6I,EAAOhzK,EAAI84B,IAGf,GAAI,MAAQg6I,EACR,OAAOA,EAAS/xH,EAAGgyH,EAAOC,EAAOD,EAAO,GAG5C,IAAIpB,EAAa,EACbD,EAAY,EAEZG,EAAYr9E,IACZo9E,EAAWp9E,IAsCf,OApCI,MAAQ10F,EAAM2xK,YACdE,EAAa7xK,EAAM2xK,UAAUE,WAC7BE,EAAY/xK,EAAM2xK,UAAUI,WAE5B,MAAQ7xK,EAAIyxK,YACZC,EAAY1xK,EAAIyxK,UAAUC,UAC1BE,EAAW5xK,EAAIyxK,UAAUG,WAEzBjvL,MAAMkvL,IAAc,GAAKA,KAAWA,EAAYrC,WAAWtL,gBAC3DvhL,MAAMivL,IAAa,GAAKA,KAAUA,EAAWpC,WAAWtL,eACxDvhL,MAAMgvL,KAAaA,EAAa,GAChChvL,MAAM+uL,KAAYA,EAAY,GAE9BtvL,KAAKglE,IAAIuqH,IAAe7tK,OAAOygH,YAE3BotD,EADA,EAAIA,GACU5lH,IAEDA,KAIjB3pE,KAAKglE,IAAIsqH,IAAc5tK,OAAOygH,YAE1BmtD,EADA,EAAIA,GACS3lH,IAEDA,MAKdjsD,EAAM2xK,YAAczxK,EAAIyxK,WAAejC,WAAWtL,eAAiB0N,GAAYpC,WAAWtL,eAAiB2N,EAEtGM,gBAAgBv/E,MAAMqgF,mBAAmBtB,EAAYD,EAAWqB,EAAOC,EAAMjyH,EAAG8xH,GAEhFhuL,KAAKquL,yBAAyBH,EAAOxgE,EAAMzgB,KAAM+/E,EAAWF,EAAYqB,EAAMJ,EAAU9gF,KAAM8/E,EAAUF,EAAW3wH,E,CAU1HoyH,wBAAwBrhF,GAI5B,IAHA,IAEI88D,EAFA9uJ,EAAQ,EACRE,EAAMnb,KAAKqmL,iBAAiBpqL,OAAS,EAElCgf,GAASE,GAAK,CACjB4uJ,EAAO9uJ,EAAQE,GAAQ,EACvB,IAAIozK,EAAWvuL,KAAKqmL,iBAAiBtc,GAAK98D,KAC1C,GAAIshF,GAAYthF,EACZ,OAAO88D,EACFwkB,EAAWthF,EAChB9xF,EAAM4uJ,EAAM,EAEZ9uJ,EAAQ8uJ,EAAM,CACrB,CACD,OAAO9uJ,C,CAgBXozK,yBAAyBG,EAAoBC,EAAmBC,EAAwBC,EAAyBC,EAAwBC,EAAuBC,EAA2BC,EAA4B9hF,GACnN,IAAI+hF,EAAM,QAEN9vL,EAAI+tG,EAEJvV,EAAK82F,EACLS,EAAMP,EAGNQ,EAAMJ,EAENh7I,EAJK+6I,EAHAJ,EAQLjrH,EAJKorH,EAIKl3F,EACdl0B,EAAKjmE,KAAKuL,IAAIvL,KAAKglE,IAAIiB,GAAKwrH,IAAQxrH,EAAK,GAAK,EAAI,GAElD,IAAI2rH,EAAMR,EACNS,EAAML,EAEV,IAAK9vK,OAAOowK,SAASF,KAASlwK,OAAOowK,SAASD,GAC1C,OAAOZ,EAGXW,EAAMA,EAAMr7I,EAAK0vB,EACjB4rH,EAAMA,EAAMt7I,EAAK0vB,EAEjB,IAAI8rH,EAAO,EAAIJ,EAEXhzH,EAAI,GACJqzH,EAAK,EAET,GAAIhyL,KAAKglE,IAAI0sH,EAAM,WAAc,MAAU1xL,KAAKglE,IAAI2sH,EAAM,WAAc,KACpEhzH,EAAIh9D,EACJqwL,EAAK,EAAIrzH,OAGT,OAAa,CACTqzH,EAAM,EAAIrzH,EACV,IAAIszH,EAAK,EAAID,EAAKA,EAAKrzH,EAAI+yH,EAAM,EAAIM,EAAKrzH,EAAIA,EAAIozH,EAAOpzH,EAAIA,EAAIA,EAAIh9D,EACrE,GAAI3B,KAAKglE,IAAIitH,IAAO,IAAMR,EACtB,MAGJ,IAAIS,EAAM,EAAIF,EAAKA,EAAKN,EAAM,EAAIM,EAAKrzH,GAAKozH,EAAOL,GAAO,EAAI/yH,EAAIA,GAAK,EAAIozH,GACvEI,EAAO,EAAIH,GAAMD,EAAO,EAAIL,GAAO,EAAI/yH,GAAK,EAAI,EAAIozH,EAAOL,GAG/D/yH,IAAM,EAAIszH,EAAKC,EAAMA,EAAM,EAAID,EAAKA,EAAKE,IAAS,EAAID,EAAMA,EAAMA,EAAM,EAAID,EAAKC,EAAMC,EAAOF,EAAKA,GAFvF,GAAKP,EAAM,GAAKK,EAAO,GAGtC,CAKL,OAFQ,EAAIC,EAAKA,EAAKrzH,EAAI+yH,EAAME,EAAM,EAAII,EAAKrzH,EAAIA,GAAK,EAAIgzH,EAAME,GAAOlzH,EAAIA,EAAIA,GAEtEsH,EAAKk0B,C,CAQpB01F,SAASj8K,GACL,IAAI5G,EAAQvK,KAAKsuL,wBAAwBn9K,EAAM87F,MAC/CjtG,KAAKqmL,iBAAiB37K,OAAOH,EAAO,EAAG4G,E,EA3bpCm8K,gBAAAv/E,MAAQ,CACX4hF,OAAQ,SAAUzzH,EAAWr4D,EAAWC,EAAWC,GAAqB,OAAOD,EAAIo4D,EAAIn4D,EAAIF,CAAE,EAC7F+rL,YAAa,SAAU1zH,EAAWr4D,EAAWC,EAAWC,GACpD,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIr4D,C,EAE9BgsL,aAAc,SAAU3zH,EAAWr4D,EAAWC,EAAWC,GACrD,OAAQD,GAAKo4D,GAAKn4D,IAAMm4D,EAAI,GAAKr4D,C,EAErCisL,eAAgB,SAAU5zH,EAAWr4D,EAAWC,EAAWC,GACvD,OAAKm4D,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,EAAIo4D,EAAIA,EAAIr4D,GACrCC,EAAI,KAAQo4D,GAAMA,EAAI,GAAK,GAAKr4D,C,EAG5CksL,aAAc,SAAU7zH,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIr4D,C,EAElCmsL,cAAe,SAAU9zH,EAAWr4D,EAAWC,EAAWC,GACtD,OAAOD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAI,GAAKr4D,C,EAE/CosL,gBAAiB,SAAU/zH,EAAWr4D,EAAWC,EAAWC,GACxD,OAAKm4D,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,EAAIo4D,EAAIA,EAAIA,EAAIr4D,EAC1CC,EAAI,IAAMo4D,GAAK,GAAKA,EAAIA,EAAI,GAAKr4D,C,EAG5CqsL,aAAc,SAAUh0H,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIA,EAAIr4D,C,EAEtCssL,cAAe,SAAUj0H,EAAWr4D,EAAWC,EAAWC,GACtD,OAAQD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAIA,EAAI,GAAKr4D,C,EAEpDusL,gBAAiB,SAAUl0H,EAAWr4D,EAAWC,EAAWC,GACxD,OAAKm4D,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,EAAIo4D,EAAIA,EAAIA,EAAIA,EAAIr4D,GAC7CC,EAAI,IAAMo4D,GAAK,GAAKA,EAAIA,EAAIA,EAAI,GAAKr4D,C,EAGjDwsL,aAAc,SAAUn0H,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,GAAKo4D,GAAKn4D,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAIr4D,C,EAE1CysL,cAAe,SAAUp0H,EAAWr4D,EAAWC,EAAWC,GACtD,OAAOD,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,EAEvD0sL,gBAAiB,SAAUr0H,EAAWr4D,EAAWC,EAAWC,GACxD,OAAKm4D,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,EAAIo4D,EAAIA,EAAIA,EAAIA,EAAIA,EAAIr4D,EAClDC,EAAI,IAAMo4D,GAAK,GAAKA,EAAIA,EAAIA,EAAIA,EAAI,GAAKr4D,C,EAGpD2sL,YAAa,SAAUt0H,EAAWr4D,EAAWC,EAAWC,GACpD,OAAQD,EAAIvG,KAAKoH,IAAIu3D,EAAIn4D,GAAKxG,KAAKC,GAAK,IAAMsG,EAAID,C,EAEtD4sL,aAAc,SAAUv0H,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,EAAIvG,KAAKqH,IAAIs3D,EAAIn4D,GAAKxG,KAAKC,GAAK,IAAMqG,C,EAEjD6sL,eAAgB,SAAUx0H,EAAWr4D,EAAWC,EAAWC,GACvD,OAAQD,EAAI,GAAKvG,KAAKoH,IAAIpH,KAAKC,GAAK0+D,EAAIn4D,GAAK,GAAKF,C,EAGtD8sL,YAAa,SAAUz0H,EAAWr4D,EAAWC,EAAWC,GACpD,OAAa,GAALm4D,EAAUr4D,EAAIC,EAAIvG,KAAKgtB,IAAI,EAAG,IAAM2xC,EAAIn4D,EAAI,IAAMF,C,EAE9D+sL,aAAc,SAAU10H,EAAWr4D,EAAWC,EAAWC,GACrD,OAAQm4D,GAAKn4D,EAAKF,EAAIC,EAAIA,GAAiC,EAA3BvG,KAAKgtB,IAAI,GAAI,GAAK2xC,EAAIn4D,IAAUF,C,EAEpEgtL,eAAgB,SAAU30H,EAAWr4D,EAAWC,EAAWC,GACvD,OAAS,GAALm4D,EAAer4D,EACfq4D,GAAKn4D,EAAUF,EAAIC,GAClBo4D,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,EAAIvG,KAAKgtB,IAAI,EAAG,IAAM2xC,EAAI,IAAMr4D,EAC1DC,EAAI,GAA+B,EAAzBvG,KAAKgtB,IAAI,GAAI,KAAO2xC,IAAUr4D,C,EAGnDitL,YAAa,SAAU50H,EAAWr4D,EAAWC,EAAWC,GACpD,OAAQD,GAAKvG,KAAK4I,KAAK,GAAK+1D,GAAKn4D,GAAKm4D,GAAK,GAAKr4D,C,EAEpDktL,aAAc,SAAU70H,EAAWr4D,EAAWC,EAAWC,GACrD,OAAOD,EAAIvG,KAAK4I,KAAK,GAAK+1D,EAAIA,EAAIn4D,EAAI,GAAKm4D,GAAKr4D,C,EAEpDmtL,eAAgB,SAAU90H,EAAWr4D,EAAWC,EAAWC,GACvD,OAAKm4D,GAAKn4D,EAAI,GAAK,GAAWD,EAAI,GAAKvG,KAAK4I,KAAK,EAAI+1D,EAAIA,GAAK,GAAKr4D,EAC5DC,EAAI,GAAKvG,KAAK4I,KAAK,GAAK+1D,GAAK,GAAKA,GAAK,GAAKr4D,C,EAGvDotL,eAAgB,SAAU/0H,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAWorC,GAC7E,GAAS,GAALktB,EAAQ,OAAOr4D,EAAG,GAAgB,IAAXq4D,GAAKn4D,GAAS,OAAOF,EAAIC,EACpD,GAD4DkrC,IAAGA,EAAQ,GAAJjrC,IAC9DH,GAAKA,EAAIrG,KAAKglE,IAAIz+D,GAAI,CAAEF,EAAIE,EAAG,IAAIgtC,EAAI9B,EAAI,CAAI,MAC3C8B,EAAI9B,GAAK,EAAIzxC,KAAKC,IAAMD,KAAK0tG,KAAKnnG,EAAIF,GAC/C,OAASA,EAAIrG,KAAKgtB,IAAI,EAAG,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,IAAM,EAAIvzC,KAAKC,IAAMwxC,GAAMnrC,C,EAE3FqtL,gBAAiB,SAAUh1H,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAWorC,GAC9E,GAAS,GAALktB,EAAQ,OAAOr4D,EAAG,GAAgB,IAAXq4D,GAAKn4D,GAAS,OAAOF,EAAIC,EACpD,GAD4DkrC,IAAGA,EAAQ,GAAJjrC,IAC9DH,GAAKA,EAAIrG,KAAKglE,IAAIz+D,GAAI,CAAEF,EAAIE,EAAG,IAAIgtC,EAAI9B,EAAI,CAAI,MAC3C8B,EAAI9B,GAAK,EAAIzxC,KAAKC,IAAMD,KAAK0tG,KAAKnnG,EAAIF,GAC/C,OAAQA,EAAIrG,KAAKgtB,IAAI,GAAI,GAAK2xC,GAAK3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,IAAM,EAAIvzC,KAAKC,IAAMwxC,GAAKlrC,EAAID,C,EAEvFstL,kBAAmB,SAAUj1H,EAAWr4D,EAAWC,EAAWC,EAAWH,EAAWorC,GAChF,GAAS,GAALktB,EAAQ,OAAOr4D,EAAG,GAAoB,IAAfq4D,GAAKn4D,EAAI,GAAS,OAAOF,EAAIC,EACxD,GADgEkrC,IAAGA,EAAIjrC,GAAK,GAAK,OAC5EH,GAAKA,EAAIrG,KAAKglE,IAAIz+D,GAAI,CAAEF,EAAIE,EAAG,IAAIgtC,EAAI9B,EAAI,CAAI,MAC3C8B,EAAI9B,GAAK,EAAIzxC,KAAKC,IAAMD,KAAK0tG,KAAKnnG,EAAIF,GAC/C,OAAIs4D,EAAI,EAAiBt4D,EAAIrG,KAAKgtB,IAAI,EAAG,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,IAAM,EAAIvzC,KAAKC,IAAMwxC,IAA9E,GAAoFnrC,EAChGD,EAAIrG,KAAKgtB,IAAI,GAAI,IAAM2xC,GAAK,IAAM3+D,KAAKqH,KAAKs3D,EAAIn4D,EAAI+sC,IAAM,EAAIvzC,KAAKC,IAAMwxC,GAAK,GAAKlrC,EAAID,C,EAGlGutL,YAAa,SAAUl1H,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAYv/B,WAE3E,OADSA,MAALu/B,IAAgBA,EAAI,SACjBhtC,GAAKo4D,GAAKn4D,GAAKm4D,IAAMprB,EAAI,GAAKorB,EAAIprB,GAAKjtC,C,EAElDwtL,aAAc,SAAUn1H,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAYv/B,WAE5E,OADSA,MAALu/B,IAAgBA,EAAI,SACjBhtC,IAAMo4D,EAAIA,EAAIn4D,EAAI,GAAKm4D,IAAMprB,EAAI,GAAKorB,EAAIprB,GAAK,GAAKjtC,C,EAE/DytL,eAAgB,SAAUp1H,EAAWr4D,EAAWC,EAAWC,EAAW+sC,EAAYv/B,WAE9E,OADSA,MAALu/B,IAAgBA,EAAI,UACnBorB,GAAKn4D,EAAI,GAAK,EAAUD,EAAI,GAAKo4D,EAAIA,IAAuB,GAAhBprB,GAAC,QAAoBorB,EAAIprB,IAAMjtC,EACzEC,EAAI,IAAMo4D,GAAK,GAAKA,IAAuB,GAAhBprB,GAAC,QAAoBorB,EAAIprB,GAAK,GAAKjtC,C,EAGzE0tL,cAAe,SAAUr1H,EAAWr4D,EAAWC,EAAWC,GACtD,OAAOD,EAAIwpL,gBAAgBv/E,MAAMyjF,eAAeztL,EAAIm4D,EAAG,EAAGp4D,EAAGC,GAAKF,C,EAEtE2tL,eAAgB,SAAUt1H,EAAWr4D,EAAWC,EAAWC,GACvD,OAAKm4D,GAAKn4D,GAAM,EAAI,KACTD,GAAK,OAASo4D,EAAIA,GAAKr4D,EACvBq4D,EAAK,EAAI,KACTp4D,GAAK,QAAUo4D,GAAM,IAAM,MAASA,EAAI,KAAOr4D,EAC/Cq4D,EAAK,IAAM,KACXp4D,GAAK,QAAUo4D,GAAM,KAAO,MAASA,EAAI,OAASr4D,EAElDC,GAAK,QAAUo4D,GAAM,MAAQ,MAASA,EAAI,SAAWr4D,C,EAGpE4tL,iBAAkB,SAAUv1H,EAAWr4D,EAAWC,EAAWC,GACzD,OAAIm4D,EAAIn4D,EAAI,EAAgE,GAAtDupL,gBAAgBv/E,MAAMwjF,cAAkB,EAAJr1H,EAAO,EAAGp4D,EAAGC,GAAUF,EACV,GAA3DypL,gBAAgBv/E,MAAMyjF,eAAmB,EAAJt1H,EAAQn4D,EAAG,EAAGD,EAAGC,GAAc,GAAJD,EAASD,C,EAGzFuqL,mBAAoB,SAAUtB,EAAoBD,EAAmB/9D,EAAoB4iE,EAAkBx1H,EAAW8xH,GAClH,GAAIzwL,KAAKglE,IAAIuqH,IAAe5lH,KAAY3pE,KAAKglE,IAAIsqH,IAAc3lH,IAC3D,OAA4C4nD,EAGhD,IAAIygE,EAAKrzH,EAAIA,EACTy1H,EAAKpC,EAAKrzH,EAKd,OAJQ,EAAMy1H,EAAK,EAAMpC,EAAK,GAInBzgE,GAHH6iE,EAAK,EAAMpC,EAAKrzH,GAGI4wH,EAAakB,GAFjC2D,EAAKpC,GAEsC1C,EAAYmB,IADtD,EAAM2D,EAAK,EAAMpC,GAC+CmC,C,SC9KxEE,iBTEDjR,sEAiBX,KAbGA,GAAA,qBAIAA,MAAA,eAIAA,MAAA,mBAIAA,MAAA,uB,MAMSkR,sB,MUxBAC,uBAsDTv1L,YAAYwY,EAAe,MAClBA,IACL/U,KAAKK,IAAMyxL,uBAAuBC,kBAAkBh9K,GACpD/U,KAAKgyL,MAAQj9K,E,CAzCjB/d,yBAAyB+d,GACrB,GAAsD,MAAlD+8K,uBAAuBG,kBAAkBl9K,GACzC,OAAO+8K,uBAAuBG,kBAAkBl9K,GAEhD,IAAInU,EAAaZ,KAAKuwJ,uBAGtB,OAFAvwJ,KAAKiyL,kBAAkBl9K,GAAQnU,EAC/BZ,KAAKiyL,kBAAkBrxL,GAAMmU,EACtBnU,C,CASf5J,yBAAyB4J,GACrB,OAAOZ,KAAKiyL,kBAAkBrxL,E,CA8B9BA,SACA,OAAOZ,KAAKK,G,CAMZ0U,WACA,OAAO/U,KAAKgyL,K,CAGZj9K,SAAK9W,GACL+B,KAAKK,IAAMyxL,uBAAuBC,kBAAkB9zL,GACpD+B,KAAKgyL,MAAQ/zL,C,CAMbsN,WACA,OAAOvL,KAAKy5J,K,CAQhBy4B,WAAWj0L,GACP,OAAO,C,EAxFJ6zL,uBAAiBG,kBAAQ,GAKzBH,uBAAoBvhC,qBAAW,EAuFpC,MAAO4hC,qCAAqCL,uBAe9Cv1L,YAAYwY,GACR1C,MAAM0C,GACN/U,KAAKoyL,aAAe,EACpBpyL,KAAKqyL,mBAAqB5R,sCAAoCr4B,QAC9DpoJ,KAAKy5J,MAAQ+mB,wBAAsBvhK,M,CAMnCqzK,kBACA,OAAOtyL,KAAKoyL,Y,CAGZE,gBAAYr0L,GACZ+B,KAAKoyL,aAAen0L,C,CAMpBs0L,kBACA,OAAOvyL,KAAKqyL,kB,CAGZE,gBAAYt0L,GACZ+B,KAAKqyL,mBAAqBp0L,C,CAQ9Bi0L,WAAWj0L,GACP,OAAIwiL,sCAAoCr4B,SAAWpoJ,KAAKqyL,mBAC7Cp0L,EAAQ+B,KAAKoyL,aAEbn0L,EAAQ+B,KAAKoyL,Y,EAI1B,MAAOI,mCAAmCV,uBAU5Cv1L,YAAYwY,GACR1C,MAAM0C,GACN/U,KAAKyyL,cAAe,EACpBzyL,KAAKy5J,MAAQ+mB,wBAAsBkS,I,CAMnCH,kBACA,OAAOvyL,KAAKyyL,Y,CAGZF,gBAAYt0L,GACZ+B,KAAKyyL,aAAex0L,C,CAQxBi0L,WAAWj0L,GACP,OAAO+B,KAAKyyL,cAAgBx0L,C,EAI9B,MAAO00L,sCAAsCb,uBAK/Cv1L,YAAYwY,GACR1C,MAAM0C,GACN/U,KAAKy5J,MAAQ+mB,wBAAsB6H,O,CAQvC6J,WAAWj0L,GACP,OAAOA,C,QC3MF20L,qBAWTr2L,cACIyD,KAAK8hL,WAAa,GAClB9hL,KAAK6yL,YAAa,EAClB7yL,KAAK8yL,SAAW,EAChB9yL,KAAKgnL,cAAgB,EACrBhnL,KAAKinL,iBAAmB,EACxBjnL,KAAK+yL,MAAO,C,CAOfC,aAAazyJ,IACiC,GAAvCvgC,KAAK8hL,WAAW5jL,QAAQqiC,IACxBvgC,KAAK8hL,WAAWzlL,KAAKkkC,E,CAQ7B0yJ,gBAAgB1yJ,GACZ,IAAIh2B,EAAQvK,KAAK8hL,WAAW5jL,QAAQqiC,IACtB,GAAVh2B,GACAvK,KAAK8hL,WAAWp3K,OAAOH,EAAO,E,CAStC65J,MAAMilB,EAAuBC,EAA4C/D,GACrE,GAAIvlL,KAAK+yL,KACL,OAAO,EAEX,GAAI/yL,KAAK6yL,YAAexJ,EAAgBrpL,KAAK8yL,WAAavN,EACtD,OAAO,EAEX,GAAI,MAAQvlL,KAAK8hL,YAAc,GAAK9hL,KAAK8hL,WAAW7lL,OAChD,OAAO,EAEX,IAAK,IAAIwC,EAAI,EAAGA,EAAIuB,KAAK8hL,WAAW7lL,OAAQwC,IAAK,CAC7C,IAAIy0L,EAAMlzL,KAAK8hL,WAAWrjL,GAG1B,GADUy0L,EAAIhB,WAAW5I,EAAU4J,EAAIn+K,MAAM9W,OAKzC,OAHIi1L,EAAI3nL,MAAQi1K,wBAAsB6H,UAClCiB,EAAU4J,EAAIn+K,MAAM9W,OAAQ,IAEzB,CAEd,CACD,OAAO,C,EC3DT,MAAOk1L,6BAA6BhhL,SAetC5V,YAAY2F,GACRmQ,QACA,IAAI4yB,EAAM47I,wBAAwBhpG,MAAM31E,GACxClC,KAAKkC,KAAO+iC,EAAI7zB,IAChBpR,KAAKghL,QAAU/7I,EAAI+7I,O,CAOfoS,YACJ,IAAItS,EAAS9gL,KAAKkC,KAAK6+K,iBACnBsS,EAAoC,GACxC,IAAK,IAAI50L,EAAIqiL,EAAO7kL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIuyE,EAAI8vG,EAAOriL,GACX60L,EAAM,IAAI1U,0BAA0B5tG,EAAEj8D,MAC1Cs+K,EAAKjoF,QAAQkoF,GAGb,IAAK,IAAI3zL,KAAKqxE,EACV,GAAI,QAAUrxE,GAAK,UAAYA,GAAK,MAASqxE,EAAUrxE,GAGvD,IACK2zL,EAAY3zL,GAAMqxE,EAAUrxE,EAChC,CAAC,MAAOgb,GAAU,CAEvB3a,KAAKuzL,SAASviH,EAAE0uG,OAAQ4T,EAAKtzL,KAAKkC,KAErC,CACD,OAAOmxL,C,CAUHG,YAAY9T,EAA6B+T,EAA0CH,GACvF,IAAK5T,EAAQ,OAAO,KACpB,IAAItuK,EAAuC,GACvCsiL,EAAgB,KACpB,IAAK,IAAIj1L,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIwmC,EAAMy6I,EAAOjhL,GACbk1L,EAAc1uJ,EAAIy6I,OACtB,GAAIiU,EAAa,CACb,IAAIC,EAAW5zL,KAAKwzL,YAAYG,EAAaF,EAASH,GAClDM,IACAH,EAAQxuJ,EAAIrkC,IAAMgzL,EAASlU,OAAOkU,EAAShzL,KAE/C,QACH,CAED,GAAI,EAAIqe,OAAOgmB,EAAIrkC,IAAK,CACpB,GAAI,MAAQqkC,EAAIrkC,GAAI,CAChB,IAAI8nL,EAAczjJ,EAAI08I,gBAClB+G,GAAe,EAAIA,EAAYzsL,SAC/By3L,EAAQhL,EAAY,GAAG9nL,GAE9B,CACD,QACH,CAED,IAAI82E,EAAQ,IAAI+wG,gBAChBgL,EAAQxuJ,EAAIrkC,IAAM82E,EAClBtmE,EAAI6zB,EAAIrkC,IAAM82E,EACd,IAAK,IAAI/3E,KAAKslC,EACV,IACI,GAAI,WAAatlC,EAAG,CAChB,IAAI+mL,EAAoBzhJ,EAAItlC,GAC5B,GAAI+mL,GAAWr1K,MAAMC,QAAQo1K,GACzB,IAAK,IAAI/mL,EAAI+mL,EAAQzqL,OAAS,EAAG0D,GAAK,EAAGA,IAAK,CAC1C,IAAIyU,EAAOsyK,EAAQ/mL,GACfyU,GAAQ,GAAKA,EAAKlW,QAAQ,YAC1BkW,EAAOA,EAAK9V,UAAU,IAE1B,IAAIwF,EAAI/M,WAAWM,SAAS+c,GACxBtQ,GACA4zE,EAAM+xG,UAAU3lL,EAEvB,CAEL,QACH,CAAM,GAAI,mBAAqBnE,EAC5B,SACO,MAASslC,EAAYtlC,KAC3B+3E,EAAc/3E,GAAMslC,EAAYtlC,GAExC,CAAC,MAAOgb,GAAU,CAGvB24K,EAAI1T,SAASloG,EAChB,CACD,MAAO,CAAE92E,GAAI8yL,EAAOhU,OAAQtuK,E,CASxBmiL,SAAS7T,EAA6B4T,EAAgCpxL,GAE1E,GAAIw9K,EAAQ,CACR,IAAI+T,EAA2C,GAC/CzzL,KAAKwzL,YAAY9T,EAAQ+T,EAASH,GAClCtzL,KAAK6zL,eAAenU,EAAQ+T,EAASH,EAAKpxL,EAC7C,C,CAWG4xL,kBAAkBC,EAAmDrL,EAAuC+K,EAA0CvxL,EAAkC8xL,GAC5L,IAAK,IAAIpzL,KAAMmzL,EAAS,CACpB,IAAIr8G,EAAQ+7G,EAAQ7yL,GACpB,GAAI82E,EAAO,CAEP,IAAIu8G,EAA8Bv8G,EAAMgxG,YACpCwL,EAA8Bx8G,EAAMiqG,gBAEpCwS,EAASJ,EAAQnzL,GACrB,IAAK,IAAInC,EAAIiqL,EAAYzsL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CAC9C,IAAIy9D,EAAIwsH,EAAYjqL,GACpB,GAAI,MAAQy9D,EAAEt7D,GASd,IAAK,IAAIlB,EAAIy0L,EAAOl4L,OAAS,EAAGyD,GAAK,EAAGA,IAAK,CACzC,IAAI6vL,EAAK4E,EAAOz0L,GAGZ00L,EAAM,IAAIxB,qBACdwB,EAAIrN,UAAY0M,EAAQv3H,EAAEt7D,IAEtBs7D,EAAE4lH,YACF9hL,KAAKq0L,cAAcn4H,EAAE4lH,WAAYsS,EAAKlyL,GAGtCqtL,EAAGzN,YACH9hL,KAAKq0L,cAAc9E,EAAGzN,WAAYsS,EAAKlyL,GAI3C,IAAK,IAAIvC,KAAKu8D,EACN,QAAUv8D,GAAK,MAAQA,GAAK,cAAgBA,IAG3Cy0L,EAAYz0L,GAAMu8D,EAAUv8D,IAIjCu8D,EAAEo4H,KACFJ,EAAI9oF,QAAQgpF,GAEZH,EAAI7oF,QAAQgpF,EAEnB,MArCO,MAAQJ,EAASpzL,KACjBozL,EAASpzL,GAAM,IAEnBozL,EAASpzL,GAAIvE,KAAK6/D,EAmCzB,CACJ,CACJ,C,CAGGq4H,yBAAyBz+J,EAA2B29J,EAA0CvxL,GAClG,IAAIkyL,EAAM,IAAIxB,qBAEVa,EAAQ39J,EAAEl1B,MACVwzL,EAAIrN,UAAY0M,EAAQ39J,EAAEl1B,KAE1Bk1B,EAAEgsJ,YACF9hL,KAAKq0L,cAAcv+J,EAAEgsJ,WAAYsS,EAAKlyL,GAG1C,IAAK,IAAIvC,KAAKm2B,EACN,QAAUn2B,GAAK,MAAQA,GAAK,cAAgBA,IAG3Cy0L,EAAYz0L,GAAMm2B,EAAUn2B,IAGrC,OAAOy0L,C,CAYHP,eAAenU,EAA6B+T,EAA0CH,EAAgCpxL,EAAkCsyL,GAC5J,IAAK9U,EAAQ,OAAO,KAEpB,IAAIqU,EAAoD,GAExD,IAAK,IAAIt1L,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIwmC,EAAMy6I,EAAOjhL,GAEjB,GAAIwmC,EAAIy6I,OAAQ,CACZ,IAAI+U,EAAiBz0L,KAAK6zL,eAAe5uJ,EAAIy6I,OAAQ+T,EAASH,EAAKpxL,EAAM+iC,GACzE,GAAIwvJ,EAAgB,CAChB,IAAI/L,EAAczjJ,EAAI08I,gBAClB+G,GACA1oL,KAAK8zL,kBAAkBW,EAAgB/L,EAAa+K,EAASvxL,EAAM6xL,EAE1E,CACJ,CACJ,CAGD,IAAK,IAAIt1L,EAAIihL,EAAOzjL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIwmC,EAAMy6I,EAAOjhL,GAEjB,GAAIwmC,EAAIy6I,OACJ,SAEJ,GAAI,MAAQz6I,EAAIrkC,IACZ,GAAIqkC,EAAI08I,iBAAmB,EAAI18I,EAAI08I,gBAAgB1lL,OAAQ,CACnD,MAAQu4L,GACRlB,EAAIrT,aAAewT,EAAQxuJ,EAAI08I,gBAAgB,GAAG/gL,IAClD0yL,EAAI5L,iBAAmB1nL,KAAKu0L,yBAAyBtvJ,EAAI08I,gBAAgB,GAAI8R,EAASvxL,IAEtFuxL,EAAQe,EAAO5zL,IAAM6yL,EAAQxuJ,EAAI08I,gBAAgB,GAAG/gL,IAExD,QACH,MACE,IAAI,MAAQqkC,EAAIrkC,GAAI,CACvB,IAAI8nL,EAAczjJ,EAAI08I,gBACtB,GAAI+G,EACA,IAAK,IAAIhpL,EAAIgpL,EAAYzsL,OAAS,EAAGyD,GAAK,EAAGA,IAAK,CAC9C,IAAIo2B,EAAI4yJ,EAAYhpL,GAEpB,GADgB+zL,EAAQ39J,EAAEl1B,IAEtB,IAAK,IAAI8zL,KAAOjB,EAAS,CACrB,IAAI/7G,EAAQ+7G,EAAQiB,GAChBN,EAAMp0L,KAAKu0L,yBAAyBz+J,EAAG29J,EAASvxL,GAehD4zB,EAAEw+J,KACF58G,EAAMiqG,gBAAgBv2E,QAAQgpF,GAE9B18G,EAAMgxG,YAAYt9E,QAAQgpF,EAEjC,CAGR,CAEL,QACH,CAAM,GAAI,MAAQnvJ,EAAIrkC,GACnB,QACH,CAED,IAAI+gL,EAAkB18I,EAAI08I,gBAC1B,GAAIA,GAAmB8R,EAAQxuJ,EAAIrkC,IAAK,CAEpC,IAAIqzL,EAA8BR,EAAQxuJ,EAAIrkC,IAAI8nL,YAC9CwL,EAA8BT,EAAQxuJ,EAAIrkC,IAAI+gL,gBAClD,IAAK,IAAIjiL,EAAIiiL,EAAgB1lL,OAAS,EAAGyD,GAAK,EAAGA,IAAK,CAClD,IAAIo2B,EAAI6rJ,EAAgBjiL,GACxB,GAAI,MAAQo2B,EAAEl1B,GAAI,CACV,MAAQmzL,EAAQ9uJ,EAAIrkC,MACpBmzL,EAAQ9uJ,EAAIrkC,IAAM,IAEtBmzL,EAAQ9uJ,EAAIrkC,IAAIvE,KAAKy5B,GACrB,QACH,CAED,IAAIs+J,EAAMp0L,KAAKu0L,yBAAyBz+J,EAAE29J,EAAQvxL,GAE9C4zB,EAAEw+J,KACFJ,EAAI9oF,QAAQgpF,GAEZH,EAAI7oF,QAAQgpF,EAEnB,CACJ,CACJ,CAED,OAAOL,C,CAUHM,cAAch2L,EAA+B+1L,EAA2BlyL,GAC5E,IAAI+/K,EAAQ//K,EAAK8/K,eACjB,GAAI,MAAQC,GAAS,GAAKA,EAAMhmL,OAChC,IAAK,IAAIwC,EAAI,EAAGD,EAAMH,EAAIpC,OAAQwC,EAAID,EAAKC,IAAK,CAC5C,IAWIqF,EAXAgyB,EAAIz3B,EAAII,GACRyjL,EAA2B,KAC/B,IAAK,IAAIxiL,EAAIuiL,EAAMhmL,OAAS,EAAGyD,GAAK,EAAGA,IACnC,GAAIuiL,EAAMviL,GAAGkB,IAAMk1B,EAAEl1B,GAAI,CACrBshL,EAAOD,EAAMviL,GACb,KACH,CAEL,GAAI,MAAQwiL,EACR,OAGJ,GAAIA,EAAK32K,MAAQg1K,cAAYmS,KAAM,CAC/B,IAAI7uL,EAAI,IAAI2uL,2BAA2BtQ,EAAKntK,MAC5ClR,EAAE0uL,YAAcoC,QAAQ7+J,EAAEssJ,YAC1Bt+K,EAAID,CACP,MAAM,GAAIq+K,EAAK32K,MAAQg1K,cAAY4B,MAAO,CACvC,IAAI38K,EAAI,IAAI2sL,6BAA6BjQ,EAAKntK,MAC9CvP,EAAE8sL,YAAcrzK,OAAO6W,EAAEssJ,YACzB58K,EAAE+sL,YAAcz8J,EAAEvqB,KAClBzH,EAAI0B,CACP,MAAM,GAAI08K,EAAK32K,MAAQg1K,cAAY8H,QAAS,CAEzCvkL,EADQ,IAAI6uL,8BAA8BzQ,EAAKntK,KAElD,CACDq/K,EAAIpB,aAAalvL,EACpB,C,CAOLi/K,SAASn/K,GACL,IAAIgxL,EAAahxL,EAAU++K,kBAE3B,IAAK,IAAIlkL,EAAI,EAAGD,EAAMo2L,EAAU34L,OAAQwC,EAAID,EAAKC,IAC7Cm2L,EAAUn2L,GAAG0E,UAEjByxL,EAAU34L,OAAS,EAEnB,IAAI6kL,EAAS9gL,KAAKozL,YAClB,IAAK,IAAI30L,EAAI,EAAGD,EAAMsiL,EAAO7kL,OAAQwC,EAAID,EAAKC,IAC1CmF,EAAEmkL,mBAAmBjH,EAAOriL,IAGhC,IAAIwjL,EAAQjiL,KAAKkC,KAAK8/K,eACtB,GAAIC,EAAO,CACP,IAAI4S,EAA2C,GAC/C,IAAK,IAAIp2L,EAAIwjL,EAAMhmL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACxC,IAAIuwC,EAAIizI,EAAMxjL,GACV4K,EAAK,IAAIuoL,gBACbvoL,EAAG0L,KAAOi6B,EAAEj6B,KACZ1L,EAAGkC,KAAOyjC,EAAEzjC,KACZlC,EAAGpL,MAAQ+wC,EAAEiF,IACb4gJ,EAAQ7lJ,EAAEj6B,MAAQ1L,CACrB,CACDzF,EAAEo/K,WAAa6R,CAClB,C,EClZT,MAAMC,GAAe,IAAIztI,QACnB0tI,GAAe,IAAI1tI,QACnB2tI,GAAe,IAAI3tI,QACnB4tI,GAAe,IAAI5tI,QACnB6tI,GAAe,IAAI75K,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,I,MAKvE85K,UAyYT54L,YAAYk2D,EAAc,EAAG2iI,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGC,EAAc,EAAGvpJ,EAAyB,MACjT,GAAwB,GAApBh7B,UAAU1V,QAId,GAAyB,IAArB0V,UAAU1V,QAAiC,OAAjB0V,UAAU,GAAxC,CAGA,IAAIkP,EAA6B7gB,KAAK2sC,SAAhBA,GAAsD,IAAItxB,aAAa,IAC7FwF,EAAE,GAAK4xC,EACP5xC,EAAE,GAAKu0K,EACPv0K,EAAE,GAAKw0K,EACPx0K,EAAE,GAAKy0K,EACPz0K,EAAE,GAAK00K,EACP10K,EAAE,GAAK20K,EACP30K,EAAE,GAAK40K,EACP50K,EAAE,GAAK60K,EACP70K,EAAE,GAAK80K,EACP90K,EAAE,GAAK+0K,EACP/0K,EAAE,IAAMg1K,EACRh1K,EAAE,IAAMi1K,EACRj1K,EAAE,IAAMk1K,EACRl1K,EAAE,IAAMm1K,EACRn1K,EAAE,IAAMo1K,EACRp1K,EAAE,IAAMq1K,CAlBJ,OAJAl2L,KAAK2sC,SAAWuoJ,GAAa76K,O,CA1XrCrjB,uBAAuBm/L,EAAa7wL,GAChC,IAAI8wL,EAAmB9wL,EAAIqnC,SACvBmE,EAAYvzC,KAAKqH,IAAIuxL,GAAMryL,EAAYvG,KAAKoH,IAAIwxL,GAEpDC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EACpFA,EAAG,GAAKA,EAAG,IAAM,EACjBA,EAAG,GAAKA,EAAG,IAAMtyL,EACjBsyL,EAAG,GAAKtlJ,EACRslJ,EAAG,IAAMtlJ,C,CASb95C,uBAAuBm/L,EAAa7wL,GAEhC,IAAI8wL,EAAmB9wL,EAAIqnC,SACvBmE,EAAYvzC,KAAKqH,IAAIuxL,GAAMryL,EAAYvG,KAAKoH,IAAIwxL,GAEpDC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EACpFA,EAAG,GAAKA,EAAG,IAAM,EACjBA,EAAG,GAAKA,EAAG,IAAMtyL,EACjBsyL,EAAG,IAAMtlJ,EACTslJ,EAAG,GAAKtlJ,C,CAQZ95C,uBAAuBm/L,EAAa7wL,GAEhC,IAAI8wL,EAAmB9wL,EAAIqnC,SACvBmE,EAAYvzC,KAAKqH,IAAIuxL,GAAMryL,EAAYvG,KAAKoH,IAAIwxL,GAEpDC,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EACpFA,EAAG,IAAMA,EAAG,IAAM,EAClBA,EAAG,GAAKA,EAAG,GAAKtyL,EAChBsyL,EAAG,GAAKtlJ,EACRslJ,EAAG,IAAMtlJ,C,CAUb95C,kCAAkCq/L,EAAaC,EAAeC,EAAcl3L,GACxEm3L,WAAWC,uBAAuBJ,EAAKC,EAAOC,EAAMC,WAAW3uL,MAC/DstL,UAAUuB,yBAAyBF,WAAW3uL,KAAMxI,E,CASxDrI,0BAA0B2/L,EAAeh5L,EAAe0B,GACpD,IAAIH,EAAYy3L,EAAKz3L,EACjBC,EAAYw3L,EAAKx3L,EACjBghC,EAAYw2J,EAAKx2J,EACjBx7B,EAAcpH,KAAKoH,IAAIhH,GACvBiH,EAAcrH,KAAKqH,IAAIjH,GACvBivE,EAAa1tE,EAAIA,EACjB6tE,EAAa5tE,EAAIA,EACjBy3L,EAAaz2J,EAAIA,EACjB02J,EAAa33L,EAAIC,EACjB23L,EAAa53L,EAAIihC,EACjB42J,EAAa53L,EAAIghC,EAEjB62J,EAAwB33L,EAAOstC,SACnCqqJ,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,IAAM,EAClFA,EAAQ,IAAM,EACdA,EAAQ,GAAKpqH,EAAMjoE,GAAO,EAAMioE,GAChCoqH,EAAQ,GAAMH,EAAMlyL,EAAMkyL,EAAQjyL,EAAMu7B,EACxC62J,EAAQ,GAAMF,EAAMnyL,EAAMmyL,EAAQlyL,EAAMzF,EACxC63L,EAAQ,GAAMH,EAAMlyL,EAAMkyL,EAAQjyL,EAAMu7B,EACxC62J,EAAQ,GAAKjqH,EAAMpoE,GAAO,EAAMooE,GAChCiqH,EAAQ,GAAMD,EAAMpyL,EAAMoyL,EAAQnyL,EAAM1F,EACxC83L,EAAQ,GAAMF,EAAMnyL,EAAMmyL,EAAQlyL,EAAMzF,EACxC63L,EAAQ,GAAMD,EAAMpyL,EAAMoyL,EAAQnyL,EAAM1F,EACxC83L,EAAQ,IAAMJ,EAAMjyL,GAAO,EAAMiyL,E,CAQrC5/L,gCAAgC2oF,EAAsBtgF,GAClD,IAAI23L,EAAwB33L,EAAOstC,SAC/BsqJ,EAAoBt3G,EAASzgF,EAC7Bg4L,EAAoBv3G,EAASxgF,EAC7Bg4L,EAAoBx3G,EAASx/C,EAC7Bi3J,EAAoBz3G,EAAS1xD,EAE7B2+C,EAAaqqH,EAAYA,EACzBlqH,EAAamqH,EAAYA,EACzBN,EAAaO,EAAYA,EACzBN,EAAaI,EAAYC,EACzBG,EAAaF,EAAYC,EACzBE,EAAaH,EAAYF,EACzBM,EAAaL,EAAYE,EACzBL,EAAaG,EAAYC,EACzBK,EAAaP,EAAYG,EAE7BJ,EAAQ,GAAKA,EAAQ,GAAKA,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,IAAMA,EAAQ,IAAM,EAClFA,EAAQ,IAAM,EACdA,EAAQ,GAAK,EAAO,GAAOjqH,EAAK6pH,GAChCI,EAAQ,GAAK,GAAOH,EAAKQ,GACzBL,EAAQ,GAAK,GAAOM,EAAKC,GACzBP,EAAQ,GAAK,GAAOH,EAAKQ,GACzBL,EAAQ,GAAK,EAAO,GAAOJ,EAAKhqH,GAChCoqH,EAAQ,GAAK,GAAOD,EAAKS,GACzBR,EAAQ,GAAK,GAAOM,EAAKC,GACzBP,EAAQ,GAAK,GAAOD,EAAKS,GACzBR,EAAQ,IAAM,EAAO,GAAOjqH,EAAKH,E,CAQrC51E,uBAAuBygM,EAAgBnyL,GAEnC,IAAI8wL,EAAmB9wL,EAAIqnC,SAC3BypJ,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,EACzEA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAM,EAClCA,EAAG,IAAMqB,EAAMv4L,EACfk3L,EAAG,IAAMqB,EAAMt4L,EACfi3L,EAAG,IAAMqB,EAAMt3J,C,CAQnBnpC,qBAAqByN,EAAgBa,GAEjC,IAAI8wL,EAAmB9wL,EAAIqnC,SAC3BypJ,EAAG,GAAK3xL,EAAMvF,EACdk3L,EAAG,GAAK3xL,EAAMtF,EACdi3L,EAAG,IAAM3xL,EAAM07B,EACfi2J,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,EACpGA,EAAG,IAAM,C,CASbp/L,gBAAgBygE,EAAiBlvD,EAAkBjD,GAC/C,IAAI0rE,EAAkBzoE,EAAMokC,SACxBtiB,EAAkBotC,EAAK9qB,SACvB9rB,EAAkBvb,EAAIqnC,SAEtB+qJ,EAAc1mH,EAAE,GAAI2mH,EAAc3mH,EAAE,GAAI4mH,EAAc5mH,EAAE,GAAI6mH,EAAc7mH,EAAE,GAC5E8mH,EAAc9mH,EAAE,GAAI+mH,EAAc/mH,EAAE,GAAIgnH,EAAchnH,EAAE,GAAIinH,EAAcjnH,EAAE,GAC5EknH,EAAclnH,EAAE,GAAImnH,EAAcnnH,EAAE,GAAIonH,EAAcpnH,EAAE,IAAKqnH,EAAcrnH,EAAE,IAC7EsnH,EAActnH,EAAE,IAAKunH,EAAcvnH,EAAE,IAAKwnH,EAAcxnH,EAAE,IAAKynH,EAAcznH,EAAE,IAE/E0nH,EAAcruK,EAAE,GAAIsuK,EAActuK,EAAE,GAAIuuK,EAAcvuK,EAAE,GAAIwuK,EAAcxuK,EAAE,GAC5EyuK,EAAczuK,EAAE,GAAI0uK,EAAc1uK,EAAE,GAAI2uK,EAAc3uK,EAAE,GAAI4uK,EAAc5uK,EAAE,GAC5E6uK,EAAc7uK,EAAE,GAAI8uK,EAAc9uK,EAAE,GAAI+uK,EAAc/uK,EAAE,IAAKgvK,EAAchvK,EAAE,IAC7EivK,EAAcjvK,EAAE,IAAKkvK,EAAclvK,EAAE,IAAKmvK,EAAcnvK,EAAE,IAAKovK,EAAcpvK,EAAE,IAEnFxJ,EAAE,GAAM62K,EAAMgB,EAAQf,EAAMmB,EAAQlB,EAAMsB,EAAQrB,EAAMyB,EACxDz4K,EAAE,GAAM62K,EAAMiB,EAAQhB,EAAMoB,EAAQnB,EAAMuB,EAAQtB,EAAM0B,EACxD14K,EAAE,GAAM62K,EAAMkB,EAAQjB,EAAMqB,EAAQpB,EAAMwB,EAAQvB,EAAM2B,EACxD34K,EAAE,GAAM62K,EAAMmB,EAAQlB,EAAMsB,EAAQrB,EAAMyB,EAAQxB,EAAM4B,EACxD54K,EAAE,GAAMi3K,EAAMY,EAAQX,EAAMe,EAAQd,EAAMkB,EAAQjB,EAAMqB,EACxDz4K,EAAE,GAAMi3K,EAAMa,EAAQZ,EAAMgB,EAAQf,EAAMmB,EAAQlB,EAAMsB,EACxD14K,EAAE,GAAMi3K,EAAMc,EAAQb,EAAMiB,EAAQhB,EAAMoB,EAAQnB,EAAMuB,EACxD34K,EAAE,GAAMi3K,EAAMe,EAAQd,EAAMkB,EAAQjB,EAAMqB,EAAQpB,EAAMwB,EACxD54K,EAAE,GAAMq3K,EAAMQ,EAAQP,EAAMW,EAAQV,EAAMc,EAAQb,EAAMiB,EACxDz4K,EAAE,GAAMq3K,EAAMS,EAAQR,EAAMY,EAAQX,EAAMe,EAAQd,EAAMkB,EACxD14K,EAAE,IAAOq3K,EAAMU,EAAQT,EAAMa,EAAQZ,EAAMgB,EAAQf,EAAMmB,EACzD34K,EAAE,IAAOq3K,EAAMW,EAAQV,EAAMc,EAAQb,EAAMiB,EAAQhB,EAAMoB,EACzD54K,EAAE,IAAOy3K,EAAMI,EAAQH,EAAMO,EAAQN,EAAMU,EAAQT,EAAMa,EACzDz4K,EAAE,IAAOy3K,EAAMK,EAAQJ,EAAMQ,EAAQP,EAAMW,EAAQV,EAAMc,EACzD14K,EAAE,IAAOy3K,EAAMM,EAAQL,EAAMS,EAAQR,EAAMY,EAAQX,EAAMe,EACzD34K,EAAE,IAAOy3K,EAAMO,EAAQN,EAAMU,EAAQT,EAAMa,EAAQZ,EAAMgB,C,CAQ7DziM,4BAA4B2oF,EAAsBr6E,GAC9C,IAAIub,EAAkBvb,EAAIqnC,SACtBztC,EAAYygF,EAASzgF,EAAGC,EAAYwgF,EAASxgF,EAAGghC,EAAYw/C,EAASx/C,EAAGlS,EAAY0xD,EAAS1xD,EAC7F4lB,EAAa30C,EAAIA,EACjBu6D,EAAat6D,EAAIA,EACjBu6L,EAAav5J,EAAIA,EAEjBysC,EAAa1tE,EAAI20C,EACjB8lJ,EAAax6L,EAAI00C,EACjBk5B,EAAa5tE,EAAIs6D,EACjB69H,EAAan3J,EAAI0T,EACjB+lJ,EAAaz5J,EAAIs5B,EACjBm9H,EAAaz2J,EAAIu5J,EACjB58E,EAAa7uF,EAAI4lB,EACjBgmJ,EAAa5rK,EAAIwrC,EACjBqgI,EAAa7rK,EAAIyrK,EAErB74K,EAAE,GAAK,EAAIksD,EAAK6pH,EAChB/1K,EAAE,GAAK84K,EAAKG,EACZj5K,EAAE,GAAKy2K,EAAKuC,EACZh5K,EAAE,GAAK,EAEPA,EAAE,GAAK84K,EAAKG,EACZj5K,EAAE,GAAK,EAAI+rD,EAAKgqH,EAChB/1K,EAAE,GAAK+4K,EAAK98E,EACZj8F,EAAE,GAAK,EAEPA,EAAE,GAAKy2K,EAAKuC,EACZh5K,EAAE,GAAK+4K,EAAK98E,EACZj8F,EAAE,IAAM,EAAI+rD,EAAKG,EACjBlsD,EAAE,IAAM,EAERA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,C,CAUZ7pB,kCAAkCygM,EAAgBviF,EAAiBzwG,EAAgBa,GAC/E,IAAI8wL,EAAmB9wL,EAAIqnC,SAEvBztC,EAAYg2G,EAAIh2G,EAAGC,EAAY+1G,EAAI/1G,EAAGghC,EAAY+0E,EAAI/0E,EAAGlS,EAAYinF,EAAIjnF,EAAG4lB,EAAa30C,EAAIA,EAAGu6D,EAAat6D,EAAIA,EAAGu6L,EAAav5J,EAAIA,EACrIysC,EAAa1tE,EAAI20C,EAAIgjJ,EAAa33L,EAAIu6D,EAAIq9H,EAAa53L,EAAIw6L,EAAI3sH,EAAa5tE,EAAIs6D,EAAIs9H,EAAa53L,EAAIu6L,EAAI9C,EAAaz2J,EAAIu5J,EAC1H58E,EAAa7uF,EAAI4lB,EAAIgmJ,EAAa5rK,EAAIwrC,EAAIqgI,EAAa7rK,EAAIyrK,EAAI9mH,EAAanuE,EAAMvF,EAAG2zE,EAAapuE,EAAMtF,EAAG2f,EAAara,EAAM07B,EAElIi2J,EAAG,IAAM,GAAKrpH,EAAK6pH,IAAOhkH,EAC1BwjH,EAAG,IAAMS,EAAKiD,GAAMlnH,EACpBwjH,EAAG,IAAMU,EAAK+C,GAAMjnH,EACpBwjH,EAAG,GAAK,EACRA,EAAG,IAAMS,EAAKiD,GAAMjnH,EACpBujH,EAAG,IAAM,GAAKxpH,EAAKgqH,IAAO/jH,EAC1BujH,EAAG,IAAMW,EAAKj6E,GAAMjqC,EACpBujH,EAAG,GAAK,EACRA,EAAG,IAAMU,EAAK+C,GAAM/6K,EACpBs3K,EAAG,IAAMW,EAAKj6E,GAAMh+F,EACpBs3K,EAAG,KAAO,GAAKxpH,EAAKG,IAAOjuD,EAC3Bs3K,EAAG,IAAM,EACTA,EAAG,IAAMqB,EAAMv4L,EACfk3L,EAAG,IAAMqB,EAAMt4L,EACfi3L,EAAG,IAAMqB,EAAMt3J,EACfi2J,EAAG,IAAM,C,CAUbp/L,oBAAoB+iM,EAAc1vL,EAAiB2vL,EAAa10L,GAC5D,IAAI20L,EAAmB30L,EAAIqnC,SACvButJ,EAAiBpF,GACjBqF,EAAiBpF,GACjBqF,EAAiBpF,GACrB3tI,QAAQgzI,SAASN,EAAK1vL,EAAQ+vL,GAC9B/yI,QAAQp/C,UAAUmyL,EAAOA,GACzB/yI,QAAQi6B,MAAM04G,EAAII,EAAOF,GACzB7yI,QAAQp/C,UAAUiyL,EAAOA,GACzB7yI,QAAQi6B,MAAM84G,EAAOF,EAAOC,GAE5BF,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,EACzBA,EAAG,IAAM,EACTA,EAAG,GAAKC,EAAMh7L,EACd+6L,EAAG,GAAKC,EAAM/6L,EACd86L,EAAG,GAAKC,EAAM/5J,EACd85J,EAAG,GAAKE,EAAMj7L,EACd+6L,EAAG,GAAKE,EAAMh7L,EACd86L,EAAG,GAAKE,EAAMh6J,EACd85J,EAAG,GAAKG,EAAMl7L,EACd+6L,EAAG,GAAKG,EAAMj7L,EACd86L,EAAG,IAAMG,EAAMj6J,EAEf85J,EAAG,KAAO5yI,QAAQg6B,IAAI64G,EAAOH,GAC7BE,EAAG,KAAO5yI,QAAQg6B,IAAI84G,EAAOJ,GAC7BE,EAAG,KAAO5yI,QAAQg6B,IAAI+4G,EAAOL,E,CAWjC/iM,yBAAyBsjM,EAAaC,EAAgBC,EAAeC,EAAcn1L,GAC/E,IAAIo1L,EAAiB,EAAMn9L,KAAK2H,IAAU,GAANo1L,GAGhCK,EAAoBH,GAFHE,EAASH,GAG1BK,EAAqBJ,EAAQE,EACjCvF,UAAU0F,4BAA4BF,EAAWA,GAAYC,EAAYA,EAAYJ,EAAOC,EAAMn1L,E,CAatGtO,kCAAkCygE,EAAclvD,EAAeC,EAAgB2lB,EAAaqsK,EAAeC,EAAcn1L,GACrH,IAAI8wL,EAAmB9wL,EAAIqnC,SACvBmuJ,EAAiBL,GAAQA,EAAOD,GACpCpE,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EAC3EA,EAAG,GAAK,EAAMoE,GAASjyL,EAAQkvD,GAC/B2+H,EAAG,GAAK,EAAMoE,GAASrsK,EAAM3lB,GAC7B4tL,EAAG,IAAM3+H,EAAOlvD,IAAUA,EAAQkvD,GAClC2+H,EAAG,IAAMjoK,EAAM3lB,IAAW2lB,EAAM3lB,GAChC4tL,EAAG,KAAO0E,EACV1E,EAAG,KAAO,EACVA,EAAG,KAAOoE,EAAQM,C,CAatB9jM,4BAA4BygE,EAAclvD,EAAeC,EAAgB2lB,EAAaqsK,EAAeC,EAAcn1L,GAE/G,IAAI8wL,EAAmB9wL,EAAIqnC,SACvBmuJ,EAAiB,GAAOL,EAAOD,GACnCpE,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAM,EACzEA,EAAG,IAAM,EACTA,EAAG,GAAK,GAAO7tL,EAAQkvD,GACvB2+H,EAAG,GAAK,GAAOjoK,EAAM3lB,GACrB4tL,EAAG,KAAO0E,EACV1E,EAAG,KAAO3+H,EAAOlvD,IAAUkvD,EAAOlvD,GAClC6tL,EAAG,KAAOjoK,EAAM3lB,IAAWA,EAAS2lB,GACpCioK,EAAG,KAAOoE,EAAQM,C,CA2CtBC,sBAAsBC,EAAaC,GAC/B,GAAID,EAAM,GAAKA,EAAM,EACjB,MAAM,IAAI9xK,MAAM,iEACpB,GAAI+xK,EAAS,GAAKA,EAAS,EACvB,MAAM,IAAI/xK,MAAM,oEAEpB,OAAOlpB,KAAK2sC,SAAgB,EAANquJ,EAAWC,E,CASrCC,sBAAsBF,EAAaC,EAAgBh9L,GAC/C,GAAI+8L,EAAM,GAAKA,EAAM,EACjB,MAAM,IAAI9xK,MAAM,iEACpB,GAAI+xK,EAAS,GAAKA,EAAS,EACvB,MAAM,IAAI/xK,MAAM,oEAEpBlpB,KAAK2sC,SAAgB,EAANquJ,EAAWC,GAAUh9L,C,CAOxCk9L,YAAYx7G,GACR,IAAIs3G,EAAoBt3G,EAASzgF,EAC7Bg4L,EAAoBv3G,EAASxgF,EAC7Bg4L,EAAoBx3G,EAASx/C,EAC7Bi3J,EAAoBz3G,EAAS1xD,EAE7B2+C,EAAaqqH,EAAYA,EACzBlqH,EAAamqH,EAAYA,EACzBN,EAAaO,EAAYA,EACzBN,EAAaI,EAAYC,EACzBG,EAAaF,EAAYC,EACzBE,EAAaH,EAAYF,EACzBM,EAAaL,EAAYE,EACzBL,EAAaG,EAAYC,EACzBK,EAAaP,EAAYG,EAEzBv2K,EAAkB7gB,KAAK2sC,SAC3B9rB,EAAE,GAAK,EAAO,GAAOksD,EAAK6pH,GAC1B/1K,EAAE,GAAK,GAAOg2K,EAAKQ,GACnBx2K,EAAE,GAAK,GAAOy2K,EAAKC,GACnB12K,EAAE,GAAK,GAAOg2K,EAAKQ,GACnBx2K,EAAE,GAAK,EAAO,GAAO+1K,EAAKhqH,GAC1B/rD,EAAE,GAAK,GAAOk2K,EAAKS,GACnB32K,EAAE,GAAK,GAAOy2K,EAAKC,GACnB12K,EAAE,GAAK,GAAOk2K,EAAKS,GACnB32K,EAAE,IAAM,EAAO,GAAOksD,EAAKH,E,CAO/BwuH,YAAYjnH,GACR,IAAItzD,EAAkB7gB,KAAK2sC,SAC3B9rB,EAAE,IAAMszD,EAASj1E,EACjB2hB,EAAE,IAAMszD,EAASh1E,EACjB0hB,EAAE,IAAMszD,EAASh0C,C,CAQrBk7J,kBAAkB/tJ,GACd,IAAIzsB,EAAkB7gB,KAAK2sC,SACvBypJ,EAAmB9oJ,EAAMX,SAE7B,OAAQqwC,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,GAAIu1K,EAAG,KAAOp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,MAAQp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,MAAQp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,MAAQp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,MAAQp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,MAAQp5G,YAAYQ,UAAU38D,EAAE,IAAKu1K,EAAG,I,CAUhnBkF,uBAAuBC,EAAsB57G,EAAsBl7E,GAC/D,IAAI+2L,EAA4BC,GAChC,OAAIz7L,KAAK07L,0BAA0BH,EAAaC,EAAgB/2L,IAC5D+xL,WAAWmF,oBAAoBH,EAAgB77G,IACxC,IAEPA,EAASr7E,YACF,E,CAWfo3L,0BAA0BH,EAAsBC,EAA2B/2L,GACvE,IAAIoc,EAAkB7gB,KAAK2sC,SACvBivJ,EAAcL,EACdM,EAAmBL,EAAe7uJ,SAClCmvJ,EAAcr3L,EAGlBm3L,EAAG18L,EAAI2hB,EAAE,IACT+6K,EAAGz8L,EAAI0hB,EAAE,IACT+6K,EAAGz7J,EAAItf,EAAE,IAGT,IAAI4xC,EAAc5xC,EAAE,GAAIu0K,EAAcv0K,EAAE,GAAIw0K,EAAcx0K,EAAE,GACxD00K,EAAc10K,EAAE,GAAI20K,EAAc30K,EAAE,GAAI40K,EAAc50K,EAAE,GACxD80K,EAAc90K,EAAE,GAAI+0K,EAAc/0K,EAAE,GAAIg1K,EAAch1K,EAAE,IAExDk7K,EAAaD,EAAG58L,EAAI3B,KAAK4I,KAAMssD,EAAMA,EAAQ2iI,EAAMA,EAAQC,EAAMA,GACjE2G,EAAaF,EAAG38L,EAAI5B,KAAK4I,KAAMovL,EAAMA,EAAQC,EAAMA,EAAQC,EAAMA,GACjEwG,EAAaH,EAAG37J,EAAI5iC,KAAK4I,KAAMwvL,EAAMA,EAAQC,EAAMA,EAAQC,EAAMA,GAGrE,GAAI74G,YAAYI,OAAO2+G,IAAO/+G,YAAYI,OAAO4+G,IAAOh/G,YAAYI,OAAO6+G,GAGvE,OAFAJ,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EACpGA,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAM,GAC3B,EAIX,IAAIK,EAAcpH,GAClBoH,EAAGh9L,EAAIy2L,EAAMsG,EACbC,EAAG/8L,EAAIy2L,EAAMqG,EACbC,EAAG/7J,EAAI01J,EAAMoG,EACb,IAAIE,EAAqBpH,GACzBoH,EAAUj9L,EAAIuzD,EAAMspI,EACpBI,EAAUh9L,EAAIi2L,EAAM2G,EACpBI,EAAUh8J,EAAIk1J,EAAM0G,EACpB,IAAI/B,EAAchF,GAClB3tI,QAAQi6B,MAAM46G,EAAIC,EAAWnC,GAC7B,IAAIzxL,EAAiBwsL,GAsBrB,OArBA1tI,QAAQi6B,MAAM04G,EAAIkC,EAAI3zL,GAEtBszL,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAMA,EAAG,IAAM,EACpDA,EAAG,IAAM,EACTA,EAAG,GAAKtzL,EAAMrJ,EACd28L,EAAG,GAAKtzL,EAAMpJ,EACd08L,EAAG,GAAKtzL,EAAM43B,EAEd07J,EAAG,GAAK7B,EAAG96L,EACX28L,EAAG,GAAK7B,EAAG76L,EACX08L,EAAG,GAAK7B,EAAG75J,EAEX07J,EAAG,GAAKK,EAAGh9L,EACX28L,EAAG,GAAKK,EAAG/8L,EACX08L,EAAG,IAAMK,EAAG/7J,EAGV07J,EAAG,GAAKppI,EAAMopI,EAAG,GAAKzG,EAAMyG,EAAG,GAAKxG,EAAmC,IAASyG,EAAG58L,GAAK68L,GACxFF,EAAG,GAAKtG,EAAMsG,EAAG,GAAKrG,EAAMqG,EAAG,GAAKpG,EAA+B,IAASqG,EAAG38L,GAAK68L,GACpFH,EAAG,GAAKlG,EAAMkG,EAAG,GAAKjG,EAAMiG,EAAG,IAAMhG,EAAoC,IAASiG,EAAG37J,GAAK87J,IAErF,C,CAUXG,sBAAsBC,GAClB,IAAI/F,EAAgB/4L,KAAK0tG,MAAMjrG,KAAK2sC,SAAS,IAC7C0vJ,EAAal9L,EAAIm3L,EAGE/4L,KAAKoH,IAAI2xL,GACjBt5G,YAAYC,eACnBo/G,EAAal8J,EAAI5iC,KAAKyuH,MAAMhsH,KAAK2sC,SAAS,GAAI3sC,KAAK2sC,SAAS,IAC5D0vJ,EAAan9L,EAAI3B,KAAKyuH,MAAMhsH,KAAK2sC,SAAS,GAAI3sC,KAAK2sC,SAAS,OAE5D0vJ,EAAal8J,EAAI5iC,KAAKyuH,OAAOhsH,KAAK2sC,SAAS,GAAI3sC,KAAK2sC,SAAS,IAC7D0vJ,EAAan9L,EAAI,E,CAOzB+I,YACI,IAAImT,EAAkBpb,KAAK2sC,SACvB7oC,EAAYsX,EAAE,GAAIrX,EAAYqX,EAAE,GAAIyF,EAAYzF,EAAE,GAAIkP,EAAY/sB,KAAK4I,KAAKrC,EAAIA,EAAIC,EAAIA,EAAI8c,EAAIA,GACpG,IAAIyJ,EAOA,OAHAlP,EAAE,GAAK,EACPA,EAAE,GAAK,OACPA,EAAE,GAAK,GALE,GAALkP,IAQRA,EAAI,EAAIA,EACRlP,EAAE,GAAKtX,EAAIwmB,EACXlP,EAAE,GAAKrX,EAAIumB,EACXlP,EAAE,GAAKyF,EAAIyJ,E,CAMfgyK,YACI,IAAIz7K,EAAiBq7C,EAoBrB,OAlBAA,GADAr7C,EAAI7gB,KAAK2sC,UACH,GACN9rB,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKq7C,EACPA,EAAIr7C,EAAE,GACNA,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKq7C,EACPA,EAAIr7C,EAAE,GACNA,EAAE,GAAKA,EAAE,IACTA,EAAE,IAAMq7C,EACRA,EAAIr7C,EAAE,GACNA,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKq7C,EACPA,EAAIr7C,EAAE,GACNA,EAAE,GAAKA,EAAE,IACTA,EAAE,IAAMq7C,EACRA,EAAIr7C,EAAE,IACNA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMq7C,EACDl8D,I,CAOXqG,OAAOf,GAEH,IAAIi3L,EAAmBv8L,KAAK2sC,SACxBypJ,EAAmB9wL,EAAIqnC,SACvB6vJ,EAAcD,EAAG,GAAIE,EAAcF,EAAG,GAAIG,EAAcH,EAAG,GAAII,EAAcJ,EAAG,GAAIK,EAAcL,EAAG,GAAIM,EAAcN,EAAG,GAAIO,EAAcP,EAAG,GAAIQ,EAAcR,EAAG,GAAIS,EAAcT,EAAG,GAAIU,EAAcV,EAAG,GAAIW,EAAcX,EAAG,IAAKY,EAAcZ,EAAG,IAAKa,EAAcb,EAAG,IAAKc,EAAcd,EAAG,IAAKe,EAAcf,EAAG,IAAKgB,EAAchB,EAAG,IAEjViB,EAAchB,EAAMK,EAAMJ,EAAMG,EAAKa,EAAcjB,EAAMM,EAAMJ,EAAME,EAAKc,EAAclB,EAAMO,EAAMJ,EAAMC,EAAKe,EAAclB,EAAMK,EAAMJ,EAAMG,EAAKe,EAAcnB,EAAMM,EAAMJ,EAAME,EAAKgB,EAAcnB,EAAMK,EAAMJ,EAAMG,EAAKgB,EAAcd,EAAMK,EAAMJ,EAAMG,EAAKW,EAAcf,EAAMM,EAAMJ,EAAME,EAAKY,EAAchB,EAAMO,EAAMJ,EAAMC,EAAKa,EAAchB,EAAMK,EAAMJ,EAAMG,EAAKa,EAAcjB,EAAMM,EAAMJ,EAAME,EAAKc,EAAcjB,EAAMK,EAAMJ,EAAMG,EAGvbc,EAAcZ,EAAMW,EAAMV,EAAMS,EAAMR,EAAMO,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE9D,IAAlBvgM,KAAKglE,IAAI67H,KAGbA,EAAM,EAAMA,EAEZhI,EAAG,IAAMyG,EAAMsB,EAAMrB,EAAMoB,EAAMnB,EAAMkB,GAAOG,EAC9ChI,EAAG,IAAMsG,EAAMwB,EAAMzB,EAAM0B,EAAMxB,EAAMsB,GAAOG,EAC9ChI,EAAG,IAAMiH,EAAMQ,EAAMP,EAAMM,EAAML,EAAMI,GAAOS,EAC9ChI,EAAG,IAAM8G,EAAMU,EAAMX,EAAMY,EAAMV,EAAMQ,GAAOS,EAC9ChI,EAAG,IAAM0G,EAAMkB,EAAMpB,EAAMuB,EAAMpB,EAAMgB,GAAOK,EAC9ChI,EAAG,IAAMoG,EAAM2B,EAAMzB,EAAMsB,EAAMrB,EAAMoB,GAAOK,EAC9ChI,EAAG,IAAMkH,EAAMI,EAAMN,EAAMS,EAAMN,EAAME,GAAOW,EAC9ChI,EAAG,IAAM4G,EAAMa,EAAMX,EAAMQ,EAAMP,EAAMM,GAAOW,EAC9ChI,EAAG,IAAMwG,EAAMsB,EAAMrB,EAAMmB,EAAMjB,EAAMe,GAAOM,EAC9ChI,EAAG,IAAMqG,EAAMuB,EAAMxB,EAAM0B,EAAMvB,EAAMmB,GAAOM,EAC9ChI,EAAG,KAAOgH,EAAMQ,EAAMP,EAAMK,EAAMH,EAAMC,GAAOY,EAC/ChI,EAAG,KAAO6G,EAAMS,EAAMV,EAAMY,EAAMT,EAAMK,GAAOY,EAC/ChI,EAAG,KAAOyG,EAAMkB,EAAMnB,EAAMqB,EAAMnB,EAAMgB,GAAOM,EAC/ChI,EAAG,KAAOoG,EAAMyB,EAAMxB,EAAMsB,EAAMrB,EAAMoB,GAAOM,EAC/ChI,EAAG,KAAOiH,EAAMI,EAAML,EAAMO,EAAML,EAAME,GAAOY,EAC/ChI,EAAG,KAAO4G,EAAMW,EAAMV,EAAMQ,EAAMP,EAAMM,GAAOY,E,CAWnDpnM,iBAAiBqnM,EAAyBC,EAAyBC,EAAmBC,EAAwBn1K,GAE1Gg+B,QAAQgzI,SAASgE,EAAgBC,EAAgBxJ,IAEjD,IAAI2J,EAAmBp3I,QAAQq3I,oBAAoB5J,IAE/C93G,YAAYI,OAAOqhH,IACnBp3I,QAAQ5iD,MAAM+5L,GAAgB,EAAGzJ,IACjCA,GAAajqK,QAAQgqK,KAErBztI,QAAQ5iD,MAAMqwL,GAAc,EAAIv3L,KAAK4I,KAAKs4L,GAAW3J,IAGzDztI,QAAQi6B,MAAMi9G,EAAUzJ,GAAcE,IACtC3tI,QAAQp/C,UAAU+sL,GAAcA,IAChC3tI,QAAQi6B,MAAMwzG,GAAcE,GAAcC,IAE1C,IAAI0J,EAAkB3J,GAClB4J,EAAkB3J,GAClB4J,EAAkB/J,GAClBgK,EAAkBT,EAElBU,EAAqB11K,EAAIsjB,SAC7BoyJ,EAAK,GAAKJ,EAAOz/L,EACjB6/L,EAAK,GAAKJ,EAAOx/L,EACjB4/L,EAAK,GAAKJ,EAAOx+J,EACjB4+J,EAAK,GAAK,EACVA,EAAK,GAAKH,EAAO1/L,EACjB6/L,EAAK,GAAKH,EAAOz/L,EACjB4/L,EAAK,GAAKH,EAAOz+J,EACjB4+J,EAAK,GAAK,EACVA,EAAK,GAAKF,EAAO3/L,EACjB6/L,EAAK,GAAKF,EAAO1/L,EACjB4/L,EAAK,IAAMF,EAAO1+J,EAClB4+J,EAAK,IAAM,EACXA,EAAK,IAAMD,EAAO5/L,EAClB6/L,EAAK,IAAMD,EAAO3/L,EAClB4/L,EAAK,IAAMD,EAAO3+J,EAClB4+J,EAAK,IAAM,C,CAMfz6L,WAMItE,KAAK2sC,SAASlyB,IAAIy6K,G,CAItB8J,aACI,IAGIn+K,EAAI7gB,KAAK2sC,SACTsyJ,EAAU9J,UAAUj4H,QAAQvwB,SAChC,IAAK,IAAIluC,EAAI,EAAG+G,EAAIqb,EAAE5kB,OAAQwC,EAAI+G,EAAG/G,IACjC,GANkBygM,EAMPr+K,EAAEpiB,GANmBk+G,EAMfsiF,EAAQxgM,KALlBlB,KAAKglE,IAAI28H,EAAOviF,GAAQ,MAM3B,OAAO,EAPH,IAAUuiF,EAAcviF,EASpC,OAAO,C,CAQX7xF,QAAQC,GAEA/qB,KAAK2sC,WACL5hB,EAAW4hB,UAIf5hB,EAAW4hB,SAASlyB,IAAIza,KAAK2sC,S,CAUjCwyJ,aAAap0K,GACT/qB,KAAK2sC,SAASlyB,IAAIsQ,E,CAOtBvjB,QACI,IAAIjF,EAAkB,IAAI4yL,UAAU,MAEpC,OADA5yL,EAAKoqC,SAAW3sC,KAAK2sC,SAAStyB,QACvB9X,C,CAGXvL,mBAAmBooM,EAAa95L,GAC5B,IAAI8wL,EAAmB9wL,EAAIqnC,SAC3BypJ,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAAMA,EAAG,IAAM,EAClCA,EAAG,IAAMgJ,EAAGlgM,EACZk3L,EAAG,IAAMgJ,EAAGjgM,EACZi3L,EAAG,IAAMgJ,EAAGj/J,C,CAOhBk/J,qBAAqB/5L,GACjB,IAAIm5E,EAAmBz+E,KAAK2sC,SAC5BrnC,EAAIpG,EAAIu/E,EAAG,IACXn5E,EAAInG,EAAIs/E,EAAG,IACXn5E,EAAI66B,EAAIs+C,EAAG,G,CAOf6gH,qBAAqB96L,GACjB,IAAIi6E,EAAmBz+E,KAAK2sC,SACxB4yJ,EAAc/6L,EAClBi6E,EAAG,IAAM8gH,EAAGrgM,EACZu/E,EAAG,IAAM8gH,EAAGpgM,EACZs/E,EAAG,IAAM8gH,EAAGp/J,C,CAOhBq/J,WAAWl6L,GACP,IAAIm5E,EAAmBz+E,KAAK2sC,SAC5BrnC,EAAIpG,GAAKu/E,EAAG,GACZn5E,EAAInG,GAAKs/E,EAAG,GACZn5E,EAAI66B,GAAKs+C,EAAG,G,CAOhBghH,WAAWC,GACP,IAAIjhH,EAAmBz+E,KAAK2sC,SAC5B8xC,EAAG,IAAMihH,EAAQxgM,EACjBu/E,EAAG,IAAMihH,EAAQvgM,EACjBs/E,EAAG,KAAOihH,EAAQv/J,C,CAMtBw/J,iBACI3/L,KAAKs7L,uBAAuBxG,GAAc0B,WAAW3uL,KAAMktL,IAC3D,IAAItwL,EAAiBswL,GACjB6K,EAAoBn7L,EAAMvF,EAAI,EAGlC,OAFCuF,EAAMtF,EAAI,IAAOygM,GAAYA,GAC7Bn7L,EAAM07B,EAAI,IAAOy/J,GAAYA,GACvBA,C,EAx2BJzK,UAAA0K,YAAyB,IAAI1K,UAE7BA,UAAA2K,YAAyB,IAAI3K,UAGpBA,UAAAj4H,QAA+B,IAAIi4H,UACnCA,UAAA4K,cAAqC,IAAI5K,WAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjGA,UAAAp3G,KAA4B,IAAIo3G,UAAU,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAo2B3G,MAAMsG,GAAiB,IAAItG,UCt3BrB6K,GAAmB,IAAI3kL,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC7D4kL,GAAW,IAAI54I,QACf64I,GAAW,IAAI74I,QACf84I,GAAW,IAAI94I,Q,MAKR+4I,UA4JT7jM,YAAYm9C,GAAyB,GACjCA,IAAkB15C,KAAK2sC,SAAWqzJ,GAAiB3lL,Q,CApJvDrjB,gCAAgC2oF,EAAsBr6E,GAClD,IAAI+6L,EAAe1gH,EAASzgF,EACxBohM,EAAe3gH,EAASxgF,EACxBohM,EAAe5gH,EAASx/C,EACxBqgK,EAAe7gH,EAAS1xD,EAExB2+C,EAAayzH,EAAOA,EACpBtzH,EAAauzH,EAAOA,EACpB1J,EAAa2J,EAAOA,EACpB1J,EAAawJ,EAAOC,EACpBjJ,EAAakJ,EAAOC,EACpBlJ,EAAaiJ,EAAOF,EACpB9I,EAAa+I,EAAOE,EACpBzJ,EAAauJ,EAAOC,EACpB/I,EAAa6I,EAAOG,EAEpBxJ,EAAwB1xL,EAAIqnC,SAChCqqJ,EAAQ,GAAK,EAAO,GAAOjqH,EAAK6pH,GAChCI,EAAQ,GAAK,GAAOH,EAAKQ,GACzBL,EAAQ,GAAK,GAAOM,EAAKC,GACzBP,EAAQ,GAAK,GAAOH,EAAKQ,GACzBL,EAAQ,GAAK,EAAO,GAAOJ,EAAKhqH,GAChCoqH,EAAQ,GAAK,GAAOD,EAAKS,GACzBR,EAAQ,GAAK,GAAOM,EAAKC,GACzBP,EAAQ,GAAK,GAAOD,EAAKS,GACzBR,EAAQ,GAAK,EAAO,GAAOjqH,EAAKH,E,CAQpC51E,6BAA6BygM,EAAgBnyL,GACzC,IAAIub,EAAkBvb,EAAIqnC,SAC1B9rB,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK42K,EAAMv4L,EACb2hB,EAAE,GAAK42K,EAAMt4L,EACb0hB,EAAE,GAAK,C,CAQX7pB,0BAA0Bm/L,EAAa7wL,GACnC,IAAIub,EAAkBvb,EAAIqnC,SAEtBmE,EAAYvzC,KAAKqH,IAAIuxL,GAAMryL,EAAYvG,KAAKoH,IAAIwxL,GAEpDt1K,EAAE,GAAK/c,EACP+c,EAAE,GAAKiwB,EACPjwB,EAAE,GAAK,EAEPA,EAAE,IAAMiwB,EACRjwB,EAAE,GAAK/c,EACP+c,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,C,CAQX7pB,yBAAyByN,EAAgBa,GACrC,IAAIub,EAAkBvb,EAAIqnC,SAE1B9rB,EAAE,GAAKpc,EAAMvF,EACb2hB,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAKpc,EAAMtF,EACb0hB,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAKpc,EAAM07B,C,CAQjBnpC,2BAA2BypM,EAAgBn7L,GACvC,IAAIo7L,EAAqBD,EAAI9zJ,SACzBg0J,EAAqBr7L,EAAIqnC,SAC7Bg0J,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,GACfC,EAAK,GAAKD,EAAK,G,CASnB1pM,gBAAgBygE,EAAiBlvD,EAAkBjD,GAC/C,IAAI0rE,EAAkBvZ,EAAK9qB,SACvBtiB,EAAkB9hB,EAAMokC,SACxB9rB,EAAkBvb,EAAIqnC,SAEtB+qJ,EAAc1mH,EAAE,GAAI2mH,EAAc3mH,EAAE,GAAI4mH,EAAc5mH,EAAE,GACxD8mH,EAAc9mH,EAAE,GAAI+mH,EAAc/mH,EAAE,GAAIgnH,EAAchnH,EAAE,GACxDknH,EAAclnH,EAAE,GAAImnH,EAAcnnH,EAAE,GAAIonH,EAAcpnH,EAAE,GAExD0nH,EAAcruK,EAAE,GAAIsuK,EAActuK,EAAE,GAAIuuK,EAAcvuK,EAAE,GACxDyuK,EAAczuK,EAAE,GAAI0uK,EAAc1uK,EAAE,GAAI2uK,EAAc3uK,EAAE,GACxD6uK,EAAc7uK,EAAE,GAAI8uK,EAAc9uK,EAAE,GAAI+uK,EAAc/uK,EAAE,GAE5DxJ,EAAE,GAAK63K,EAAMhB,EAAMiB,EAAMb,EAAMc,EAAMV,EACrCr3K,EAAE,GAAK63K,EAAMf,EAAMgB,EAAMZ,EAAMa,EAAMO,EACrCt4K,EAAE,GAAK63K,EAAMd,EAAMe,EAAMX,EAAMY,EAAMR,EAErCv3K,EAAE,GAAKi4K,EAAMpB,EAAMqB,EAAMjB,EAAMkB,EAAMd,EACrCr3K,EAAE,GAAKi4K,EAAMnB,EAAMoB,EAAMhB,EAAMiB,EAAMb,EACrCt3K,EAAE,GAAKi4K,EAAMlB,EAAMmB,EAAMf,EAAMgB,EAAMZ,EAErCv3K,EAAE,GAAKq4K,EAAMxB,EAAMyB,EAAMrB,EAAMsB,EAAMlB,EACrCr3K,EAAE,GAAKq4K,EAAMvB,EAAMwB,EAAMpB,EAAMqB,EAAMjB,EACrCt3K,EAAE,GAAKq4K,EAAMtB,EAAMuB,EAAMnB,EAAMoB,EAAMhB,C,CAiBzCwI,cACI,IAAI9iL,EAAkB9d,KAAK2sC,SAEvB6vJ,EAAc1+K,EAAE,GAAI2+K,EAAc3+K,EAAE,GAAI4+K,EAAc5+K,EAAE,GACxD8+K,EAAc9+K,EAAE,GAAI++K,EAAc/+K,EAAE,GAAIg/K,EAAch/K,EAAE,GACxDk/K,EAAcl/K,EAAE,GAAIm/K,EAAcn/K,EAAE,GAAIo/K,EAAcp/K,EAAE,GAE5D,OAAO0+K,GAAOU,EAAML,EAAMC,EAAMG,GAAOR,IAAQS,EAAMN,EAAME,EAAME,GAAON,GAAOO,EAAML,EAAMC,EAAMG,E,CAQrGx4L,UAAUizL,EAAgBnyL,GACtB,IAAIub,EAAkBvb,EAAIqnC,SACtB7uB,EAAkB9d,KAAK2sC,SAEvB6vJ,EAAc1+K,EAAE,GAAI2+K,EAAc3+K,EAAE,GAAI4+K,EAAc5+K,EAAE,GACxD8+K,EAAc9+K,EAAE,GAAI++K,EAAc/+K,EAAE,GAAIg/K,EAAch/K,EAAE,GACxDk/K,EAAcl/K,EAAE,GAAIm/K,EAAcn/K,EAAE,GAAIo/K,EAAcp/K,EAAE,GACxD5e,EAAYu4L,EAAMv4L,EAAGC,EAAYs4L,EAAMt4L,EAE3C0hB,EAAE,GAAK27K,EACP37K,EAAE,GAAK47K,EACP57K,EAAE,GAAK67K,EAEP77K,EAAE,GAAK+7K,EACP/7K,EAAE,GAAKg8K,EACPh8K,EAAE,GAAKi8K,EAEPj8K,EAAE,GAAK3hB,EAAIs9L,EAAMr9L,EAAIy9L,EAAMI,EAC3Bn8K,EAAE,GAAK3hB,EAAIu9L,EAAMt9L,EAAI09L,EAAMI,EAC3Bp8K,EAAE,GAAK3hB,EAAIw9L,EAAMv9L,EAAI29L,EAAMI,C,CAQ/Bx4L,OAAOyxL,EAAa7wL,GAChB,IAAIub,EAAkBvb,EAAIqnC,SACtB7uB,EAAkB9d,KAAK2sC,SAEvB6vJ,EAAc1+K,EAAE,GAAI2+K,EAAc3+K,EAAE,GAAI4+K,EAAc5+K,EAAE,GACxD8+K,EAAc9+K,EAAE,GAAI++K,EAAc/+K,EAAE,GAAIg/K,EAAch/K,EAAE,GACxDk/K,EAAcl/K,EAAE,GAAIm/K,EAAcn/K,EAAE,GAAIo/K,EAAcp/K,EAAE,GAExDgzB,EAAYvzC,KAAKqH,IAAIuxL,GACrBryL,EAAYvG,KAAKoH,IAAIwxL,GAEzBt1K,EAAE,GAAK/c,EAAI04L,EAAM1rJ,EAAI8rJ,EACrB/7K,EAAE,GAAK/c,EAAI24L,EAAM3rJ,EAAI+rJ,EACrBh8K,EAAE,GAAK/c,EAAI44L,EAAM5rJ,EAAIgsJ,EAErBj8K,EAAE,GAAK/c,EAAI84L,EAAM9rJ,EAAI0rJ,EACrB37K,EAAE,GAAK/c,EAAI+4L,EAAM/rJ,EAAI2rJ,EACrB57K,EAAE,GAAK/c,EAAIg5L,EAAMhsJ,EAAI4rJ,EAErB77K,EAAE,GAAKm8K,EACPn8K,EAAE,GAAKo8K,EACPp8K,EAAE,GAAKq8K,C,CAQXz4L,MAAMA,EAAgBa,GAClB,IAAIub,EAAkBvb,EAAIqnC,SACtB7uB,EAAkB9d,KAAK2sC,SAEvBztC,EAAYuF,EAAMvF,EAAGC,EAAYsF,EAAMtF,EAE3C0hB,EAAE,GAAK3hB,EAAI4e,EAAE,GACb+C,EAAE,GAAK3hB,EAAI4e,EAAE,GACb+C,EAAE,GAAK3hB,EAAI4e,EAAE,GAEb+C,EAAE,GAAK1hB,EAAI2e,EAAE,GACb+C,EAAE,GAAK1hB,EAAI2e,EAAE,GACb+C,EAAE,GAAK1hB,EAAI2e,EAAE,GAEb+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,E,CAObzX,OAAOf,GACH,IAAIub,EAAIvb,EAAIqnC,SACR7uB,EAAI9d,KAAK2sC,SAET6vJ,EAAM1+K,EAAE,GAAI2+K,EAAM3+K,EAAE,GAAI4+K,EAAM5+K,EAAE,GAChC8+K,EAAM9+K,EAAE,GAAI++K,EAAM/+K,EAAE,GAAIg/K,EAAMh/K,EAAE,GAChCk/K,EAAMl/K,EAAE,GAAIm/K,EAAMn/K,EAAE,GAAIo/K,EAAMp/K,EAAE,GAEhC2/K,EAAcP,EAAML,EAAMC,EAAMG,EAChCkB,GAAejB,EAAMN,EAAME,EAAME,EACjC6D,EAAc5D,EAAML,EAAMC,EAAMG,EAGhCoB,EAAc5B,EAAMiB,EAAMhB,EAAM0B,EAAMzB,EAAMmE,EAE3CzC,IAGLA,EAAM,EAAMA,EAEZv9K,EAAE,GAAK48K,EAAMW,EACbv9K,EAAE,KAAOq8K,EAAMT,EAAMC,EAAMO,GAAOmB,EAClCv9K,EAAE,IAAMi8K,EAAML,EAAMC,EAAMG,GAAOuB,EACjCv9K,EAAE,GAAKs9K,EAAMC,EACbv9K,EAAE,IAAMq8K,EAAMV,EAAME,EAAMM,GAAOoB,EACjCv9K,EAAE,KAAOi8K,EAAMN,EAAME,EAAME,GAAOwB,EAClCv9K,EAAE,GAAKggL,EAAMzC,EACbv9K,EAAE,KAAOo8K,EAAMT,EAAMC,EAAMO,GAAOoB,EAClCv9K,EAAE,IAAMg8K,EAAML,EAAMC,EAAMG,GAAOwB,E,CAOrC9B,UAAUh3L,GACN,IAAIub,EAAkBvb,EAAIqnC,SACtB7uB,EAAkB9d,KAAK2sC,SAE3B,GAAIrnC,IAAQtF,KAAM,CACd,IAAIy8L,EAAc3+K,EAAE,GAAI4+K,EAAc5+K,EAAE,GAAIg/K,EAAch/K,EAAE,GAC5D+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK47K,EACP57K,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK67K,EACP77K,EAAE,GAAKi8K,CACV,MACGj8K,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,GACT+C,EAAE,GAAK/C,EAAE,E,CAKjBxZ,WACItE,KAAK2sC,SAASlyB,IAAIulL,G,CAkBtBl1K,QAAQC,GACJ,IAAe+lB,EAAiB/sC,GAChC+sC,EAAI9wC,KAAK2sC,aACT5oC,EAAIgnB,EAAW4hB,WAIfmE,EAAEr2B,IAAI1W,E,CAWVyD,QACI,IAAIjF,EAAkB,IAAI69L,WAAU,GAEpC,OADA79L,EAAKoqC,SAAW3sC,KAAK2sC,SAAStyB,QACvB9X,C,CAUXvL,cAAc+iM,EAAc1vL,EAAiB2vL,EAAa10L,GACtD+hD,QAAQgzI,SAASN,EAAK1vL,EAAQ41L,IAC9B54I,QAAQp/C,UAAUg4L,GAAUA,IAE5B54I,QAAQi6B,MAAM04G,EAAIiG,GAAUC,IAC5B74I,QAAQp/C,UAAUi4L,GAAUA,IAE5B74I,QAAQi6B,MAAM2+G,GAAUC,GAAUC,IAElC,IAAI3xH,EAAcyxH,GACd5nK,EAAc6nK,GACd3nK,EAAc4nK,GAEd1hH,EAAmBn5E,EAAIqnC,SAC3B8xC,EAAG,GAAKpmD,EAAGn5B,EACXu/E,EAAG,GAAKpmD,EAAGl5B,EACXs/E,EAAG,GAAKpmD,EAAG8H,EAEXs+C,EAAG,GAAKlmD,EAAGr5B,EACXu/E,EAAG,GAAKlmD,EAAGp5B,EACXs/E,EAAG,GAAKlmD,EAAG4H,EAEXs+C,EAAG,GAAKjQ,EAAGtvE,EACXu/E,EAAG,GAAKjQ,EAAGrvE,EACXs/E,EAAG,GAAKjQ,EAAGruC,C,CAWfnpC,qBAAqB+iM,EAAc1vL,EAAiB2vL,EAAa10L,GAC7D,IAAI+4E,EAAK6hH,GACL5hH,EAAK6hH,GACL5hH,EAAK0hH,GAET51L,EAAO82E,KAAK44G,EAAKx7G,GAAIt2E,YACrB+xL,EAAG14G,MAAM/C,EAAIF,GAAIp2E,YACjBs2E,EAAG+C,MAAMjD,EAAIC,GAEb,IAAIr9D,EAAI3b,EAAIqnC,SACZ1rB,EAAE,GAAKo9D,EAAGn/E,EAAG+hB,EAAE,GAAKo9D,EAAGl/E,EAAG8hB,EAAE,GAAKo9D,EAAGl+C,EACpClf,EAAE,GAAKq9D,EAAGp/E,EAAG+hB,EAAE,GAAKq9D,EAAGn/E,EAAG8hB,EAAE,GAAKq9D,EAAGn+C,EACpClf,EAAE,GAAKs9D,EAAGr/E,EAAG+hB,EAAE,GAAKs9D,EAAGp/E,EAAG8hB,EAAE,GAAKs9D,EAAGp+C,C,EA/ZxBigK,UAAAljI,QAA+B,IAAIkjI,UCRvD,MAAMU,GAAe,IAAIz5I,QACnB05I,GAAe,IAAI15I,QACnB25I,GAAe,IAAI35I,QACnB45I,GAAe,IAAI55I,QACnB65I,GAAiB,IAAId,U,MAKd5J,WAgQTj6L,YAAY2C,EAAY,EAAGC,EAAY,EAAGghC,EAAY,EAAGlS,EAAY,GACjEjuB,KAAKd,EAAIA,EACTc,KAAKb,EAAIA,EACTa,KAAKmgC,EAAIA,EACTngC,KAAKiuB,EAAIA,C,CAnPbj3B,8BAA8Bq/L,EAAaC,EAAeC,EAAcjxL,GACpE,IAAI67L,EAA0B,GAAP5K,EACnB6K,EAA4B,GAAR9K,EACpB+K,EAAwB,GAANhL,EAElBiL,EAAkB/jM,KAAKqH,IAAIu8L,GAC3BI,EAAkBhkM,KAAKoH,IAAIw8L,GAC3BK,EAAmBjkM,KAAKqH,IAAIw8L,GAC5BK,EAAmBlkM,KAAKoH,IAAIy8L,GAC5BM,EAAiBnkM,KAAKqH,IAAIy8L,GAC1BM,EAAiBpkM,KAAKoH,IAAI08L,GAG9B/7L,EAAIpG,EAAKyiM,EAASH,EAAWD,EAAYG,EAASD,EAAWH,EAC7Dh8L,EAAInG,EAAKuiM,EAASD,EAAWF,EAAYI,EAASH,EAAWF,EAC7Dh8L,EAAI66B,EAAKwhK,EAASF,EAAWH,EAAYI,EAASF,EAAWD,EAC7Dj8L,EAAI2oB,EAAK0zK,EAASF,EAAWF,EAAYG,EAASF,EAAWF,C,CASjEtqM,gBAAgBygE,EAAkBlvD,EAAmBjD,GACjD,IAAIs8L,EAAanqI,EAAKv4D,EAClB2iM,EAAapqI,EAAKt4D,EAClB2iM,EAAarqI,EAAKt3B,EAClB4hK,EAAatqI,EAAKxpC,EAClBq+C,EAAa/jE,EAAMrJ,EACnBqtE,EAAahkE,EAAMpJ,EACnB6iM,EAAaz5L,EAAM43B,EACnB8hK,EAAa15L,EAAM0lB,EACnBrqB,EAAai+L,EAAKG,EAAKF,EAAKv1H,EAC5B1oE,EAAai+L,EAAKx1H,EAAKs1H,EAAKI,EAC5Bl+L,EAAa89L,EAAKr1H,EAAKs1H,EAAKv1H,EAC5BvoE,EAAa69L,EAAKt1H,EAAKu1H,EAAKt1H,EAAKu1H,EAAKE,EAC1C18L,EAAIpG,EAAK0iM,EAAKK,EAAK31H,EAAKy1H,EAAMn+L,EAC9B0B,EAAInG,EAAK0iM,EAAKI,EAAK11H,EAAKw1H,EAAMl+L,EAC9ByB,EAAI66B,EAAK2hK,EAAKG,EAAKD,EAAKD,EAAMj+L,EAC9BwB,EAAI2oB,EAAI8zK,EAAKE,EAAKl+L,C,CAGd/M,mBAAmBkI,EAAWC,GAClC,OAAS,GAALD,EACS,GAALC,EACO5B,KAAKC,GAAK,GACbD,KAAKC,GAAK,EAElB0B,EAAI,EACG3B,KAAK2kM,KAAK/iM,EAAID,GACrBA,EAAI,EACAC,EAAI,EACG5B,KAAK2kM,KAAK/iM,EAAID,GAAK3B,KAAKC,GAC5BD,KAAK2kM,KAAK/iM,EAAID,GAAK3B,KAAKC,GAE5B,C,CAGHxG,eAAey1F,EAAehgF,EAAmB9O,GACrD0pD,QAAQgzI,SAAS5tL,EAAUggF,EAAMq0G,IACjCz5I,QAAQp/C,UAAU64L,GAAcA,IAEhCnjM,EAAMuB,EAAI3B,KAAK0tG,KAAK61F,GAAa3hM,GACjCxB,EAAMwB,EAAIq3L,WAAW2L,aAAarB,GAAa3gK,GAAI2gK,GAAa5hM,E,CASpElI,2BAA2B2/L,EAAeR,EAAa7wL,GACnD6wL,GAAY,GACZ,IAAIrlJ,EAAYvzC,KAAKqH,IAAIuxL,GACzB7wL,EAAIpG,EAAI4xC,EAAI6lJ,EAAKz3L,EACjBoG,EAAInG,EAAI2xC,EAAI6lJ,EAAKx3L,EACjBmG,EAAI66B,EAAI2Q,EAAI6lJ,EAAKx2J,EACjB76B,EAAI2oB,EAAI1wB,KAAKoH,IAAIwxL,E,CASrBn/L,2BAA2BqyB,EAAgB/jB,GACvC,IAEIa,EACAi8L,EAHA3jH,EAAmBp1D,EAAIsjB,SAIvBloC,EAAgBg6E,EAAG,GAAKA,EAAG,GAAKA,EAAG,IAEnCh6E,EAAQ,GACR0B,EAAO5I,KAAK4I,KAAK1B,EAAQ,GACzBa,EAAI2oB,EAAW,GAAP9nB,EACRA,EAAO,GAAMA,EAEbb,EAAIpG,GAAKu/E,EAAG,GAAKA,EAAG,IAAMt4E,EAC1Bb,EAAInG,GAAKs/E,EAAG,GAAKA,EAAG,IAAMt4E,EAC1Bb,EAAI66B,GAAKs+C,EAAG,GAAKA,EAAG,IAAMt4E,GAClBs4E,EAAG,IAAMA,EAAG,IAAQA,EAAG,IAAMA,EAAG,KAExC2jH,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAMs4E,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAG1Cn5E,EAAIpG,EAAI,GAAMiH,EACdb,EAAInG,GAAKs/E,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAI66B,GAAKs+C,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAI2oB,GAAKwwD,EAAG,GAAKA,EAAG,IAAM2jH,GACnB3jH,EAAG,GAAKA,EAAG,KAElB2jH,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAMs4E,EAAG,GAAKA,EAAG,GAAKA,EAAG,MAG1Cn5E,EAAIpG,GAAKu/E,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAInG,EAAI,GAAMgH,EACdb,EAAI66B,GAAKs+C,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAI2oB,GAAKwwD,EAAG,GAAKA,EAAG,IAAM2jH,IAG1BA,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAMs4E,EAAG,IAAMA,EAAG,GAAKA,EAAG,KAG3Cn5E,EAAIpG,GAAKu/E,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAInG,GAAKs/E,EAAG,GAAKA,EAAG,IAAM2jH,EAC1B98L,EAAI66B,EAAI,GAAMh6B,EACdb,EAAI2oB,GAAKwwD,EAAG,GAAKA,EAAG,IAAM2jH,E,CAalCprM,aAAaygE,EAAkBlvD,EAAmB2zD,EAAW52D,GACzD,IAEIomH,EAAeC,EAAeC,EAAeC,EAAgBC,EAF7DhkD,EAAarQ,EAAKv4D,EAAG6oE,EAAatQ,EAAKt4D,EAAG++E,EAAazmB,EAAKt3B,EAAGg+C,EAAa1mB,EAAKxpC,EAAG+5C,EAAaz/D,EAAMrJ,EAAG+oE,EAAa1/D,EAAMpJ,EAAG+hF,EAAa34E,EAAM43B,EAAG4rF,EAAaxjH,EAAM0lB,EAiC7K,OA5BA09F,EAAQ7jD,EAAKE,EAAKD,EAAKE,EAAKiW,EAAKgD,EAAK/C,EAAK4tC,GAE/B,IACRJ,GAASA,EACT3jD,GAAMA,EACNC,GAAMA,EACNiZ,GAAMA,EACN6qC,GAAMA,GAGL,EAAMJ,EAAS,MAEhBD,EAAQnuH,KAAKk7F,KAAKkzB,GAClBC,EAAQruH,KAAKqH,IAAI8mH,GACjBG,EAAStuH,KAAKqH,KAAK,EAAMs3D,GAAKwvD,GAASE,EACvCE,EAASvuH,KAAKqH,IAAIs3D,EAAIwvD,GAASE,IAI/BC,EAAS,EAAM3vD,EACf4vD,EAAS5vD,GAGb52D,EAAIpG,EAAI2sH,EAAS/jD,EAAKgkD,EAAS9jD,EAC/B1iE,EAAInG,EAAI0sH,EAAS9jD,EAAK+jD,EAAS7jD,EAC/B3iE,EAAI66B,EAAI0rF,EAAS3tC,EAAK4tC,EAAS5qC,EAC/B57E,EAAI2oB,EAAI49F,EAAS1tC,EAAK2tC,EAASC,EAExBzmH,C,CAUXtO,YAAYygE,EAAkBlvD,EAAmB+iH,EAAgBhmH,GAC7D,IAAIq5E,EAAkB,EAAM2sC,EACxBkrE,WAAWn1G,IAAI5pB,EAAMlvD,IAAU,GAC/BjD,EAAIpG,EAAKy/E,EAAUlnB,EAAKv4D,EAAMosH,EAAS/iH,EAAMrJ,EAC7CoG,EAAInG,EAAKw/E,EAAUlnB,EAAKt4D,EAAMmsH,EAAS/iH,EAAMpJ,EAC7CmG,EAAI66B,EAAKw+C,EAAUlnB,EAAKt3B,EAAMmrF,EAAS/iH,EAAM43B,EAC7C76B,EAAI2oB,EAAK0wD,EAAUlnB,EAAKxpC,EAAMq9F,EAAS/iH,EAAM0lB,IAE7C3oB,EAAIpG,EAAKy/E,EAAUlnB,EAAKv4D,EAAMosH,EAAS/iH,EAAMrJ,EAC7CoG,EAAInG,EAAKw/E,EAAUlnB,EAAKt4D,EAAMmsH,EAAS/iH,EAAMpJ,EAC7CmG,EAAI66B,EAAKw+C,EAAUlnB,EAAKt3B,EAAMmrF,EAAS/iH,EAAM43B,EAC7C76B,EAAI2oB,EAAK0wD,EAAUlnB,EAAKxpC,EAAMq9F,EAAS/iH,EAAM0lB,GAEjD3oB,EAAI2C,UAAU3C,E,CASlBtO,WAAWygE,EAAkBlvD,EAAmBjD,GAC5CA,EAAIpG,EAAIu4D,EAAKv4D,EAAIqJ,EAAMrJ,EACvBoG,EAAInG,EAAIs4D,EAAKt4D,EAAIoJ,EAAMpJ,EACvBmG,EAAI66B,EAAIs3B,EAAKt3B,EAAI53B,EAAM43B,EACvB76B,EAAI2oB,EAAIwpC,EAAKxpC,EAAI1lB,EAAM0lB,C,CAS3Bj3B,WAAWygE,EAAkBlvD,GACzB,OAAOkvD,EAAKv4D,EAAIqJ,EAAMrJ,EAAIu4D,EAAKt4D,EAAIoJ,EAAMpJ,EAAIs4D,EAAKt3B,EAAI53B,EAAM43B,EAAIs3B,EAAKxpC,EAAI1lB,EAAM0lB,C,CAgCnFhD,SAAS/rB,EAAWC,EAAWghC,EAAWlS,GACtCjuB,KAAKd,EAAIA,EAAGc,KAAKb,EAAIA,EAAGa,KAAKmgC,EAAIA,EAAGngC,KAAKiuB,EAAIA,C,CAUjDxT,IAAIvb,EAAWC,EAAWghC,EAAWlS,GAEjC,OADAjuB,KAAKd,EAAIA,EAAGc,KAAKb,EAAIA,EAAGa,KAAKmgC,EAAIA,EAAGngC,KAAKiuB,EAAIA,EACtCjuB,I,CAOXqiM,QAAQA,EAAiB/8L,GACrBA,EAAIpG,EAAIc,KAAKd,EAAImjM,EACjB/8L,EAAInG,EAAIa,KAAKb,EAAIkjM,EACjB/8L,EAAI66B,EAAIngC,KAAKmgC,EAAIkiK,EACjB/8L,EAAI2oB,EAAIjuB,KAAKiuB,EAAIo0K,C,CAOrBp6L,UAAU3C,GACN,IAAI9G,EAAcwB,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,EAAIngC,KAAKiuB,EAAIjuB,KAAKiuB,EAClFzvB,EAAM,IACNA,EAAM,EAAIjB,KAAK4I,KAAK3H,GACpB8G,EAAIpG,EAAIc,KAAKd,EAAIV,EACjB8G,EAAInG,EAAIa,KAAKb,EAAIX,EACjB8G,EAAI66B,EAAIngC,KAAKmgC,EAAI3hC,EACjB8G,EAAI2oB,EAAIjuB,KAAKiuB,EAAIzvB,E,CAQzBvC,SACI,OAAOsB,KAAK4I,KAAKnG,KAAKd,EAAIc,KAAKd,EAAIc,KAAKb,EAAIa,KAAKb,EAAIa,KAAKmgC,EAAIngC,KAAKmgC,EAAIngC,KAAKiuB,EAAIjuB,KAAKiuB,E,CAQzFq0K,QAAQnM,EAAa7wL,GACjB6wL,GAAO,GAEP,IAAInuH,EAAazqE,KAAKqH,IAAIuxL,GAAMpqE,EAAaxuH,KAAKoH,IAAIwxL,GAEtD7wL,EAAIpG,EAAIc,KAAKd,EAAI6sH,EAAK/rH,KAAKiuB,EAAI+5C,EAC/B1iE,EAAInG,EAAIa,KAAKb,EAAI4sH,EAAK/rH,KAAKmgC,EAAI6nC,EAC/B1iE,EAAI66B,EAAIngC,KAAKmgC,EAAI4rF,EAAK/rH,KAAKb,EAAI6oE,EAC/B1iE,EAAI2oB,EAAIjuB,KAAKiuB,EAAI89F,EAAK/rH,KAAKd,EAAI8oE,C,CAQnCu6H,QAAQpM,EAAa7wL,GACjB6wL,GAAO,GAEP,IAAIluH,EAAa1qE,KAAKqH,IAAIuxL,GAAMpqE,EAAaxuH,KAAKoH,IAAIwxL,GAEtD7wL,EAAIpG,EAAIc,KAAKd,EAAI6sH,EAAK/rH,KAAKmgC,EAAI8nC,EAC/B3iE,EAAInG,EAAIa,KAAKb,EAAI4sH,EAAK/rH,KAAKiuB,EAAIg6C,EAC/B3iE,EAAI66B,EAAIngC,KAAKmgC,EAAI4rF,EAAK/rH,KAAKd,EAAI+oE,EAC/B3iE,EAAI2oB,EAAIjuB,KAAKiuB,EAAI89F,EAAK/rH,KAAKb,EAAI8oE,C,CAQnCu6H,QAAQrM,EAAa7wL,GACjB6wL,GAAO,GACP,IAAIj1G,EAAa3jF,KAAKqH,IAAIuxL,GAAMpqE,EAAaxuH,KAAKoH,IAAIwxL,GAEtD7wL,EAAIpG,EAAIc,KAAKd,EAAI6sH,EAAK/rH,KAAKb,EAAI+hF,EAC/B57E,EAAInG,EAAIa,KAAKb,EAAI4sH,EAAK/rH,KAAKd,EAAIgiF,EAC/B57E,EAAI66B,EAAIngC,KAAKmgC,EAAI4rF,EAAK/rH,KAAKiuB,EAAIizD,EAC/B57E,EAAI2oB,EAAIjuB,KAAKiuB,EAAI89F,EAAK/rH,KAAKmgC,EAAI+gD,C,CAQnCuhH,gBAAgBn9L,GAEZ+hD,QAAQq7I,cAAcr7I,QAAQq6B,UAAW1hF,KAAM+gM,IAE/C15I,QAAQq7I,cAAcr7I,QAAQu6B,GAAI5hF,KAAMghM,IACxC,IAAI2B,EAAe3B,GAEnBxK,WAAWoM,QAAQv7I,QAAQ02B,KAAMgjH,GAAcE,IAC/C,IAAItjM,EAAiBsjM,GAEjBtjM,EAAMuB,GAAK3B,KAAKC,GAAK,GACrBG,EAAMwB,EAAIq3L,WAAW2L,YAAYQ,EAAIxiK,EAAGwiK,EAAIzjM,GAC5CvB,EAAMwiC,EAAI,GACHxiC,EAAMuB,IAAM3B,KAAKC,GAAK,GAC7BG,EAAMwB,EAAIq3L,WAAW2L,aAAaQ,EAAIxiK,GAAIwiK,EAAIzjM,GAC9CvB,EAAMwiC,EAAI,IAEVg1J,UAAU0N,iBAAiBllM,EAAMwB,EAAGg2L,UAAU0K,aAC9C1K,UAAU2N,iBAAiBnlM,EAAMuB,EAAGi2L,UAAU2K,aAE9Cz4I,QAAQ07I,oBAAoB/B,GAAc7L,UAAU0K,YAAamB,IACjE35I,QAAQ07I,oBAAoB/B,GAAc7L,UAAU2K,YAAakB,IACjErjM,EAAMwiC,EAAIq2J,WAAW2L,YAAYQ,EAAIxjM,GAAIwjM,EAAIzjM,IAI7CvB,EAAMwB,IAAM5B,KAAKC,KACjBG,EAAMwB,EAAI5B,KAAKC,IACfG,EAAMwiC,IAAM5iC,KAAKC,KACjBG,EAAMwiC,EAAI5iC,KAAKC,IAEfG,EAAMwB,GAAK5B,KAAKC,IAAMG,EAAMwiC,GAAK5iC,KAAKC,KACtCG,EAAMwB,EAAI,EACVxB,EAAMwiC,EAAI,EACVxiC,EAAMuB,EAAI3B,KAAKC,GAAKG,EAAMuB,GAG9B,IAAIk3L,EAAc9wL,EAClB8wL,EAAGl3L,EAAIvB,EAAMwB,EACbi3L,EAAGj3L,EAAIxB,EAAMuB,EACbk3L,EAAGj2J,EAAIxiC,EAAMwiC,C,CAOjB95B,OAAOf,GACH,IAAIyvF,EAAa/0F,KAAKd,EAAG2F,EAAa7E,KAAKb,EAAGsG,EAAazF,KAAKmgC,EAAG60D,EAAah1F,KAAKiuB,EACjFozD,EAAc0T,EAAKA,EAAKlwF,EAAKA,EAAKY,EAAKA,EAAKuvF,EAAKA,EACjDguG,EAAiB3hH,EAAM,EAAMA,EAAM,EAGvC/7E,EAAIpG,GAAK61F,EAAKiuG,EACd19L,EAAInG,GAAK0F,EAAKm+L,EACd19L,EAAI66B,GAAK16B,EAAKu9L,EACd19L,EAAI2oB,EAAI+mE,EAAKguG,C,CAOjB1+L,WACItE,KAAKd,EAAI,EACTc,KAAKb,EAAI,EACTa,KAAKmgC,EAAI,EACTngC,KAAKiuB,EAAI,C,CAQb/C,UAAUlsB,EAAcyhB,EAAiB,GACrCzgB,KAAKd,EAAIF,EAAMyhB,EAAS,GACxBzgB,KAAKb,EAAIH,EAAMyhB,EAAS,GACxBzgB,KAAKmgC,EAAInhC,EAAMyhB,EAAS,GACxBzgB,KAAKiuB,EAAIjvB,EAAMyhB,EAAS,E,CAO5BqK,QAAQC,GACA/qB,OAAS+qB,IAGbA,EAAW7rB,EAAIc,KAAKd,EACpB6rB,EAAW5rB,EAAIa,KAAKb,EACpB4rB,EAAWoV,EAAIngC,KAAKmgC,EACpBpV,EAAWkD,EAAIjuB,KAAKiuB,E,CAOxBzmB,QACI,IAAIjF,EAAmB,IAAIi0L,WAE3B,OADAx2L,KAAK8qB,QAAQvoB,GACNA,C,CAGX2G,OAAOrF,GACH,OAAOm5E,YAAYQ,UAAUx9E,KAAKd,EAAG2E,EAAE3E,IAAM89E,YAAYQ,UAAUx9E,KAAKb,EAAG0E,EAAE1E,IAAM69E,YAAYQ,UAAUx9E,KAAKmgC,EAAGt8B,EAAEs8B,IAAM68C,YAAYQ,UAAUx9E,KAAKiuB,EAAGpqB,EAAEoqB,E,CAS7Jj3B,sBAAsB0oM,EAAkB1F,EAAa10L,GACjDkxL,WAAWyM,OAAO57I,QAAQ02B,KAAM2hH,EAAS1F,EAAI10L,E,CAUjDtO,cAAc+iM,EAAc1vL,EAAiB2vL,EAAa10L,GACtD86L,UAAU6C,OAAOlJ,EAAK1vL,EAAQ2vL,EAAIkH,IAClC1K,WAAWgF,eAAe0F,GAAgB57L,E,CAU9CtO,qBAAqB+iM,EAAc1vL,EAAiB2vL,EAAa10L,GAC7D86L,UAAU8C,cAAcnJ,EAAK1vL,EAAQ2vL,EAAIkH,IACzC1K,WAAWgF,eAAe0F,GAAgB57L,E,CAO9Co5E,gBACI,OAAQ1+E,KAAKd,EAAIc,KAAKd,EAAMc,KAAKb,EAAIa,KAAKb,EAAMa,KAAKmgC,EAAIngC,KAAKmgC,EAAMngC,KAAKiuB,EAAIjuB,KAAKiuB,C,CAQtFj3B,cAAciH,EAAmBqH,GAC7B,IAAIm5L,EAAmBxgM,EAAMygF,gBACxB1B,YAAYI,OAAOqhH,KACpBA,EAAW,EAAMA,EAEjBn5L,EAAIpG,GAAKjB,EAAMiB,EAAIu/L,EACnBn5L,EAAInG,GAAKlB,EAAMkB,EAAIs/L,EACnBn5L,EAAI66B,GAAKliC,EAAMkiC,EAAIs+J,EACnBn5L,EAAI2oB,EAAIhwB,EAAMgwB,EAAIwwK,E,CAS1BznM,sBAAsBmsM,EAAsB79L,GACxC,IAWIa,EAAci8L,EAXd3jH,EAAmB0kH,EAAUx2J,SAC7B8lB,EAAcgsB,EAAG,GACjB22G,EAAc32G,EAAG,GACjB42G,EAAc52G,EAAG,GACjB82G,EAAc92G,EAAG,GACjB+2G,EAAc/2G,EAAG,GACjBg3G,EAAch3G,EAAG,GACjBk3G,EAAcl3G,EAAG,GACjBm3G,EAAcn3G,EAAG,GACjBo3G,EAAcp3G,EAAG,GAGjBh6E,EAAgBguD,EAAM+iI,EAAMK,EAE5BpxL,EAAQ,GAER0B,EAAO5I,KAAK4I,KAAK1B,EAAQ,GACzBa,EAAI2oB,EAAW,GAAP9nB,EACRA,EAAO,GAAMA,EAEbb,EAAIpG,GAAKu2L,EAAMG,GAAOzvL,EACtBb,EAAInG,GAAKw2L,EAAMN,GAAOlvL,EACtBb,EAAI66B,GAAKi1J,EAAMG,GAAOpvL,GAEdssD,GAAO+iI,GAAS/iI,GAAOojI,GAG/BuM,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAIssD,EAAM+iI,EAAMK,IAGjCvwL,EAAIpG,EAAI,GAAMiH,EACdb,EAAInG,GAAKi2L,EAAMG,GAAO6M,EACtB98L,EAAI66B,GAAKk1J,EAAMM,GAAOyM,EACtB98L,EAAI2oB,GAAKwnK,EAAMG,GAAOwM,GACf5M,EAAMK,GAGbuM,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAIqvL,EAAM/iI,EAAMojI,IAGjCvwL,EAAIpG,GAAKq2L,EAAMH,GAAOgN,EACtB98L,EAAInG,EAAI,GAAMgH,EACdb,EAAI66B,GAAKy1J,EAAMH,GAAO2M,EACtB98L,EAAI2oB,GAAK0nK,EAAMN,GAAO+M,IAItBA,EAAO,IADPj8L,EAAO5I,KAAK4I,KAAK,EAAI0vL,EAAMpjI,EAAM+iI,IAGjClwL,EAAIpG,GAAKy2L,EAAMN,GAAO+M,EACtB98L,EAAInG,GAAKy2L,EAAMH,GAAO2M,EACtB98L,EAAI66B,EAAI,GAAMh6B,EACdb,EAAI2oB,GAAKmnK,EAAMG,GAAO6M,E,CAI9BzkH,iBAAiBC,EAA+B,MAGxCA,GACM59E,KAAM2sC,SAAWixC,EACjB59E,KAAM2sC,SAAS,GAAK3sC,KAAKd,EACzBc,KAAM2sC,SAAS,GAAK3sC,KAAKb,EACzBa,KAAM2sC,SAAS,GAAK3sC,KAAKmgC,EACzBngC,KAAM2sC,SAAS,GAAK3sC,KAAKiuB,GAGzBjuB,KAAM2sC,SAAW,IAAItxB,aAAa,CAACrb,KAAKd,EAAGc,KAAKb,EAAGa,KAAKmgC,EAAGngC,KAAKiuB,IAE1Em5B,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,GACtConD,QAAQy2B,mBAAmB79E,KAAM,IAAK,E,EArmBnCw2L,WAAA3uL,KAAO,IAAI2uL,WAGFA,WAAAt5H,QAAgC,IAAIs5H,WAEpCA,WAAA4M,IAA4B,IAAI5M,WAAW7mF,IAAKA,IAAKA,IAAKA,KCZxE,MAAO0zF,eAAetjM,UAOxBoB,YACI,OAAO,C,CAGD4B,cACN,IACIu4H,EADAx6H,EAAQd,KAAKc,OAGbw6H,EAAOt7H,KAAKsjM,iBAAgBxiM,EAAM2Q,GAAGvG,MAAMmF,cAAerQ,KAAMs7H,IAChEA,EAAOt7H,KAAKujM,gBAAeziM,EAAM2Q,GAAGvG,MAAMoF,aAActQ,KAAMs7H,IAC9DA,EAAOt7H,KAAKwjM,gBAAe1iM,EAAM2Q,GAAGvG,MAAMqF,aAAcvQ,KAAMs7H,IAE9DA,EAAOt7H,KAAKyjM,mBAAkB3iM,EAAM2Q,GAAGvG,MAAMsF,gBAAiBxQ,KAAMs7H,IACpEA,EAAOt7H,KAAK0jM,kBAAiB5iM,EAAM2Q,GAAGvG,MAAMuF,eAAgBzQ,KAAMs7H,IAClEA,EAAOt7H,KAAK2jM,kBAAiB7iM,EAAM2Q,GAAGvG,MAAMwF,eAAgB1Q,KAAMs7H,IAClEA,EAAOt7H,KAAK4jM,eAAc9iM,EAAM2Q,GAAGvG,MAAMyF,YAAa3Q,KAAMs7H,IAE5DA,EAAOt7H,KAAK6jM,cAAa/iM,EAAM2Q,GAAGvG,MAAM0B,WAAY5M,KAAMs7H,IAC1DA,EAAOt7H,KAAK8jM,YAAWhjM,EAAM2Q,GAAGvG,MAAM2B,SAAU7M,KAAMs7H,IACtDA,EAAOt7H,KAAK+jM,mBAAkBjjM,EAAM2Q,GAAGvG,MAAM4B,iBAAkB9M,KAAMs7H,IACrEA,EAAOt7H,KAAKgkM,iBAAgBljM,EAAM2Q,GAAGvG,MAAM6B,eAAgB/M,KAAMs7H,IACjEA,EAAOt7H,KAAKikM,cAAanjM,EAAM2Q,GAAGvG,MAAMgC,WAAYlN,KAAMs7H,IAC1DA,EAAOt7H,KAAKkkM,cAAapjM,EAAM2Q,GAAGvG,MAAMuC,WAAYzN,KAAMs7H,IAC1DA,EAAOt7H,KAAKmkM,iBAAgBrjM,EAAM2Q,GAAGvG,MAAMwC,eAAgB1N,KAAMs7H,IACjEA,EAAOt7H,KAAKokM,cAAatjM,EAAM2Q,GAAGvG,MAAMiC,WAAYnN,KAAMs7H,IAC1DA,EAAOt7H,KAAKqkM,aAAYvjM,EAAM2Q,GAAGvG,MAAMkC,UAAWpN,KAAMs7H,IACxDA,EAAOt7H,KAAKskM,eAAcxjM,EAAM2Q,GAAGvG,MAAM8B,MAAOhN,KAAMs7H,IACtDA,EAAOt7H,KAAKukM,qBAAoBzjM,EAAM2Q,GAAGvG,MAAMsC,aAAcxN,KAAMs7H,IACnEA,EAAOt7H,KAAKwkM,oBAAmB1jM,EAAM2Q,GAAGvG,MAAM+B,YAAajN,KAAMs7H,IAEjEA,EAAOt7H,KAAKykM,YAAW5pM,MAAMS,MAAMmW,GAAGvG,MAAM4C,SAAU9N,KAAMs7H,IAC5DA,EAAOt7H,KAAK0kM,aAAY7pM,MAAMS,MAAMmW,GAAGvG,MAAM6C,UAAW/N,KAAMs7H,IAC9DA,EAAOt7H,KAAK2kM,UAAS9pM,MAAMS,MAAMmW,GAAGvG,MAAM8C,OAAQhO,KAAMs7H,E,EC/CpE,IAAYspE,+EASX,KAPGA,GAAA,mBAEAA,MAAA,iBAEAA,MAAA,eAEAA,MAAA,aAME,MAAOC,qBAAqB1yL,SAU9B5V,YAAY2F,EAAWgT,GACnB7C,QACArS,KAAKkC,KAAOA,EACZlC,KAAKkV,OAASA,C,ECgBtBpa,OAAOgqM,eAAe,CAAC,MAAO,OA5C9B,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,OAAQ8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GACrFA,EAGE,IAAI2iM,aAAa3iM,EAAM0iM,qBAAmBG,OAFtC,M,GAwCgCjqM,OAAOwvH,MAC9DxvH,OAAOgqM,eAAe,CAAC,MAAO,QAAS,OAlCvC,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,cAAe8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GAC5FA,EAGE,IAAI2iM,aAAa3iM,EAAM0iM,qBAAmBl6I,QAFtC,M,GA8B0C5vD,OAAOyvH,QACxEzvH,OAAOgqM,eAAe,CAAC,QAxBvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,OAAQ8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GACrFA,EAGE,IAAI2iM,aAAa3iM,EAAM0iM,qBAAmB1iF,MAFtC,M,GAoB0BpnH,OAAOonH,MACxDpnH,OAAOgqM,eAAe,CAAC,OAdvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,MAAO8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GACpFA,EAGE,IAAI2iM,aAAa3iM,EAAM0iM,qBAAmBvkF,KAFtC,M,GAUwBvlH,OAAOulH,KCsBtDvlH,OAAOgqM,eAAe,CAAC,SAnEvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,OAAQ8yG,EAAK5Z,SAAS4O,eAAe,IAAMgL,EAAK5L,SAASjiF,MAAKl3B,IAC7F,IAAKA,EACD,OAAO,KAEX,IAAI8iM,EAAsC,GAC1C,GAAI9iM,EAAKu3C,MAAQv3C,EAAKu3C,KAAKyqE,MAAO,CAC9B,IAAI+gF,EAAqB,GACrBxmM,EAAIwoH,EAAK9yG,IAAI5U,YAAY,MACnB,GAANd,IACAwmM,EAAah+E,EAAK9yG,IAAI7V,UAAU,EAAGG,EAAI,IAG3C,IAAIymM,EAAgB,GACpBzmM,EAAIwoH,EAAK9yG,IAAI5U,YAAY,MACf,GAANd,IACAymM,EAAQj+E,EAAK9yG,IAAI7V,UAAUG,IAG/B,IAAI0mM,EAAsBjjM,EAAKu3C,KAAKyqE,MAAM3lH,MAAM,KAChD,IAAK,IAAI6mM,KAAOD,EACZH,EAAW3oM,KAAK4qH,EAAK/rH,OAAO+sB,KAAKg9K,EAAaG,EAAMF,EAAO,KAAMj+E,EAAK5Z,SAAS4O,kBACtF,MACG+oF,EAAW3oM,KAAK4qH,EAAK/rH,OAAO+sB,KAAKvqB,MAAM0/B,qBAAqB6pF,EAAK9yG,IAAK,OAAQ,KAAM8yG,EAAK5Z,SAAS4O,mBAGtG,OAAO/iF,QAAQotF,IAAI0+E,GAAY5rK,MAAK+rK,IAChC,IAAI99E,EAAUJ,EAAK5L,QAAQgM,SAAW,GAElC1M,EAAcz4G,EAAKy4G,OACnB0qF,EAAqBnjM,EAAKu3C,MAA4B,MAApBv3C,EAAKu3C,KAAKihE,OAAkBx4G,EAAKu3C,KAAKihE,OAASuM,EAAK9yG,IAAI7V,UAAU,EAAG2oH,EAAK9yG,IAAI5U,YAAY,MAAQ,IACpI+lM,EAA8B,GAE9B1tK,EAAoB,EACpB11B,EAAKu3C,MAAQv3C,EAAKu3C,KAAKh1C,OAA4B,GAAnBvC,EAAKu3C,KAAKh1C,QAC1CmzB,EAAYl5B,WAAWwD,EAAKu3C,KAAKh1C,QAErC,IAAK,IAAI8gM,KAAQJ,EACTI,IACAA,EAAKhxL,gBACLgxL,EAAK3tK,UAAYA,GAIzB,IAAK,IAAI7iB,KAAQ4lG,EAAQ,CACrB,IAAI11E,EAAM01E,EAAO5lG,GACbwwL,EAAOJ,EAAKlgK,EAAIyoF,MAAMv9D,IAAMlrB,EAAIyoF,MAAMv9D,IAAM,GAChD,IAAKo1I,EACD,SAEJ,IAAIpxL,EAAMkzG,EAAUg+E,GAAapgK,EAAIugK,UAAYzwL,GAC7C00G,EAAKlyF,QAAQ7vB,OAAO69L,EAAMtgK,EAAIyoF,MAAMxuH,EAAG+lC,EAAIyoF,MAAMvuH,EAAG8lC,EAAIyoF,MAAMz/F,EAAGgX,EAAIyoF,MAAMx/F,EAAG+W,EAAIwgK,iBAAiBvmM,EAAG+lC,EAAIwgK,iBAAiBtmM,EAAG8lC,EAAIygK,WAAWz3K,EAAGgX,EAAIygK,WAAWx3K,GACnKu7F,EAAG92G,MAAO,EACV82G,EAAG/tF,UAAYuJ,EAAI4iD,SACnB4hC,EAAGk8E,UAAY1gK,EAAI2gK,SACnB3+E,EAAK/rH,OAAO4rH,SAAS3yG,EAAKs1G,GAC1BA,EAAGt1G,IAAMA,EACTmxL,EAAYjpM,KAAKotH,EACpB,CAED,OAAO,IAAIhO,cAAc4pF,EAAWF,EAAMG,EAAY,GACxD,G,GAKgCxqM,OAAOssH,OClExC,MAAAy+E,GAAyC,CAClDC,UAAaA,UACbtsL,WAAcA,WACdS,WAAcA,WACd8L,YAAeA,YACfzD,WAAcA,WACdb,YAAeA,YACfpG,aAAgBA,aAChB0qL,aAAgBA,cASpB,IAAIC,GACAC,GACAC,G,MAESC,cAGFnvM,iBAAiBkL,EAAW+iC,EAAWo2E,GACtCA,GACA2qF,GAAU3qF,EAAQ+qF,UAClBH,GAAgB5qF,EAAQgrF,aACxBH,GAAe7qF,EAAQirF,cAGvBN,GAAU,KACVC,GAAgB,KAChBC,GAAe,MAGnBC,cAAcI,iBAAkB,EAChC,IACI,OAAOJ,cAAcK,WAAWtkM,EAAM+iC,EACzC,CAAS,QACNkhK,cAAcI,iBAAkB,CACnC,C,CAGGvvM,kBAAkBkL,EAAW+iC,GACjC,GAAY,MAAR/iC,EACA,OAAO,KACN,GAAImP,MAAMC,QAAQpP,GAAO,CAC1B,IAAI7D,EAAa,GACjB,IAAK,IAAII,EAAI,EAAGA,EAAIyD,EAAKjG,OAAQwC,IAAK,CAClC,IAAI2c,EAAIlZ,EAAKzD,GACb,GAAS,MAAL2c,EACA,IACI/c,EAAII,GAAK0nM,cAAcK,WAAWprL,EACrC,CACD,MAAOwL,GACCo/K,IACAA,GAAQ3pM,KAAKuqB,GACjBvoB,EAAII,GAAK,IACZ,MAGDJ,EAAII,GAAK,IAChB,CACD,OAAOJ,CACV,CACI,GAAsB,iBAAlB,EAA4B,CACjC,GAAmB,MAAf6D,EAAKo/K,OAAgB,CACrB,IAAIntK,EAAMkpB,IAAIopK,gBAAgBvkM,EAAKo/K,QACnC,OAAOzmL,MAAMK,OAAOoqG,OAAOnxF,EAAKgyL,cAAcO,wBAAwBxkM,EAAKykM,QAC9E,CAED,GAAkB,MAAdzkM,EAAK0kM,MAAe,CACpB,IAAIrlM,EAAO0kM,cAAa,EAAbA,GAAgB/jM,EAAK0kM,OAChC,GAAIrlM,GAAQW,EAAKykM,OAAQ,CACrB,IAAI/pM,EAAW7F,WAAWM,SAAS6K,EAAKykM,QACxC,OAAI/pM,EACO2E,EAAKipG,aAAa5tG,GAElB,IACd,CAEG,OAAO2E,CACd,CAED,IAAIgK,EAAOrJ,EAAKykM,OAEhB,GAAa,QAATp7L,EACA,OAAIrJ,EAAKykM,OACEzkM,EAAKjE,MAELiE,EAGf,IAAI2kM,EAAahB,GAAkBt6L,GACnC,GAAkB,MAAds7L,EACA,OAAI3kM,EAAKykM,OACE,IAAIE,EAAW3kM,EAAKjE,OAEpB,IAAI4oM,EAAW3kM,GAG9B,IAAK+iC,EAAK,CACN,IAAIroC,EAAW7F,WAAWM,SAASkU,GACnC,IAAK3O,EAED,OAAO,KAGXqoC,EAAM,IAAIroC,CACb,CAED,IAAK,IAAIwP,KAAOlK,EAAM,CAClB,GAAIkK,EAAIuwB,WAAW,MACf,SAEJ,IAAIvhB,EAAIlZ,EAAKkK,GACb,GAAS,MAALgP,GAA4B,iBAAf,GAA2B/J,MAAMC,QAAQ8J,IACnDA,EAAEurL,QAAUvrL,EAAEkmK,QAAUlmK,EAAEwrL,MAC7B,IACI,IAAIruK,EAAK4tK,cAAcK,WAAWprL,GAClC6pB,EAAI74B,GAAOmsB,EAED,MAANA,GAAmB,MAALnd,GAAaA,EAAE0rL,SAC7B7hK,EAAI7pB,EAAE0rL,QAAUZ,GAAa3tK,GACpC,CACD,MAAO3R,GACCo/K,IACAA,GAAQ3pM,KAAKuqB,EACpB,KAEA,CACD,IAAImgL,EAAW9hK,EAAI74B,GACnB,GAAI26L,EACA,IACIZ,cAAcK,WAAWprL,EAAG2rL,EAC/B,CACD,MAAOngL,GACCo/K,IACAA,GAAQ3pM,KAAKuqB,EACpB,CAER,CACJ,CAKD,OAHIqe,EAAIkP,oBACJlP,EAAIkP,qBAEDlP,CACV,CAEG,OAAO/iC,C,CAGflL,+BAA+BuU,GAC3B,OAAQA,GACJ,IAAK,YACL,IAAK,gBACD,OAAOzQ,OAAOotB,UAClB,IAAK,cACD,OAAOptB,OAAOkwH,YAClB,IAAK,SACD,OAAOlwH,OAAO+vH,UAClB,QACI,OAAO,K,CAKnB7zH,wBAAwBgwM,GACpB,IAAIvkC,EAAsC,KAC1C,IAAK,IAAIj9J,EAAIwhM,EAAa/qM,OAAQwC,EAAI+G,EAAI,EAAG/G,GAAK,EAAGA,IAAK,CACtD,IAAIJ,EAAM2oM,EAAavoM,GACvB,GAAIJ,GAAOA,EAAIpC,OAAS,EACpB,IAAK,IAAI8H,KAAK1F,EAAK,CACf,IACIsB,EADAsnM,EAAKljM,EAAEmjM,YAAcnjM,EAAEojM,SAO3B,GALI91L,MAAMC,QAAQ21L,GACdtnM,EAAIsnM,EAAGzhM,EAAI/G,EAAI,GACVA,GAAK+G,EAAI,IACd7F,EAAIsnM,GAEC,MAALtnM,EAAW,CACN8iK,IAASA,EAAU,IACxB,IAAI2kC,EAAO3kC,EAAQ9iK,GACdynM,IACD3kC,EAAQ9iK,GAAKynM,EAAO,IACxBA,EAAK/qM,KAAKmJ,EAAI/G,EAAGsF,EACpB,CACJ,CAER,CAED,OAAO0+J,C,CAGXzrK,yBAAyBqwM,EAAeC,GAoIpC,OAnIA,SAAS7pJ,KAAKxY,GACV,GAAIqiK,EAAgBriK,EAAIsiK,MACpB,OAAO,EAEX,IAAIC,EAAuBviK,EAAIwiK,QAC/B,SAAID,IAAYA,EAASp3H,MAAKg3B,GAAS3pD,KAAK2pD,K,CAyH5C3pD,CAAK4pJ,KACLA,EApHJ,SAASK,UAAUziK,GACf,IAAI7zB,EAAMyD,OAAOs9B,OAAO,GAAIlN,GACxBuiK,EAAuBp2L,EAAIq2L,QAC3BD,IACAp2L,EAAIq2L,QAAUD,EAASnlK,KAAIv+B,GAAK4jM,UAAU5jM,MAC9C,IAAI6jM,EAAoBv2L,EAAIw2L,OAG5B,OAFID,IACAv2L,EAAIw2L,OAASD,EAAMtlK,KAAIv+B,GAAK+Q,OAAOs9B,OAAO,GAAIruC,MAC3CsN,C,CA4GIs2L,CAAUL,GAzGzB,SAASQ,MAAM3lM,GACX,IAAIslM,EAAuBtlM,EAAKulM,QAChC,GAAID,EACA,IAAK,IAAIpgG,KAASogG,EACVpgG,EAAMmgG,MACNM,MAAMzgG,GAIlB,IAAI6/F,EAAKK,EAAgBplM,EAAKqlM,MAC9B,GAAIN,EACA,IAAK,IAAIxoM,EAAI,EAAGA,EAAIwoM,EAAGhrM,OAAQwC,GAAK,EAAG,CACnC,IAEIqpM,EAFApoM,EAAIunM,EAAGxoM,GACPoiB,EAAIomL,EAAGxoM,EAAI,GAEf,GAAIqpM,EAASjnL,EAAEqmL,WAAY,CACvB,IAAIa,EACJ,GAAI12L,MAAMC,QAAQw2L,GACd,GAAIpoM,GAAKooM,EAAO7rM,OAAS,EAAG,CACxB,IAAI0D,EAAImoM,EAAOpoM,GACV8nM,EAGDO,EAAUP,EAASp3H,MAAKtsE,GAAKA,EAAEojM,YAAcvnM,IAF7CuC,EAAKulM,QAAUD,EAAW,GAGzBO,IACDA,EAAU,CAAEb,WAAYvnM,GACxB6nM,EAASnrM,KAAK0rM,GAErB,MACI,GAAIroM,EAAIooM,EAAO7rM,OAAS,EAAG,CAC5B,IAAI0D,EAAImoM,EAAOztL,MAAM3a,GAChB8nM,EAGDO,EAAUP,EAASp3H,MAAKtsE,IACpB,IAAIgyB,EAAIhyB,EAAEojM,WACV,OAAO71L,MAAMC,QAAQwkB,IAAMkyK,YAAYlyK,EAAGn2B,EAAE,IAJhDuC,EAAKulM,QAAUD,EAAW,GAOzBO,IACDA,EAAU,CAAEb,WAAYvnM,GACxB6nM,EAASnrM,KAAK0rM,GAErB,MAEGA,EAAU7lM,OAGd6lM,EAAU7lM,EAGd,GADA+lM,UAAUF,EAASlnL,GACfA,EAAE+mL,OAAQ,CACV,IAAID,EAAoBI,EAAQH,OAC3BD,IACDI,EAAQH,OAASD,EAAQ,IAC7B,IAAK,IAAIh+F,KAAQ9oF,EAAE+mL,OAAQ,CACvB,IAAIM,EAAWv+F,EAAKg9F,QAAUh9F,EAAKu9F,WAC/BpjM,EAAI6jM,EAAMv3H,MAAKtsE,GAAKA,EAAEojM,YAAcgB,GAAYpkM,EAAE6iM,QAAUuB,IAC3DpkM,IACDA,EAAI,GACA6lG,EAAKg9F,OACL7iM,EAAE6iM,OAASuB,EAEXpkM,EAAEojM,WAAagB,EACnBP,EAAMtrM,KAAKyH,IAEfmkM,UAAUnkM,EAAG6lG,EAChB,CACJ,CACJ,MACI,GAAIm+F,EAASjnL,EAAEsmL,SAAU,CAG1B,IAAIxnM,EACJ,GAHK6nM,IACDtlM,EAAKulM,QAAUD,EAAW,IAE1B9nM,EAAIooM,EAAO7rM,OAAQ,CAEf0D,EADAD,GAAKooM,EAAO7rM,OAAS,EACjB6rM,EAAOpoM,GAEPooM,EAAOztL,MAAM3a,GACrB,IAAIqoM,EAAUlzL,OAAOs9B,OAAO,GAAItxB,GAEhCknL,EAAQZ,SAAWxnM,EACnB6nM,EAASnrM,KAAK0rM,EACjB,KACI,CACD,IAAIA,EAAUlzL,OAAOs9B,OAAO,GAAItxB,UAEzBknL,EAAQZ,SACXjlM,EAAKimM,SACLX,EAASnrM,KAAK0rM,WAGPA,EAAQK,QACXvnL,EAAEunL,QAAUZ,EAASvrM,OACrBurM,EAAS98L,OAAOmW,EAAEunL,QAAS,EAAGL,GAE9BP,EAASnrM,KAAK0rM,GAEzB,CACJ,CACJ,C,CAMLF,CAAMR,IAGHA,C,EAIf,SAASY,UAAU59L,EAAag+L,GAC5B,IAAK,IAAI1oM,KAAK0oM,EAAW,CACrB,GAAI1oM,EAAEg9B,WAAW,MACb,SAEJ,IAAIvhB,EAAIitL,EAAU1oM,GAClB,GAAS,MAALyb,GAA4B,iBAAf,GAA4B/J,MAAMC,QAAQ8J,KAAQA,EAAEurL,QAAUvrL,EAAEkmK,QAAUlmK,EAAEwrL,OAUzFv8L,EAAO1K,GAAKyb,MAVqF,CACjG,IAAImd,EAAKluB,EAAO1K,GACN,MAAN44B,GAA8B,iBAAhB,GACdluB,EAAO1K,GAAK44B,EAAK1jB,OAAOs9B,OAAO,GAAI5Z,GACnC0vK,UAAU1vK,EAAInd,IAGd/Q,EAAO1K,GAAKyb,CACnB,CAGJ,CACL,CAEA,SAAS4sL,YAAYpkM,EAAuBC,GACxC,GAAID,EAAE3H,SAAW4H,EAAE5H,OAAQ,CACvB,IAAK,IAAIwC,EAAI,EAAGA,EAAImF,EAAE3H,OAAQwC,IAC1B,GAAImF,EAAEnF,KAAOoF,EAAEpF,GACX,OAAO,EAGf,OAAO,CACV,CACG,OAAO,CAEf,CArVkB0nM,cAAeI,iBAAG,EClBpC,MAAM+B,GAAwB,G,MAEjBC,gBACFvxM,aAAakL,EAAWm5G,EAA+BwlD,GAC1DA,EAASA,GAAUynC,GACnB,IAIIx/F,EAEA0/F,EACAC,EACAC,EACA1B,EAwIA2B,EAmBAhnC,EApKAinC,EAAgC,GAChCC,EAAuB,GACvBC,EAAwB,GACxBC,EAAwB,GAgB5B,SAAS/hC,eAAe9kK,EAAW8mM,GAC/B,IAAK,IAAI5hG,KAASllG,EAAKulM,QACnB,GAAIrgG,EAAMqgG,QAAS,CACf,IAAIlmM,EAAO0nM,WAAW7hG,EAAO4hG,GAC7BhiC,eAAe5/D,EAAOA,EAAM+gG,SAAW5mM,EAAOynM,GAE9CH,EAASxsM,KAAK+qG,GACd0hG,EAASzsM,KAAKkF,EACjB,KACI,CACD,IAAIA,EAAO0nM,WAAW7hG,EAAO4hG,GAC7BH,EAASxsM,KAAK+qG,GACd0hG,EAASzsM,KAAKkF,EACjB,C,CAIT,SAAS0nM,WAAW5B,EAAe2B,EAAcrnC,GAC7C,IAAIpgK,EACA2nM,EACJ,GAAIA,EAAO7B,EAASH,YAChB,GAAI8B,GAAUP,EACV,GAAIp3L,MAAMC,QAAQ43L,GAAO,CACrB3nM,EAAOynM,EACP,IAAK,IAAIvqM,EAAI,EAAG+G,EAAI0jM,EAAKjtM,OAAQwC,EAAI+G,EAAG/G,IAAK,CACzC,IAAI4jC,EAAMomK,EAAejtK,IAAIj6B,GAE7B,GADAA,EAAO8gC,aAAA,EAAAA,EAAM6mK,EAAKzqM,KACb8C,EACD,KACP,CACJ,KACI,CACD,IAAI8gC,EAAMomK,EAAejtK,IAAIwtK,GACzB3mK,IACA9gC,EAAO8gC,EAAIglK,EAASH,YAC3B,MAGJ,CACD,GAAIgC,EAAO7B,EAASc,SAAU,CAC1B,IAAI50L,EAAczY,OAAOwqG,OAAOjoE,IAAIopK,gBAAgByC,GAAOpuM,OAAO+vH,WAClE,GAAIt3G,EAAK,CACAk1L,IACDA,EAAiB,IAAIltK,KAEzB,IAAI4tK,EAA4B,GAC5BC,EAAS/B,EAASE,KACtB,GAAIP,EACA,IAAK,IAAIvoM,EAAI,EAAG+G,EAAIwhM,EAAa/qM,OAAQwC,EAAI+G,EAAG/G,IAAK,CACjD,IAAIJ,EAAM2oM,EAAavoM,GACnBJ,GAAOA,EAAIpC,OAAS,EACpBktM,EAAc1qM,GAAKJ,EAAIyuF,QAAO/oF,IAC1B,IAAIkjM,EAAKljM,EAAEmjM,YAAcnjM,EAAEojM,SAC3B,OAAO91L,MAAMC,QAAQ21L,IAAOA,EAAGhrM,OAASuJ,EAAI/G,GAAKwoM,EAAGzhM,EAAI/G,EAAI,IAAM2qM,CAAM,IAI5ED,EAAc1qM,GAAKJ,CAC1B,CAGL8qM,EAAc9sM,KAAKgrM,EAASI,SAE5BlmM,EAAOgS,EAAI7L,OAAO,CAAE8gM,UAAU,EAAMC,eAAgBA,EAAgBzB,aAAcmC,GAAiBtoC,EACtG,CACJ,MACI,GAAIqoC,EAAO7B,EAASV,OAAQ,CAC7B,IAAI/pM,EAAW+kK,UAAW5qK,WAAWM,SAAS6xM,GAC9C,GAAItsM,EACA,IACI2E,EAAO,IAAI3E,CACd,CACD,MAAO+d,GACHkmJ,EAAOxkK,KAAKse,EACf,MAGDkmJ,EAAOxkK,KAAK,IAAI6sB,MAAM,iBAAiBggL,MAE9C,CAEG3nM,IACAqnM,EAAQvB,EAASE,MAAQhmM,EAChC,CAED,OAAOA,C,CAeX,SAAS8nM,iBAAiBL,EAAclB,EAA2B7mE,EAAqB,GACpF,IAAK6mE,EACD,OAAOkB,EAEX,IAAI3mK,EAAMomK,aAAc,EAAdA,EAAgBjtK,IAAIwtK,GAC9B,IAAK3mK,EACD,OAAO,KAEX,GAAIhxB,MAAMC,QAAQw2L,GAAS,CACvB,IAAIvmM,EACJ,IAAK,IAAI9C,EAAIwiI,EAAYz7H,EAAIsiM,EAAO7rM,OAAQwC,EAAI+G,EAAG/G,IAAK,CACpD,IAAK4jC,EACD,OAAO,KAGX,GADA9gC,EAAO8gC,EAAIylK,EAAOrpM,KACb8C,EACD,MAEJ8gC,EAAMomK,EAAejtK,IAAIj6B,EAC5B,CACD,OAAOA,CACV,CAEG,OAAO8gC,EAAIylK,E,CAuBnB,GA1JIzsF,IACAmtF,EAAWntF,EAAQmtF,SACfA,IACAC,EAAiBptF,EAAQotF,gBAC7BC,EAAcrtF,EAAQqtF,YACtB1B,EAAe3rF,EAAQ2rF,cAqJvB9kM,EAAKykM,QAAUzkM,EAAKimM,SAAU,CAC9B,GAAIxmC,EAAUz/J,EAAKonM,UAAW,CACtB3nC,EAAQhlI,WAAW,YACnBglI,EAAUA,EAAQrjK,UAAU,IAChC,IAAI1B,EAAM7F,WAAWM,SAASsqK,GAC1B/kK,EACA+kK,EAAU/kK,EAEVikK,EAAOxkK,KAAK,IAAI6sB,MAAM,oBAAoBy4I,MACjD,CAED,IAAIpgK,EAAO0nM,WAAW/mM,EAAM,KAAMy/J,GAC9BpgK,IACIW,EAAKulM,SACLzgC,eAAe9kK,EAAMA,EAAKimM,SAAW5mM,EAAO,MAEhDsnM,EAASxsM,KAAK6F,GACd4mM,EAASzsM,KAAKkF,GAEVA,aAAgB+gK,QAChBx5D,EAAQvnG,GAEnB,MAEOW,EAAKulM,SACLzgC,eAAe9kK,EAAM,MAG7B,IAAI8I,EAAM69L,EAAS5sM,OAGf0D,EAAI,EACR,IAAK,IAAIlB,EAAI,EAAGA,EAAIuM,EAAKvM,IAAK,CAC1B,IAAI4oM,EAAWwB,EAASpqM,GACpB8C,EAAOunM,EAASrqM,GAEhB+oM,EAAuBH,EAASI,QACpC,GAAID,EAAU,CACV,IAAIpmL,EAAMomL,EAASvrM,OACnB,GAAIsF,EACA,GAAI8lM,EAASc,SACT,IAAK,IAAIzoM,EAAI,EAAGA,EAAI0hB,EAAK1hB,IAAK,CAC1B,IACI8F,EAAIujM,EADAppM,EAAIyhB,EAAM1hB,GAElB,GAAI8F,IAAMA,EAAE66B,OAAQ,CAChB,IAAIkpK,EAAYV,EAASpqM,EAAI2iB,EAAM1hB,GAC/Bs8C,EAAaqtJ,iBAAiB9nM,EAAMgoM,EAAUpC,UAClD,GAAInrJ,EAAY,CACZ,IAAIx+B,EAAM+rL,EAAUnB,QACT,MAAP5qL,GAAeA,EAAMw+B,EAAW+rD,YAChC/rD,EAAWirD,WAAWzhG,EAAGgY,GAEzBw+B,EAAW4gC,SAASp3E,EAC3B,MAGGjE,EAAK0lG,WAAWzhG,EAAG,EAE1B,CACJ,MAGD,IAAK,IAAI9F,EAAI,EAAGA,EAAI0hB,EAAK1hB,IAAK,CAC1B,IAAI8F,EAAIujM,EAASppM,EAAIyhB,EAAM1hB,GACvB8F,IACIjE,IAASunG,GAAStjG,EAAE7C,MACpBmmG,EAAM8+D,SAAgBpiK,EAEtBjE,EAAKq7E,SAASp3E,GAEzB,CAGT7F,GAAKyhB,CACR,CAED2nL,EAASppM,GAAK4B,EACd5B,GACH,CACDopM,EAAS9sM,OAAS0D,EAClBopM,EAAWA,EAASj8G,QAAOtnF,GAAU,MAALA,IAChC,IAAIgkM,EAAUT,EAAS,GAGnBU,EAA2B,GAC/B,IAAK,IAAIhrM,EAAI,EAAGA,EAAIuM,EAAKvM,IAAK,CAC1B,IAAIksG,EAAak+F,EAASpqM,GAAGmpM,OAC7B,IAAKj9F,EACD,SAEJ,IAAIppG,EAAOunM,EAASrqM,GACpB,GAAK8C,EAGL,IAAK,IAAImoM,KAAY/+F,EAAY,CAC7B,IAAIhB,EACJ,GAAI+/F,EAASxC,WAAY,CACrB,IAAItqM,EAAW7F,WAAWM,SAASqyM,EAASxC,YACxCtqM,IACA+sG,EAAOpoG,EAAKipG,aAAa5tG,GAChC,KACI,CACD,IAAIA,EAAW7F,WAAWM,SAASqyM,EAAS/C,QAC5C,GAAI/pM,IACA+sG,EAAOpoG,EAAKipG,aAAa5tG,IACpB+sG,GACD,IACIA,EAAOpoG,EAAK8oG,aAAaztG,EAC5B,CACD,MAAO+d,GACHkmJ,EAAOxkK,KAAKse,EACf,CAGZ,CAEGgvF,GACA8/F,EAAaptM,KAAKqtM,EAAU//F,EACnC,CACJ,CAGD,MAAMggG,EAAmC,CAAEvD,UAAWvlC,EAAQwlC,aApL9D,SAAsByB,GAClB,GAAIz2L,MAAMC,QAAQw2L,GAAS,CACvB,IAAIkB,EAASJ,EAAQd,EAAO,IAC5B,OAAIkB,GAAUlB,EAAO7rM,OAAS,EACnBotM,iBAAiBL,EAAQlB,EAAQ,GAEjCkB,CACd,CAEG,OAAOJ,EAAQd,E,EA2KqDxB,YA7I5E,SAAqB/kM,GACRA,EAAM60G,SAAU,EAEzB,IAAI33G,EAAIqqM,EAAS5qM,QAAQqD,GACrB8lM,EAAWwB,EAASpqM,GAExB,OAAKuoM,QAGqBz1L,IAAtBo3L,IACAA,EAAoBxC,cAAcyD,iBAAiB5C,IAEnD2B,EACOxC,cAAc0D,kBAAkBxC,EAAUsB,GAE1CtB,GARAA,C,GAuIf,IAAK,IAAI5oM,EAAI,EAAGA,EAAIuM,EAAKvM,IAAK,CAC1B,IAAI4oM,EAAWwB,EAASpqM,GACpB8C,EAAOunM,EAASrqM,GACpB,GAAI8C,IACmB,MAAfmnM,GAAwBnnM,aAAgBi7E,SACxCj7E,EAAKw2G,aAAe2wF,GAExBvC,cAAc2D,UAAUzC,EAAU9lM,EAAMooM,GAEpChoC,GAAW0lC,EAAS0C,OAASxoM,EAAKwT,MAClC,IACUy0L,EAASjoM,EAAKwT,MAAQxT,CAC/B,CACD,MAAOoZ,GACHkmJ,EAAOxkK,KAAKse,EACf,CAGZ,CAGD3P,EAAMy+L,EAAaxtM,OACnB,IAAK,IAAIwC,EAAI,EAAGA,EAAIuM,EAAKvM,GAAK,EAC1B0nM,cAAc2D,UAAUL,EAAahrM,GAAIgrM,EAAahrM,EAAI,GAAIkrM,GASlE,OANInB,GAAYC,GAAkBe,GAC9Bf,EAAehuL,IAAI+uL,EAASZ,GAE5B/nC,GAAUynC,KACVA,GAAUrsM,OAAS,GAEhB8sM,C,CAGJ/xM,4BAA4BkL,EAAWy7B,GAC1C,IAAI8f,EAAiC,GACjCumH,EAAmC,GAEvC,SAASC,YAAY9vJ,EAAa5I,GAC9B,IAAK4I,EACD,MAAO,GACX,IAAIymG,EAAQn9D,EAAKtpC,GACjB,QAAc5C,IAAVqpG,EAAqB,CACrB,IAAI38E,EAEAA,EADA9pB,EAAIlY,QAAU,IAA4B,KAAtBkY,EAAI4K,WAAW,IAAoC,KAAvB5K,EAAI4K,WAAW,IACxD,SAAW5K,EAEXkpB,IAAI9e,KAAKof,EAAUxpB,GAC9B6vJ,EAAU3nK,KAAK,CAAE8X,IAAK8pB,EAAM1yB,KAAMA,IAClCkyC,EAAKtpC,GAAOymG,EAAQ,CAAC38E,EAAM1yB,EAC9B,MACmC,GAA3BqvG,EAAM18G,QAAQqN,EAAM,KACzBqvG,EAAMv+G,KAAKkP,GACXy4J,EAAU3nK,KAAK,CAAE8X,IAAKymG,EAAM,GAAIrvG,KAAMA,KAE1C,OAAOqvG,EAAM,E,CAwCjB,GArCA,SAASwpD,MAAMliK,GACX,IAAK,IAAIkK,KAAOlK,EAAM,CAClB,IAAIklG,EAAQllG,EAAKkK,GACjB,GAAa,MAATg7F,EAEJ,GAAI/1F,MAAMC,QAAQ81F,GACd,IAAK,IAAIlrG,KAAQkrG,EACD,MAARlrG,GAGkB,iBAAlB,IACmB,MAAfA,EAAKolL,OACLplL,EAAKolL,OAASrd,YAAY/nK,EAAKolL,OAAQ6kB,cAAcO,wBAAwBxqM,EAAKyqM,SAC5D,MAAjBzqM,EAAKisM,UACVjsM,EAAKisM,SAAWlkC,YAAY/nK,EAAKisM,SAAUrtM,OAAO+vH,WAClDu5C,MAAMloK,IAGNkoK,MAAMloK,QAIM,iBAAnB,IACe,MAAhBkrG,EAAMk6E,OACNl6E,EAAMk6E,OAASrd,YAAY78D,EAAMk6E,OAAQ6kB,cAAcO,wBAAwBt/F,EAAMu/F,SAC9D,MAAlBv/F,EAAM+gG,UACX/gG,EAAM+gG,SAAWlkC,YAAY78D,EAAM+gG,SAAUrtM,OAAO+vH,WACpDu5C,MAAMh9D,IAGNg9D,MAAMh9D,GAEjB,C,CAGLg9D,CAAMliK,GAEFA,EAAK8nM,WACL,IAAK,IAAI71L,KAAOjS,EAAK8nM,WACjBhmC,EAAU3nK,KAAK8X,GAGvB,OAAO6vJ,C,QC5YFimC,gBAKThiL,KAAKg/F,GACD,IAAI9yG,EAAM8yG,EAAK9yG,IAIf,OAH0B,QAAZ8yG,EAAKznH,KAA6B,OAAZynH,EAAKznH,KAA4B,OAAZynH,EAAKznH,OAE1D2U,EAAM+nB,QAAQU,KAAKK,eAAe9oB,EAAK8yG,EAAK7yG,KAAM,IAAK,OACpD6yG,EAAK/rH,OAAOo/G,MAAMnmG,EAAK,OAAQ8yG,EAAK5Z,SAAS4O,eAAe,IAAMgL,EAAK5L,SAASjiF,MAAKl3B,GACnFA,EAGa,MAAdA,EAAKgoM,MACElqM,KAAKmqM,MAAMF,gBAAgB7K,GAAIn4E,EAAM/kH,EAAM,GACjC,MAAZ+kH,EAAKznH,KAA2B,MAAZynH,EAAKznH,IACvBQ,KAAKmqM,MAAMF,gBAAgB1xK,GAAI0uF,EAAM/kH,EAAM,GACjC,SAAZ+kH,EAAKznH,KAA8B,UAAZynH,EAAKznH,IAC1BQ,KAAKmqM,MAAMF,gBAAgBG,oBAAqBnjF,EAAM/kH,EAAM,GAE5D,KATA,M,CAcXioM,MAAM1oC,EAA0Bx6C,EAAiB/kH,EAAW1G,GAChE,IAAImiC,EAAWN,IAAII,QAAQwpF,EAAK9yG,KAC5Bk2L,EAAQ5oC,EAAI6oC,qBAAqBpoM,EAAMy7B,GAC3C,OAAOspF,EAAK/rH,OAAO+sB,KAAKoiL,EAAO,KAAMpjF,EAAK5Z,SAAS4O,kBAAkB7iF,MAAMmxK,IACvE,IAAIh3L,EAAM,IAAIiuJ,WAAWC,EAAKv/J,EAAM1G,GAEpC,OADA+X,EAAI6tJ,QAAQmpC,GACLh3L,CAAG,G,EA/BX02L,gBAAE7K,GAAwBmJ,gBAC1B0B,gBAAE1xK,GAAwB,KAC1B0xK,gBAAmBG,oBAAwBrpC,eAkCtDjmK,OAAOgqM,eAAe,CAAC,KAAM,KAAM,QAAS,UAAWmF,gBAAiBnvM,OAAO+vH,W,MCnBlE2/E,eAsHTjuM,YAAmBwC,EAA4B4vF,EAA2B87G,EAA2BC,EAA2BriM,EAAsBC,EAAuB4M,GAA1JlV,KAAMjB,OAANA,EAA4BiB,KAAU2uF,WAAVA,EAA2B3uF,KAASyqM,UAATA,EAA2BzqM,KAAS0qM,UAATA,EAA2B1qM,KAAKqI,MAALA,EAAsBrI,KAAMsI,OAANA,EAAuBtI,KAAMkV,OAANA,C,CAlH7Kle,wBAAwBkL,EAAmBgkB,EAAsB,KAAMC,EAAyB,MAE5F,IAAI4C,EAAUyhL,eAAeG,WAAWzoM,GAEpCqkB,EAAU,IAAIpB,UAAU4D,EAAQ1gB,MAAO0gB,EAAQzgB,OAAQygB,EAAQ7T,QAAQ,GAAO,GAAO,GAIzF,OAFAqR,EAAQuC,WAAWC,GAEZxC,C,CAOXvvB,kBAAkB+H,GAEd,IAAImD,EAAO,IAAIsX,WAAWza,GACtB6rM,EAAiB,EAErB,MAAMC,SAAW,KACb,IAAIC,EAAUN,eAAeO,cAAc7oM,EAAM0oM,GAGjD,OADAA,GAAkBE,EAAQ7uM,OAAS,EAC5B6uM,CAAO,EAMlB,GAAkB,cAFDD,WAGb,KAAM,+BAGV,IAAIG,EAAc,IAAIzvK,IAElB+kG,EAAO,GACX,GAEI,GADAA,EAAOuqE,WACQ,KAAXvqE,EAAK,GAAW,CAChB,IAAI2qE,EAAW3qE,EAAK/hI,MAAM,KAC1BysM,EAAYvwL,IAAIwwL,EAAS,GAAIA,EAAS,GACzC,QAEY,IAAR3qE,GAiBT,GAAiB,mBALD0qE,EAAYxvK,IAAI,UAM5B,KAAM,iCAGV,IACI0vK,EADgBL,WACYtsM,MAAM,KAElCmsM,EAA8B,MAAlBQ,EAAY,GACxBT,EAA8B,MAAlBS,EAAY,GAExB5iM,EAASxJ,SAASosM,EAAY,IAC9B7iM,EAAQvJ,SAASosM,EAAY,IAajC,OAVc,IAAIV,eAAezrM,EAAQ6rM,EAAgBH,EAAWC,EAAWriM,EAAOC,EAAQ0B,gBAAcmN,U,CAaxGngB,qBAAqBkL,EAAkB0oM,GAE3C,IAAIz9I,EAAajrD,EAAKjG,OAElBsO,EAAQqgM,EAERr3L,EAAM,GACN2+D,EAAO,GAOX,KAAO3nE,EAAQ4iD,GAAsB,MAAR+kB,GACzB3+D,EAAM,GAAGA,IAAM2+D,IACfA,EAAOn0D,OAAOC,aAAa9b,EAAKqI,IAChCA,IAGJ,OAAOgJ,C,CAUX43L,sBAEI,IAAI9iM,EAAQrI,KAAKqI,MACbC,EAAStI,KAAKsI,OACFtI,KAAKyqM,UACLzqM,KAAK0qM,UAErB,IAAIxoM,EAAO,IAAIsX,WAAWxZ,KAAKjB,OAAQiB,KAAK2uF,YACxCy8G,EAAY,EAEZC,EAAa,IAAItxL,YAAoB,EAAR1R,GAC7BijM,EAAY,IAAI9xL,WAAW6xL,GAE3BE,EAAc,IAAIxxL,YAAY1R,EAAQC,EAAS,EAAI,GACnDkjM,EAAa,IAAInwL,aAAakwL,GAGlC,IAAK,IAAIpsM,EAAImJ,EAAQnJ,EAAI,EAAGA,IAAK,CAGpB+C,EAAKkpM,KACLlpM,EAAKkpM,KACd,IAGIK,EAHIvpM,EAAKkpM,MAGc,EAFnBlpM,EAAKkpM,KAIb,GAAIK,GAAkBpjM,EAClB,KAAM,kCAGV,IAAIkC,EAAQ,EACZ,IAAK,IAAI9L,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAIkpG,GAAYlpG,EAAI,GAAKgtM,EAEzB,KAAOlhM,EAAQo9F,GAAU,CACrB,IAAI/jG,EAAI1B,EAAKkpM,KACTvnM,EAAI3B,EAAKkpM,KACb,GAAIxnM,EAAI,IAAK,CACT,IAAIkH,EAAQlH,EAAI,IAChB,GAAIkH,EAAQ68F,EAAWp9F,EACnB,KAAM,eAEV,KAAOO,KAAU,GACbwgM,EAAU/gM,KAAW1G,CAE5B,KACI,CACD,IAAIiH,EAAQlH,EACZ,GAAa,GAATkH,GAAcA,EAAQ68F,EAAWp9F,EACjC,KAAM,eAGV,GADA+gM,EAAU/gM,KAAW1G,IACfiH,EAAQ,EACV,IAAK,IAAIpL,EAAI,EAAGA,EAAIoL,EAAOpL,IACvB4rM,EAAU/gM,KAAWrI,EAAKkpM,IAGrC,CAEJ,CACJ,CAED,IAAK,IAAI3sM,EAAI,EAAGA,EAAIgtM,EAAgBhtM,IAAK,CACrC,IAAI4rB,EAAIihL,EAAU7sM,GACd6rB,EAAIghL,EAAU7sM,EAAIgtM,GAClB5nM,EAAIynM,EAAU7sM,EAAI,EAAIgtM,GACtB5qL,EAAIyqL,EAAU7sM,EAAI,EAAIgtM,GAWtBlhM,GAASjC,EAASnJ,GAAKssM,EAAiB,EAAQ,EAAJhtM,EAEhD,MAAMitM,MAAQ,CAACC,EAAkBC,IACzBA,EAAW,KACJD,EAAWpuM,KAAKgtB,IAAI,EAAG,MAAQhtB,KAAKgtB,IAAI,EAAGqhL,EAAW,MAG7DA,GAAY,KACLD,EAAWpuM,KAAKgtB,IAAI,GAAI,MAAQhtB,KAAKgtB,IAAI,EAAGqhL,EAAW,MAG3DD,EAAWpuM,KAAKgtB,IAAI,EAAGqhL,GAGlC,GAAI/qL,EAAI,EAAG,CACP,IAAI+qL,EAAWF,MAAM,EAAK7qL,EAAC,KAC3B2qL,EAAWjhM,GAAS8f,EAAIuhL,EACxBJ,EAAWjhM,EAAQ,GAAK+f,EAAIshL,EAC5BJ,EAAWjhM,EAAQ,GAAK1G,EAAI+nM,CAC/B,MAEGJ,EAAWjhM,GAAS,EACpBihM,EAAWjhM,EAAQ,GAAK,EACxBihM,EAAWjhM,EAAQ,GAAK,CAE/B,CAEJ,CAED,OAAOihM,C,CAOXz3D,eAEI,IAAI1rI,EAAQrI,KAAKqI,MACbC,EAAStI,KAAKsI,OACdmiM,EAAYzqM,KAAKyqM,UACjBC,EAAY1qM,KAAK0qM,UAEjBc,EAAa,IAAInwL,aAAahT,EAAQC,EAAS,GAE/CujM,EAAgB,IAAIryL,WAAmB,EAARnR,GAE/BnG,EAAO,IAAIsX,WAAWxZ,KAAKjB,OAAQiB,KAAK2uF,YACxCxhC,EAAajrD,EAAKjG,OAClBmvM,EAAY,EAEhB,MAAMU,KAAO,KAET,GAAIV,GAAaj+I,EACb,KAAM,wBAGV,OAAOjrD,EAAKkpM,IAAY,EAGtBW,MAAQ,KACV,KAAM,uBAAuB,EAGjC,IAAK,IAAI5sM,EAAKmJ,EAAS,EAAInJ,GAAK,EAAGA,IAAK,CAEpCa,KAAKgsM,WAAWH,EAAeC,KAAMC,OAErC,IAAK,IAAIttM,EAAI,EAAGA,EAAI4J,EAAO5J,IAAK,CAG5B,IAAI8L,EAAQ,EAAI9L,EACZwtM,EAAQJ,EAActhM,GACtB2hM,EAAQL,EAActhM,EAAQ,GAC9B4hM,EAAQN,EAActhM,EAAQ,GAC9B6hM,EAAQP,EAActhM,EAAQ,GAW9BoiB,EAAUxtB,EACVutB,EAAUjuB,EACVisM,IACA/9K,EAAUrkB,EAAS,EAAInJ,GAEvBsrM,IACA/9K,EAAUrkB,EAAQ,EAAI5J,GAG1B,IAAI4tM,EAAa1/K,EAAUtkB,EAAQ,EAAc,EAAVqkB,EAEvC,GAAa,GAAT0/K,EACAZ,EAAWa,GAAc,EACzBb,EAAWa,EAAa,GAAK,EAC7Bb,EAAWa,EAAa,GAAK,MAE5B,CACD,IAAIvuL,EAAIwuL,MAAM,EAAKF,EAAK,KACxBZ,EAAWa,IAAeJ,EAAQ,IAAOnuL,EACzC0tL,EAAWa,EAAa,IAAMH,EAAQ,IAAOpuL,EAC7C0tL,EAAWa,EAAa,IAAMF,EAAQ,IAAOruL,CAChD,CACJ,CAEJ,CACD,OAAO0tL,C,CAGXQ,WAAWH,EAA2BC,EAAoBC,GAEtD,MAAMQ,gBAAkB,CAACt+K,EAAWgoJ,EAAiBh4K,KACjD4tM,EAAkB,EAAJ59K,EAAQgoJ,GAAWh4K,CAAK,EAG1C,IAAIoK,EAAQrI,KAAKqI,MAGbmkM,EAAgBV,IAChBW,EAAgBX,IAChBY,EAAgBZ,IAChBa,EAAgBb,IAEpB,GAAIzjM,EAAQ,GAAKA,EAAQ,MACrBrI,KAAK4sM,eAAef,EAAeC,EAAMU,EAAeC,EAAeC,EAAeC,QAI1F,GAAqB,GAAjBH,GAAuC,GAAjBC,GAAsC,IAAhBC,EAC5C1sM,KAAK4sM,eAAef,EAAeC,EAAMU,EAAeC,EAAeC,EAAeC,OAD1F,EAKKD,GAAiB,EAAIC,IAAkBtkM,GACxC0jM,IAEJ,IAAK,IAAIttM,EAAI,EAAGA,EAAI,EAAGA,IACnB,IAAK,IAAIiB,EAAI,EAAGA,EAAI2I,GAAQ,CACxB,IAAIkE,EAAOu/L,IACX,GAAIv/L,EAAO,IAAK,CACZA,GAAQ,IACR,IAAI0nC,EAAM63J,IAIV,IAHIpsM,EAAI6M,EAAOlE,GACX0jM,IAEGx/L,KACHggM,gBAAgB7sM,IAAKjB,EAAGw1C,EAE/B,MAKG,IAHIv0C,EAAI6M,EAAOlE,GACX0jM,IAEGx/L,KAAQ,CAEXggM,gBAAgB7sM,IAAKjB,EADXqtM,IAEb,CAER,CA3BJ,C,CAgCLc,eAAef,EAA2BC,EAAoBzhL,EAAWC,EAAWzmB,EAAWgd,GAE3F,IAAIgsL,EAAS,EAETruM,EAAMwB,KAAKqI,MAEfwjM,EAAc,GAAKxhL,EACnBwhL,EAAc,GAAKvhL,EACnBuhL,EAAc,GAAKhoM,EACnBgoM,EAAc,GAAKhrL,EAEnB,IAAK,IAAIoN,EAAI,EAAGA,EAAIzvB,EAAKyvB,IAAK,CAC1B,IAAIu+K,EAAgBV,IAChBW,EAAgBX,IAChBY,EAAgBZ,IAChBa,EAAgBb,IAEhBgB,EAAgB,EAAJ7+K,EAMhB,GALA49K,EAAciB,GAAaN,EAC3BX,EAAciB,EAAY,GAAKL,EAC/BZ,EAAciB,EAAY,GAAKJ,EAC/Bb,EAAciB,EAAY,GAAKH,EAEV,GAAjBH,GAAuC,GAAjBC,GAAuC,GAAjBC,EAAoB,CAChE,IAAIK,EAAYD,EAAY,EAC5B,IAAK,IAAIruM,EAAIkuM,GAAiBE,EAAQpuM,EAAI,EAAGA,IACzCotM,EAAciB,GAAajB,EAAckB,GACzClB,EAAciB,EAAY,GAAKjB,EAAckB,EAAY,GACzDlB,EAAciB,EAAY,GAAKjB,EAAckB,EAAY,GACzDlB,EAAciB,EAAY,GAAKjB,EAAckB,EAAY,GAG7DF,GAAU,CACb,MAGGA,EAAS,CAEhB,C,CAKLG,YAAYj5J,EAAck5J,GACtB,IAAInvL,EAAI,EACK,GAATmvL,EAAIh/K,EACJ8lB,EAAI70C,EAAI60C,EAAI50C,EAAI40C,EAAI5T,EAAI,GAGxBriB,EAAIwuL,MAAM,EAAKW,EAAIh/K,EAAC,KAEpB8lB,EAAI70C,EAAK+tM,EAAK,EAAInvL,EAClBi2B,EAAI50C,EAAK8tM,EAAK,EAAInvL,EAClBi2B,EAAI5T,EAAK8sK,EAAK,EAAInvL,E,EAQ9B,SAASwuL,MAAMruM,EAAe2tM,GAC1B,OAAO3tM,EAAQV,KAAKgtB,IAAI,EAAGqhL,EAC/B,CCxbA,IAAIsB,GDWO1C,eAAU2C,WAAW,aCoLhC,MAAMC,GAA0C,CAAE/nL,kBAAkB,GAC9DgoL,GAA4C,CAAC,KAAM,KAAMrjM,gBAAcgN,UAAU,GAAO,GAAO,GAsDrG,MAAMs2L,GAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,YACjDC,GAAe,CAAC,MAAO,QAE7BzyM,OAAOgqM,eAAe,CAAC,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,mBAAoByI,MAAiBD,IAvDxG,MACIE,UAAUvmF,EAAiBwmF,GACvB,IAAKA,EACD,OAAO,KAEX,IAAI11K,EAAekvF,EAAKO,aAqBxB,OApBIzvF,GACAA,EAAIhyB,MAAM0nM,GACV11K,EAAIrkB,UAAW,EACfqkB,EAAI2D,UAAkB+xK,EAAO/xK,UAC7B3D,EAAI4tK,UAAkB8H,EAAO9H,UAC7B5tK,EAAI5mB,MAAM,UACN4mB,EAAIuD,YACJvD,EAAIuD,WAAW1wB,SAAQsxD,IACnBA,EAAE/qD,MAAM,UACR+qD,EAAExgC,UAAY3D,EAAI2D,UAClBwgC,EAAEypI,UAAY5tK,EAAI4tK,SAAS,MAKnC5tK,EAAM,IAAIR,QAAQk2K,GAClB11K,EAAI2D,UAAkB+xK,EAAO/xK,UAC7B3D,EAAI4tK,UAAkB8H,EAAO9H,WAG1B5tK,C,CAGX9P,KAAKg/F,GACD,IAAIwmF,EAAmBxmF,EAAK/rH,OAAOoqG,OAAO2hB,EAAK9yG,IAAKrZ,OAAOotB,WAC3D,IAAKulL,GAASA,EAAM/5L,SAAU,CAC1B,IAAIS,EAAgB,CAAEA,IAAK8yG,EAAK9yG,IAAK5I,KAAMzQ,OAAOotB,WAWlD,OATK++F,EAAK5L,QAAQn1F,eAEuC,MAAhD+gG,EAAK5L,QAAQn1F,eAAeb,mBACjClR,EAAI+R,eAAiBrR,OAAOs9B,OAAO,GAAIi7J,GAAkBnmF,EAAK5L,QAAQn1F,iBAFtE/R,EAAI+R,eAAiBknL,GAIpBnmF,EAAK5L,QAAQl1F,gBAE0B,MAAnC8gG,EAAK5L,QAAQl1F,gBAAgB,KAClChS,EAAIgS,gBAAkBtR,OAAOs9B,OAAO,GAAIk7J,GAAmBpmF,EAAK5L,QAAQl1F,kBAFxEhS,EAAIgS,gBAAkBknL,GAGnBpmF,EAAK/rH,OAAO+sB,KAAK9T,EAAK8yG,EAAK5L,QAAS4L,EAAK5Z,SAAS4O,kBAAkB7iF,MAAKq0K,GACrEztM,KAAKwtM,UAAUvmF,EAAMwmF,IAEnC,CAEG,OAAOv0K,QAAQC,QAAQn5B,KAAKwtM,UAAUvmF,EAAMwmF,G,GAOmF3yM,OAAO0vH,OAClJ1vH,OAAOgqM,eAAe,GAxPtB,MACIvoM,cACS2wM,KACDA,GAAoB,CAChB,mBAAoB/nL,UAAUQ,aAC9B,mBAAoBR,UAAUS,aAC9B,kBAAmBT,UAAUM,YAC7B,oBAAqBN,UAAUa,e,CAK3CiC,KAAKg/F,GACD,IAAsC,GAAlCA,EAAK9yG,IAAIjW,QAAQ,aAAoB,CACrC,IAAI65B,EAAMm1K,GAAkBxvM,MAAMgwM,YAAYzmF,EAAK9yG,MACnD,GAAI4jB,EACA,OAAOmB,QAAQC,QAAQpB,EAC9B,CAED,IAAI0hB,EACJ,OAAKwtE,EAAK9yG,IAAIwoB,WAAW,WACrB8c,EAAOvd,QAAQU,KAAKP,QAAQ4qF,EAAK9yG,KAC5BslC,IAAQl+C,QAAQG,WAOlBsE,KAAK2tM,MAAM1mF,EAAMxtE,GANTvd,QAAQU,KAAKI,QAAQiqF,EAAK9yG,IAAK8yG,EAAK7yG,MAAMglB,MAAKqgB,GAC3Cz5C,KAAK2tM,MAAM1mF,EAAMxtE,I,CAQ9Bk0J,MAAM1mF,EAAiBxtE,G,QAC7B,IAAItzB,EACAD,EACA1mB,EAAMynH,EAAKznH,IACX2U,EAAM8yG,EAAK9yG,IACf,GAAIslC,EAAM,CACN,IAAI7B,EAAW58C,QAAQ48C,SACnBg2J,GAA0B,QAAdlrM,EAAA+2C,EAAKo0J,iBAAS,IAAAnrM,OAAA,EAAAA,EAAGk1C,KAAa,EAC1Ck2J,EAAWr0J,EAAKlX,MAAMqrK,GACtBE,EAAS5sK,OACT/sB,EAAM+nB,QAAQU,KAAKK,eAAe9oB,EAAK8yG,EAAK7yG,KAAM05L,EAAS5sK,KAAM4sK,EAAStuM,KAC1EA,EAAMsuM,EAAStuM,KAGnB2mB,EAAkB,CAAC,EAAG,EAAsB,QAAnBnjB,EAAA8qM,EAAS54L,cAAU,IAAAlS,IAAA,EAAGy2C,EAAK9jC,OAAQ8jC,EAAKs0J,UAAWt0J,EAAKl2B,MACjF2C,EAAiB,CACblQ,UAAWyjC,EAAKm/D,SAChB1iG,UAAWujC,EAAKm/D,SAChB7iG,WAAY0jC,EAAK1jC,WACjBD,WAAY2jC,EAAK3jC,WACjBuP,mBAAoBo0B,EAAKxyB,IACzB1R,gBAAiBkkC,EAAKlkC,gBAE7B,MAEG4Q,EAAkB8gG,EAAK5L,QAAQl1F,gBAC/BD,EAAiB+gG,EAAK5L,QAAQn1F,eAGlC,IAAI5C,GAA8C,GAAnCgqL,GAAkBpvM,QAAQsB,GAAaA,EAAM,KAC5D,GAAgB,MAAZ8jB,EACA,OAAO2jG,EAAK/rH,OAAOo/G,MAAMnmG,EAAK,cAAe8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,IAC5F,IAAKA,EACD,OAAO,KAEX,IAAI61B,EACJ,OAAQzU,GACJ,IAAK,MACDyU,EAAM5S,UAAU6oL,UAAU9rM,EAAMgkB,EAAgBC,GAChD,MAEJ,IAAK,MACD,IAAI0B,EAAUxE,eAAeyE,kBAAkB5lB,GAC/C,GAAI2lB,EAAQpS,WAAawN,mBAAiB+B,KAAM,CAE5C,IAAIpoB,EAAM7F,WAAWM,SAAS,eAC9B,IAAIuF,EAMA,OAAO,KANF,CACL,IAAI0lC,EAAK,IAAI1lC,EAAIirB,EAAQxf,MAAOwf,EAAQ3S,OAAQ2S,EAAQhS,YAAc,EAAGgS,EAAQtE,MACjF+e,EAAGva,WAAWF,GACdkQ,EAAMuK,CACT,CAGJ,MACQza,EAAQpS,WAAawN,mBAAiB6B,QAC3CiT,EAAM5S,UAAU8oL,UAAU/rM,EAAMgkB,EAAgBC,IAEpD,MACJ,IAAK,MACD4R,EAAM5S,UAAU+oL,UAAUhsM,EAAMgkB,EAAgBC,GAChD,MAEJ,IAAK,MACD4R,EAAMyyK,eAAe2D,iBAAiBjsM,EAAMgkB,EAAgBC,GAC5D,MAEJ,IAAK,WACD4R,EAAM5S,UAAUipL,4BAA4BlsM,EAAMgkB,EAAgBC,GAI1E,IAAIqhG,EAA0BP,EAAKO,aAYnC,OAXIA,GAAgB3yG,OAAOC,eAAe0yG,IAAiB3yG,OAAOC,eAAeijB,KAC7EA,EAAM/3B,KAAK4lI,KAAKpe,EAAczvF,IAE9B7R,GAAkBA,EAAe3Q,kBACjCwiB,EAAIxiB,gBAAkB2Q,EAAe3Q,iBAErCkkC,IACM1hB,EAAK2D,UAAY+d,EAAKouC,SACtB9vD,EAAK4tK,UAAYlsJ,EAAKmsJ,UAGzB7tK,CAAG,IAGb,CACD,IAAIsjF,EAAU4L,EAAK5L,QAInB,OAHIA,EAAQ2K,iBAAqB9/F,GAAmBA,EAAeb,mBAC/Dg2F,EAAUxmG,OAAOs9B,OAAO,CAAEqyE,oBAAqB,CAAEn/F,iBAAkB,SAAYg2F,IAE5E4L,EAAK/rH,OAAOo/G,MAAMnmG,EAAK,QAAS8yG,EAAK5Z,SAAS4O,iBAAkBZ,GAASjiF,MAAK+yH,IACjF,IAAKA,EACD,OAAO,KAEX,IAAIp0H,EAAmB5S,UAAUkpL,YAAYliD,EAAKjmI,EAAgBC,GAC9DqhG,EAA0BP,EAAKO,aASnC,OARIA,GAAgB3yG,OAAOC,eAAe0yG,IAAiB3yG,OAAOC,eAAeijB,KAC7EA,EAAM/3B,KAAK4lI,KAAKpe,EAAczvF,IAE9B0hB,IACM1hB,EAAK2D,UAAY+d,EAAKouC,SACtB9vD,EAAK4tK,UAAYlsJ,EAAKmsJ,UAGzB7tK,CAAG,GAEjB,C,CAGG6tG,KAAKpe,EAA2BzvF,GAMpC,OALAyvF,EAAa5xG,SAAWmiB,EAAIniB,SAC5B4xG,EAAan/G,MAAQ0vB,EAAI1vB,MACzBm/G,EAAal/G,OAASyvB,EAAIzvB,OAC1Bk/G,EAAa9zG,UAAW,SACjBvB,SAASO,gBAAgBqlB,EAAIn3B,IAC7B4mH,C,GAoG4B1sH,OAAOotB,WAClDptB,OAAOgqM,eAAe,CAAC,iBAjGvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,OAAQ8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,IAC1F,IAAKA,EACD,OAAO,KAEX,IAAI8rB,EAAoBi5F,EAAKO,aAiB7B,OAhBIx5F,EACAA,EAAGm2D,SAASjiF,EAAKmG,MAAOnG,EAAKoG,OAAQpG,EAAK8gF,YAAa9gF,EAAK+gF,YACxD/gF,EAAKwmB,eAAgBxmB,EAAKghF,aAAchhF,EAAKihF,qBAAsBjhF,EAAKqhB,MAE5EyK,EAAK,IAAI+0D,cAAc7gF,EAAKmG,MAAOnG,EAAKoG,OAAQpG,EAAK8gF,YAAa9gF,EAAK+gF,YACnE/gF,EAAKwmB,eAAgBxmB,EAAKghF,aAAchhF,EAAKihF,qBAAsBjhF,EAAKqhB,MAE5E,MAAQrhB,EAAK4T,aACbkY,EAAGlY,WAAa5T,EAAK4T,YACrB,MAAQ5T,EAAK6T,aACbiY,EAAGjY,WAAa7T,EAAK6T,YACrB,MAAQ7T,EAAK8T,YACbgY,EAAGhY,UAAY9T,EAAK8T,WACpB,MAAQ9T,EAAKgU,YACb8X,EAAG9X,UAAYhU,EAAKgU,WAEjB8X,CAAE,G,GA0EyClzB,OAAOotB,WACrEptB,OAAOgqM,eAAeyI,GArEtB,MACItlL,KAAKg/F,GACD,IAAIrqF,EAAqBqqF,EAAKO,cAAgB,IAAI8zD,aAElD,OADA1+I,EAAK79B,OAASkoH,EAAK9yG,IACZ+kB,QAAQC,QAAQyD,E,GAiEyB9hC,OAAOotB,WChQ/DptB,OAAOgqM,eAAe,CAAC,MAVvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,cAAe8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GAC5FA,EAGEorL,gBAAgBrrL,OAAOC,GAFnB,M,ICyCvBpH,OAAOgqM,eAAe,CAAC,OA3CvB,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,OAAQ8yG,EAAK5Z,SAAS4O,eAAe,IAAMgL,EAAK5L,SAASjiF,MAAKl3B,IAC7F,IAAIkP,EAAM,IAAI+hL,qBAAqBjxL,GACnC,GAAIkP,EAAIlP,MAAQkP,EAAIlP,KAAK6+K,iBAAkB,CACvC,IAAID,EAAS1vK,EAAIlP,KAAK6+K,iBAClB36D,EAAuB,GAC3B,IAAK,IAAI3nH,EAAIqiL,EAAO7kL,OAAS,EAAGwC,GAAK,EAAGA,IAAK,CACzC,IAAIihL,EAASoB,EAAOriL,GAAGihL,OACvB1/K,KAAKsuM,WAAW5uB,EAAQt5D,EAAUa,EAErC,CACD,OAAO/tF,QAAQotF,IAAIF,GAAUhtF,MAAK,IAAMhoB,GAC3C,CAEG,OAAOA,CAAG,G,CAKtBk9L,WAAW5uB,EAA6Bt5D,EAAsBa,GAC1D,IAAItpF,EAAWN,IAAII,QAAQwpF,EAAK9yG,KAChC,IAAK,IAAIzU,EAAIggL,EAAOzjL,OAAS,EAAGyD,GAAK,EAAGA,IAAK,CACzC,GAAIggL,EAAOhgL,GAAGw6F,MAAQwlF,EAAOhgL,GAAGw6F,KAAKonF,OAAQ,CACzC,IAAIntK,EAAMkpB,IAAIopK,gBAAgB/mB,EAAOhgL,GAAGw6F,KAAKonF,QACxCntK,EAAIwoB,WAAW,YAChBxoB,EAAMkpB,IAAI9e,KAAKof,EAAUxpB,IAC7BiyG,EAAS/pH,KAAK4qH,EAAK/rH,OAAO+sB,KAAK9T,GAAKilB,MAAK7lB,IACrCmsK,EAAOhgL,GAAGw6F,KAAO3mF,CAAG,IAM3B,CAEGmsK,EAAOhgL,GAAGggL,QACV1/K,KAAKsuM,WAAW5uB,EAAOhgL,GAAGggL,OAAQt5D,EAAUa,EAEnD,C,UC1CIsnF,WACTtmL,KAAKg/F,GACD,OAAO/tF,QAAQC,QAAQ,K,EAI/Br+B,OAAOgqM,eAAe,CAAC,YAAayJ,YCcpCzzM,OAAOgqM,eAAe,CAAC,OAlBvB,MACI78K,KAAKg/F,GACD,IAAIunF,EAAS9wM,MAAM0/B,qBAAqB6pF,EAAK9yG,IAAK,OAClD,OAAO+kB,QAAQotF,IAAI,CACfW,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,MAAO8yG,EAAK5Z,SAAS4O,eAAe,IAAMgL,EAAK5L,SAC3E4L,EAAK/rH,OAAO+sB,KAAKumL,EAAQvnF,EAAK5L,QAAS4L,EAAK5Z,SAAS4O,eAAe,OACrE7iF,MAAK,EAAE67F,EAAKl9F,MACX,IAAKk9F,IAAQl9F,EACT,OAAO,KAEX,IAAIwlB,EAAO,IAAIk3E,WAGf,OAFAl3E,EAAKy3E,UAAUC,EAAKl9F,GAEbwlB,CAAI,G,GAK0BziD,OAAO6vH,MCfxD,MAAM8jF,GAAa,cAgDnB3zM,OAAOgqM,eAAe,CAAC,MAAO,OAAQ,QAAS,OA9C/C,MAEI78K,KAAKg/F,GACD,IAAIynF,EAAWhxM,MAAM0/B,qBAAqB1/B,MAAMgwM,YAAYzmF,EAAK9yG,KAAM,IACvE,GAAI5Y,QAAQI,QACR,OAAOsrH,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,eAAeilB,MAAKl3B,IAC/CA,GACCtG,OAAgC,gBAAE+yM,sBAAsBD,EAAUxsM,GAChE,CAAE86H,OAAQ0xE,MAGpB,GAAK9yM,OAAegzM,SAAU,CAC/B,IAAI9zC,EAAgB,IAAKl/J,OAAegzM,SAASF,EAAU,QAAUrxK,IAAI4qF,cAAc5qF,IAAIE,UAAU0pF,EAAK9yG,MAAQ,MAElH,OADCqjC,SAAiBq3J,MAAM/rM,IAAIg4J,GACrBA,EAAS7yI,OAAOmR,MAAK,IACjB0hI,GAEd,CACI,CACD,IAAIg0C,EAAU,QAAUJ,EACpBK,EAAW/zM,QAAQsiD,YAAYmxJ,GAAYK,GAASzmM,MAEpDy0J,EAAiB9hK,QAAQ0+C,cAAc,SAK3C,OAJAojH,EAAUvxJ,KAAO,WACjBisC,SAAS0B,KAAKS,YAAYmjH,GAC1BA,EAAUkyC,YAAc,6BAA+BN,EAAW,eAAiBrxK,IAAI4qF,cAAc5qF,IAAIE,UAAU0pF,EAAK9yG,MAAQ,OAEzH,IAAI+kB,SAASC,IAChB,IAAI81K,cAAgB,KACZj0M,QAAQsiD,YAAYmxJ,GAAYK,GAASzmM,OAAS0mM,GAClD/mL,UAAU,EAEdA,SAAW,KACXntB,MAAMO,YAAYuP,MAAM3K,KAAMivM,eAC9Bp0M,MAAMO,YAAYuP,MAAM3K,KAAMgoB,UAE9BmR,EAAQ,CAAE6jG,OAAQ0xE,GAAW,EAGjC7zM,MAAMO,YAAYqP,KAAK,IAAOzK,KAAMgoB,UACpCntB,MAAMO,YAAY+iD,KAAK,GAAIn+C,KAAMivM,cAAc,GAEtD,C,GAI6Dn0M,OAAO8vH,KCzC7E9vH,OAAOgqM,eAAe,CAAC,MAAO,MAAO,OAXrC,MACI78K,KAAKg/F,GACD,OAAOA,EAAK/rH,OAAOo/G,MAAM2M,EAAK9yG,IAAK,cAAe8yG,EAAK5Z,SAAS4O,iBAAkBgL,EAAK5L,SAASjiF,MAAKl3B,GAC5FA,EAGEs0K,cAAc/7I,IAAIy0K,gBAAgBhtM,GAF9B,M,GAOsCpH,OAAO2vH,OCsCpE,IAAI3mH,GAAI/M,WAAWwnG,SAEnBz6F,GAAE,SAAU+Q,QACZ/Q,GAAE,OAAQkiG,MACVliG,GAAE,SAAU04E,QACZ14E,GAAE,SAAU06J,QACZ16J,GAAE,OAAQyzH,MACVzzH,GAAE,QAAS61H,OACX71H,GAAE,gBAAiB60G,eACnB70G,GAAE,YAAaovH,WACfpvH,GAAE,iBAAkB0oH,gBACpB1oH,GAAE,kBAAmB2xH,iBACrB3xH,GAAE,YAAay2K,WACfz2K,GAAE,YAAaw5K,WAEfx5K,GAAE,QAASw+J,OACXx+J,GAAE,QAASmoK,OACXnoK,GAAE,YAAa/D,WACf+D,GAAE,SAAUu/L,QACZv/L,GAAE,aAAc2wH,YAChB3wH,GAAE,aAAc6uK,YAChB7uK,GAAE,cAAe2uC,aACjB3uC,GAAE,aAAcyvK,YAChBzvK,GAAE,QAASgE,OACXhE,GAAE,YAAasE,WACftE,GAAE,UAAWyzB,SACbzzB,GAAE,YAAaqhB,WAEfrhB,GAAE,SAAU68J,QAEZ78J,GAAE,aAAcw+K,YAChBx+K,GAAE,4BAA6B86K,2BAC/B96K,GAAE,kBAAmB2kL,iBACrB3kL,GAAE,kBAAmBwpL,iBACrBxpL,GAAE,uBAAwBqvL,sBAC1BrvL,GAAE,kBAAmB8tL,iBACrB9tL,GAAE,uBAAwB+tL,sBAE1B/tL,GAAE,UAAWsjD,SACbtjD,GAAE,UAAWujD,SACbvjD,GAAE,UAAWwjD,SACbxjD,GAAE,aAAc0yL,YAChB1yL,GAAE,QAASsmB,OACXtmB,GAAE,SAAUH,QACZG,GAAE,YAAas8L,WACft8L,GAAE,YAAaqxL,W,MC9FFga,aAaTn4M,kBAOI,OANKm4M,aAAaC,aACdD,aAAaC,WAAaC,QAC1BA,QAAQC,QAEZH,aAAaI,MAAQJ,aAAaC,WAAWG,MAC7CJ,aAAaK,QAAUL,aAAaC,WAAWI,QACxCL,aAAaK,O,CAQxBx4M,eAAeoV,EAAanO,GACxBkxM,aAAaC,WAAWK,QAAQrjM,EAAKnO,E,CAQzCjH,eAAeoV,GACX,OAAO+iM,aAAaC,WAAW9xG,QAAQlxF,E,CAQ3CpV,eAAeoV,EAAanO,GACxBkxM,aAAaC,WAAWM,QAAQtjM,EAAKnO,E,CAQzCjH,eAAeoV,GACX,OAAO+iM,aAAaC,WAAWO,QAAQvjM,E,CAO3CpV,kBAAkBoV,GACd+iM,aAAaC,WAAWQ,WAAWxjM,E,CAMvCpV,eACIm4M,aAAaC,WAAWzkM,O,EA5DrBwkM,aAAOK,SAAY,EAkE9B,MAAMH,QAWFr4M,cACI,IAAMq4M,QAAQG,SAAU,EAAMH,QAAQE,MAAQ3zM,OAAOi0M,aAAcR,QAAQI,QAAQ,OAAQ,KAAMJ,QAAQO,WAAW,OAAU,CAAC,MAAO/uL,GAAKwuL,QAAQG,SAAU,CAAQ,CAAMH,QAAQG,SAASl4M,QAAQovB,IAAI,0D,CAQ5M1vB,eAAeoV,EAAanO,GACxB,IACIoxM,QAAQG,SAAWH,QAAQE,MAAME,QAAQrjM,EAAKnO,EACjD,CAAC,MAAO4iB,GACLvpB,QAAQC,KAAK,0BAA2BspB,EAC3C,C,CAQL7pB,eAAeoV,GACX,OAAOijM,QAAQG,QAAUH,QAAQE,MAAMjyG,QAAQlxF,GAAO,I,CAQ1DpV,eAAeoV,EAAanO,GACxB,IACIoxM,QAAQG,SAAWH,QAAQE,MAAME,QAAQrjM,EAAK81G,KAAKC,UAAUlkH,GAChE,CAAC,MAAO4iB,GACLvpB,QAAQC,KAAK,0BAA2BspB,EAC3C,C,CAQL7pB,eAAeoV,GACX,IAEI,OADU81G,KAAKrqC,MAAMw3H,QAAQG,QAAUH,QAAQE,MAAMjyG,QAAQlxF,GAAO,KAEvE,OAAMuO,GACH,OAAO00L,QAAQE,MAAMjyG,QAAQlxF,EAChC,C,CAOLpV,kBAAkBoV,GACdijM,QAAQG,SAAWH,QAAQE,MAAMK,WAAWxjM,E,CAMhDpV,eACIq4M,QAAQG,SAAWH,QAAQE,MAAM5kM,O,EAnE9B0kM,QAAOG,SAAY,ECnFxB,MAAOM,eAAe7kK,QAOxB1uC,YAAYgP,GACR8G,MAAM4jB,gBAAgBkB,SAAU,GALpCn3B,KAAO0sB,QAAW,IAClB1sB,KAAO2sB,QAAW,EAKd,IAAIojL,EAAgB,EAAIl3M,MAAMI,SAC9B,MAAM+2M,EAAUlmM,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAC3DxnC,KAAKm0E,SAAW,CAAC,EAAG67H,GAAS,EAAOD,EAAO,GAC3C/vM,KAAKiwM,SAAW,CAAC,EAAGD,GAAS,EAAOD,EAAO,EAAIl3M,MAAMI,UACrD+G,KAAKnC,MAAQ,CAAC,EAAGmyM,GAAS,EAAOD,EAAO,EAAIl3M,MAAMI,S,EChBpD,MAAOi3M,oBAAoBjlK,QAC7B1uC,YAAY+N,GACR+H,MAAM4jB,gBAAgBK,UAAU,GAChCt2B,KAAKssC,gBAAkB,CAAC,WAAY,EAAG,cAAe,E,ECHxD,MAAO6jK,kBAAkBllK,QAM3B1uC,YAAY2uC,EAAgB,GACxB74B,MAAM4jB,gBAAgB/N,UAAWgjB,GALrClrC,KAAQg4D,SAAW,EACnBh4D,KAAQuyK,SAAU,KAClBvyK,KAAQwqE,SAAiB,KACzBxqE,KAAUyqE,WAAiB,KAGvBzqE,KAAKssC,gBAAkB,CAAC,QAAS,EAAG,cAAe,EAAG,cAAe,E,CAKzE3hC,QACI3K,KAAKumB,QAAU,KACfvmB,KAAK8oC,OAAS,KACd9oC,KAAKmrC,QAAQ/V,OAASp1B,KAAKkrC,K,QCftBklK,MAgBEC,kBAAOC,GACdF,MAAMl6I,OAAOm6I,OAASC,C,CAGfD,oBACP,OAAOD,MAAMl6I,OAAOm6I,M,CAIxBr5M,kBACIo5M,MAAMl6I,OAASl7D,QAAQw8C,SAAS0B,KAAKC,K,CAMzCniD,cACwB,QAAhBo5M,MAAMC,SACND,MAAMG,WAAaH,MAAMC,OACzBD,MAAMC,OAAS,O,CAOvBr5M,cACwB,QAAhBo5M,MAAMC,SACFD,MAAMG,WACNH,MAAMC,OAASD,MAAMG,WAErBH,MAAMC,OAAS,O,ECzCzB,MAAOG,uBAAuBnhJ,OAuBhC9yD,YAAYk0M,GACRp+L,MAAMm+L,eAAe1/I,aAAuB,EAAT2/I,EAAaD,eAAe1/I,aAAc,GAC7E9wD,KAAK8vD,UAAW,EAChB9vD,KAAKqwD,cAAcmgJ,eAAez/I,eAClC/wD,KAAKiwD,aAAawgJ,GAClBzwM,KAAK6vD,SAAW4gJ,EAEXD,eAAe3hJ,oBAChB2hJ,eAAe3hJ,kBAAoB,IAAI3G,kBAAkB,IAAK,CAC1D,IAAIiB,cAAc,EAAGrD,oBAAoBwB,QAAS,GAClD,IAAI6B,cAAc,GAAIrD,oBAAoBuB,QAAS,GACnD,IAAI8B,cAAc,GAAIrD,oBAAoBuB,QAAS,GACnD,IAAI8B,cAAc,GAAIrD,oBAAoBwB,QAAS,GACnD,IAAI6B,cAAc,GAAIrD,oBAAoBwB,QAAS,GACnD,IAAI6B,cAAc,GAAIrD,oBAAoBuB,QAAS,GACnD,IAAI8B,cAAc,GAAIrD,oBAAoBsB,QAAS,GACnD,IAAI+B,cAAc,GAAIrD,oBAAoBwB,QAAS,GACnD,IAAI6B,cAAc,IAAKrD,oBAAoBqB,OAAQ,GACnD,IAAIgC,cAAc,IAAKrD,oBAAoBqB,OAAQ,MAI3DnnD,KAAK+vD,IAAIlB,kBAAoB2hJ,eAAe3hJ,iB,CAxChD73D,kBACI,MAAMg5M,EAAUlmM,OAAO+Y,aAAaojC,UAAUlQ,eAAavO,OAC3DgpK,eAAez/I,cAAgB,CAC3Bi/I,EAAS,EAAG,EACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,GACZA,EAAS,EAAG,IACZA,EAAS,EAAG,I,CA+BpBU,kBAAkBD,GACdzwM,KAAK+vD,IAAIzB,SAASz0C,cAAuB,EAAT42L,EAAaD,eAAe1/I,cAAc,GAC1E9wD,KAAKiwD,aAAawgJ,E,CAOtBz5M,gBAAgBy5M,GAEZ,GAAID,eAAep/I,MAAMn1D,OAAQ,CAC7B,IAAImV,EAAsBo/L,eAAep/I,MAAMn0D,MAE/C,OADAmU,EAAIs/L,kBAAkBD,GACfr/L,CACV,CACD,OAAO,IAAIo/L,eAAeC,E,CAQ9B//I,cACI1wD,KAAK+vD,IAAIzB,SAAS/B,cAAc,GAChCvsD,KAAK0vD,QAAU,EACf1vD,KAAK2vD,SAAW,EAEhB6gJ,eAAep/I,MAAM/0D,KAAK2D,K,CAO9BmD,UACInD,KAAKgwD,IAAI7sD,UACTnD,KAAK+vD,IAAI5sD,UACTnD,KAAK+vD,IAAIZ,c,EAtFNqhJ,eAAY1/I,aAAW,IAEf0/I,eAAKp/I,MAAU,GACvBo/I,eAAiB3hJ,kBAAsB,K,MCRrC8hJ,YASZp0M,cAPAyD,KAAKy4D,MAAkB,GAEvBz4D,KAAOsZ,QAAW,C,CAWlBs3L,yBAAyBnsK,GAGxB,IAFA,IAAIosK,EAA2BpsK,EAAOg0B,MAClChkC,EAAsBz0B,KAAKy4D,MACtBh6D,EAAYuB,KAAKsZ,QAAU,EAAG7a,GAAK,EAAGA,IAAK,CACnD,IAAIR,EAAgBw2B,EAAKh2B,GAAKoyM,EAAUpyM,GAC3B,GAATR,GAAcQ,GAAKuB,KAAKsZ,QAAU,EACrCtZ,KAAKsZ,UAELmb,EAAKh2B,GAAKR,CACX,C,CAOF6E,IAAI2hC,GACH,IAAIl6B,EAAgBk6B,EAAOu+D,OACvBjwF,EAAexI,EAAQ,EACvBkqB,EAAsBz0B,KAAKy4D,MAC3Bq4I,EAAoB9wM,KAAKsZ,QAC7B,GAAIw3L,EAAY/9L,EAAM,CAErB,IADC0hB,EAAKx4B,OAAS8W,IAAU0hB,EAAKx4B,OAAS8W,GAChC+9L,EAAYvmM,EAAOumM,IACzBr8K,EAAKq8K,GAAa,EACnBr8K,EAAKlqB,GAASk6B,EAAOrP,OACrBp1B,KAAKsZ,QAAUvG,CACf,MAEA0hB,EAAKlqB,IAAUk6B,EAAOrP,M,CAQxBnyB,OAAOwhC,GACN,IAAIl6B,EAAgBk6B,EAAOu+D,OACvBvuE,EAAsBz0B,KAAKy4D,MAC3BkvC,EAAmB3nG,KAAKsZ,QAAU,EACtC,KAAI/O,EAAQo9F,GAAZ,CAEA,IAAIopG,EAAWt8K,EAAKlqB,IAAUk6B,EAAOrP,OACjC7qB,GAASo9F,GAAyB,IAAbopG,EACxB/wM,KAAKsZ,UAELmb,EAAKlqB,GAASwmM,CALd,C,CAYFC,eAAevsK,GACd,IAAIwsK,EAAyBxsK,EAAOg0B,MAChC1lD,EAAe0xB,EAAOnrB,QACtBmb,EAAsBz0B,KAAKy4D,MAC3Bq4I,EAAoB9wM,KAAKsZ,QAC7B,GAAIw3L,EAAY/9L,EAAM,CACrB0hB,EAAKx4B,OAAS8W,EACd,IAAK,IAAItU,EAAY,EAAGA,EAAIqyM,EAAWryM,IACtCg2B,EAAKh2B,IAAMwyM,EAAQxyM,GACpB,KAAOA,EAAIsU,EAAMtU,IAChBg2B,EAAKh2B,GAAKwyM,EAAQxyM,GACnBuB,KAAKsZ,QAAUvG,CACf,MACA,IAAStU,EAAY,EAAGA,EAAIsU,EAAMtU,IACjCg2B,EAAKh2B,IAAMwyM,EAAQxyM,E,CAWtByyM,kBAAkBzsK,GAKjB,IAJA,IAAI0sK,EAA4B1sK,EAAOg0B,MACnChkC,EAAsBz0B,KAAKy4D,MAC3BkvC,EAAmB3nG,KAAKsZ,QAAU,EAClC7a,EAAIlB,KAAKwL,IAAI07B,EAAOnrB,QAASquF,GAC1BlpG,GAAK,EAAGA,IAAK,CACnB,IAAIsyM,EAAWt8K,EAAKh2B,IAAM0yM,EAAW1yM,GACjCA,GAAKkpG,GAAyB,IAAbopG,GACpBppG,IACA3nG,KAAKsZ,WAGLmb,EAAKh2B,GAAKsyM,CAEX,C,CAQFtlM,IAAIg5B,GACH,IAAIl6B,EAAgBk6B,EAAOu+D,OAC3B,QAAIz4F,GAASvK,KAAKsZ,UAE6B,IAAvCtZ,KAAKy4D,MAAMluD,GAASk6B,EAAOrP,O,CAMpCzqB,QACC3K,KAAKsZ,QAAU,C,CAOhBwR,QAAQC,GACP,IAAIqmL,EAA4CrmL,EAC5CsmL,EAA0BD,EAAe34I,MACzChkC,EAAsBz0B,KAAKy4D,MAC3B3tD,EAAgB9K,KAAKsZ,QACzB+3L,EAASp1M,OAAS6O,EAClB,IAAK,IAAIrM,EAAY,EAAGA,EAAIqM,EAAOrM,IAClC4yM,EAAS5yM,GAAKg2B,EAAKh2B,GACpB2yM,EAAe93L,QAAUxO,C,CAO1BtD,QACC,IAAIjF,EAAoB,IAAIouM,YAE5B,OADA3wM,KAAK8qB,QAAQvoB,GACNA,C,CAGRY,iBACQnD,KAAKy4D,K,QC/JD64I,aAiBZ/0M,YAAYgO,EAAetM,GAC1B+B,KAAKgjG,OAASz4F,EACdvK,KAAKo1B,OAASn3B,C,EAbRqzM,aAAeC,gBAAoC,G,MCD9CC,cA6CTj1M,YAAYusC,EAAkB2oK,EAAwBC,EAAmBvmK,GAzCzEnrC,KAAe2xM,gBAAW,EAE1B3xM,KAAU4xM,WAAW,EAwCjB5xM,KAAKirB,SAAS6d,EAAQ2oK,EAAgBC,EAAWvmK,E,CAjC1CrC,aACP,OAAO9oC,KAAK6xM,O,CAMLJ,qBACP,OAAOzxM,KAAK2xM,e,CAMLD,gBACP,OAAO1xM,KAAK4xM,U,CAMLE,kBACP,OAAO9xM,KAAK+xM,Y,CAqBhB9mL,SAAS6d,EAAkB2oK,EAAwBC,EAAmBI,GAClE,IAAIhpK,EAqBA,KAAM,0CApBN,IAAIkpK,EAAuBlpK,EAAOmpK,eAAeR,GACjD,IAAIO,EAeA,KAAM,yDAAyDP,KAd/D,IAAIrsI,EAAmB4sI,EAAUE,QAAQR,GACzC,IAAItsI,EASA,KAAM,oDAAoDssI,KAP1D,IADA,IAAIS,EAA2B/sI,EAAKgtI,aAC3B3zM,EAAY,EAAG+G,EAAYssM,EAAY71M,OAAQwC,EAAI+G,EAAG/G,IAAK,CAChE,IAAI4zM,EAAkBP,EAAYrzM,GAClC,IAAK0zM,EAAY1mM,IAAI6mM,SAASC,gBAAgBF,IAC1C,KAAM,wCAAwCA,QAAcvpK,EAAOkpJ,2BAA2Byf,kBAA+BC,IACpI,CAab1xM,KAAK6xM,QAAU/oK,EACf9oC,KAAK2xM,gBAAkBF,EACvBzxM,KAAK4xM,WAAaF,EAClB1xM,KAAK+xM,aAAeD,C,CAQxBtnL,MAAM8iB,GACF,GAAIttC,KAAK6xM,UAAYvkK,EAAMukK,SAAW7xM,KAAK2xM,kBAAoBrkK,EAAMqkK,iBAAmB3xM,KAAK4xM,aAAetkK,EAAMskK,WAC9G,OAAO,EAEX,IAAIzmK,EAAoBnrC,KAAK+xM,aACzBS,EAAyBllK,EAAMykK,aACnC,GAAI5mK,EAAQlvC,SAAWu2M,EAAav2M,OAChC,OAAO,EACX,IAAK,IAAIwC,EAAY,EAAG+G,EAAYxF,KAAK+xM,aAAa91M,OAAQwC,EAAI+G,EAAG/G,IACjE,GAAI0sC,EAAQ1sC,KAAO+zM,EAAa/zM,GAC5B,OAAO,EAEf,OAAO,C,CASX+I,QAEI,OAD0B,IAAIgqM,cAAcxxM,KAAK6xM,QAAS7xM,KAAK2xM,gBAAiB3xM,KAAK4xM,WAAY5xM,KAAK+xM,aAAa13L,Q,QAQ9Go4L,wBAAbl2M,cAEYyD,KAAY0yM,cAAY,EAExB1yM,KAAS2yM,UAAoB,E,CAKjCC,kBACA,OAAO5yM,KAAK0yM,Y,CAMZG,mBACA,OAAO7yM,KAAK2yM,UAAU12M,M,CAQ1B6G,IAAIgwM,GACA,IAAK,IAAIr0M,EAAY,EAAG+G,EAAYxF,KAAK2yM,UAAU12M,OAAQwC,EAAI+G,EAAG/G,IAC9D,GAAIuB,KAAK2yM,UAAUl0M,GAAG+rB,MAAMsoL,GACxB,OAAO,EAIf,OAFA9yM,KAAK2yM,UAAUt2M,KAAKy2M,EAAQtrM,SAC5BxH,KAAK0yM,cAAe,GACb,C,CAQXzvM,OAAO6vM,GACH,IAAK,IAAIr0M,EAAY,EAAG+G,EAAYxF,KAAK2yM,UAAU12M,OAAQwC,EAAI+G,EAAG/G,IAC9D,GAAIuB,KAAK2yM,UAAUl0M,GAAG+rB,MAAMsoL,GAExB,OADA9yM,KAAK2yM,UAAUjoM,OAAOjM,EAAG,IAClB,EAGf,OAAO,C,CAOXs0M,UAAUD,GACN,IAAK,IAAIr0M,EAAY,EAAG+G,EAAYxF,KAAK2yM,UAAU12M,OAAQwC,EAAI+G,EAAG/G,IAC9D,GAAIuB,KAAK2yM,UAAUl0M,GAAG+rB,MAAMsoL,GACxB,OAAO,EAEf,OAAO,C,CAQXE,WAAWzoM,GACP,OAAOvK,KAAK2yM,UAAUpoM,E,CAM1BI,QACI3K,KAAK2yM,UAAU12M,OAAS,C,CAM5BipC,UACI,IAAKllC,KAAK0yM,aAAc,CAEpB,IADA,IAAIO,EAA4BjzM,KAAK2yM,UAC5Bl0M,EAAY,EAAG+G,EAAYytM,EAASh3M,OAAQwC,EAAI+G,EAAG/G,IAAK,CAC7D,IAAIq0M,EAAyBG,EAASx0M,GACtC6zM,SAASY,2BAA2BJ,EAAQjB,QAAQ7f,MAAO8gB,EAAQnB,gBAAiBmB,EAAQlB,WAAYkB,EAAQf,aACnH,CACD/xM,KAAK0yM,cAAe,CACvB,C,ECzMT,IAAYS,GCPAC,GDOAD,gEAYX,KAXAA,GAAA,aACAA,MAAA,eACAA,MAAA,iBACAA,MAAA,qBACAA,MAAA,qBACAA,MAAA,qBACAA,MAAA,iBACAA,MAAA,yBACAA,MAAA,yBACAA,MAAA,6BACAA,MAAA,oB,MA8BYE,WAyCZ92M,YAAY+2M,EAA0B,MAvC5BtzM,KAAcuzM,eAAa,KAKrCvzM,KAAQs1J,UAAY,EAEpBt1J,KAAK8qE,MAAQ,KAGb9qE,KAAAwzM,aAA4B,IAAI7C,YA8B/B3wM,KAAKuzM,eAAiBD,EACtBtzM,KAAK01H,YAEL11H,KAAKyzM,oBAAsB,IAAIl4K,IAC/Bv7B,KAAK0zM,mBAAqB,IAAIn4K,G,CAlB3Bo4K,yBACH,OAAO3zM,KAAKyzM,mB,CAGTG,wBACH,OAAO5zM,KAAK0zM,kB,CAsBbG,aAAaznM,EAAa0nM,EAA0BC,GACnD/zM,KAAKyzM,oBAAoBh5L,IAAIrO,EAAK,CAAE0nM,IAAKA,EAAKE,UAAWD,IACzDA,EAAQE,oBAAoBrpM,SAC3B,CAAC3M,EAAgC2C,KAChCZ,KAAK4zM,kBAAkBn5L,IAAI7Z,EAAIkzM,EAAI,IAGrCA,EAAII,2BAA2BH,E,CAMhCr+E,YACC11H,KAAK8qE,MAAQ,GACb9qE,KAAKm0M,eAAiB,IAAI54K,G,CAM3BpO,UACC,OAAOntB,KAAK8qE,K,CAGbyqF,eACCv1J,KAAKyzM,oBAAoB7oM,SAAQ,CAAC3M,EAAOmO,KACxCnO,EAAM61M,IAAII,2BAA2Bj2M,EAAM+1M,UAAU,IAEtDh0M,KAAKs1J,UAAW,C,CAOjB8+C,UAAU3vK,GACTzkC,KAAKwzM,aAAa1wM,IAAI2hC,E,CAOvB4vK,aAAa5vK,GACZzkC,KAAKwzM,aAAavwM,OAAOwhC,E,CAO1B6vK,UAAU7vK,GACT,OAAOzkC,KAAKwzM,aAAa/nM,IAAIg5B,E,CAM9B8vK,cACCv0M,KAAKwzM,aAAa7oM,O,CAQnBk2G,QAAQt2G,GACP,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBiqM,QAAQjqM,EAAetM,GACtB+B,KAAK8qE,MAAMvgE,GAAStM,C,CAQrBwiH,OAAOl2G,GACN,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBkqM,OAAOlqM,EAAetM,GACrB+B,KAAK8qE,MAAMvgE,GAAStM,EACpB,IAAI61M,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,GACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAKygH,OAAOl2G,G,CAShFoqM,UAAUpqM,GACT,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBqqM,UAAUrqM,EAAetM,GACxB+B,KAAK8qE,MAAMvgE,GAAStM,EACpB,IAAI61M,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAK20M,UAAUpqM,IACjFvK,KAAKs1J,UAAW,E,CASlBu/C,WAAWtqM,GACV,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBuqM,WAAWvqM,EAAetM,GACrB+B,KAAK8qE,MAAMvgE,GACdtM,EAAM6sB,QAAQ9qB,KAAK8qE,MAAMvgE,IAEzBvK,KAAK8qE,MAAMvgE,GAAStM,EAAMuJ,QAC3B,IAAIssM,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAK60M,WAAWtqM,IAClFvK,KAAKs1J,UAAW,E,CASlBy/C,WAAWxqM,GACV,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnByqM,WAAWzqM,EAAetM,GACrB+B,KAAK8qE,MAAMvgE,GACdtM,EAAM6sB,QAAQ9qB,KAAK8qE,MAAMvgE,IAEzBvK,KAAK8qE,MAAMvgE,GAAStM,EAAMuJ,QAC3B,IAAIssM,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAK+0M,WAAWxqM,IAClFvK,KAAKs1J,UAAW,E,CASlB2/C,UAAU1qM,GACT,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnB2qM,UAAU3qM,EAAetM,GACpB+B,KAAK8qE,MAAMvgE,GACdtM,EAAM6sB,QAAQ9qB,KAAK8qE,MAAMvgE,IAEzBvK,KAAK8qE,MAAMvgE,GAAStM,EAAMuJ,QAC3B,IAAIssM,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAKi1M,UAAU1qM,IACjFvK,KAAKs1J,UAAW,E,CASlB+d,SAAS9oK,GACR,OAAOvK,KAAKm0M,eAAe34K,IAAIjxB,E,CAQhCuoC,SAASvoC,EAAetM,GACvB,IAAKA,EACJ,OACD,GAAI+B,KAAK8qE,MAAMvgE,GAAQ,CACtB,IAAI4qM,EAAan1M,KAAKm0M,eAAe34K,IAAIjxB,GACzCtM,EAAM6sB,QAAQqqL,GACd,IAAIC,EAAcp1M,KAAK8qE,MAAMvgE,GAC7B6qM,EAAYl2M,EAAIkrB,MAAMO,mBAAmB1sB,EAAMosB,GAC/C+qL,EAAYj2M,EAAIirB,MAAMO,mBAAmB1sB,EAAMqsB,GAC/C8qL,EAAYj1K,EAAI/V,MAAMO,mBAAmB1sB,EAAM4F,GAC/CuxM,EAAYnnL,EAAIhwB,EAAM2F,CACtB,KACI,CACJ,IAAIwxM,EAAc,IAAI9tJ,QACtB8tJ,EAAYl2M,EAAIkrB,MAAMO,mBAAmB1sB,EAAMosB,GAC/C+qL,EAAYj2M,EAAIirB,MAAMO,mBAAmB1sB,EAAMqsB,GAC/C8qL,EAAYj1K,EAAI/V,MAAMO,mBAAmB1sB,EAAM4F,GAC/CuxM,EAAYnnL,EAAIhwB,EAAM2F,EACtB5D,KAAK8qE,MAAMvgE,GAAS6qM,EACpBp1M,KAAKm0M,eAAe15L,IAAIlQ,EAAOtM,EAAMuJ,QACrC,CACD,IAAIssM,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAKq1M,eAAe9qM,IACtFvK,KAAKs1J,UAAW,E,CASlB+/C,eAAe9qM,GACd,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnB+qM,aAAa/qM,GACZ,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBgrM,aAAahrM,EAAetM,GACvB+B,KAAK8qE,MAAMvgE,GACdtM,EAAM6sB,QAAQ9qB,KAAK8qE,MAAMvgE,IAEzBvK,KAAK8qE,MAAMvgE,GAAStM,EAAMuJ,QAE3B,IAAIssM,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAKs1M,aAAa/qM,IACpFvK,KAAKs1J,UAAW,E,CASlBznG,UAAUtjD,GACT,OAAOvK,KAAK8qE,MAAMvgE,E,CAQnBirM,UAAUjrM,EAAetM,GACxB+B,KAAK8qE,MAAMvgE,GAAStM,C,CAQrBw3M,WAAWlrM,EAAetM,GACzB,IAAIy3M,EAAyB11M,KAAK8qE,MAAMvgE,GACxC,GAAItM,EAAO,CACV,IAAI03M,EAAerE,aAAaC,gBAAgBhnM,GAC5CorM,GAAgB13M,GAASA,EAAMwY,gBAAkB,EACpDzW,KAAKo0M,UAAUuB,GAIfA,GAAgB31M,KAAKq0M,aAAasB,EAEnC,CAED31M,KAAK8qE,MAAMvgE,GAAStM,EACpBy3M,GAAaA,EAAUlhM,mBACvBvW,GAASA,EAAMsW,e,CAOhB4nF,WAAW5xF,GACV,OAAOvK,KAAK8qE,MAAMvgE,E,CAGnBqrM,eAAe33M,GACd,IAAK,IAAIQ,KAAKuB,KAAK8qE,MAClB,GAAI9qE,KAAK8qE,MAAMrsE,IAAMR,EACpB,OAAOghB,OAAOxgB,GAEhB,OAAQ,C,CASTo3M,aAAatrM,EAAetM,GAE3B,GAAIA,aAAiBmsB,MAEpB,YADApqB,KAAK8yC,SAASvoC,EAAOtM,GAEVA,GAGCA,EAAMuJ,MAClBxH,KAAK8qE,MAAMvgE,GAAStM,EAAMuJ,QAF1BxH,KAAK8qE,MAAMvgE,GAAStM,EAKrB,IAAI61M,EAAM9zM,KAAK0zM,mBAAmBl4K,IAAIjxB,GAClCupM,IACH9zM,KAAKyzM,oBAAoBj4K,IAAIs4K,EAAI9hB,OAAOgiB,UAAUU,SAASnqM,EAAOvK,KAAK81M,aAAavrM,IACpFvK,KAAKs1J,UAAW,E,CASlBygD,iBAAiBxrM,EAAetM,GAC/B+B,KAAK8qE,MAAMvgE,GAAStM,C,CAGrB+3M,iBAAiBzrM,GAChB,OAAOvK,KAAK8qE,MAAMvgE,E,CAGnB0rM,cAAcC,EAAsB3qM,EAAsBtN,GACzD,OAAQsN,GACP,KAAK4nM,iBAAegD,IACnBn2M,KAAKy0M,OAAOyB,EAAsBj4M,GAClC,MACD,KAAKk1M,iBAAezgB,KACnB1yL,KAAKw0M,QAAQ0B,EAAuBj4M,GACpC,MACD,KAAKk1M,iBAAehxB,MACnBniL,KAAK40M,UAAUsB,EAAsBj4M,GACrC,MACD,KAAKk1M,iBAAe/rJ,QACnBpnD,KAAK80M,WAAWoB,EAAuBj4M,GACvC,MACD,KAAKk1M,iBAAe9rJ,QACnBrnD,KAAKg1M,WAAWkB,EAAuBj4M,GACvC,MACD,KAAKk1M,iBAAe7rJ,QACnBtnD,KAAKk1M,UAAUgB,EAAuBj4M,GACtC,MACD,KAAKk1M,iBAAe/oL,MACnBpqB,KAAK8yC,SAASojK,EAAqBj4M,GACnC,MACD,KAAKk1M,iBAAehe,UACnBn1L,KAAKu1M,aAAaW,EAAyBj4M,GAC3C,MACD,KAAKk1M,iBAAehuL,UACpB,KAAKguL,iBAAetnD,YACnB7rJ,KAAKy1M,WAAWS,EAA2Bj4M,GAC3C,MACD,KAAKk1M,iBAAezoJ,OACnB1qD,KAAKw1M,UAAUU,EAA4Bj4M,GAC3C,MACD,QACC,KAAM,2B,CAITm4M,cAAcF,EAAsB3qM,GACnC,OAAQA,GACP,KAAK4nM,iBAAegD,IACnB,OAAOn2M,KAAKygH,OAAOy1F,GACpB,KAAK/C,iBAAezgB,KACnB,OAAO1yL,KAAK6gH,QAAQq1F,GACrB,KAAK/C,iBAAehxB,MACnB,OAAOniL,KAAK20M,UAAUuB,GACvB,KAAK/C,iBAAe/rJ,QACnB,OAAOpnD,KAAK60M,WAAWqB,GACxB,KAAK/C,iBAAe9rJ,QACnB,OAAOrnD,KAAK+0M,WAAWmB,GACxB,KAAK/C,iBAAe7rJ,QACnB,OAAOtnD,KAAKi1M,UAAUiB,GACvB,KAAK/C,iBAAe/oL,MACnB,OAAOpqB,KAAKqzK,SAAS6iC,GACtB,KAAK/C,iBAAehe,UACnB,OAAOn1L,KAAKs1M,aAAaY,GAC1B,KAAK/C,iBAAehuL,UACpB,KAAKguL,iBAAetnD,YACnB,OAAO7rJ,KAAKm8F,WAAW+5G,GACxB,KAAK/C,iBAAezoJ,OACnB,OAAO1qD,KAAK6tD,UAAUqoJ,GACvB,QACC,KAAM,2B,CAUTJ,aAAavrM,GACZ,OAAOvK,KAAK8qE,MAAMvgE,E,CAOnBugB,QAAQC,GACP,IAAIxoB,EAA+BwoB,EAC/BsrL,EAAwG9zM,EAAKuoE,MACjH,IAAK,IAAInrE,KAAKK,KAAK8qE,MAAO,CACzB,IAAI7sE,EAAa+B,KAAK8qE,MAAMnrE,GAC5B,GAAa,MAAT1B,EACH,GAAoB,iBAATA,EACVo4M,EAAS12M,GAAK1B,OACR,GAAoB,iBAATA,EACjBo4M,EAAS12M,GAAK1B,OACR,GAAoB,kBAATA,EACjBo4M,EAAS12M,GAAK1B,OACR,GAAIA,aAAiBmpD,QAAS,CACpC,IAAI7uB,EAAK89K,EAAS12M,KAAO02M,EAAS12M,GAAK,IAAIynD,SACjCnpD,EAAO6sB,QAAQyN,GACzB89K,EAAS12M,GAAK44B,CACd,MAAM,GAAIt6B,aAAiBopD,QAAS,CACpC,IAAI+3I,EAAKiX,EAAS12M,KAAO02M,EAAS12M,GAAK,IAAI0nD,SACjCppD,EAAO6sB,QAAQs0K,GACzBiX,EAAS12M,GAAKy/L,CACd,MAAM,GAAInhM,aAAiBqpD,QAAS,CACpC,IAAIzpD,EAAQmC,KAAKqzK,SAASv0K,SAASa,IACnC,GAAI9B,EAAO,CACV,IAAIy4M,EAAaz4M,EAAM2J,QACvBujB,EAAW+nB,SAASh0C,SAASa,GAAI22M,EACjC,KAAM,CACN,IAAIC,EAAKF,EAAS12M,KAAO02M,EAAS12M,GAAK,IAAI2nD,SACjCrpD,EAAO6sB,QAAQyrL,GACzBF,EAAS12M,GAAK42M,CACd,CACD,MAAM,GAAIt4M,aAAiBk3L,UAAW,CACtC,IAAI9rK,EAAMgtL,EAAS12M,KAAO02M,EAAS12M,GAAK,IAAIw1L,WAChCl3L,EAAO6sB,QAAQzB,GAC3BgtL,EAAS12M,GAAK0pB,CACd,MAAUprB,aAAiBgX,aAGjBhX,aAAiBkU,YAF3BkkM,EAAS12M,GAAK1B,EACdA,EAAMsW,gBAMR,CACDvU,KAAKwzM,aAAa1oL,QAAQvoB,EAAKixM,cAC/BxzM,KAAKm0M,eAAevpM,SAAQ,CAAC/M,EAAO0M,KACnCwgB,EAAWopL,eAAe15L,IAAIlQ,EAAO1M,EAAM2J,QAAQ,IAIpDxH,KAAKw2M,UAAUj0M,EAAKkxM,qBACpBlxM,EAAK+yJ,UAAW,C,CAQjBkhD,UAAUC,GACTz2M,KAAKyzM,oBAAoB7oM,SAAQ,CAAC3M,EAAOmO,KACxCqqM,EAAShrM,IAAIW,IAASnO,EAAM+1M,UAAUlpL,QAAQ2rL,EAASj7K,IAAIpvB,GAAK4nM,UAAW,G,CAQ7ExsM,QACC,IAAIjF,EAAmB,IAAI8wM,WAE3B,OADArzM,KAAK8qB,QAAQvoB,GACNA,C,CAGRwF,QACC,IAAK,IAAIpI,KAAKK,KAAK8qE,MAAO,CAEzB,IAAI7sE,EAAa+B,KAAK8qE,MAAMnrE,GACxB1B,aAAiBkU,UACpBlU,EAAMuW,kBAEP,CACDxU,KAAK8qE,MAAQ,GACb9qE,KAAKm0M,eAAexpM,QACpB3K,KAAKyzM,oBAAoB9oM,QACzB3K,KAAKs1J,UAAW,EAChBt1J,KAAK0zM,mBAAmB/oM,QACxB3K,KAAKwzM,aAAa7oM,O,CAGnBxH,UAGC,IAAK,IAAIxD,KAFTK,KAAKwzM,aAAarwM,UAClBnD,KAAKwzM,aAAe,KACNxzM,KAAK8qE,MAAO,CAEzB,IAAI7sE,EAAa+B,KAAK8qE,MAAMnrE,GACxB1B,aAAiBkU,UACpBlU,EAAMuW,kBAEP,CACDxU,KAAK8qE,MAAQ,KACb9qE,KAAKm0M,eAAexpM,QACpB3K,KAAKm0M,eAAiB,YAEfn0M,KAAKyzM,2BACLzzM,KAAK0zM,mBACZ1zM,KAAKyzM,oBAAsB,KAC3BzzM,KAAK0zM,mBAAqB,I,EC3pBhBN,2FAQX,KAPGA,GAAA,mBACAA,MAAA,qBACAA,MAAA,qBACAA,MAAA,qBACAA,MAAA,yBACAA,MAAA,+BACAA,MAAA,6B,MAOSsD,kBAmCTn6M,YAAYo6M,GAER32M,KAAKi0M,oBAAsB,IAAI14K,IAAIo7K,GACnC32M,KAAK42M,gBACL52M,KAAK62M,YAAc,IAAIzvJ,QACvBpnD,KAAK82M,kB,CAOCF,gBACN,IAAIG,EAAU,EACd/2M,KAAKg3M,WAAa,GAElBh3M,KAAKi0M,oBAAoBrpM,SAAQ,CAACwB,EAAKnO,KACnC84M,GAAW/2M,KAAKi3M,kBAAkBh5M,EAAOmO,EAAK2qM,EAAQ,IAI1D/2M,KAAKk3M,YAAuC,EAAzB35M,KAAKoyE,KAAKonI,EAAU,GANnB,EAOpB/2M,KAAKwhB,QAAU,IAAInG,aAAa07L,E,CAM1BI,cAAc/qM,GACpB,IAAIqrD,EAAOrrD,EAAIlO,QAAQ,KACnBqK,EAAQ6D,EAAIlO,QAAQ,KACxB,IAAa,GAATu5D,IAAwB,GAAVlvD,GAAekvD,EAAOlvD,EACpC,OAAO7J,WAAW0N,EAAI9N,UAAUm5D,EAAO,EAAGlvD,IAE1C,MAAM6D,EAAM,c,CAOV6qM,kBAAkBG,EAAmBn5M,EAAgCwiB,GAC3E,IAGI42L,EAHAtkM,EAAe,EACfukM,EAAiB,EACjBC,EAAO92L,EAAS,EAEpB,OAAQxiB,GACJ,KAAKm1M,0BAAwBn0L,OACzBlM,EAAO,EACPukM,EAAS,EACT,MACJ,KAAKlE,0BAAwBhsJ,QAEzB,OADAr0C,EAAO,EACCwkM,GACJ,KAAK,EACL,KAAK,EACDD,EAAS,EACT,MACJ,KAAK,EACL,KAAK,EACD72L,GAAU,EACV62L,EAAS,EAGjB,MACJ,KAAKlE,0BAAwB/rJ,QAGzB,OAFAt0C,EAAO,EACPukM,EAAS,EACDC,GACJ,KAAK,EACL,KAAK,EACL,KAAK,EACD92L,GAAW,EAAI82L,EACfD,EAAU,EAAIC,EAAQ,EAG9B,MACJ,KAAKnE,0BAAwB9rJ,QAGzB,OADAv0C,EAAO,EACCwkM,GACJ,KAAK,EACDD,EAAS,EACT,MACJ,KAAK,EACD72L,GAAU,EACV62L,EAAS,EACT,MACJ,KAAK,EACD72L,GAAU,EACV62L,EAAS,EACT,MACJ,KAAK,EACD72L,GAAU,EACV62L,EAAS,EAGjB,MACJ,KAAKlE,0BAAwBje,UACzBpiL,EAAO,GACPskM,EAAYE,EAAO,EAAIA,EAAOA,EAC9B92L,GAAU42L,EACVC,EAASvkM,EAAOskM,EAChB,MACJ,KAAKjE,0BAAwBoE,aACzBzkM,EAAkE,EAA3D/S,KAAKm3M,cAAc7E,SAASr9C,iBAAiBmiD,IACpDC,EAAYE,EAAO,EAAIA,EAAOA,EAC9B92L,GAAU42L,EACVC,EAASvkM,EAAOskM,EAChB,MACJ,KAAKjE,0BAAwBqE,YACzB1kM,EAAkE,GAA3D/S,KAAKm3M,cAAc7E,SAASr9C,iBAAiBmiD,IACpDC,EAAYE,EAAO,EAAIA,EAAOA,EAC9B92L,GAAU42L,EACVC,EAASvkM,EAAOskM,EAChB,MACJ,QACI,KAAM,yCAEd,MAAMK,EAAa,IAAItwJ,QAAQ3mC,EAAQ1N,GAEvC,OADA/S,KAAKg3M,WAAWI,GAAaM,EACtBJ,C,CAMHK,eAAevrM,GACnB,OAAOpM,KAAKg3M,WAAW5qM,E,CAOnBwrM,eAAe7uM,EAAaD,GAC5BC,EAAM/I,KAAK62M,YAAY33M,IACvBc,KAAK62M,YAAY33M,EAAI6J,GACrBD,EAAM9I,KAAK62M,YAAY13M,IACvBa,KAAK62M,YAAY13M,EAAI2J,E,CAO7B3F,iBACWnD,KAAKwhB,QACZxhB,KAAKi0M,oBAAoBtpM,QACzB3K,KAAKi0M,oBAAsB,KAC3Bj0M,KAAKg3M,WAAa,KAClBh3M,KAAK62M,YAAc,I,CAMvBC,mBACI92M,KAAK62M,YAAY5rL,SAASjrB,KAAKwhB,QAAQvlB,OAAQ,E,CAQnD47M,KAAKT,GAED,QADap3M,KAAK23M,eAAeP,E,CAQrC1C,SAAS0C,EAAmBn5M,GAIxB,OAFkB+B,KAAKi0M,oBAAoBz4K,IAAI47K,IAG3C,KAAKhE,0BAAwBn0L,OACzBjf,KAAK83M,iBAAiBV,EAAWn5M,GACjC,MACJ,KAAKm1M,0BAAwBhsJ,QACzBpnD,KAAK+3M,kBAAkBX,EAAWn5M,GAClC,MACJ,KAAKm1M,0BAAwB/rJ,QACzBrnD,KAAKg4M,kBAAkBZ,EAAWn5M,GAClC,MACJ,KAAKm1M,0BAAwB9rJ,QACzBtnD,KAAKi4M,kBAAkBb,EAAWn5M,GAClC,MAIJ,KAAKm1M,0BAAwBje,UACzBn1L,KAAKk4M,iBAAiBd,EAAWn5M,GACjC,MACJ,KAAKm1M,0BAAwBoE,aACzBx3M,KAAKm4M,uBAAuBf,EAAWn5M,GACvC,MACJ,KAAKm1M,0BAAwBqE,YACzBz3M,KAAKo4M,sBAAsBhB,EAAWn5M,G,CAYlDo6M,gBACI,OAAOr4M,KAAKk3M,W,CAQhBoB,gBAAgBvjM,EAAc9W,GAC1B,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAKm4M,uBAAuBf,EAAWn5M,E,CAS3Ck6M,uBAAuBf,EAAmBn5M,GACtC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACX4L,EAAQo8C,EAAK/nD,EAAI,EACrB,IAAK,IAAIV,EAAI,EAAGA,EAAIqM,EAAOrM,IAAK,CAC5B,IAAI85M,EAAMt6M,EAAMQ,GAChBuB,KAAKwhB,QAAQhE,KAAS+6L,EAAIr5M,EAC1Bc,KAAKwhB,QAAQhE,KAAS+6L,EAAIp5M,EAC1Ba,KAAKwhB,QAAQhE,KAAS+6L,EAAIp4K,EAC1BngC,KAAKwhB,QAAQhE,KAAS+6L,EAAItqL,CAC7B,CACDjuB,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCg7L,eAAezjM,EAAc9W,GACzB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAKo4M,sBAAsBhB,EAAWn5M,E,CAS1Cm6M,sBAAsBhB,EAAmBn5M,GACrC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACX4L,EAAQo8C,EAAK/nD,EAAI,EACrB,IAAK,IAAIV,EAAI,EAAGA,EAAIqM,EAAOrM,IAAK,CAC5B,IAAI4qB,EAAMprB,EAAMQ,GAChBuB,KAAKwhB,QAAQ/G,IAAI4O,EAAIsjB,SAAUnvB,GAC/BA,GAAO,EACV,CACDxd,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCo3L,UAAU7/L,EAAc9W,GACpB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAK83M,iBAAiBV,EAAWn5M,E,CASrC65M,iBAAiBV,EAAmBn5M,GAChC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQhE,KAASvf,EACtB+B,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCs3L,WAAW//L,EAAc9W,GACrB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAK+3M,kBAAkBX,EAAWn5M,E,CAStC85M,kBAAkBX,EAAmBn5M,GACjC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQhE,KAASvf,EAAMiB,EAC5Bc,KAAKwhB,QAAQhE,KAASvf,EAAMkB,EAC5Ba,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCw3L,WAAWjgM,EAAc9W,GACrB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAKg4M,kBAAkBZ,EAAWn5M,E,CAStC+5M,kBAAkBZ,EAAmBn5M,GACjC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQhE,KAASvf,EAAMiB,EAC5Bc,KAAKwhB,QAAQhE,KAASvf,EAAMkB,EAC5Ba,KAAKwhB,QAAQhE,KAASvf,EAAMkiC,EAC5BngC,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCi7L,WAAW1jM,EAAc9W,GACrB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAKi4M,kBAAkBb,EAAWn5M,E,CAStCg6M,kBAAkBb,EAAmBn5M,GACjC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQhE,KAASvf,EAAMiB,EAC5Bc,KAAKwhB,QAAQhE,KAASvf,EAAMkB,EAC5Ba,KAAKwhB,QAAQhE,KAASvf,EAAMkiC,EAC5BngC,KAAKwhB,QAAQhE,KAASvf,EAAMgwB,EAC5BjuB,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAQhCs1B,SAAS/9B,EAAc9W,GACnB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAK04M,gBAAgBtB,EAAWn5M,E,CAGpCy6M,gBAAgBtB,EAAmBn5M,GAC/B,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQhE,KAAS4M,MAAMO,mBAAmB1sB,EAAMosB,GACrDrqB,KAAKwhB,QAAQhE,KAAS4M,MAAMO,mBAAmB1sB,EAAMqsB,GACrDtqB,KAAKwhB,QAAQhE,KAAS4M,MAAMO,mBAAmB1sB,EAAM4F,GACrD7D,KAAKwhB,QAAQhE,KAAS4M,MAAMO,mBAAmB1sB,EAAM2F,GACrD5D,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAShCm7L,UAAU5jM,EAAc9W,GACpB,MAAMm5M,EAAoB9E,SAASxlD,iBAAiB/3I,GACpD/U,KAAKk4M,iBAAiBd,EAAWn5M,E,CASrCi6M,iBAAiBd,EAAmBn5M,GAChC,MAAMipD,EAAOlnD,KAAK23M,eAAeP,GACjC,IAAKlwJ,EAAM,OACX,IAAI1pC,EAAM0pC,EAAKhoD,EACfc,KAAKwhB,QAAQ/G,IAAIxc,EAAM0uC,SAAUnvB,GACjCA,GAAO,GACPxd,KAAK43M,eAAe1wJ,EAAKhoD,EAAGse,E,CAIhChW,QAEI,IAAIoxM,EAAM,IAAIlC,kBAAkB12M,KAAKi0M,qBAErC,OADAj0M,KAAK8qB,QAAQ8tL,GACNA,C,CAGX9tL,QAAQC,GACAA,EAAWmsL,aAAel3M,KAAKk3M,cAC/BnsL,EAAWvJ,QAAUnG,aAAaoxE,KAAKzsF,KAAKwhB,SAC5CxhB,KAAK62M,YAAY5rL,SAAS,EAAGjrB,KAAKwhB,QAAQvlB,Q,QCvezC48M,wBAwBTt8M,YAAYuE,EAAYiU,EAAc+jM,GAVtC94M,KAAAoyM,aAA4B,IAAIzB,YAEtB3wM,KAAqB+4M,sBAAW,EAMhC/4M,KAAcg5M,eAA4E,GAGhGh5M,KAAK03H,OAAS52H,EACdd,KAAK+U,KAAOA,EACZ/U,KAAKi5M,IAAMH,EAAYl3K,OACvB5hC,KAAKk5M,IAAMJ,EAAYj3K,OACvB7hC,KAAKm5M,MAAQL,EAAY/2K,KACzB,IAAK,IAAIpiC,KAAKm5M,EAAY/2K,KACtB/hC,KAAKoyM,aAAatvM,IAAIwvM,SAASC,gBAAgB5yM,G,CAMvDy5M,sBAAsBC,EAAeC,EAAmBC,GACpD,IAAIp+L,EAAcnb,KAAK+4M,sBAAwB,EAC/C,GAAIO,GAAan+L,EACb,IAAK,IAAIxb,KAAK05M,EAEV,IADA,IAAIvwK,EAASuwK,EAAS15M,GACblB,EAAY,EAAG+G,EAAY+zM,EAAep+L,EAAK1c,EAAI+G,EAAG/G,IACvDA,GAAK+G,EAAI,EACT6zM,EAAS,GAAKvwK,EAEduwK,EAAWA,EAAc,GAAL56M,EAASkB,EAAI,GAAK,QAMlD,IAAK,IAAIA,MADP25M,EACYD,EACVr5M,KAAKo5M,sBAAsBC,EAAS15M,GAAI25M,EAAWC,E,CAO/DC,YAAYC,GACR,IAEIC,EAFAC,EAA8Bd,wBAAwBe,mBACtDC,EAA4BhB,wBAAwBiB,iBAExDL,EAAc7I,yBAAyB5wM,KAAKoyM,cACxCE,SAASyH,YACTL,EAAkBD,EAAcngM,SAIpC,IAAI0gM,EAAoBh6M,KAAKg5M,eACzBiB,EAAqBR,EAAcngM,QACnC2gM,EAAaj6M,KAAK+4M,wBAClB/4M,KAAKo5M,sBAAsBY,EAAc,EAAGC,GAC5Cj6M,KAAK+4M,sBAAwBkB,GAMjC,IAHA,IAAIxlL,EAAsBglL,EAAchhJ,MACpCkvC,EAAmB8xG,EAAcngM,QAAU,EAC3C4gM,EAAsBl6M,KAAK+4M,sBAAwB,EAC9Ct6M,EAAY,EAAGA,EAAIy7M,EAAaz7M,IAAK,CAC1C,IAAI07M,EAAkBxyG,EAAWlpG,EAAI,EAAIg2B,EAAKh2B,GAC1C27M,EAAkBJ,EAAaG,GACnC,IAAsBH,EAAaG,GAAWC,EAAkB,IAChEJ,EAAeI,CAClB,CAED,IAAIC,EAAmB1yG,EAAWuyG,EAAc,EAAIzlL,EAAKylL,GACrDpxK,EAAyBkxK,EAAaK,GAC1C,GAAIvxK,EACA,OAAOA,EAEX,IAAIwxK,EAAyBzB,wBAAwB0B,cAErDjI,SAASkI,sBAAsBf,EAAea,GAI9C,IAEIG,EACAC,EAHA51K,EAAc,GAIdC,EAAoB,GAEpBj7B,OAAO+Y,aAAaC,WAAW/Q,gBAAc6uI,qBAC7C65D,EACI,yLAKJC,EACI,grBAgBJD,EAAa,GACbC,EACI,ifAaCj8M,EAAY,EAArB,IAAK,IAAmB+G,EAAY80M,EAAar+M,OAAQwC,EAAI+G,EAAG/G,IAAK,CACjE,IAAIi3B,EAAc4kL,EAAa77M,GAC/BsmC,GAAa,WAAarP,EAAM,KAChCoP,EAAOpP,IAAO,CACjB,CAED,IAAIgM,EAAY1hC,KAAKi5M,IAAIt4K,SAASmE,EAAQ,IACtC61K,EAAoB,GACS,GAA7Bj5K,EAAG,GAAGxjC,QAAQ,cACdy8M,EAAYj5K,EAAG,GAAK,KACpBA,EAAGu6B,SAGP,IAAIt6B,EAAY3hC,KAAKk5M,IAAIv4K,SAASmE,EAAQ,IACtC81K,EAAoB,GAUxB,GATiC,GAA7Bj5K,EAAG,GAAGzjC,QAAQ,cACd08M,EAAYj5K,EAAG,GAAK,KACpBA,EAAGs6B,SAGPnzB,EAASh/B,OAAO+wM,gBAAgBlmD,qBAAqBgmD,EAAYF,EAAa11K,EAAYrD,EAAGnjB,KAAK,MAAOq8L,EAAYF,EAAe31K,EAAYpD,EAAGpjB,KAAK,MAAOve,KAAK03H,OAAO+0B,cAAezsJ,MAE1Lg6M,EAAaK,GAAYvxK,EAErBwpK,SAASyH,UAAW,CACpB,IAAIe,EAAiB,GACjBC,EAAkB,GAEtB,IAASt8M,EAAY,EAAG+G,EAAYk0M,EAAiBj7M,EAAI+G,EAAG/G,IACzCs8M,GAAdt8M,GAAK+G,EAAI,EAAgBq0M,EAAgBp7M,GAAgBo7M,EAAgBp7M,GAAK,IACnF,IAASA,EAAY,EAAG+G,EAAYm0M,EAAkB19M,OAAQwC,EAAI+G,EAAG/G,IAClDq8M,GAAdr8M,GAAK+G,EAAI,EAAem0M,EAAkBl7M,GAAek7M,EAAkBl7M,GAAK,IAErFnH,QAAQovB,IAAI,sDAAwD1mB,KAAK+U,KAA7D,iBAA4FgmM,EAA5F,kBAA+HD,EAAS,IAAK,cAC5J,CAED,OAAOhyK,C,EAjLJ+vK,wBAAa0B,cAAkB,GAE/B1B,wBAAkBe,mBAAa,GAE/Bf,wBAAgBiB,iBAAa,G,MCT3BkB,kBAEThkN,2BAA2Bw1J,GAEvB,IAAIj5I,EAAM,GACV,IAAK,MAAMnH,KAAOogJ,EAAc,CAE5Bj5I,EAAM,GAAGA,cADE0nM,iBAAiBzuD,EAAapgJ,GAAK,OACbA,MACpC,CAED,OAAOmH,C,CAGXvc,yBAAyBkkN,EAA6BC,GAElD,GAAIA,EAAiB,CACjB,IAAIC,EAAY,GACZC,EAAc,GAClB,IAAK,MAAMjvM,KAAO8uM,EAEd,GAA+B,iBAApBA,EAAY9uM,GAAkB,CACrC,IAAIkvM,EAA2DJ,EAAY9uM,GAC3EgvM,GAAa,WAAWhvM,QACxB,IAAK,MAAMmvM,KAAeD,EAAe,CAErCF,GAAa,GAAGH,iBADDK,EAAcC,OACiBA,MACjD,CACDH,GAAa,MAChB,KACI,CAEDC,GAAe,WAAWJ,iBADKC,EAAY9uM,OACaA,MAC3D,CAEL,OAAOgvM,EAAYC,CAEtB,CACI,CACD,IAAIA,EAAc,GAClB,IAAK,MAAMjvM,KAAO8uM,EAEd,GAA+B,iBAApBA,EAAY9uM,GAAkB,CACrC,IAAIkvM,EAA2DJ,EAAY9uM,GAC3E,IAAK,MAAMmvM,KAAeD,EAAe,CAErCD,GAAe,WAAWJ,iBADXK,EAAcC,OAC2BA,MAC3D,CACJ,KACI,CAEDF,GAAe,WAAWJ,iBADKC,EAAY9uM,OACaA,MAC3D,CAEL,OAAOivM,CACV,C,EAKT,SAASJ,iBAAiB1vM,GACtB,OAAQA,GACJ,KAAK4nM,iBAAegD,IAChB,MAAO,MACX,KAAKhD,iBAAezgB,KAChB,MAAO,OACX,KAAKygB,iBAAehxB,MAChB,MAAO,QACX,KAAKgxB,iBAAe/rJ,QAChB,MAAO,OACX,KAAK+rJ,iBAAe9rJ,QAChB,MAAO,OACX,KAAK8rJ,iBAAe7rJ,QACpB,KAAK6rJ,iBAAe/oL,MAChB,MAAO,OACX,KAAK+oL,iBAAehe,UAChB,MAAO,OACX,KAAKge,iBAAehuL,UAChB,MAAO,YACX,KAAKguL,iBAAetnD,YAChB,MAAO,cACX,QACI,MAAO,GAEnB,CCvEM,MAAO2vD,mBAAmB3C,wBAwB5Bt8M,YAAYuE,EAAkBg4M,GAC1BzmM,MAAMvR,EAAO,KAAMg4M,GAdvB94M,KAAKy7M,MAAQ,GAIbz7M,KAAU07M,YAAY,EAWlB17M,KAAK27M,aAAe7xM,OAAO+wM,gBAAgBe,oBAC3C57M,KAAK27M,aAAaE,S,CAPlBC,kBACA,OAAO97M,KAAK27M,Y,CAYhBI,iCAAiCtC,EAA4BuC,EAA2BC,GACpF,IAAIC,EAAuC5J,SAAS6J,wBAChDC,EAA4Bp8M,KAAK03H,OACjC2kF,EAAwBD,EAAe1kF,OACvCjjG,EAAiBglL,EAAchhJ,MACnC65I,SAASkI,sBAAsBf,EAAeuC,GAC9CC,EAAmBhgN,OAASw4B,EAAKx4B,OACjC,IAAK,IAAIwC,EAAY,EAAG+G,EAAYivB,EAAKx4B,OAAQwC,EAAI+G,EAAG/G,IACpDw9M,EAAmBx9M,GAAKg2B,EAAKh2B,GAE7By9M,EACAA,EAAsBjxL,SAASoxL,EAAaA,EAAYC,YAAYp+M,QAAQk+M,GAAiBA,EAAelK,QAAQh0M,QAAQ8B,MAAOg8M,GAEnI1J,SAAS6J,wBAA0BD,EAAwB,IAAI1K,cAAc6K,EAAaA,EAAYC,YAAYp+M,QAAQk+M,GAAiBA,EAAelK,QAAQh0M,QAAQ8B,MAAOg8M,GACrL1J,SAASiK,6BAA6Bz5M,IAAIo5M,E,CAO9C1C,YAAYC,GACR,IAEIC,EAFAC,EAA8B6B,WAAWgB,oBACzC3C,EAA4B2B,WAAWiB,kBAE3ChD,EAAc7I,yBAAyB5wM,KAAKoyM,cACxCE,SAASyH,YACTL,EAAkBD,EAAcngM,QAChCtZ,KAAK+7M,iCAAiCtC,EAAeE,EAAmBE,IAG5E,IAAIG,EAAoBh6M,KAAKg5M,eACzBiB,EAAqBR,EAAcngM,QACnC2gM,EAAaj6M,KAAK+4M,wBAClB/4M,KAAKo5M,sBAAsBY,EAAc,EAAGC,GAC5Cj6M,KAAK+4M,sBAAwBkB,GAMjC,IAHA,IAAIxlL,EAAsBglL,EAAchhJ,MACpCkvC,EAAmB8xG,EAAcngM,QAAU,EAC3C4gM,EAAsBl6M,KAAK+4M,sBAAwB,EAC9Ct6M,EAAY,EAAGA,EAAIy7M,EAAaz7M,IAAK,CAC1C,IAAI07M,EAAkBxyG,EAAWlpG,EAAI,EAAIg2B,EAAKh2B,GAC1C27M,EAAkBJ,EAAaG,GACnC,IAAsBH,EAAaG,GAAWC,EAAkB,IAChEJ,EAAeI,CAClB,CAED,IAAIC,EAAmB1yG,EAAWuyG,EAAc,EAAIzlL,EAAKylL,GACrDpxK,EAAyBkxK,EAAaK,GAC1C,GAAIvxK,EACA,OAAOA,EAEX,IAAIwxK,EAAyBkB,WAAWkB,eACxCpK,SAASkI,sBAAsBf,EAAea,GAE9C,IAGIG,EACAC,EAJAiC,EAAyB96H,SAASW,kBAClC19C,EAAc,GAIdC,EAAoB,GAGxB,IAAIynH,EAAexsJ,KAAK03H,OAAO+0B,cAC3BmwD,EAAa58M,KAAK03H,OAAOg1B,YACzByuD,EAAkBt5H,SAASg7H,cAC3BC,EAAgB9B,kBAAkB+B,oBAAoBvwD,GACtDwwD,EAAchC,kBAAkBiC,kBAAkBL,EAAYzB,GAE9DrxM,OAAO+Y,aAAaC,WAAW/Q,gBAAc6uI,qBAC7C65D,EACI,kZAedqC,MACAE,MAGUtC,EACI,uvBAwBdsC,MAGUvC,EACI,2KAOdqC,MACAE,IACUtC,EACI,4gBAmBdsC,KAIMj4K,GAAa,2BAA6B88C,SAASU,cAAgB,KACnEx9C,GAAa,uCAAyC88C,SAASq7H,oCAAsC,KACrGn4K,GAAa,2BAA6B43K,EAAcz9M,EAAI,KAC5D6lC,GAAa,2BAA6B43K,EAAcx9M,EAAI,KAC5D4lC,GAAa,2BAA6B43K,EAAcx8K,EAAI,KAC5D4E,GAAa,2BAA6B88C,SAASY,oBAAsB,KACzE19C,GAAa,kCAAoCj7B,OAAO+Y,aAAaojC,UAAUlQ,eAAa8sG,wBAA0B,KAI7GpkJ,EAAY,EAArB,IAAK,IAAmB+G,EAAY80M,EAAar+M,OAAQwC,EAAI+G,EAAG/G,IAAK,CACjE,IAAIi3B,EAAc4kL,EAAa77M,GAC/BsmC,GAAa,WAAarP,EAAM,KAChCoP,EAAOpP,IAAO,CACjB,CAED,IAAIgM,EAAY1hC,KAAKi5M,IAAIt4K,SAASmE,EAAQ,IACtC61K,EAAoB,GACS,GAA7Bj5K,EAAG,GAAGxjC,QAAQ,cACdy8M,EAAYj5K,EAAG,GAAK,KACpBA,EAAGu6B,SAGP,IAAIt6B,EAAY3hC,KAAKk5M,IAAIv4K,SAASmE,EAAQ,IACtC81K,EAAoB,GAUxB,GATiC,GAA7Bj5K,EAAG,GAAGzjC,QAAQ,cACd08M,EAAYj5K,EAAG,GAAK,KACpBA,EAAGs6B,SAGPnzB,EAASh/B,OAAO+wM,gBAAgBlmD,qBAAqBgmD,EAAYF,EAAa11K,EAAYrD,EAAGnjB,KAAK,MAAOq8L,EAAYF,EAAe31K,EAAYpD,EAAGpjB,KAAK,MAAOve,KAAK03H,OAAO+0B,cAAezsJ,MAE1Lg6M,EAAaK,GAAYvxK,EAErBwpK,SAASyH,UAAW,CACpB,IAAIe,EAAiB,GACjBC,EAAkB,GACtB,IAASt8M,EAAY,EAAG+G,EAAYk0M,EAAiBj7M,EAAI+G,EAAG/G,IACzCs8M,GAAdt8M,GAAK+G,EAAI,EAAgBq0M,EAAgBp7M,GAAgBo7M,EAAgBp7M,GAAK,IAEnF,IAASA,EAAY,EAAG+G,EAAYm0M,EAAkB19M,OAAQwC,EAAI+G,EAAG/G,IAClDq8M,GAAdr8M,GAAK+G,EAAI,EAAem0M,EAAkBl7M,GAAek7M,EAAkBl7M,GAAK,IACrFnH,QAAQovB,IAAI,sDAAwD1mB,KAAK03H,OAAOA,OAAOs6D,MAAQ,mBAAqBhyL,KAAK03H,OAAOA,OAAO4kF,YAAYp+M,QAAQ8B,KAAK03H,QAAU,cAAgB13H,KAAK03H,OAAOw6E,QAAQh0M,QAAQ8B,MAAQ,gBAAkB+6M,EAApO,kBAAuQD,EAAS,IAAK,cACpS,CACD,OAAOhyK,C,EAnOI0yK,WAAckB,eAAkB,GAEhClB,WAAmBgB,oBAAa,GAEhChB,WAAiBiB,kBAAa,G,MClBpCU,WA0DZnmN,kBACCmmN,WAAWC,+BAAiC,IAAIl1J,kBAAkB,GACjE,CAAC,IAAIiB,cAAc,EAAGrD,oBAAoBwB,QAAS61J,WAAWE,uBAC9D,IAAIl0J,cAAc,GAAIrD,oBAAoBwB,QAAS61J,WAAWG,uBAC9D,IAAIn0J,cAAc,GAAIrD,oBAAoBwB,QAAS61J,WAAWI,uBAC9D,IAAIp0J,cAAc,GAAIrD,oBAAoBwB,QAAS61J,WAAWK,yBAE/DL,WAAWM,kCAAoC,IAAIv1J,kBAAkB,GAAG,CAAC,IAAIiB,cAAc,EAAErD,oBAAoBwB,QAAQ61J,WAAWO,sB,CAQrI1mN,4BAA4B2mN,EAAoBC,GAAsB,GACrE,IAAIhuD,EAA4ButD,WAAWU,sBAAsBF,GAAcC,EAAa,KAAO,OACnG,IAAKhuD,EAAQ,CAIZ,IAHA,IAAIkuD,EAAkBH,EAAWp/M,MAAM,KACnCkiB,EAAiB,EACjBksB,EAAkB,GACbluC,EAAY,EAAG+G,EAAYs4M,EAAS7hN,OAAQwC,EAAI+G,EAAG/G,IAAK,CAChE,IAAIihD,EACJ,OAAQo+J,EAASr/M,IAChB,IAAK,WACJihD,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBuB,QAAS81J,WAAWY,gBAC5Et9L,GAAU,GACV,MACD,IAAK,SACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBuB,QAAS81J,WAAWa,cAC5Ev9L,GAAU,GACV,MACD,IAAK,QACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBwB,QAAS61J,WAAWc,aAC5Ex9L,GAAU,GACV,MACD,IAAK,KACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBsB,QAAS+1J,WAAWe,yBAC5Ez9L,GAAU,EACV,MACD,IAAK,MACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBsB,QAAS+1J,WAAWgB,yBAC5E19L,GAAU,EACV,MACD,IAAK,cACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBwB,QAAS61J,WAAWiB,mBAC5E39L,GAAU,GACV,MACD,IAAK,eACAm9L,GACHl+J,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBwB,QAAS61J,WAAWkB,oBAC5E59L,GAAU,KAEVi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoByB,MAAO41J,WAAWkB,oBAC1E59L,GAAU,GAEX,MACD,IAAK,UACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBwB,QAAS61J,WAAWmB,eAC5E79L,GAAU,GACV,MACD,IAAK,cACJi/B,EAAU,IAAIyJ,cAAc1oC,EAAQqlC,oBAAoBmC,SAAUk1J,WAAWa,cAC7Ev9L,GAAU,EACV,MACD,QACC,KAAM,mCAERksB,EAAStwC,KAAKqjD,EACd,CACDkwG,EAAS,IAAI1nG,kBAAkBznC,EAAQksB,GACvCwwK,WAAWU,sBAAsBF,GAAcC,EAAa,KAAO,OAAShuD,CAC5E,CACD,OAAOA,C,EAjIDutD,WAAcY,eAAW,EAEzBZ,WAAWc,YAAW,EAEtBd,WAAuBe,wBAAW,EAElCf,WAAYa,aAAW,EAEvBb,WAAamB,cAAW,EAExBnB,WAAkBkB,mBAAW,EAE7BlB,WAAiBiB,kBAAW,EAE5BjB,WAAuBgB,wBAAW,EAElChB,WAAqBE,sBAAW,EAEhCF,WAAqBG,sBAAW,EAEhCH,WAAqBI,sBAAW,GAEhCJ,WAAqBK,sBAAW,GAKhCL,WAAmBO,oBAAU,GAS7BP,WAAaoB,cAAU,GAEvBpB,WAAaqB,cAAU,GAEvBrB,WAAasB,cAAU,GAEvBtB,WAAauB,cAAU,GAMfvB,WAAqBU,sBAAQ,G,MCxChCc,UAqETpiN,YAAYiwJ,EAA6DmyD,UAAUC,oBAAqBhC,EAA6B,GAAIiC,EAA0D,MAd1L7+M,KAAA8+M,sBAAwD,IAAIvjL,IAKrEv7B,KAAM++M,OAAQ,GAEd/+M,KAAOkyM,QAAiB,GAQpBlyM,KAAKysJ,cAAgBD,EACrBxsJ,KAAK0sJ,YAAckwD,EACnB58M,KAAKg/M,qBAAuBH,EAC5B7+M,KAAKi/M,gBAAkB,IAAI1jL,IAC3B,IAAK,MAAMnvB,KAAOwwM,EACd,GAA8B,iBAAnBA,EAAWxwM,GAAkB,CACpC,IAAIozB,EAAoDo9K,EAAWxwM,GAC/D8yM,EAAkB,IAAI3jL,IAC1B,IAAK,MAAMggL,KAAe/7K,EAAO,CAC7B,IAAI2/K,EAAcC,kCAAkC5/K,EAAM+7K,IAC1D2D,EAAgBzkM,IAAI8gM,EAAa4D,GAEjCn/M,KAAKi/M,gBAAgBxkM,IAAI8gM,EAAa/7K,EAAM+7K,GAC/C,CAED,IAAI8D,EAAuB,IAAI9jL,IAC/B2jL,EAAgBt0M,SAAQ,CAAC3M,EAAOmO,KAC5BizM,EAAqB5kM,IAAI63L,SAASxlD,iBAAiB1gJ,GAAMnO,EAAM,IAEnE,IAAIqhN,EAAY,IAAI5I,kBAAkB2I,GACtCr/M,KAAK8+M,sBAAsBrkM,IAAIrO,EAAKkzM,EACvC,KACI,CACD,IAAIC,EAA8B3C,EAAWxwM,GAE7C,GADApM,KAAKi/M,gBAAgBxkM,IAAIrO,EAAKmzM,GAC1BA,GAAepM,iBAAehuL,WAAao6L,GAAepM,iBAAetnD,YAAa,CACtF,IAAI2zD,EAAqBlN,SAASC,gBAAgB,SAASnmM,KACvD8pM,EAAe5D,SAASxlD,iBAAiB1gJ,GAC7CklM,aAAaC,gBAAgB2E,GAAgBsJ,CAChD,CAEJ,C,CA3FFxoN,6BAA6BisC,EAAqB25K,EAAgD6C,GACrG,IAAIx6K,EAAW,GACX/iC,EAAY+iC,EAAIhC,GAAe,GACnC/gC,EAAiB,WAAI06M,EACrB16M,EAAmB,aAAIu9M,EACvB5qM,OAAOs9B,OAAOwsK,UAAUe,kBAAmBz6K,E,CAgB/CjuC,kBAEI2nN,UAAUe,kBAAoB,E,CA6ElCC,QAAQvzM,EAAanO,GACbA,EACA+B,KAAK++M,OAAO3yM,GAAOnO,SAEZ+B,KAAK++M,OAAO3yM,E,CAO3BwzM,QAAQxzM,GACJ,OAAOpM,KAAK++M,OAAO3yM,E,CAUvByzM,cAAcn+K,EAAYC,EAAYm+K,EAAuB,WACzD,OAAO9/M,KAAK+/M,eAAez+K,cAAc4D,QAAQxD,EAAIC,GAAKm+K,E,CAG9DC,eAAejH,EAAiCgH,EAAuB,WACnE,IAAIE,EAAyB,IAAIxE,WAAWx7M,KAAM84M,GAIlD,OAHAkH,EAAWC,cAAgBH,EAC3B9/M,KAAKkyM,QAAQ71M,KAAK2jN,GAClBhgN,KAAKkgN,mBAAmBpH,EAAYh3K,cAC7Bk+K,C,CAGHE,mBAAmBC,GACvB,IAAK,IAAIpkK,KAAOokK,EACZ,GAAIxB,UAAUe,kBAAkB3jK,GAAM,CAClC,IAAIqkK,EAAkBzB,UAAUe,kBAAkB3jK,GAC9CskK,EAAcD,EAA4B,WAC1CE,EAAmBF,EAA8B,aACrD,IAAK,IAAI3hN,KAAK4hN,EACLrgN,KAAKi/M,gBAAgBxzM,IAAIhN,KAC1BuB,KAAKi/M,gBAAgBxkM,IAAIhc,EAAG4hN,EAAY5hN,IACxCuB,KAAK0sJ,YAAYjuJ,GAAK4hN,EAAY5hN,IAG1C,IAAK,IAAIA,KAAK6hN,EACLtgN,KAAKg/M,qBAAqBvgN,KAC3BuB,KAAKg/M,qBAAqBvgN,GAAK6hN,EAAiB7hN,GAG3D,C,EAMb,SAAS2gN,kCAAkCmB,GAEvC,OAAQA,GACJ,KAAKpN,iBAAehxB,MAChB,OAAOixB,0BAAwBn0L,OACnC,KAAKk0L,iBAAe/rJ,QAChB,OAAOgsJ,0BAAwBhsJ,QACnC,KAAK+rJ,iBAAe9rJ,QAChB,OAAO+rJ,0BAAwB/rJ,QACnC,KAAK8rJ,iBAAe7rJ,QACpB,KAAK6rJ,iBAAe/oL,MAChB,OAAOgpL,0BAAwB9rJ,QACnC,KAAK6rJ,iBAAehe,UAChB,OAAOie,0BAAwBje,UACnC,QACI,KAAM,8CAGlB,CAvK2BwpB,UAAAC,oBAAoE,CACvF4B,WAAc,CAACrD,WAAWY,eAAgB5K,iBAAe7rJ,SACzDm5J,SAAY,CAACtD,WAAWa,aAAc7K,iBAAe9rJ,SACrDq5J,WAAc,CAACvD,WAAWmB,cAAenL,iBAAe7rJ,SACxDq5J,YAAe,CAACxD,WAAWe,wBAAyB/K,iBAAe/rJ,SACnEw5J,YAAe,CAACzD,WAAWgB,wBAAyBhL,iBAAe/rJ,SACnEy5J,QAAW,CAAC1D,WAAWc,YAAa9K,iBAAe7rJ,SACnDw5J,cAAiB,CAAC3D,WAAWiB,kBAAmBjL,iBAAe7rJ,SAC/Dy5J,cAAiB,CAAC5D,WAAWkB,mBAAoBlL,iBAAe7rJ,SAChE05J,WAAc,CAAC7D,WAAWE,sBAAuBlK,iBAAehe,WAChE8rB,sBAAyB,CAAC9D,WAAWO,oBAAqBvK,iBAAe/rJ,U,MCjBpEkrJ,SAyOT/1M,YAAYwY,EAAcmsM,EAA2BC,GAhBrDnhN,KAAiBohN,mBAAY,EAE7BphN,KAAuBqhN,yBAAY,EAEnCrhN,KAAWs8M,YAAgB,GAavBt8M,KAAKgyL,MAAQj9K,EACb/U,KAAKohN,kBAAoBF,EACzBlhN,KAAKqhN,wBAA0BF,C,CAxJnCnqN,cACIs7M,SAASiK,6BAA+B,IAAI9J,uB,CAMhDz7M,6BAA6BsqN,EAAyBh8M,GAClD,IAAIi8M,EAA4CjP,SAASkP,SACrD/sL,EAAsB6sL,EAAW7oJ,MACrCnzD,EAAIrJ,OAAS,EACb,IAAK,IAAIwC,EAAY,EAAG+G,EAAY87M,EAAWhoM,QAAS7a,EAAI+G,EAAG/G,IAG3D,IAFA,IAAIgjN,EAAwCF,EAAQ9iN,GAChD07M,EAAkB1lL,EAAKh2B,GAClBiB,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACjC,IAAIqE,EAAY,GAAKrE,EACrB,GAAIy6M,EAAU,GAAKp2M,EAAIo2M,EACnB,MACAA,EAAUp2M,GACVuB,EAAIjJ,KAAKolN,EAAW19M,GAC3B,C,CAQT/M,uBAAuB+d,GACnB,IAAI0vB,EAAuB6tK,SAASoP,WAAW3sM,GAC/C,IAAK0vB,EAAQ,CACT,IAAI88K,EAAUjP,SAASkP,SACnBG,EAAkBrP,SAASsP,eAC3Br3M,EAAgBhN,KAAKgd,MAAMonM,EAAU,IACrC1jN,EAAgB,GAAK0jN,EAAU,GACnCl9K,EAAS,IAAI6sK,aAAa/mM,EAAOtM,GACjCq0M,SAASoP,WAAW3sM,GAAQ0vB,EACxBl6B,GAASg3M,EAAQtlN,SACjBslN,EAAQtlN,SACRslN,EAAQh3M,GAAS,IAErBg3M,EAAQh3M,GAAOtM,GAAS8W,EACxBu9L,SAASsP,gBACZ,CACD,OAAOn9K,C,CAQXztC,wBAAwB+d,GACpB,OAAOjL,OAAO+Y,aAAaiqI,iBAAiB/3I,E,CAGhD/d,wBAAwB4J,GACpB,OAAOkJ,OAAO+Y,aAAaoyI,iBAAiBr0J,E,CAQhD5J,kBAAkBuqC,EAAkBxC,GAChCuC,cAAc0D,WAAWzD,EAAUxC,E,CAUvC/nC,kCAAkC8lC,EAAoB20K,EAAwBC,EAAmBI,GAC7F,IAAIhpK,EAAmBwpK,SAASliI,KAAKtzC,GACrC,GAAIgM,EAAQ,CACR,IAAIkpK,EAAuBlpK,EAAOmpK,eAAeR,GACjD,GAAIO,EAAW,CACX,IAAI5sI,EAAmB4sI,EAAUE,QAAQR,GACzC,GAAItsI,EAAM,CACN,IAAIy8I,EAAkCvP,SAASwP,oBAC/CD,EAAmBl3M,QACnB,IAAK,IAAIlM,EAAY,EAAG+G,EAAYssM,EAAY71M,OAAQwC,EAAI+G,EAAG/G,IAC3DojN,EAAmB/+M,IAAIwvM,SAASC,gBAAgBT,EAAYrzM,KAChEojN,EAAmB7Q,eAAesB,SAASyP,qBAC3C38I,EAAKo0I,YAAYqI,EACpB,MACGvqN,QAAQC,KAAK,+BAEpB,MACGD,QAAQC,KAAK,oCAEpB,MACGD,QAAQC,KAAK,iC,CAOrBP,WAAW+d,EAAcmsM,GAA4B,EAAOC,GAAkC,GAC1F,OAAO7O,SAAS1tK,kBAAkB7vB,GAAQ,IAAIu9L,SAASv9L,EAAMmsM,EAAkBC,E,CAQnFnqN,YAAY+d,GACR,OAAOu9L,SAAS1tK,kBAAkB7vB,E,CAGtC/d,aAAakL,EAA0By7B,GAC9Bz7B,EAAK6S,MAAS7S,EAAK06M,YACpBtlN,QAAQsvB,MAAM,QAClB,IAAIkiB,EAASwpK,SAASxvM,IAAIZ,EAAK6S,KAAM7S,EAAKg/M,iBAAkBh/M,EAAKi/M,wBAC7Da,EAAY,IAAIrD,UAAUz8M,EAAKsqJ,aAAetqJ,EAAKsqJ,aAAemyD,UAAUC,oBAAqB18M,EAAK06M,WAAY16M,EAAKu9M,cAC3H32K,EAAOm5K,aAAaD,GACpB,IAAIE,EAAYhgN,EAAK89M,WACrB,IAAK,IAAIvhN,KAAKyjN,EAAW,CACrB,IAAI98I,EAAO88I,EAAUzjN,GACrBujN,EAAUjC,eAAez+K,cAAc4D,QAAQkgC,EAAK+8I,GAAI/8I,EAAKg9I,GAAIzkL,GAAWynC,EAAKi9I,SACpF,CACD,OAAOv5K,C,CAeP/zB,WACA,OAAO/U,KAAKgyL,K,CAgBhBiwB,aAAajQ,GACThyM,KAAKs8M,YAAYjgN,KAAK21M,GACtBA,EAAUt6E,OAAS13H,I,CAQvBiyM,eAAe1nM,GACX,OAAOvK,KAAKs8M,YAAY/xM,E,CAW5BvT,qBAAqB8lC,EAAoB20K,EAAwBC,KAAsB4Q,GACnF,IAAIx5K,EAAmBwpK,SAASliI,KAAKtzC,GACrC,GAAIgM,EAAQ,CACR,IAAIkpK,EAAuBlpK,EAAOmpK,eAAeR,GACjD,GAAIO,EAAW,CACX,IAAI5sI,EAAmB4sI,EAAUE,QAAQR,GACzC,GAAItsI,EAAM,CACN,IAAIy8I,EAAkCvP,SAASwP,oBAC3CrtL,EAAsBotL,EAAmBppJ,MAC7ChkC,EAAKx4B,OAAS,EACd,IAAK,IAAIwC,EAAY,EAAG+G,EAAY88M,EAAWrmN,OAAQwC,EAAI+G,EAAG/G,IAC1Dg2B,EAAKp4B,KAAKimN,EAAW7jN,IACzBojN,EAAmBvoM,QAAUgpM,EAAWrmN,OACxCmpE,EAAKo0I,YAAYqI,EAEpB,MACGvqN,QAAQC,KAAK,+BAEpB,MACGD,QAAQC,KAAK,oCAEpB,MACGD,QAAQC,KAAK,iC,EA9Rd+6M,SAAAyP,oBAAsB,IAAIpR,YAElB2B,SAAAwP,oBAAmC,IAAInR,YAqC/C2B,SAAaiQ,cAAW,EAExBjQ,SAAekQ,gBAAW,EAE1BlQ,SAAamQ,cAAW,EAExBnQ,SAAaoQ,cAAW,EAExBpQ,SAAYqQ,aAAW,EAgBvBrQ,SAAgBhiD,iBAAQ,GAEhBgiD,SAAoB/hD,qBAAW,EAE/B+hD,SAAcsP,eAAW,EAGzBtP,SAAUoP,WAAoC,GAEtDpP,SAAiB1tK,kBAAgC,GAEjD0tK,SAAQkP,SAAqC,GAI7ClP,SAASyH,WAAY,E,MC/DnB9+M,KAmCTjE,eAAesT,GACX,GAAIs4M,GACA,OAAO1pL,QAAQC,UAGnB,IAAI0pL,EAFJD,IAAU,EAINC,EADqB,iBAAbv4M,EAAK,GACC,CACV6hK,YAAa7hK,EAAK,GAClB8hK,aAAc9hK,EAAK,IAITA,EAAK,GAEvByP,YAAYqmG,UAAU/lG,QAAUN,YAAYqmG,UAAU/lG,MAAQyoM,kBAC9DznM,aAAa+kG,UAAU/lG,QAAUgB,aAAa+kG,UAAU/lG,MAAQ0oM,mBAChEh9L,YAAYq6F,UAAU/lG,QAAU0L,YAAYq6F,UAAU/lG,MAAQ2oM,kBAC9DxpM,WAAW4mG,UAAU/lG,QAAUb,WAAW4mG,UAAU/lG,MAAQ4oM,iBAE5DjoN,QAAQ6gD,WACRxe,IAAIwe,WAEJ,IAAIqnK,EAAetnN,OAAgB,OACnC,GAAIsnN,EAAQ,CACR,IAAK14C,MAAM1yH,SACP,OAAO5e,QAAQ4wF,OAAO,uBAE1B4gD,UAAUI,gBAAkBo4C,EAAOC,iBACnC5rD,OAAO6rD,UAAW,CACrB,CAID,IAAI5rD,EAAWx8J,QAAQmiD,WAAa,IAAI0+C,YAAW,GAE/C1iD,EAAaq+G,EAASz4J,OAAOo6C,MAyFjC,OAxFAA,EAAMg7B,SAAW,WACjBh7B,EAAMhrB,IAAMgrB,EAAMse,KAAO,MACzBte,EAAMi3H,WAAa,UAEdp1K,QAAQsgD,cAAiBtgD,QAAQugD,kBAClCvgD,QAAQ+hD,UAAUpD,YAAY69G,EAASz4J,QAK3C/D,QAAQusB,OAAS,IAAIs0E,YAAW,GAChC7gG,QAAQwsB,QAAqCxsB,QAAQusB,OAAO6sD,WAAW,MACvEp5E,QAAQm9K,gBAAkBpD,aAAal5H,WACvC7gD,QAAQqoN,oBAAsBlU,aAAatzJ,WAG3C5gD,KAAKG,YAAc,IAAIstK,OAAM,GAC7BttK,cAAcstK,MAAMK,UAAY9tK,KAAKG,YACrCH,KAAKI,aAAe,IAAIqtK,OAAM,GAC9BztK,KAAKE,MAAQ,IAAIutK,OAAM,GAEvB7tK,MAAMO,YAAcH,KAAKG,YACzBD,QAAQN,MAAMM,MAAQF,KAAKE,MAC3BE,eAAeR,MAAMQ,aAAeJ,KAAKI,aAEzCJ,KAAKC,OAAS,IAAIJ,OAClBD,MAAMI,KAAOA,KACbC,SAASL,MAAMK,OAASD,KAAKC,OAE7BklK,WAAWvkH,WACXu0J,MAAMv0J,WAEFtgD,QAAQ+nN,aACJ/nN,QAAQE,UACRF,QAAQ+nN,WAAWT,GAEnBtnN,QAAQ+nN,WAAa,MAGzB/nN,QAAQI,SACRV,KAAKsoN,eAETlhH,YAAYmhH,aAEZloN,QAAQL,KAAKK,MAAQ,IAAI2wK,MACzBpxK,MAAMS,MAAQL,KAAKK,MAEfC,QAAQI,SAAYC,OAAeC,MAAMgzE,kBACxCjzE,OAAeC,MAAMgzE,iBAAiBvzE,QAAMuzE,iBAAiB1kB,KAAK7uD,UAEvEg3M,SAAShD,OACTz+I,gBAAgB4yJ,UAChB1wJ,OAAOlX,WACPgW,YAAYhW,WACZ5gD,KAAKy1C,OAASz1C,KAAKyoN,eACnBhzK,SAASz1C,KAAKy1C,OAEdp1C,QAAMyX,KAAK8vM,EAAY12C,YAAa02C,EAAYz2C,cAC5Cy2C,EAAYt0C,YACZjzK,QAAMizK,UAAYs0C,EAAYt0C,WAC9Bs0C,EAAYxyC,aACZ/0K,QAAM+0K,WAAawyC,EAAYxyC,YAC/BwyC,EAAY1yC,SACZ70K,QAAM60K,OAAS0yC,EAAY1yC,QAC3B0yC,EAAY3yC,SACZ50K,QAAM40K,OAAS2yC,EAAY3yC,QAC3Bz4K,OAAOS,QACPoD,QAAM+hI,QAAU,KACXwlF,EAAYroD,kBACjBl/J,QAAM+hI,QAAUwlF,EAAYroD,iBAEzB5+J,OAASN,MAAQA,QAExB+zB,mBAAmBwsB,WACnB20J,eAAe30J,WACfqc,aAAarc,WACb8nF,aAAa9nF,SAASvgD,QAAOi8J,OAAOhwI,QAC7B3rB,OAAeC,OAAS,sBAAuBb,QAAQY,SAC1D+9H,MAAMqhC,kBAAmB,GAE7BrhC,MAAM99E,WACNk5H,aAAa+D,eAAgB,EAE7B7tI,QAAQ04K,SAAS1tL,gBAAgB/N,UAAWioL,WAC5CllK,QAAQ04K,SAAS1tL,gBAAgB/N,UAAY+N,gBAAgBM,WAAY45K,WACzEllK,QAAQ04K,SAAS1tL,gBAAgBK,UAAW45K,aAC5CjlK,QAAQ04K,SAAS1tL,gBAAgBkB,SAAU24K,QAEvCoT,EACOA,EAAOrnK,WAAWziB,MAAK,KAC1BwqL,GAAuBh5M,SAAQ9G,GAAKA,MACpC8/M,GAAuB3nN,OAAS,EAE5BV,QAAQsoN,YACJtoN,QAAQE,UACRF,QAAQsoN,YAERtoN,QAAQsoN,UAAY,KAC3B,KAILD,GAAuBh5M,SAAQ9G,GAAKA,MACpC8/M,GAAuB3nN,OAAS,EAE5BV,QAAQsoN,YACJtoN,QAAQE,UACRF,QAAQsoN,YAERtoN,QAAQsoN,UAAY,MAGrB3qL,QAAQC,U,CAIvBniC,sBACI,OAAO,IAAIugK,OAAO,EAAG,EAAGv8J,QAAQmiD,W,CAGpCnmD,qBAAqB4J,EAAYkjN,EAA8BpwE,GAC3Dz4I,KAAK8oN,YAAYnjN,GAAM,CAAEkjN,UAASpwE,S,CAOtC18I,wBAAwBiH,GACpB,IAAI+lN,EAAmB,EAEnBhpN,QAAQY,OAAO0mH,QADfrkH,EACyB,SAAUsqH,EAAap0G,EAAamsH,EAAc26D,EAAgBgpB,GACnFD,IAAa,GAAKC,GAClBjkN,KAAKkkN,MAAM,oBAAsB37F,EAAM,KAAO07F,EAAOx7F,MAC7D,EAEyB,I,CAOjCzxH,kBAAkBooC,GACd,OAAOpkC,QAAQY,OAAOX,KAAKkpN,SAAS/kL,E,CAOxCpoC,wBAAwBotN,EAAsB,0BAC1C,GAAMxoN,OAAqB,KAAc,WAQpCA,OAAqB,KAAc,WAAEk8C,aARE,CACxC,IAAI1Y,EAAcpkC,QAAQ0+C,cAAc,UACxCta,EAAOwjF,OAAS,WACXhnH,OAAqB,KAAc,WAAEk8C,QAC1C,EACA1Y,EAAOwD,IAAMwhL,EACbppN,QAAQw8C,SAAS0B,KAAKS,YAAYva,EACrC,C,CAQGpoC,sBACAiE,KAAKwvK,wBAETxvK,KAAKwvK,uBAAwB,EAC7BrhJ,cAAc/gB,MAAQrN,QAAQY,OAAO0gD,WACrClzB,cAAc9gB,OAAStN,QAAQY,OAAO6gD,YACtCzhD,QAAQsiD,YAAc,SAAUve,EAAawe,GAEzC,OADC3hD,OAAgC,gBAAE2hD,KAAOA,EAClC3hD,OAAgC,gBAAE0hD,YAAYve,EAC1D,EAEAktI,MAAMthK,MAAQ,SAAU9M,GACpB9C,QAAQ4rF,oBACR,IAAI7iF,EAAW4tC,WAAWhqC,OAAO7J,GAAO8zC,SAExC7nC,OAAO+Y,aAAagM,mBAAmBhF,kBAAgBO,MAAQP,kBAAgBiF,MAAO,IAAI1E,MAAMtmB,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAK,GAGzHslB,cAAcze,OAClB,EAEA6xE,OAAOm6B,aAAe,SAAUloE,EAAgB0V,EAAqB2uB,EAAqB8jC,EAAsBlqF,EAAiBC,GAC7HD,GAAW+hB,EAAOvvC,EAClBytB,GAAW8hB,EAAOtvC,EAClButB,GAAW,EACXC,GAAW,EACXmmD,GAAe,EACf8jC,GAAgB,EAEhB,IAAI/8C,EAAmB,IAAIgiC,YAAW,GAClCphE,EAAeo/B,EAAKua,WAAW,MASnC,OARAva,EAAK9mD,KAAK+/D,EAAa8jC,GAEvBn8E,EAAIC,UAAW,EACfD,EAAIO,SAAS/f,QACbi9C,aAAac,QAAQ7U,GAAarV,KAAKL,EAAQhU,EAAK/N,EAASC,GAC7D8N,EAAIQ,QACJR,EAAIO,SAAS7f,MACbsf,EAAIO,SAAS9N,UACN2sC,CACX,EAEAhlD,OAAuB,eAAE4Y,gBAAgB2yF,UAAW,KAAM,CACtD5kF,IAAO,WACH,OAAOx7B,KAAK84B,G,EAEhBre,IAAO,SAAUW,GACbpb,KAAK84B,IAAM1d,C,IAInBygF,WAAWukB,UAAUjkB,WAAa,WAU9B,OATKn8F,KAAK4V,WAEN5V,KAAK4V,SAAW5V,KAAKwnB,QAAQwT,SAG7Bh7B,KAAK4V,SAAS4hB,GAAK/J,gBAAgBD,QAEnCxtB,KAAK4V,SAASiiB,OAAS73B,KAAK4V,UAEzB5V,KAAK4V,QAChB,E,CAQJ5e,oBAAoBoT,GACZw4M,GACAx4M,IAEAw5M,GAAuBvnN,KAAK+N,E,EAIxC,SAAS04M,iBAAoC7nM,EAAeE,GACxD,IAAIkpM,EAAwB,IAAI7qM,WAAWxZ,KAAMib,EAAOE,EAAMF,GAC1DqpM,EAAwB,IAAI9qM,WAAW6qM,EAAUpoN,QAErD,OADAqoN,EAAU7pM,IAAI4pM,GACPC,EAAU3qM,MACrB,CAEA,SAASspM,kBAGL,IAFA,IAAInkM,EAAa9e,KAAK/D,OAClBwL,EAAkB,IAAI+R,WAAWxZ,KAAK/D,QACjCwC,EAAY,EAAGA,EAAIqgB,EAAIrgB,IAAKgJ,EAAIhJ,GAAKuB,KAAKvB,GACnD,OAAOgJ,CACX,CAEA,SAASs7M,oBAGL,IAFA,IAAIjkM,EAAa9e,KAAK/D,OAClBwL,EAAoB,IAAI4T,aAAarb,KAAK/D,QACrCwC,EAAY,EAAGA,EAAIqgB,EAAIrgB,IAAKgJ,EAAIhJ,GAAKuB,KAAKvB,GACnD,OAAOgJ,CACX,CAEA,SAASu7M,oBAAuCuB,GAC5C,IAAIzlM,EACArX,EACAhJ,EACJ,GAAmB,IAAf8lN,EAAItoN,OAGJ,IAFA6iB,EAAK9e,KAAK/D,OACVwL,EAAM,IAAIse,YAAYjH,GACjBrgB,EAAI,EAAGA,EAAIqgB,EAAIrgB,IAChBgJ,EAAIhJ,GAAKuB,KAAKvB,QAEf,GAAmB,IAAf8lN,EAAItoN,OAAc,CACzB,IAAIgf,EAAgBspM,EAAI,GACpBppM,EAAcopM,EAAI,GAEtB,GAAIppM,EAAMF,EAGN,IAFA6D,EAAK3D,EAAMF,EACXxT,EAAM,IAAIse,YAAYjH,GACjBrgB,EAAIwc,EAAOxc,EAAI0c,EAAK1c,IACrBgJ,EAAIhJ,EAAIwc,GAASjb,KAAKvB,QAE1BgJ,EAAM,IAAIse,YAAY,EAE7B,CACD,OAAOte,CACX,CAvWWxM,KAAKK,MAAU,KAGfL,KAAWG,YAAU,KAErBH,KAAYI,aAAU,KAEtBJ,KAAKE,MAAU,KAEfF,KAAMC,OAAW,KAMjBD,KAAmBupN,qBAAY,EAE/BvpN,KAAUwpN,YAAY,EAEtBxpN,KAAW8oN,YAAoF,GA8LvF9oN,KAAAkpN,QAAkB,OAwBlBlpN,KAAqBwvK,uBAAY,EAiIpD5vK,MAAMC,OAASA,OACfD,MAAME,QAAUA,QAChBF,MAAMG,QAAUA,QAEhB,IAAI4nN,IAAU,EACVgB,GAA4C,GAGrCtU,GAAOr0M,KAAKq0M,KAEZh0M,eAEAF,qBAEAC,sBAEAF,eAEAD,gBAEAw1C,gBAMA,IAAAg0K,GAAmBzpN,KAAKypN,iBAExBC,GAAmB1pN,KAAK0pN,iBC9a7B,MAAOC,mBAAmB7kN,UAAhCxD,c,oBAEIyD,KAAQwrG,SAAW,IAEnBxrG,KAAKw+C,MAAW,EAEhBx+C,KAAMgoF,OAAW,EAQjBhoF,KAAqB6kN,uBAAY,C,CAKvBljN,WACN3B,KAAKqK,OAASrK,KAAKqK,QAAmBrK,KAAKc,MACvCd,KAAK6kN,wBACL7kN,KAAK8kN,SAAW55G,QAAQxjG,OAAO1H,KAAKqK,OAAQrK,KAAKqK,OAAOlH,QAAS,MAAM,IACvEnD,KAAK2mL,UACL3mL,KAAKc,MAAM2Q,GAAGzR,KAAK2mL,UAAW3mL,KAAMA,KAAK+kN,WAEzC/kN,KAAK+kN,W,CAGHA,YACN/kN,KAAKkvG,OAASlvG,KAAKglN,WACnBhlN,KAAKkvG,OAAOlnB,OAAShoF,KAAKgoF,M,CAGpBg9H,WACN,OAAO,I,CAGXxhN,UACIxD,KAAKwrG,SAAW,IAChBxrG,KAAKw+C,MAAQ,EACbx+C,KAAKgoF,OAAS,EACdhoF,KAAKyrG,KAAO,KACZzrG,KAAKqK,OAAS,KACVrK,KAAK2mL,YACL3mL,KAAKc,MAAM8Q,IAAI5R,KAAK2mL,UAAW3mL,KAAMA,KAAK+kN,WAC1C/kN,KAAK2mL,UAAY,MAEjB3mL,KAAK8kN,WACL9kN,KAAK8kN,SAASroN,UACduD,KAAK8kN,SAAW,MAEhB9kN,KAAKkvG,SACLlvG,KAAKkvG,OAAOvkG,QACZ3K,KAAKkvG,OAAS,K,QC3Db+1G,UAEFA,SAAQC,SAAW,GAEnBD,SAAQE,SAAW,GAEnBF,SAAQG,SAAW,GAEnBH,SAAQI,SAAW,GAEnBJ,SAAQK,SAAW,GAEnBL,SAAQM,SAAW,GAEnBN,SAAQO,SAAW,GAEnBP,SAAQQ,SAAW,GAEnBR,SAAQS,SAAW,GAEnBT,SAAQU,SAAW,GAGnBV,SAACW,EAAW,GAEZX,SAACY,EAAW,GAEZZ,SAACa,EAAW,GAEZb,SAACc,EAAW,GAEZd,SAACe,EAAW,GAEZf,SAACgB,EAAW,GAEZhB,SAACiB,EAAW,GAEZjB,SAACkB,EAAW,GAEZlB,SAACloJ,EAAW,GAEZkoJ,SAACmB,EAAW,GAEZnB,SAACoB,EAAW,GAEZpB,SAACqB,EAAW,GAEZrB,SAACsB,EAAW,GAEZtB,SAACuB,EAAW,GAEZvB,SAACwB,EAAW,GAEZxB,SAACyB,EAAW,GAEZzB,SAAC0B,EAAW,GAEZ1B,SAAC2B,EAAW,GAEZ3B,SAAC4B,EAAW,GAEZ5B,SAAC6B,EAAW,GAEZ7B,SAAC8B,EAAW,GAEZ9B,SAAC+B,EAAW,GAEZ/B,SAACgC,EAAW,GAEZhC,SAACiC,EAAW,GAEZjC,SAACkC,EAAW,GAEZlC,SAACmC,EAAW,GAGZnC,SAAEoC,GAAW,IAEbpC,SAAEqC,GAAW,IAEbrC,SAAEsC,GAAW,IAEbtC,SAAEuC,GAAW,IAEbvC,SAAEwC,GAAW,IAEbxC,SAAEyC,GAAW,IAEbzC,SAAE0C,GAAW,IAEb1C,SAAE2C,GAAW,IAEb3C,SAAE4C,GAAW,IAEb5C,SAAG6C,IAAW,IAEd7C,SAAG8C,IAAW,IAEd9C,SAAG+C,IAAW,IAEd/C,SAAGgD,IAAW,IAEdhD,SAAGiD,IAAW,IAEdjD,SAAGkD,IAAW,IAGdlD,SAAMmD,OAAW,GAEjBnD,SAAQoD,SAAW,GAEnBpD,SAAQqD,SAAW,GAEnBrD,SAAQsD,SAAW,GAEnBtD,SAAQuD,SAAW,GAEnBvD,SAAQwD,SAAW,IAEnBxD,SAAQyD,SAAW,IAEnBzD,SAAQ0D,SAAW,IAEnB1D,SAAQ2D,SAAW,IAEnB3D,SAAQ4D,SAAW,IAEnB5D,SAAQ6D,SAAW,IAGnB7D,SAAU8D,WAAW,IAErB9D,SAAc+D,eAAW,IAEzB/D,SAAagE,cAAW,IAExBhE,SAAYiE,aAAW,IAEvBjE,SAAekE,gBAAW,IAE1BlE,SAAemE,gBAAW,IAE1BnE,SAASoE,UAAW,IAEpBpE,SAAK1sE,MAAW,IAEhB0sE,SAAKqE,MAAW,IAEhBrE,SAAKsE,MAAW,IAEhBtE,SAAMuE,OAAW,IAEjBvE,SAAKwE,MAAW,IAEhBxE,SAASyE,UAAW,IAEpBzE,SAAW0E,YAAW,IAEtB1E,SAAS2E,UAAW,IAEpB3E,SAAY4E,aAAW,IAEvB5E,SAAK6E,MAAW,IAEhB7E,SAAS8E,UAAW,GAEpB9E,SAAS+E,UAAW,EAEpB/E,SAASgF,UAAW,GAEpBhF,SAAOiF,QAAW,GAElBjF,SAAOkF,QAAW,GAElBlF,SAAMmF,OAAW,GAEjBnF,SAAK91M,MAAW,GAEhB81M,SAAMoF,OAAW,GAEjBpF,SAAOqF,QAAW,GAElBrF,SAASsF,UAAW,GAEpBtF,SAAGp1M,IAAW,GAEdo1M,SAAIuF,KAAW,GAEfvF,SAAIwF,KAAW,GAEfxF,SAAEyF,GAAW,GAEbzF,SAAK0F,MAAW,GAEhB1F,SAAI2F,KAAW,GAEf3F,SAAK4F,MAAW,GAEhB5F,SAAK6F,MAAW,GAEhB7F,SAAG8F,IAAW,EAEd9F,SAAM+F,OAAW,G,MCzMfC,aAIFA,YAAQC,SAAW,EAInBD,YAAIR,KAAW,EAIfQ,YAAKN,MAAW,EAKhBM,YAAOE,QAAW,E,MCfhBC,eAQT7uN,cALAyD,KAAM4kF,OAAqB,E,CAY3B6wE,eACI,OAAOz1J,KAAK4kF,M,CAOhBymI,WACI,OAAOrrN,KAAK4kF,OAAO3oF,M,CAQvBqvN,iBAAiBC,GACbvrN,KAAK4kF,OAAOvoF,KAAKkvN,E,QC7BZC,cAuDTjvN,c,CAhDAvF,kBAAkBuU,GACd,OAAOigN,cAAcC,eAAelgN,E,CAIxCvU,0BAA0BuU,EAAW8H,GAAiB,GAClD,GAAKA,IAASm4M,cAAcE,UAAUngN,GAAtC,CAGA,GADAigN,cAAcE,UAAUngN,IAAQ,GAC3BigN,cAAcG,oBAAoBpgN,GAAO,CAC1C,IACI2tD,EADA76D,EAAa,GAGjB,IADA66D,EAAQ,EACDA,GAAS3tD,GACR2tD,EAAQ3tD,GACRlN,EAAIhC,KAAKmvN,cAAcI,WAAW1yJ,EAAQ3tD,IAE9C2tD,IAAiB,EAErBsyJ,cAAcG,oBAAoBpgN,GAAQlN,EAAIkgB,KAAK,IACtD,CACDjnB,QAAQovB,IAAI,OAAQ8kM,cAAcG,oBAAoBpgN,GAdlD,C,CAmBRvU,kBAEIw0N,cAAcC,eAAe51K,YAAYxK,OAAS,QAClDmgL,cAAcC,eAAe51K,YAAYM,WAAa,YACtDq1K,cAAcC,eAAe51K,YAAYY,SAAW,UACpD+0K,cAAcC,eAAe51K,YAAYa,UAAY,WACrD80K,cAAcC,eAAe51K,YAAYgB,UAAY,WACrD20K,cAAcC,eAAe51K,YAAYkB,QAAU,SACnDy0K,cAAcC,eAAe51K,YAAYM,UAAYN,YAAYxK,OAAS,kBAE1EmgL,cAAcC,eAAe51K,YAAYQ,QAAU,SACnDm1K,cAAcC,eAAe51K,YAAYO,OAAS,QAClDo1K,cAAcC,eAAe51K,YAAYS,SAAW,UACpDk1K,cAAcC,eAAe51K,YAAY/gB,MAAQ,OACjD02L,cAAcC,eAAe51K,YAAYU,MAAQ,OACjDi1K,cAAcC,eAAe51K,YAAYc,UAAY,U,CAiBzDjG,OAAOlpB,EAAkBtoB,EAAWC,GAChCqsN,cAAcK,SAAS7rN,KAAKmkD,aAC5BqnK,cAAcM,mBAAmB9rN,KAAKmkD,aAKtC+T,aAAac,QAAQh5D,KAAKmkD,aAAarV,KAAK9uC,KAAMwnB,EAAStoB,EAAIc,KAAK03D,GAAIv4D,EAAIa,KAAK23D,IACjF33D,KAAK2kG,SAAW,C,CAOpBonH,aAAavkM,EAAkBtoB,EAAWC,GACtCqsN,cAAcQ,cACdR,cAAcS,gBAAgB7uN,KAAKvC,MAAMS,MAAOksB,EAAStoB,EAAGC,GAC5DqsN,cAAcU,W,CAKVl1N,qBACJ,IAAIoV,EACJ,IAAKA,KAAOo/M,cAAcW,UACtBX,cAAcW,UAAU//M,GAAO,C,CAM/BpV,mBACJw0N,cAAcY,KACVZ,cAAcY,GAAK,KACnBZ,cAAca,gBACdb,cAAcY,GAAK,E,CAKnBp1N,gBAAgBuU,GACfigN,cAAcW,UAAU5gN,GAGzBigN,cAAcW,UAAU5gN,IAAS,EAFjCigN,cAAcW,UAAU5gN,GAAQ,C,CAOxCvU,uBAEI,IAAIoV,EACJ,IAAKA,KAFL9U,QAAQovB,IAAI,uBAEA8kM,cAAcW,UACtB70N,QAAQovB,IAAI,SAAW8kM,cAAcW,UAAU//M,IAC/Co/M,cAAcM,mBAAmB1/M,GAAK,E,CAK9CpV,yBACIw0N,cAAc3vK,WACd2gC,OAAkB,UAAU,OAAIgvI,cAAyB,UAAU,OACnEA,cAAcS,gBAAkBhgD,MAAiB,UAAU,OAC3DA,MAAiB,UAAU,OAAIu/C,cAAyB,UAAgB,Y,EA/H7DA,cAASE,UAAQ,GACjBF,cAAmBG,oBAAQ,GAC3BH,cAAcC,eAAQ,GAiFtBD,cAASW,UAAQ,GASjBX,cAAEY,GAAW,EC1E1B,MAAOE,eAAex7M,gBAsFxBvU,YAAYshC,EAAsB,KAAM0uL,EAAe,EAAGC,EAA2B,KAAMC,EAA0B,KAAMC,GAAoB,GAC3Ir6M,QA1DJrS,KAAY2sN,cAAY,EAUxB3sN,KAASysN,UAAQ,GAiDbzsN,KAAK4sN,WAAaJ,GAAwBtzM,KAC1ClZ,KAAKysN,UAAYA,EACjBzsN,KAAKsa,OAASgyM,OAAOnyM,WACjB0jB,GAAQ0uL,EAAO,GAAKA,EAAO,OAAOvsN,KAAK+2K,QAAQl5I,EAAM0uL,EAAMG,E,CA/C/DxyD,YACA,OAAOl6J,KAAK6sN,M,CAMZC,aACA,OAAO9sN,KAAK+sN,O,CAMZC,gBACA,OAAOhtN,KAAKitN,U,CAQZ3yM,aACA,OAAOta,KAAKktN,O,CAGZ5yM,WAAOrc,GACP+B,KAAKktN,QAAUjvN,EACI,MAAf+B,KAAK6sN,SAAgB7sN,KAAK6sN,OAAOvyM,OAASrc,GAC1B,MAAhB+B,KAAK+sN,UAAiB/sN,KAAK+sN,QAAQzyM,OAASrc,E,CA2BpD84K,QAAQl5I,EAAc0uL,EAAcG,GAAoB,GACpD,IAAIv4M,EAAc,EAAa,MAAQ,QAAe0pB,EAAO,IAAM0uL,EACnEvsN,KAAKmtN,aAAah5M,E,CAQtBg5M,aAAah5M,GACW,MAAhBnU,KAAKotN,SAAiBptN,KAAKy2F,QAE/Bz2F,KAAKotN,SAAWptN,KAAKqtN,cAEhBrtN,KAAKysN,WAAsC,GAAzBzsN,KAAKysN,UAAUxwN,OAGlC+D,KAAKotN,QAAU,IAAIpyN,QAAQY,OAAO0xN,UAAUn5M,EAAKnU,KAAKysN,WAFtDzsN,KAAKotN,QAAU,IAAIpyN,QAAQY,OAAO0xN,UAAUn5M,GAKhDnU,KAAKotN,QAAQG,WAAa,cAE1BvtN,KAAK+sN,QAAU,IAAI/sN,KAAK4sN,WACxB5sN,KAAK+sN,QAAQzyM,OAASta,KAAKsa,OAC3Bta,KAAK6sN,OAAS,IAAI7sN,KAAK4sN,WACvB5sN,KAAK6sN,OAAOvyM,OAASta,KAAKsa,OAC1Bta,KAAKwtN,kBAAoB,EAEzBxtN,KAAKotN,QAAQK,OAAU5sM,IACnB7gB,KAAK0tN,QAAQ7sM,EAAE,EAEnB7gB,KAAKotN,QAAQlyG,UAAaqN,IACtBvoH,KAAK2tN,WAAWplG,EAAI,EAExBvoH,KAAKotN,QAAQQ,QAAW/sM,IACpB7gB,KAAK6tN,SAAShtM,EAAE,EAEpB7gB,KAAKotN,QAAQ9qG,QAAWzhG,IACpB7gB,KAAKuiH,SAAS1hG,EAAE,C,CAOxBwsM,cACIrtN,KAAKy2F,QACLz2F,KAAKitN,YAAa,EAClBjtN,KAAKotN,QAAQK,OAAS,KACtBztN,KAAKotN,QAAQlyG,UAAY,KACzBl7G,KAAKotN,QAAQQ,QAAU,KACvB5tN,KAAKotN,QAAQ9qG,QAAU,KACvBtiH,KAAKotN,QAAU,I,CAMnB32H,QACI,GAAoB,MAAhBz2F,KAAKotN,QACL,IACIptN,KAAKotN,QAAQ32H,OAChB,CAAC,MAAO51E,GACR,C,CAQC6sM,QAAQ7sM,GACd7gB,KAAKitN,YAAa,EAClBjtN,KAAKmR,MAAMjG,MAAM6D,KAAM8R,E,CAQjB8sM,WAAWplG,GACjB,GAAKA,GAAQA,EAAIrmH,KAAjB,CACA,IAAIA,EAAYqmH,EAAIrmH,KACpB,GAAIlC,KAAK2sN,cAAgBzqN,EACrBlC,KAAKmR,MAAMjG,MAAM8D,QAAS9M,OAD9B,CAIIlC,KAAK6sN,OAAO5wN,OAAS,GAAK+D,KAAK6sN,OAAOluM,eAAiB,IACvD3e,KAAK6sN,OAAOliN,QACZ3K,KAAKwtN,kBAAoB,GAE7B,IAAI7oL,EAAc3kC,KAAK6sN,OAAOrvM,KAC7Bxd,KAAKwtN,oBAAsBxtN,KAAKwtN,kBAAoB,GACrDxtN,KAAK6sN,OAAOrvM,IAAMxd,KAAKwtN,kBAEnBtrN,IACqB,iBAAjB,EACAlC,KAAK6sN,OAAOhuM,cAAc3c,GAE1BlC,KAAK6sN,OAAOtsM,iBAAiBre,GAEjClC,KAAKwtN,kBAAoBxtN,KAAK6sN,OAAOrvM,IACrCxd,KAAK6sN,OAAOrvM,IAAMmnB,GAEtB3kC,KAAKmR,MAAMjG,MAAM8D,QAAS9M,EAlBzB,CALsB,C,CA8BjB2rN,SAAShtM,GACf7gB,KAAKitN,YAAa,EAClBjtN,KAAKmR,MAAMjG,MAAM+D,MAAO4R,E,CAOlB0hG,SAAS1hG,GACf7gB,KAAKmR,MAAMjG,MAAMsD,MAAOqS,E,CAO5B6gG,KAAKx/G,GACDlC,KAAKotN,QAAQ1rG,KAAKx/G,E,CAMtB+4B,QACI,GAAIj7B,KAAK+sN,SAAW/sN,KAAK+sN,QAAQ9wN,OAAS,EAAG,CACzC,IAAIs/G,EACJ,IACIv7G,KAAKotN,SAAWptN,KAAKotN,QAAQ1rG,KAAK1hH,KAAK+sN,QAAQnuM,cAAcvE,MAAM,EAAGra,KAAK+sN,QAAQ9wN,QACtF,CAAC,MAAO4kB,GACL06F,EAAM16F,CACT,CACD7gB,KAAK+sN,QAAQzyM,OAASta,KAAKsa,OAC3Bta,KAAK+sN,QAAQpiN,QACT4wG,GAAKv7G,KAAKmR,MAAMjG,MAAMsD,MAAO+sG,EACpC,C,EAnPE+wG,OAAapyM,cAAW,eAMxBoyM,OAAUnyM,WAAW,Y,MC1CnB2zM,WAST92N,cACI,IAAI82N,WAAWC,OAAf,CAEAD,WAAWC,OAAS,IAAIv0M,WAAW,KACnC,IAAK,IAAI/a,EAAY,EAAGA,EAAIqvN,WAAWh8I,MAAM71E,OAAQwC,IACjDqvN,WAAWC,OAAOD,WAAWh8I,MAAM/yD,WAAWtgB,IAAMA,CAHpD,C,CAWRzH,sBAAsB+G,GAClB,OAAO+vN,WAAWz3L,IAAIonB,KAAK1/C,E,CAS/B/G,cAAcwpB,GACV,IAAqD/hB,EAAjDuvN,EAAoB,IAAIx0M,WAAWgH,GAAyBhiB,EAAcwvN,EAAc,OAAGpxH,EAAiB,GAEhH,IAAKn+F,EAAI,EAAGA,EAAID,EAAKC,GAAK,EACtBm+F,GAAUkxH,WAAWh8I,MAAMk8I,EAAMvvN,IAAM,GACvCm+F,GAAUkxH,WAAWh8I,OAAmB,EAAXk8I,EAAMvvN,KAAW,EAAMuvN,EAAMvvN,EAAI,IAAM,GACpEm+F,GAAUkxH,WAAWh8I,OAAuB,GAAfk8I,EAAMvvN,EAAI,KAAY,EAAMuvN,EAAMvvN,EAAI,IAAM,GACzEm+F,GAAUkxH,WAAWh8I,MAAqB,GAAfk8I,EAAMvvN,EAAI,IAUzC,OAPKD,EAAM,GAAO,EACdo+F,EAASA,EAAOt+F,UAAU,EAAGs+F,EAAO3gG,OAAS,GAAK,IAE7CuC,EAAM,GAAM,IACjBo+F,EAASA,EAAOt+F,UAAU,EAAGs+F,EAAO3gG,OAAS,GAAK,MAG/C2gG,C,CASX5lG,cAAc4lG,GACVkxH,WAAWxe,OACX,IAA8E7wM,EAA0BwvN,EAAkBC,EAAkBC,EAAkBC,EAA1J9hK,EAAuC,IAAhBswC,EAAO3gG,OAAeuC,EAAco+F,EAAO3gG,OAAmB+yC,EAAY,EAEnE,MAA9B4tD,EAAOA,EAAO3gG,OAAS,KACvBqwD,IACkC,MAA9BswC,EAAOA,EAAO3gG,OAAS,IACvBqwD,KAIR,IAAI9rC,EAA2B,IAAIzG,YAAYuyC,GAAe0hK,EAAoB,IAAIx0M,WAAWgH,GAEjG,IAAK/hB,EAAI,EAAGA,EAAID,EAAKC,GAAK,EACtBwvN,EAAWH,WAAWC,OAAOnxH,EAAO79E,WAAWtgB,IAC/CyvN,EAAWJ,WAAWC,OAAOnxH,EAAO79E,WAAWtgB,EAAI,IACnD0vN,EAAWL,WAAWC,OAAOnxH,EAAO79E,WAAWtgB,EAAI,IACnD2vN,EAAWN,WAAWC,OAAOnxH,EAAO79E,WAAWtgB,EAAI,IAEnDuvN,EAAMh/K,KAAQi/K,GAAY,EAAMC,GAAY,EAC5CF,EAAMh/K,MAAoB,GAAXk/K,IAAkB,EAAMC,GAAY,EACnDH,EAAMh/K,MAAoB,EAAXm/K,IAAiB,EAAiB,GAAXC,EAG1C,OAAO5tM,C,EAhFJstM,WAAKh8I,MAAW,mEAChBg8I,WAAGz3L,IAAG,6GACNy3L,WAAOO,QAAG,qEAGVP,WAAMC,OAAe,K,MCDnBO,IAgBTt3N,gBACSs3N,IAAIC,UACLD,IAAIC,QAAUvzN,QAAQ0+C,cAAc,OACpC40K,IAAIC,QAAQp1K,MAAMmhH,QAAU,kKAC5Bt/J,QAAQw8C,SAAS0B,KAAKS,YAAY20K,IAAIC,SAEtCD,IAAIE,KAAOxzN,QAAQ0+C,cAAc,UACjC40K,IAAIE,KAAKtxD,UAAY,OACrBoxD,IAAIE,KAAKr1K,MAAMmhH,QAAU,yDACzBg0D,IAAIE,KAAKC,QAAUH,IAAII,OACvB1zN,QAAQw8C,SAAS0B,KAAKS,YAAY20K,IAAIE,M,CAK9Cx3N,gBACI,IAAImiD,EAAam1K,IAAIC,QAAQp1K,MACP,KAAlBA,EAAMkvD,SACNimH,IAAIE,KAAKtxD,UAAY,OACrB/jH,EAAMkvD,QAAU,SAEhBimH,IAAIE,KAAKtxD,UAAY,OACrB/jH,EAAMkvD,QAAU,G,CAQxBrxG,aAAaiH,GACLqwN,IAAIC,UAEAD,IAAIvqL,QAAUuqL,IAAIK,UAAUL,IAAI3jN,QACpC2jN,IAAIvqL,SAEJuqL,IAAIC,QAAQrxD,WAAaj/J,EAAQ,KAE7BqwN,IAAIM,oBACAN,IAAIC,QAAQM,aAAeP,IAAIC,QAAQvyD,UAAYsyD,IAAIC,QAAQhyK,aAAe,KAC9E+xK,IAAIC,QAAQvyD,UAAYsyD,IAAIC,QAAQM,c,CASpD73N,eACIs3N,IAAIC,QAAQrxD,UAAY,GACxBoxD,IAAIvqL,OAAS,C,EA5DFuqL,IAAMvqL,OAAW,EAEzBuqL,IAAQK,SAAW,GAEnBL,IAAkBM,oBAAY,E,MCZ5BE,SAOTvyN,YAAYqE,EAAY/C,EAAekX,EAActQ,GAHrDzE,KAAKyE,MAAW,EAChBzE,KAAA+uN,MAAe,IAAI19M,MATT,KAUVrR,KAAOgvN,QAAW,EAEdhvN,KAAKY,GAAKA,EACVZ,KAAKnC,MAAQA,EACbmC,KAAK+U,KAAOA,EACZ/U,KAAKyE,MAAQA,C,CAEjBqtD,QAAQ12C,GACJpb,KAAK+uN,MAAM/uN,KAAKgvN,SAAW5zM,EAC3Bpb,KAAKgvN,UACLhvN,KAAKgvN,SApBC,G,ECMR,MAAOC,gBAAgBzyI,OAwBzBjgF,cACI8V,QAtBIrS,KAAK+uN,MAAU,GAGvB/uN,KAAKkvN,MAAU,IAAI79M,MAAM49M,QAAQE,SACjCnvN,KAAKovN,MAAU,IAAI/9M,MAAM49M,QAAQE,SAEjCnvN,KAASqvN,UAAW,IACpBrvN,KAAUsvN,WAAW,IAErBtvN,KAAKuvN,MAAW,EAChBvvN,KAAKwvN,MAAW,IAERxvN,KAASyvN,UAAW,GAIpBzvN,KAAI0vN,KAAW,EAOnBT,QAAQryL,KAAO58B,KACfA,KAAKmkD,aAAetO,YAAYe,OAChC52C,KAAKmyG,mBAELnyG,KAAK2vN,WAAW,EAAG,SAAU,QAAS,GACtC3vN,KAAK2vN,WAAW,EAAG,MAAU,SAAU,GACvC3vN,KAAK2vN,WAAW,EAAG,SAAU,QAAS,GACtCV,QAAQW,KAAO5nF,YAAcA,YAAY7rF,IAAIgO,KAAK69E,aAAe9rF,KAAKC,G,CAI1EA,MACI,OAAO8yK,QAAQW,M,CAInB30M,QACIjb,KAAK0vN,KAAOT,QAAQW,M,CAIxBz0M,IAAI1c,GACA,IAAIy8B,EAAa+zL,QAAQW,OAAS5vN,KAAK0vN,KACvC1vN,KAAK6vN,YAAYpxN,EAAGy8B,E,CAIxBkvF,OAAOn8F,EAAWC,GACdluB,KAAKqvN,UAAYphM,EACjBjuB,KAAKsvN,WAAaphM,C,CAItByhM,WAAW/uN,EAAY/C,EAAekX,EAActQ,GAChDzE,KAAK+uN,MAAMnuN,GAAM,IAAIkuN,SAASluN,EAAI/C,EAAOkX,EAAMtQ,E,CAInDorN,YAAYjvN,EAAYwa,GACpBpb,KAAK+uN,MAAMnuN,GAAIkxD,QAAQ12C,E,CAI3B00M,IAAI10M,GAEA,OADiBpb,KAAK23D,GAAK33D,KAAKsvN,WAAuBtvN,KAAKuvN,MAASvvN,KAAKwvN,MACnExvN,KAAK23D,GAAK33D,KAAKsvN,YAAc,GAAKl0M,EAAIpb,KAAKuvN,OAASvvN,KAAKwvN,M,CAIpEO,UAAUt1L,EAAcrf,EAAWvd,EAAeqiC,GAC9C,IAAI0yC,EAAa5yE,KAAK03D,GACL13D,KAAK03D,GAAK13D,KAAKqvN,UAChC,IAAIx8I,EAAa7yE,KAAK8vN,IAAI10M,GAC1Bqf,EAAIs6C,SAAS70C,EAAM0yC,EAAIC,EAAK,EAAG,KAAM,QAAS,MAC9CD,GAAM5yE,KAAKyvN,UACXh1L,EAAIgnC,UAAY5jE,EAChB48B,EAAIwvD,SAASrX,EAAIC,EAAI7yE,KAAK03D,GAAK13D,KAAKqvN,UAAW,EAAG,K,CAWtDl2J,aAAa1+B,EAAcv7B,EAAWC,GAClC,IAAIg9C,EAAc6rF,YAAY7rF,MAC1B8yK,QAAQe,SAAW,IAAGf,QAAQe,QAAU7zK,GAC5Cn8C,KAAK6vN,YAAY,EAAG1zK,EAAM8yK,QAAQe,SAClCf,QAAQe,QAAU7zK,EAElB1hB,EAAImU,OACJnU,EAAIwvD,SAASjqF,KAAK03D,GAAI13D,KAAK23D,GAAI33D,KAAKqvN,UAAWrvN,KAAKsvN,WAAa,EAAG,aACpE70L,EAAIw8B,YAAc,GAMlBj3D,KAAK+vN,UAAUt1L,EAAK,EAAG,QAAS,SAChCz6B,KAAK+vN,UAAUt1L,EAAK,GAAI,QAAS,QACjCz6B,KAAK+vN,UAAUt1L,EAAK,OAAQ,MAAO,KACnCz6B,KAAK+vN,UAAUt1L,EAAK,GAAI,QAAS,SACjCz6B,KAAK+vN,UAAUt1L,EAAK,OAAY,SAAU,IAC1Cz6B,KAAK+vN,UAAUt1L,EAAK,OAAS,EAAG,SAAU,IAC1Cz6B,KAAK+vN,UAAUt1L,EAAK,OAAY,SAAU,IAC1Cz6B,KAAK+vN,UAAUt1L,EAAK,GAAI,QAAS,SACjCz6B,KAAK+vN,UAAUt1L,EAAK,IAAK,QAAS,UAGlC,IAAK,IAAIw1L,EAAa,EAAGnxM,EAAa9e,KAAK+uN,MAAM9yN,OAAQg0N,EAAKnxM,EAAImxM,IAAM,CACpE,IAAIC,EAAelwN,KAAK+uN,MAAMkB,GAC9B,GAAKC,EAAL,CACA,IAAIC,EAAgBD,EAAGnB,MAAM9yN,OACzB63C,GAAc9zC,KAAKqvN,UAAYrvN,KAAKyvN,WAAaU,EACjDjoJ,EAAagoJ,EAAGlB,QAChBoB,EAAcpwN,KAAK03D,GAAK13D,KAAKyvN,UACjCh1L,EAAIgnC,UAAYyuJ,EAAGryN,MAmBnB,IAAK,IAAIwyN,EAAeF,EAAOjoJ,EAAKmoJ,EAAMnoJ,IAAM,CAC5C,IAAIgrB,EAAclzF,KAAK8vN,IAAII,EAAGnB,MAAM7mJ,GAAMgoJ,EAAGzrN,OAC7Cg2B,EAAIwvD,SAASmmI,EAAKl9H,EAAKp/C,EAAI9zC,KAAKsvN,WAAatvN,KAAK23D,GAAKu7B,EAAK,MAC5Dk9H,GAAOt8K,CACV,CAED,IAAKo0B,EAAK,EAAGA,EAAKgoJ,EAAGlB,QAAS9mJ,IAC1BgrB,EAAMlzF,KAAK8vN,IAAII,EAAGnB,MAAM7mJ,GAAMgoJ,EAAGzrN,OACjCg2B,EAAIwvD,SAASmmI,EAAKl9H,EAAKp/C,EAAI9zC,KAAKsvN,WAAatvN,KAAK23D,GAAKu7B,EAAK,MAC5Dk9H,GAAOt8K,CAjCF,CAoCZ,CACDrZ,EAAIvN,S,EA5JO+hM,QAAOe,QAAW,EAClBf,QAAIW,KAAiB,KAE7BX,QAAOE,QAAW,IAiBlBF,QAASqB,UAAW,E,MCrBlBC,UAAbh0N,cAUIyD,KAAQ2uN,SAAW,G,CAOnBjsH,eACI,OAAO5mG,KAAKM,cAAc4D,KAAKjE,K,CAQnC0mG,WAAWpvF,GACP,IAAIkzD,GACJA,EAAOzqE,KAAKM,cAAc4D,KAAKjE,OACtBE,OAAS+D,KAAK2uN,UACnBpoJ,EAAK77D,OAAO1K,KAAK2uN,SAAUpoJ,EAAKtqE,OAAS+D,KAAK2uN,S,CAUtD33N,2BAA2B+E,EAAc4yN,EAAmB,KACxD,IAAI/uJ,GACJA,EAAQ,IAAI2wJ,WACNx0N,KAAOA,EACb6jE,EAAM+uJ,SAAWA,EACjBtsH,YAAYmB,mBAAmB5jC,EAAM6iC,WAAWt4C,KAAKyV,GAAQA,EAAM8iC,aAAav4C,KAAKyV,G,QChDhF4wJ,cASTj0N,cAPAyD,KAAQ2sC,SAAa,GAErB3sC,KAAM/D,OAAW,C,CAWPw0N,KAAK/wK,GACP1/C,KAAK/D,SAAW+D,KAAK2sC,SAAS1wC,OAC9B+D,KAAK2sC,SAAStwC,KAAKqjD,GAEnB1/C,KAAK2sC,SAAS3sC,KAAK/D,QAAUyjD,C,CAMrC58C,IAAI48C,GACA,IAAIn1C,EAAQvK,KAAK2sC,SAASzuC,QAAQwhD,GACT,iBAApB,IAA2C,GAAVn1C,GAAeA,EAAQvK,KAAK/D,SAE9D+D,KAAK/D,SAAW+D,KAAK2sC,SAAS1wC,OAC9B+D,KAAK2sC,SAAStwC,KAAKqjD,GAEnB1/C,KAAK2sC,SAAS3sC,KAAK/D,QAAUyjD,EACjC1/C,KAAK/D,S,CAGTy0N,QAAQhxK,GACJ,IAAIn1C,EAAQvK,KAAK2sC,SAASzuC,QAAQwhD,GAClC,OAAW,GAARn1C,GAAWA,EAAMvK,KAAK/D,OACdsO,GACH,C,CAOZtH,OAAOy8C,GACH,IAAIn1C,EAAQvK,KAAK2sC,SAASzuC,QAAQwhD,IACpB,GAAVn1C,GAAeA,EAAQvK,KAAK/D,SAC5B+D,KAAK2sC,SAASpiC,GAASvK,KAAK2sC,SAAS3sC,KAAK/D,OAAS,GACnD+D,KAAK/D,S,CAQb0O,QACI3K,KAAK2sC,SAAW,GAChB3sC,KAAK/D,OAAS,C,CAMlBg/E,QACIj7E,KAAK2sC,SAAS1wC,OAAS+D,KAAK/D,M,CAGhCkH,UACInD,KAAK2sC,SAAW,I,ECrDlB,MAAOgkL,iBAAiB7/M,gBAA9BvU,c,oBAGYyD,KAAS4wN,UAAQ,GACjB5wN,KAAc6wN,eAAU,GAExB7wN,KAAS8wN,UAAW,EACpB9wN,KAAS+wN,UAAW,EACpB/wN,KAAUs2K,WAAW,EAErBt2K,KAAMgjG,OAAW,EAEjBhjG,KAASgxN,UAAW,EAEpBhxN,KAAcixN,eAAQ,GAEtBjxN,KAAckxN,gBAAY,EAC1BlxN,KAAYmxN,cAAY,EAExBnxN,KAAQoxN,UAAY,EAE5BpxN,KAAKyE,MAAW,EAERzE,KAAUksK,WAAW,GACrBlsK,KAAWqxN,YAAW,EACtBrxN,KAAMsxN,OAAW,C,CAUzBt6N,UAAUqT,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMhrF,EAAiB,GACzF,OAAO,IAAKkwM,UAAYhlH,GAAGthG,EAAQkhG,EAAOC,EAAUC,EAAMhrF,E,CAW9DzpB,YAAYqT,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMhrF,EAAiB,GAC3F,OAAO,IAAKkwM,UAAYlkI,KAAKpiF,EAAQkhG,EAAOC,EAAUC,EAAMhrF,E,CAWhEkrF,GAAGthG,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMhrF,EAAiB,GAClF,OAAOzgB,KAAKosB,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMhrF,GAAQ,E,CAW/DgsE,KAAKpiF,EAAakhG,EAAYC,EAAkBC,EAAiB,KAAMhrF,EAAiB,GACpF,OAAOzgB,KAAKosB,QAAQ/hB,EAAQkhG,EAAOC,EAAUC,EAAMhrF,GAAQ,E,CAIvD2L,QAAQ/hB,EAAakhG,EAAYC,EAAkBC,EAAgBhrF,EAAgBmrF,GACvF,IAAI2lH,EAAwBz1N,KAAKe,eAAe,YAAa20N,WAa7D,OAZAD,EAAW3lH,KAAOA,EAClB2lH,EAAWhmN,KAAO,EAClBgmN,EAAWlnN,OAASA,EACpBknN,EAAW/lH,SAAWA,EACtB+lH,EAAWrvN,KAAOqpG,EAClBgmH,EAAW1jH,UAAY7tG,KAAKs2K,WAAa71J,EACzC8wM,EAAWE,QAAUF,EAAW1jH,UAAY0jH,EAAW/lH,SACvD+lH,EAAW9lH,KAAOA,EAClBzrG,KAAKs2K,WAAa/4K,KAAKuL,IAAIyoN,EAAWE,QAASzxN,KAAKs2K,YACpDt2K,KAAK6wN,eAAex0N,KAAKk1N,GACzBvxN,KAAKkxN,gBAAiB,EACtBlxN,KAAKmxN,cAAe,EACbnxN,I,CAQX65G,SAASN,EAAe94F,GACpB,IAAI8wM,EAAwBz1N,KAAKe,eAAe,YAAa20N,WAO7D,OANAD,EAAWhmN,KAAO,EAClBgmN,EAAWrvN,KAAOq3G,EAClBg4G,EAAWE,QAAUF,EAAW1jH,UAAY7tG,KAAKs2K,WAAa71J,EAC9DzgB,KAAK0xN,YAAc1xN,KAAK0xN,UAAY,IACpC1xN,KAAK0xN,UAAUn4G,GAASg4G,EACxBvxN,KAAK6wN,eAAex0N,KAAKk1N,GAClBvxN,I,CAOX85G,YAAYP,GACR,GAAIv5G,KAAK0xN,WAAa1xN,KAAK0xN,UAAUn4G,GAAQ,CACzC,IAAIg4G,EAAwBvxN,KAAK0xN,UAAUn4G,GAC3C,GAAIg4G,EAAY,CACZ,IAAII,EAAiB3xN,KAAK6wN,eAAe3yN,QAAQqzN,GAC7CI,GAAU,GACV3xN,KAAK6wN,eAAenmN,OAAOinN,EAAQ,EAE1C,QACM3xN,KAAK0xN,UAAUn4G,EACzB,C,CAOLq4G,SAAS3kH,GACL,GAA2B,MAAvBjtG,KAAK6wN,gBAAwD,GAA9B7wN,KAAK6wN,eAAe50N,OAAvD,CACA,IAAI41N,EACAC,EAoBAC,EAmBAR,EAtCJ,IAAK,IAAIviL,KAAKhvC,KAAKixN,eAEf,GADAa,EAAU9xN,KAAKixN,eAAejiL,GAE1B,IAAK,IAAIgjL,KAAUF,EACXE,KAAUF,EAAQG,YAClBH,EAAQG,UAAUD,GAAUF,EAAQE,IAKpD,IAAKhjL,KAAKhvC,KAAK4wN,WACXiB,EAAS7xN,KAAK4wN,UAAU5hL,IACjBrkC,eACA3K,KAAK4wN,UAAU5hL,GAO1B,GALAhvC,KAAKgjG,OAAS,EACdhjG,KAAKgxN,UAAY,EACjBhxN,KAAK8wN,UAAY7jH,EACjBjtG,KAAK+wN,UAAY/1N,QAAQmhD,MAEK,MAA1Bn8C,KAAKkyN,mBAA6BlyN,KAAKmxN,aAAc,CAIrD,SAASgB,QAAQC,EAAYC,GACzB,OAAID,EAAMX,QAAUY,EAAMZ,QACf,EACAW,EAAMX,QAAUY,EAAMZ,SACrB,EAED,C,CATfzxN,KAAKmxN,cAAe,EACpBnxN,KAAKkyN,kBAAoBH,EAAqB/xN,KAAK6wN,eAAevqN,SAWlEyrN,EAAmBrrJ,KAAKyrJ,QAC3B,MACGJ,EAAqB/xN,KAAKkyN,kBAK9B,IAAK,IAAIzzN,EAAY,EAAG+G,EAAYusN,EAAmB91N,OAAQwC,EAAI+G,EAAG/G,IAElE,GAAuB,IADvB8yN,EAAaQ,EAAmBtzN,IACjB8M,KAAW,CACtB,KAAI0hG,GAAQskH,EAAWE,SAUnB,MATAzxN,KAAKgjG,OAASzlG,KAAKuL,IAAI9I,KAAKgjG,OAAQvkG,EAAI,GAExC,IAAI8sG,EAAagmH,EAAWrvN,KAC5B,GAAIqvN,EAAW3lH,KACX,IAAK,IAAI0mH,KAAM/mH,EACXgmH,EAAWlnN,OAAOioN,GAAM/mH,EAAM+mH,EAM7C,CAGL,IAAK7zN,EAAI,EAAG+G,EAAIxF,KAAK6wN,eAAe50N,OAAQwC,EAAI+G,EAAG/G,IAExB,IADvB8yN,EAAavxN,KAAK6wN,eAAepyN,IAClB8M,MACP0hG,GAAQskH,EAAW1jH,WAAaZ,EAAOskH,EAAWE,UAClDzxN,KAAKgjG,OAASzlG,KAAKuL,IAAI9I,KAAKgjG,OAAQvkG,EAAI,GACxCuB,KAAKgxN,aACLa,EAAS/1N,KAAKe,eAAe,QAASwuG,QAC/Bj/E,QAAQmlM,EAAWlnN,OAAQknN,EAAWrvN,KAAMqvN,EAAW/lH,SAAU+lH,EAAW9lH,KAAMP,QAAQxjG,OAAO1H,KAAMA,KAAKuyN,cAAe,CAACvyN,KAAKgxN,YAAa,GAAG,EAAOO,EAAW3lH,MAAM,GAAM,GACtLimH,EAAOjkH,aAAa5tG,KAAK8wN,WAAa7jH,EAAOskH,EAAW1jH,YACxDgkH,EAAO7kH,YAAYhtG,KAAK8wN,WACxBe,EAAOvmH,IAAMtrG,KAAKgxN,UAClBhxN,KAAK4wN,UAAU5wN,KAAKgxN,WAAaa,EAxEuB,C,CAkFxEW,UAAUC,GACN,GAAsB,MAAlBzyN,KAAK0xN,UAAT,CACA,IAAIgB,EAAwB1yN,KAAK0xN,UAAUe,GACvCC,GAAY1yN,KAAK4xN,SAASc,EAAW7kH,UAFb,C,CAQhCH,QACI7yG,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAKgpK,Q,CAMjC96D,SACIluG,KAAKg5G,KAAKh5G,KAAK8wN,UAAW9wN,KAAKoxN,S,CAQnCp4G,KAAK25G,EAAmB,EAAGx0K,GAAgB,GACvC,GAAKn+C,KAAK6wN,eAAV,CACA,GAAI7wN,KAAKkxN,eAAgB,CAGrB,SAASiB,QAAQC,EAAYC,GACzB,OAAID,EAAMvkH,UAAYwkH,EAAMxkH,UACjB,EACAukH,EAAMvkH,UAAYwkH,EAAMxkH,WACvB,EAED,C,CARf7tG,KAAKkxN,gBAAiB,EAWtBlxN,KAAK6wN,eAAenqJ,KAAKyrJ,SAEzB,IAAK,IAAI1zN,EAAY,EAAG+G,EAAYxF,KAAK6wN,eAAe50N,OAAQwC,EAAI+G,EAAG/G,IAAK,CACxE,IAAI8yN,EAAwBvxN,KAAK6wN,eAAepyN,GAChD,GAAkB,MAAd8yN,GAAyC,GAAnBA,EAAWhmN,KAAW,CAC5C,IAAIqnN,EAAerB,EAAWlnN,OAC1BihG,EAAesnH,EAAQnmH,QAAUmmH,EAAQnmH,MAAQ/uG,MAAM4C,UACvDuyN,EAAgB,KASpB,IAAK,IAAI7jL,KAPuB,MAA5BhvC,KAAKixN,eAAe3lH,KACpBunH,EAAW,IACFZ,UAAYW,EACrB5yN,KAAKixN,eAAe3lH,GAAOunH,GAE3BA,EAAW7yN,KAAKixN,eAAe3lH,GAErBimH,EAAWrvN,KACF,MAAf2wN,EAAS7jL,KACT6jL,EAAS7jL,GAAK4jL,EAAQ5jL,GAGjC,CACJ,CACJ,CAC2B,iBAAxB,EACAhvC,KAAKwyN,UAAUG,GAEf3yN,KAAK4xN,SAASe,GAElB3yN,KAAKoxN,SAAWjzK,EAChBn+C,KAAK+wN,UAAY/1N,QAAQmhD,MACzBthD,MAAMM,MAAMgY,UAAU,EAAGnT,KAAMA,KAAKgpK,QA5CV,C,CAkDtBA,UACJ,GAAIhpK,KAAK8wN,WAAa9wN,KAAKs2K,WAAY,CACnC,IAAIt2K,KAAKoxN,SAIF,CACH,IAAK,IAAIpiL,KAAKhvC,KAAK4wN,WACfiB,EAAS7xN,KAAK4wN,UAAU5hL,IACjBhnB,WAIX,OAFAhoB,KAAK0tG,aACL1tG,KAAKksG,WAER,CAVG,GADAlsG,KAAKksG,aACAlsG,KAAK6wN,eAAgB,OAC1B7wN,KAAK4xN,SAAS,EAUrB,CAED,IAUIC,EAVAiB,EAAe93N,QAAQmhD,MACvB42K,EAAqBD,EAAO9yN,KAAK+wN,UACjCiC,EAAoBhzN,KAAK8wN,WAAaiC,EAAa/yN,KAAKyE,MAG5D,IAAKuqC,KAFLhvC,KAAK+wN,UAAY+B,EAEP9yN,KAAK4wN,WACXiB,EAAS7xN,KAAK4wN,UAAU5hL,IACjBg+D,YAAYgmH,GAIvB,GAAkC,GAA9BhzN,KAAK6wN,eAAe50N,QAAe+D,KAAKgjG,OAAShjG,KAAK6wN,eAAe50N,OAAQ,CAC7E,IAAIs1N,EAAwBvxN,KAAK6wN,eAAe7wN,KAAKgjG,QACjDgwH,GAAazB,EAAW1jH,YACxB7tG,KAAKgjG,SAEkB,GAAnBuuH,EAAWhmN,MACXvL,KAAKgxN,aACLa,EAAS/1N,KAAKe,eAAe,QAASwuG,QAC/Bj/E,QAAQmlM,EAAWlnN,OAAQknN,EAAWrvN,KAAMqvN,EAAW/lH,SAAU+lH,EAAW9lH,KAAMP,QAAQxjG,OAAO1H,KAAMA,KAAKuyN,cAAe,CAACvyN,KAAKgxN,YAAa,GAAG,EAAOO,EAAW3lH,MAAM,GAAM,GACtLimH,EAAOjkH,aAAaolH,GACpBnB,EAAOvmH,IAAMtrG,KAAKgxN,UAClBhxN,KAAK4wN,UAAU5wN,KAAKgxN,WAAaa,EACjCA,EAAO7kH,YAAYgmH,IAEnBhzN,KAAKmR,MAAMjG,MAAM6E,MAAOwhN,EAAWrvN,MAG9C,C,CASGqwN,cAAchoN,GACEvK,KAAK4wN,UAAUrmN,WAChBvK,KAAK4wN,UAAUrmN,E,CAI9B2hG,YACJlsG,KAAKmR,MAAMjG,MAAMuD,S,CAOjBlE,YACA,OAAOvK,KAAKqxN,W,CAOZ9mN,UAAMtM,GACN+B,KAAKqxN,YAAcpzN,EACnB+B,KAAK4xN,SAAS5xN,KAAKqxN,YAAcrxN,KAAKksK,WAAa,I,CAMnDlpD,YAEA,OADAhjH,KAAKsxN,OAAS/zN,KAAKgd,MAAMva,KAAKs2K,WAAa,IAAOt2K,KAAKksK,YAChDlsK,KAAKsxN,M,CAMhBvpN,QACI,IAAIinC,EAiBIvwC,EAAWD,EAhBnB,GAAIwB,KAAK0xN,UACL,IAAK1iL,KAAKhvC,KAAK0xN,iBACJ1xN,KAAK0xN,UAAU1iL,GAI9B,IAAKA,KAAKhvC,KAAK4wN,UACF5wN,KAAK4wN,UAAU5hL,GACjBrkC,eACA3K,KAAK4wN,UAAU5hL,GAE1B,IAAKA,KAAKhvC,KAAKixN,sBACJjxN,KAAKixN,eAAejiL,GAG/B,GADAhvC,KAAKkyN,kBAAoB,KACrBlyN,KAAK6wN,gBAAkB7wN,KAAK6wN,eAAe50N,OAG3C,IADAuC,EAAMwB,KAAK6wN,eAAe50N,OACrBwC,EAAI,EAAGA,EAAID,EAAKC,IACbuB,KAAK6wN,eAAepyN,IACpBuB,KAAK6wN,eAAepyN,GAAG0E,UAGnCnD,KAAK6wN,eAAe50N,OAAS,EAC7B+D,KAAK8wN,UAAY,EACjB9wN,KAAK+wN,UAAY,EACjB/wN,KAAKs2K,WAAa,EAClBt2K,KAAKgjG,OAAS,EACdhjG,KAAKgxN,UAAY,EACjBhxN,KAAKyE,MAAQ,EACb5J,MAAMM,MAAMwP,MAAM3K,KAAMA,KAAKgpK,Q,CAMjC7lK,UACInD,KAAK+H,QACL/H,KAAK0xN,UAAY,KACjB1xN,KAAK4wN,UAAY,KACjB5wN,KAAK6wN,eAAiB,KACtB7wN,KAAKixN,eAAiB,I,EAQ9B,MAAMO,UAANj1N,cACIyD,KAAIuL,KAAW,EACfvL,KAAI4rG,MAAY,C,CAOhBzoG,UACInD,KAAKqK,OAAS,KACdrK,KAAKyrG,KAAO,KACZzrG,KAAKkC,KAAO,KACZlC,KAAK4rG,MAAO,EACZ5rG,KAAKuL,KAAO,EACZzP,KAAKW,QAAQ,YAAauD,K,QC/crBizN,gBAMTj8N,cAAc4pG,GACV,IAAI7a,EAAuBjqF,KAAKe,eAAe,kBAAmBo2N,iBAElE,OADAltI,EAAImtI,OAAStyH,EACN7a,C,CAMXtpF,UACIuD,KAAKkzN,OAAS,KACdp3N,KAAKW,QAAQ,kBAAmBuD,K,CAIpCs5B,IAAI9R,EAAkBsgE,EAAYC,GAE9BvgE,EAAQ2yE,aAAarS,EAAIC,EAAI/nF,KAAKkzN,O,CAIlCh1H,YACA,OAAO+0H,gBAAgB1uK,E,EA3BpB0uK,gBAAE1uK,GAAW,kB,MCJX4uK,WAUT52N,YAAY6sE,GAHZppE,KAASopE,UAAc,C,CAJvBpyE,cAAcoyE,EAAmBgqJ,EAAgCC,G,EAF1DF,WAAeG,gBAAQ,GACvBH,WAAoBI,qBAAQ,G,MAa1BC,eAkBTj3N,YAAYk3N,EAA6CC,EAAgCC,EAAgCC,GADzH5zN,KAAU6zN,WAAG,EAET7zN,KAAK6zN,WAAaD,EAClB5zN,KAAK8zN,sBAAwBL,EAC7BzzN,KAAK+zN,mBAAqBL,EAC1B1zN,KAAKg0N,mBAAqBL,C,CApB9B38N,eAAey8N,EAA8BC,EAA2BC,GACpE,OAAO,GAA0BD,GAAqB,IAAMC,GAAqB,E,CAErF38N,yBAAyBy8N,EAA8BC,EAA2BC,GAC9E,IAAIppN,EAAQipN,eAAeS,QAAQR,EAAsBC,EAAmBC,GAG5E,OAFKH,eAAe7vI,MAAMp5E,KACtBipN,eAAe7vI,MAAMp5E,GAAS,IAAIipN,eAAeC,EAAsBC,EAAmBC,EAAmBppN,IAC1GipN,eAAe7vI,MAAMp5E,E,EARzBipN,eAAK7vI,MAAQ,G,MCfXuwI,kBAkBT33N,YAAYwY,EAAco/M,EAAiBnuK,GACvChmD,KAAKo0N,UAAY,GACjBp0N,KAAKq0N,WAAat/M,EAClB/U,KAAKs0N,SAAWtuK,EAChBhmD,KAAKu0N,aAAeJ,C,CAQxBrxN,IAAI6W,IAEc,GADF3Z,KAAKo0N,UAAUl2N,QAAQyb,IAE/B3Z,KAAKo0N,UAAU/3N,KAAKsd,E,CAQ5B66M,YAAY76M,GACR,IAAIpP,EAAQvK,KAAKo0N,UAAUl2N,QAAQyb,IACrB,GAAVpP,GACAvK,KAAKo0N,UAAU1pN,OAAOH,EAAO,E,ECxCnC,MAAOkqN,4BAA4B/pK,OA6DrCnuD,YAAYm+I,EAAmB3lI,EAAcm2C,EAA0BtxC,EAAoB86M,GACvFriN,MAAM2jC,mBAAiBgkG,eAAe9uF,GAZ1ClrD,KAAS20N,WAAY,EAajB30N,KAAK40N,WAAal6E,EAClB16I,KAAK4Z,WAAaA,EAClB5Z,KAAKgyL,MAAQj9K,EACb/U,KAAK20N,UAAYD,EACjB10N,KAAKmqD,OACDnqD,KAAK20N,WACL30N,KAAKkvJ,yBACTlvJ,KAAK8qD,UAAUa,cAAc3rD,KAAK4Z,W,CArDtC5iB,cAAc+d,EAAcm2C,EAAqB+mF,EAAoByiF,GAAoB,GAChFD,oBAAoBI,KAAKr5L,IAAIzmB,IAC9B0/M,oBAAoBI,KAAKp6M,IAAI1F,EAAM,IAAIm/M,kBAAkBn/M,EAAMjL,OAAO+Y,aAAa0qI,cAAcx4I,GAAO2/M,IAE5G,IAAII,EAAaL,oBAAoBI,KAAKr5L,IAAIzmB,GAC9C,GAAI+/M,EAAWR,UAAYQ,EAAWV,UAAUn4N,OAAS,EACrD,OAAO,KACJ,CACH,IAAI63M,EAAMhqM,OAAO+wM,gBAAgBka,0BAA0BD,EAAWP,aAAcx/M,EAAMm2C,EAAa+mF,EAAYyiF,GAEnH,OADGI,EAAWR,UAAUQ,EAAWhyN,IAAIgxM,GAChCA,CACV,C,CAQL98M,iBAAiB+d,EAAcxK,GAC3B,IAAIyzB,EAAOy2L,oBAAoBI,KAAKr5L,IAAIzmB,GACxC,OAAKipB,EAEEA,EAAKo2L,UAAU7pN,GADX,I,CAsCf2kJ,yBAGQlvJ,KAAK8qD,UAAU2vF,eAAez6I,KAAK40N,W,CAS3CI,iBAAiBv0M,EAAgBq6H,GAC7B96I,KAAKmqD,OACLnqD,KAAK8qD,UAAU+vF,gBAAgB76I,KAAK40N,WAAWn0M,EAAOq6H,E,CAQ1Dm6E,OAAOhjF,GAGCjyI,KAAK8qD,YACL9qD,KAAK8qD,UAAU3nD,UACfnD,KAAK8qD,UAAY,MAGrB9qD,KAAK6qD,YAAc7qD,KAAK4Z,WAAaq4H,EACrCjyI,KAAK8qD,UAAYhhD,OAAO+Y,aAAakoC,aAAa/qD,KAAKgrD,YAAYhrD,KAAKirD,cACpEjrD,KAAK20N,WACL30N,KAAKkvJ,yBACTlvJ,KAAK8qD,UAAUa,cAAc3rD,KAAK4Z,W,CAOtCuwC,OACG,OAAOnqD,KAAK8qD,UAAUK,Y,CAUzBS,QAAQjyC,EAAsB8xC,EAAuB,EAAGqvF,EAAoB77H,OAAOi2M,kBAC/E,KAAIp6E,EAAY,GAGhB,GAFA96I,KAAKmqD,SACwC,GAAhBsB,GAAqBqvF,GAAa96I,KAAK4Z,YACnD,CACb,IAAIu7M,EAAsB,IAAI37M,WAAWG,EAAOA,OAAQ8xC,EAAcqvF,GAEtE96I,KAAK8qD,UAAUc,QAAQupK,EAAQ1pK,EAClC,MAIGzrD,KAAK8qD,UAAU0vF,UAAU7gI,EAAO8xC,EAAa9xC,EAAO1d,O,CAQ5Di4M,2BAA2B55D,GACnBt6I,KAAKo1N,iBAAmB96E,GACxBt6I,KAAK4rD,QAAQ0uF,EAAW94H,QAAoC,EAA3B84H,EAAWu8D,YAAY33M,EAA+D,GAAvDo7I,EAAWu8D,YAAY13M,EAAIm7I,EAAWu8D,YAAY33M,IAClHo7I,EAAWw8D,qBAEX92M,KAAK4rD,QAAQ0uF,EAAW94H,QAAS,EAAGxhB,KAAK4Z,YACzC0gI,EAAWw8D,mBACX92M,KAAKo1N,gBAAkB96E,E,CAS/B+6E,mCAAmC/6E,EAAkC75H,GACjE,IAAI60M,EAAah7E,EAAW+9D,gBACxBkd,EAAaj7E,EAAWk7E,UAC5Bl7E,EAAWw8D,mBAEX92M,KAAKmqD,OAELnqD,KAAK8qD,UAAU0vF,UAAUF,EAAW94H,QAAQf,EAAS60M,EAAWC,EAAa,E,CAMpFpyN,UACCkP,MAAMlP,S,EC5LR,IAAYsyN,GCAAC,GCGAC,GCHAC,GJUDnB,oBAAaoB,cAAG,oBAChBpB,oBAAcqB,eAAG,qBACjBrB,oBAAgBsB,iBAAG,qBACnBtB,oBAAcuB,eAAG,qBACTvB,oBAASwB,UAAa,CAAC,qBAAsB,oBAAqB,qBAAsB,sBAGxFxB,oBAAAI,KAAuC,IAAIt5L,ICjBlDk6L,gEAIX,KAHGA,GAAA,yBACAA,MAAA,mBACAA,MAAA,iBCHQC,mEAIX,KAHGA,GAAA,iCACAA,MAAA,mCACAA,MAAA,+BCAQC,+EAKX,KAHGA,GAAA,mBAEAA,MAAA,e,MEMSO,YAoJZ35N,cACCyD,KAAKm2N,KAAOD,YAAYE,UACxBp2N,KAAKqqE,MAAQ6rJ,YAAYxqE,cACzB1rJ,KAAKq2N,SAAWH,YAAYI,eAC5Bt2N,KAAKu2N,SAAWL,YAAYM,gBAC5Bx2N,KAAKy2N,YAAcP,YAAYI,eAC/Bt2N,KAAK02N,YAAcR,YAAYM,gBAC/Bx2N,KAAK22N,cAAgBT,YAAYI,eACjCt2N,KAAK42N,cAAgBV,YAAYM,gBACjCx2N,KAAKmxB,cAAgB+kM,YAAYW,kBACjC72N,KAAKqxB,iBAAmB6kM,YAAYW,kBACpC72N,KAAKsxB,mBAAqB4kM,YAAYW,kBACtC72N,KAAK82N,UAAYZ,YAAYa,iBAC7B/2N,KAAKg3N,YAAa,EAClBh3N,KAAKi3N,WAAa,EAClBj3N,KAAKk3N,YAAchB,YAAYiB,gBAC/Bn3N,KAAKo3N,cAAe,EACpBp3N,KAAKyqJ,UAAY,IAAIpjG,QAAQ6uK,YAAYmB,eAAgBnB,YAAYmB,eAAgBnB,YAAYoB,kB,CAMlGzb,UACC77M,KAAKm2N,KAAO,KACZn2N,KAAKqqE,MAAQ,KACbrqE,KAAKq2N,SAAW,KAChBr2N,KAAKu2N,SAAW,KAChBv2N,KAAKy2N,YAAc,KACnBz2N,KAAK02N,YAAc,KACnB12N,KAAK22N,cAAgB,KACrB32N,KAAK42N,cAAgB,KACrB52N,KAAKmxB,cAAgB,KACrBnxB,KAAKqxB,iBAAmB,KACxBrxB,KAAKsxB,mBAAqB,KAC1BtxB,KAAK82N,UAAY,KACjB92N,KAAKg3N,WAAa,KAClBh3N,KAAKi3N,WAAa,KAClBj3N,KAAKk3N,YAAc,KACnBl3N,KAAKo3N,aAAe,KACpBp3N,KAAKyqJ,UAAY,I,EA1LXyrE,YAAAqB,UAAoB16J,WAAS26J,IAE7BtB,YAAAuB,WAAqB56J,WAAS4pB,MAE9ByvI,YAAAE,UAAoBv5J,WAAS66J,KAG7BxB,YAAAxqE,cAAwBzlE,YAAUylE,cAElCwqE,YAAAyB,iBAA2B1xI,YAAU0xI,iBAErCzB,YAAA0B,sBAAgC3xI,YAAU2xI,sBAG1C1B,YAAAM,gBAA0B1sM,cAAYiK,KAEtCmiM,YAAAI,eAAyBxsM,cAAY4J,IAErCwiM,YAAA2B,qBAA+B/tM,cAAY08H,YAE3C0vE,YAAA4B,+BAAyChuM,cAAYgK,oBAErDoiM,YAAA6B,qBAA+BjuM,cAAY+J,iBAE3CqiM,YAAA8B,+BAAyCluM,cAAY88H,yBAErDsvE,YAAA+B,qBAA+BnuM,cAAYkK,YAE3CkiM,YAAAgC,+BAAyCpuM,cAAY6J,oBAErDuiM,YAAAiC,qBAA+BruM,cAAY8J,iBAE3CsiM,YAAAkC,+BAAyCtuM,cAAYm9H,yBAErDivE,YAAAmC,8BAAwCvuM,cAAYq9H,oBAEpD+uE,YAAAoC,sBAAgCxuM,cAAYu9H,WAE5C6uE,YAAAqC,gCAA0CzuM,cAAYy9H,mBAGtD2uE,YAAAW,kBAA4Bj6J,wBAAsBupB,IAElD+vI,YAAAsC,uBAAiC57J,wBAAsB+qF,SAEvDuuE,YAAAuC,+BAAyC77J,wBAAsBirF,iBAE/DquE,YAAAwC,kBAA4B97J,wBAAsB+7J,IAElDzC,YAAA0C,kBAA4Bh8J,wBAAsBi8J,IAGlD3C,YAAa4C,cAAW,EAExB5C,YAAA6C,gBAA0BzwF,kBAAgB2f,MAE1CiuE,YAAA8C,eAAyB1wF,kBAAgB0d,KAEzCkwE,YAAA+C,gBAA0B3wF,kBAAgB4f,MAE1CguE,YAAAa,iBAA2BzuF,kBAAgB6f,UAE3C+tE,YAAAgD,kBAA4B5wF,kBAAgB8f,QAE5C8tE,YAAAiD,mBAA6B7wF,kBAAgB+f,SAE7C6tE,YAAAkD,iBAA2B9wF,kBAAgBggB,aAE3C4tE,YAAAmD,iBAA2B/wF,kBAAgBigB,OAG3C2tE,YAAeiB,gBAAW,EAE1BjB,YAAAoD,kBAA4BhxF,kBAAgB2f,MAE5CiuE,YAAAqD,iBAA2BjxF,kBAAgB0d,KAE3CkwE,YAAAsD,kBAA4BlxF,kBAAgB4f,MAE5CguE,YAAAuD,mBAA6BnxF,kBAAgB6f,UAE7C+tE,YAAAwD,oBAA8BpxF,kBAAgB8f,QAE9C8tE,YAAAyD,qBAA+BrxF,kBAAgB+f,SAE/C6tE,YAAA0D,mBAA6BtxF,kBAAgBggB,aAE7C4tE,YAAA2D,mBAA6BvxF,kBAAgBigB,OAE7C2tE,YAAAmB,eAAyB9uF,mBAAiBkgB,KAE1CytE,YAAA4D,eAAyBvxF,mBAAiBx0G,KAE1CmiM,YAAAoB,kBAA4B/uF,mBAAiBogB,QAE7CutE,YAAA6D,eAAyBxxF,mBAAiBsgB,kBAE1CqtE,YAAA8D,oBAA8BzxF,mBAAiB4gB,cAE/C+sE,YAAA+D,eAAyB1xF,mBAAiBwgB,kBAE1CmtE,YAAAgE,oBAA8B3xF,mBAAiB8gB,cAE/C6sE,YAAAiE,iBAA2B5xF,mBAAiB0gB,OAGnCitE,YAAAkE,QAAiC,IAAIlE,Y,MCtHzCmE,sBAOTrjO,kBAAkB+b,GAKd,OAJe,IAAIgH,YAAYhH,E,CAWnC/b,uBAAuB2iB,G,EFtBfi8M,gEAMX,KALEA,GAAA,2BACAA,MAAA,6BACAA,MAAA,2BACAA,MAAA,yBACAA,MAAA,mC,MGHU0E,aAqBT/9N,YAAYwW,EAAcwnN,GACtB,GAAIA,EAAQ,CACR,GAAIxnN,EAAOunN,aAAaE,cAAc5gN,WAClC,MAAM,IAAIsP,MAAM,yCAEpBlpB,KAAKwhB,QAAU84M,aAAaE,aAC/B,MAEGx6N,KAAKwhB,QAAU64M,sBAAsBI,WAAW1nN,GAEpD/S,KAAK4kF,OAAS,IAAItiE,WAAWtiB,KAAKwhB,SAClCxhB,KAAK6kF,OAAS,IAAIxpE,aAAarb,KAAKwhB,SACpCxhB,KAAK06N,SAAW,IAAI30B,aAAa/lM,KAAKwhB,SACtCxhB,KAAK8kF,WAAa,IAAItrE,WAAWxZ,KAAKwhB,SACtCxhB,KAAK6qD,YAAc93C,C,CAMnB4nN,mBACA,OAAQ36N,KAAK6kF,M,CAGb+1I,mBACA,OAAQ56N,KAAK06N,Q,CAcbG,iBACA,OAAO76N,KAAK8kF,U,CAMZg2I,iBACA,OAAO96N,KAAK4kF,M,CAuDhBzhF,UACOnD,KAAKyS,aAERzS,KAAK2K,QACL0vN,sBAAsBU,gBAAgB/6N,KAAKwhB,SAC3CxhB,KAAKyS,YAAa,E,CAMtB9H,QACI3K,KAAK4kF,OAAS,KACd5kF,KAAK6kF,OAAS,KACd7kF,KAAK8kF,WAAa,I,EAxIfw1I,aAAcU,eAAU,EAIvBV,aAAAE,cAA6B,IAAIzgN,YAAY,KCJnD,MAAOkhN,qBAAqBX,aAQ9B/9N,YAAYwW,GACRV,MAAMU,GAAK,GAHf/S,KAAoBk7N,qBAAU,C,CAM9BC,aAAa55N,EAAyB65N,GAC9B75N,EAAK85N,wBAAwBr7N,KAAMA,KAAKk7N,wBACxCl7N,KAAKk7N,sBAAwBE,E,CASrCh3D,MAAMrxJ,GACF,OAAO/S,KAAKk7N,qBAAuBnoN,EAAO/S,KAAK6qD,W,CAMnDlgD,QACE3K,KAAKk7N,qBAAuB,C,QCzBrBI,oBAkBT/+N,cATAyD,KAAAu7N,cAAkD,IAAI/K,cAItDxwN,KAAYw7N,aAAW,EAMnBx7N,KAAKy7N,cAAgB,IAAIR,aAAaK,oBAAoBI,kBAC1D17N,KAAK27N,0BAA4B,IAAK//N,OAAeggO,wB,CAEzD5kO,qBAII,OAHKskO,oBAAoBO,YACrBP,oBAAoBO,UAAY,IAAIP,qBAEjCA,oBAAoBO,S,CAEvBC,gBAAgBv6N,EAAyBw6N,GAC7C/7N,KAAKy7N,cAAcN,aAAa55N,EAAMw6N,GACtC/7N,KAAKw7N,c,CAGTxkO,0BAEIskO,oBAAoB/kI,cAAcylI,iBAClCV,oBAAoB/kI,cAAc5rF,O,CAM9BqxN,iBACJ,MAAMrvL,EAAW3sC,KAAKu7N,cAAc5uL,SACpC,IAAK,IAAIluC,EAAI,EAAGA,EAAIuB,KAAKu7N,cAAct/N,OAAQwC,IAAK,CAChD,IAAI8C,EAAOorC,EAASluC,GAChB28N,EAAiB75N,EAAK06N,wBAC1B,GAAIb,EAAiBE,oBAAoBI,iBACrC,KAAM,wDACN17N,KAAKy7N,cAAcr3D,MAAMg3D,IAEzBp7N,KAAKk8N,aACLl8N,KAAK87N,gBAAgBv6N,EAAM65N,IAG3Bp7N,KAAK87N,gBAAgBv6N,EAAM65N,EAElC,CACDp7N,KAAKk8N,Y,CAITA,aACQl8N,KAAKw7N,aAAe,IAGpBx7N,KAAK27N,0BAA0BO,WAAWl8N,KAAKy7N,cAAcj6M,QAASxhB,KAAKw7N,cAE3Ex7N,KAAKw7N,aAAe,EACpBx7N,KAAKy7N,cAAc9wN,Q,CAQ3BA,QACI3K,KAAKu7N,cAAct/N,OAAS,C,EAzEzBq/N,oBAAAI,iBAA2B,QAEnBJ,oBAASO,UAAwB,K,MCLvCM,eA0FTC,qBAAqBt4N,GACjB,IAAK,IAAIrF,EAAY,EAAGA,EAAI09N,eAAeE,SAASpgO,SAAUwC,EAC1D,GAAI09N,eAAeE,SAAS59N,GAAG,KAAOqF,EAClC,OAAO,EAGf,OAAO,C,CAIXw4N,WAAWx4N,GACP,IAAK,IAAIrF,EAAY,EAAGA,EAAI09N,eAAeE,SAASpgO,SAAUwC,EAC1D,GAAI09N,eAAeE,SAAS59N,GAAG,KAAOqF,EAClC,OAAOq4N,eAAeE,SAAS59N,GAGvC,OAAO,C,CAIX89N,eAAez3N,EAAWa,GACtB,IAAK,IAAIlH,EAAY,EAAGA,EAAI09N,eAAeK,aAAavgO,SAAUwC,EAC9D,GAAI09N,eAAeK,aAAa/9N,GAAG,GAAG,KAAOqG,GAAMq3N,eAAeK,aAAa/9N,GAAG,GAAG,KAAOkH,EACxF,OAAOw2N,eAAeK,aAAa/9N,GAM3C,OAAO,C,CAIXg+N,cAAc34N,GACV,IAAK,IAAIrF,EAAY,EAAGA,EAAI09N,eAAeO,WAAWzgO,SAAUwC,EAC5D,GAAI09N,eAAeO,WAAWj+N,KAAOqF,EACjC,OAAO,EAIf,OAAO,C,CAIX64N,yBAAyBpwN,GACrB,IAAI7M,EAEJ,IAAKA,EAAI,EAAGA,EAAIy8N,eAAeE,SAASpgO,SAAUyD,EAC9C,GAAIy8N,eAAeE,SAAS38N,GAAGxB,QAAQqO,IAAS,EAC5C,OAAOwR,OAAOC,aAAam+M,eAAeE,SAAS38N,GAAG,IAI9D,IAAKA,EAAI,EAAGA,EAAIy8N,eAAeK,aAAavgO,SAAUyD,EAClD,GAAIy8N,eAAeK,aAAa98N,GAAGxB,QAAQqO,IAAS,EAChD,OAAOwR,OAAOC,aAAam+M,eAAeK,aAAa98N,GAAG,GAAG,IACzDqe,OAAOC,aAAam+M,eAAeK,aAAa98N,GAAG,GAAG,IAIlE,OAAOqe,OAAOC,aAAazR,E,CAW/BqwN,cAAcxoM,GAKV,IAJA,IAAIyoM,EACAC,EACAC,EAAiB,GAEZt+N,EAAY,EAAGA,EAAI21B,EAAOn4B,SAAUwC,EAAG,CAC5C,IAAIu+N,EAAkB5oM,EAAOrV,WAAWtgB,GACxC,GAAIuB,KAAKo8N,qBAAqBY,GAAU,CAWpC,IAVA,IAAIn5J,EAAY,KACZp2B,EAAY,KACZwvL,EAAiBx+N,EAAI,EACrBy+N,EAAiBz+N,EAAI,EAOlBw+N,GAAU,GACRj9N,KAAKy8N,cAAcroM,EAAOrV,WAAWk+M,MADxBA,GAiBtB,OAVAJ,KADAh5J,EAAQo5J,GAAU,EAAK7oM,EAAOrV,WAAWk+M,GAAU,OACrCj9N,KAAKs8N,WAAWz4J,KACN,MAAXg5J,EAAK,IAAyB,MAAXA,EAAK,MACjCh5J,EAAO,MAQJq5J,EAAS9oM,EAAOn4B,QACd+D,KAAKy8N,cAAcroM,EAAOrV,WAAWm+M,MADbA,GAajC,MANAL,KADApvL,EAAQyvL,EAAS9oM,EAAOn4B,OAAUm4B,EAAOrV,WAAWm+M,GAAU,OAChDl9N,KAAKs8N,WAAW7uL,KACN,MAAXovL,EAAK,IAAyB,MAAXA,EAAK,MACjCpvL,EAAO,MAIK,OAAZuvL,GAA8B,MAARvvL,IACZ,OAATA,GAA4B,OAATA,GAA4B,OAATA,GAA4B,OAATA,GAAkB,CAC5EqvL,EAAW98N,KAAKu8N,eAAeS,EAASvvL,GAEpCsvL,GADQ,MAARl5J,EACU9lD,OAAOC,aAAa8+M,EAAS,IAE7B/+M,OAAOC,aAAa8+M,EAAS,MAGzCr+N,EACF,QACH,CAKD,GAHAo+N,EAAO78N,KAAKs8N,WAAWU,GAGX,MAARn5J,GAAwB,MAARp2B,GAA2B,MAAXovL,EAAK,GAAY,CACjDE,GAAUh/M,OAAOC,aAAa6+M,EAAK,IACnC,QACH,CACG,GAAY,MAARh5J,GAA2B,MAAXg5J,EAAK,GAAY,CACjCE,GAAUh/M,OAAOC,aAAa6+M,EAAK,IACnC,QACH,CACG,GAAY,MAARpvL,GAA2B,MAAXovL,EAAK,GAAY,CACjCE,GAAUh/M,OAAOC,aAAa6+M,EAAK,IACnC,QACH,CACGE,GAAUh/M,OAAOC,aAAa6+M,EAAK,GAElD,MACGE,GAAUh/M,OAAOC,aAAag/M,EAErC,CAED,OAAOD,C,CAKXI,kBAAkBC,GACd,IACIC,EAEA5+N,EAHA6+N,EAAmB,GAKvB,IAAK7+N,EAAI,EAAGA,EAAI2+N,EAAKnhO,SAAUwC,EAC3B4+N,EAAeD,EAAKr+M,WAAWtgB,GAE/B6+N,GAAYt9N,KAAK28N,yBAAyBU,GAE9C,OAAOC,C,EAnQInB,eAAAE,SAAkB,CAAC,CAAC,KAAQ,MAAQ,KAAM,KAAM,MAC/D,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,KAAQ,KAAQ,KAAQ,MACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,KAAM,KAAM,OAC7B,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,MAAQ,MAAQ,OACjC,CAAC,KAAQ,MAAQ,KAAM,KAAM,QACdF,eAAAK,aAAsB,CAAC,CAAC,CAAC,KAAQ,MAAS,MAAQ,KAAM,KAAM,OAC7E,CAAC,CAAC,KAAQ,MAAS,MAAQ,KAAM,KAAM,OACvC,CAAC,CAAC,KAAQ,MAAS,MAAQ,KAAM,KAAM,OACvC,CAAC,CAAC,KAAQ,MAAS,MAAQ,KAAM,KAAM,QACxBL,eAAUO,WAAU,CAAC,KAChC,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,M,MCjGKa,YAUTvmO,gBAAgB4M,EAAUC,EAAUiyB,GAChC,GAAKlyB,EAKL,GAAKC,EAML,IADA,IAAI25N,EAAaC,EAAaC,EAAaC,EAClCl/N,EAAY,EAAGA,EAAI,EAAGA,IAC3B++N,EAAM55N,EAAEnF,GACRg/N,EAAM75N,EAAEnF,EAAI,GACZi/N,EAAM95N,EAAEnF,EAAI,GACZk/N,EAAM/5N,EAAEnF,EAAI,IACZq3B,EAAEr3B,GAAK++N,EAAM35N,EAAE,GAAK45N,EAAM55N,EAAE,GAAK65N,EAAM75N,EAAE,GAAK85N,EAAM95N,EAAE,GACtDiyB,EAAEr3B,EAAI,GAAK++N,EAAM35N,EAAE,GAAK45N,EAAM55N,EAAE,GAAK65N,EAAM75N,EAAE,GAAK85N,EAAM95N,EAAE,GAC1DiyB,EAAEr3B,EAAI,GAAK++N,EAAM35N,EAAE,GAAK45N,EAAM55N,EAAE,GAAK65N,EAAM75N,EAAE,IAAM85N,EAAM95N,EAAE,IAC3DiyB,EAAEr3B,EAAI,IAAM++N,EAAM35N,EAAE,IAAM45N,EAAM55N,EAAE,IAAM65N,EAAM75N,EAAE,IAAM85N,EAAM95N,EAAE,SAb9D05N,YAAYpoL,UAAUvxC,EAAGkyB,QALzBynM,YAAYpoL,UAAUtxC,EAAGiyB,E,CAuBjC9+B,iBAAiB8mB,EAAUo+C,GACvB,GAAKp+C,GACAo+C,EACL,IAAK,IAAIz9D,EAAY,EAAGA,EAAIqf,EAAE7hB,OAAQwC,IAClCy9D,EAAEz9D,GAAKqf,EAAErf,E,2iBCnCjByqL,e,CAOAJ,gB,CAOAM,c,04BCRJ7sL,cAGYyD,KAAS49N,UAAW,EAM5B59N,KAAW69N,YAAW,IAKtB79N,KAAS89N,UAAW,G,CAgBhBzzN,WAAOywK,GACP96K,KAAKm7K,KAAOL,EACZA,EAAIrpK,GAAGvG,MAAM0B,WAAY5M,KAAMA,KAAK+9N,gBACpCjjD,EAAIrpK,GAAGvG,MAAM2B,SAAU7M,KAAMA,KAAKg+N,aAClCljD,EAAIrpK,GAAGvG,MAAMkC,UAAWpN,KAAMA,KAAKg+N,Y,CAG/BD,iBACJ/9N,KAAK49N,UAAY,EACb59N,KAAKi+N,WAAW5yH,MAAM1gG,MAAM3K,KAAKi+N,WACrCj+N,KAAKi+N,UAAY5yH,MAAMM,GAAG3rG,KAAKm7K,KAAM,CAAE/gH,OAAQp6D,KAAK69N,YAAaxjK,OAAQr6D,KAAK69N,aAAe79N,KAAK89N,UAAYhzH,KAAa9qG,KAAKk+N,YAAahzH,QAAQxjG,OAAO1H,KAAMA,KAAKm+N,e,CAGnKH,cACkB,GAAlBh+N,KAAK49N,YACL59N,KAAKi+N,WAAW5yH,MAAM1gG,MAAM3K,KAAKi+N,WACrCj+N,KAAK49N,UAAY,EACjB59N,KAAKi+N,UAAY5yH,MAAMM,GAAG3rG,KAAKm7K,KAAM,CAAE/gH,OAAQ,EAAGC,OAAQ,GAAKr6D,KAAK89N,UAAYhzH,KAAa9qG,KAAKo+N,UAAWlzH,QAAQxjG,OAAO1H,KAAMA,KAAKm+N,gB,CAEnIA,gBACJn+N,KAAK49N,UAAY,EACjB59N,KAAKi+N,UAAY,I,iZCrDxB1hO,YAAY+jL,GAHZtgL,KAAM4kF,OAA8B,GAInC5kF,KAAKq+N,WAAa/9C,C,CAGnBg+C,SAASC,GACR,QAAqC,MAA3Bv+N,KAAK4kF,OAAO25I,G,CAGvBC,SACC,OAAOx+N,KAAK4kF,M,CASb0mI,iBAAiBiT,EAAoBE,GACpCz+N,KAAK4kF,OAAO25I,GAAcE,C,+5BCpBtB,cAAsB7Z,WAIdI,WAEN,OADAhlN,KAAKqK,OAAO+gC,MAAQ,EACbigE,MAAMM,GAAG3rG,KAAKqK,OAAQ,CAAE+gC,MAAO,GAAKprC,KAAKwrG,SAAWV,KAAa9qG,KAAKyrG,MAAOzrG,KAAK8kN,SAAU9kN,KAAKw+C,M,aCN1G,cAAuBomK,WAIfI,WAEN,OADAhlN,KAAKqK,OAAO+gC,MAAQ,EACbigE,MAAMM,GAAG3rG,KAAKqK,OAAQ,CAAE+gC,MAAO,GAAKprC,KAAKwrG,SAAWV,KAAa9qG,KAAKyrG,MAAOzrG,KAAK8kN,SAAU9kN,KAAKw+C,M,8+DCR1G,cAAuCq3G,eAEzCt5J,YAAYusI,GACRz2H,MAAMy2H,E,CAGV/+F,cAAcg5G,G,CAId94G,YAAY5/B,EAAgBkc,G,CAG5BkkB,eAAew4G,GACX,OAAO,C,i8BCVT,cAAiClgE,cAenCxmF,YAAYwW,EAAciwE,EAAiCC,EAAiCv6D,EAAyBw6D,GACjH7wE,MAAMU,EAAMA,EAAMiwE,EAAaC,EAAav6D,EAAgBw6D,GAC5DljF,KAAKi1I,UAAY,C,CAMrBzxD,sBACIxjF,KAAK0V,WAAauN,mBAAiB+B,KACnChlB,KAAKgtB,cAAgBljB,OAAOyM,eAAes/H,+BAA+B71I,KAAKqI,MAAgCrI,KAAKsV,QAAStV,KAAKmsB,oBAAqBnsB,KAAK8tB,gBAAiB9tB,KAAKmV,YAAanV,KAAKujF,eAEpMvjF,KAAK4V,SAAW5V,KAAKgtB,cAAcC,UAAU,E,CAGjDJ,SACIk2D,cAAcU,gBAAgBt7D,QAAUnoB,KAAKqjF,gBACzCN,cAAcz2D,gBAAkBtsB,OAChC+iF,cAAcz2D,gBAAkBy2D,cAAcz2D,eAAeQ,OAC7Di2D,cAAcz2D,eAAiBtsB,KAC/B8J,OAAOyM,eAAe6X,iBAAiBpuB,KAAKgtB,cAAehtB,KAAKi1I,W,0gB3CXtE,SAAiC1pI,GACtC,OAAQA,GACP,KAAK4nM,iBAAegD,IACnB,OAAO,EACR,KAAKhD,iBAAezgB,KACnB,OAAO,EACR,KAAKygB,iBAAehxB,MACnB,OAAO,EACR,KAAKgxB,iBAAe/rJ,QACnB,OAAOA,QAAQ22B,KAChB,KAAKo1H,iBAAe9rJ,QACnB,OAAOA,QAAQ02B,KAChB,KAAKo1H,iBAAe7rJ,QACnB,OAAOA,QAAQy2B,KAChB,KAAKo1H,iBAAe/oL,MACnB,OAAOA,MAAMwB,MACd,KAAKunL,iBAAehe,UACnB,OAAOA,UAAUj4H,QAEnB,OAAO,IACR,E,2H4CJC3gE,YAAYmlC,EAAYC,EAAY6qH,EAA4DwzD,GAlBxFhgN,KAAuB0+N,wBAAU,GAGzC1+N,KAAW2+N,aAAY,EAMvB3+N,KAAiB4+N,mBAAY,EAU5B5+N,KAAK6+N,sBAAwB/0N,OAAO+Y,aAAa8xI,qBAAqBjzH,EAAIC,EAAI6qH,GAC1ExsJ,KAAK6+N,sBAAsB3yH,YAC9BlsG,KAAK8+N,YAAc9e,EACnBhgN,KAAKosB,U,CAOHpE,eACH,OAAOhoB,KAAK6+N,sBAAsB3yH,S,CAOzB9/E,UACTpsB,KAAK++N,uBAAyB,IAAI3T,eAClCprN,KAAKg/N,wBAA0B,IAAI5T,eACnCprN,KAAKi/N,wBAA0B,IAAI7T,eACnCprN,KAAKk/N,0BAA4B,IAAI9T,eACrC,MAAM+T,EAAcr1N,OAAO+wM,gBAAgBukB,uBAAuB,WAC5DC,EAAcv1N,OAAO+wM,gBAAgBukB,uBAAuB,YAC5DE,EAAex1N,OAAO+wM,gBAAgBukB,uBAAuB,cAC7DG,EAAez1N,OAAO+wM,gBAAgBukB,uBAAuB,UACnE,IAAI3gO,EAAG+G,EACHtD,EAAyBlC,KAAK6+N,sBAAsB1wE,gBACxD,IAAK1vJ,EAAI,EAAG+G,EAAItD,EAAKjG,OAAQwC,EAAI+G,EAAG/G,IAAK,CACxC,IAAIinC,EAAsBxjC,EAAKzD,GAC3B0gO,EAAYb,SAAS54L,EAAIxjB,YAC5BliB,KAAK++N,uBAAuBzT,iBAAiB5lL,GACnC45L,EAAahB,SAAS54L,EAAIxjB,YACpCliB,KAAKg/N,wBAAwB1T,iBAAiB5lL,GACpC25L,EAAYf,SAAS54L,EAAIxjB,YACnCliB,KAAKi/N,wBAAwB3T,iBAAiB5lL,GACpC65L,EAAajB,SAAS54L,EAAIxjB,aACpCliB,KAAK0+N,0BAA4B1+N,KAAK0+N,wBAA0B,IAChE1+N,KAAK0+N,wBAAwBh5L,EAAIxjB,YAAcwjB,GAE/C1lC,KAAKk/N,0BAA0B5T,iBAAiB5lL,EAEjD,C,CAOQ/wB,mBACT3U,KAAK6+N,sBAAsB17N,UAC3BnD,KAAK++N,uBAAyB,KAC9B/+N,KAAKg/N,wBAA0B,KAC/Bh/N,KAAKi/N,wBAA0B,KAC/Bj/N,KAAKk/N,0BAA4B,KACjCl/N,KAAK0+N,wBAA0B,KAE/B1+N,KAAKw/N,gBAAkB,KACvBx/N,KAAKy/N,cAAgB,KACrBz/N,KAAK0/N,yBAA2B,KAChC1/N,KAAK2/N,aAAe,I,CAOrBx1K,OACC,OAAOnqD,KAAK6+N,sBAAsB10K,M,CASnC+qG,eAAeM,EAA+BoqE,EAAyBvqE,GACtE33G,KAAKsF,eAAiBl5C,OAAO+Y,aAAaqyI,eAAel1J,KAAK6+N,sBAAuBrpE,EAAeoqE,EAAavqE,E,CAOlHwqE,4BAA4BD,GACV5/N,KAAK8+N,YAAapjB,WAClC17M,KAAK8/N,oCAAoCF,GAEzC5/N,KAAK+/N,sCAAsCH,E,CAO7CE,oCAAoCF,G,oEAC/B7Q,EAAa6Q,EAAYzyM,UACzB2uL,EAAwC97M,KAAK8+N,YAAahjB,YAC1Dkb,EAAyE,QAAvDh0N,EAAuB,QAAtBN,EAAAo5M,EAAYkb,kBAAU,IAAAt0N,IAAIqsN,EAAMzc,SAAS0tB,oBAAa,IAAAh9N,IAAIkzN,YAAYkE,QAAQpD,WAErG,GADA3nM,mBAAmBkB,aAAaymM,GAC5BF,IAAcZ,YAAY4C,cAC7BzpM,mBAAmBiB,cAAa,OAC5B,CACJjB,mBAAmBiB,cAAa,GAChC,IAAIwmM,EAAsE,QAArD3wF,EAAsB,QAArBD,EAAA41E,EAAYgb,iBAAS,IAAA5wF,IAAI6oF,EAAMzc,SAAS3oD,mBAAY,IAAAxjB,IAAI+vF,YAAYkE,QAAQtD,UAClGznM,mBAAmBmB,aAAasmM,EAChC,CAED,IAAIM,EAA+E,QAA3D6I,EAAyB,QAAxBv5F,EAAAo1E,EAAYsb,oBAAY,IAAA1wF,IAAIqoF,EAAMzc,SAAS4tB,sBAAe,IAAAD,IAAI/J,YAAYkE,QAAQhD,aACvGF,EAA4E,QAAzDv/L,EAAwB,QAAvBwoM,EAAArkB,EAAYob,mBAAW,IAAAiJ,IAAIpR,EAAMzc,SAAStoD,qBAAc,IAAAryH,IAAIu+L,YAAYkE,QAAQlD,YAExG,GADA7nM,mBAAmBqB,eAAe0mM,GAC9BA,EAAc,CACjB,IAAI3sE,EAAsE,QAArD21E,EAAsB,QAArBC,EAAAvkB,EAAYrxD,iBAAS,IAAA41E,IAAItR,EAAMzc,SAASguB,mBAAY,IAAAF,IAAIlK,YAAYkE,QAAQ3vE,UAClGp7H,mBAAmB4B,aAAaw5H,EAAUvrJ,EAAGurJ,EAAUtrJ,EAAGsrJ,EAAUtqH,EACpE,CACD,GAAI+2L,GAAehB,YAAYiB,gBAC9B9nM,mBAAmBoB,gBAAe,OAC5B,CACN,IAAIwmM,EAAyE,QAAvDsJ,EAAuB,QAAtBC,EAAA1kB,EAAYmb,kBAAU,IAAAuJ,IAAIzR,EAAMzc,SAASmuB,oBAAa,IAAAF,IAAIrK,YAAYkE,QAAQnD,WACrG5nM,mBAAmBoB,gBAAe,GAClCpB,mBAAmBwB,eAAeqmM,EAAaD,EAC/C,CAGD,OAD6D,QAA5CyJ,EAAkB,QAAjBC,EAAA7kB,EAAYzxI,aAAK,IAAAs2J,IAAI5R,EAAMzc,SAASl8J,cAAO,IAAAsqL,IAAIxK,YAAYkE,QAAQ/vJ,OAEpF,KAAK6rJ,YAAYxqE,cAChBr8H,mBAAmB6B,UAAS,GAC5B,MACD,KAAKglM,YAAYyB,iBAChB,IAAIxmM,EAAkF,QAA7DyvM,EAA0B,QAAzBC,EAAA/kB,EAAY3qL,qBAAa,IAAA0vM,IAAI9R,EAAMzc,SAASwuB,uBAAgB,IAAAF,IAAI1K,YAAYkE,QAAQjpM,cAC1GklM,EAAmE,QAAnD0K,EAAqB,QAApBC,EAAAllB,EAAYua,gBAAQ,IAAA2K,IAAIjS,EAAMzc,SAAS2uB,kBAAW,IAAAF,IAAI7K,YAAYkE,QAAQ/D,SAC3FE,EAAmE,QAAnD2K,EAAqB,QAApBC,EAAArlB,EAAYya,gBAAQ,IAAA4K,IAAIpS,EAAMzc,SAAS8uB,kBAAW,IAAAF,IAAIhL,YAAYkE,QAAQ7D,SAC/FlnM,mBAAmB6B,UAAS,GAC5B7B,mBAAmB+B,iBAAiBD,GACpC9B,mBAAmBqC,aAAa2kM,EAAUE,GAC1C,MACD,KAAKL,YAAY0B,sBAChB,IAAIvmM,EAA4F,QAApEqmC,EAA6B,QAA5BhgC,EAAAokL,EAAYzqL,wBAAgB,IAAAqG,IAAIq3L,EAAMzc,SAAS+uB,2BAAoB,IAAA3pK,IAAIw+J,YAAYkE,QAAQ/oM,iBACpHC,EAAkG,QAAxEgwM,EAA+B,QAA9B3pK,EAAAmkJ,EAAYxqL,0BAAkB,IAAAqmC,IAAIo3J,EAAMzc,SAASivB,6BAAsB,IAAAD,IAAIpL,YAAYkE,QAAQ9oM,mBAC1HK,EAAwE,QAA1D6vM,EAAwB,QAAvBC,EAAA3lB,EAAY2a,mBAAW,IAAAgL,IAAI1S,EAAMzc,SAASovB,sBAAe,IAAAF,IAAItL,YAAYkE,QAAQ3D,YAChG7kM,EAAwE,QAA1D+vM,EAAwB,QAAvBC,EAAA9lB,EAAY4a,mBAAW,IAAAkL,IAAI7S,EAAMzc,SAASuvB,sBAAe,IAAAF,IAAIzL,YAAYkE,QAAQ1D,YAChG7kM,EAA8E,QAA9DiwM,EAA0B,QAAzBC,EAAAjmB,EAAY6a,qBAAa,IAAAoL,IAAIhT,EAAMzc,SAAS0vB,wBAAiB,IAAAF,IAAI5L,YAAYkE,QAAQzD,cACtG7kM,EAA8E,QAA9DmwM,EAA0B,QAAzBC,EAAApmB,EAAY8a,qBAAa,IAAAsL,IAAInT,EAAMzc,SAAS6vB,wBAAiB,IAAAF,IAAI/L,YAAYkE,QAAQxD,cAC1GvnM,mBAAmB6B,UAAS,GAC5B7B,mBAAmBkC,yBAAyBF,EAAkBC,GAC9DjC,mBAAmB0C,qBAAqBJ,EAAQC,EAAQC,EAAUC,G,CASrEiuM,sCAAsCH,GACrC,IAAI7Q,EAAa6Q,EAAYzyM,UAEzB6pM,EAAkBjI,EAAMzc,SAAS0tB,aACrChJ,EAAaA,WACb3nM,mBAAmBkB,aAAaymM,GAChC,IAAIF,EAAiB/H,EAAMzc,SAAS3oD,aACpCmtE,EAAYA,UAAaZ,YAAYkE,QAAQtD,aAC3BZ,YAAY4C,cAC7BzpM,mBAAmBiB,cAAa,IAEhCjB,mBAAmBiB,cAAa,GAChCjB,mBAAmBmB,aAAasmM,IAGjC,IAAIM,EAAoBrI,EAAMzc,SAAS4tB,eACvC9I,EAAeA,WAEf,IAAIF,EAAmBnI,EAAMzc,SAAStoD,cAGtC,GAFAktE,EAAcA,UAAehB,YAAYkE,QAAQlD,YACjD7nM,mBAAmBqB,eAAe0mM,GAC9BA,EAAc,CACjB,IAAI3sE,EAAiBskE,EAAMzc,SAASguB,YACpC71E,EAAYA,UAAayrE,YAAYkE,QAAQ3vE,UAC7Cp7H,mBAAmB4B,aAAaw5H,EAAUvrJ,EAAGurJ,EAAUtrJ,EAAGsrJ,EAAUtqH,EACpE,CACD,GAAI+2L,GAAehB,YAAYiB,gBAC9B9nM,mBAAmBoB,gBAAe,OAC5B,CACN,IAAIwmM,EAAkBlI,EAAMzc,SAASmuB,aACrCxJ,EAAaA,UAAcf,YAAYkE,QAAQnD,WAC/C5nM,mBAAmBoB,gBAAe,GAClCpB,mBAAmBwB,eAAeqmM,EAAaD,EAC/C,CAGD,OADiBlI,EAAMzc,SAASl8J,QAE/B,KAAK8/K,YAAYxqE,cAChBr8H,mBAAmB6B,UAAS,GAC5B,MACD,KAAKglM,YAAYyB,iBAChB,IAAIxmM,EAAqB49L,EAAMzc,SAASwuB,gBACpCzK,EAAgBtH,EAAMzc,SAAS2uB,WAC/B1K,EAAgBxH,EAAMzc,SAAS8uB,WACnCjwM,EAAgBA,UAAiB+kM,YAAYkE,QAAQjpM,cACrDklM,EAAWA,UAAYH,YAAYkE,QAAQ/D,SAC3CE,EAAWA,UAAYL,YAAYkE,QAAQ7D,SAC3ClnM,mBAAmB6B,UAAS,GAC5B7B,mBAAmB+B,iBAAiBD,GACpC9B,mBAAmBqC,aAAa2kM,EAAUE,GAC1C,MACD,KAAKL,YAAY0B,sBAChB,IAAIvmM,EAAwB09L,EAAMzc,SAAS+uB,oBACvC/vM,EAA0By9L,EAAMzc,SAASivB,sBACzC5vM,EAAco9L,EAAMzc,SAASovB,eAC7B9vM,EAAcm9L,EAAMzc,SAASuvB,eAC7BhwM,EAAgBk9L,EAAMzc,SAAS0vB,iBAC/BlwM,EAAgBi9L,EAAMzc,SAAS6vB,iBACnC9wM,EAAmBA,UAAoB6kM,YAAYkE,QAAQ/oM,iBAC3DC,EAAqBA,UAAsB4kM,YAAYkE,QAAQ9oM,mBAC/DK,EAASA,UAAUukM,YAAYkE,QAAQ3D,YACvC7kM,EAASA,UAAUskM,YAAYkE,QAAQ1D,YACvC7kM,EAAWA,UAAYqkM,YAAYkE,QAAQzD,cAC3C7kM,EAAWA,UAAYokM,YAAYkE,QAAQxD,cAC3CvnM,mBAAmB6B,UAAS,GAC5B7B,mBAAmBkC,yBAAyBF,EAAkBC,GAC9DjC,mBAAmB0C,qBAAqBJ,EAAQC,EAAQC,EAAUC,G,CASrEswM,2BAA2BxC,EAAyByC,EAAmBC,G,MAQlEC,EAPAzmB,EAAwC97M,KAAK8+N,YAAahjB,YAE1Dqa,EADayJ,EAAYzyM,UACPmlL,SAASkwB,MAM/B,OALiBxiO,KAAK8+N,YAAapjB,aAClCya,EAAuB,QAAhBzzN,EAAAo5M,EAAYqa,YAAI,IAAAzzN,IAAIyzN,GAE5BA,EAAOA,UAAQD,YAAYkE,QAAQjE,MAGlC,KAAKD,YAAYqB,UAChBloM,mBAAmB2C,aAAY,GAE9BuwM,EADGF,GAAYC,EACHzlK,WAAS4pB,MAET5pB,WAAS66J,KACtBroM,mBAAmB4C,aAAaswM,GAChC,MACD,KAAKrM,YAAYuB,WAChBpoM,mBAAmB2C,aAAY,GAE9BuwM,EADGF,GAAYC,EACHzlK,WAAS4pB,MAET5pB,WAAS66J,KACtBroM,mBAAmB4C,aAAaswM,GAChC,MACD,KAAKrM,YAAYE,UAChB/mM,mBAAmB2C,aAAY,GAE9BuwM,EADGF,GAAYC,EACHzlK,WAAS4pB,MAET5pB,WAAS66J,KACtBroM,mBAAmB4C,aAAaswM,G,CAQnCE,oBAAoBl4N,EAAerI,GAClC4H,OAAO+Y,aAAa8yI,qBAAqB31J,KAAK6+N,sBAAuB7+N,KAAK0+N,wBAAyBn0N,EAAOrI,E,uECjUxG3F,c,yNCME,cAAqBuU,gBAMvBmX,KAAK9T,G,CAUL6kG,KAAKnL,EAAoB,EAAG8mE,EAAgB,GACxC,OAAO,I,CAMPnpE,eACA,OAAO,C,CAMXvyF,U,mSCpCE,cAAoCy9L,kBAiBtCn6M,YAAYo6M,EAAwDlrJ,GAChEp5C,MAAMskM,GAZV32M,KAAS0iO,WAAW,EAGpB1iO,KAAW27K,aAAW,EAGtB37K,KAASw1N,UAAG,EAORx1N,KAAKoe,QAAUqtC,EACfzrD,KAAKw1N,UAAYx1N,KAAKk3M,YACtBl3M,KAAKk3M,YAA6C,IAAhC35M,KAAKoyE,KAAK3vE,KAAKk3M,YAAY,I,4LCZjDlgN,wBAAwB+d,EAAc4vK,GACjC/oL,OAAeX,KAAK8Z,GAAQ4vK,EAC7B,IAAI5mL,EAAcgX,EAAO,YACzBnZ,OAAa,KAAEmC,E,kMCJjB,cAA8BkX,YAIhC1Y,YAAY8L,EAAeC,EAAgBypI,EAAe78H,EAAuBS,GAAkB,EAAMyP,EAAkB7B,GAAgB,GACvIlR,MAAMhK,EAAOC,EAAQ4M,GACrBlV,KAAK0V,WAAauN,mBAAiBgC,eACnCjlB,KAAKmV,YAAcoO,EAEnBvjB,KAAK+xI,MAAQA,EAEb/xI,KAAK4V,SAAW9L,OAAOyM,eAAegP,sBAAsBvlB,KAAK0V,WAAYrN,EAAOC,EAAQ4M,EAAQS,EAAQ4N,GAAM,E,CAWtH2D,aAAa+sH,EAAmE5uH,EAA2B8C,GACvG,IAAI5B,EAAUvmB,KAAK4V,SACc9L,OAAOyM,eAChCkhI,sBAAsBlxH,EAAS0tH,EAASj0I,KAAK+xI,MAAO1sH,EAAkB8C,E,CASlFw6M,cAAc5jO,EAAyBsmB,EAA2B8C,GAC9D,IAAI5B,EAAUvmB,KAAK4V,SACc9L,OAAOyM,eAChCqhI,uBAAuBrxH,EAASxnB,EAAQiB,KAAK+xI,MAAO1sH,EAAkB8C,E,CAiBlFG,iBAAiBC,EAAiBC,EAAiBsvH,EAAiBzvI,EAAeC,EAAgBypI,EAAevsH,EAAyBiD,EAAqBC,EAAyBrD,EAA2B8C,GAChN,IAAI5B,EAAUvmB,KAAK4V,SACc9L,OAAOyM,eAChCshI,0BAA0BtxH,EAASf,EAAQiD,EAAaC,EAAgBH,EAASC,EAASsvH,EAASzvI,EAAOC,EAAQypI,EAAO1sH,EAAkB8C,E,siB3IhEvJ5rB,c,msBnNgME,SAAoB2qD,GAAuC,OAAO1vD,KAAM,E,sDqT8OnEgtN,U,aAEAC,U,WrTrOL,SAAmBv9J,GAAwD,OAAO1vD,KAAM,E,WArBxF,SAAmBorO,GACrB,OAAO,SAAUrmO,GACbxF,WAAWwnG,SAASqkI,EAASrmO,EACjC,CACJ,E,cAWgB,SAAYA,GAAqB,E"}